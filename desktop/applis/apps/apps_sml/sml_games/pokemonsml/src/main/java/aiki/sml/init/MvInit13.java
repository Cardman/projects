package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit13{
private MvInit13(){}
static MoveData m325(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("100");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m326(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)25);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("65");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return damagingMoveData_;
}
static MoveData m327(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectFullHpRate effectFullHpRate_=Instances.newEffectFullHpRate();
effectFullHpRate_.setRestoredHp("1/2");
effectFullHpRate_.setTargetChoice(TargetChoice.LANCEUR);
effectFullHpRate_.setFail("");
custListEffect_.add(effectFullHpRate_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m328(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("ROCHE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("ROCHE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("4/5");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setChRate((byte)1);
effectDamage_.setPower("100");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m329(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("19/20");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("75");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("7"));
monteCarloString_.addQuickEvent("PEUR",LgInt.newLgInt("3"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("PEUR","VAR__CIBLE_CLONE>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m330(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setChRate((byte)1);
effectDamage_.setPower("90");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return damagingMoveData_;
}
static MoveData m331(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("85");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m332(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("90");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setIgnVarEvasTargetPos(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m333(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("ACIER");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("ACIER");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("17/20");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("50");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m334(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("SOL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("SOL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectMultSufferedMovePower effectMultSufferedMovePower_=Instances.newEffectMultSufferedMovePower();
StringMap<Rate> stringMapRate_=new StringMap<Rate>(new CollCapacity(1));
stringMapRate_.addEntry("ELECTRIQUE",Rate.newRate("1/2"));
effectMultSufferedMovePower_.setMultMovePowerFctType(stringMapRate_);
effectMultSufferedMovePower_.setTargetChoice(TargetChoice.LANCEUR);
effectMultSufferedMovePower_.setFail("");
custListEffect_.add(effectMultSufferedMovePower_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m335(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("95");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("9"));
monteCarloString_.addQuickEvent("BRULURE",LgInt.newLgInt("1"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("BRULURE","cardinal(inter({VAR__CIBLE_STATUTS},{BRULURE}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{FEU}))>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return damagingMoveData_;
}
static MoveData m336(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("120-30*cardinal(inter({VAR__CLIMATS},{GRELE;TEMPETESABLE}))+100*cardinal(inter({VAR__CLIMATS},{ZENITH}))-40*cardinal(inter({VAR__CLIMATS},{ORAGE}))-20*cardinal(inter({VAR__CLIMATS},{DANSE_PLUIE}))");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m337(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("TENEBRE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("TENEBRE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("40");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectSwitchItems effectSwitchItems_=Instances.newEffectSwitchItems();
effectSwitchItems_.setMoveObject(MoveItemType.REMOVE_TARGET_OBJECT);
effectSwitchItems_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectSwitchItems_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectSwitchItems_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectSwitchItems_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m338(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("95");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("9"));
monteCarloString_.addQuickEvent("GEL",LgInt.newLgInt("1"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("GEL","cardinal(inter({VAR__CIBLE_STATUTS},{GEL}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{GLACE}))>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m339(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)30);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("SPECTRE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("SPECTRE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("20");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("7"));
monteCarloString_.addQuickEvent("PARALYSIE",LgInt.newLgInt("3"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("PARALYSIE","cardinal(inter({VAR__CIBLE_STATUTS},{PARALYSIE}))>0|VAR__CIBLE_CLONE>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return damagingMoveData_;
}
static MoveData m340(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setCounterableMove(true);
statusMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectProtectFromTypes effectProtectFromTypes_=Instances.newEffectProtectFromTypes();
stringList_=new StringList(new CollCapacity(1));
stringList_.add("SOL");
effectProtectFromTypes_.setImmuAgainstTypes(stringList_);
effectProtectFromTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectProtectFromTypes_.setFail("VAR__CIBLE_EFFET__RACINES|VAR__IMMU_TYPE_ATT_CIBLE__SOL|VAR__NB_TOUR_GLOBAL__GRAVITE>0|cardinal(inter({VAR__CIBLE_OBJET},{BALLE_FER}))=1");
custListEffect_.add(effectProtectFromTypes_);
EffectAccuracy effectAccuracy_=Instances.newEffectAccuracy();
effectAccuracy_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectAccuracy_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectAccuracy_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectAccuracy_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)21);
statusMoveData_.setStoppableMoveSolo(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return statusMoveData_;
}
static MoveData m341(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("9/10");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("140");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectDamageRate effectDamageRate_=Instances.newEffectDamageRate();
effectDamageRate_.setRateDamage(Rate.newRate("-1/2"));
effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
effectDamageRate_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectDamageRate_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectDamageRate_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m342(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("9/10");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("15");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectEndRoundSingleRelation effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> longMapRate_=new LongMap<Rate>(new CollCapacity(5));
longMapRate_.addEntry(1L,Rate.newRate("1/16"));
longMapRate_.addEntry(2L,Rate.newRate("1/16"));
longMapRate_.addEntry(3L,Rate.newRate("1/16"));
longMapRate_.addEntry(4L,Rate.newRate("1/16"));
longMapRate_.addEntry(5L,Rate.newRate("1/16"));
effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(longMapRate_);
MonteCarloNumber monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
monteCarloNumber_.addQuickEvent(Rate.newRate("3"),LgInt.newLgInt("3"));
monteCarloNumber_.addQuickEvent(Rate.newRate("2"),LgInt.newLgInt("3"));
monteCarloNumber_.addQuickEvent(Rate.newRate("4"),LgInt.newLgInt("1"));
monteCarloNumber_.addQuickEvent(Rate.newRate("5"),LgInt.newLgInt("1"));
effectEndRoundSingleRelation_.setLawForEnablingEffect(monteCarloNumber_);
effectEndRoundSingleRelation_.setFailEndRound("VAR__CIBLE_CLONE>0");
effectEndRoundSingleRelation_.setEndRoundRank(44);
effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectEndRoundSingleRelation_.setFail("VAR__CIBLE_CLONE>0");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectEndRoundSingleRelation_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m343(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.EVASINESS,(byte)1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
effectStatistic_.setEvtRate(Rate.newRate("1"));
effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
effectStatistic_.setFail("");
custListEffect_.add(effectStatistic_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m344(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectAccuracy effectAccuracy_=Instances.newEffectAccuracy();
effectAccuracy_.setTargetChoice(TargetChoice.ADJ_MULT);
effectAccuracy_.setFail("");
custListEffect_.add(effectAccuracy_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return statusMoveData_;
}
static MoveData m345(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("ACIER");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("ACIER");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("80");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)-1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
EnumMap<Statistic,String> enumMapStatisticString_=new EnumMap<Statistic,String>(new CollCapacity(1));
enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,"VAR__CIBLE_CLONE>0");
effectStatistic_.setLocalFailStatis(enumMapStatisticString_);
effectStatistic_.setEvtRate(Rate.newRate("1/10"));
effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectStatistic_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatistic_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatistic_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m346(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("INSECTE");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("INSECTE");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,(byte)2);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
effectStatistic_.setEvtRate(Rate.newRate("1"));
effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
effectStatistic_.setFail("");
custListEffect_.add(effectStatistic_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m347(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("70");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)-1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
EnumMap<Statistic,String> enumMapStatisticString_=new EnumMap<Statistic,String>(new CollCapacity(1));
enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,"VAR__CIBLE_CLONE>0");
effectStatistic_.setLocalFailStatis(enumMapStatisticString_);
effectStatistic_.setEvtRate(Rate.newRate("1/2"));
effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectStatistic_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatistic_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatistic_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m348(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)1);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("50");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectDamageRate effectDamageRate_=Instances.newEffectDamageRate();
effectDamageRate_.setRateDamage(Rate.newRate("-1/4"));
effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
effectDamageRate_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectDamageRate_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectDamageRate_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m349(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("70");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
}
