package code.scripts.pages.cards;

import code.sml.util.*;

public final class MessagesBelotePage {
    public static final String APP_BEAN = "belote_bean";
    public static final String M_BEAT_CARDS="beat_cards";
    public static final String M_BID="bid";
    public static final String M_BIDS="bids";
    public static final String M_CALC_TITLE="calc_title";
    public static final String M_DEAL="deal";
    public static final String M_DEALING="dealing";
    public static final String M_DECL="decl";
    public static final String M_DECL_PLAYER="decl_player";
    public static final String M_DETAIL="detail";
    public static final String M_END="end";
    public static final String M_END_DEF="end_def";
    public static final String M_END_ELSE="end_else";
    public static final String M_EQUALITY="equality";
    public static final String M_FAILED="failed";
    public static final String M_FIN_ATT="fin_att";
    public static final String M_FIN_DEF="fin_def";
    public static final String M_LOOSE="loose";
    public static final String M_MID="mid";
    public static final String M_NEED="need";
    public static final String M_NO="no";
    public static final String M_NONE="none";
    public static final String M_NOSLAM="noSlam";
    public static final String M_NOTHING="nothing";
    public static final String M_PARTNER="partner";
    public static final String M_RESULTS="results";
    public static final String M_RESULTS_TITLE="results_title";
    public static final String M_SCORES="scores";
    public static final String M_SLAM="slam";
    public static final String M_SUCCESSFUL="successful";
    public static final String M_SUM="sum";
    public static final String M_TAKER="taker";
    public static final String M_TAKER_TEAM="taker_team";
    public static final String M_TAKER_TITLE="taker_title";
    public static final String M_UNDER="under";
    public static final String M_WIN="win";
    public static final String M_WITHOUT_DECL_ATT="without_decl_att";
    public static final String M_WITHOUT_DECL_DEF="without_decl_def";
    public static final String M_WITH_DECL_ATT="with_decl_att";
    public static final String M_WITH_DECL_DEF="with_decl_def";
    public static final String M_WON_TRICK="won_trick";
    public static final String M_YES="yes";
    private MessagesBelotePage(){
    }
    public static TranslationsFile en(){
        TranslationsFile e_=new TranslationsFile();
        e_.add(M_BEAT_CARDS,"Mix Cards");
        e_.add(M_BID,"Bid:");
        e_.add(M_BIDS,"Allowed Bids at the beginning of the deal");
        e_.add(M_CALC_TITLE,"1 Calculation of attack team's points");
        e_.add(M_DEAL,"Deal all cards");
        e_.add(M_DEALING,"Players' repartition");
        e_.add(M_DECL,"Allowed declaring");
        e_.add(M_DECL_PLAYER,"{0}''s declaring ({1}):");
        e_.add(M_DETAIL,"Details of declaring");
        e_.add(M_END,"End of game");
        e_.add(M_END_DEF,"162 - 0, if the attack's team looses.");
        e_.add(M_END_ELSE,"If the attack's team looses, then this team keeps its own scored points.");
        e_.add(M_EQUALITY,"Equality.");
        e_.add(M_FAILED,"The bid {0} is failed of {1} points.");
        e_.add(M_FIN_ATT,"Final scored points by attack's team:");
        e_.add(M_FIN_DEF,"Final scored points by defense's team:");
        e_.add(M_LOOSE,"You loose.");
        e_.add(M_MID,"The bid {0} is neither passed nor failed.");
        e_.add(M_NEED,"Number of necessary points in order that the taker wins:");
        e_.add(M_NO,"no");
        e_.add(M_NONE,"Noone");
        e_.add(M_NOSLAM,"The attack's team has not won all tricks.");
        e_.add(M_NOTHING,"No thing");
        e_.add(M_PARTNER,"Rules of playing trumps when a partner is leading the current trick");
        e_.add(M_RESULTS,"Results");
        e_.add(M_RESULTS_TITLE,"3 Results");
        e_.add(M_SCORES,"Scores");
        e_.add(M_SLAM,"The attack's team has achieved the grand slam.");
        e_.add(M_SUCCESSFUL,"The bid {0} is passed of {1} points.");
        e_.add(M_SUM,"Sum :");
        e_.add(M_TAKER,"Taker:");
        e_.add(M_TAKER_TEAM,"Taker's partners:");
        e_.add(M_TAKER_TITLE,"2 Attack team");
        e_.add(M_UNDER,"Undertrumping a foe");
        e_.add(M_WIN,"You win.");
        e_.add(M_WITHOUT_DECL_ATT,"Scored points by attack's team without bonuses:");
        e_.add(M_WITHOUT_DECL_DEF,"Scored points by defense's team without bonuses:");
        e_.add(M_WITH_DECL_ATT,"Scored points by attack's team with bonuses:");
        e_.add(M_WITH_DECL_DEF,"Scored points by defense's team with bonuses:");
        e_.add(M_WON_TRICK,"Number of points won in the attack team's tricks:");
        e_.add(M_YES,"yes");
        return e_;
    }
    public static TranslationsFile fr(){
        TranslationsFile f_=new TranslationsFile();
        f_.add(M_BEAT_CARDS,"Battre les cartes");
        f_.add(M_BID,"Enchère:");
        f_.add(M_BIDS,"Enchères autorisées au début de la partie");
        f_.add(M_CALC_TITLE,"1 Calcul des points en attaque");
        f_.add(M_DEAL,"Distribuer toutes les cartes");
        f_.add(M_DEALING,"Répartition des joueurs");
        f_.add(M_DECL,"Annonces autorisées");
        f_.add(M_DECL_PLAYER,"Annonces de {0} ({1}):");
        f_.add(M_DETAIL,"Détails des annonces");
        f_.add(M_END,"Fin de partie");
        f_.add(M_END_DEF,"162 - 0, si l'attaque perd.");
        f_.add(M_END_ELSE,"Si l'attaque gagne, alors cette équipe garde son propre score.");
        f_.add(M_EQUALITY,"Match nul.");
        f_.add(M_FAILED,"L''enchère {0} est chutée de {1} points.");
        f_.add(M_FIN_ATT,"Score définitif de l'attaque:");
        f_.add(M_FIN_DEF,"Score définitif de la défense:");
        f_.add(M_LOOSE,"Vous perdez.");
        f_.add(M_MID,"L''enchère {0} n''est ni réussie ni chutée.");
        f_.add(M_NEED,"Nombre de points nécessaires pour que le preneur gagne:");
        f_.add(M_NO,"non");
        f_.add(M_NONE,"Aucun");
        f_.add(M_NOSLAM,"L'attaque n'a pas réussi de capot.");
        f_.add(M_NOTHING,"Rien");
        f_.add(M_PARTNER,"Règles du jeu des atouts lorsqu'un partenaire est maître du pli courant");
        f_.add(M_RESULTS,"Résultats");
        f_.add(M_RESULTS_TITLE,"3 Résultats");
        f_.add(M_SCORES,"Scores");
        f_.add(M_SLAM,"L'attaque a réussi un capot.");
        f_.add(M_SUCCESSFUL,"L''enchère {0} est réussie de {1} points.");
        f_.add(M_SUM,"Somme :");
        f_.add(M_TAKER,"Preneur:");
        f_.add(M_TAKER_TEAM,"Partenaires du preneur:");
        f_.add(M_TAKER_TITLE,"2 Attaque");
        f_.add(M_UNDER,"Sous-couper un adversaire");
        f_.add(M_WIN,"Vous gagnez.");
        f_.add(M_WITHOUT_DECL_ATT,"Points marqués par l'attaque sans les primes:");
        f_.add(M_WITHOUT_DECL_DEF,"Points marqués par la défense sans les primes:");
        f_.add(M_WITH_DECL_ATT,"Points marqués par l'attaque avec les primes:");
        f_.add(M_WITH_DECL_DEF,"Points marqués par la défense avec les primes:");
        f_.add(M_WON_TRICK,"Nombre de points gagnés dans les plis de l'attaque:");
        f_.add(M_YES,"oui");
        return f_;
    }
}