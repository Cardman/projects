package aiki.beans.abilities;

import aiki.beans.AikiBeansStd;
import aiki.beans.PokemonStandards;
import code.bean.nat.*;
import code.expressionlanguage.functionid.MethodModifier;
import code.util.CustList;
public final class AikiBeansAbilitiesStd{
    public static final String TYPE_ABILITIES_BEAN = "aiki.beans.abilities.AbilitiesBean";
    public static final String TYPE_ABILITY_BEAN = "aiki.beans.abilities.AbilityBean";
    private static final String SEARCH = "search";
    private static final String CLICK_ABILITY = "clickAbility";
    private static final String GET_TR_ABILITY = "getTrAbility";
    private static final String CLICK_INDEX = "clickIndex";
    private static final String GET_EFFECT_SENDING = "getEffectSending";
    private static final String CLICK_BREAK_PROTECTION_MOVES = "clickBreakProtectionMoves";
    private static final String GET_TR_BREAK_PROTECTION_MOVES = "getTrBreakProtectionMoves";
    private static final String IS_CHGT_TYPE_BY_WEATHER = "isChgtTypeByWeather";
    private static final String CLICK_CHGT_TYPE_BY_WEATHER_KEY = "clickChgtTypeByWeatherKey";
    private static final String GET_TR_CHGT_TYPE_BY_WEATHER_KEY = "getTrChgtTypeByWeatherKey";
    private static final String GET_TR_CHGT_TYPE_BY_WEATHER_VALUE = "getTrChgtTypeByWeatherValue";
    private static final String CLICK_IMMU_RECHARGE_ROUND_MOVES = "clickImmuRechargeRoundMoves";
    private static final String GET_TR_IMMU_RECHARGE_ROUND_MOVES = "getTrImmuRechargeRoundMoves";
    private static final String CLICK_REVERSE_POWER_TYPES_ABILITIES = "clickReversePowerTypesAbilities";
    private static final String GET_TR_REVERSE_POWER_TYPES_ABILITIES = "getTrReversePowerTypesAbilities";
    private static final String DECREASE_NEC_STEPS_HATCH_INT = "decreaseNecStepsHatchInt";
    private static final String NB_USED_PP_INT = "nbUsedPpInt";
    private static final String CLICK_IMMU_MOVE = "clickImmuMove";
    private static final String GET_TR_IMMU_MOVE = "getTrImmuMove";
    private static final String CLICK_IMMU_ALLY_FROM_MOVES = "clickImmuAllyFromMoves";
    private static final String GET_TR_IMMU_ALLY_FROM_MOVES = "getTrImmuAllyFromMoves";
    private static final String CLICK_WEATHER = "clickWeather";
    private static final String GET_TR_WEATHER = "getTrWeather";
    private static final String CLICK_IGN_ABILITY = "clickIgnAbility";
    private static final String GET_TR_IGN_ABILITY = "getTrIgnAbility";
    private static final String CLICK_IGN_FOE_TEAM_MOVE = "clickIgnFoeTeamMove";
    private static final String GET_TR_IGN_FOE_TEAM_MOVE = "getTrIgnFoeTeamMove";
    private static final String CLICK_IMMU_ABILITY = "clickImmuAbility";
    private static final String GET_TR_IMMU_ABILITY = "getTrImmuAbility";
    private static final String CLICK_IMMU_STATUS_BEGIN_ROUND = "clickImmuStatusBeginRound";
    private static final String GET_TR_IMMU_STATUS_BEGIN_ROUND = "getTrImmuStatusBeginRound";
    private static final String GET_TR_CHANGING_BOOST_TYPES_OLD = "getTrChangingBoostTypesOld";
    private static final String GET_TR_CHANGING_BOOST_TYPES_NEW = "getTrChangingBoostTypesNew";
    private static final String IS_HEAL_HP_BY_WEATHER = "isHealHpByWeather";
    private static final String CLICK_HEAL_HP_BY_WEATHER_KEY = "clickHealHpByWeatherKey";
    private static final String GET_TR_HEAL_HP_BY_WEATHER_KEY = "getTrHealHpByWeatherKey";
    private static final String IS_HEAL_HP_BY_TYPE_IF_WEATHER = "isHealHpByTypeIfWeather";
    private static final String CLICK_HEAL_HP_BY_TYPE_IF_WEATHER_KEY = "clickHealHpByTypeIfWeatherKey";
    private static final String GET_TR_HEAL_HP_BY_TYPE_IF_WEATHER_KEY = "getTrHealHpByTypeIfWeatherKey";
    private static final String GET_TR_HEAL_HP_BY_TYPE_IF_WEATHER_KEY_SEC = "getTrHealHpByTypeIfWeatherKeySec";
    private static final String GET_TR_IMMU_LOW_STAT = "getTrImmuLowStat";
    private static final String CLICK_IMMU_LOW_STAT_IF_STATUS_KEY = "clickImmuLowStatIfStatusKey";
    private static final String GET_TR_IMMU_LOW_STAT_IF_STATUS_KEY = "getTrImmuLowStatIfStatusKey";
    private static final String GET_TR_IMMU_LOW_STAT_IF_STATUS_VALUE = "getTrImmuLowStatIfStatusValue";
    private static final String GET_TR_IMMU_LOW_STATIS_TYPES = "getTrImmuLowStatisTypes";
    private static final String GET_TR_IMMU_LOW_STATIS_VALUE = "getTrImmuLowStatisValue";
    private static final String GET_TR_MAX_STATISTICS_IF_CH = "getTrMaxStatisticsIfCh";
    private static final String IS_STATUS = "isStatus";
    private static final String CLICK_SINGLE_STATUS = "clickSingleStatus";
    private static final String GET_TR_SINGLE_STATUS = "getTrSingleStatus";
    private static final String IS_MOVE_BY_WEATHER = "isMoveByWeather";
    private static final String CLICK_IMMU_MOVE_BY_WEATHER = "clickImmuMoveByWeather";
    private static final String GET_TR_IMMU_MOVE_BY_WEATHER = "getTrImmuMoveByWeather";
    private static final String GET_TR_IMMU_TYPE_BY_WEATHER = "getTrImmuTypeByWeather";
    private static final String IS_MOVE_BY_STATUS = "isMoveByStatus";
    private static final String CLICK_IMMU_STATUS_WEATHER = "clickImmuStatusWeather";
    private static final String GET_TR_IMMU_STATUS_WEATHER = "getTrImmuStatusWeather";
    private static final String CLICK_IMMU_STATUS = "clickImmuStatus";
    private static final String GET_TR_IMMU_STATUS = "getTrImmuStatus";
    private static final String GET_TR_IMMU_STATUS_TYPES = "getTrImmuStatusTypes";
    private static final String CLICK_IMMU_STATUS_TYPES = "clickImmuStatusTypes";
    private static final String GET_TR_IMMU_STATUS_VALUE = "getTrImmuStatusValue";
    private static final String CLICK_DIVIDE_STATUS_ROUND_KEY = "clickDivideStatusRoundKey";
    private static final String GET_TR_DIVIDE_STATUS_ROUND_KEY = "getTrDivideStatusRoundKey";
    private static final String CLICK_FORWARD_STATUS_KEY = "clickForwardStatusKey";
    private static final String GET_TR_FORWARD_STATUS_KEY = "getTrForwardStatusKey";
    private static final String CLICK_FORWARD_STATUS_VALUE = "clickForwardStatusValue";
    private static final String GET_TR_FORWARD_STATUS_VALUE = "getTrForwardStatusValue";
    private static final String GET_TR_BREAK_FOE_IMMUNE_KEY = "getTrBreakFoeImmuneKey";
    private static final String GET_TR_BREAK_FOE_IMMUNE_VALUE = "getTrBreakFoeImmuneValue";
    private static final String GET_TR_MULT_STAT = "getTrMultStat";
    private static final String GET_TR_MULT_STAT_IF_DAMAGE_CAT_KEY = "getTrMultStatIfDamageCatKey";
    private static final String GET_TR_MULT_STAT_IF_DAMAGE_CAT_KEY_SEC = "getTrMultStatIfDamageCatKeySec";
    private static final String GET_TR_MULT_STAT_IF_DAMGE_TYPE = "getTrMultStatIfDamgeType";
    private static final String GET_TR_MULT_STAT_IF_DAMGE_TYPE_SEC = "getTrMultStatIfDamgeTypeSec";
    private static final String GET_TR_MULT_STAT_IF_CAT_KEY = "getTrMultStatIfCatKey";
    private static final String GET_TR_MULT_STAT_IF_CAT_KEY_SEC = "getTrMultStatIfCatKeySec";
    private static final String GET_TR_MULT_STAT_IF_STATUT_RANK = "getTrMultStatIfStatutRank";
    private static final String CLICK_MULT_STAT_IF_STATUT_RANK_SEC = "clickMultStatIfStatutRankSec";
    private static final String GET_TR_MULT_STAT_IF_STATUT_RANK_SEC = "getTrMultStatIfStatutRankSec";
    private static final String GET_TR_BONUS_STAT_RANK = "getTrBonusStatRank";
    private static final String GET_TR_BOOST_STAT_RANK_END_ROUND = "getTrBoostStatRankEndRound";
    private static final String GET_TR_BOOST_STAT_RANK_PROTECTED = "getTrBoostStatRankProtected";
    private static final String GET_TR_LOW_STAT_FOE_HIT = "getTrLowStatFoeHit";
    private static final String GET_TR_MULT_STAT_IF_KO_FOE = "getTrMultStatIfKoFoe";
    private static final String GET_TR_MULT_STAT_IF_LOW_STAT = "getTrMultStatIfLowStat";
    private static final String GET_TR_MULT_STAT_ALLY = "getTrMultStatAlly";
    private static final String GET_TR_INCREASED_PRIO = "getTrIncreasedPrio";
    private static final String GET_TR_INCREASED_PRIO_TYPES = "getTrIncreasedPrioTypes";
    private static final String GET_TR_MULT_DAMAGE_FOE = "getTrMultDamageFoe";
    private static final String GET_TR_MULT_POWER_MOVES_TYPES_GLOBAL_KEY = "getTrMultPowerMovesTypesGlobalKey";
    private static final String CLICK_FAIL_STATUS = "clickFailStatus";
    private static final String GET_TR_FAIL_STATUS = "getTrFailStatus";
    private static final String CLICK_POKEMON = "clickPokemon";
    private static final String GET_TR_POKEMON = "getTrPokemon";
    private static final String TYPED_ABILITY = "typedAbility";
    private static final String SORTED_ABILITIES = "sortedAbilities";
    private static final String DISPLAY_NAME = "displayName";
    private static final String END_ROUND = "endRound";
    private static final String END_ROUND_RANK = "endRoundRank";
    private static final String REASONS_END_ROUND = "reasonsEndRound";
    private static final String MAP_VARS_FAIL_END_ROUND = "mapVarsFailEndRound";
    private static final String SENDING = "sending";
    private static final String EFFECT_SEND_BEAN = "effectSendBean";
    private static final String ACHIEVED_DISAPPEARED_PK = "achievedDisappearedPk";
    private static final String BREAK_PROTECTION = "breakProtection";
    private static final String BREAK_PROTECTION_MOVES = "breakProtectionMoves";
    private static final String CANCEL_SEC_EFFECT_OTHER = "cancelSecEffectOther";
    private static final String CANCEL_SEC_EFFECT_OWNER = "cancelSecEffectOwner";
    private static final String CHGT_TYPE_BY_DAMAGE = "chgtTypeByDamage";
    private static final String CHGT_TYPE_BY_WEATHER = "chgtTypeByWeather";
    private static final String COPY_MOVES_TYPES = "copyMovesTypes";
    private static final String FORBID_USE_BERRY_AGAINST_FOES = "forbidUseBerryAgainstFoes";
    private static final String GIVE_ITEM_TO_ALLY_HAVING_USED = "giveItemToAllyHavingUsed";
    private static final String HEALED_STATUS_BY_SWITCH = "healedStatusBySwitch";
    private static final String IGN_FOE_STATIS_BOOST = "ignFoeStatisBoost";
    private static final String IMMU_CH = "immuCh";
    private static final String IMMU_DAMAGE_ALLY_MOVES = "immuDamageAllyMoves";
    private static final String IMMU_DAMAGE_RECOIL = "immuDamageRecoil";
    private static final String IMMU_DAMAGE_TRAPPING_MOVES = "immuDamageTrappingMoves";
    private static final String IMMU_RECHARGE_ROUND = "immuRechargeRound";
    private static final String IMMU_RECHARGE_ROUND_MOVES = "immuRechargeRoundMoves";
    private static final String IMMU_SUFFERED_DAMAGE_LOW_EFF = "immuSufferedDamageLowEff";
    private static final String INFLICTING_DAMAGE_INSTEAD_OF_SUFFERING = "inflictingDamageInsteadOfSuffering";
    private static final String MUMY = "mumy";
    private static final String NB_HITS = "nbHits";
    private static final String PLATE = "plate";
    private static final String REVERSE_EFFECTS_POWER_MOVES_TYPES_GLOBAL = "reverseEffectsPowerMovesTypesGlobal";
    private static final String REVERSE_EFFECTS_POWER_MOVES_TYPES_GLOBAL_ABILITIES = "reverseEffectsPowerMovesTypesGlobalAbilities";
    private static final String SLOWING = "slowing";
    private static final String TAKE_ITEM_BY_DAMAGING_MOVE = "takeItemByDamagingMove";
    private static final String HEAL_HP_WHILE_USING_BERRY = "healHpWhileUsingBerry";
    private static final String MAX_HP_FOR_USING_BERRY = "maxHpForUsingBerry";
    private static final String MULT_ALLY_DAMAGE = "multAllyDamage";
    private static final String MULT_DAMAGE_CH = "multDamageCh";
    private static final String MULT_EVT_RATE_CH = "multEvtRateCh";
    private static final String MULT_EVT_RATE_SEC_EFFECT_OWNER = "multEvtRateSecEffectOwner";
    private static final String MULT_STAB = "multStab";
    private static final String MULT_SUFFERED_DAMAGE_SUPER_EFF = "multSufferedDamageSuperEff";
    private static final String MULT_VAR_BOOST = "multVarBoost";
    private static final String RECOIL_DAMAGE_FOE = "recoilDamageFoe";
    private static final String RECOIL_DAMAGE_FOE_BY_KO_OWNER = "recoilDamageFoeByKoOwner";
    private static final String DECREASE_NEC_STEPS_HATCH = "decreaseNecStepsHatch";
    private static final String NB_USED_PP = "nbUsedPp";
    private static final String IMMU_MOVE = "immuMove";
    private static final String IMMU_ALLY_FROM_MOVES = "immuAllyFromMoves";
    private static final String IMMU_WEATHER = "immuWeather";
    private static final String IGN_ABILITY = "ignAbility";
    private static final String IGN_FOE_TEAM_MOVE = "ignFoeTeamMove";
    private static final String IMMU_ABILITY = "immuAbility";
    private static final String IMMU_STATUS_BEGIN_ROUND = "immuStatusBeginRound";
    private static final String TYPE_FOR_MOVES = "typeForMoves";
    private static final String CHANGING_BOOST_TYPES = "changingBoostTypes";
    private static final String MULT_POWER = "multPower";
    private static final String MULT_DAMAGE = "multDamage";
    private static final String HEAL_HP_BY_WEATHER = "healHpByWeather";
    private static final String HEAL_HP_BY_TYPE_IF_WEATHER = "healHpByTypeIfWeather";
    private static final String IMMU_LOW_STAT = "immuLowStat";
    private static final String IMMU_LOW_STAT_IF_STATUS = "immuLowStatIfStatus";
    private static final String IMMU_LOW_STATIS_TYPES = "immuLowStatisTypes";
    private static final String MAX_STATISTICS_IF_CH = "maxStatisticsIfCh";
    private static final String SINGLE_STATUS = "singleStatus";
    private static final String IMMU_MOVE_TYPES_BY_WEATHER = "immuMoveTypesByWeather";
    private static final String IMMU_STATUS = "immuStatus";
    private static final String IMMU_STATUS_TYPES = "immuStatusTypes";
    private static final String DIVIDE_STATUS_ROUND = "divideStatusRound";
    private static final String FORWARD_STATUS = "forwardStatus";
    private static final String BREAK_FOE_IMMUNE = "breakFoeImmune";
    private static final String DEF_EFF = "defEff";
    private static final String MULT_STAT = "multStat";
    private static final String MULT_STAT_IF_DAMAGE_CAT = "multStatIfDamageCat";
    private static final String MULT_STAT_IF_DAMGE_TYPE = "multStatIfDamgeType";
    private static final String MULT_STAT_IF_CAT = "multStatIfCat";
    private static final String MULT_STAT_IF_STATUT_RANK = "multStatIfStatutRank";
    private static final String BONUS_STAT_RANK = "bonusStatRank";
    private static final String BOOST_STAT_RANK_END_ROUND = "boostStatRankEndRound";
    private static final String BOOST_STAT_RANK_PROTECTED = "boostStatRankProtected";
    private static final String LOW_STAT_FOE_HIT = "lowStatFoeHit";
    private static final String MULT_STAT_IF_KO_FOE = "multStatIfKoFoe";
    private static final String MULT_STAT_IF_LOW_STAT = "multStatIfLowStat";
    private static final String MULT_STAT_ALLY = "multStatAlly";
    private static final String INCREASED_PRIO = "increasedPrio";
    private static final String INCREASED_PRIO_TYPES = "increasedPrioTypes";
    private static final String MULT_DAMAGE_FOE = "multDamageFoe";
    private static final String MULT_POWER_MOVES_TYPES_GLOBAL = "multPowerMovesTypesGlobal";
    private static final String FAIL_STATUS = "failStatus";
    private static final String MAP_VARS = "mapVars";
    private static final String HEALED_HP_RATE_BY_SWITCH = "healedHpRateBySwitch";
    private static final String POKEMON = "pokemon";
    private AikiBeansAbilitiesStd(){}
    public static void build(PokemonStandards _std) {
        buildAbilitiesBean(_std);
        buildAbilityBean(_std);
    }
    private static void buildAbilitiesBean(PokemonStandards _std){
        CustList<StandardField> fields_=new CustList<StandardField>();
        CustList<SpecNatMethod> methods_=new CustList<SpecNatMethod>();
        SpecialNatClass type_ = new SpecialNatClass(TYPE_ABILITIES_BEAN, fields_, methods_, AikiBeansStd.TYPE_COMMON_BEAN);
        fields_.add(new StandardField(TYPED_ABILITY,BeanNatCommonLgNames.STRING,false,false,new AbilitiesBeanTypedAbilityGet(),new AbilitiesBeanTypedAbilitySet()));
        fields_.add(new StandardField(SORTED_ABILITIES, BeanNatLgNames.TYPE_LIST,false,false,new AbilitiesBeanSortedAbilitiesGet(),null));
        methods_.add( new SpecNatMethod(SEARCH,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilitiesBeanSearch()));
        methods_.add( new SpecNatMethod(CLICK_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilitiesBeanClickAbility()));
        methods_.add( new SpecNatMethod(GET_TR_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilitiesBeanGetTrAbility()));
        _std.getStds().addEntry(TYPE_ABILITIES_BEAN, type_);
    }
    private static void buildAbilityBean(PokemonStandards _std){
        CustList<StandardField> fields_=new CustList<StandardField>();
        CustList<SpecNatMethod> methods_=new CustList<SpecNatMethod>();
        SpecialNatClass type_ = new SpecialNatClass(TYPE_ABILITY_BEAN, fields_, methods_, AikiBeansStd.TYPE_COMMON_BEAN);
        fields_.add(new StandardField(DISPLAY_NAME,BeanNatCommonLgNames.STRING,false,false,new AbilityBeanDisplayNameGet(),null));
        fields_.add(new StandardField(END_ROUND,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanEndRoundGet(),null));
        fields_.add(new StandardField(END_ROUND_RANK, BeanNatCommonLgNames.PRIM_INTEGER,false,false,new AbilityBeanEndRoundRankGet(),null));
        fields_.add(new StandardField(REASONS_END_ROUND, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanReasonsEndRoundGet(),null));
        fields_.add(new StandardField(MAP_VARS_FAIL_END_ROUND, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMapVarsFailEndRoundGet(),null));
        fields_.add(new StandardField(SENDING,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanSendingGet(),null));
        fields_.add(new StandardField(EFFECT_SEND_BEAN,BeanNatCommonLgNames.STRING,false,false,new AbilityBeanEffectSendBeanGet(),null));
        fields_.add(new StandardField(ACHIEVED_DISAPPEARED_PK,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanAchievedDisappearedPkGet(),null));
        fields_.add(new StandardField(BREAK_PROTECTION,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanBreakProtectionGet(),null));
        fields_.add(new StandardField(BREAK_PROTECTION_MOVES, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanBreakProtectionMovesGet(),null));
        fields_.add(new StandardField(CANCEL_SEC_EFFECT_OTHER,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanCancelSecEffectOtherGet(),null));
        fields_.add(new StandardField(CANCEL_SEC_EFFECT_OWNER,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanCancelSecEffectOwnerGet(),null));
        fields_.add(new StandardField(CHGT_TYPE_BY_DAMAGE,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanChgtTypeByDamageGet(),null));
        fields_.add(new StandardField(CHGT_TYPE_BY_WEATHER, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanChgtTypeByWeatherGet(),null));
        fields_.add(new StandardField(COPY_MOVES_TYPES,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanCopyMovesTypesGet(),null));
        fields_.add(new StandardField(FORBID_USE_BERRY_AGAINST_FOES,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanForbidUseBerryAgainstFoesGet(),null));
        fields_.add(new StandardField(GIVE_ITEM_TO_ALLY_HAVING_USED,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanGiveItemToAllyHavingUsedGet(),null));
        fields_.add(new StandardField(HEALED_STATUS_BY_SWITCH,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanHealedStatusBySwitchGet(),null));
        fields_.add(new StandardField(IGN_FOE_STATIS_BOOST,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanIgnFoeStatisBoostGet(),null));
        fields_.add(new StandardField(IMMU_CH,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuChGet(),null));
        fields_.add(new StandardField(IMMU_DAMAGE_ALLY_MOVES,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuDamageAllyMovesGet(),null));
        fields_.add(new StandardField(IMMU_DAMAGE_RECOIL,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuDamageRecoilGet(),null));
        fields_.add(new StandardField(IMMU_DAMAGE_TRAPPING_MOVES,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuDamageTrappingMovesGet(),null));
        fields_.add(new StandardField(IMMU_RECHARGE_ROUND,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuRechargeRoundGet(),null));
        fields_.add(new StandardField(IMMU_RECHARGE_ROUND_MOVES, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuRechargeRoundMovesGet(),null));
        fields_.add(new StandardField(IMMU_SUFFERED_DAMAGE_LOW_EFF,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanImmuSufferedDamageLowEffGet(),null));
        fields_.add(new StandardField(INFLICTING_DAMAGE_INSTEAD_OF_SUFFERING,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanInflictingDamageInsteadOfSufferingGet(),null));
        fields_.add(new StandardField(MUMY,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanMumyGet(),null));
        fields_.add(new StandardField(NB_HITS,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanNbHitsGet(),null));
        fields_.add(new StandardField(PLATE,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanPlateGet(),null));
        fields_.add(new StandardField(REVERSE_EFFECTS_POWER_MOVES_TYPES_GLOBAL,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanReverseEffectsPowerMovesTypesGlobalGet(),null));
        fields_.add(new StandardField(REVERSE_EFFECTS_POWER_MOVES_TYPES_GLOBAL_ABILITIES, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanReverseEffectsPowerMovesTypesGlobalAbilitiesGet(),null));
        fields_.add(new StandardField(SLOWING,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanSlowingGet(),null));
        fields_.add(new StandardField(TAKE_ITEM_BY_DAMAGING_MOVE,BeanNatCommonLgNames.PRIM_BOOLEAN,false,false,new AbilityBeanTakeItemByDamagingMoveGet(),null));
        fields_.add(new StandardField(HEAL_HP_WHILE_USING_BERRY,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanHealHpWhileUsingBerryGet(),null));
        fields_.add(new StandardField(MAX_HP_FOR_USING_BERRY,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMaxHpForUsingBerryGet(),null));
        fields_.add(new StandardField(MULT_ALLY_DAMAGE,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultAllyDamageGet(),null));
        fields_.add(new StandardField(MULT_DAMAGE_CH,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultDamageChGet(),null));
        fields_.add(new StandardField(MULT_EVT_RATE_CH,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultEvtRateChGet(),null));
        fields_.add(new StandardField(MULT_EVT_RATE_SEC_EFFECT_OWNER,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultEvtRateSecEffectOwnerGet(),null));
        fields_.add(new StandardField(MULT_STAB,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultStabGet(),null));
        fields_.add(new StandardField(MULT_SUFFERED_DAMAGE_SUPER_EFF,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultSufferedDamageSuperEffGet(),null));
        fields_.add(new StandardField(MULT_VAR_BOOST,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanMultVarBoostGet(),null));
        fields_.add(new StandardField(RECOIL_DAMAGE_FOE,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanRecoilDamageFoeGet(),null));
        fields_.add(new StandardField(RECOIL_DAMAGE_FOE_BY_KO_OWNER,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanRecoilDamageFoeByKoOwnerGet(),null));
        fields_.add(new StandardField(DECREASE_NEC_STEPS_HATCH, BeanNatCommonLgNames.PRIM_INTEGER,false,false,new AbilityBeanDecreaseNecStepsHatchGet(),null));
        fields_.add(new StandardField(NB_USED_PP, BeanNatCommonLgNames.PRIM_INTEGER,false,false,new AbilityBeanNbUsedPpGet(),null));
        fields_.add(new StandardField(IMMU_MOVE, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuMoveGet(),null));
        fields_.add(new StandardField(IMMU_ALLY_FROM_MOVES, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuAllyFromMovesGet(),null));
        fields_.add(new StandardField(IMMU_WEATHER, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuWeatherGet(),null));
        fields_.add(new StandardField(IGN_ABILITY, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanIgnAbilityGet(),null));
        fields_.add(new StandardField(IGN_FOE_TEAM_MOVE, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanIgnFoeTeamMoveGet(),null));
        fields_.add(new StandardField(IMMU_ABILITY, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuAbilityGet(),null));
        fields_.add(new StandardField(IMMU_STATUS_BEGIN_ROUND, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuStatusBeginRoundGet(),null));
        fields_.add(new StandardField(TYPE_FOR_MOVES,BeanNatCommonLgNames.STRING,false,false,new AbilityBeanTypeForMovesGet(),null));
        fields_.add(new StandardField(CHANGING_BOOST_TYPES, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanChangingBoostTypesGet(),null));
        fields_.add(new StandardField(MULT_POWER,BeanNatCommonLgNames.STRING,false,false,new AbilityBeanMultPowerGet(),null));
        fields_.add(new StandardField(MULT_DAMAGE,BeanNatCommonLgNames.STRING,false,false,new AbilityBeanMultDamageGet(),null));
        fields_.add(new StandardField(HEAL_HP_BY_WEATHER, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanHealHpByWeatherGet(),null));
        fields_.add(new StandardField(HEAL_HP_BY_TYPE_IF_WEATHER, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanHealHpByTypeIfWeatherGet(),null));
        fields_.add(new StandardField(IMMU_LOW_STAT, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuLowStatGet(),null));
        fields_.add(new StandardField(IMMU_LOW_STAT_IF_STATUS, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanImmuLowStatIfStatusGet(),null));
        fields_.add(new StandardField(IMMU_LOW_STATIS_TYPES, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanImmuLowStatisTypesGet(),null));
        fields_.add(new StandardField(MAX_STATISTICS_IF_CH, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanMaxStatisticsIfChGet(),null));
        fields_.add(new StandardField(SINGLE_STATUS, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanSingleStatusGet(),null));
        fields_.add(new StandardField(IMMU_MOVE_TYPES_BY_WEATHER, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanImmuMoveTypesByWeatherGet(),null));
        fields_.add(new StandardField(IMMU_STATUS, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanImmuStatusGet(),null));
        fields_.add(new StandardField(IMMU_STATUS_TYPES, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanImmuStatusTypesGet(),null));
        fields_.add(new StandardField(DIVIDE_STATUS_ROUND, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanDivideStatusRoundGet(),null));
        fields_.add(new StandardField(FORWARD_STATUS, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanForwardStatusGet(),null));
        fields_.add(new StandardField(BREAK_FOE_IMMUNE, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanBreakFoeImmuneGet(),null));
        fields_.add(new StandardField(DEF_EFF,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanDefEffGet(),null));
        fields_.add(new StandardField(MULT_STAT, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_DAMAGE_CAT, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfDamageCatGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_DAMGE_TYPE, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfDamgeTypeGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_CAT, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfCatGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_STATUT_RANK, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfStatutRankGet(),null));
        fields_.add(new StandardField(BONUS_STAT_RANK, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanBonusStatRankGet(),null));
        fields_.add(new StandardField(BOOST_STAT_RANK_END_ROUND, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanBoostStatRankEndRoundGet(),null));
        fields_.add(new StandardField(BOOST_STAT_RANK_PROTECTED, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanBoostStatRankProtectedGet(),null));
        fields_.add(new StandardField(LOW_STAT_FOE_HIT, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanLowStatFoeHitGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_KO_FOE, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfKoFoeGet(),null));
        fields_.add(new StandardField(MULT_STAT_IF_LOW_STAT, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatIfLowStatGet(),null));
        fields_.add(new StandardField(MULT_STAT_ALLY, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultStatAllyGet(),null));
        fields_.add(new StandardField(INCREASED_PRIO, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanIncreasedPrioGet(),null));
        fields_.add(new StandardField(INCREASED_PRIO_TYPES, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanIncreasedPrioTypesGet(),null));
        fields_.add(new StandardField(MULT_DAMAGE_FOE, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultDamageFoeGet(),null));
        fields_.add(new StandardField(MULT_POWER_MOVES_TYPES_GLOBAL, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMultPowerMovesTypesGlobalGet(),null));
        fields_.add(new StandardField(FAIL_STATUS, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanFailStatusGet(),null));
        fields_.add(new StandardField(MAP_VARS, BeanNatLgNames.TYPE_MAP,false,false,new AbilityBeanMapVarsGet(),null));
        fields_.add(new StandardField(HEALED_HP_RATE_BY_SWITCH,PokemonStandards.TYPE_RATE,false,false,new AbilityBeanHealedHpRateBySwitchGet(),null));
        fields_.add(new StandardField(POKEMON, BeanNatLgNames.TYPE_LIST,false,false,new AbilityBeanPokemonGet(),null));
        methods_.add( new SpecNatMethod(CLICK_INDEX,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickIndex()));
        methods_.add( new SpecNatMethod(GET_EFFECT_SENDING,PokemonStandards.TYPE_EFFECT_WHILE_SENDING, false, MethodModifier.NORMAL,new AbilityBeanGetEffectSending()));
        methods_.add( new SpecNatMethod(CLICK_BREAK_PROTECTION_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickBreakProtectionMoves()));
        methods_.add( new SpecNatMethod(GET_TR_BREAK_PROTECTION_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBreakProtectionMoves()));
        methods_.add( new SpecNatMethod(IS_CHGT_TYPE_BY_WEATHER,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsChgtTypeByWeather()));
        methods_.add( new SpecNatMethod(CLICK_CHGT_TYPE_BY_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickChgtTypeByWeatherKey()));
        methods_.add( new SpecNatMethod(GET_TR_CHGT_TYPE_BY_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrChgtTypeByWeatherKey()));
        methods_.add( new SpecNatMethod(GET_TR_CHGT_TYPE_BY_WEATHER_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrChgtTypeByWeatherValue()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_RECHARGE_ROUND_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuRechargeRoundMoves()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_RECHARGE_ROUND_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuRechargeRoundMoves()));
        methods_.add( new SpecNatMethod(CLICK_REVERSE_POWER_TYPES_ABILITIES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickReversePowerTypesAbilities()));
        methods_.add( new SpecNatMethod(GET_TR_REVERSE_POWER_TYPES_ABILITIES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrReversePowerTypesAbilities()));
        methods_.add( new SpecNatMethod(DECREASE_NEC_STEPS_HATCH_INT,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanDecreaseNecStepsHatchInt()));
        methods_.add( new SpecNatMethod(NB_USED_PP_INT,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanNbUsedPpInt()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_MOVE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuMove()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_MOVE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuMove()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_ALLY_FROM_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuAllyFromMoves()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_ALLY_FROM_MOVES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuAllyFromMoves()));
        methods_.add( new SpecNatMethod(CLICK_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickWeather()));
        methods_.add( new SpecNatMethod(GET_TR_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrWeather()));
        methods_.add( new SpecNatMethod(CLICK_IGN_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickIgnAbility()));
        methods_.add( new SpecNatMethod(GET_TR_IGN_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrIgnAbility()));
        methods_.add( new SpecNatMethod(CLICK_IGN_FOE_TEAM_MOVE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickIgnFoeTeamMove()));
        methods_.add( new SpecNatMethod(GET_TR_IGN_FOE_TEAM_MOVE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrIgnFoeTeamMove()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuAbility()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_ABILITY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuAbility()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_STATUS_BEGIN_ROUND,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuStatusBeginRound()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_STATUS_BEGIN_ROUND,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuStatusBeginRound()));
        methods_.add( new SpecNatMethod(GET_TR_CHANGING_BOOST_TYPES_OLD,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrChangingBoostTypesOld()));
        methods_.add( new SpecNatMethod(GET_TR_CHANGING_BOOST_TYPES_NEW,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrChangingBoostTypesNew()));
        methods_.add( new SpecNatMethod(IS_HEAL_HP_BY_WEATHER,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsHealHpByWeather()));
        methods_.add( new SpecNatMethod(CLICK_HEAL_HP_BY_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickHealHpByWeatherKey()));
        methods_.add( new SpecNatMethod(GET_TR_HEAL_HP_BY_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrHealHpByWeatherKey()));
        methods_.add( new SpecNatMethod(IS_HEAL_HP_BY_TYPE_IF_WEATHER,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsHealHpByTypeIfWeather()));
        methods_.add( new SpecNatMethod(CLICK_HEAL_HP_BY_TYPE_IF_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickHealHpByTypeIfWeatherKey()));
        methods_.add( new SpecNatMethod(GET_TR_HEAL_HP_BY_TYPE_IF_WEATHER_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrHealHpByTypeIfWeatherKey()));
        methods_.add( new SpecNatMethod(GET_TR_HEAL_HP_BY_TYPE_IF_WEATHER_KEY_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrHealHpByTypeIfWeatherKeySec()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_LOW_STAT,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuLowStat()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_LOW_STAT_IF_STATUS_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuLowStatIfStatusKey()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_LOW_STAT_IF_STATUS_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuLowStatIfStatusKey()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_LOW_STAT_IF_STATUS_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuLowStatIfStatusValue()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_LOW_STATIS_TYPES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuLowStatisTypes()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_LOW_STATIS_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuLowStatisValue()));
        methods_.add( new SpecNatMethod(GET_TR_MAX_STATISTICS_IF_CH,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMaxStatisticsIfCh()));
        methods_.add( new SpecNatMethod(IS_STATUS,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsStatus()));
        methods_.add( new SpecNatMethod(CLICK_SINGLE_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickSingleStatus()));
        methods_.add( new SpecNatMethod(GET_TR_SINGLE_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrSingleStatus()));
        methods_.add( new SpecNatMethod(IS_MOVE_BY_WEATHER,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsMoveByWeather()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_MOVE_BY_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuMoveByWeather()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_MOVE_BY_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuMoveByWeather()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_TYPE_BY_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuTypeByWeather()));
        methods_.add( new SpecNatMethod(IS_MOVE_BY_STATUS,BeanNatCommonLgNames.PRIM_BOOLEAN, false, MethodModifier.NORMAL,new AbilityBeanIsMoveByStatus()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_STATUS_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuStatusWeather()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_STATUS_WEATHER,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuStatusWeather()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuStatus()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuStatus()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_STATUS_TYPES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuStatusTypes()));
        methods_.add( new SpecNatMethod(CLICK_IMMU_STATUS_TYPES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickImmuStatusTypes()));
        methods_.add( new SpecNatMethod(GET_TR_IMMU_STATUS_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrImmuStatusValue()));
        methods_.add( new SpecNatMethod(CLICK_DIVIDE_STATUS_ROUND_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickDivideStatusRoundKey()));
        methods_.add( new SpecNatMethod(GET_TR_DIVIDE_STATUS_ROUND_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrDivideStatusRoundKey()));
        methods_.add( new SpecNatMethod(CLICK_FORWARD_STATUS_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickForwardStatusKey()));
        methods_.add( new SpecNatMethod(GET_TR_FORWARD_STATUS_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrForwardStatusKey()));
        methods_.add( new SpecNatMethod(CLICK_FORWARD_STATUS_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickForwardStatusValue()));
        methods_.add( new SpecNatMethod(GET_TR_FORWARD_STATUS_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrForwardStatusValue()));
        methods_.add( new SpecNatMethod(GET_TR_BREAK_FOE_IMMUNE_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBreakFoeImmuneKey()));
        methods_.add( new SpecNatMethod(GET_TR_BREAK_FOE_IMMUNE_VALUE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBreakFoeImmuneValue()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStat()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_DAMAGE_CAT_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfDamageCatKey()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_DAMAGE_CAT_KEY_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfDamageCatKeySec()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_DAMGE_TYPE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfDamgeType()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_DAMGE_TYPE_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfDamgeTypeSec()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_CAT_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfCatKey()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_CAT_KEY_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfCatKeySec()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_STATUT_RANK,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfStatutRank()));
        methods_.add( new SpecNatMethod(CLICK_MULT_STAT_IF_STATUT_RANK_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickMultStatIfStatutRankSec()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_STATUT_RANK_SEC,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfStatutRankSec()));
        methods_.add( new SpecNatMethod(GET_TR_BONUS_STAT_RANK,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBonusStatRank()));
        methods_.add( new SpecNatMethod(GET_TR_BOOST_STAT_RANK_END_ROUND,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBoostStatRankEndRound()));
        methods_.add( new SpecNatMethod(GET_TR_BOOST_STAT_RANK_PROTECTED,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrBoostStatRankProtected()));
        methods_.add( new SpecNatMethod(GET_TR_LOW_STAT_FOE_HIT,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrLowStatFoeHit()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_KO_FOE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfKoFoe()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_IF_LOW_STAT,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatIfLowStat()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_STAT_ALLY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultStatAlly()));
        methods_.add( new SpecNatMethod(GET_TR_INCREASED_PRIO,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrIncreasedPrio()));
        methods_.add( new SpecNatMethod(GET_TR_INCREASED_PRIO_TYPES,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrIncreasedPrioTypes()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_DAMAGE_FOE,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultDamageFoe()));
        methods_.add( new SpecNatMethod(GET_TR_MULT_POWER_MOVES_TYPES_GLOBAL_KEY,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrMultPowerMovesTypesGlobalKey()));
        methods_.add( new SpecNatMethod(CLICK_FAIL_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickFailStatus()));
        methods_.add( new SpecNatMethod(GET_TR_FAIL_STATUS,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrFailStatus()));
        methods_.add( new SpecNatMethod(CLICK_POKEMON,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanClickPokemon()));
        methods_.add( new SpecNatMethod(GET_TR_POKEMON,BeanNatCommonLgNames.STRING, false, MethodModifier.NORMAL,new AbilityBeanGetTrPokemon()));
        _std.getStds().addEntry(TYPE_ABILITY_BEAN, type_);
    }
}
