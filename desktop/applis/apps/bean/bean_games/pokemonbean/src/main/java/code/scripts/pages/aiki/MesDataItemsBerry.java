package code.scripts.pages.aiki;
final class MesDataItemsBerry{
private static final String C_P_17_0="The berry is enabled while the owner suffers damage from a move directly used by a fighter.\n";
private static final String C_P_17_10="In function of the current rate of full rate of the owner, les levels of statistics of the owner vary by the following kind:\n";
private static final String C_P_17_11="Statistic\n";
private static final String C_P_17_12="Rate of full life\n";
private static final String C_P_17_13="Variation of level\n";
private static final String C_P_17_14="The berry is enabled while the owner uses a move.\n";
private static final String C_P_17_15="If the owner of the berry is going to fail using a move, then the owner successes the move.\n";
private static final String C_P_17_16="The berry is enabled at the end of the round of the owner.\n";
private static final String C_P_17_17="If the owner of the berry has one of its moves without PP, then {0} PP are restored fot this move.\n";
private static final String C_P_17_18="The berry is enabled at the end of the round of the owner.\n";
private static final String C_P_17_19="If the rate of full life of the owner of the berry is at most {0}, then {1} hp are restored.The player can use a such berry never mind the remaining health points strictly lower at the maximum, in this case the pokemon is healed by {1} health points.\n";
private static final String C_P_17_1="If the owner of the berry is targetted by a super effective move and can use a berry, then the rate of full life restoring the owner is {0}, the berry is not used if the owner had all its hp.\n";
private static final String C_P_17_20="The player can use a such berry never mind the remaining health points strictly lower at the maximum, in this case the pokemon is healed by {1} health points.\n";
private static final String C_P_17_21="The berry is enabled while the owner is targetted by an adding of status.\n";
private static final String C_P_17_22="The following status of the owner are deleted:\n";
private static final String C_P_17_23="The berry is enabled at the end of the round of the owner.\n";
private static final String C_P_17_24="If the current rate of full life of the owner of the berry is lower or equals to {0}, then the rate of full restored life is {1}.The player can use a such berry never mind the remaining health points strictly lower at the maximum, in this case the pokemon is healed by {1} of its full life.\n";
private static final String C_P_17_25="The player can use a such berry never mind the remaining health points strictly lower at the maximum, in this case the pokemon is healed by {1} of its full life.\n";
private static final String C_P_17_26="The berry is enabled while the owner suffers damage from a move directly used by a fighter.\n";
private static final String C_P_17_27="If the owner suffers from a move with the category {0}, then its statistics vary by the following kind:\n";
private static final String C_P_17_28="Statistic\n";
private static final String C_P_17_29="Boost\n";
private static final String C_P_17_2="The berry is enabled at the moment of sorting the users by order of using.\n";
private static final String C_P_17_30="The berry is enabled while the owner suffers damage from a move directly used by a fighter.\n";
private static final String C_P_17_31="While the owner suffers damage from a move, the recoil damage inflicted against the user vary by the category of the move:\n";
private static final String C_P_17_32="Category of the suffered move\n";
private static final String C_P_17_33="Rate of lost life by the user\n";
private static final String C_P_17_34="La baie est activée lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\n";
private static final String C_P_17_35="Si le porteur de la baie est touché par une attaque super efficace et peut utiliser une baie, alors le taux de vie totale récupérée du porteur vaut {0}, la baie n''est pas utilisée si le porteur avait tous ses pv.\n";
private static final String C_P_17_36="La baie est activée au moment de classer les lanceurs par ordre de lancer.\n";
private static final String C_P_17_37="Si le porteur de la baie est censé attaquer après un pokémon ne portant la baie, alors le porteur de la baie attaque d''abord.\n";
private static final String C_P_17_38="La baie est activée lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\n";
private static final String C_P_17_39="Lorsque le porteur est touché par une attaque de type super efficace sur lui ou de type non efficace de base, le coefficient des dégâts infligés varie en fonction du type de l''attaque subie:\n";
private static final String C_P_17_3="If the owner of the berry has to use a move after a pokemon not having a berry, then the owner of the berry uses first a move.\n";
private static final String C_P_17_40="Type de l''attaque\n";
private static final String C_P_17_41="Efficacité de l''attaque\n";
private static final String C_P_17_42="Coefficient\n";
private static final String C_P_17_43="La baie est activée en fin de tour du possesseur.\n";
private static final String C_P_17_44="En fonction du taux de vie totale actuelle du porteur, les crans des statistiques du porteur varient de la façon suivante:\n";
private static final String C_P_17_45="Statistique\n";
private static final String C_P_17_46="Taux de vie maximal\n";
private static final String C_P_17_47="Variation du cran\n";
private static final String C_P_17_48="La baie est activée lorsque le possesseur attaque.\n";
private static final String C_P_17_49="Si le porteur de la baie vient à échouer une attaque, alors il la réussit.\n";
private static final String C_P_17_4="The berry is enabled while the owner suffers damage from a move directly used by a fighter.\n";
private static final String C_P_17_50="La baie est activée en fin de tour du possesseur.\n";
private static final String C_P_17_51="Si le porteur de la baie a une de ses attaques sans PP, alors {0} PP sont restaurés pour cette attaque.\n";
private static final String C_P_17_52="La baie est activée en fin de tour du possesseur.\n";
private static final String C_P_17_53="Si le taux de vie totale du porteur de la baie est de au plus {0}, alors {1} pv sont restaurés.Le joueur peut utiliser une telle baie peu importe les points de vie restants strictement inférieurs au maximum, dans ce cas le pokemon est soigné de {1} points de vie.\n";
private static final String C_P_17_54="Le joueur peut utiliser une telle baie peu importe les points de vie restants strictement inférieurs au maximum, dans ce cas le pokemon est soigné de {1} points de vie.\n";
private static final String C_P_17_55="La baie est activée lorsque le possesseur est visé par une altération de statut.\n";
private static final String C_P_17_56="Les statuts suivants du porteur sont guéris:\n";
private static final String C_P_17_57="La baie est activée en fin de tour du possesseur.\n";
private static final String C_P_17_58="Si le taux de vie totale actuelle du porteur de la baie est de au plus {0}, alors le taux de vie totale récupérée vaut {1}.Le joueur peut utiliser une telle baie peu importe les points de vie restants strictement inférieurs au maximum, dans ce cas le pokemon est soigné de {1} de sa vie totale.\n";
private static final String C_P_17_59="Le joueur peut utiliser une telle baie peu importe les points de vie restants strictement inférieurs au maximum, dans ce cas le pokemon est soigné de {1} de sa vie totale.\n";
private static final String C_P_17_5="While the owner is targetted by a super effective move or not effective by default, the damage rate inflicted varies in function by the type of the suffered move:\n";
private static final String C_P_17_60="La baie est activée lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\n";
private static final String C_P_17_61="Si le possesseur subit une attaque de catégorie {0}, alors ses statistiques suivantes varient de la façon suivante:\n";
private static final String C_P_17_62="Statistique\n";
private static final String C_P_17_63="Boost\n";
private static final String C_P_17_64="La baie est activée lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\n";
private static final String C_P_17_65="Lorsque le porteur subit les dégâts d''une attaque, les dégâts de recul infligés au lanceur varient en fonction de la catégorie de l''attaque:\n";
private static final String C_P_17_66="Catégorie de l''attaque subie\n";
private static final String C_P_17_67="Taux de vie perdu par le lanceur\n";
private static final String C_P_17_6="Type of the move\n";
private static final String C_P_17_7="Efficiency of the move\n";
private static final String C_P_17_8="Rate\n";
private static final String C_P_17_9="The berry is enabled at the end of the round of the owner.\n";
private static final String M_P_17_CATEGORY="category";
private static final String M_P_17_CATEGORY_BOOST="category_boost";
private static final String M_P_17_CATEGORY_STAT="category_stat";
private static final String M_P_17_CATEGORY_TIME="category_time";
private static final String M_P_17_HEAL_HP="heal_hp";
private static final String M_P_17_HEAL_HP_ONLY_ROUND_HEAL="heal_hp_only_round_heal";
private static final String M_P_17_HEAL_HP_RATE="heal_hp_rate";
private static final String M_P_17_HEAL_HP_RATE_ONLY_ROUND_HEAL="heal_hp_rate_only_round_heal";
private static final String M_P_17_HEAL_HP_RATE_TIME="heal_hp_rate_time";
private static final String M_P_17_HEAL_HP_TIME="heal_hp_time";
private static final String M_P_17_HEAL_PP="heal_pp";
private static final String M_P_17_HEAL_PP_TIME="heal_pp_time";
private static final String M_P_17_HEAL_STATUS="heal_status";
private static final String M_P_17_HEAL_STATUS_TIME="heal_status_time";
private static final String M_P_17_MULT_DAMAGE_FOE="mult_damage_foe";
private static final String M_P_17_MULT_DAMAGE_FOE_EFF="mult_damage_foe_eff";
private static final String M_P_17_MULT_DAMAGE_FOE_RATE="mult_damage_foe_rate";
private static final String M_P_17_MULT_DAMAGE_FOE_TIME="mult_damage_foe_time";
private static final String M_P_17_MULT_DAMAGE_FOE_TYPE="mult_damage_foe_type";
private static final String M_P_17_MULT_STAT="mult_stat";
private static final String M_P_17_MULT_STAT_BOOST="mult_stat_boost";
private static final String M_P_17_MULT_STAT_HP="mult_stat_hp";
private static final String M_P_17_MULT_STAT_KEY="mult_stat_key";
private static final String M_P_17_MULT_STAT_TIME="mult_stat_time";
private static final String M_P_17_RECOIL="recoil";
private static final String M_P_17_RECOIL_CAT="recoil_cat";
private static final String M_P_17_RECOIL_HP="recoil_hp";
private static final String M_P_17_RECOIL_TIME="recoil_time";
private static final String M_P_17_SORTING_USERS="sorting_users";
private static final String M_P_17_SORTING_USERS_TIME="sorting_users_time";
private static final String M_P_17_WIN_SUPER_EFF="win_super_eff";
private static final String M_P_17_WIN_SUPER_EFF_TIME="win_super_eff_time";
private static final String M_P_17_WITHOUT_FAIL="without_fail";
private static final String M_P_17_WITHOUT_FAIL_TIME="without_fail_time";
private static final char SEP='=';
private MesDataItemsBerry(){}
static String en(){
String f=M_P_17_WIN_SUPER_EFF_TIME+SEP+C_P_17_0;
f+=M_P_17_WIN_SUPER_EFF+SEP+C_P_17_1;
f+=M_P_17_SORTING_USERS_TIME+SEP+C_P_17_2;
f+=M_P_17_SORTING_USERS+SEP+C_P_17_3;
f+=M_P_17_MULT_DAMAGE_FOE_TIME+SEP+C_P_17_4;
f+=M_P_17_MULT_DAMAGE_FOE+SEP+C_P_17_5;
f+=M_P_17_MULT_DAMAGE_FOE_TYPE+SEP+C_P_17_6;
f+=M_P_17_MULT_DAMAGE_FOE_EFF+SEP+C_P_17_7;
f+=M_P_17_MULT_DAMAGE_FOE_RATE+SEP+C_P_17_8;
f+=M_P_17_MULT_STAT_TIME+SEP+C_P_17_9;
f+=M_P_17_MULT_STAT+SEP+C_P_17_10;
f+=M_P_17_MULT_STAT_KEY+SEP+C_P_17_11;
f+=M_P_17_MULT_STAT_HP+SEP+C_P_17_12;
f+=M_P_17_MULT_STAT_BOOST+SEP+C_P_17_13;
f+=M_P_17_WITHOUT_FAIL_TIME+SEP+C_P_17_14;
f+=M_P_17_WITHOUT_FAIL+SEP+C_P_17_15;
f+=M_P_17_HEAL_PP_TIME+SEP+C_P_17_16;
f+=M_P_17_HEAL_PP+SEP+C_P_17_17;
f+=M_P_17_HEAL_HP_TIME+SEP+C_P_17_18;
f+=M_P_17_HEAL_HP+SEP+C_P_17_19;
f+=M_P_17_HEAL_HP_ONLY_ROUND_HEAL+SEP+C_P_17_20;
f+=M_P_17_HEAL_STATUS_TIME+SEP+C_P_17_21;
f+=M_P_17_HEAL_STATUS+SEP+C_P_17_22;
f+=M_P_17_HEAL_HP_RATE_TIME+SEP+C_P_17_23;
f+=M_P_17_HEAL_HP_RATE+SEP+C_P_17_24;
f+=M_P_17_HEAL_HP_RATE_ONLY_ROUND_HEAL+SEP+C_P_17_25;
f+=M_P_17_CATEGORY_TIME+SEP+C_P_17_26;
f+=M_P_17_CATEGORY+SEP+C_P_17_27;
f+=M_P_17_CATEGORY_STAT+SEP+C_P_17_28;
f+=M_P_17_CATEGORY_BOOST+SEP+C_P_17_29;
f+=M_P_17_RECOIL_TIME+SEP+C_P_17_30;
f+=M_P_17_RECOIL+SEP+C_P_17_31;
f+=M_P_17_RECOIL_CAT+SEP+C_P_17_32;
f+=M_P_17_RECOIL_HP+SEP+C_P_17_33;
return f;
}
static String fr(){
String f=M_P_17_WIN_SUPER_EFF_TIME+SEP+C_P_17_34;
f+=M_P_17_WIN_SUPER_EFF+SEP+C_P_17_35;
f+=M_P_17_SORTING_USERS_TIME+SEP+C_P_17_36;
f+=M_P_17_SORTING_USERS+SEP+C_P_17_37;
f+=M_P_17_MULT_DAMAGE_FOE_TIME+SEP+C_P_17_38;
f+=M_P_17_MULT_DAMAGE_FOE+SEP+C_P_17_39;
f+=M_P_17_MULT_DAMAGE_FOE_TYPE+SEP+C_P_17_40;
f+=M_P_17_MULT_DAMAGE_FOE_EFF+SEP+C_P_17_41;
f+=M_P_17_MULT_DAMAGE_FOE_RATE+SEP+C_P_17_42;
f+=M_P_17_MULT_STAT_TIME+SEP+C_P_17_43;
f+=M_P_17_MULT_STAT+SEP+C_P_17_44;
f+=M_P_17_MULT_STAT_KEY+SEP+C_P_17_45;
f+=M_P_17_MULT_STAT_HP+SEP+C_P_17_46;
f+=M_P_17_MULT_STAT_BOOST+SEP+C_P_17_47;
f+=M_P_17_WITHOUT_FAIL_TIME+SEP+C_P_17_48;
f+=M_P_17_WITHOUT_FAIL+SEP+C_P_17_49;
f+=M_P_17_HEAL_PP_TIME+SEP+C_P_17_50;
f+=M_P_17_HEAL_PP+SEP+C_P_17_51;
f+=M_P_17_HEAL_HP_TIME+SEP+C_P_17_52;
f+=M_P_17_HEAL_HP+SEP+C_P_17_53;
f+=M_P_17_HEAL_HP_ONLY_ROUND_HEAL+SEP+C_P_17_54;
f+=M_P_17_HEAL_STATUS_TIME+SEP+C_P_17_55;
f+=M_P_17_HEAL_STATUS+SEP+C_P_17_56;
f+=M_P_17_HEAL_HP_RATE_TIME+SEP+C_P_17_57;
f+=M_P_17_HEAL_HP_RATE+SEP+C_P_17_58;
f+=M_P_17_HEAL_HP_RATE_ONLY_ROUND_HEAL+SEP+C_P_17_59;
f+=M_P_17_CATEGORY_TIME+SEP+C_P_17_60;
f+=M_P_17_CATEGORY+SEP+C_P_17_61;
f+=M_P_17_CATEGORY_STAT+SEP+C_P_17_62;
f+=M_P_17_CATEGORY_BOOST+SEP+C_P_17_63;
f+=M_P_17_RECOIL_TIME+SEP+C_P_17_64;
f+=M_P_17_RECOIL+SEP+C_P_17_65;
f+=M_P_17_RECOIL_CAT+SEP+C_P_17_66;
f+=M_P_17_RECOIL_HP+SEP+C_P_17_67;
return f;
}
}
