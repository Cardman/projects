package code.scripts.pages.aiki;

import code.sml.util.*;

public final class MessagesDataAbilityData {
    public static final String M_P_1_ABILITIES="abilities";
    public static final String M_P_1_ACHIEVED_DISAPPEARED="achieved_disappeared";
    public static final String M_P_1_BONUS_STAT_RANK="bonus_stat_rank";
    public static final String M_P_1_BONUS_STAT_RANK_BOOST="bonus_stat_rank_boost";
    public static final String M_P_1_BONUS_STAT_RANK_END_ROUND="bonus_stat_rank_end_round";
    public static final String M_P_1_BONUS_STAT_RANK_END_ROUND_BOOST="bonus_stat_rank_end_round_boost";
    public static final String M_P_1_BONUS_STAT_RANK_END_ROUND_KEY="bonus_stat_rank_end_round_key";
    public static final String M_P_1_BONUS_STAT_RANK_KEY="bonus_stat_rank_key";
    public static final String M_P_1_BONUS_STAT_RANK_PROTECTED="bonus_stat_rank_protected";
    public static final String M_P_1_BONUS_STAT_RANK_PROTECTED_BOOST="bonus_stat_rank_protected_boost";
    public static final String M_P_1_BONUS_STAT_RANK_PROTECTED_KEY="bonus_stat_rank_protected_key";
    public static final String M_P_1_BREAK_FOE_IMMUNE="break_foe_immune";
    public static final String M_P_1_BREAK_FOE_IMMUNE_KEY="break_foe_immune_key";
    public static final String M_P_1_BREAK_FOE_IMMUNE_VALUE="break_foe_immune_value";
//    public static final String M_P_1_BREAK_FOE_IMMUNE_VALUE_RATE="break_foe_immune_value_rate";
    public static final String M_P_1_BREAK_PROTECTION="break_protection";
    public static final String M_P_1_CANCEL_SEC_EFFECT_OTHER="cancel_sec_effect_other";
    public static final String M_P_1_CANCEL_SEC_EFFECT_OWNER="cancel_sec_effect_owner";
    public static final String M_P_1_CANCEL_USING_ITEMS_TEAM="cancel_using_items_team";
    public static final String M_P_1_CHANGING_BOOST_TYPES="changing_boost_types";
    public static final String M_P_1_CHANGING_BOOST_TYPES_NEW="changing_boost_types_new";
    public static final String M_P_1_CHANGING_BOOST_TYPES_OLD="changing_boost_types_old";
    public static final String M_P_1_CHANGING_BOOST_TYPES_RATE="changing_boost_types_rate";
    public static final String M_P_1_CHGT_TYPE_BY_DAMAGE="chgt_type_by_damage";
    public static final String M_P_1_CHGT_TYPE_BY_WEATHER="chgt_type_by_weather";
    public static final String M_P_1_CHGT_TYPE_BY_WEATHER_KEY="chgt_type_by_weather_key";
    public static final String M_P_1_CHGT_TYPE_BY_WEATHER_NO="chgt_type_by_weather_no";
    public static final String M_P_1_CHGT_TYPE_BY_WEATHER_VALUE="chgt_type_by_weather_value";
    public static final String M_P_1_COPY_MOVE_TYPES="copy_move_types";
    public static final String M_P_1_DECREASE_NEC_STEPS_HATCH="decrease_nec_steps_hatch";
    public static final String M_P_1_DECREASE_NEC_STEPS_HATCH_INTRO="decrease_nec_steps_hatch_intro";
    public static final String M_P_1_DIVIDE_STATUS_ROUND="divide_status_round";
    public static final String M_P_1_DIVIDE_STATUS_ROUND_KEY="divide_status_round_key";
    public static final String M_P_1_DIVIDE_STATUS_ROUND_VALUE="divide_status_round_value";
    public static final String M_P_1_ENDROUND="endRound";
    public static final String M_P_1_FAIL_STATUS="fail_status";
    public static final String M_P_1_FAIL_STATUS_COND="fail_status_cond";
    public static final String M_P_1_FAIL_STATUS_KEY="fail_status_key";
    public static final String M_P_1_FORBID_BERRY_FOES="forbid_berry_foes";
    public static final String M_P_1_FORMULA="formula";
    public static final String M_P_1_FORWARD_STATUS="forward_status";
    public static final String M_P_1_FORWARD_STATUS_KEY="forward_status_key";
    public static final String M_P_1_FORWARD_STATUS_VALUE="forward_status_value";
    public static final String M_P_1_HEALED_HP_RATE_BY_SWITCH="healed_hp_rate_by_switch";
    public static final String M_P_1_HEALED_HP_RATE_BY_SWITCH_INTRO="healed_hp_rate_by_switch_intro";
    public static final String M_P_1_HEALED_STATUS_BY_SWITCH="healed_status_by_switch";
    public static final String M_P_1_HEAL_HP_BY_WEATHER="heal_hp_by_weather";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_HEAL="heal_hp_by_weather_heal";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_KEY="heal_hp_by_weather_key";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_LOSS="heal_hp_by_weather_loss";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_NO="heal_hp_by_weather_no";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE="heal_hp_by_weather_type";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_HEAL="heal_hp_by_weather_type_heal";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY="heal_hp_by_weather_type_key";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY_SEC="heal_hp_by_weather_type_key_sec";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_LOSS="heal_hp_by_weather_type_loss";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_NO="heal_hp_by_weather_type_no";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_TYPE_VALUE="heal_hp_by_weather_type_value";
    public static final String M_P_1_HEAL_HP_BY_WEATHER_VALUE="heal_hp_by_weather_value";
    public static final String M_P_1_HEAL_HP_WHILE_USING_BERRY="heal_hp_while_using_berry";
    public static final String M_P_1_HEAL_HP_WHILE_USING_BERRY_INTRO="heal_hp_while_using_berry_intro";
    public static final String M_P_1_IGN_ABILITY="ign_ability";
    public static final String M_P_1_IGN_FOE_SATIS_BOOST="ign_foe_satis_boost";
    public static final String M_P_1_IGN_FOE_TEAM_MOVE="ign_foe_team_move";
    public static final String M_P_1_IMMU_ABILITY="immu_ability";
    public static final String M_P_1_IMMU_ALLY_FROM_MOVES="immu_ally_from_moves";
    public static final String M_P_1_IMMU_CH="immu_ch";
    public static final String M_P_1_IMMU_DAMAGE_ALLY_MOVES="immu_damage_ally_moves";
    public static final String M_P_1_IMMU_DAMAGE_RECOIL="immu_damage_recoil";
    public static final String M_P_1_IMMU_DAMAGE_TRAPPING_MOVES="immu_damage_trapping_moves";
    public static final String M_P_1_IMMU_LOW_STAT="immu_low_stat";
    public static final String M_P_1_IMMU_LOW_STATIS_TYPES="immu_low_statis_types";
    public static final String M_P_1_IMMU_LOW_STATIS_TYPES_KEY="immu_low_statis_types_key";
    public static final String M_P_1_IMMU_LOW_STATIS_TYPES_VALUE="immu_low_statis_types_value";
//    public static final String M_P_1_IMMU_LOW_STAT_2="immu_low_stat_2";
    public static final String M_P_1_IMMU_LOW_STAT_AFF="immu_low_stat_aff";
    public static final String M_P_1_IMMU_LOW_STAT_AFF_KEY="immu_low_stat_aff_key";
    public static final String M_P_1_IMMU_LOW_STAT_AFF_VALUE="immu_low_stat_aff_value";
    public static final String M_P_1_IMMU_MOVES="immu_moves";
    public static final String M_P_1_IMMU_MOVE_TYPES_WEATHER="immu_move_types_weather";
    public static final String M_P_1_IMMU_MOVE_TYPES_WEATHER_KEY="immu_move_types_weather_key";
    public static final String M_P_1_IMMU_MOVE_TYPES_WEATHER_NO="immu_move_types_weather_no";
    public static final String M_P_1_IMMU_MOVE_TYPES_WEATHER_TYPE="immu_move_types_weather_type";
    public static final String M_P_1_IMMU_RECHARGE_ROUND="immu_recharge_round";
    public static final String M_P_1_IMMU_STATUS="immu_status";
    public static final String M_P_1_IMMU_STATUS_BEGIN_ROUND="immu_status_begin_round";
    public static final String M_P_1_IMMU_STATUS_KEY="immu_status_key";
    public static final String M_P_1_IMMU_STATUS_NO="immu_status_no";
    public static final String M_P_1_IMMU_STATUS_STATUS="immu_status_status";
    public static final String M_P_1_IMMU_STATUS_TYPE="immu_status_type";
    public static final String M_P_1_IMMU_STATUS_TYPE_KEY="immu_status_type_key";
    public static final String M_P_1_IMMU_STATUS_TYPE_STATUS="immu_status_type_status";
    public static final String M_P_1_IMMU_SUFFERED_DAMAGE_LOW_EFF="immu_suffered_damage_low_eff";
    public static final String M_P_1_IMMU_WEATHERS="immu_weathers";
    public static final String M_P_1_INCREASED_PRIO="increased_prio";
    public static final String M_P_1_INCREASED_PRIO_CAT="increased_prio_cat";
    public static final String M_P_1_INCREASED_PRIO_INC="increased_prio_inc";
    public static final String M_P_1_INCREASED_PRIO_TYPE="increased_prio_type";
    public static final String M_P_1_INCREASED_PRIO_TYPE_INC="increased_prio_type_inc";
    public static final String M_P_1_INCREASED_PRIO_TYPE_KEY="increased_prio_type_key";
    public static final String M_P_1_INDEX="index";
    public static final String M_P_1_INFLICTING_DAMAGE_INSTEAD_SUFFERING="inflicting_damage_instead_suffering";
    public static final String M_P_1_LEARNT_PK="learnt_pk";
    public static final String M_P_1_LOW_STAT_FOE_HIT="low_stat_foe_hit";
    public static final String M_P_1_LOW_STAT_FOE_HIT_BOOST="low_stat_foe_hit_boost";
    public static final String M_P_1_LOW_STAT_FOE_HIT_KEY="low_stat_foe_hit_key";
    public static final String M_P_1_MAX_HP_FOR_USING_BERRY="max_hp_for_using_berry";
    public static final String M_P_1_MAX_HP_FOR_USING_BERRY_INTRO="max_hp_for_using_berry_intro";
    public static final String M_P_1_MAX_STATISTICS_IF_CH="max_statistics_if_ch";
    public static final String M_P_1_MULT_ALLY_DAMAGE="mult_ally_damage";
    public static final String M_P_1_MULT_ALLY_DAMAGE_INTRO="mult_ally_damage_intro";
    public static final String M_P_1_MULT_DAMAGE="mult_damage";
    public static final String M_P_1_MULT_DAMAGE_CH="mult_damage_ch";
    public static final String M_P_1_MULT_DAMAGE_CH_INTRO="mult_damage_ch_intro";
    public static final String M_P_1_MULT_DAMAGE_FOE="mult_damage_foe";
    public static final String M_P_1_MULT_DAMAGE_FOE_RATE="mult_damage_foe_rate";
    public static final String M_P_1_MULT_DAMAGE_FOE_TYPE="mult_damage_foe_type";
    public static final String M_P_1_MULT_EVT_RATE_CH="mult_evt_rate_ch";
    public static final String M_P_1_MULT_EVT_RATE_CH_INTRO="mult_evt_rate_ch_intro";
    public static final String M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER="mult_evt_rate_sec_effect_owner";
    public static final String M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER_INTRO="mult_evt_rate_sec_effect_owner_intro";
    public static final String M_P_1_MULT_POWER="mult_power";
    public static final String M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL="mult_power_moves_types_global";
    public static final String M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_MOVE="mult_power_moves_types_global_move";
    public static final String M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_RATE="mult_power_moves_types_global_rate";
    public static final String M_P_1_MULT_STAB="mult_stab";
    public static final String M_P_1_MULT_STAB_INTRO="mult_stab_intro";
    public static final String M_P_1_MULT_STAT="mult_stat";
    public static final String M_P_1_MULT_STAT_ALLY="mult_stat_ally";
    public static final String M_P_1_MULT_STAT_ALLY_KEY="mult_stat_ally_key";
    public static final String M_P_1_MULT_STAT_ALLY_RATE="mult_stat_ally_rate";
    public static final String M_P_1_MULT_STAT_CAT="mult_stat_cat";
    public static final String M_P_1_MULT_STAT_CAT_KEY="mult_stat_cat_key";
    public static final String M_P_1_MULT_STAT_CAT_KEY_SEC="mult_stat_cat_key_sec";
    public static final String M_P_1_MULT_STAT_CAT_RATE="mult_stat_cat_rate";
    public static final String M_P_1_MULT_STAT_DAMAGE_CAT="mult_stat_damage_cat";
    public static final String M_P_1_MULT_STAT_DAMAGE_CAT_KEY="mult_stat_damage_cat_key";
    public static final String M_P_1_MULT_STAT_DAMAGE_CAT_KEY_SEC="mult_stat_damage_cat_key_sec";
    public static final String M_P_1_MULT_STAT_DAMAGE_CAT_VAR="mult_stat_damage_cat_var";
    public static final String M_P_1_MULT_STAT_DAMAGE_TYPE="mult_stat_damage_type";
    public static final String M_P_1_MULT_STAT_DAMAGE_TYPE_KEY="mult_stat_damage_type_key";
    public static final String M_P_1_MULT_STAT_DAMAGE_TYPE_KEY_SEC="mult_stat_damage_type_key_sec";
    public static final String M_P_1_MULT_STAT_DAMAGE_TYPE_VAR="mult_stat_damage_type_var";
    public static final String M_P_1_MULT_STAT_IF_KO_FOE="mult_stat_if_ko_foe";
    public static final String M_P_1_MULT_STAT_IF_KO_FOE_BOOST="mult_stat_if_ko_foe_boost";
    public static final String M_P_1_MULT_STAT_IF_KO_FOE_KEY="mult_stat_if_ko_foe_key";
    public static final String M_P_1_MULT_STAT_IF_LOW_STAT="mult_stat_if_low_stat";
    public static final String M_P_1_MULT_STAT_IF_LOW_STAT_BOOST="mult_stat_if_low_stat_boost";
    public static final String M_P_1_MULT_STAT_IF_LOW_STAT_KEY="mult_stat_if_low_stat_key";
    public static final String M_P_1_MULT_STAT_KEY="mult_stat_key";
    public static final String M_P_1_MULT_STAT_RANK="mult_stat_rank";
    public static final String M_P_1_MULT_STAT_RANK_BOOST="mult_stat_rank_boost";
    public static final String M_P_1_MULT_STAT_RANK_KEY="mult_stat_rank_key";
    public static final String M_P_1_MULT_STAT_RATE="mult_stat_rate";
    public static final String M_P_1_MULT_STAT_STATUS_RANK="mult_stat_status_rank";
    public static final String M_P_1_MULT_STAT_STATUS_RANK_KEY="mult_stat_status_rank_key";
    public static final String M_P_1_MULT_STAT_STATUS_RANK_KEY_SEC="mult_stat_status_rank_key_sec";
    public static final String M_P_1_MULT_STAT_STATUS_RANK_VAR="mult_stat_status_rank_var";
    public static final String M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF="mult_suffered_damage_super_eff";
    public static final String M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF_INTRO="mult_suffered_damage_super_eff_intro";
    public static final String M_P_1_MULT_VAR_BOOST="mult_var_boost";
    public static final String M_P_1_MULT_VAR_BOOST_INTRO="mult_var_boost_intro";
    public static final String M_P_1_MUMY="mumy";
    public static final String M_P_1_MAME="name";
    public static final String M_P_1_NB_HITS="nb_hits";
    public static final String M_P_1_NB_USED_PP="nb_used_pp";
    public static final String M_P_1_NB_USED_PP_INTRO="nb_used_pp_intro";
    public static final String M_P_1_PLATE="plate";
    public static final String M_P_1_RECOIL_DAMAGE_FOE="recoil_damage_foe";
    public static final String M_P_1_RECOIL_DAMAGE_FOE_INTRO="recoil_damage_foe_intro";
    public static final String M_P_1_RECOIL_DAMAGE_FOE_BY_KO_OWNER="recoil_damage_foe_by_ko_owner";
    public static final String M_P_1_REVERSE_EFFECTS_POWER_GLOBAL="reverse_effects_power_global";
    public static final String M_P_1_SINGLE_STATUS="single_status";
    public static final String M_P_1_SINGLE_STATUS_KEY="single_status_key";
    public static final String M_P_1_SINGLE_STATUS_NO="single_status_no";
    public static final String M_P_1_SINGLE_STATUS_RATE="single_status_rate";
    public static final String M_P_1_SLOWING="slowing";
    public static final String M_P_1_TAKE_ITEM_DAMAGING_MOVE="take_item_damaging_move";
    public static final String M_P_1_TITLE="title";
    public static final String M_P_1_TYPE_FOR_MOVES="type_for_moves";
    public static final String STATISTIC = "Statistic";
    public static final String STATISTIQUE = "Statistique";
    public static final String LEVEL = "Level";
    public static final String BOOST = "Boost";
    public static final String ENABLED_WEATHER = "Enabled weather";
    public static final String NONE = "None";
    public static final String CLIMAT_ACTIF = "Climat actif";
    public static final String AUCUN = "Aucun";
    public static final String STATUS = "Status";
    public static final String STATUT = "Statut";
    public static final String RATE = "Rate";
    public static final String COEFFICIENT = "Coefficient";
    public static final String VARIATION_OF_LEVEL = "Variation of level";
    public static final String VARIATION_DE_CRAN = "Variation de cran";

    private MessagesDataAbilityData(){
    }
    public static TranslationsFile en(){
        TranslationsFile e_=new TranslationsFile();
        e_.add(M_P_1_ABILITIES,"Abilities");
        e_.add(M_P_1_ACHIEVED_DISAPPEARED,"The ability is enabled while the user uses a move.\nThe owner of this ability can achieve a pokemon preparing a move and disappeared.");
        e_.add(M_P_1_BONUS_STAT_RANK,"The ability is enabled at the moment of calculating levels of statistics.\nHere is the table of the bonuses of levels of statistics:");
        e_.add(M_P_1_BONUS_STAT_RANK_BOOST,"Bonus");
        e_.add(M_P_1_BONUS_STAT_RANK_END_ROUND,"The ability is enabled at the end of round of the owner.\nHere is the table of levels of statistics:");
        e_.add(M_P_1_BONUS_STAT_RANK_END_ROUND_BOOST, LEVEL);
        e_.add(M_P_1_BONUS_STAT_RANK_END_ROUND_KEY, STATISTIC);
        e_.add(M_P_1_BONUS_STAT_RANK_KEY, STATISTIC);
        e_.add(M_P_1_BONUS_STAT_RANK_PROTECTED,"The ability is enabled while the owner is targetted by a move.\nIf the owner is protected then its statistics vary in the following way:");
        e_.add(M_P_1_BONUS_STAT_RANK_PROTECTED_BOOST, LEVEL);
        e_.add(M_P_1_BONUS_STAT_RANK_PROTECTED_KEY, STATISTIC);
        e_.add(M_P_1_BREAK_FOE_IMMUNE,"The ability is enabled while the onwer uses a move.\nThe new rate is 1.\nHere is the table of modified rates of efficiency by the ability of the owner:");
        e_.add(M_P_1_BREAK_FOE_IMMUNE_KEY,"Damaging type");
        e_.add(M_P_1_BREAK_FOE_IMMUNE_VALUE,"Defending type");
//        e_.add(M_P_1_BREAK_FOE_IMMUNE_VALUE_RATE,"New rate");
        e_.add(M_P_1_BREAK_PROTECTION,"The ability is enabled while the user uses a move.\nAll moves used by the owner of this ability ignore effects of the following moves used by a foe:");
        e_.add(M_P_1_CANCEL_SEC_EFFECT_OTHER,"While the owner of the ability is target of a move, second effects of this move do not affect the owner.");
        e_.add(M_P_1_CANCEL_SEC_EFFECT_OWNER,"While the owner of the ability is user of a move, second effects of this move do not happen.");
        e_.add(M_P_1_CANCEL_USING_ITEMS_TEAM,"The ability is enabled at the end of round of fight.\nThe ability restores the used items of the partners of the owner at the end of round of fight.");
        e_.add(M_P_1_CHANGING_BOOST_TYPES,"The ability is enabled while the owner uses a move.\nHere is the changements of types of the move and the associated damage rates:");
        e_.add(M_P_1_CHANGING_BOOST_TYPES_NEW,"New type");
        e_.add(M_P_1_CHANGING_BOOST_TYPES_OLD,"Old type");
        e_.add(M_P_1_CHANGING_BOOST_TYPES_RATE,"Damage rate");
        e_.add(M_P_1_CHGT_TYPE_BY_DAMAGE,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nWhile the owner of the ability suffers damage from a move before the end of round of fight, the owner takes the type of the suffered move.");
        e_.add(M_P_1_CHGT_TYPE_BY_WEATHER,"The ability is enabled while one of the weathers changes.\nHere is the table of the added types to the owner of this ability in function by the enabled weather:");
        e_.add(M_P_1_CHGT_TYPE_BY_WEATHER_KEY, ENABLED_WEATHER);
        e_.add(M_P_1_CHGT_TYPE_BY_WEATHER_NO, NONE);
        e_.add(M_P_1_CHGT_TYPE_BY_WEATHER_VALUE,"Added type");
        e_.add(M_P_1_COPY_MOVE_TYPES,"The ability is enabled at the beginning of the round of the owner.\nThe owner takes the types of the finally chosen move (after the moment of invokation of a move).");
        e_.add(M_P_1_DECREASE_NEC_STEPS_HATCH,"The ability is enabled out of fight.\nBy one step out of fight, the number of necessary steps for hatching is lowered by {0} per owner of this ability.");
        e_.add(M_P_1_DECREASE_NEC_STEPS_HATCH_INTRO,"By one step out of fight, the number of necessary steps for hatching is lowered per owner of this ability by:");
        e_.add(M_P_1_DIVIDE_STATUS_ROUND,"The ability is enabled at the beginning of the round of the owner.\nHere is the rate of division of number of rounds of the following status:");
        e_.add(M_P_1_DIVIDE_STATUS_ROUND_KEY, STATUS);
        e_.add(M_P_1_DIVIDE_STATUS_ROUND_VALUE,"Rate of division of number of rounds");
        e_.add(M_P_1_ENDROUND,"See the effect of end of round");
        e_.add(M_P_1_FAIL_STATUS,"The following status fail if and only if:");
        e_.add(M_P_1_FAIL_STATUS_COND,"Case of fail");
        e_.add(M_P_1_FAIL_STATUS_KEY, STATUS);
        e_.add(M_P_1_FORBID_BERRY_FOES,"The ability is enabled while a foe attempts to use a berry.\nWhile the owner of this ability is present on the front of battle, the foes cannot use any berry.");
        e_.add(M_P_1_FORMULA,"{0}");
        e_.add(M_P_1_FORWARD_STATUS,"The ability is enabled while the owner is targetted by a changement of status.\nHere is the table of affected status to the foe fighter of a move inflicting a status:");
        e_.add(M_P_1_FORWARD_STATUS_KEY,"Status of the move of the user");
        e_.add(M_P_1_FORWARD_STATUS_VALUE,"Status to be affected to the user");
        e_.add(M_P_1_HEALED_HP_RATE_BY_SWITCH,"The ability is enabled while the owner exits from the front of battle.\nIf the owner of this ability exits then the owner of this ability gets {0} of its full hp.");
        e_.add(M_P_1_HEALED_HP_RATE_BY_SWITCH_INTRO,"If the owner of this ability exits then the got rate of the full hp of the owner of this ability is:");
        e_.add(M_P_1_HEALED_STATUS_BY_SWITCH,"The ability is enabled while the owner exits from the front of battle.\nIf the owner of this ability exits then the status of the owner of this ability are healed.");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER,"The ability is enabled at the end of round of fight.\nHere is the variation of the hp of the owner of the ability in function by the enabled weather:");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_HEAL,"Win of {0} of full hp");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_KEY, ENABLED_WEATHER);
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_LOSS,"Loss of {0} of full hp");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_NO, NONE);
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nHere is the variation of the hp of the owner of the ability in function by the enabled weather and the type of the suffered move:");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_HEAL,"Win of {0} of full hp");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY, ENABLED_WEATHER);
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY_SEC,"Type of the move");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_LOSS,"Loss of {0} of full hp");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_NO, NONE);
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_VALUE,"Variation of hp");
        e_.add(M_P_1_HEAL_HP_BY_WEATHER_VALUE,"Variation of hp");
        e_.add(M_P_1_HEAL_HP_WHILE_USING_BERRY,"The ability is enabled while the owner uses a berry.\nWhile using its berry, the owner gets {0} of its full hp.");
        e_.add(M_P_1_HEAL_HP_WHILE_USING_BERRY_INTRO,"The got rate of the full hp of the owner while using its berry is:");
        e_.add(M_P_1_IGN_ABILITY,"The ability is enabled while the owner uses a move against a target.\nThe owner of this ability ignores the following abilities:");
        e_.add(M_P_1_IGN_FOE_SATIS_BOOST,"The ability is enabled while the owner uses a move.\nThe ability is enabled while the owner suffers damage of a move directly used by a fighter.\nIf the owner is target of a move, the levels of the statistics of a move for the user of the move are ignored.If the owner is user of a move, the levels of the statistics of defense for the target of the move are ignored.");
        e_.add(M_P_1_IGN_FOE_TEAM_MOVE,"The ability is enabled while the owner uses a move.\nThe enabled moves regarding all foe team of the owner of this ability are ignored, these are the following one:");
        e_.add(M_P_1_IMMU_ABILITY,"The ability is enabled at the end of round of fight.\nThe owner of this ability does not suffer damage from the following abilities:");
        e_.add(M_P_1_IMMU_ALLY_FROM_MOVES,"The ability protects the team of the owner against the following moves:");
        e_.add(M_P_1_IMMU_CH,"The ability is enabled while the ability of an other fighter is enabled.\nThe owner of this ability cannot suffer critical hit.");
        e_.add(M_P_1_IMMU_DAMAGE_ALLY_MOVES,"The ability is enabled while a fighter uses a direct move against the owner.\nThe owner of this ability does not suffer damage inflicted by a move used by a partner.");
        e_.add(M_P_1_IMMU_DAMAGE_RECOIL,"The ability is enabled after the owner using its move.\nThe owner of this ability does not suffer recoil damage by one of its moves.");
        e_.add(M_P_1_IMMU_DAMAGE_TRAPPING_MOVES,"The ability is enabled at the end of round of fight.\nThe owner of this ability is not trapped by trapping moves.");
        e_.add(M_P_1_IMMU_LOW_STAT,"The ability is enabled while a statistic of the owner is lowered.\nIf a move, lowering only one of these statistics, is used against this owner, the move fails.\nThe following statistics of the owner of this ability cannot be lowered:");
        e_.add(M_P_1_IMMU_LOW_STATIS_TYPES,"The ability is enabled while a statistic of a member of the team of the owner is lowered.\nHere is the statistics that cannot be lowered in function by the type:");
        e_.add(M_P_1_IMMU_LOW_STATIS_TYPES_KEY,"Type");
        e_.add(M_P_1_IMMU_LOW_STATIS_TYPES_VALUE,"Statistic that cannot be lowered");
        e_.add(M_P_1_IMMU_LOW_STAT_AFF,"The ability is enabled while a statistic of the owner is lowered.\nHere is the statistics that cannot be lowered in function by the status:");
        e_.add(M_P_1_IMMU_LOW_STAT_AFF_KEY, STATUS);
        e_.add(M_P_1_IMMU_LOW_STAT_AFF_VALUE,"Statistic that cannot be lowered");
        e_.add(M_P_1_IMMU_MOVES,"The ability protects its owner against the following moves:");
        e_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER,"The ability is enabled while a fighter uses a direct move against the owner.\nHere is the types of the moves that the owner of the ability is protected in function by the enabled weather:");
        e_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_KEY, ENABLED_WEATHER);
        e_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_NO, NONE);
        e_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_TYPE,"Type");
        e_.add(M_P_1_IMMU_RECHARGE_ROUND,"The ability is enabled after the owner using its move.\nThe owner of this ability need not recharge after using a move demanding a recharging round:");
        e_.add(M_P_1_IMMU_STATUS,"The ability is enabled while the owner is targetted by a changement of status.\nHere is the status that the owner of this ability is protected in function by the enabled weather:");
        e_.add(M_P_1_IMMU_STATUS_BEGIN_ROUND,"The ability is enabled at the beginning of the round of the owner.\nThe possiblity of the owner of this ability for using a move is not changed by the following status:");
        e_.add(M_P_1_IMMU_STATUS_KEY, ENABLED_WEATHER);
        e_.add(M_P_1_IMMU_STATUS_NO, NONE);
        e_.add(M_P_1_IMMU_STATUS_STATUS, STATUS);
        e_.add(M_P_1_IMMU_STATUS_TYPE,"The ability is enabled while a member of the team of the owner is targetted by a changement of status.\nHere is the status that the team of the owner of this ability is protected in function by the owned types by the partners of the owner:");
        e_.add(M_P_1_IMMU_STATUS_TYPE_KEY,"Type");
        e_.add(M_P_1_IMMU_STATUS_TYPE_STATUS, STATUS);
        e_.add(M_P_1_IMMU_SUFFERED_DAMAGE_LOW_EFF,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nThe owner of this ability is protected against few effective moves against it.");
        e_.add(M_P_1_IMMU_WEATHERS,"The ability protects its owner against the following weathers:");
        e_.add(M_P_1_INCREASED_PRIO,"The ability is enabled at the moment of sorting by order of using.\nHere is the variation of priority of the moves in function by their category:");
        e_.add(M_P_1_INCREASED_PRIO_CAT,"Category of the move");
        e_.add(M_P_1_INCREASED_PRIO_INC,"Variation of the priority of the move");
        e_.add(M_P_1_INCREASED_PRIO_TYPE,"The ability is enabled at the moment of sorting by order of using.\nHere is the variation de priority of the moves in function by their types:");
        e_.add(M_P_1_INCREASED_PRIO_TYPE_INC,"Variation of the priority of the move");
        e_.add(M_P_1_INCREASED_PRIO_TYPE_KEY,"Type of the move");
        e_.add(M_P_1_INDEX,"Return to the index");
        e_.add(M_P_1_INFLICTING_DAMAGE_INSTEAD_SUFFERING,"The ability is enabled while a foe attempts to absorb the hp of the owner.\nIf the owner of this ability has suffered damage from a move absorbing damage and the user of the move absorbing damage is to get life, the user lost life that the user would have to get.Same for a move like LECH_SEED or an item absorbing hp.");
        e_.add(M_P_1_LEARNT_PK,"Les pokemon ablt to own the ability {0} are the following one:");
        e_.add(M_P_1_LOW_STAT_FOE_HIT,"The ability is enabled while the owner inflicts damage.\nEach target having suffered damage from the move of the owner has its statistics that vary int the following way:");
        e_.add(M_P_1_LOW_STAT_FOE_HIT_BOOST, LEVEL);
        e_.add(M_P_1_LOW_STAT_FOE_HIT_KEY, STATISTIC);
        e_.add(M_P_1_MAX_HP_FOR_USING_BERRY,"The ability is enabled while the owner is going to use a berry.\nWhile the owner has at most {0} of its full hp, it uses its berry.");
        e_.add(M_P_1_MAX_HP_FOR_USING_BERRY_INTRO,"Maximum of full hp of the owner for using its berry:");
        e_.add(M_P_1_MAX_STATISTICS_IF_CH,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nIf the owner of this ability suffers a critical hit, then the following statistics of the owner of this ability become maximals:");
        e_.add(M_P_1_MULT_ALLY_DAMAGE,"The ability is enabled while the user uses a move.\nInflicted damage by a move used by a partner of the owner of this ability against the owner of this ability are multiplied by {0}.");
        e_.add(M_P_1_MULT_ALLY_DAMAGE_INTRO,"Inflicted damage by a move used by a partner of the owner of this ability against the owner of this ability are multiplied by:");
        e_.add(M_P_1_MULT_DAMAGE,"Damage from moves is multiplied by {0}.");
        e_.add(M_P_1_MULT_DAMAGE_CH,"The ability is enabled while the user uses a move.\nThe value of critical hits inflicted by the owner of this ability is multiplied by {0}.");
        e_.add(M_P_1_MULT_DAMAGE_CH_INTRO,"The value of critical hits inflicted by the owner of this ability is multiplied by:");
        e_.add(M_P_1_MULT_DAMAGE_FOE,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nHere is the damage rates inflicted by a move in fonction by its type against the owner of this ability:");
        e_.add(M_P_1_MULT_DAMAGE_FOE_RATE, RATE);
        e_.add(M_P_1_MULT_DAMAGE_FOE_TYPE,"Type of move");
        e_.add(M_P_1_MULT_EVT_RATE_CH,"The ability is enabled while the user uses a move.\nThe probability of critical hits inflicted by the owner of this ability is multiplied by {0}.");
        e_.add(M_P_1_MULT_EVT_RATE_CH_INTRO,"The probability of critical hits inflicted by the owner of this ability is multiplied by:");
        e_.add(M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER,"The ability is enabled while the user uses a move.\nThe probability of second effects of moves used by the owner of this ability is multiplied by {0}.");
        e_.add(M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER_INTRO,"The probability of second effects of moves used by the owner of this ability is multiplied by:");
        e_.add(M_P_1_MULT_POWER,"The power of moves is multiplied by{0}.");
        e_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL,"The ability is enabled while a pokemon uses a damaging move.\nThe power of the moves is multiplied in the following way:");
        e_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_MOVE,"Move");
        e_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_RATE,"Power rate");
        e_.add(M_P_1_MULT_STAB,"The ability is enabled while the user uses a move.\nIf the owner of this ability uses a move whose type is one of its types, then the STAB is multiplied by {0}.");
        e_.add(M_P_1_MULT_STAB_INTRO,"If the owner of this ability uses a move whose type is one of its types, then the STAB is multiplied by:");
        e_.add(M_P_1_MULT_STAT,"The statistics of the owner are multiplied in the following way:");
        e_.add(M_P_1_MULT_STAT_ALLY,"The statistics of the members of the team of the owner are multiplied by the following way:");
        e_.add(M_P_1_MULT_STAT_ALLY_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_ALLY_RATE, RATE);
        e_.add(M_P_1_MULT_STAT_CAT,"The ability is enabled while a fighter uses a direct move against the owner.\nHere is the rates of statistics of the owner of the ability in function by the category of the suffered move:");
        e_.add(M_P_1_MULT_STAT_CAT_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_CAT_KEY_SEC,"Category of the suffered move");
        e_.add(M_P_1_MULT_STAT_CAT_RATE, RATE);
        e_.add(M_P_1_MULT_STAT_DAMAGE_CAT,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nHere is the variation of the levels of the statistics of the owner of the ability in function by the category of the suffered move:");
        e_.add(M_P_1_MULT_STAT_DAMAGE_CAT_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_DAMAGE_CAT_KEY_SEC,"Category of the suffered move");
        e_.add(M_P_1_MULT_STAT_DAMAGE_CAT_VAR, VARIATION_OF_LEVEL);
        e_.add(M_P_1_MULT_STAT_DAMAGE_TYPE,"The ability is enabled while a fighter uses a direct move against the owner.\nHere is the variation of levels of the statistics of the owner of the ability in function by the type of the suffered move:");
        e_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_KEY_SEC,"Type of the suffered move");
        e_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_VAR, VARIATION_OF_LEVEL);
        e_.add(M_P_1_MULT_STAT_IF_KO_FOE,"The ability is enabled after the owner using its move if the target of the move of the owner becomes KO.\nHere is the variation of the levels of the statistics of the owner of this ability after having knocked out a target:");
        e_.add(M_P_1_MULT_STAT_IF_KO_FOE_BOOST,"Variation of the affected level");
        e_.add(M_P_1_MULT_STAT_IF_KO_FOE_KEY,"Affected statistic");
        e_.add(M_P_1_MULT_STAT_IF_LOW_STAT,"The ability is enabled while a statistic of the owner is lowered.\nHere is the variations of the levels of the statistiques while one of the statistics of the owner of this ability is lowered:");
        e_.add(M_P_1_MULT_STAT_IF_LOW_STAT_BOOST,"Variation of the affected level");
        e_.add(M_P_1_MULT_STAT_IF_LOW_STAT_KEY,"Affected statistic");
        e_.add(M_P_1_MULT_STAT_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_RANK,"At the sending of the owner, the levels of the statistics of the owner vary by the following way:");
        e_.add(M_P_1_MULT_STAT_RANK_BOOST,"Variation of the level of the statistic");
        e_.add(M_P_1_MULT_STAT_RANK_KEY, STATISTIC);
        e_.add(M_P_1_MULT_STAT_RATE, RATE);
        e_.add(M_P_1_MULT_STAT_STATUS_RANK,"The ability is enabled while a fighter uses a direct move against the owner.\nHere is the variation of levels of the statistics of the owner of the ability in function by the status:");
        e_.add(M_P_1_MULT_STAT_STATUS_RANK_KEY, STATUS);
        e_.add(M_P_1_MULT_STAT_STATUS_RANK_KEY_SEC, STATISTIC);
        e_.add(M_P_1_MULT_STAT_STATUS_RANK_VAR, VARIATION_OF_LEVEL);
        e_.add(M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF,"The ability is enabled while the owner suffers damage of a move directly used by a fighter.\nInflicted damage by a super effective move against the owner of this ability are multiplied by {0}.");
        e_.add(M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF_INTRO,"Inflicted damage by a super effective move against the owner of this ability are multiplied by:");
        e_.add(M_P_1_MULT_VAR_BOOST,"The ability is enabled while the level of a statistic of the owner varies.\nThe variation of level of statistics (added the accuracy and the evasiness) is multiplied by {0}.");
        e_.add(M_P_1_MULT_VAR_BOOST_INTRO,"The variation of level of statistics (added the accuracy and the evasiness) is multiplied by:");
        e_.add(M_P_1_MUMY,"The ability is enabled while the owner uses a direct move.\nThe target of the move used by the owner takes the ability of the owner, until the exit of the target.");
        e_.add(M_P_1_MAME,"Name");
        e_.add(M_P_1_NB_HITS,"The ability is enabled while the user uses a move.\nFoe a move able to inflict several hits during the round of a user, the number of hits is maximal for an owner of this ability.");
        e_.add(M_P_1_NB_USED_PP,"The ability is enabled while a foe fighter uses a direct move against the owner.\nIf a move is successful and affects the owner of this ability and if the user of the move is not a partner of the owner of this ability, then the number of additional PP used by the user of the move against the owner of this ability is the number of foe targets with this ability multiplied by {0}.");
        e_.add(M_P_1_NB_USED_PP_INTRO,"If a move is successful and affects the owner of this ability and if the user of the move is not a partner of the owner of this ability, then the number of additional PP used by the user of the move against the owner of this ability is the number of foe targets with this ability multiplied by:");
        e_.add(M_P_1_PLATE,"The effects of a plate are enabled on the owner.");
        e_.add(M_P_1_RECOIL_DAMAGE_FOE,"The ability is enabled while the owner inflicts damage against a fighter.\nWhile the owner of the ability inflicts damage of a direct move against a target, the target looses {0} of its full hp.");
        e_.add(M_P_1_RECOIL_DAMAGE_FOE_INTRO,"While the owner of the ability inflicts damage of a direct move against a target, the target looses the following rate of its full hp:");
        e_.add(M_P_1_RECOIL_DAMAGE_FOE_BY_KO_OWNER,"The ability is enabled while the owner is knocked out by a move directly used by a fighter.\nWhile the owner of the ability suffers damage by a direct move and if the owner of this ability is KO by this direct move, then the user of the direct move looses {0} of the full hp of the user of the direct move.");
        e_.add(M_P_1_REVERSE_EFFECTS_POWER_GLOBAL,"The effects triggered by an ability multiplying powers of moves at the global fight are inverted. These abilities are the following one:");
        e_.add(M_P_1_SINGLE_STATUS,"The ability is enabled while the user uses a direct move against a fighter.\nIf a direct move is used and successful by the owner of this ability and if the owner is not KO, the law of status to affect to the target of the move is the following one:");
        e_.add(M_P_1_SINGLE_STATUS_KEY, STATUS);
        e_.add(M_P_1_SINGLE_STATUS_NO,"No status");
        e_.add(M_P_1_SINGLE_STATUS_RATE,"Probability");
        e_.add(M_P_1_SLOWING,"The ability is enabled at the moment of sorting by order of using.\nThe owner of this ability lastly uses a move for a same priority of move and a own of item regarding the order of using a move equivalent to an other fighter.");
        e_.add(M_P_1_TAKE_ITEM_DAMAGING_MOVE,"The ability is enabled while the owner inflicts damage against a target.\nAfter inflicting damage against a target, the owner take if possible the item of the target.");
        e_.add(M_P_1_TITLE,"Data of the ability {0}");
        e_.add(M_P_1_TYPE_FOR_MOVES,"The ability is enabled while the user uses a move.\nThe type of all moves used by the owner of this ability is {0}.");
        return e_;
    }
    public static TranslationsFile fr(){
        TranslationsFile f_=new TranslationsFile();
        f_.add(M_P_1_ABILITIES,"Capacités");
        f_.add(M_P_1_ACHIEVED_DISAPPEARED,"La capacité est activée lorsque le possesseur attaque.\nLe possesseur de cette capacité peut toucher un pokémon en cours de préparation d'une attaque et disparu.");
        f_.add(M_P_1_BONUS_STAT_RANK,"La capacité est activée au moment de calculer des boosts.\nVoici le tableau des bonus de boosts de statistiques:");
        f_.add(M_P_1_BONUS_STAT_RANK_BOOST,"Bonus");
        f_.add(M_P_1_BONUS_STAT_RANK_END_ROUND,"La capacité est activée en fin de tour du possesseur.\nVoici le tableau des boosts de statistiques:");
        f_.add(M_P_1_BONUS_STAT_RANK_END_ROUND_BOOST, BOOST);
        f_.add(M_P_1_BONUS_STAT_RANK_END_ROUND_KEY, STATISTIQUE);
        f_.add(M_P_1_BONUS_STAT_RANK_KEY, STATISTIQUE);
        f_.add(M_P_1_BONUS_STAT_RANK_PROTECTED,"La capacité est activée lorsque le possesseur est visé par une attaque.\nSi le possesseur est immunisé alors ses statistiques varient de la façon suivante:");
        f_.add(M_P_1_BONUS_STAT_RANK_PROTECTED_BOOST, BOOST);
        f_.add(M_P_1_BONUS_STAT_RANK_PROTECTED_KEY, STATISTIQUE);
        f_.add(M_P_1_BREAK_FOE_IMMUNE,"La capacité est activée lorsque le possesseur attaque.\nLe nouveau coefficient est 1.\nVoici le tableau des coefficients d'efficacité modifiés par la capacité du possesseur:");
        f_.add(M_P_1_BREAK_FOE_IMMUNE_KEY,"Type offensif");
        f_.add(M_P_1_BREAK_FOE_IMMUNE_VALUE,"Type défensif");
//        f_.add(M_P_1_BREAK_FOE_IMMUNE_VALUE_RATE,"Nouveau coefficient");
        f_.add(M_P_1_BREAK_PROTECTION,"La capacité est activée lorsque le possesseur attaque.\nToutes les attaques lancées par le possesseur de cette capacité ignore les effets des attaques suivantes lancées par un adversaire:");
        f_.add(M_P_1_CANCEL_SEC_EFFECT_OTHER,"Lorsque le possesseur de la capacité est cible d'une attaque, les effets secondaires de cette attaque n'affectent pas le possesseur.");
        f_.add(M_P_1_CANCEL_SEC_EFFECT_OWNER,"Lorsque le possesseur de la capacité est lanceur d'une attaque, les effets secondaires de cette attaque n'ont pas lieu.");
        f_.add(M_P_1_CANCEL_USING_ITEMS_TEAM,"La capacité est activée en fin de tour du combat.\nLa capacité restaure les objets utilisés des partenaires du possesseur à la fin du tour de combat.");
        f_.add(M_P_1_CHANGING_BOOST_TYPES,"La capacité est activée lorsque le possesseur attaque.\nVoici les changements de types de l'attaque et les coefficient de dégâts associés:");
        f_.add(M_P_1_CHANGING_BOOST_TYPES_NEW,"Nouveau type");
        f_.add(M_P_1_CHANGING_BOOST_TYPES_OLD,"Ancien type");
        f_.add(M_P_1_CHANGING_BOOST_TYPES_RATE,"Coefficient de dégâts");
        f_.add(M_P_1_CHGT_TYPE_BY_DAMAGE,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nLorsque le possesseur de cette capacité subit des dégâts d'une attaque avant la fin du tour de combat, il prend le type de l'attaque subie.");
        f_.add(M_P_1_CHGT_TYPE_BY_WEATHER,"La capacité est activée lorsqu'un des climats change.\nVoici le tableau des types ajoutés au possesseur de cette capacité en fonction du climat actif:");
        f_.add(M_P_1_CHGT_TYPE_BY_WEATHER_KEY, CLIMAT_ACTIF);
        f_.add(M_P_1_CHGT_TYPE_BY_WEATHER_NO, AUCUN);
        f_.add(M_P_1_CHGT_TYPE_BY_WEATHER_VALUE,"Type ajouté");
        f_.add(M_P_1_COPY_MOVE_TYPES,"La capacité est activée au début du tour du possesseur.\nLe possesseur prend les types de l'attaque finalement choisie (après le moment d'invocation d'une attaque).");
        f_.add(M_P_1_DECREASE_NEC_STEPS_HATCH,"La capacité du possesseur est activée hors combat.\nEn un pas en dehors du combat, le nombre de pas nécessaires pour l''éclosion baisse de {0} par possesseur de cette capacité.");
        f_.add(M_P_1_DECREASE_NEC_STEPS_HATCH_INTRO,"En un pas en dehors du combat, le nombre de pas nécessaires pour l'éclosion baisse par possesseur de cette capacité de:");
        f_.add(M_P_1_DIVIDE_STATUS_ROUND,"La capacité est activée au début du tour du possesseur.\nVoici le taux de division du nombre de tours des statuts suivants:");
        f_.add(M_P_1_DIVIDE_STATUS_ROUND_KEY, STATUT);
        f_.add(M_P_1_DIVIDE_STATUS_ROUND_VALUE,"Coefficient de division du nombre de tours");
        f_.add(M_P_1_ENDROUND,"Voir l'effet de fin de tour");
        f_.add(M_P_1_FAIL_STATUS,"Les statuts suivants échouent si et seulement si:");
        f_.add(M_P_1_FAIL_STATUS_COND,"Cas d'échec");
        f_.add(M_P_1_FAIL_STATUS_KEY, STATUT);
        f_.add(M_P_1_FORBID_BERRY_FOES,"La capacité est activée lorsqu'un adversaire tente d'utiliser une baie.\nTant que le possesseur de cette capacité est présent sur le terrain, les adversaires ne peuvent pas utiliser de baies.");
        f_.add(M_P_1_FORMULA,"{0}");
        f_.add(M_P_1_FORWARD_STATUS,"La capacité est activée lorsque le possesseur est visé par une altération de statut.\nVoici le tableau des statuts affectés au lanceur adverse d'une attaque infligeant un statut:");
        f_.add(M_P_1_FORWARD_STATUS_KEY,"Statut de l'attaque du lanceur");
        f_.add(M_P_1_FORWARD_STATUS_VALUE,"Statut à affecter au lanceur");
        f_.add(M_P_1_HEALED_HP_RATE_BY_SWITCH,"La capacité est activée lorsque le possesseur se retire du terrain.\nSi le possesseur de cette capacité se retire alors le possesseur de cette capacité récupère {0} de ses pv max.");
        f_.add(M_P_1_HEALED_HP_RATE_BY_SWITCH_INTRO,"Si le possesseur de cette capacité se retire alors le taux récupéré des pv max du possesseur de cette capacité est:");
        f_.add(M_P_1_HEALED_STATUS_BY_SWITCH,"La capacité est activée lorsque le possesseur se retire du terrain.\nSi le possesseur de cette capacité se retire alors les statuts du possesseur de cette capacité sont soignés.");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER,"La capacité est activée en fin de tour du combat.\nVoici la variation des pv du possesseur de la capacité en fonction du climat actif:");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_HEAL,"Gain de {0} des pv max");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_KEY, CLIMAT_ACTIF);
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_LOSS,"Perte de {0} des pv max");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_NO, AUCUN);
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nVoici la variation des pv du possesseur de la capacité en fonction du climat actif et du type de l'attaque subie:");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_HEAL,"Gain de {0} des pv max");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY, CLIMAT_ACTIF);
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_KEY_SEC,"Type de l'attaque");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_LOSS,"Perte de {0} des pv max");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_NO, AUCUN);
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_TYPE_VALUE,"Variation de pv");
        f_.add(M_P_1_HEAL_HP_BY_WEATHER_VALUE,"Variation de pv");
        f_.add(M_P_1_HEAL_HP_WHILE_USING_BERRY,"La capacité est activée lorsque le possesseur utilise une baie.\nLors de l''utilisation de sa baie, le possesseur restaure {0} de sa vie totale.");
        f_.add(M_P_1_HEAL_HP_WHILE_USING_BERRY_INTRO,"Le taux récupéré de la vie totale du possesseur lors de l'utilisation de sa baie est:");
        f_.add(M_P_1_IGN_ABILITY,"La capacité est activée lorsqu'une cible est attaquée par le possesseur.\nLe possesseur de cette capacité ignore les capacités suivantes:");
        f_.add(M_P_1_IGN_FOE_SATIS_BOOST,"La capacité est activée lorsque le possesseur attaque.\nLa capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nSi le possesseur est cible d'une attaque, les boosts des statistiques d'attaque pour le lanceur de l'attaque sont ignorés.Si le possesseur est lanceur d'une attaque, les boosts des statistiques de défense pour la cible de l'attaque sont ignorés.");
        f_.add(M_P_1_IGN_FOE_TEAM_MOVE,"La capacité est activée lorsque le possesseur attaque.\nLes attaques actives concernant toute l'équipe adverse du possesseur de cette capacité sont ignorées, ce sont les suivantes:");
        f_.add(M_P_1_IMMU_ABILITY,"La capacité est activée en fin de tour du combat.\nLe possesseur de cette capacité ne subit pas de dégâts liés aux capacité suivantes:");
        f_.add(M_P_1_IMMU_ALLY_FROM_MOVES,"La capacité immunise l'équipe du possesseur aux attaques suivantes:");
        f_.add(M_P_1_IMMU_CH,"La capacité est activée lorsque celle d'un autre combattant est en cours d'action.\nLe possesseur de cette capacité ne peut pas subir de coup critique.");
        f_.add(M_P_1_IMMU_DAMAGE_ALLY_MOVES,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant.\nLe possesseur de cette capacité ne subit pas de dégâts causés par une attaque utilisée par un partenaire.");
        f_.add(M_P_1_IMMU_DAMAGE_RECOIL,"La capacité est activée après l'attaque du possesseur.\nLe possesseur de cette capacité ne subit pas de dégâts de recul par une de ses attaques.");
        f_.add(M_P_1_IMMU_DAMAGE_TRAPPING_MOVES,"La capacité est activée en fin de tour du combat.\nLe possesseur de cette capacité n'est pas piégé par les attaques piégeantes.");
        f_.add(M_P_1_IMMU_LOW_STAT,"La capacité est activée lorsqu'une des statistiques du possesseur baisse.\nLes statistiques suivantes du possesseur de cette capacité ne peuvent pas être baissée:");
        f_.add(M_P_1_IMMU_LOW_STATIS_TYPES,"La capacité est activée lorsqu'une des statistiques d'un membre de l'équipe du possesseur baisse.\nSi une attaque ne faisant que de baisser une des ces statistiques est lancée contre ce possesseur, elle échoue.\nVoici les statistiques ne pouvant pas être baissées en fonction du type:");
        f_.add(M_P_1_IMMU_LOW_STATIS_TYPES_KEY,"Type");
        f_.add(M_P_1_IMMU_LOW_STATIS_TYPES_VALUE,"Statistique ne pouvant pas être baissée");
        f_.add(M_P_1_IMMU_LOW_STAT_AFF,"La capacité est activée lorsqu'une des statistiques du possesseur baisse.\nVoici les statistiques ne pouvant pas être baissées en fonction du statut:");
        f_.add(M_P_1_IMMU_LOW_STAT_AFF_KEY, STATUT);
        f_.add(M_P_1_IMMU_LOW_STAT_AFF_VALUE,"Statistique ne pouvant pas être baissée");
        f_.add(M_P_1_IMMU_MOVES,"La capacité immunise son possesseur aux attaques suivantes:");
        f_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant.\nVoici les types des attaques auxquelles le possesseur de cette capacité est immunisé en fonction du climat actif:");
        f_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_KEY, CLIMAT_ACTIF);
        f_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_NO, AUCUN);
        f_.add(M_P_1_IMMU_MOVE_TYPES_WEATHER_TYPE,"Type");
        f_.add(M_P_1_IMMU_RECHARGE_ROUND,"La capacité est activée après l'attaque du possesseur.\nLe possesseur de cette capacité n'a pas besoin de recharger après un lancer d'attaque demandant un tour de rechargement:");
        f_.add(M_P_1_IMMU_STATUS,"La capacité est activée lorsque le possesseur est visé par une altération de statut.\nVoici les statuts auxquels le possesseur de cette capacité est immunisé en fonction du climat actif:");
        f_.add(M_P_1_IMMU_STATUS_BEGIN_ROUND,"La capacité est activée au début du tour du possesseur.\nLa possibilité du possesseur de cette capacité pour attaquer n'est pas altérée par les statuts suivants:");
        f_.add(M_P_1_IMMU_STATUS_KEY, CLIMAT_ACTIF);
        f_.add(M_P_1_IMMU_STATUS_NO, AUCUN);
        f_.add(M_P_1_IMMU_STATUS_STATUS, STATUT);
        f_.add(M_P_1_IMMU_STATUS_TYPE,"La capacité est activée lorsqu'un membre de l'équipe du possesseur est visé par une altération de statut.\nVoici les statuts auxquels l'équipe du possesseur de cette capacité est immunisé en fonction des types possédés par les partenaires du possesseur:");
        f_.add(M_P_1_IMMU_STATUS_TYPE_KEY,"Type");
        f_.add(M_P_1_IMMU_STATUS_TYPE_STATUS, STATUT);
        f_.add(M_P_1_IMMU_SUFFERED_DAMAGE_LOW_EFF,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nLe possesseur de cette capacité est immunisé aux attaques peu efficaces contre lui.");
        f_.add(M_P_1_IMMU_WEATHERS,"La capacité immunise son possesseur aux climats suivants:");
        f_.add(M_P_1_INCREASED_PRIO,"La capacité est activée au moment de classer les lanceurs par ordre de lancer.\nVoici la variation de priorité des attaques en fonction leur catégorie:");
        f_.add(M_P_1_INCREASED_PRIO_CAT,"Catégorie de l'attaque");
        f_.add(M_P_1_INCREASED_PRIO_INC,"Variation de la priorité de l'attaque");
        f_.add(M_P_1_INCREASED_PRIO_TYPE,"La capacité est activée au moment de classer les lanceurs par ordre de lancer.\nVoici la variation de priorité des attaques en fonction leurs types:");
        f_.add(M_P_1_INCREASED_PRIO_TYPE_INC,"Variation de la priorité de l'attaque");
        f_.add(M_P_1_INCREASED_PRIO_TYPE_KEY,"Type de l'attaque");
        f_.add(M_P_1_INDEX,"Revenir à l'indexe");
        f_.add(M_P_1_INFLICTING_DAMAGE_INSTEAD_SUFFERING,"La capacité est activée lorsqu'un adversaire tente d'absorber les pv du possesseur.\nSi le possesseur de cette capacité a subi les dégâts d'une attaque absorbant des dégâts et que le lanceur de l'attaque absorbant des dégâts est censé récupérer de la vie, il perd la vie qu'il aurait dû récupérer.De même pour une attaque comme VAMPIGRAINE ou un objet absorbant des pv.");
        f_.add(M_P_1_LEARNT_PK,"Les pokémon pouvant posséder la capacité {0} sont les suivants:");
        f_.add(M_P_1_LOW_STAT_FOE_HIT,"La capacité est activée lorsque le possesseur inflige des dégâts.\nChaque cible ayant subi des dégâts de l'attaque du possesseur a ses statistiques qui varient de la façon suivante;");
        f_.add(M_P_1_LOW_STAT_FOE_HIT_BOOST, BOOST);
        f_.add(M_P_1_LOW_STAT_FOE_HIT_KEY, STATISTIQUE);
        f_.add(M_P_1_MAX_HP_FOR_USING_BERRY,"La capacité est activée lorsque le possesseur va utiliser une baie.\nLorsque le possesseur a au plus {0} de sa vie totale, il utilise sa baie.");
        f_.add(M_P_1_MAX_HP_FOR_USING_BERRY_INTRO,"Maximum de vie totale du possesseur pour utiliser sa baie:");
        f_.add(M_P_1_MAX_STATISTICS_IF_CH,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nSi le possesseur de cette capacité subit un coup critique, alors les statistiques suivantes du possesseur de cette capacité deviennent maximales:");
        f_.add(M_P_1_MULT_ALLY_DAMAGE,"La capacité est activée lorsque le possesseur attaque.\nLes dégâts causés par une attaque lancée par un partenaire du possesseur de cette capacité sur le possesseur de cette capacité sont multipliés par {0}.");
        f_.add(M_P_1_MULT_ALLY_DAMAGE_INTRO,"Les dégâts causés par une attaque lancée par un partenaire du possesseur de cette capacité sur le possesseur de cette capacité sont multipliés par:");
        f_.add(M_P_1_MULT_DAMAGE,"Les dégâts des attaques sont multipliés par{0}.");
        f_.add(M_P_1_MULT_DAMAGE_CH,"La capacité est activée lorsque le possesseur attaque.\nLa valeur des coups critiques infligés par le possesseur de cette capacité est multipliée par {0}.");
        f_.add(M_P_1_MULT_DAMAGE_CH_INTRO,"La valeur des coups critiques infligés par le possesseur de cette capacité est multipliée par:");
        f_.add(M_P_1_MULT_DAMAGE_FOE,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nVoici les coefficients des dégâts causés par une attaque en fonction de son type sur le possesseur de cette capacité:");
        f_.add(M_P_1_MULT_DAMAGE_FOE_RATE, COEFFICIENT);
        f_.add(M_P_1_MULT_DAMAGE_FOE_TYPE,"Type d'attaque");
        f_.add(M_P_1_MULT_EVT_RATE_CH,"La capacité est activée lorsque le possesseur attaque.\nLa probabilité des coups critiques infligés par le possesseur de cette capacité est multiplié par {0}.");
        f_.add(M_P_1_MULT_EVT_RATE_CH_INTRO,"La probabilité des coups critiques infligés par le possesseur de cette capacité est multiplié par:");
        f_.add(M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER,"La capacité est activée lorsque le possesseur attaque.\nLa probabilité des effets secondaires des attaques utilisées par le possesseur de cette capacité est multiplié par {0}.");
        f_.add(M_P_1_MULT_EVT_RATE_SEC_EFFECT_OWNER_INTRO,"La probabilité des effets secondaires des attaques utilisées par le possesseur de cette capacité est multiplié par:");
        f_.add(M_P_1_MULT_POWER,"La puissance des attaques est multipliée par{0}.");
        f_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL,"La capacité est activée lorsqu'un pokemon utilise une attaque offensive.\nLa puissance des attaques est multipliée de la façon suivante:");
        f_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_MOVE,"Attaque");
        f_.add(M_P_1_MULT_POWER_MOVES_TYPES_GLOBAL_RATE,"Coefficient de puissance");
        f_.add(M_P_1_MULT_STAB,"La capacité est activée lorsque le possesseur attaque.\nSi le possesseur de cette capacité utilise une attaque dont le type est un de ses types, alors le STAB est multiplié par {0}.");
        f_.add(M_P_1_MULT_STAB_INTRO,"Si le possesseur de cette capacité utilise une attaque dont le type est un de ses types, alors le STAB est multiplié par:");
        f_.add(M_P_1_MULT_STAT,"Les statistiques du porteur sont multipliées de la façon suivante:");
        f_.add(M_P_1_MULT_STAT_ALLY,"Les statistiques des membres de l'équipe du possesseur sont multipliées de la façon suivante:");
        f_.add(M_P_1_MULT_STAT_ALLY_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_ALLY_RATE, COEFFICIENT);
        f_.add(M_P_1_MULT_STAT_CAT,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant.\nVoici les coefficients des statistiques du possesseur de la capacité en fonction de la catégorie de l'attaque subie:");
        f_.add(M_P_1_MULT_STAT_CAT_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_CAT_KEY_SEC,"Catégorie de l'attaque subie");
        f_.add(M_P_1_MULT_STAT_CAT_RATE, COEFFICIENT);
        f_.add(M_P_1_MULT_STAT_DAMAGE_CAT,"La capacité est activée lorsque le possesseur subit des dégâts d'une attaque utilisée directement par un combattant.\nVoici la variation de crans des statistiques du possesseur de la capacité en fonction de la catégorie de l'attaque subie:");
        f_.add(M_P_1_MULT_STAT_DAMAGE_CAT_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_DAMAGE_CAT_KEY_SEC,"Catégorie de l'attaque subie");
        f_.add(M_P_1_MULT_STAT_DAMAGE_CAT_VAR, VARIATION_DE_CRAN);
        f_.add(M_P_1_MULT_STAT_DAMAGE_TYPE,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant.\nVoici la variation de crans des statistiques du possesseur de la capacité en fonction du type de l'attaque subie:");
        f_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_KEY_SEC,"Type de l'attaque subie");
        f_.add(M_P_1_MULT_STAT_DAMAGE_TYPE_VAR, VARIATION_DE_CRAN);
        f_.add(M_P_1_MULT_STAT_IF_KO_FOE,"La capacité est activée après l'attaque du possesseur si la cible de l'attaque du possesseur tombe KO.\nVoici la variation de crans des statistiques du possesseur de cette capacité après avoir mis KO une cible:");
        f_.add(M_P_1_MULT_STAT_IF_KO_FOE_BOOST,"Variation du cran affecté");
        f_.add(M_P_1_MULT_STAT_IF_KO_FOE_KEY,"Statistique affectée");
        f_.add(M_P_1_MULT_STAT_IF_LOW_STAT,"La capacité est activée lorsqu'une des statistiques du possesseur baisse.\nVoici les variations des crans des statistiques lorsqu'une des statistiques du possesseur de cette capacité baisse:");
        f_.add(M_P_1_MULT_STAT_IF_LOW_STAT_BOOST,"Variation du cran affecté");
        f_.add(M_P_1_MULT_STAT_IF_LOW_STAT_KEY,"Statistique affectée");
        f_.add(M_P_1_MULT_STAT_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_RANK,"A l'entrée du porteur, les crans des statistiques du porteur varient de la façon suivante:");
        f_.add(M_P_1_MULT_STAT_RANK_BOOST,"Variation du cran de la statistique");
        f_.add(M_P_1_MULT_STAT_RANK_KEY, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_RATE, COEFFICIENT);
        f_.add(M_P_1_MULT_STAT_STATUS_RANK,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant.\nVoici la variation des crans des statistiques du possesseur de la capacité en fonction du statut:");
        f_.add(M_P_1_MULT_STAT_STATUS_RANK_KEY, STATUT);
        f_.add(M_P_1_MULT_STAT_STATUS_RANK_KEY_SEC, STATISTIQUE);
        f_.add(M_P_1_MULT_STAT_STATUS_RANK_VAR, VARIATION_DE_CRAN);
        f_.add(M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF,"La capacité est activée lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\nLes dégâts causés par une attaque super efficace sur le possesseur de cette capacité sont multipliés par {0}.");
        f_.add(M_P_1_MULT_SUFFERED_DAMAGE_SUPER_EFF_INTRO,"Les dégâts causés par une attaque super efficace sur le possesseur de cette capacité sont multipliés par:");
        f_.add(M_P_1_MULT_VAR_BOOST,"La capacité est activée lorsqu''une des statistiques du possesseur varie.\nLa variation de cran de boost de statistiques (y compris la précision et l''esquive) est multipliée par {0}.");
        f_.add(M_P_1_MULT_VAR_BOOST_INTRO,"La variation de cran de boost de statistiques (y compris la précision et l'esquive) est multipliée par:");
        f_.add(M_P_1_MUMY,"La capacité est activée lorsque le possesseur utilise une attaque de contact.\nLa cible de l'attaque lancée par le possesseur prend la capacité du possesseur, jusqu'au retrait de la cible.");
        f_.add(M_P_1_MAME,"Nom");
        f_.add(M_P_1_NB_HITS,"La capacité est activée lorsque le possesseur attaque.\nPour une attaque pouvant infliger plusieurs coups pendant le tour d'un lanceur, le nombre de coups est maximal pour un possesseur de cette capacité.");
        f_.add(M_P_1_NB_USED_PP,"La capacité est activée lorsque le possesseur est attaqué directement par un combattant adverse.\nSi une attaque réussit et affecte le possesseur de cette capacité et si le lanceur de l''attaque ne fait pas partie de la même équipe que le possesseur de cette capacité, alors le nombre de PP supplémentaires utilisés par le lanceur de l''attaque sur le possesseur de cette capacité est multiplié par le nombre de cibles adverses ayant cette capacité facteur de {0}.");
        f_.add(M_P_1_NB_USED_PP_INTRO,"Si une attaque réussit et affecte le possesseur de cette capacité et si le lanceur de l'attaque ne fait pas partie de la même équipe que le possesseur de cette capacité, alors le nombre de PP supplémentaires utilisés par le lanceur de l'attaque sur le possesseur de cette capacité est multiplié par le nombre de cibles adverses ayant cette capacité facteur de:");
        f_.add(M_P_1_PLATE,"Les effets d'une plaque s'active sur le possesseur.");
        f_.add(M_P_1_RECOIL_DAMAGE_FOE,"La capacité est activée lorsque le possesseur inflige des dégâts sur un combattant.\nLorsque le possesseur de cette capacité inflige des dégâts d''une attaque directe à une cible, celle-ci perd {0} de ses pv max.");
        f_.add(M_P_1_RECOIL_DAMAGE_FOE_INTRO,"Lorsque le possesseur de cette capacité inflige des dégâts d'une attaque directe à une cible, celle-ci perd le taux suivant de ses pv max:");
        f_.add(M_P_1_RECOIL_DAMAGE_FOE_BY_KO_OWNER,"La capacité est activée lorsque le possesseur tombe KO par une attaque utilisée directement par un combattant.\nLorsque le possesseur de cette capacité subit des dégâts par une attaque directe et si le possesseur de cette capacité est KO par cette attaque directe, alors le lanceur de l''attaque directe perd {0} des pv max du lanceur de l''attaque directe.");
        f_.add(M_P_1_REVERSE_EFFECTS_POWER_GLOBAL,"Les effets déclenchés par une capacité multipliant les puissances d'attaques à l'échelle globale sont inversés. Ces capacités sont les suivantes:");
        f_.add(M_P_1_SINGLE_STATUS,"La capacité est activée lorsque le possesseur attaque directement un combattant.\nSi une attaque directe est utilisée et réussie par le possesseur de cette capacité et si le possesseur n'est pas KO, la loi des statuts à affecter à la cible de l'attaque est la suivante:");
        f_.add(M_P_1_SINGLE_STATUS_KEY, STATUT);
        f_.add(M_P_1_SINGLE_STATUS_NO,"Aucun statut");
        f_.add(M_P_1_SINGLE_STATUS_RATE,"Probabilité");
        f_.add(M_P_1_SLOWING,"La capacité est activée au moment de classer les lanceurs par ordre de lancer.\nLe possesseur de cette capacité attaque en dernier pour une même priorité d'attaque et un port d'objet concernant l'ordre d'attaque équivalent à un autre combattant.");
        f_.add(M_P_1_TAKE_ITEM_DAMAGING_MOVE,"La capacité est activée lorsque le possesseur inflige des dégâts à une cible.\nAprés que les dégâts soient infligé à une cible, le possesseur prend si possible l'objet de la cible.");
        f_.add(M_P_1_TITLE,"Données sur la capacité {0}");
        f_.add(M_P_1_TYPE_FOR_MOVES,"La capacité est activée lorsque le possesseur attaque.\nLe type de toutes les attaques utilisé par le possesseur de cette capacité est {0}.");
        return f_;
    }
}