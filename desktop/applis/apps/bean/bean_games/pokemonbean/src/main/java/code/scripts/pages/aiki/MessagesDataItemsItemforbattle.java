package code.scripts.pages.aiki;

import code.sml.util.*;

public final class MessagesDataItemsItemforbattle {
    public static final String M_P_28_AGAINST_EVO="against_evo";
    public static final String M_P_28_ATTACK_FIRST="attack_first";
    public static final String M_P_28_ATTACK_FIRST_RANDOM="attack_first_random";
    public static final String M_P_28_ATTACK_LAST="attack_last";
    public static final String M_P_28_ATTACK_SOON="attack_soon";
    public static final String M_P_28_BOOST_EXP="boost_exp";
    public static final String M_P_28_BOOST_SUPER_EFF="boost_super_eff";
    public static final String M_P_28_BOOST_SUPER_EFF_BOOST="boost_super_eff_boost";
    public static final String M_P_28_BOOST_SUPER_EFF_STAT="boost_super_eff_stat";
    public static final String M_P_28_BOOST_TYPES="boost_types";
    public static final String M_P_28_BOOST_TYPES_BOOST="boost_types_boost";
    public static final String M_P_28_BOOST_TYPES_STAT="boost_types_stat";
    public static final String M_P_28_CANCEL_IMMU_TYPE="cancel_immu_type";
    public static final String M_P_28_DAMAGE_RECOIL="damage_recoil";
    public static final String M_P_28_DRAINED_HP="drained_hp";
    public static final String M_P_28_ENDROUND="endRound";
    public static final String M_P_28_FAIL="fail";
    public static final String M_P_28_FAIL_REASON="fail_reason";
    public static final String M_P_28_FAIL_STATUS="fail_status";
    public static final String M_P_28_FORMULA="formula";
    public static final String M_P_28_IMMU_LOW_STATIS="immu_low_statis";
    public static final String M_P_28_IMMU_MOVES="immu_moves";
    public static final String M_P_28_IMMU_STATUS="immu_status";
    public static final String M_P_28_IMMU_TYPES="immu_types";
    public static final String M_P_28_IMMU_WEATHERS="immu_weathers";
    public static final String M_P_28_INCREASING_GLOBAL="increasing_global";
    public static final String M_P_28_INCREASING_GLOBAL_MOVE="increasing_global_move";
    public static final String M_P_28_INCREASING_GLOBAL_NB="increasing_global_nb";
    public static final String M_P_28_INCREASING_TEAM="increasing_team";
    public static final String M_P_28_INCREASING_TEAM_MOVE="increasing_team_move";
    public static final String M_P_28_INCREASING_TEAM_NB="increasing_team_nb";
    public static final String M_P_28_INCREASING_TRAP="increasing_trap";
    public static final String M_P_28_INCREASING_TRAP_MOVE="increasing_trap_move";
    public static final String M_P_28_INCREASING_TRAP_NB="increasing_trap_nb";
    public static final String M_P_28_MULT_DAMAGE="mult_damage";
    public static final String M_P_28_MULT_DRAINED_HP="mult_drained_hp";
    public static final String M_P_28_MULT_POWER="mult_power";
    public static final String M_P_28_MULT_STAT="mult_stat";
    public static final String M_P_28_MULT_STAT_KEY="mult_stat_key";
    public static final String M_P_28_MULT_STAT_POKEMON_RANK="mult_stat_pokemon_rank";
    public static final String M_P_28_MULT_STAT_POKEMON_RANK_NAME="mult_stat_pokemon_rank_name";
    public static final String M_P_28_MULT_STAT_POKEMON_RANK_STAT="mult_stat_pokemon_rank_stat";
    public static final String M_P_28_MULT_STAT_POKEMON_RANK_VAR="mult_stat_pokemon_rank_var";
    public static final String M_P_28_MULT_STAT_RANK="mult_stat_rank";
    public static final String M_P_28_MULT_STAT_RANK_BOOST="mult_stat_rank_boost";
    public static final String M_P_28_MULT_STAT_RANK_KEY="mult_stat_rank_key";
    public static final String M_P_28_MULT_STAT_RATE="mult_stat_rate";
    public static final String M_P_28_MULT_TRAPPING="mult_trapping";
    public static final String M_P_28_MULT_WIN_EV="mult_win_ev";
    public static final String M_P_28_MULT_WIN_EXP="mult_win_exp";
    public static final String M_P_28_MULT_WIN_HAPPINESS="mult_win_happiness";
    public static final String M_P_28_MULT_WIN_MONEY="mult_win_money";
    public static final String M_P_28_PROTECT_KO="protect_ko";
    public static final String M_P_28_PROTECT_KO_ALL="protect_ko_all";
    public static final String M_P_28_REPEL="repel";
    public static final String M_P_28_SYNCHRO_STATUS="synchro_status";
    public static final String M_P_28_TYPES_PK="types_pk";
    public static final String M_P_28_TYPES_PK_2="types_pk_2";
    public static final String M_P_28_WIN_EV="win_ev";
    public static final String M_P_28_WIN_EV_STAT="win_ev_stat";
    public static final String M_P_28_WIN_EV_VALUE="win_ev_value";
    public static final String NEW_NUMBER_OF_ROUNDS_OF_EFFECTS_AT_THE_END_OF_ROUND_OF_FIGHT = "New number of rounds of effects at the end of round of fight";
    public static final String NOUVEAU_NOMBRE_DE_TOURS_DES_EFFETS_DE_FIN_DE_TOUR = "Nouveau nombre de tours des effets de fin de tour";
    public static final String BOOST = "Boost";
    public static final String STATISTIC = "Statistic";
    public static final String STATISTIQUE = "Statistique";

    private MessagesDataItemsItemforbattle(){
    }
    public static TranslationsFile en(){
        TranslationsFile e_=new TranslationsFile();
        e_.add(M_P_28_AGAINST_EVO,"The owner of the item cannot evolve.");
        e_.add(M_P_28_ATTACK_FIRST,"If the owner of the item has to use a move after a pokemon not owning any item changing the order of using a move, then the owner of the item uses a move before.");
        e_.add(M_P_28_ATTACK_FIRST_RANDOM,"If the owner of the item has to use a move after un pokemon not owning any item changing the order of using a move, then with a rate of {0}, the owner of the item uses a move before.");
        e_.add(M_P_28_ATTACK_LAST,"The item is enabled at the moment of sorting users by order of using.\nThe owner of the item uses a move after a pokemon not having this item.");
        e_.add(M_P_28_ATTACK_SOON,"The item is enabled at the beginning of the round of the owner.\nWhile the using of a move demanding a round for preparing, the owner of the item uses a move without preparing.");
        e_.add(M_P_28_BOOST_EXP,"The owner of the item, by supposing it has not achieved the maximum level, wins 1 / (1 + number of owners of the item) * full experience number .");
        e_.add(M_P_28_BOOST_SUPER_EFF,"While the owner of the item is targetted by a super effective move, its boosts vary by the following way:");
        e_.add(M_P_28_BOOST_SUPER_EFF_BOOST, BOOST);
        e_.add(M_P_28_BOOST_SUPER_EFF_STAT, STATISTIC);
        e_.add(M_P_28_BOOST_TYPES,"While the owner of the item is targetted by one of the following types, its boosts vary in function of types of the move which targets this owner:");
        e_.add(M_P_28_BOOST_TYPES_BOOST, BOOST);
        e_.add(M_P_28_BOOST_TYPES_STAT, STATISTIC);
        e_.add(M_P_28_CANCEL_IMMU_TYPE,"The item is enabled while the owner uses a move.\nThe owner of the item can target foe targets having to be protected (by type, by move, by ability or by item) from the move of the owner of the item.");
        e_.add(M_P_28_DAMAGE_RECOIL,"The item is enabled while the owner inflicts damage from a move used against a target.\nIf the owner of the item is targetted by a direct move, then the user of the direct move suffers {0} of the max hp of the user.");
        e_.add(M_P_28_DRAINED_HP,"The item is enabled while the owner uses a move.\nWhile the use of a damaging move by the owner of the item against a foe, the restored life of the owner of the item is {0} of inflicted damage against the foe.");
        e_.add(M_P_28_ENDROUND,"See the effect of end of round");
        e_.add(M_P_28_FAIL,"The affectation of status varies in function the following formula:");
        e_.add(M_P_28_FAIL_REASON,"Sufficient condition");
        e_.add(M_P_28_FAIL_STATUS,"Status");
        e_.add(M_P_28_FORMULA,"{0}");
        e_.add(M_P_28_IMMU_LOW_STATIS,"The item is enabled while one of the statistics of the owner lowers.\nIf a set of statistics of the owner of the item has to be lowered, then the statistics will not be lowered.");
        e_.add(M_P_28_IMMU_MOVES,"The item protects its owner against the following moves:");
        e_.add(M_P_28_IMMU_STATUS,"The item is enabled while the owner is targetted by a changement of status.\nThe owner of the item cannot have one of the following status:");
        e_.add(M_P_28_IMMU_TYPES,"The item is enabled while the owner suffers damage from a move directly used by a fighter.\nThe owner of the item is protected from moves with the following types:");
        e_.add(M_P_28_IMMU_WEATHERS,"The item protects its owner against the following weather moves:");
        e_.add(M_P_28_INCREASING_GLOBAL,"The item is enabled at the end of round of fight.\nThe number of rounds of effects of global moves used by the owner of the item changes by the following way:");
        e_.add(M_P_28_INCREASING_GLOBAL_MOVE,"Global move");
        e_.add(M_P_28_INCREASING_GLOBAL_NB, NEW_NUMBER_OF_ROUNDS_OF_EFFECTS_AT_THE_END_OF_ROUND_OF_FIGHT);
        e_.add(M_P_28_INCREASING_TEAM,"The item is enabled at the end of round of fight.\nThe number of rounds of effects of moves used by a member of the team of the owner of the item changes by the following way:");
        e_.add(M_P_28_INCREASING_TEAM_MOVE,"Move");
        e_.add(M_P_28_INCREASING_TEAM_NB, NEW_NUMBER_OF_ROUNDS_OF_EFFECTS_AT_THE_END_OF_ROUND_OF_FIGHT);
        e_.add(M_P_28_INCREASING_TRAP,"The item is enabled at the end of round of fight.\nThe number of rounds of effects of trapping moves used by the owner of the item changes by the following way:");
        e_.add(M_P_28_INCREASING_TRAP_MOVE,"Trapping move");
        e_.add(M_P_28_INCREASING_TRAP_NB, NEW_NUMBER_OF_ROUNDS_OF_EFFECTS_AT_THE_END_OF_ROUND_OF_FIGHT);
        e_.add(M_P_28_MULT_DAMAGE,"Damage of moves is multiplied by{0}.");
        e_.add(M_P_28_MULT_DRAINED_HP,"The item is enabled while the owner attempts to absorb the hp of its foe.\nThe drained hp are multiplied by {0}.");
        e_.add(M_P_28_MULT_POWER,"The power of moves is multiplied by {0}.");
        e_.add(M_P_28_MULT_STAT,"The statistics of the owner are multiplied by the following way:");
        e_.add(M_P_28_MULT_STAT_KEY, STATISTIC);
        e_.add(M_P_28_MULT_STAT_POKEMON_RANK,"While sending the owner, the levels of its statistics vary by the following way:");
        e_.add(M_P_28_MULT_STAT_POKEMON_RANK_NAME,"Name of the owner");
        e_.add(M_P_28_MULT_STAT_POKEMON_RANK_STAT, STATISTIC);
        e_.add(M_P_28_MULT_STAT_POKEMON_RANK_VAR,"Variation of level");
        e_.add(M_P_28_MULT_STAT_RANK,"While sending the owner, the levels of statistics of the owner vary by the following way:");
        e_.add(M_P_28_MULT_STAT_RANK_BOOST,"Variation of the level of the statistic");
        e_.add(M_P_28_MULT_STAT_RANK_KEY, STATISTIC);
        e_.add(M_P_28_MULT_STAT_RATE,"Rate");
        e_.add(M_P_28_MULT_TRAPPING,"Damage at the end of the round inflicted by trapping moves used by the owner of the item are multiplied by {0}.");
        e_.add(M_P_28_MULT_WIN_EV,"The winning of ev of the owner of the item is multiplied by {0}.");
        e_.add(M_P_28_MULT_WIN_EXP,"The winning of experience of the owner of the item is multiplied by{0}.");
        e_.add(M_P_28_MULT_WIN_HAPPINESS,"The winning of happiness of the owner of the item is multiplied by {0}.");
        e_.add(M_P_28_MULT_WIN_MONEY,"At the end of fight, the winning is multiplied by {0}.");
        e_.add(M_P_28_PROTECT_KO,"The item is enabled while the owner suffers damage from a move used directly used by a fighter.\nThe owner of the item keeps {0} hp if it is to fall KO.");
        e_.add(M_P_28_PROTECT_KO_ALL,"The item is enabled while the owner suffers damage from a move directly used by a fighter.\nThe owner of the item keeps {0} hp if it is to fall KO and if it had all its hp.");
        e_.add(M_P_28_REPEL,"The item repels wild pokemon until the item is no longer held.");
        e_.add(M_P_28_SYNCHRO_STATUS,"If the owner of the item suffers a status by an other pokemon and if this other pokemon can have one of the previous status, then this other pokemon suffers by one of the following status:");
        e_.add(M_P_28_TYPES_PK,"The abilities, in the case when the types of the owner of this item can change, are the following:");
        e_.add(M_P_28_TYPES_PK_2,"In the possible case when the owner has one of the preceding abilities, the owner takes the types:");
        e_.add(M_P_28_WIN_EV,"Here is the won ev of statistics after knocking out a set of pokemon:");
        e_.add(M_P_28_WIN_EV_STAT, STATISTIC);
        e_.add(M_P_28_WIN_EV_VALUE,"Win of ev");
        return e_;
    }
    public static TranslationsFile fr(){
        TranslationsFile f_=new TranslationsFile();
        f_.add(M_P_28_AGAINST_EVO,"Le porteur de l''objet ne peut pas évoluer.");
        f_.add(M_P_28_ATTACK_FIRST,"Si le porteur de l''objet est censé attaquer après un pokémon ne portant d''objet changeant l''ordre d''attaque, alors le porteur de l''objet attaque avant.");
        f_.add(M_P_28_ATTACK_FIRST_RANDOM,"Si le porteur de l''objet est censé attaquer après un pokémon ne portant d''objet changeant l''ordre d''attaque, alors avec une probabilité de {0}, le porteur de l''objet attaque avant.");
        f_.add(M_P_28_ATTACK_LAST,"L''objet est activé au moment de classer les lanceurs par ordre de lancer.\nLe porteur de l''objet attaque après un pokémon ne portant cet objet.");
        f_.add(M_P_28_ATTACK_SOON,"L''objet est activé au début du tour du possesseur.\nLors de l''utilisation d''une attaque demandant un tour, le porteur de l''objet attaque sans charger.");
        f_.add(M_P_28_BOOST_EXP,"Le porteur de l''objet en supposant qu''il n''ait pas atteint le niveau maximal, gagne 1 / (1 + nombre de porteurs de l''objet) * le nombre total d''expérience.");
        f_.add(M_P_28_BOOST_SUPER_EFF,"Lorsque le porteur de l''objet est touché par une attaque super efficace, ses boosts varient de la façon suivante:");
        f_.add(M_P_28_BOOST_SUPER_EFF_BOOST, BOOST);
        f_.add(M_P_28_BOOST_SUPER_EFF_STAT, STATISTIQUE);
        f_.add(M_P_28_BOOST_TYPES,"Lorsque le porteur de l''objet est touché par un des types suivants, ses boosts varient en fonction des types de l''attaque qui touche ce possesseur:");
        f_.add(M_P_28_BOOST_TYPES_BOOST, BOOST);
        f_.add(M_P_28_BOOST_TYPES_STAT, STATISTIQUE);
        f_.add(M_P_28_CANCEL_IMMU_TYPE,"L''objet est activé lorsque le possesseur attaque.\nLe porteur de l''objet peut toucher des cibles adverses censées être immunisées (par type, par attaque, par capacité ou par objet) à l''attaque du porteur de l''objet.");
        f_.add(M_P_28_DAMAGE_RECOIL,"L''objet est activée lorsque le possesseur inflige les dégâts d''une attaque utilisée sur une cible.\nSi le porteur de l''objet est touché par une attaque directe, alors le lanceur de l''attaque directe subit {0} des pv max du lanceur de cette attaque.");
        f_.add(M_P_28_DRAINED_HP,"L''objet est activé lorsque le possesseur attaque.\nLors de l''utilisation d''une attaque offensive par le porteur de l''objet contre un adversaire, la vie restaurée du porteur de l''objet vaut {0} des dégâts infligés à l''adversaire.");
        f_.add(M_P_28_ENDROUND,"Voir l''effet de fin de tour");
        f_.add(M_P_28_FAIL,"L''affectation des statuts varie selon les formules suivantes:");
        f_.add(M_P_28_FAIL_REASON,"Condition suffisante");
        f_.add(M_P_28_FAIL_STATUS,"Statut");
        f_.add(M_P_28_FORMULA,"{0}");
        f_.add(M_P_28_IMMU_LOW_STATIS,"L''objet est activé lorsqu''une des statistiques du possesseur baisse.\nSi un ensemble de statistiques du porteur de l''objet est censé être baissée, alors les statistiques en question ne seront pas baissées.");
        f_.add(M_P_28_IMMU_MOVES,"L''objet immunise son possesseur aux attaques suivantes:");
        f_.add(M_P_28_IMMU_STATUS,"L''objet est activé lorsque le possesseur est visé par une altération de statut.\nLe porteur de l''objet ne peut pas prendre un des statuts suivants:");
        f_.add(M_P_28_IMMU_TYPES,"L''objet est activé lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\nLe porteur de l''objet est immunisé aux attaques des types suivants:");
        f_.add(M_P_28_IMMU_WEATHERS,"L''objet immunise son possesseur aux climats suivants:");
        f_.add(M_P_28_INCREASING_GLOBAL,"L''objet est activé en fin de tour du combat.\nLe nombre de tours d''effets des attaques globales lancées par le porteur de l''objet change de la façon suivante:");
        f_.add(M_P_28_INCREASING_GLOBAL_MOVE,"Attaque globale");
        f_.add(M_P_28_INCREASING_GLOBAL_NB, NOUVEAU_NOMBRE_DE_TOURS_DES_EFFETS_DE_FIN_DE_TOUR);
        f_.add(M_P_28_INCREASING_TEAM,"L''objet est activé en fin de tour du combat.\nLe nombre de tours d''effets des attaques lancées par un membre de l''équipe du porteur de l''objet change de la façon suivante:");
        f_.add(M_P_28_INCREASING_TEAM_MOVE,"Attaque");
        f_.add(M_P_28_INCREASING_TEAM_NB, NOUVEAU_NOMBRE_DE_TOURS_DES_EFFETS_DE_FIN_DE_TOUR);
        f_.add(M_P_28_INCREASING_TRAP,"L''objet est activé en fin de tour du combat.\nLe nombre de tours d''effets des attaques piégeantes utilisées par le porteur de l''objet change de la façon suivante:");
        f_.add(M_P_28_INCREASING_TRAP_MOVE,"Attaque piégeante");
        f_.add(M_P_28_INCREASING_TRAP_NB, NOUVEAU_NOMBRE_DE_TOURS_DES_EFFETS_DE_FIN_DE_TOUR);
        f_.add(M_P_28_MULT_DAMAGE,"Les dégâts des attaques sont multipliés par{0}.");
        f_.add(M_P_28_MULT_DRAINED_HP,"L''objet est activé lorsque le possesseur tente d''absorber les pv de son adversaire.\nLes pv drainés sont multipliés par {0}.");
        f_.add(M_P_28_MULT_POWER,"La puissance des attaques est multipliée par: {0}.");
        f_.add(M_P_28_MULT_STAT,"Les statistiques du porteur sont multipliées de la façon suivante:");
        f_.add(M_P_28_MULT_STAT_KEY, STATISTIQUE);
        f_.add(M_P_28_MULT_STAT_POKEMON_RANK,"A l''entrée d''un porteur, les crans de ses statistiques varient de la façon suivante:");
        f_.add(M_P_28_MULT_STAT_POKEMON_RANK_NAME,"Nom du porteur");
        f_.add(M_P_28_MULT_STAT_POKEMON_RANK_STAT, STATISTIQUE);
        f_.add(M_P_28_MULT_STAT_POKEMON_RANK_VAR,"Variation du cran");
        f_.add(M_P_28_MULT_STAT_RANK,"A l''entrée du porteur, les crans des statistiques du porteur varient de la façon suivante:");
        f_.add(M_P_28_MULT_STAT_RANK_BOOST,"Variation du cran de la statistique");
        f_.add(M_P_28_MULT_STAT_RANK_KEY, STATISTIQUE);
        f_.add(M_P_28_MULT_STAT_RATE,"Coefficient");
        f_.add(M_P_28_MULT_TRAPPING,"Les dégâts de fin de tour causés par des attaques piégeantes utilisées par le porteur de l''objet sont multipliés par {0}.");
        f_.add(M_P_28_MULT_WIN_EV,"Le gain de ev du porteur de l''objet est multiplié par {0}.");
        f_.add(M_P_28_MULT_WIN_EXP,"Le gain d''expérience du porteur de l''objet est multiplié par{0}.");
        f_.add(M_P_28_MULT_WIN_HAPPINESS,"Le gain de bonheur du porteur de l''objet est multiplié par {0}.");
        f_.add(M_P_28_MULT_WIN_MONEY,"A la fin du combat, le gain est multiplié par {0}.");
        f_.add(M_P_28_PROTECT_KO,"L''objet est activé lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\nLe porteur de l''objet conserve {0} pv s''il est censé tomber KO.");
        f_.add(M_P_28_PROTECT_KO_ALL,"L''objet est activé lorsque le possesseur subit des dégâts d''une attaque utilisée directement par un combattant.\nLe porteur de l''objet conserve {0} pv s''il est censé tomber KO et s''il possédait tous ses pv.");
        f_.add(M_P_28_REPEL,"Repousse les pokémons sauvages jusqu''à ce que l''objet ne soit plus porté.");
        f_.add(M_P_28_SYNCHRO_STATUS,"Si le porteur de l''objet prend un statut par un autre pokémon et si cet autre pokémon peut prendre un des statuts précédents, alors cet autre pokémon est altéré d''un des statuts infligés suivants:");
        f_.add(M_P_28_TYPES_PK,"Les capacités, dans l''éventuel cas où les types peuvent changer, sont les suivantes:");
        f_.add(M_P_28_TYPES_PK_2,"Dans l''éventuel cas où le possesseur a une des capacités précédentes, le possesseur prend les types:");
        f_.add(M_P_28_WIN_EV,"Voici les ev gagnés des statistiques après avoir mis un ensemble de pokémons KO:");
        f_.add(M_P_28_WIN_EV_STAT, STATISTIQUE);
        f_.add(M_P_28_WIN_EV_VALUE,"Gain d''ev");
        return f_;
    }
}