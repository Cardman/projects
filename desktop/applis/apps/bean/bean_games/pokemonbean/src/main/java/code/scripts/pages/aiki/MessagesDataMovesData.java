package code.scripts.pages.aiki;

import code.sml.util.*;

public final class MessagesDataMovesData {
    public static final String M_P_35_ABILITIES_AFFECT="abilities_affect";
    public static final String M_P_35_ACCURACY_CONST="accuracy_const";
    public static final String M_P_35_ACCURACY_TITLE="accuracy_title";
    public static final String M_P_35_ACCURACY_VAR="accuracy_var";
    public static final String M_P_35_AFFECT_BY_MOVES="affect_by_moves";
    public static final String M_P_35_AFTER_USING="after_using";
    public static final String M_P_35_BY_GROWING="by_growing";
    public static final String M_P_35_BY_LEARN_HM="by_learn_hm";
    public static final String M_P_35_BY_LEARN_MT="by_learn_mt";
    public static final String M_P_35_BY_LEARN_TM="by_learn_tm";
    public static final String M_P_35_CANNOT_KO="cannot_ko";
    public static final String M_P_35_CAT_DIRECT_FALSE="cat_direct_false";
    public static final String M_P_35_CAT_DIRECT_TRUE="cat_direct_true";
    public static final String M_P_35_CAT_STATUS="cat_status";
    public static final String M_P_35_CHOSEN_TARGETS_ADJ_ADV="chosen_targets_ADJ_ADV";
    public static final String M_P_35_CHOSEN_TARGETS_ADJ_MULT="chosen_targets_ADJ_MULT";
    public static final String M_P_35_CHOSEN_TARGETS_ADJ_UNIQ="chosen_targets_ADJ_UNIQ";
    public static final String M_P_35_CHOSEN_TARGETS_ALLIE="chosen_targets_ALLIE";
    public static final String M_P_35_CHOSEN_TARGETS_ALLIES="chosen_targets_ALLIES";
    public static final String M_P_35_CHOSEN_TARGETS_ANY_FOE="chosen_targets_ANY_FOE";
    public static final String M_P_35_CHOSEN_TARGETS_AUTRE_UNIQ="chosen_targets_AUTRE_UNIQ";
    public static final String M_P_35_CHOSEN_TARGETS_GLOBALE="chosen_targets_GLOBALE";
    public static final String M_P_35_CHOSEN_TARGETS_LANCEUR="chosen_targets_LANCEUR";
    public static final String M_P_35_CHOSEN_TARGETS_PSEUDO_GLOBALE="chosen_targets_PSEUDO_GLOBALE";
    public static final String M_P_35_CHOSEN_TARGETS_TOUS_ADV="chosen_targets_TOUS_ADV";
    public static final String M_P_35_CHOSEN_TARGETS_UNIQUE_IMPORTE="chosen_targets_UNIQUE_IMPORTE";
    public static final String M_P_35_CONST_USER_CHOICE="const_user_choice";
    public static final String M_P_35_DELETED_STATUS="deleted_status";
    public static final String M_P_35_DISPARITION_TOUR="disparition_tour";
    public static final String M_P_35_EFFECTS_BEF_FIRST="effects_bef_first";
    public static final String M_P_35_EFFECTS_END_ROUND="effects_end_round";
    public static final String M_P_35_EFFECTS_FIRST="effects_first";
    public static final String M_P_35_EFFECTS_SEC="effects_sec";
    public static final String M_P_35_EFFECTS_SEC_DPT="effects_sec_dpt";
    public static final String M_P_35_EFFECTS_TITLE="effects_title";
    public static final String M_P_35_EFFECT_WHILE_NO_DAMAGE="effect_while_no_damage";
    public static final String M_P_35_END_ROUND_LINK="end_round_link";
    public static final String M_P_35_FORMULA="formula";
    public static final String M_P_35_GENERAL_MOVE="general_move";
    public static final String M_P_35_GROW_LEVEL="grow_level";
    public static final String M_P_35_IGN_VAR_ESQ_CIBLE_POS="ign_var_esq_cible_pos";
    public static final String M_P_35_IGN_VAR_PREC_LANCEUR_NEG="ign_var_prec_lanceur_neg";
    public static final String M_P_35_ITEM="item";
    public static final String M_P_35_ITEMS_AFFECT="items_affect";
    public static final String M_P_35_LEARNING_MOVE="learning_move";
    public static final String M_P_35_MOVES="moves";
    public static final String M_P_35_NB_ROUNDS="nb_rounds";
    public static final String M_P_35_OTHER_ITEM="other_item";
    public static final String M_P_35_OTHER_WEATHER="other_weather";
    public static final String M_P_35_PP="pp";
    public static final String M_P_35_PP_INTRO="pp_intro";
    public static final String M_P_35_PP_TITLE="pp_title";
    public static final String M_P_35_PREPA_ROUND_TITLE="prepa_round_title";
    public static final String M_P_35_PREPA_TOUR_CLIMAT="prepa_tour_climat";
    public static final String M_P_35_PREPA_TOUR_CLIMAT_INTRO="prepa_tour_climat_intro";
    public static final String M_P_35_PRIORITY="priority";
    public static final String M_P_35_PRIORITY_ZERO="priority_zero";
    public static final String M_P_35_PRIORITY_INTRO="priority_intro";
    public static final String M_P_35_RATE="rate";
    public static final String M_P_35_RECHARGE="recharge";
    public static final String M_P_35_RECHARGE_AB="recharge_ab";
    public static final String M_P_35_REPEATED_ROUND="repeated_round";
    public static final String M_P_35_REPEATED_ROUND_INTRO="repeated_round";
    public static final String M_P_35_REQUIERED_STATUS="requiered_status";
    public static final String M_P_35_SUCCESS_TITLE="success_title";
    public static final String M_P_35_SWITCH="switch";
    public static final String M_P_35_STOPPABLE_SOLO="stoppable_solo";
    public static final String M_P_35_STOPPABLE_MULTI="stoppable_multi";
    public static final String M_P_35_STOPPABLE_PRIO="stoppable_prio";
    public static final String M_P_35_TARGETS="targets";
    public static final String M_P_35_TARGETS_ADJ_ADV="targets_ADJ_ADV";
    public static final String M_P_35_TARGETS_ADJ_MULT="targets_ADJ_MULT";
    public static final String M_P_35_TARGETS_ADJ_UNIQ="targets_ADJ_UNIQ";
    public static final String M_P_35_TARGETS_ALLIE="targets_ALLIE";
    public static final String M_P_35_TARGETS_ALLIES="targets_ALLIES";
    public static final String M_P_35_TARGETS_ANY_FOE="targets_ANY_FOE";
    public static final String M_P_35_TARGETS_AUTRE_UNIQ="targets_AUTRE_UNIQ";
    public static final String M_P_35_TARGETS_GLOBALE="targets_GLOBALE";
    public static final String M_P_35_TARGETS_LANCEUR="targets_LANCEUR";
    public static final String M_P_35_TARGETS_PSEUDO_GLOBALE="targets_PSEUDO_GLOBALE";
    public static final String M_P_35_TARGETS_TITLE="targets_title";
    public static final String M_P_35_TARGETS_TOUS_ADV="targets_TOUS_ADV";
    public static final String M_P_35_TARGETS_UNIQUE_IMPORTE="targets_UNIQUE_IMPORTE";
    public static final String M_P_35_TITLE="title";
    public static final String M_P_35_TOUCHE_PK_DISPARUS="touche_pk_disparus";
    public static final String M_P_35_TYPE="type";
    public static final String M_P_35_TYPES="types";
    public static final String M_P_35_TYPESBOOST="typesBoost";
    public static final String M_P_35_TYPE_CAT="type_cat";
    public static final String M_P_35_TYPE_TITLE="type_title";
    public static final String M_P_35_TYPES_ITEM="types_item";
    public static final String M_P_35_TYPES_WEATHER="types_weather";
    public static final String M_P_35_WEATHER="weather";
    public static final String M_P_35_DAMAGING="damaging";
    public static final String M_P_35_RANK_INCREMENTING_NB_ROUND="rankIncrementNbRound";
    private MessagesDataMovesData(){
    }
    public static TranslationsFile en(){
        TranslationsFile e_=new TranslationsFile();
        e_.add(M_P_35_ABILITIES_AFFECT,"The abilities protecting the pokemon against this move are the following one:");
        e_.add(M_P_35_ACCURACY_CONST,"The accuracy of the move is {0}.");
        e_.add(M_P_35_ACCURACY_TITLE,"Accuracy of the move");
        e_.add(M_P_35_ACCURACY_VAR,"The accuracy of the move varies according to the following formula: {0}.");
        e_.add(M_P_35_AFFECT_BY_MOVES,"The move is affected by the following moves:");
        e_.add(M_P_35_AFTER_USING,"Effects after the use of the move");
        e_.add(M_P_35_BY_GROWING,"By growing level");
        e_.add(M_P_35_BY_LEARN_HM,"By learning an hidden move");
        e_.add(M_P_35_BY_LEARN_MT,"By learning by a move tutor");
        e_.add(M_P_35_BY_LEARN_TM,"By learning a technical move");
        e_.add(M_P_35_CANNOT_KO,"The move cannot knock out the target. The possible clone of the target can be destroyed.");
        e_.add(M_P_35_CAT_DIRECT_FALSE,"The category of the damaging move is {0}.The move is indirect.");
        e_.add(M_P_35_CAT_DIRECT_TRUE,"The category of the damaging move is {0}.The move is direct.");
        e_.add(M_P_35_CAT_STATUS,"The move is not damaging.");
        e_.add(M_P_35_CHOSEN_TARGETS_ADJ_ADV,"Adjacent foe fighters of the user are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_ADJ_MULT,"Adjacent fighters of the user are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_ADJ_UNIQ,"A close fighter to the user must be chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_ALLIE,"A partner of the user must be chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_ALLIES,"Partners of the user are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_ANY_FOE,"A foe fighter in the user must be chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_AUTRE_UNIQ,"A fighter other than the user must be chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_GLOBALE,"All fighters are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_LANCEUR,"The user is forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_PSEUDO_GLOBALE,"All fighters but the user are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_TOUS_ADV,"All foe fighters are forcibly chosen.");
        e_.add(M_P_35_CHOSEN_TARGETS_UNIQUE_IMPORTE,"A fighter must be chosen.");
        e_.add(M_P_35_CONST_USER_CHOICE,"The user is locked on this move until the end of the effect of this move.");
        e_.add(M_P_35_DELETED_STATUS,"Using this move disable the following status of the user:");
        e_.add(M_P_35_DISPARITION_TOUR,"Before using the move, the user of this move disappears.");
        e_.add(M_P_35_EFFECTS_BEF_FIRST,"Before first effect");
        e_.add(M_P_35_EFFECTS_END_ROUND,"Effect while end round");
        e_.add(M_P_35_EFFECTS_FIRST,"First effect");
        e_.add(M_P_35_EFFECTS_SEC,"Second effect");
        e_.add(M_P_35_EFFECTS_SEC_DPT,"Dependant second effects");
        e_.add(M_P_35_EFFECTS_TITLE,"Effects of the move");
        e_.add(M_P_35_EFFECT_WHILE_NO_DAMAGE,"If no damage is inflicted by the move due to the protection of the target, then the second effects can happen.");
        e_.add(M_P_35_END_ROUND_LINK,"See end round");
        e_.add(M_P_35_FORMULA,"{0}");
        e_.add(M_P_35_GENERAL_MOVE,"Generalities de {0}");
        e_.add(M_P_35_GROW_LEVEL,"Level {0}");
        e_.add(M_P_35_IGN_VAR_ESQ_CIBLE_POS,"The variations increasing the evasiness of the target are not taken into account.");
        e_.add(M_P_35_IGN_VAR_PREC_LANCEUR_NEG,"The variations lowering the accuracy of the user are not taken into account.");
        e_.add(M_P_35_ITEM,"Item");
        e_.add(M_P_35_ITEMS_AFFECT,"The items protecting the pokemon against this move are the following one:");
        e_.add(M_P_35_LEARNING_MOVE,"Pokemon learning the move");
        e_.add(M_P_35_MOVES,"Moves");
        e_.add(M_P_35_NB_ROUNDS,"Number of rounds");
        e_.add(M_P_35_OTHER_ITEM,"Other item or no item");
        e_.add(M_P_35_OTHER_WEATHER,"Other weather or no weather");
        e_.add(M_P_35_PP,"The move has {0} pp by default.");
        e_.add(M_P_35_PP_INTRO,"Power point by default:");
        e_.add(M_P_35_PP_TITLE,"Pp of the move");
        e_.add(M_P_35_PREPA_ROUND_TITLE,"Preparing the move");
        e_.add(M_P_35_PREPA_TOUR_CLIMAT,"The number of rounds of preparing of the move is {0}.");
        e_.add(M_P_35_PREPA_TOUR_CLIMAT_INTRO,"Number of rounds of preparing of the move:");
        e_.add(M_P_35_PRIORITY,"The move has a priority with {0}.");
        e_.add(M_P_35_PRIORITY_ZERO,"The move has a normal priority.");
        e_.add(M_P_35_PRIORITY_INTRO,"Priority of the move:");
        e_.add(M_P_35_RATE,"Rate");
        e_.add(M_P_35_RECHARGE,"If the user has directly invoked the move, has successed it ans if it is remainging power points for this move then the user recharges during a round after the end of the effect of the move:");
        e_.add(M_P_35_RECHARGE_AB,"In contrary, if the user owns one of the following abilities, the user can use a move without recharging:");
        e_.add(M_P_35_REPEATED_ROUND,"Here is the rate law of the incremented number of rounds at the rank {0}:");
        e_.add(M_P_35_REPEATED_ROUND_INTRO,"Here is the rate law of the incremented number of rounds:");
        e_.add(M_P_35_REQUIERED_STATUS,"Using this move need the following status of the user:");
        e_.add(M_P_35_SUCCESS_TITLE,"Success of the move out of accuracy and evasiness");
        e_.add(M_P_35_SWITCH,"If the user is not knocked out after the use of its move and if it exists a partner at the back battle, the user is switched by a chosen partner at the back battle.");
        e_.add(M_P_35_STOPPABLE_SOLO,"As a single target move, this move is affected by some moves.");
        e_.add(M_P_35_STOPPABLE_MULTI,"As a multiple target move, this move is affected by some moves.");
        e_.add(M_P_35_STOPPABLE_PRIO,"As a priority move, this move is affected by some moves.");
        e_.add(M_P_35_TARGETS,"The set of firstly chosen targets by the move is the following:");
        e_.add(M_P_35_TARGETS_ADJ_ADV,"all closest foes to the user");
        e_.add(M_P_35_TARGETS_ADJ_MULT,"all closest fighters to the user");
        e_.add(M_P_35_TARGETS_ADJ_UNIQ,"a close fighter to the user");
        e_.add(M_P_35_TARGETS_ALLIE,"a partner of the user");
        e_.add(M_P_35_TARGETS_ALLIES,"the members of the team of the user");
        e_.add(M_P_35_TARGETS_ANY_FOE,"a foe");
        e_.add(M_P_35_TARGETS_AUTRE_UNIQ,"a fighter other than the user");
        e_.add(M_P_35_TARGETS_GLOBALE,"all fighters");
        e_.add(M_P_35_TARGETS_LANCEUR,"the user");
        e_.add(M_P_35_TARGETS_PSEUDO_GLOBALE,"fighters other than the user");
        e_.add(M_P_35_TARGETS_TITLE,"Targets to be chosen before the use of the move");
        e_.add(M_P_35_TARGETS_TOUS_ADV,"all foes");
        e_.add(M_P_35_TARGETS_UNIQUE_IMPORTE,"a fighter be possibly the user or not");
        e_.add(M_P_35_TITLE,"Data about the move {0}");
        e_.add(M_P_35_TOUCHE_PK_DISPARUS,"The move affects the pokemon having disappeared during the round and preparing one of the following moves:");
        e_.add(M_P_35_TYPE,"By default, the move has the types:");
        e_.add(M_P_35_TYPES,"If the user of the move cannot use any item or the item does not change the type then the type depend on the weather in function of the following table:");
        e_.add(M_P_35_TYPESBOOST,"The types of the move receiving a bonus are:");
        e_.add(M_P_35_TYPE_CAT,"Type and category of the move");
        e_.add(M_P_35_TYPE_TITLE,"Type");
        e_.add(M_P_35_TYPES_ITEM,"Types by item");
        e_.add(M_P_35_TYPES_WEATHER,"Types by weather");
        e_.add(M_P_35_WEATHER,"Weather");
        e_.add(M_P_35_DAMAGING,"Damaging move");
        e_.add(M_P_35_RANK_INCREMENTING_NB_ROUND,"Rank incrementing of rounds number:");
        return e_;
    }
    public static TranslationsFile fr(){
        TranslationsFile f_=new TranslationsFile();
        f_.add(M_P_35_ABILITIES_AFFECT,"Les capacités immunisant les pokémons à cette attaque sont les suivantes:");
        f_.add(M_P_35_ACCURACY_CONST,"La précision de l''attaque est de {0}.");
        f_.add(M_P_35_ACCURACY_TITLE,"Précision de l'attaque");
        f_.add(M_P_35_ACCURACY_VAR,"La précision de l''attaque varie selon la formule suivante: {0}.");
        f_.add(M_P_35_AFFECT_BY_MOVES,"L'attaque est affectée par les attaques suivantes:");
        f_.add(M_P_35_AFTER_USING,"Effets après l'attaque");
        f_.add(M_P_35_BY_GROWING,"En montant de niveau");
        f_.add(M_P_35_BY_LEARN_HM,"En apprenant une capsule secrète");
        f_.add(M_P_35_BY_LEARN_MT,"En apprenant par un maître de capacité");
        f_.add(M_P_35_BY_LEARN_TM,"En apprenant une capsule technique");
        f_.add(M_P_35_CANNOT_KO,"L'attaque ne peut pas mettre KO la cible. L'éventuel clone de la cible peut être détruit.");
        f_.add(M_P_35_CAT_DIRECT_FALSE,"L''attaque offensive est de catégorie {0}.L''attaque est indirecte.");
        f_.add(M_P_35_CAT_DIRECT_TRUE,"L''attaque offensive est de catégorie {0}.L''attaque est directe.");
        f_.add(M_P_35_CAT_STATUS,"L'attaque n'est pas offensive.");
        f_.add(M_P_35_CHOSEN_TARGETS_ADJ_ADV,"Les combattants adverses adjacents au lanceur sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_ADJ_MULT,"Les combattants adjacents au lanceur sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_ADJ_UNIQ,"Un combattant adjacent au lanceur doit être choisi.");
        f_.add(M_P_35_CHOSEN_TARGETS_ALLIE,"Un partenaire du lanceur doit être choisi.");
        f_.add(M_P_35_CHOSEN_TARGETS_ALLIES,"Les partenaire du lanceur sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_ANY_FOE,"Un combattant adverse au lanceur doit être choisi.");
        f_.add(M_P_35_CHOSEN_TARGETS_AUTRE_UNIQ,"Un combattant autre que le lanceur doit être choisi.");
        f_.add(M_P_35_CHOSEN_TARGETS_GLOBALE,"Tous les combattants sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_LANCEUR,"Le lanceur est forcément choisi.");
        f_.add(M_P_35_CHOSEN_TARGETS_PSEUDO_GLOBALE,"Tous les combattants sauf le lanceur sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_TOUS_ADV,"Tous les combattants adverse sont forcément choisis.");
        f_.add(M_P_35_CHOSEN_TARGETS_UNIQUE_IMPORTE,"Un combattant pouvant être le lanceur ou non doit être choisi.");
        f_.add(M_P_35_CONST_USER_CHOICE,"Le lanceur est bloqué sur cette attaque jusqu'à la fin de l'effet de cette attaque.");
        f_.add(M_P_35_DELETED_STATUS,"Lancer cette attaque enlève les statuts du lanceur suivants:");
        f_.add(M_P_35_DISPARITION_TOUR,"Avant de lancer l'attaque, le lanceur de cette attaque disparaît.");
        f_.add(M_P_35_EFFECTS_BEF_FIRST,"Effet préliminaire");
        f_.add(M_P_35_EFFECTS_END_ROUND,"Effet en fin de tour");
        f_.add(M_P_35_EFFECTS_FIRST,"Effet primaire");
        f_.add(M_P_35_EFFECTS_SEC,"Effet secondaire");
        f_.add(M_P_35_EFFECTS_SEC_DPT,"Effets secondaires dépendants");
        f_.add(M_P_35_EFFECTS_TITLE,"Effets de l'attaque");
        f_.add(M_P_35_EFFECT_WHILE_NO_DAMAGE,"Si aucun dégâts n'est infligé par l'attaque à cause de l'immunité de la cible, alors les effets secondaires peuvent avoir lieu.");
        f_.add(M_P_35_END_ROUND_LINK,"Fin de tour");
        f_.add(M_P_35_FORMULA,"{0}");
        f_.add(M_P_35_GENERAL_MOVE,"Généralités de {0}");
        f_.add(M_P_35_GROW_LEVEL,"Niveau {0}");
        f_.add(M_P_35_IGN_VAR_ESQ_CIBLE_POS,"Les variations augmentant l'esquive de la cible ne sont pas prises en compte.");
        f_.add(M_P_35_IGN_VAR_PREC_LANCEUR_NEG,"Les variations baissant la précision du lanceur ne sont pas prises en compte.");
        f_.add(M_P_35_ITEM,"Objet");
        f_.add(M_P_35_ITEMS_AFFECT,"Les objets immunisant les pokémons à cette attaque sont les suivants:");
        f_.add(M_P_35_LEARNING_MOVE,"Pokémon apprenant l'attaque");
        f_.add(M_P_35_MOVES,"Attaques");
        f_.add(M_P_35_NB_ROUNDS,"Nombre de tours");
        f_.add(M_P_35_OTHER_ITEM,"Autre objet ou pas d'objet");
        f_.add(M_P_35_OTHER_WEATHER,"Autre climat ou pas de climat");
        f_.add(M_P_35_PP,"L''attaque possède {0} pp de base.");
        f_.add(M_P_35_PP_INTRO,"Points de pouvoir de base:");
        f_.add(M_P_35_PP_TITLE,"Pp de l'attaque");
        f_.add(M_P_35_PREPA_ROUND_TITLE,"Préparation de l'attaque");
        f_.add(M_P_35_PREPA_TOUR_CLIMAT,"Le nombre de tours de préparation de l''attaque est de {0}.");
        f_.add(M_P_35_PREPA_TOUR_CLIMAT_INTRO,"Nombre de tours de préparation de l'attaque:");
        f_.add(M_P_35_PRIORITY,"L''attaque a une priorité de {0}.");
        f_.add(M_P_35_PRIORITY_ZERO,"L'attaque a une priorité normale.");
        f_.add(M_P_35_PRIORITY_INTRO,"Priorité de l'attaque:");
        f_.add(M_P_35_RATE,"Probabilité");
        f_.add(M_P_35_RECHARGE,"Si le lanceur a invoquée directement l'attaque, l'a réussi et s'il reste des points de pouvoir pour cette attaque alors le lanceur recharge pendant un tour après la fin de l'effet de l'attaque:");
        f_.add(M_P_35_RECHARGE_AB,"En revanche, si le lanceur possède une capacités suivantes, le lanceur peut attaquer sans recharger:");
        f_.add(M_P_35_REPEATED_ROUND,"Voici la loi de probabilité du nombre incrémenté au rang {0} de tours:");
        f_.add(M_P_35_REPEATED_ROUND_INTRO,"Voici la loi de probabilité du nombre incrémenté de tours:");
        f_.add(M_P_35_REQUIERED_STATUS,"Lancer cette attaque nécessite les statuts du lanceur suivants:");
        f_.add(M_P_35_SUCCESS_TITLE,"Réussite de l'attaque hors précision et esquive");
        f_.add(M_P_35_SWITCH,"Si le lanceur ne tombe pas KO après son attaque et s'il existe un combattant de la même équipe à l'arrière, il est remplacé par un combattant choisi de la même équipe à l'arrière.");
        f_.add(M_P_35_STOPPABLE_SOLO,"En tant qu'attaque à unique cible, cette attaque est affectée par certaines attaques.");
        f_.add(M_P_35_STOPPABLE_MULTI,"En tant qu'attaque à cibles multiples, cette attaque est affectée par certaines attaques.");
        f_.add(M_P_35_STOPPABLE_PRIO,"En tant qu'attaque prioritaire, cette attaque est affectée par certaines attaques.");
        f_.add(M_P_35_TARGETS,"L'ensemble des cibles initialement visées par l'attaque est le suivant:");
        f_.add(M_P_35_TARGETS_ADJ_ADV,"tous les adversaires adjacent au lanceur");
        f_.add(M_P_35_TARGETS_ADJ_MULT,"tous les combattants adjacent au lanceur");
        f_.add(M_P_35_TARGETS_ADJ_UNIQ,"un combattant adjacent au lanceur");
        f_.add(M_P_35_TARGETS_ALLIE,"un partenaire du lanceur");
        f_.add(M_P_35_TARGETS_ALLIES,"les membres de l'équipe du lanceur");
        f_.add(M_P_35_TARGETS_ANY_FOE,"un adversaire");
        f_.add(M_P_35_TARGETS_AUTRE_UNIQ,"un combattant autre que le lanceur");
        f_.add(M_P_35_TARGETS_GLOBALE,"les combattants y compris le lanceur");
        f_.add(M_P_35_TARGETS_LANCEUR,"le lanceur");
        f_.add(M_P_35_TARGETS_PSEUDO_GLOBALE,"les combattants autre que le lanceur");
        f_.add(M_P_35_TARGETS_TITLE,"Cibles à choisir avant le lancer de l'attaque");
        f_.add(M_P_35_TARGETS_TOUS_ADV,"tous les adversaires");
        f_.add(M_P_35_TARGETS_UNIQUE_IMPORTE,"un combattant pouvant être le lanceur ou non");
        f_.add(M_P_35_TITLE,"Données sur l''attaque {0}");
        f_.add(M_P_35_TOUCHE_PK_DISPARUS,"L'attaque touche les pokémon ayant disparus pendant le tour et préparant une des attaques suivantes:");
        f_.add(M_P_35_TYPE,"De base, l'attaque a pour types:");
        f_.add(M_P_35_TYPES,"Si le lanceur de l'attaque ne peut pas utiliser d'objet ou l'objet porté ne change pas le type alors le type dépend du climat en fonction du tableau suivant:");
        f_.add(M_P_35_TYPESBOOST,"Les types de l'attaque recevant un bonus sont:");
        f_.add(M_P_35_TYPE_CAT,"Type et catégorie de l'attaque");
        f_.add(M_P_35_TYPE_TITLE,"Type");
        f_.add(M_P_35_TYPES_ITEM,"Types par objet");
        f_.add(M_P_35_TYPES_WEATHER,"Types par climat");
        f_.add(M_P_35_WEATHER,"Climat");
        f_.add(M_P_35_DAMAGING,"Attaque à dégâts");
        f_.add(M_P_35_RANK_INCREMENTING_NB_ROUND,"Rang incrémentant du nombre de tours:");
        return f_;
    }
}