package code.scripts.pages.aiki;

import code.sml.util.*;

public final class MessagesDataSimulation {
    public static final String M_P_86_ABILITY_PK="ability_pk";
    public static final String M_P_86_ADD="add";
    public static final String M_P_86_ADD_PK_PLAYER="add_pk_player";
    public static final String M_P_86_ALLOW_CATCHING_KO="allow_catching_ko";
    public static final String M_P_86_ALLOW_SWITCH_PLACES="allow_switch_places";
    public static final String M_P_86_ALLY_CHOICE="ally_choice";
    public static final String M_P_86_ALLY_PK="ally_pk";
    public static final String M_P_86_AVAILABLE_MOVES="available_moves";
    public static final String M_P_86_BAD_CHOICE_FRONT_FIGHTER="bad_choice_front_fighter";
    public static final String M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES="bad_choice_front_fighter_moves";
    public static final String M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES_TARGETS="bad_choice_front_fighter_moves_targets";
    public static final String M_P_86_CANCEL="cancel";
    public static final String M_P_86_CANCEL_EVO="cancel_evo";
    public static final String M_P_86_CANCEL_ITEM="cancel_item";
    public static final String M_P_86_CANCEL_MOVES="cancel_moves";
    public static final String M_P_86_CATCHING_BALL="catching_ball";
    public static final String M_P_86_CLOSING="closing";
    public static final String M_P_86_DISABLE_EVOS="disable_evos";
    public static final String M_P_86_DISPLAY_COMMENTS="display_comments";
    public static final String M_P_86_EDIT="edit";
    public static final String M_P_86_EMPTY_FOE_TEAM="empty_foe_team";
    public static final String M_P_86_END_FIGHT="end_fight";
    public static final String M_P_86_ENV_FIGHT="env_fight";
    public static final String M_P_86_EV="ev";
    public static final String M_P_86_EVOLUTION="evolution";
    public static final String M_P_86_EXP_PK="exp_pk";
    public static final String M_P_86_EXP_PK_REM="exp_pk_rem";
    public static final String M_P_86_FLEE="flee";
    public static final String M_P_86_FREE_TEAMS="free_teams";
    public static final String M_P_86_GENDER_PK="gender_pk";
    public static final String M_P_86_HAPPINESS_PK="happiness_pk";
    public static final String M_P_86_HEAL_HP="heal_hp";
    public static final String M_P_86_HIDE_COMMENTS="hide_comments";
    public static final String M_P_86_HP_RATE="hp_rate";
    public static final String M_P_86_INDEX="index";
    public static final String M_P_86_ITEM_PK="item_pk";
    public static final String M_P_86_IV_FOE="iv_foe";
    public static final String M_P_86_IV_PLAYER="iv_player";
    public static final String M_P_86_KO_FOE_FIGHTERS="ko_foe_fighters";
    public static final String M_P_86_KO_PLAYER_FIGHTERS="ko_player_fighters";
    public static final String M_P_86_LAW_CHOICE_FOE="law_choice_foe";
    public static final String M_P_86_LAW_CHOICE_PLAYER="law_choice_player";
    public static final String M_P_86_LEVEL_PK="level_pk";
    public static final String M_P_86_MOVES_PK="moves_pk";
    public static final String M_P_86_MULTIPLICITY="multiplicity";
    public static final String M_P_86_MULTIPLICITY_FIGHT="multiplicity_fight";
    public static final String M_P_86_NAME_PK="name_pk";
    public static final String M_P_86_NEXT_BUTTON="next_button";
    public static final String M_P_86_SELECT_TEAM="select_team";
    public static final String M_P_86_NOT_KO_FOE_FIGHTERS="not_ko_foe_fighters";
    public static final String M_P_86_NOT_SELECTED_FOE="not_selected_foe";
    public static final String M_P_86_NOT_SELECTED_PLAYER_PK="not_selected_player_pk";
    public static final String M_P_86_NO_FIGHT="no_fight";
    public static final String M_P_86_PREVIOUS_BUTTON="previous_button";
    public static final String M_P_86_RANDOM_WILD="random_wild";
    public static final String M_P_86_RATE_DAMAGE="rate_damage";
    public static final String M_P_86_RATE_DAMAGE_EV="rate_damage_ev";
    public static final String M_P_86_RATE_ISSUE="rate_issue";
    public static final String M_P_86_RATE_WIN_MONEY_BASE="rate_win_money_base";
    public static final String M_P_86_RATE_WIN_MONEY_LOOSE="rate_win_money_loose";
    public static final String M_P_86_REMAINING_HP="remaining_hp";
    public static final String M_P_86_REMOVE="remove";
    public static final String M_P_86_RESTORED_MOVES="restored_moves";
    public static final String M_P_86_ROUND="round";
    public static final String M_P_86_SEARCH="search";
    public static final String M_P_86_SEARCH_PK_PLAYER="search_pk_player";
    public static final String M_P_86_SELECT="select";
    public static final String M_P_86_SELECTED="selected";
    public static final String M_P_86_SELECT_ALLY_PK="select_ally_pk";
    public static final String M_P_86_SELECT_FOE_PK="select_foe_pk";
    public static final String M_P_86_SELECT_PK="select_pk";
    public static final String M_P_86_SELECT_PK_EVOS="select_pk_evos";
    public static final String M_P_86_SELECT_PK_EVOS_AFTER_FIGHT="select_pk_evos_after_fight";
    public static final String M_P_86_SELECT_PK_MOVES="select_pk_moves";
    public static final String M_P_86_SELECT_PK_MOVE_TARGET="select_pk_move_target";
    public static final String M_P_86_SELECT_SENT_PK="select_sent_pk";
    public static final String M_P_86_SHORT_ISSUE="short_issue";
    public static final String M_P_86_SKIP_LEARN="skip_learn";
    public static final String M_P_86_TITLE="title";
    public static final String M_P_86_TITLE_PARAM="title_param";
    public static final String M_P_86_UNSELECTED_ACTION="unselected_action";
    public static final String M_P_86_UNSELECTED_MOVE="unselected_move";
    public static final String M_P_86_UNSELECTED_PK="unselected_pk";
    public static final String M_P_86_VALIDATE_MOVES="validate_moves";
    public static final String M_P_86_VALIDATE_MOVE_TARGET="validate_move_target";
    public static final String M_P_86_WINNING_EXP_PTS_FIGHT="winning_exp_pts_fight";
    public static final String M_P_86_WIN_PTS="win_pts";
    public static final String M_P_86_WIN_TRAINER_EXP="win_trainer_exp";
    public static final String M_P_86_SIMU_BY_STEP="simu_by_step";
    public static final String M_P_86_ACTION="action_but";
    public static final String M_P_86_PLAYER_HEADER="player_header";
    public static final String M_P_86_FOE_HEADER="foe_header";
    public static final String M_P_86_NB_FLEE_ATTEMPT="nb_flee_attempt";
    public static final String M_P_86_NB_ROUND="nb_round";
    public static final String M_P_86_WINNING_MONEY="winning_money";
    public static final String M_P_86_LOST_OBJECTS="lost_objects";
    public static final String M_P_86_CAUGHT_EVOS="caught_evos";
    public static final String M_P_86_FIRST_POSIT_PLAYER="first_posit_player";
    public static final String M_P_86_FIRST_POSIT_FOE="first_posit_foe";
    public static final String M_P_86_FIGHT_ENABLED_MOVES="fight_enabled_moves";
    public static final String M_P_86_FIGHT_STILL_ENABLED_MOVES="fight_still_enabled_moves";
    public static final String M_P_86_CURRENT_USER="current_user";
    public static final String M_P_86_FIGHT_STATE="fs";
    public static final String M_P_86_FIGHT_STATE_SWITCH_PROPOSE="fs_switch_propose";
    public static final String M_P_86_FIGHT_STATE_SWITCH_WHILE_KO_USER="fs_switch_while_ko_player";
    public static final String M_P_86_FIGHT_STATE_ATTAQUES="fs_attaques";
    public static final String M_P_86_FIGHT_STATE_APPRENDRE_EVOLUER="fs_apprendre_evoluer";
    public static final String M_P_86_FIGHT_STATE_SWITCH_APRES_ATTAQUE="fs_switch_apres_attaque";
    public static final String M_P_86_FIGHT_STATE_RIEN="fs_rien";
    public static final String M_P_86_USED_ITEMS_WHILE_ROUND="used_items_while_round";
    public static final String M_P_86_EVO_CHOICES="evo_choices";
    public static final String M_P_86_ALLY_CHOICES="ally_choices";
    public static final String M_P_86_ALLY_CHOICES_KEY="ally_choices_key";
    public static final String M_P_86_ALLY_CHOICES_VALUE="ally_choices_value";
    public static final String M_P_86_NB_KO_ROUND="nb_ko_round";
    public static final String M_P_86_NB_KO_PREVIOUS_ROUND="nb_ko_previous_round";
    public static final String M_P_86_SUCCESSFUL_MOVES_ROUND="successful_moves_round";
    public static final String M_P_86_TITLE_FOE="title_foe";
    public static final String M_P_86_TITLE_PLAYER="title_player";
    public static final String M_P_86_TEAM_GENERALITY="team_generality";
    public static final String M_P_86_PLAYER_FOE="player_foe";
    public static final String M_P_86_ENBALED_MOVES_GROUPS="enbaled_moves_groups";
    public static final String M_P_86_TEAM_ENABLED_MOVES ="team_enabled_moves";
    public static final String M_P_86_ENBALED_MOVES_SEND ="enbaled_moves_send";
    public static final String M_P_86_ENBALED_MOVES_USES="enbaled_moves_uses";
    public static final String M_P_86_ENBALED_MOVES_USES_NB="enbaled_moves_uses_nb";
    public static final String M_P_86_HEAL_AFTER = "heal_after";
    public static final String M_P_86_MOVE_ANT = "move_ant";
    public static final String M_P_86_KIND_ACTION = "ka";
    public static final String M_P_86_KIND_ACTION_NO = "ka_no";
    public static final String M_P_86_KIND_ACTION_HEAL = "ka_heal";
    public static final String M_P_86_KIND_ACTION_HEAL_MOVE = "ka_heal_move";
    public static final String M_P_86_KIND_ACTION_MOVE = "ka_move";
    public static final String M_P_86_KIND_ACTION_SWITCH = "ka_switch";
    public static final String M_P_86_KIND_ACTION_FIELD_FIRST = "ka_first";
    public static final String M_P_86_KIND_ACTION_FIELD_FINAL = "ka_final";
    public static final String M_P_86_KIND_ACTION_FIELD_ITEM = "ka_item";
    public static final String M_P_86_KIND_ACTION_FIELD_SUF = "ka_sub";
    public static final String M_P_86_KIND_ACTION_FIELD_TAR = "ka_tar";
    public static final String M_P_86_KIND_ACTION_FIELD_TEAM = "ka_team";
    public static final String M_P_86_TITLE_GEN="title_gen";
    public static final String M_P_86_ABILITY="ability";
    public static final String M_P_86_ACTED="acted";
    public static final String M_P_86_CHANGED="changed";
    public static final String M_P_86_CLONE="clone";
    public static final String M_P_86_COPIED_MOVES="copied_moves";
    public static final String M_P_86_COPIED_MOVES_NEW="copied_moves_new";
    public static final String M_P_86_COPIED_MOVES_OLD="copied_moves_old";
    public static final String M_P_86_COPIED_MOVES_PP="copied_moves_pp";
    public static final String M_P_86_CURRENT_ABILITY="current_ability";
    public static final String M_P_86_CURRENT_GENDER="current_gender";
    public static final String M_P_86_CURRENT_MOVES="current_moves";
    public static final String M_P_86_CURRENT_MOVES_VALUE_ONE="current_moves_value_one";
    public static final String M_P_86_CURRENT_MOVES_VALUE_TWO="current_moves_value_two";
    public static final String M_P_86_CURRENT_NAME="current_name";
    public static final String M_P_86_DAMAGE_POWER_TYPES_INF="damage_power_types_inf";
    public static final String M_P_86_DAMAGE_POWER_TYPES_SUF="damage_power_types_suf";
    public static final String M_P_86_DAMAGE_POWER_TYPES_KEY="damage_power_types_key";
    public static final String M_P_86_DAMAGE_POWER_TYPES_VALUE_ONE="damage_power_types_value_one";
    public static final String M_P_86_DAMAGE_POWER_TYPES_VALUE_TWO="damage_power_types_value_two";
    public static final String M_P_86_DISAPPEARED="disappeared";
    public static final String M_P_86_ENBALED_MOVES="enbaled_moves";
    public static final String M_P_86_ENBALED_MOVES_ALLY="enbaled_moves_ally";
    public static final String M_P_86_ENBALED_MOVES_ALLY_KEY="enbaled_moves_ally_key";
    public static final String M_P_86_ENBALED_MOVES_ALLY_ENABLED="enbaled_moves_ally_enabled";
    public static final String M_P_86_ENBALED_MOVES_ENABLED="enbaled_moves_enabled";
    public static final String M_P_86_ENBALED_MOVES_NB_ROUND="enbaled_moves_nb_round";
    public static final String M_P_86_ENBALED_MOVES_REL="enbaled_moves_rel";
    public static final String M_P_86_FORBIDDEN_MOVES="forbidden_moves";
    public static final String M_P_86_GENDER="gender";
    public static final String M_P_86_GROUND_PLACE="ground_place";
    public static final String M_P_86_GROUND_SUBSTIT="ground_substit";
    public static final String M_P_86_GROUND="ground";
    public static final String M_P_86_HAPPINESS="happiness";
    public static final String M_P_86_HEIGHT="height";
    public static final String M_P_86_INC_ACCURACY="inc_accuracy";
    public static final String M_P_86_INC_ACCURACY_ENABLED="inc_accuracy_enabled";
    public static final String M_P_86_INVOKED_MOVES="invoked_moves";
    public static final String M_P_86_ITEM="item";
    public static final String M_P_86_LAST_SUCCESSFUL_MOVE="last_successful_move";
    public static final String M_P_86_LAST_SUFFERED_MOVE="last_suffered_move";
    public static final String M_P_86_LAST_SUFFERED_MOVE_TYPES="last_suffered_move_types";
    public static final String M_P_86_LAST_USED_ITEM="last_used_item";
    public static final String M_P_86_LAST_USED_MOVE="last_used_move";
    public static final String M_P_86_LEVEL="level";
    public static final String M_P_86_MOVES="moves_set";
    public static final String M_P_86_MOVES_KEY ="moves_key";
    public static final String M_P_86_MOVES_VALUE_ONE="moves_value_one";
    public static final String M_P_86_MOVES_VALUE_TWO="moves_value_two";
    public static final String M_P_86_NAME="name";
    public static final String M_P_86_NB_ROUNDS="nb_rounds";
    public static final String M_P_86_NB_ROUND_PREPA="nb_round_prepa";
    public static final String M_P_86_NB_SUCCESS_MOVES="nb_success_moves";
    public static final String M_P_86_NB_USES="nb_uses";
    public static final String M_P_86_NB_USES_KEY="nb_uses_key";
    public static final String M_P_86_NB_USES_VALUE="nb_uses_value";
    public static final String M_P_86_NECESSARY_PTS="necessary_pts";
    public static final String M_P_86_NEEDING_RECHARGE="needing_recharge";
    public static final String M_P_86_NICKNAME="nickname";
    public static final String M_P_86_PRIVATE_MOVES="private_moves";
    public static final String M_P_86_PRIVATE_MOVES_MV="private_moves_mv";
    public static final String M_P_86_REFRESH="refresh";
    public static final String M_P_86_REMAIN_HP="remain_hp";
    public static final String M_P_86_STATISTICS="statistics";
    public static final String M_P_86_STATISTICS_BASE="statistics_base";
    public static final String M_P_86_STATISTICS_BOOST="statistics_boost";
    public static final String M_P_86_STATISTICS_EV="statistics_ev";
    public static final String M_P_86_STATISTICS_IV="statistics_iv";
    public static final String M_P_86_STATISTICS_KEY="statistics_key";
    public static final String M_P_86_STATISTICS_VALUE="statistics_value";
    public static final String M_P_86_STATUS="status";
    public static final String M_P_86_STATUS_KEY="status_key";
    public static final String M_P_86_STATUS_REL="status_rel";
    public static final String M_P_86_STATUS_REL_ENABLED="status_rel_enabled";
    public static final String M_P_86_STATUS_VALUE="status_value";
    public static final String M_P_86_SUCCESSFUL_MOVE="successful_move";
    public static final String M_P_86_SUFFERING_DAMAGE="suffering_damage";
    public static final String M_P_86_SUFFERING_DAMAGE_KEY="suffering_damage_key";
    public static final String M_P_86_SUFFERING_DAMAGE_VALUE_ROUND="suffering_damage_value_round";
    public static final String M_P_86_SUFFERING_DAMAGE_VALUE_USING="suffering_damage_value_using";
    public static final String M_P_86_SUF_DAMAGE="suf_damage";
    public static final String M_P_86_SUF_MOVE="suf_move";
    public static final String M_P_86_SUF_MOVE_TYPES="suf_move_types";
    public static final String M_P_86_TEAM="team";
    public static final String M_P_86_TRACKING_MOVES="tracking_moves";
    public static final String M_P_86_TRACKING_MOVES_0="tracking_moves_";
    public static final String M_P_86_TRACKING_MOVES_ENABLED="tracking_moves_enabled";
    public static final String M_P_86_TRACKING_MOVES_NB_ROUND="tracking_moves_nb_round";
    public static final String M_P_86_TRACKING_MOVES_V="tracking_moves_v";
    public static final String M_P_86_TRAPPING_MOVES="trapping_moves";
    public static final String M_P_86_TRAPPING_MOVES_ENABLED="trapping_moves_enabled";
    public static final String M_P_86_TRAPPING_MOVES_NB_ROUND="trapping_moves_nb_round";
    public static final String M_P_86_TYPES="types";
    public static final String M_P_86_TYPES_PROTECTED="types_protected";
    public static final String M_P_86_USED_BALL_CATCHING="used_ball_catching";
    public static final String M_P_86_USED_MOVE_LAST_ROUND="used_move_last_round";
    public static final String M_P_86_USING_ITEM="using_item";
    public static final String M_P_86_WEIGHT="weight";
    public static final String M_P_86_WON_EXP="won_exp";
    public static final String M_P_86_WON_EXP_LAST_LEVEL="won_exp_last_level";
    public static final String M_P_86_HEAL_AFTER_KEY_RD="heal_after_key_rd";
    public static final String M_P_86_HEAL_AFTER_KEY_USED_CURRENT="heal_after_key_used_current";
    public static final String M_P_86_HEAL_AFTER_KEY_USED_LAST="heal_after_key_used_last";
    public static final String M_P_86_MOVE_ANT_DAMAGE="move_ant_damage";
    public static final String M_P_86_MOVE_ANT_FOE="move_ant_foe";
    public static final String M_P_86_MOVE_ANT_GROUND="move_ant_ground";
    public static final String M_P_86_MOVE_ANT_NB_ROUND="move_ant_nb_round";
    public static final String M_P_86_MOVE_ANT_NO="move_ant_no";
    public static final String M_P_86_MOVE_ANT_PLAYER="move_ant_player";
    public static final String M_P_86_MOVE_ANT_TEAM="move_ant_team";
    public static final String M_P_86_TARGET="target";
    public static final String M_P_86_MOVE="move";
    public static final String M_P_86_MOVES_GR="moves_gr";
    public static final String M_P_86_ENABLED="enabled";
    public static final String M_P_86_EVO_PK="evo_pk";
    public static final String M_P_86_EVO_PK_MOVES="evo_pk_moves";
    public static final String M_P_86_EVO_PK_ABILITIES="evo_pk_abilities";
    public static final String M_P_86_KEY_FIGHTER="key_fighter";
    public static final String M_P_86_ITEM_USE="item_use";
    public static final String M_P_86_ITEM_USE_NB="item_use_nb";
    public static final String M_P_86_SEED="seed";
    private static final String ENABLED = "Enabled";
    private static final String ACTIF = "Actif";
    private static final String CURRENT_PP = "Current pp";
    private static final String PP_COURANT = "Pp courant";
    private static final String NUMBER_OF_ROUNDS = "Number of rounds";
    private static final String NOMBRE_DE_TOURS = "Nombre de tours";
    private static final String ATTAQUE = "Attaque";
    private static final String MOVE = "Move";
    private MessagesDataSimulation(){
    }
    public static TranslationsFile en(){
        TranslationsFile e_=new TranslationsFile();
        e_.add(M_P_86_ABILITY_PK,"Ability");
        e_.add(M_P_86_ADD,"Add");
        e_.add(M_P_86_ADD_PK_PLAYER,"Add");
        e_.add(M_P_86_ALLOW_CATCHING_KO,"Allow catching ko pokemon");
        e_.add(M_P_86_ALLOW_SWITCH_PLACES,"Allow swicthing places at the front of battle at the end of round");
        e_.add(M_P_86_ALLY_CHOICE,"Chosen ally pokemon");
        e_.add(M_P_86_ALLY_PK,"Ally pokemon");
        e_.add(M_P_86_AVAILABLE_MOVES,"Available moves for pokemon player only");
        e_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER,"Bad choice about the position of front fighters");
        e_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES,"Bad choice about the moves to learn and the evolutions");
        e_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES_TARGETS,"Bad choice about the targets");
        e_.add(M_P_86_CANCEL,"Cancel");
        e_.add(M_P_86_CANCEL_EVO,"Cancel the last evolution");
        e_.add(M_P_86_CANCEL_ITEM,"Cancel holding item");
        e_.add(M_P_86_CANCEL_MOVES,"Cancel choice of moves set");
        e_.add(M_P_86_CATCHING_BALL,"Catching ball");
        e_.add(M_P_86_CLOSING,"The moves wth single target can achieve any foe");
        e_.add(M_P_86_DISABLE_EVOS,"Keep the moves while the simulation >>");
        e_.add(M_P_86_DISPLAY_COMMENTS,"Display comments");
        e_.add(M_P_86_EDIT,"Edit");
        e_.add(M_P_86_EMPTY_FOE_TEAM,"No fighter in the foe team");
        e_.add(M_P_86_END_FIGHT,"End of fight if a team is ko.");
        e_.add(M_P_86_ENV_FIGHT,"Environment of fight");
        e_.add(M_P_86_EV,"Ev in statististics");
        e_.add(M_P_86_EVOLUTION,"Evolution");
        e_.add(M_P_86_EXP_PK,"Won experience");
        e_.add(M_P_86_EXP_PK_REM,"Remaining experience for the next level");
        e_.add(M_P_86_FLEE,"Flee always possible");
        e_.add(M_P_86_FREE_TEAMS,"Free teams");
        e_.add(M_P_86_GENDER_PK,"Gender");
        e_.add(M_P_86_HAPPINESS_PK,"Happiness");
        e_.add(M_P_86_HEAL_HP,"Heal health points");
        e_.add(M_P_86_HIDE_COMMENTS,"Hide comments");
        e_.add(M_P_86_HP_RATE,"Remaining life rate");
        e_.add(M_P_86_INDEX,"Return to the index");
        e_.add(M_P_86_ITEM_PK,"Item");
        e_.add(M_P_86_IV_FOE,"Iv of the pokemon of your foes");
        e_.add(M_P_86_IV_PLAYER,"Iv of your pokemon");
        e_.add(M_P_86_KO_FOE_FIGHTERS,"Ko pokemon ko of the foe trainer");
        e_.add(M_P_86_KO_PLAYER_FIGHTERS,"Ko pokemon of the player");
        e_.add(M_P_86_LAW_CHOICE_FOE,"Choice of averages of damage rate for the pokemon of your foes");
        e_.add(M_P_86_LAW_CHOICE_PLAYER,"Choice of averages of damage rate for your pokemon");
        e_.add(M_P_86_LEVEL_PK,"Level");
        e_.add(M_P_86_MOVES_PK,"Moves");
        e_.add(M_P_86_MULTIPLICITY,"Place on the ground");
        e_.add(M_P_86_MULTIPLICITY_FIGHT,"Multiplicity of the fight");
        e_.add(M_P_86_NAME_PK,"Name");
        e_.add(M_P_86_NEXT_BUTTON,">>");
        e_.add(M_P_86_SELECT_TEAM,"Select a team");
        e_.add(M_P_86_NOT_KO_FOE_FIGHTERS,"Not ko front pokemon of the foe trainer");
        e_.add(M_P_86_NOT_SELECTED_FOE,"No selected foe trainer");
        e_.add(M_P_86_NOT_SELECTED_PLAYER_PK,"No fighter in the player team");
        e_.add(M_P_86_NO_FIGHT,"Fight number");
        e_.add(M_P_86_PREVIOUS_BUTTON,"<<");
        e_.add(M_P_86_RANDOM_WILD,"Random appearing pokemon");
        e_.add(M_P_86_RATE_DAMAGE,"Probability");
        e_.add(M_P_86_RATE_DAMAGE_EV,"Rate");
        e_.add(M_P_86_RATE_ISSUE,"{0} is not a valid rate.");
        e_.add(M_P_86_RATE_WIN_MONEY_BASE,"Rate of won money between winning money while a victory and winning base");
        e_.add(M_P_86_RATE_WIN_MONEY_LOOSE,"Rate of lost money between loss while a defeat and winning money while a victory");
        e_.add(M_P_86_REMAINING_HP,"Remaining health points");
        e_.add(M_P_86_REMOVE,"Remove");
        e_.add(M_P_86_RESTORED_MOVES,"Healed moves of your pokemon at the end of fight");
        e_.add(M_P_86_ROUND,"Round number");
        e_.add(M_P_86_SEARCH,"Search");
        e_.add(M_P_86_SEARCH_PK_PLAYER,"Search pokemon");
        e_.add(M_P_86_SELECT,"Select");
        e_.add(M_P_86_SELECTED,"Selected");
        e_.add(M_P_86_SELECT_ALLY_PK,"Pokemon of the ally trainer");
        e_.add(M_P_86_SELECT_FOE_PK,"Pokemon of the foe trainer");
        e_.add(M_P_86_SELECT_PK,"Select your pokemon team");
        e_.add(M_P_86_SELECT_PK_EVOS,"Select the evolutions of your pokemon");
        e_.add(M_P_86_SELECT_PK_EVOS_AFTER_FIGHT,"Select the evolutions of your pokemon after the fight");
        e_.add(M_P_86_SELECT_PK_MOVES,"Select the moves of your pokemon for each round");
        e_.add(M_P_86_SELECT_PK_MOVE_TARGET,"Select the move and the target of your pokemon for each round");
        e_.add(M_P_86_SELECT_SENT_PK,"Select your sent pokemon for each round");
        e_.add(M_P_86_SHORT_ISSUE,"{0} is not a valid integer.");
        e_.add(M_P_86_SKIP_LEARN,"Do not learnt the already known moves");
        e_.add(M_P_86_TITLE,"Simulation of fights");
        e_.add(M_P_86_TITLE_PARAM,"Simulation of fights {0}/8");
        e_.add(M_P_86_UNSELECTED_ACTION,"No selected action");
        e_.add(M_P_86_UNSELECTED_MOVE,"No selected move");
        e_.add(M_P_86_UNSELECTED_PK,"No selected pokemon");
        e_.add(M_P_86_VALIDATE_MOVES,"Validate learning moves");
        e_.add(M_P_86_VALIDATE_MOVE_TARGET,"Validate move choice and target choice");
        e_.add(M_P_86_WINNING_EXP_PTS_FIGHT,"Rate of winning experience points");
        e_.add(M_P_86_WIN_PTS,"Difficulty of winning points");
        e_.add(M_P_86_WIN_TRAINER_EXP,"Rate of winning experience points de gain de points while a fight against a foe");
        e_.add(M_P_86_ACTION,"Actions");
        e_.add(M_P_86_PLAYER_HEADER,"Player index");
        e_.add(M_P_86_FOE_HEADER,"Foe index");
        e_.add(M_P_86_SIMU_BY_STEP,"Simulate fight round by round with a seed");
        e_.add(M_P_86_NB_FLEE_ATTEMPT,"The number of attempts of flee is:");
        e_.add(M_P_86_NB_ROUND,"The number of elapsed rounds is:");
        e_.add(M_P_86_WINNING_MONEY,"The won money is:");
        e_.add(M_P_86_LOST_OBJECTS,"Lost items");
        e_.add(M_P_86_CAUGHT_EVOS,"Caught evolutions");
        e_.add(M_P_86_FIRST_POSIT_PLAYER,"First positions for player");
        e_.add(M_P_86_FIRST_POSIT_FOE,"First positions for foe");
        e_.add(M_P_86_FIGHT_ENABLED_MOVES,"Global enabled moves");
        e_.add(M_P_86_FIGHT_STILL_ENABLED_MOVES,"State of activity of global moves");
        e_.add(M_P_86_CURRENT_USER,"Current user");
        e_.add(M_P_86_FIGHT_STATE,"fight state");
        e_.add(M_P_86_FIGHT_STATE_SWITCH_PROPOSE,"offered switch");
        e_.add(M_P_86_FIGHT_STATE_SWITCH_WHILE_KO_USER,"switch while ko player team");
        e_.add(M_P_86_FIGHT_STATE_ATTAQUES,"moves");
        e_.add(M_P_86_FIGHT_STATE_APPRENDRE_EVOLUER,"learn and evolve player team");
        e_.add(M_P_86_FIGHT_STATE_SWITCH_APRES_ATTAQUE,"switch after using move");
        e_.add(M_P_86_FIGHT_STATE_RIEN,"no fight");
        e_.add(M_P_86_USED_ITEMS_WHILE_ROUND,"used items while round");
        e_.add(M_P_86_EVO_CHOICES,"choices of moves and evolutions");
        e_.add(M_P_86_ALLY_CHOICES,"choices of ally moves");
        e_.add(M_P_86_ALLY_CHOICES_KEY,"Your choice of move and target");
        e_.add(M_P_86_ALLY_CHOICES_VALUE,"Choice of move and target of the ally trainer");
        e_.add(M_P_86_NB_KO_ROUND,"number of ko while the round");
        e_.add(M_P_86_NB_KO_PREVIOUS_ROUND,"number of ko while the previous round");
        e_.add(M_P_86_SUCCESSFUL_MOVES_ROUND,"successful moves while the round");
        e_.add(M_P_86_TEAM_GENERALITY,"team generality");
        e_.add(M_P_86_TITLE_FOE,"The foe team");
        e_.add(M_P_86_TITLE_PLAYER,"The player team");
        e_.add(M_P_86_PLAYER_FOE,"Here is for each of your fighters, the foe fighters:");
        e_.add(M_P_86_ENBALED_MOVES_GROUPS,"Here is the activity of the effects of following groups of moves used by the team:");
        e_.add(M_P_86_TEAM_ENABLED_MOVES,"Here is the activity of the effects of the following moves on the team:");
        e_.add(M_P_86_ENBALED_MOVES_SEND,"Here is the uses of the moves by the team while sending a foe pokemon at the front battle:");
        e_.add(M_P_86_ENBALED_MOVES_USES,"Here is the uses of the moves by the team while sending a foe pokemon at the front battle:");
        e_.add(M_P_86_ENBALED_MOVES_USES_NB,"Count");
        e_.add(M_P_86_HEAL_AFTER,"Here is the uses of the moves healing at the end of the round after using by the team:");
        e_.add(M_P_86_MOVE_ANT,"Here is the uses of the moves achieving a cible two rounds after using the move by a member of the team:");
        e_.add(M_P_86_KIND_ACTION,"action");
        e_.add(M_P_86_KIND_ACTION_NO,"no action");
        e_.add(M_P_86_KIND_ACTION_HEAL,"simple heal action");
        e_.add(M_P_86_KIND_ACTION_HEAL_MOVE,"heal action move");
        e_.add(M_P_86_KIND_ACTION_MOVE,"action move");
        e_.add(M_P_86_KIND_ACTION_SWITCH,"switch");
        e_.add(M_P_86_KIND_ACTION_FIELD_FIRST,"first chosen move");
        e_.add(M_P_86_KIND_ACTION_FIELD_FINAL,"final chosen move");
        e_.add(M_P_86_KIND_ACTION_FIELD_ITEM,"chosen healing item");
        e_.add(M_P_86_KIND_ACTION_FIELD_SUF,"chosen substitute");
        e_.add(M_P_86_KIND_ACTION_FIELD_TAR,"chosen target");
        e_.add(M_P_86_KIND_ACTION_FIELD_TEAM,"healing team");
        e_.add(M_P_86_ABILITY,"The base ability of the fighter is:");
        e_.add(M_P_86_ACTED,"The fighter has acted.");
        e_.add(M_P_86_CHANGED,"The fighter has changed form.");
        e_.add(M_P_86_CLONE,"The remaining health points of the clone of the fighter are:");
        e_.add(M_P_86_COPIED_MOVES,"The following moves are copied:");
        e_.add(M_P_86_COPIED_MOVES_NEW,"New move");
        e_.add(M_P_86_COPIED_MOVES_OLD,"Old move");
        e_.add(M_P_86_COPIED_MOVES_PP, CURRENT_PP);
        e_.add(M_P_86_CURRENT_ABILITY,"The current ability of the fighter is:");
        e_.add(M_P_86_CURRENT_GENDER,"The current gender of the fighter is:");
        e_.add(M_P_86_CURRENT_MOVES,"The current moves are the following one:");
        e_.add(M_P_86_CURRENT_MOVES_VALUE_ONE, CURRENT_PP);
        e_.add(M_P_86_CURRENT_MOVES_VALUE_TWO,"Full pp");
        e_.add(M_P_86_CURRENT_NAME,"The current name of the fighter is:");
        e_.add(M_P_86_DAMAGE_POWER_TYPES_INF,"Here is the table of the rates of the powers of the moves inflicted by the fighter in function by the types:");
        e_.add(M_P_86_DAMAGE_POWER_TYPES_SUF,"Here is the table of the rates of the powers of the moves suffered by the fighter in function by the types:");
        e_.add(M_P_86_DAMAGE_POWER_TYPES_KEY,"Type");
        e_.add(M_P_86_DAMAGE_POWER_TYPES_VALUE_ONE,"Rate of the power of the inflicted move");
        e_.add(M_P_86_DAMAGE_POWER_TYPES_VALUE_TWO,"Rate of the power of the suffered move");
        e_.add(M_P_86_DISAPPEARED,"The fighter has disappeared.");
        e_.add(M_P_86_ENBALED_MOVES,"Here is the activity of the effects of the following moves against the fighter:");
        e_.add(M_P_86_ENBALED_MOVES_ALLY,"Here is the activity of the effects of the following moves on the allies of the fighter:");
        e_.add(M_P_86_ENBALED_MOVES_ALLY_KEY, MOVE);
        e_.add(M_P_86_ENBALED_MOVES_ALLY_ENABLED, ENABLED);
        e_.add(M_P_86_ENBALED_MOVES_ENABLED, ENABLED);
        e_.add(M_P_86_ENBALED_MOVES_NB_ROUND, NUMBER_OF_ROUNDS);
        e_.add(M_P_86_ENBALED_MOVES_REL,"Here is the activity of the effects of the following moves mettant en relation le combattant avec les autres:");
        e_.add(M_P_86_FORBIDDEN_MOVES,"Here is the forbidden moves by the fighter in function by the other fighters:");
        e_.add(M_P_86_GENDER,"The base gender of the fighter is:");
        e_.add(M_P_86_GROUND_PLACE,"The fighter has by beginning by the left for current place:");
        e_.add(M_P_86_GROUND_SUBSTIT,"The fighter has by beginning by the left for place of substituting:");
        e_.add(M_P_86_GROUND,"Place or back");
        e_.add(M_P_86_HAPPINESS,"The happiness level of the fighter is:");
        e_.add(M_P_86_HEIGHT,"The height of the fighter is:");
        e_.add(M_P_86_INC_ACCURACY,"Here is the moves increasing the accuracy of the fighter against the other fighters:");
        e_.add(M_P_86_INC_ACCURACY_ENABLED, ENABLED);
        e_.add(M_P_86_INVOKED_MOVES,"The already invoked moves while this round by the fighter are the following one:");
        e_.add(M_P_86_ITEM,"The item of the fighter is:");
        e_.add(M_P_86_LAST_SUCCESSFUL_MOVE,"The last successful move is:");
        e_.add(M_P_86_LAST_SUFFERED_MOVE,"The last suffered move is:");
        e_.add(M_P_86_LAST_SUFFERED_MOVE_TYPES,"The types of the last suffered move are the following one:");
        e_.add(M_P_86_LAST_USED_ITEM,"The last used item is:");
        e_.add(M_P_86_LAST_USED_MOVE,"The last used move is:");
        e_.add(M_P_86_LEVEL,"The experience level of the fighter is:");
        e_.add(M_P_86_MOVES,"The base moves (before fight, modifiable by a growing of level or a use of move) are the following one:");
        e_.add(M_P_86_MOVES_KEY, MOVE);
        e_.add(M_P_86_MOVES_VALUE_ONE, CURRENT_PP);
        e_.add(M_P_86_MOVES_VALUE_TWO,"Full pp");
        e_.add(M_P_86_NAME,"The base name of the fighter is:");
        e_.add(M_P_86_NB_ROUNDS,"Number of round(s):");
        e_.add(M_P_86_NB_ROUND_PREPA,"The elapsed number of rounds of preparing is:");
        e_.add(M_P_86_NB_SUCCESS_MOVES,"Number of consecutive times of this successful move:");
        e_.add(M_P_86_NB_USES,"Here is the number of uses of moves by the fighter:");
        e_.add(M_P_86_NB_USES_VALUE,"Number of uses");
        e_.add(M_P_86_NECESSARY_PTS,"The number of necessary points for growing level is:");
        e_.add(M_P_86_NEEDING_RECHARGE,"The fighter need a round for recharging.");
        e_.add(M_P_86_NICKNAME,"The nickname of the fighter is:");
        e_.add(M_P_86_PRIVATE_MOVES,"Here is the moves that the other fighters cannot use if the fighter has enabled the privations of moves group:");
        e_.add(M_P_86_PRIVATE_MOVES_MV,"Forbidden moves");
        e_.add(M_P_86_REFRESH,"Refresh");
        e_.add(M_P_86_REMAIN_HP,"The remaining health points of the fighter are:");
        e_.add(M_P_86_STATISTICS,"The base value, the evs, the ivs and the levels of statistics are given in the following table:");
        e_.add(M_P_86_STATISTICS_BASE,"Base value");
        e_.add(M_P_86_STATISTICS_BOOST,"Level");
        e_.add(M_P_86_STATISTICS_EV,"Ev");
        e_.add(M_P_86_STATISTICS_IV,"Iv");
        e_.add(M_P_86_STATISTICS_KEY,"Statistic");
        e_.add(M_P_86_STATISTICS_VALUE,"Value");
        e_.add(M_P_86_STATUS,"The number of rounds of each status is the following one:");
        e_.add(M_P_86_STATUS_KEY,"Status");
        e_.add(M_P_86_NB_USES_KEY, MOVE);
        e_.add(M_P_86_STATUS_REL,"The activity of each suffered status by each fighter is the following one:");
        e_.add(M_P_86_STATUS_REL_ENABLED, ENABLED);
        e_.add(M_P_86_STATUS_VALUE, NUMBER_OF_ROUNDS);
        e_.add(M_P_86_SUCCESSFUL_MOVE,"The move is successful.");
        e_.add(M_P_86_SUFFERING_DAMAGE,"Here is the table of suffered damage by the fighter in function by categories of suffered move:");
        e_.add(M_P_86_SUFFERING_DAMAGE_KEY,"Category");
        e_.add(M_P_86_SUFFERING_DAMAGE_VALUE_ROUND,"Suffered damage during this round");
        e_.add(M_P_86_SUFFERING_DAMAGE_VALUE_USING,"Suffered damage since the last choice of move");
        e_.add(M_P_86_SUF_DAMAGE,"Suffered damage by the fighter in function by categories of moves are the following one:");
        e_.add(M_P_86_SUF_MOVE,"The last suffered move is:");
        e_.add(M_P_86_SUF_MOVE_TYPES,"The types of the last suffered move are:");
        e_.add(M_P_86_TEAM,"Return to the general data of the team");
        e_.add(M_P_86_TITLE_GEN,"Generalities about the current fighter");
        e_.add(M_P_86_TRACKING_MOVES,"Here is the affected moves of the other fighters by the fighter:");
        e_.add(M_P_86_TRACKING_MOVES_0,"Here is the affected moves by the fighter in function by the other fighters:");
        e_.add(M_P_86_TRACKING_MOVES_ENABLED, ENABLED);
        e_.add(M_P_86_TRACKING_MOVES_NB_ROUND, NUMBER_OF_ROUNDS);
        e_.add(M_P_86_TRACKING_MOVES_V,"Affected move");
        e_.add(M_P_86_TRAPPING_MOVES,"Here is the trapping moves used by the fighter against the other fighters:");
        e_.add(M_P_86_TRAPPING_MOVES_ENABLED, ENABLED);
        e_.add(M_P_86_TRAPPING_MOVES_NB_ROUND, NUMBER_OF_ROUNDS);
        e_.add(M_P_86_TYPES,"The types of the fighter are the following one:");
        e_.add(M_P_86_TYPES_PROTECTED,"Here is the types of zero efficiency moves against the fighter:");
        e_.add(M_P_86_USED_BALL_CATCHING,"The used ball for catching the wild fighter is:");
        e_.add(M_P_86_USED_MOVE_LAST_ROUND,"The used move at the last round is:");
        e_.add(M_P_86_USING_ITEM,"The fighter is using an item.");
        e_.add(M_P_86_WEIGHT,"The weight of the fighter is:");
        e_.add(M_P_86_WON_EXP,"Won experience points to add:");
        e_.add(M_P_86_WON_EXP_LAST_LEVEL,"Won experience points since the last grow of level:");
        e_.add(M_P_86_HEAL_AFTER_KEY_RD,"Number of rounds since last using");
        e_.add(M_P_86_HEAL_AFTER_KEY_USED_CURRENT,"Used during this round");
        e_.add(M_P_86_HEAL_AFTER_KEY_USED_LAST,"Used during the last round");
        e_.add(M_P_86_MOVE_ANT_DAMAGE,"Damage");
        e_.add(M_P_86_MOVE_ANT_FOE,"Foe");
        e_.add(M_P_86_MOVE_ANT_GROUND,"Place of the target from the left");
        e_.add(M_P_86_MOVE_ANT_NB_ROUND, NUMBER_OF_ROUNDS);
        e_.add(M_P_86_MOVE_ANT_NO,"-");
        e_.add(M_P_86_MOVE_ANT_PLAYER,"Player");
        e_.add(M_P_86_MOVE_ANT_TEAM,"Team");
        e_.add(M_P_86_TARGET,"Target");
        e_.add(M_P_86_MOVE,MOVE);
        e_.add(M_P_86_MOVES_GR,"Moves");
        e_.add(M_P_86_ENABLED,ENABLED);
        e_.add(M_P_86_EVO_PK,"Evolution");
        e_.add(M_P_86_EVO_PK_MOVES,"Moves to be learnt");
        e_.add(M_P_86_EVO_PK_ABILITIES,"Abilities");
        e_.add(M_P_86_KEY_FIGHTER,"Id");
        e_.add(M_P_86_ITEM_USE,"Item");
        e_.add(M_P_86_ITEM_USE_NB,"Quantity");
        e_.add(M_P_86_SEED,"Seed");
        return e_;
    }
    public static TranslationsFile fr(){
        TranslationsFile f_=new TranslationsFile();
        f_.add(M_P_86_ABILITY_PK,"Capacité");
        f_.add(M_P_86_ADD,"Ajouter");
        f_.add(M_P_86_ADD_PK_PLAYER,"Ajouter");
        f_.add(M_P_86_ALLOW_CATCHING_KO,"Autoriser la capture de pokemon ko");
        f_.add(M_P_86_ALLOW_SWITCH_PLACES,"Autoriser l'échange de places sur le terrain en fin de tour");
        f_.add(M_P_86_ALLY_CHOICE,"Pokemon allié choisi");
        f_.add(M_P_86_ALLY_PK,"Pokemon allié");
        f_.add(M_P_86_AVAILABLE_MOVES,"Uniquement les attaques disponibles pour le pokemon du joueur");
        f_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER,"Mauvais choix sur la position des combattants de front");
        f_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES,"Mauvais choix sur les attaques à apprendre et les évolutions");
        f_.add(M_P_86_BAD_CHOICE_FRONT_FIGHTER_MOVES_TARGETS,"Mauvais choix sur les cibles");
        f_.add(M_P_86_CANCEL,"Annuler");
        f_.add(M_P_86_CANCEL_EVO,"Annuler la dernière évolution");
        f_.add(M_P_86_CANCEL_ITEM,"Annuler le port d'objet");
        f_.add(M_P_86_CANCEL_MOVES,"Annuler le choix d'ensemble d'attaques");
        f_.add(M_P_86_CATCHING_BALL,"Balle de capture");
        f_.add(M_P_86_CLOSING,"Les attaques à cible unique peuvent toucher n'importe quel adversaire");
        f_.add(M_P_86_DISABLE_EVOS,"Conserver les attaques durant la simulation >>");
        f_.add(M_P_86_DISPLAY_COMMENTS,"Afficher les commentaires");
        f_.add(M_P_86_EDIT,"Éditer");
        f_.add(M_P_86_EMPTY_FOE_TEAM,"Pas de combattant dans l'équipe adverse");
        f_.add(M_P_86_END_FIGHT,"Fin de combat si une équipe est ko.");
        f_.add(M_P_86_ENV_FIGHT,"Environnement de combat");
        f_.add(M_P_86_EV,"Ev en statististiques");
        f_.add(M_P_86_EVOLUTION,"Évolution");
        f_.add(M_P_86_EXP_PK,"Éxperience gagnée");
        f_.add(M_P_86_EXP_PK_REM,"Éxperience restante pour le niveau suivant");
        f_.add(M_P_86_FLEE,"Fuite toujours possible");
        f_.add(M_P_86_FREE_TEAMS,"Équipes libres");
        f_.add(M_P_86_GENDER_PK,"Genre");
        f_.add(M_P_86_HAPPINESS_PK,"Bonheur");
        f_.add(M_P_86_HEAL_HP,"Soigner les points de vie");
        f_.add(M_P_86_HIDE_COMMENTS,"Cacher les commentaires");
        f_.add(M_P_86_HP_RATE,"Taux de vie restant");
        f_.add(M_P_86_INDEX,"Revenir à l'indexe");
        f_.add(M_P_86_ITEM_PK,"Objet");
        f_.add(M_P_86_IV_FOE,"Iv des pokemon de vos adversaires");
        f_.add(M_P_86_IV_PLAYER,"Iv de vos pokemon");
        f_.add(M_P_86_KO_FOE_FIGHTERS,"Pokemon ko du dresseur ennemi");
        f_.add(M_P_86_KO_PLAYER_FIGHTERS,"Pokemon ko du joueur");
        f_.add(M_P_86_LAW_CHOICE_FOE,"Choix de la loi de probabilité du coefficient de dégâts pour les pokemon de vos adversaires");
        f_.add(M_P_86_LAW_CHOICE_PLAYER,"Choix de la loi de probabilité du coefficient de dégâts pour vos pokemon");
        f_.add(M_P_86_LEVEL_PK,"Niveau");
        f_.add(M_P_86_MOVES_PK,"Attaques");
        f_.add(M_P_86_MULTIPLICITY,"Place sur le terrain");
        f_.add(M_P_86_MULTIPLICITY_FIGHT,"Multiplicité du combat");
        f_.add(M_P_86_NAME_PK,"Nom");
        f_.add(M_P_86_NEXT_BUTTON,">>");
        f_.add(M_P_86_SELECT_TEAM,"Sélectionner une équipe");
        f_.add(M_P_86_NOT_KO_FOE_FIGHTERS,"Pokemon de front non ko du dresseur ennemi");
        f_.add(M_P_86_NOT_SELECTED_FOE,"Pas de dresseur ennemi sélectionné");
        f_.add(M_P_86_NOT_SELECTED_PLAYER_PK,"Pas de combattant dans l'équipe du joueur");
        f_.add(M_P_86_NO_FIGHT,"Numéro de combat");
        f_.add(M_P_86_PREVIOUS_BUTTON,"<<");
        f_.add(M_P_86_RANDOM_WILD,"Apparition des pokemon aléatoire");
        f_.add(M_P_86_RATE_DAMAGE,"Probabilité");
        f_.add(M_P_86_RATE_DAMAGE_EV,"Coefficient");
        f_.add(M_P_86_RATE_ISSUE,"{0} n''est pas un taux valide.");
        f_.add(M_P_86_RATE_WIN_MONEY_BASE,"Rapport d'argent gagné entre le gain lors d'une victoire et la base de gain");
        f_.add(M_P_86_RATE_WIN_MONEY_LOOSE,"Rapport d'argent perdu entre la perte lords d'une défaite et le gain lors d'une victoire");
        f_.add(M_P_86_REMAINING_HP,"Points de vie restants");
        f_.add(M_P_86_REMOVE,"Supprimer");
        f_.add(M_P_86_RESTORED_MOVES,"Attaques de vos pokemon restaurées à la fin du combat");
        f_.add(M_P_86_ROUND,"Numéro de tour");
        f_.add(M_P_86_SEARCH,"Chercher");
        f_.add(M_P_86_SEARCH_PK_PLAYER,"Rerchercher un pokemon");
        f_.add(M_P_86_SELECT,"Sélectionner");
        f_.add(M_P_86_SELECTED,"Sélectionné");
        f_.add(M_P_86_SELECT_ALLY_PK,"Pokemon du dresseur allié");
        f_.add(M_P_86_SELECT_FOE_PK,"Pokemon du dresseur ennemi");
        f_.add(M_P_86_SELECT_PK,"Sélectionnez votre équipe de pokemon");
        f_.add(M_P_86_SELECT_PK_EVOS,"Sélectionnez les évolutions de vos pokemon");
        f_.add(M_P_86_SELECT_PK_EVOS_AFTER_FIGHT,"Sélectionnez les évolutions de vos pokemon aprè le combat");
        f_.add(M_P_86_SELECT_PK_MOVES,"Sélectionnez les attaques de vos pokemon pour chaque tour");
        f_.add(M_P_86_SELECT_PK_MOVE_TARGET,"Sélectionnez l'attaque et la cible de vos pokemon pour chaque tour");
        f_.add(M_P_86_SELECT_SENT_PK,"Sélectionnez vos pokemon envoyés pour chaque tour");
        f_.add(M_P_86_SHORT_ISSUE,"{0} n''est pas un entier valide.");
        f_.add(M_P_86_SKIP_LEARN,"Ne pas apprendre les attaques déjà connues");
        f_.add(M_P_86_TITLE,"Simulation de combats");
        f_.add(M_P_86_TITLE_PARAM,"Simulation de combats {0}/8");
        f_.add(M_P_86_UNSELECTED_ACTION,"Aucune action sélectionnée");
        f_.add(M_P_86_UNSELECTED_MOVE,"Aucune attaque sélectionnée");
        f_.add(M_P_86_UNSELECTED_PK,"Aucun pokemon sélectionné");
        f_.add(M_P_86_VALIDATE_MOVES,"Valider l'apprentissage des attaques");
        f_.add(M_P_86_VALIDATE_MOVE_TARGET,"Valider le choix de l'attaque et le choix de la cible");
        f_.add(M_P_86_WINNING_EXP_PTS_FIGHT,"Coefficient de gain de points d'expérience");
        f_.add(M_P_86_WIN_PTS,"Difficulté de gain des points");
        f_.add(M_P_86_WIN_TRAINER_EXP,"Coefficient de gain de points d'expérience lors d'un combat contre un dresseur");
        f_.add(M_P_86_ACTION,"Actions");
        f_.add(M_P_86_PLAYER_HEADER,"Joueur indice");
        f_.add(M_P_86_FOE_HEADER,"Ennemi indice");
        f_.add(M_P_86_SIMU_BY_STEP,"Simuler le combat tour à tour avec une graine");
        f_.add(M_P_86_NB_FLEE_ATTEMPT,"Le nombre de tentatives de fuites est de:");
        f_.add(M_P_86_NB_ROUND,"Le nombre de tours écoulés est de:");
        f_.add(M_P_86_WINNING_MONEY,"L'argent gagné vaut:");
        f_.add(M_P_86_LOST_OBJECTS,"Objets perdus");
        f_.add(M_P_86_CAUGHT_EVOS,"Evolutions attrapées");
        f_.add(M_P_86_FIRST_POSIT_PLAYER,"Premières positions pour joueur");
        f_.add(M_P_86_FIRST_POSIT_FOE,"Premières positions pour ennemi");
        f_.add(M_P_86_FIGHT_ENABLED_MOVES,"Attaques globales actives");
        f_.add(M_P_86_FIGHT_STILL_ENABLED_MOVES,"Etat de l'activité des attaques globales");
        f_.add(M_P_86_CURRENT_USER,"Lanceur courant");
        f_.add(M_P_86_FIGHT_STATE,"état du combat");
        f_.add(M_P_86_FIGHT_STATE_SWITCH_PROPOSE,"échange proposé");
        f_.add(M_P_86_FIGHT_STATE_SWITCH_WHILE_KO_USER,"échange lors d'un ko d'équipe du joueur");
        f_.add(M_P_86_FIGHT_STATE_ATTAQUES,"attaques");
        f_.add(M_P_86_FIGHT_STATE_APPRENDRE_EVOLUER,"apprendre et évoluer pour l'équipe du joueur");
        f_.add(M_P_86_FIGHT_STATE_SWITCH_APRES_ATTAQUE,"échange après utilisation d'attaque");
        f_.add(M_P_86_FIGHT_STATE_RIEN,"pas de combat");
        f_.add(M_P_86_USED_ITEMS_WHILE_ROUND,"objets utilisés lors du tour");
        f_.add(M_P_86_EVO_CHOICES,"choix d'attaques et d'évolution");
        f_.add(M_P_86_ALLY_CHOICES,"choix d'attaques alliées");
        f_.add(M_P_86_ALLY_CHOICES_KEY,"Votre choix d'attaque et cible");
        f_.add(M_P_86_ALLY_CHOICES_VALUE,"Choix d'attaque et cible du dresseur allié");
        f_.add(M_P_86_NB_KO_ROUND,"nombre de ko lors du tour");
        f_.add(M_P_86_NB_KO_PREVIOUS_ROUND,"nombre de ko lors du tour précédent");
        f_.add(M_P_86_SUCCESSFUL_MOVES_ROUND,"attaques réussies lors du tour");
        f_.add(M_P_86_TEAM_GENERALITY,"généralité de l'équipe");
        f_.add(M_P_86_TITLE_FOE,"L'équipe ennemie");
        f_.add(M_P_86_TITLE_PLAYER,"L'équipe du joueur");
        f_.add(M_P_86_PLAYER_FOE,"Voici pour chacun de vos combattants, les combattants ennemis:");
        f_.add(M_P_86_ENBALED_MOVES_GROUPS,"Voici l'activité des effets des groupes d'attaques suivants utilisées par l'équipe:");
        f_.add(M_P_86_TEAM_ENABLED_MOVES,"Voici l'activité des effets des attaques suivantes sur l'équipe:");
        f_.add(M_P_86_ENBALED_MOVES_SEND,"Voici les utilisations des attaques par l'équipe lors d'une entrée d'un pokemon adverse sur le terrain:");
        f_.add(M_P_86_ENBALED_MOVES_USES,"Voici les utilisations des attaques par l'équipe lors d'une entrée d'un pokemon adverse sur le terrain:");
        f_.add(M_P_86_ENBALED_MOVES_USES_NB,"Nombre");
        f_.add(M_P_86_HEAL_AFTER,"Voici les utilisations des attaques soignant à la fin du tour suivant l'utilisation par l'équipe:");
        f_.add(M_P_86_MOVE_ANT,"Voici les utilisations des attaques touchant une cible deux tours après le lancer de l'attaque par un membre de l'équipe:");
        f_.add(M_P_86_KIND_ACTION,"action");
        f_.add(M_P_86_KIND_ACTION_NO,"pas d'action");
        f_.add(M_P_86_KIND_ACTION_HEAL,"simple action de soin");
        f_.add(M_P_86_KIND_ACTION_HEAL_MOVE,"action de soin d'attaque");
        f_.add(M_P_86_KIND_ACTION_MOVE,"action d'attaque");
        f_.add(M_P_86_KIND_ACTION_SWITCH,"échange");
        f_.add(M_P_86_KIND_ACTION_FIELD_FIRST,"première attaque choisie");
        f_.add(M_P_86_KIND_ACTION_FIELD_FINAL,"finale attaque choisie");
        f_.add(M_P_86_KIND_ACTION_FIELD_ITEM,"objet de soin choisi");
        f_.add(M_P_86_KIND_ACTION_FIELD_SUF,"remplaçant choisi");
        f_.add(M_P_86_KIND_ACTION_FIELD_TAR,"cible choisie");
        f_.add(M_P_86_KIND_ACTION_FIELD_TEAM,"soin d'équipe");
        f_.add(M_P_86_ABILITY,"La capacité de base du combattant est:");
        f_.add(M_P_86_ACTED,"Le combattant a joué.");
        f_.add(M_P_86_CHANGED,"Le combattant a changé de forme.");
        f_.add(M_P_86_CLONE,"Les points de vie restants du clone du combattant valent:");
        f_.add(M_P_86_COPIED_MOVES,"Les attaques suivantes sont copiées:");
        f_.add(M_P_86_COPIED_MOVES_NEW,"Nouvelle attaque");
        f_.add(M_P_86_COPIED_MOVES_OLD,"Ancienne attaque");
        f_.add(M_P_86_COPIED_MOVES_PP, PP_COURANT);
        f_.add(M_P_86_CURRENT_ABILITY,"La capacité courante du combattant est:");
        f_.add(M_P_86_CURRENT_GENDER,"Le genre courant du combattant est:");
        f_.add(M_P_86_CURRENT_MOVES,"Les attaques courantes sont les suivantes:");
        f_.add(M_P_86_CURRENT_MOVES_VALUE_ONE, PP_COURANT);
        f_.add(M_P_86_CURRENT_MOVES_VALUE_TWO,"Pp max");
        f_.add(M_P_86_CURRENT_NAME,"Le nom courant du combattant est:");
        f_.add(M_P_86_DAMAGE_POWER_TYPES_INF,"Voici le tableau des coefficients des puissances des attaques infligées par le combattant en fonction des types:");
        f_.add(M_P_86_DAMAGE_POWER_TYPES_SUF,"Voici le tableau des coefficients des puissances des attaques subies par le combattant en fonction des types:");
        f_.add(M_P_86_DAMAGE_POWER_TYPES_KEY,"Type");
        f_.add(M_P_86_DAMAGE_POWER_TYPES_VALUE_ONE,"Coefficient de la puissance de l'attaque infligée");
        f_.add(M_P_86_DAMAGE_POWER_TYPES_VALUE_TWO,"Coefficient de la puissance de l'attaque subie");
        f_.add(M_P_86_DISAPPEARED,"Le combattant a disparu.");
        f_.add(M_P_86_ENBALED_MOVES,"Voici l'activité des effets des attaques suivantes sur le combattant:");
        f_.add(M_P_86_ENBALED_MOVES_ALLY,"Voici l'activité des effets des attaques suivantes sur les alliés du combattant:");
        f_.add(M_P_86_ENBALED_MOVES_ALLY_KEY, ATTAQUE);
        f_.add(M_P_86_ENBALED_MOVES_ALLY_ENABLED, ACTIF);
        f_.add(M_P_86_ENBALED_MOVES_ENABLED, ACTIF);
        f_.add(M_P_86_ENBALED_MOVES_NB_ROUND, NOMBRE_DE_TOURS);
        f_.add(M_P_86_ENBALED_MOVES_REL,"Voici l'activité des effets des attaques suivantes mettant en relation le combattant avec les autres:");
        f_.add(M_P_86_FORBIDDEN_MOVES,"Voici les attaques interdites par le combattant en fonction des autres combattants:");
        f_.add(M_P_86_GENDER,"Le genre de base du combattant est:");
        f_.add(M_P_86_GROUND_PLACE,"Le combattant a en partant de la gauche pour place actuelle:");
        f_.add(M_P_86_GROUND_SUBSTIT,"Le combattant a en partant de la gauche pour place de remplacement:");
        f_.add(M_P_86_GROUND,"Place ou arrière");
        f_.add(M_P_86_HAPPINESS,"Le niveau de bonheur du combattant est de:");
        f_.add(M_P_86_HEIGHT,"La taille du combattant est:");
        f_.add(M_P_86_INC_ACCURACY,"Voici les attaques augmentant la précision du combattant contre les autres combattants:");
        f_.add(M_P_86_INC_ACCURACY_ENABLED, ACTIF);
        f_.add(M_P_86_INVOKED_MOVES,"Les attaques déjà invoquées lors de ce tour par le combattant sont les suivantes:");
        f_.add(M_P_86_ITEM,"L'objet du combattant est:");
        f_.add(M_P_86_LAST_SUCCESSFUL_MOVE,"La dernière attaque réussie est:");
        f_.add(M_P_86_LAST_SUFFERED_MOVE,"La dernière attaque subie est:");
        f_.add(M_P_86_LAST_SUFFERED_MOVE_TYPES,"Les types de la dernière attaque subie sont les suivants:");
        f_.add(M_P_86_LAST_USED_ITEM,"Le dernier objet utilisé est:");
        f_.add(M_P_86_LAST_USED_MOVE,"La dernière attaque utilisée est:");
        f_.add(M_P_86_LEVEL,"Le niveau d'expérience du combattant est de:");
        f_.add(M_P_86_MOVES,"Les attaques de base (avant combat, modifiable via une montée de niveau ou une utilisation d'attaque) sont les suivantes:");
        f_.add(M_P_86_MOVES_KEY, ATTAQUE);
        f_.add(M_P_86_MOVES_VALUE_ONE, PP_COURANT);
        f_.add(M_P_86_MOVES_VALUE_TWO,"Pp max");
        f_.add(M_P_86_NAME,"Le nom de base du combattant est:");
        f_.add(M_P_86_NB_ROUNDS,"Nombre de tour(s):");
        f_.add(M_P_86_NB_ROUND_PREPA,"Le nombre de tours de préparation écoulé est de:");
        f_.add(M_P_86_NB_SUCCESS_MOVES,"Nombre de fois consécutif de l'attaque réussie:");
        f_.add(M_P_86_NB_USES,"Voici le nombre d'utilisations des attaques par le combattant:");
        f_.add(M_P_86_NB_USES_VALUE,"Nombe d'utilisation");
        f_.add(M_P_86_NECESSARY_PTS,"Le nombre de points nécessaires pour monter de niveau est de:");
        f_.add(M_P_86_NEEDING_RECHARGE,"Le combattant a besoin d'un tour de rechargement.");
        f_.add(M_P_86_NICKNAME,"Le surnom du combattant est:");
        f_.add(M_P_86_PRIVATE_MOVES,"Voici les attaques que les autres combattants ne peuvent pas utiliser si le combattant a activé les privations de groupe d'attaques:");
        f_.add(M_P_86_PRIVATE_MOVES_MV,"Attaques interdites");
        f_.add(M_P_86_REFRESH,"Rafraîchir");
        f_.add(M_P_86_REMAIN_HP,"Les points de vie restants du combattant valent:");
        f_.add(M_P_86_STATISTICS,"Les valeurs de base, les evs, les ivs et les crans des statistiques sont donnés dans le tableau suivant:");
        f_.add(M_P_86_STATISTICS_BASE,"Base");
        f_.add(M_P_86_STATISTICS_BOOST,"Cran");
        f_.add(M_P_86_STATISTICS_EV,"Ev");
        f_.add(M_P_86_STATISTICS_IV,"Iv");
        f_.add(M_P_86_STATISTICS_KEY,"Statistique");
        f_.add(M_P_86_STATISTICS_VALUE,"Valeur");
        f_.add(M_P_86_STATUS,"Le nombre de tours de chaque statut est le suivant:");
        f_.add(M_P_86_STATUS_KEY,"Statut");
        f_.add(M_P_86_NB_USES_KEY, ATTAQUE);
        f_.add(M_P_86_STATUS_REL,"L'activité de chaque statut subi par chaque combattant est le suivant:");
        f_.add(M_P_86_STATUS_REL_ENABLED, ACTIF);
        f_.add(M_P_86_STATUS_VALUE,"Nombre de tour");
        f_.add(M_P_86_SUCCESSFUL_MOVE,"L'attaque est réussie.");
        f_.add(M_P_86_SUFFERING_DAMAGE,"Voici le tableau des dégâts subis par le combattant en fonction des catégories d'attaque subie:");
        f_.add(M_P_86_SUFFERING_DAMAGE_KEY,"Catégorie");
        f_.add(M_P_86_SUFFERING_DAMAGE_VALUE_ROUND,"Dégâts subis pendant ce tour");
        f_.add(M_P_86_SUFFERING_DAMAGE_VALUE_USING,"Dégâts subis depuis le dernier choix d'attaque");
        f_.add(M_P_86_SUF_DAMAGE,"Les dégâts subis par le combattant en fonction des catégories sont les suivants:");
        f_.add(M_P_86_SUF_MOVE,"La dernière attaque subie est:");
        f_.add(M_P_86_SUF_MOVE_TYPES,"Les types de la dernière attaque subie sont:");
        f_.add(M_P_86_TEAM,"Retour au données générales de l'équipe");
        f_.add(M_P_86_TITLE_GEN,"Généralités sur le combattant courant");
        f_.add(M_P_86_TRACKING_MOVES,"Voici les attaques affectées des autres combattants par le combattant:");
        f_.add(M_P_86_TRACKING_MOVES_0,"Voici les attaques affectées par le combattant en fonction des autres combattants:");
        f_.add(M_P_86_TRACKING_MOVES_ENABLED, ACTIF);
        f_.add(M_P_86_TRACKING_MOVES_NB_ROUND, NOMBRE_DE_TOURS);
        f_.add(M_P_86_TRACKING_MOVES_V,"Attaque affectée");
        f_.add(M_P_86_TRAPPING_MOVES,"Voici les attaques piégeantes utilisées par le combattant sur les autres:");
        f_.add(M_P_86_TRAPPING_MOVES_ENABLED, ACTIF);
        f_.add(M_P_86_TRAPPING_MOVES_NB_ROUND, NOMBRE_DE_TOURS);
        f_.add(M_P_86_TYPES,"Les types du combattant sont les suivants:");
        f_.add(M_P_86_TYPES_PROTECTED,"Voici les types des attaques inefficaces sur le combattant:");
        f_.add(M_P_86_USED_BALL_CATCHING,"La balle utilisée pour la capture du combattant est:");
        f_.add(M_P_86_USED_MOVE_LAST_ROUND,"L'attaque utilisée au dernier tour est:");
        f_.add(M_P_86_USING_ITEM,"Le combattant est en train d'utiliser un objet.");
        f_.add(M_P_86_WEIGHT,"La masse du combattant est:");
        f_.add(M_P_86_WON_EXP,"Points d'expérience gagnés à ajouter:");
        f_.add(M_P_86_WON_EXP_LAST_LEVEL,"Points d'expérience gagnés depuis la dernière montée de niveau:");
        f_.add(M_P_86_HEAL_AFTER_KEY_RD,"Nombre de tours depuis le dernier lancer");
        f_.add(M_P_86_HEAL_AFTER_KEY_USED_CURRENT,"Lancé pendant ce tour");
        f_.add(M_P_86_HEAL_AFTER_KEY_USED_LAST,"Lancé au tour précédent");
        f_.add(M_P_86_MOVE_ANT_DAMAGE,"Dégâts");
        f_.add(M_P_86_MOVE_ANT_FOE,"Ennemi");
        f_.add(M_P_86_MOVE_ANT_GROUND,"Place de la cible à partir de la gauche");
        f_.add(M_P_86_MOVE_ANT_NB_ROUND, NOMBRE_DE_TOURS);
        f_.add(M_P_86_MOVE_ANT_NO,"-");
        f_.add(M_P_86_MOVE_ANT_PLAYER,"Joueur");
        f_.add(M_P_86_MOVE_ANT_TEAM,"Equipe");
        f_.add(M_P_86_TARGET,"Cible");
        f_.add(M_P_86_MOVE,ATTAQUE);
        f_.add(M_P_86_MOVES_GR,"Attaques");
        f_.add(M_P_86_ENABLED,ATTAQUE);
        f_.add(M_P_86_EVO_PK,"Évolution");
        f_.add(M_P_86_EVO_PK_MOVES,"Attaques à apprendre");
        f_.add(M_P_86_EVO_PK_ABILITIES,"Capacité");
        f_.add(M_P_86_KEY_FIGHTER,"Id");
        f_.add(M_P_86_ITEM_USE,"Objet");
        f_.add(M_P_86_ITEM_USE_NB,"Quantité");
        f_.add(M_P_86_SEED,"Graine");
        return f_;
    }
}