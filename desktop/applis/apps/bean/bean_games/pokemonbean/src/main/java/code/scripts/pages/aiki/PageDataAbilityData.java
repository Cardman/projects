package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataAbilityData extends PageCardsCommon{
private static final String C_P_98_0="javahtml";
private static final String C_P_98_1="ability";
private static final String C_P_98_2="msg_ability,title";
private static final String C_P_98_3="displayName";
private static final String C_P_98_4=PkScriptPages.REN_ADD_WEB_CSS_ABILITIES_CSS;
private static final String C_P_98_5="stylesheet";
private static final String C_P_98_6="text/css";
private static final String C_P_98_7="$clickIndex()";
private static final String C_P_98_8="";
private static final String C_P_98_9="msg_ability,abilities";
private static final String C_P_98_10="{displayName}";
private static final String C_P_98_11="endRound";
private static final String C_P_98_12="msg_effendround,rank";
private static final String C_P_98_13="endRoundRank";
private static final String C_P_98_14=GO_TO_ENDROUND;
private static final String C_P_98_15="";
private static final String C_P_98_16="msg_ability,endRound";
private static final String C_P_98_17="!reasonsEndRound.isEmpty()";
private static final String C_P_98_18="msg_effendround,reasons";
private static final String C_P_98_19="reasonsEndRound";
private static final String C_P_98_20="r";
private static final String C_P_98_21="java.lang.String";
private static final String C_P_98_22="{r}";
private static final String C_P_98_23="c";
private static final String C_P_98_24="mapVarsFailEndRound";
private static final String C_P_98_25="r";
private static final String C_P_98_26="java.lang.String";
private static final String C_P_98_27="java.lang.String";
private static final String C_P_98_28="{c} : {r}";
private static final String C_P_98_29="sending";
private static final String C_P_98_30="effectSendBean";
private static final String C_P_98_31="aiki.beans.effects";
private static final String C_P_98_32="EffectWhileSendingBean";
private static final String C_P_98_33="$intern.effect=getEffectSending()";
private static final String C_P_98_34="achievedDisappearedPk";
private static final String C_P_98_35="msg_ability,achieved_disappeared_time";
private static final String C_P_98_36="msg_ability,achieved_disappeared";
private static final String C_P_98_37="breakProtection";
private static final String C_P_98_38="!breakProtectionMoves.isEmpty()";
private static final String C_P_98_39="msg_ability,break_protection_time";
private static final String C_P_98_40="msg_ability,break_protection";
private static final String C_P_98_41="breakProtectionMoves";
private static final String C_P_98_42="m";
private static final String C_P_98_43="$clickBreakProtectionMoves({([m])})";
private static final String C_P_98_44="";
private static final String C_P_98_45="{getTrBreakProtectionMoves(([m]))}";
private static final String C_P_98_46="cancelSecEffectOther";
private static final String C_P_98_47="msg_ability,cancel_sec_effect_other";
private static final String C_P_98_48="cancelSecEffectOwner";
private static final String C_P_98_49="msg_ability,cancel_sec_effect_owner";
private static final String C_P_98_50="chgtTypeByDamage";
private static final String C_P_98_51="msg_ability,chgt_type_by_damage_time";
private static final String C_P_98_52="msg_ability,chgt_type_by_damage";
private static final String C_P_98_53="!chgtTypeByWeather.isEmpty()";
private static final String C_P_98_54="msg_ability,chgt_type_by_weather_time";
private static final String C_P_98_55="msg_ability,chgt_type_by_weather";
private static final String C_P_98_56="msg_ability,chgt_type_by_weather_key";
private static final String C_P_98_57="msg_ability,chgt_type_by_weather_value";
private static final String C_P_98_58="s";
private static final String C_P_98_59="chgtTypeByWeather";
private static final String C_P_98_60="r";
private static final String C_P_98_61="java.lang.Object";
private static final String C_P_98_62="java.lang.Object";
private static final String C_P_98_63="isChgtTypeByWeather(([s]))";
private static final String C_P_98_64="$clickChgtTypeByWeatherKey({([s])})";
private static final String C_P_98_65="";
private static final String C_P_98_66="{getTrChgtTypeByWeatherKey(([s]))}";
private static final String C_P_98_67="!isChgtTypeByWeather(([s]))";
private static final String C_P_98_68="msg_ability,chgt_type_by_weather_no";
private static final String C_P_98_69="{getTrChgtTypeByWeatherValue(([s]))}";
private static final String C_P_98_70="copyMovesTypes";
private static final String C_P_98_71="msg_ability,copy_move_types_time";
private static final String C_P_98_72="msg_ability,copy_move_types";
private static final String C_P_98_73="giveItemToAllyHavingUsed";
private static final String C_P_98_74="msg_ability,cancel_using_items_team_time";
private static final String C_P_98_75="msg_ability,cancel_using_items_team";
private static final String C_P_98_76="forbidUseBerryAgainstFoes";
private static final String C_P_98_77="msg_ability,forbid_berry_foes_time";
private static final String C_P_98_78="msg_ability,forbid_berry_foes";
private static final String C_P_98_79="healedStatusBySwitch";
private static final String C_P_98_80="msg_ability,healed_status_by_switch_time";
private static final String C_P_98_81="msg_ability,healed_status_by_switch";
private static final String C_P_98_82="ignFoeStatisBoost";
private static final String C_P_98_83="msg_ability,ign_foe_satis_boost_time_1";
private static final String C_P_98_84="msg_ability,ign_foe_satis_boost_time_2";
private static final String C_P_98_85="msg_ability,ign_foe_satis_boost";
private static final String C_P_98_86="immuCh";
private static final String C_P_98_87="msg_ability,immu_ch_time";
private static final String C_P_98_88="msg_ability,immu_ch";
private static final String C_P_98_89="immuDamageAllyMoves";
private static final String C_P_98_90="msg_ability,immu_damage_ally_moves_time";
private static final String C_P_98_91="msg_ability,immu_damage_ally_moves";
private static final String C_P_98_92="immuDamageRecoil";
private static final String C_P_98_93="msg_ability,immu_damage_recoil_time";
private static final String C_P_98_94="msg_ability,immu_damage_recoil";
private static final String C_P_98_95="immuDamageTrappingMoves";
private static final String C_P_98_96="msg_ability,immu_damage_trapping_moves_time";
private static final String C_P_98_97="msg_ability,immu_damage_trapping_moves";
private static final String C_P_98_98="immuRechargeRound";
private static final String C_P_98_99="!immuRechargeRoundMoves.isEmpty()";
private static final String C_P_98_100="msg_ability,immu_recharge_round_time";
private static final String C_P_98_101="msg_ability,immu_recharge_round";
private static final String C_P_98_102="immuRechargeRoundMoves";
private static final String C_P_98_103="m";
private static final String C_P_98_104="$clickImmuRechargeRoundMoves({([m])})";
private static final String C_P_98_105="";
private static final String C_P_98_106="{getTrImmuRechargeRoundMoves(([m]))}";
private static final String C_P_98_107="immuSufferedDamageLowEff";
private static final String C_P_98_108="msg_ability,immu_suffered_damage_low_eff_time";
private static final String C_P_98_109="msg_ability,immu_suffered_damage_low_eff";
private static final String C_P_98_110="inflictingDamageInsteadOfSuffering";
private static final String C_P_98_111="msg_ability,inflicting_damage_instead_suffering_time";
private static final String C_P_98_112="msg_ability,inflicting_damage_instead_suffering";
private static final String C_P_98_113="mumy";
private static final String C_P_98_114="msg_ability,mumy_time";
private static final String C_P_98_115="msg_ability,mumy";
private static final String C_P_98_116="nbHits";
private static final String C_P_98_117="msg_ability,nb_hits_time";
private static final String C_P_98_118="msg_ability,nb_hits";
private static final String C_P_98_119="plate";
private static final String C_P_98_120="msg_ability,plate";
private static final String C_P_98_121="reverseEffectsPowerMovesTypesGlobal";
private static final String C_P_98_122="!reverseEffectsPowerMovesTypesGlobalAbilities.isEmpty()";
private static final String C_P_98_123="msg_ability,reverse_effects_power_global";
private static final String C_P_98_124="reverseEffectsPowerMovesTypesGlobalAbilities";
private static final String C_P_98_125="m";
private static final String C_P_98_126="$clickReversePowerTypesAbilities({([m])})";
private static final String C_P_98_127="";
private static final String C_P_98_128="{getTrReversePowerTypesAbilities(([m]))}";
private static final String C_P_98_129="slowing";
private static final String C_P_98_130="msg_ability,slowing_time";
private static final String C_P_98_131="msg_ability,slowing";
private static final String C_P_98_132="takeItemByDamagingMove";
private static final String C_P_98_133="msg_ability,achieved_disappeared_time";
private static final String C_P_98_134="msg_ability,achieved_disappeared";
private static final String C_P_98_135="!healHpWhileUsingBerry.isZero()";
private static final String C_P_98_136="msg_ability,heal_hp_while_using_berry_time";
private static final String C_P_98_137="msg_ability,heal_hp_while_using_berry";
private static final String C_P_98_138="healHpWhileUsingBerry";
private static final String C_P_98_139="!maxHpForUsingBerry.isZero()";
private static final String C_P_98_140="msg_ability,max_hp_for_using_berry_time";
private static final String C_P_98_141="msg_ability,max_hp_for_using_berry";
private static final String C_P_98_142="maxHpForUsingBerry";
private static final String C_P_98_143="!multAllyDamage.isZero()";
private static final String C_P_98_144="msg_ability,mult_ally_damage_time";
private static final String C_P_98_145="msg_ability,mult_ally_damage";
private static final String C_P_98_146="multAllyDamage";
private static final String C_P_98_147="!multDamageCh.isZero()";
private static final String C_P_98_148="msg_ability,mult_damage_ch_time";
private static final String C_P_98_149="msg_ability,mult_damage_ch";
private static final String C_P_98_150="multDamageCh";
private static final String C_P_98_151="!multEvtRateCh.isZero()";
private static final String C_P_98_152="msg_ability,mult_evt_rate_ch_time";
private static final String C_P_98_153="msg_ability,mult_evt_rate_ch";
private static final String C_P_98_154="multEvtRateCh";
private static final String C_P_98_155="!multEvtRateSecEffectOwner.isZero()";
private static final String C_P_98_156="msg_ability,mult_evt_rate_sec_effect_owner_time";
private static final String C_P_98_157="msg_ability,mult_evt_rate_sec_effect_owner";
private static final String C_P_98_158="multEvtRateSecEffectOwner";
private static final String C_P_98_159="!multStab.isZero()";
private static final String C_P_98_160="msg_ability,mult_stab_time";
private static final String C_P_98_161="msg_ability,mult_stab";
private static final String C_P_98_162="multStab";
private static final String C_P_98_163="!multSufferedDamageSuperEff.isZero()";
private static final String C_P_98_164="msg_ability,mult_suffered_damage_super_eff_time";
private static final String C_P_98_165="msg_ability,mult_suffered_damage_super_eff";
private static final String C_P_98_166="multSufferedDamageSuperEff";
private static final String C_P_98_167="!multVarBoost.isZero()";
private static final String C_P_98_168="msg_ability,mult_var_boost_time";
private static final String C_P_98_169="msg_ability,mult_var_boost";
private static final String C_P_98_170="multVarBoost";
private static final String C_P_98_171="!recoilDamageFoe.isZero()";
private static final String C_P_98_172="msg_ability,recoil_damage_foe_time";
private static final String C_P_98_173="msg_ability,recoil_damage_foe";
private static final String C_P_98_174="recoilDamageFoe";
//private static final String C_P_98_175="!recoilDamageFoeByKoOwner.isZero()";
//private static final String C_P_98_176="msg_ability,recoil_damage_foe_by_ko_owner_time";
//private static final String C_P_98_177="msg_ability,recoil_damage_foe_by_ko_owner";
//private static final String C_P_98_178="recoilDamageFoeByKoOwner";
private static final String C_P_98_179="decreaseNecStepsHatchInt()";
private static final String C_P_98_180="msg_ability,decrease_nec_steps_hatch_time";
private static final String C_P_98_181="msg_ability,decrease_nec_steps_hatch";
private static final String C_P_98_182="decreaseNecStepsHatch";
private static final String C_P_98_183="nbUsedPpInt()";
private static final String C_P_98_184="msg_ability,nb_used_pp_time";
private static final String C_P_98_185="msg_ability,nb_used_pp";
private static final String C_P_98_186="nbUsedPp";
private static final String C_P_98_187="!immuMove.isEmpty()";
private static final String C_P_98_188="msg_ability,immu_moves";
private static final String C_P_98_189="immuMove";
private static final String C_P_98_190="m";
private static final String C_P_98_191="$clickImmuMove({([m])})";
private static final String C_P_98_192="";
private static final String C_P_98_193="{getTrImmuMove(([m]))}";
private static final String C_P_98_194="!immuAllyFromMoves.isEmpty()";
private static final String C_P_98_195="msg_ability,immu_ally_from_moves";
private static final String C_P_98_196="immuAllyFromMoves";
private static final String C_P_98_197="m";
private static final String C_P_98_198="$clickImmuAllyFromMoves({([m])})";
private static final String C_P_98_199="";
private static final String C_P_98_200="{getTrImmuAllyFromMoves(([m]))}";
private static final String C_P_98_201="!immuWeather.isEmpty()";
private static final String C_P_98_202="msg_ability,immu_weathers";
private static final String C_P_98_203="immuWeather";
private static final String C_P_98_204="m";
private static final String C_P_98_205="$clickWeather({([m])})";
private static final String C_P_98_206="";
private static final String C_P_98_207="{getTrWeather(([m]))}";
private static final String C_P_98_208="!ignAbility.isEmpty()";
private static final String C_P_98_209="msg_ability,ign_ability_time";
private static final String C_P_98_210="msg_ability,ign_ability";
private static final String C_P_98_211="ignAbility";
private static final String C_P_98_212="m";
private static final String C_P_98_213="$clickIgnAbility({([m])})";
private static final String C_P_98_214="";
private static final String C_P_98_215="{getTrIgnAbility(([m]))}";
private static final String C_P_98_216="!ignFoeTeamMove.isEmpty()";
private static final String C_P_98_217="msg_ability,ign_foe_team_move_time";
private static final String C_P_98_218="msg_ability,ign_foe_team_move";
private static final String C_P_98_219="ignFoeTeamMove";
private static final String C_P_98_220="m";
private static final String C_P_98_221="$clickIgnFoeTeamMove({([m])})";
private static final String C_P_98_222="";
private static final String C_P_98_223="{getTrIgnFoeTeamMove(([m]))}";
private static final String C_P_98_224="!immuAbility.isEmpty()";
private static final String C_P_98_225="msg_ability,immu_ability_time";
private static final String C_P_98_226="msg_ability,immu_ability";
private static final String C_P_98_227="immuAbility";
private static final String C_P_98_228="m";
private static final String C_P_98_229="$clickImmuAbility({([m])})";
private static final String C_P_98_230="";
private static final String C_P_98_231="{getTrImmuAbility(([m]))}";
private static final String C_P_98_232="!immuStatusBeginRound.isEmpty()";
private static final String C_P_98_233="msg_ability,immu_status_begin_round_time";
private static final String C_P_98_234="msg_ability,immu_status_begin_round";
private static final String C_P_98_235="immuStatusBeginRound";
private static final String C_P_98_236="m";
private static final String C_P_98_237="$clickImmuStatusBeginRound({([m])})";
private static final String C_P_98_238="";
private static final String C_P_98_239="{getTrImmuStatusBeginRound(([m]))}";
private static final String C_P_98_240="!isEmpty(typeForMoves)";
private static final String C_P_98_241="msg_ability,type_for_moves_time";
private static final String C_P_98_242="msg_ability,type_for_moves";
private static final String C_P_98_243="typeForMoves";
private static final String C_P_98_244="isEmpty(typeForMoves)";
private static final String C_P_98_245="!changingBoostTypes.isEmpty()";
private static final String C_P_98_246="msg_ability,changing_boost_types_time";
private static final String C_P_98_247="msg_ability,changing_boost_types";
private static final String C_P_98_248="msg_ability,changing_boost_types_old";
private static final String C_P_98_249="msg_ability,changing_boost_types_new";
private static final String C_P_98_250="msg_ability,changing_boost_types_rate";
private static final String C_P_98_251="s";
private static final String C_P_98_252="changingBoostTypes";
private static final String C_P_98_253="r";
private static final String C_P_98_254="java.lang.Object";
private static final String C_P_98_255="aiki.fight.util.TypeDamageBoost";
private static final String C_P_98_256="{getTrChangingBoostTypesOld(([s]))}";
private static final String C_P_98_257="{getTrChangingBoostTypesNew(([s]))}";
private static final String C_P_98_258="{r.getBoost()}";
private static final String C_P_98_259="!isEmpty(multPower)";
private static final String C_P_98_260="msg_ability,mult_power";
private static final String C_P_98_261="multPower";
private static final String C_P_98_262="!isEmpty(multDamage)";
private static final String C_P_98_263="msg_ability,mult_damage";
private static final String C_P_98_264="multDamage";
private static final String C_P_98_265="!healHpByWeather.isEmpty()";
private static final String C_P_98_266="msg_ability,heal_hp_by_weather_time";
private static final String C_P_98_267="msg_ability,heal_hp_by_weather";
private static final String C_P_98_268="msg_ability,heal_hp_by_weather_key";
private static final String C_P_98_269="msg_ability,heal_hp_by_weather_value";
private static final String C_P_98_270="s";
private static final String C_P_98_271="healHpByWeather";
private static final String C_P_98_272="r";
private static final String C_P_98_273="java.lang.Object";
private static final String C_P_98_274="r";
private static final String C_P_98_275="isHealHpByWeather(([s]))";
private static final String C_P_98_276="$clickHealHpByWeatherKey({([s])})";
private static final String C_P_98_277="";
private static final String C_P_98_278="{getTrHealHpByWeatherKey(([s]))}";
private static final String C_P_98_279="!isHealHpByWeather(([s]))";
private static final String C_P_98_280="msg_ability,heal_hp_by_weather_no";
private static final String C_P_98_281="r.isZeroOrGt()";
private static final String C_P_98_282="msg_ability,heal_hp_by_weather_heal";
private static final String C_P_98_283="r.absNb()";
private static final String C_P_98_284="!r.isZeroOrGt()";
private static final String C_P_98_285="msg_ability,heal_hp_by_weather_loss";
private static final String C_P_98_286="r.absNb()";
private static final String C_P_98_287="!healHpByTypeIfWeather.isEmpty()";
private static final String C_P_98_288="msg_ability,heal_hp_by_weather_type_time";
private static final String C_P_98_289="msg_ability,heal_hp_by_weather_type";
private static final String C_P_98_290="msg_ability,heal_hp_by_weather_type_key";
private static final String C_P_98_291="msg_ability,heal_hp_by_weather_type_key_sec";
private static final String C_P_98_292="msg_ability,heal_hp_by_weather_type_value";
private static final String C_P_98_293="s";
private static final String C_P_98_294="healHpByTypeIfWeather";
private static final String C_P_98_295="r";
private static final String C_P_98_296="java.lang.Object";
private static final String C_P_98_297="r";
private static final String C_P_98_298="isHealHpByTypeIfWeather(([s]))";
private static final String C_P_98_299="$clickHealHpByTypeIfWeatherKey({([s])})";
private static final String C_P_98_300="";
private static final String C_P_98_301="{getTrHealHpByTypeIfWeatherKey(([s]))}";
private static final String C_P_98_302="!isHealHpByTypeIfWeather(([s]))";
private static final String C_P_98_303="msg_ability,heal_hp_by_weather_type_no";
private static final String C_P_98_304="{getTrHealHpByTypeIfWeatherKeySec(([s]))}";
private static final String C_P_98_305="r.isZeroOrGt()";
private static final String C_P_98_306="msg_ability,heal_hp_by_weather_type_heal";
private static final String C_P_98_307="r.absNb()";
private static final String C_P_98_308="!r.isZeroOrGt()";
private static final String C_P_98_309="msg_ability,heal_hp_by_weather_type_loss";
private static final String C_P_98_310="r.absNb()";
private static final String C_P_98_311="!immuLowStat.isEmpty()";
private static final String C_P_98_312="msg_ability,immu_low_stat_time";
private static final String C_P_98_313="msg_ability,immu_low_stat";
private static final String C_P_98_314="immuLowStat";
private static final String C_P_98_315="m";
private static final String C_P_98_316="{getTrImmuLowStat(([m]))}";
private static final String C_P_98_317="msg_ability,immu_low_stat_2";
private static final String C_P_98_318="!immuLowStatIfStatus.isEmpty()";
private static final String C_P_98_319="msg_ability,immu_low_stat_aff_time";
private static final String C_P_98_320="msg_ability,immu_low_stat_aff";
private static final String C_P_98_321="msg_ability,immu_low_stat_aff_key";
private static final String C_P_98_322="msg_ability,immu_low_stat_aff_value";
private static final String C_P_98_323="immuLowStatIfStatus";
private static final String C_P_98_324="s";
private static final String C_P_98_325="$clickImmuLowStatIfStatusKey({([s])})";
private static final String C_P_98_326="";
private static final String C_P_98_327="{getTrImmuLowStatIfStatusKey(([s]))}";
private static final String C_P_98_328="{getTrImmuLowStatIfStatusValue(([s]))}";
private static final String C_P_98_329="!immuLowStatisTypes.isEmpty()";
private static final String C_P_98_330="msg_ability,immu_low_statis_types_time";
private static final String C_P_98_331="msg_ability,immu_low_statis_types";
private static final String C_P_98_332="msg_ability,immu_low_statis_types_key";
private static final String C_P_98_333="msg_ability,immu_low_statis_types_value";
private static final String C_P_98_334="s";
private static final String C_P_98_335="immuLowStatisTypes";
private static final String C_P_98_336="r";
private static final String C_P_98_337="java.lang.Object";
private static final String C_P_98_338="ls";
private static final String C_P_98_339="r";
private static final String C_P_98_340="t";
private static final String C_P_98_341="{getTrImmuLowStatisTypes(([s]))}";
private static final String C_P_98_342="{getTrImmuLowStatisValue(([s]),([t]))}";
private static final String C_P_98_343="!maxStatisticsIfCh.isEmpty()";
private static final String C_P_98_344="msg_ability,max_statistics_if_ch_time";
private static final String C_P_98_345="msg_ability,max_statistics_if_ch";
private static final String C_P_98_346="maxStatisticsIfCh";
private static final String C_P_98_347="m";
private static final String C_P_98_348="{getTrMaxStatisticsIfCh(([m]))}";
private static final String C_P_98_349="!singleStatus.isEmpty()";
private static final String C_P_98_350="msg_ability,single_status_time";
private static final String C_P_98_351="msg_ability,single_status";
private static final String C_P_98_352="msg_ability,single_status_key";
private static final String C_P_98_353="msg_ability,single_status_rate";
private static final String C_P_98_354="s";
private static final String C_P_98_355="singleStatus";
private static final String C_P_98_356="r";
private static final String C_P_98_357="java.lang.Object";
private static final String C_P_98_358="r";
private static final String C_P_98_359="isStatus(([s]))";
private static final String C_P_98_360="$clickSingleStatus({([s])})";
private static final String C_P_98_361="";
private static final String C_P_98_362="{getTrSingleStatus(([s]))}";
private static final String C_P_98_363="!isStatus(([s]))";
private static final String C_P_98_364="msg_ability,single_status_no";
private static final String C_P_98_365="{r}";
private static final String C_P_98_366="!immuMoveTypesByWeather.isEmpty()";
private static final String C_P_98_367="msg_ability,immu_move_types_weather_time";
private static final String C_P_98_368="msg_ability,immu_move_types_weather";
private static final String C_P_98_369="msg_ability,immu_move_types_weather_key";
private static final String C_P_98_370="msg_ability,immu_move_types_weather_type";
private static final String C_P_98_371="s";
private static final String C_P_98_372="immuMoveTypesByWeather";
private static final String C_P_98_373="r";
private static final String C_P_98_374="java.lang.Object";
private static final String C_P_98_375="ls";
private static final String C_P_98_376="r";
private static final String C_P_98_377="t";
private static final String C_P_98_378="isMoveByWeather(([s]))";
private static final String C_P_98_379="$clickImmuMoveByWeather({([s])})";
private static final String C_P_98_380="";
private static final String C_P_98_381="{getTrImmuMoveByWeather(([s]))}";
private static final String C_P_98_382="!isMoveByWeather(([s]))";
private static final String C_P_98_383="msg_ability,immu_move_types_weather_no";
private static final String C_P_98_384="{getTrImmuTypeByWeather(([s]),([t]))}";
private static final String C_P_98_385="!immuStatus.isEmpty()";
private static final String C_P_98_386="msg_ability,immu_status_time";
private static final String C_P_98_387="msg_ability,immu_status";
private static final String C_P_98_388="msg_ability,immu_status_key";
private static final String C_P_98_389="msg_ability,immu_status_status";
private static final String C_P_98_390="s";
private static final String C_P_98_391="immuStatus";
private static final String C_P_98_392="r";
private static final String C_P_98_393="java.lang.Object";
private static final String C_P_98_394="ls";
private static final String C_P_98_395="r";
private static final String C_P_98_396="t";
private static final String C_P_98_397="isMoveByStatus(([s]))";
private static final String C_P_98_398="$clickImmuStatusWeather({([s])})";
private static final String C_P_98_399="";
private static final String C_P_98_400="{getTrImmuStatusWeather(([s]))}";
private static final String C_P_98_401="!isMoveByStatus(([s]))";
private static final String C_P_98_402="msg_ability,immu_status_no";
private static final String C_P_98_403="$clickImmuStatus({([s])},{([t])})";
private static final String C_P_98_404="";
private static final String C_P_98_405="{getTrImmuStatus(([s]),([t]))}";
private static final String C_P_98_406="!immuStatusTypes.isEmpty()";
private static final String C_P_98_407="msg_ability,immu_status_type_time";
private static final String C_P_98_408="msg_ability,immu_status_type";
private static final String C_P_98_409="msg_ability,immu_status_type_key";
private static final String C_P_98_410="msg_ability,immu_status_type_status";
private static final String C_P_98_411="s";
private static final String C_P_98_412="immuStatusTypes";
private static final String C_P_98_413="r";
private static final String C_P_98_414="java.lang.Object";
private static final String C_P_98_415="ls";
private static final String C_P_98_416="r";
private static final String C_P_98_417="t";
private static final String C_P_98_418="{getTrImmuStatusTypes(([s]))}";
private static final String C_P_98_419="$clickImmuStatusTypes({([s])},{([t])})";
private static final String C_P_98_420="";
private static final String C_P_98_421="{getTrImmuStatusValue(([s]),([t]))}";
private static final String C_P_98_422="!divideStatusRound.isEmpty()";
private static final String C_P_98_423="msg_ability,divide_status_round_time";
private static final String C_P_98_424="msg_ability,divide_status_round";
private static final String C_P_98_425="msg_ability,divide_status_round_key";
private static final String C_P_98_426="msg_ability,divide_status_round_value";
private static final String C_P_98_427="s";
private static final String C_P_98_428="divideStatusRound";
private static final String C_P_98_429="r";
private static final String C_P_98_430="java.lang.Object";
private static final String C_P_98_431="r";
private static final String C_P_98_432="$clickDivideStatusRoundKey({([s])})";
private static final String C_P_98_433="";
private static final String C_P_98_434="{getTrDivideStatusRoundKey(([s]))}";
private static final String C_P_98_435="{r}";
private static final String C_P_98_436="!forwardStatus.isEmpty()";
private static final String C_P_98_437="msg_ability,forward_status_time";
private static final String C_P_98_438="msg_ability,forward_status";
private static final String C_P_98_439="msg_ability,forward_status_key";
private static final String C_P_98_440="msg_ability,forward_status_value";
private static final String C_P_98_441="s";
private static final String C_P_98_442="forwardStatus";
private static final String C_P_98_443="r";
private static final String C_P_98_444="java.lang.Object";
private static final String C_P_98_445="java.lang.Object";
private static final String C_P_98_446="$clickForwardStatusKey({([s])})";
private static final String C_P_98_447="";
private static final String C_P_98_448="{getTrForwardStatusKey(([s]))}";
private static final String C_P_98_449="$clickForwardStatusValue({([s])})";
private static final String C_P_98_450="";
private static final String C_P_98_451="{getTrForwardStatusValue(([s]))}";
private static final String C_P_98_452="!breakFoeImmune.isEmpty()";
private static final String C_P_98_453="msg_ability,break_foe_immune_time";
private static final String C_P_98_454="msg_ability,break_foe_immune";
private static final String C_P_98_455="msg_ability,break_foe_immune_key";
private static final String C_P_98_456="msg_ability,break_foe_immune_value";
private static final String C_P_98_457="msg_ability,break_foe_immune_value_rate";
private static final String C_P_98_458="breakFoeImmune";
private static final String C_P_98_459="s";
private static final String C_P_98_460="{getTrBreakFoeImmuneKey(([s]))}";
private static final String C_P_98_461="{getTrBreakFoeImmuneValue(([s]))}";
private static final String C_P_98_462="{defEff}";
private static final String C_P_98_463="!multStat.isEmpty()";
private static final String C_P_98_464="msg_ability,mult_stat";
private static final String C_P_98_465="msg_ability,mult_stat_key";
private static final String C_P_98_466="msg_ability,mult_stat_rate";
private static final String C_P_98_467="s";
private static final String C_P_98_468="multStat";
private static final String C_P_98_469="r";
private static final String C_P_98_470="java.lang.Object";
private static final String C_P_98_471="java.lang.String";
private static final String C_P_98_472="{getTrMultStat(([s]))}";
private static final String C_P_98_473="{r}";
private static final String C_P_98_474="!multStatIfDamageCat.isEmpty()";
private static final String C_P_98_475="msg_ability,mult_stat_damage_cat_time";
private static final String C_P_98_476="msg_ability,mult_stat_damage_cat";
private static final String C_P_98_477="msg_ability,mult_stat_damage_cat_key";
private static final String C_P_98_478="msg_ability,mult_stat_damage_cat_key_sec";
private static final String C_P_98_479="msg_ability,mult_stat_damage_cat_var";
private static final String C_P_98_480="s";
private static final String C_P_98_481="multStatIfDamageCat";
private static final String C_P_98_482="r";
private static final String C_P_98_483="java.lang.Object";
private static final String C_P_98_484="java.lang.Byte";
private static final String C_P_98_485="{getTrMultStatIfDamageCatKey(([s]))}";
private static final String C_P_98_486="{getTrMultStatIfDamageCatKeySec(([s]))}";
private static final String C_P_98_487="{r}";
private static final String C_P_98_488="!multStatIfDamgeType.isEmpty()";
private static final String C_P_98_489="msg_ability,mult_stat_damage_type_time";
private static final String C_P_98_490="msg_ability,mult_stat_damage_type";
private static final String C_P_98_491="msg_ability,mult_stat_damage_type_key";
private static final String C_P_98_492="msg_ability,mult_stat_damage_type_key_sec";
private static final String C_P_98_493="msg_ability,mult_stat_damage_type_var";
private static final String C_P_98_494="s";
private static final String C_P_98_495="multStatIfDamgeType";
private static final String C_P_98_496="r";
private static final String C_P_98_497="java.lang.Object";
private static final String C_P_98_498="java.lang.Byte";
private static final String C_P_98_499="{getTrMultStatIfDamgeType(([s]))}";
private static final String C_P_98_500="{getTrMultStatIfDamgeTypeSec(([s]))}";
private static final String C_P_98_501="{r}";
private static final String C_P_98_502="!multStatIfCat.isEmpty()";
private static final String C_P_98_503="msg_ability,mult_stat_cat_time";
private static final String C_P_98_504="msg_ability,mult_stat_cat";
private static final String C_P_98_505="msg_ability,mult_stat_cat_key";
private static final String C_P_98_506="msg_ability,mult_stat_cat_key_sec";
private static final String C_P_98_507="msg_ability,mult_stat_cat_rate";
private static final String C_P_98_508="s";
private static final String C_P_98_509="multStatIfCat";
private static final String C_P_98_510="r";
private static final String C_P_98_511="java.lang.Object";
private static final String C_P_98_512="r";
private static final String C_P_98_513="{getTrMultStatIfCatKey(([s]))}";
private static final String C_P_98_514="{getTrMultStatIfCatKeySec(([s]))}";
private static final String C_P_98_515="{r}";
private static final String C_P_98_516="!multStatIfStatutRank.isEmpty()";
private static final String C_P_98_517="msg_ability,mult_stat_status_rank_time";
private static final String C_P_98_518="msg_ability,mult_stat_status_rank";
private static final String C_P_98_519="msg_ability,mult_stat_status_rank_key";
private static final String C_P_98_520="msg_ability,mult_stat_status_rank_key_sec";
private static final String C_P_98_521="msg_ability,mult_stat_status_rank_var";
private static final String C_P_98_522="s";
private static final String C_P_98_523="multStatIfStatutRank";
private static final String C_P_98_524="r";
private static final String C_P_98_525="java.lang.Object";
private static final String C_P_98_526="java.lang.Byte";
private static final String C_P_98_527="{getTrMultStatIfStatutRank(([s]))}";
private static final String C_P_98_528="$clickMultStatIfStatutRankSec({([s])})";
private static final String C_P_98_529="";
private static final String C_P_98_530="{getTrMultStatIfStatutRankSec(([s]))}";
private static final String C_P_98_531="{r}";
private static final String C_P_98_532="!bonusStatRank.isEmpty()";
private static final String C_P_98_533="msg_ability,bonus_stat_rank_time";
private static final String C_P_98_534="msg_ability,bonus_stat_rank";
private static final String C_P_98_535="msg_ability,bonus_stat_rank_key";
private static final String C_P_98_536="msg_ability,bonus_stat_rank_boost";
private static final String C_P_98_537="s";
private static final String C_P_98_538="bonusStatRank";
private static final String C_P_98_539="r";
private static final String C_P_98_540="java.lang.Object";
private static final String C_P_98_541="java.lang.Byte";
private static final String C_P_98_542="{getTrBonusStatRank(([s]))}";
private static final String C_P_98_543="{r}";
private static final String C_P_98_544="!boostStatRankEndRound.isEmpty()";
private static final String C_P_98_545="msg_ability,bonus_stat_rank_end_round_time";
private static final String C_P_98_546="msg_ability,bonus_stat_rank_end_round";
private static final String C_P_98_547="msg_ability,bonus_stat_rank_end_round_key";
private static final String C_P_98_548="msg_ability,bonus_stat_rank_end_round_boost";
private static final String C_P_98_549="s";
private static final String C_P_98_550="boostStatRankEndRound";
private static final String C_P_98_551="r";
private static final String C_P_98_552="java.lang.Object";
private static final String C_P_98_553="java.lang.Byte";
private static final String C_P_98_554="{getTrBoostStatRankEndRound(([s]))}";
private static final String C_P_98_555="{r}";
private static final String C_P_98_556="!boostStatRankProtected.isEmpty()";
private static final String C_P_98_557="msg_ability,bonus_stat_rank_protected_time";
private static final String C_P_98_558="msg_ability,bonus_stat_rank_protected";
private static final String C_P_98_559="msg_ability,bonus_stat_rank_protected_key";
private static final String C_P_98_560="msg_ability,bonus_stat_rank_protected_boost";
private static final String C_P_98_561="s";
private static final String C_P_98_562="boostStatRankProtected";
private static final String C_P_98_563="r";
private static final String C_P_98_564="java.lang.Object";
private static final String C_P_98_565="java.lang.Byte";
private static final String C_P_98_566="{getTrBoostStatRankProtected(([s]))}";
private static final String C_P_98_567="{r}";
private static final String C_P_98_568="!lowStatFoeHit.isEmpty()";
private static final String C_P_98_569="msg_ability,low_stat_foe_hit_time";
private static final String C_P_98_570="msg_ability,low_stat_foe_hit";
private static final String C_P_98_571="msg_ability,low_stat_foe_hit_key";
private static final String C_P_98_572="msg_ability,low_stat_foe_hit_boost";
private static final String C_P_98_573="s";
private static final String C_P_98_574="lowStatFoeHit";
private static final String C_P_98_575="r";
private static final String C_P_98_576="java.lang.Object";
private static final String C_P_98_577="java.lang.Byte";
private static final String C_P_98_578="{getTrLowStatFoeHit(([s]))}";
private static final String C_P_98_579="{r}";
private static final String C_P_98_580="!multStatIfKoFoe.isEmpty()";
private static final String C_P_98_581="msg_ability,mult_stat_if_ko_foe_time";
private static final String C_P_98_582="msg_ability,mult_stat_if_ko_foe";
private static final String C_P_98_583="msg_ability,mult_stat_if_ko_foe_key";
private static final String C_P_98_584="msg_ability,mult_stat_if_ko_foe_boost";
private static final String C_P_98_585="s";
private static final String C_P_98_586="multStatIfKoFoe";
private static final String C_P_98_587="r";
private static final String C_P_98_588="java.lang.Object";
private static final String C_P_98_589="java.lang.Byte";
private static final String C_P_98_590="{getTrMultStatIfKoFoe(([s]))}";
private static final String C_P_98_591="{r}";
private static final String C_P_98_592="!multStatIfLowStat.isEmpty()";
private static final String C_P_98_593="msg_ability,mult_stat_if_low_stat_time";
private static final String C_P_98_594="msg_ability,mult_stat_if_low_stat";
private static final String C_P_98_595="msg_ability,mult_stat_if_low_stat_key";
private static final String C_P_98_596="msg_ability,mult_stat_if_low_stat_boost";
private static final String C_P_98_597="s";
private static final String C_P_98_598="multStatIfLowStat";
private static final String C_P_98_599="r";
private static final String C_P_98_600="java.lang.Object";
private static final String C_P_98_601="java.lang.Byte";
private static final String C_P_98_602="{getTrMultStatIfLowStat(([s]))}";
private static final String C_P_98_603="{r}";
private static final String C_P_98_604="!multStatAlly.isEmpty()";
private static final String C_P_98_605="msg_ability,mult_stat_ally";
private static final String C_P_98_606="msg_ability,mult_stat_ally_key";
private static final String C_P_98_607="msg_ability,mult_stat_ally_rate";
private static final String C_P_98_608="s";
private static final String C_P_98_609="multStatAlly";
private static final String C_P_98_610="r";
private static final String C_P_98_611="java.lang.Object";
private static final String C_P_98_612="r";
private static final String C_P_98_613="{getTrMultStatAlly(([s]))}";
private static final String C_P_98_614="{r}";
private static final String C_P_98_615="!increasedPrio.isEmpty()";
private static final String C_P_98_616="msg_ability,increased_prio_time";
private static final String C_P_98_617="msg_ability,increased_prio";
private static final String C_P_98_618="msg_ability,increased_prio_cat";
private static final String C_P_98_619="msg_ability,increased_prio_inc";
private static final String C_P_98_620="s";
private static final String C_P_98_621="increasedPrio";
private static final String C_P_98_622="r";
private static final String C_P_98_623="java.lang.Object";
private static final String C_P_98_624="java.lang.Short";
private static final String C_P_98_625="{getTrIncreasedPrio(([s]))}";
private static final String C_P_98_626="{r}";
private static final String C_P_98_627="!increasedPrioTypes.isEmpty()";
private static final String C_P_98_628="msg_ability,increased_prio_type_time";
private static final String C_P_98_629="msg_ability,increased_prio_type";
private static final String C_P_98_630="msg_ability,increased_prio_type_key";
private static final String C_P_98_631="msg_ability,increased_prio_type_inc";
private static final String C_P_98_632="s";
private static final String C_P_98_633="increasedPrioTypes";
private static final String C_P_98_634="r";
private static final String C_P_98_635="java.lang.Object";
private static final String C_P_98_636="java.lang.Short";
private static final String C_P_98_637="{getTrIncreasedPrioTypes(([s]))}";
private static final String C_P_98_638="{r}";
private static final String C_P_98_639="!multDamageFoe.isEmpty()";
private static final String C_P_98_640="msg_ability,mult_damage_foe_time";
private static final String C_P_98_641="msg_ability,mult_damage_foe";
private static final String C_P_98_642="msg_ability,mult_damage_foe_type";
private static final String C_P_98_643="msg_ability,mult_damage_foe_rate";
private static final String C_P_98_644="s";
private static final String C_P_98_645="multDamageFoe";
private static final String C_P_98_646="r";
private static final String C_P_98_647="java.lang.Object";
private static final String C_P_98_648="r";
private static final String C_P_98_649="{getTrMultDamageFoe(([s]))}";
private static final String C_P_98_650="{r}";
private static final String C_P_98_651="!multPowerMovesTypesGlobal.isEmpty()";
private static final String C_P_98_652="msg_ability,mult_power_moves_types_global_time";
private static final String C_P_98_653="msg_ability,mult_power_moves_types_global";
private static final String C_P_98_654="msg_ability,mult_power_moves_types_global_move";
private static final String C_P_98_655="msg_ability,mult_power_moves_types_global_rate";
private static final String C_P_98_656="s";
private static final String C_P_98_657="multPowerMovesTypesGlobal";
private static final String C_P_98_658="r";
private static final String C_P_98_659="java.lang.Object";
private static final String C_P_98_660="r";
private static final String C_P_98_661="{getTrMultPowerMovesTypesGlobalKey(([s]))}";
private static final String C_P_98_662="{r}";
private static final String C_P_98_663="!failStatus.isEmpty()";
private static final String C_P_98_664="msg_ability,fail_status";
private static final String C_P_98_665="msg_ability,fail_status_key";
private static final String C_P_98_666="msg_ability,fail_status_cond";
private static final String C_P_98_667="s";
private static final String C_P_98_668="failStatus";
private static final String C_P_98_669="r";
private static final String C_P_98_670="java.lang.Object";
private static final String C_P_98_671="java.lang.String";
private static final String C_P_98_672="$clickFailStatus({([s])})";
private static final String C_P_98_673="";
private static final String C_P_98_674="{getTrFailStatus(([s]))}";
private static final String C_P_98_675="{r}";
private static final String C_P_98_676="!mapVars.isEmpty()";
private static final String C_P_98_677="k";
private static final String C_P_98_678="mapVars";
private static final String C_P_98_679="v";
private static final String C_P_98_680="java.lang.String";
private static final String C_P_98_681="java.lang.String";
private static final String C_P_98_682="{k} :";
private static final String C_P_98_683="";
private static final String C_P_98_684="msg_ability,formula";
private static final String C_P_98_685="v";
private static final String C_P_98_686="!healedHpRateBySwitch.isZero()";
private static final String C_P_98_687="msg_ability,healed_hp_rate_by_switch_time";
private static final String C_P_98_688="msg_ability,healed_hp_rate_by_switch";
private static final String C_P_98_689="healedHpRateBySwitch";
private static final String C_P_98_690="!pokemon.isEmpty()";
private static final String C_P_98_691="msg_ability,learnt_pk";
private static final String C_P_98_692="displayName";
private static final String C_P_98_693="pokemon";
private static final String C_P_98_694="p";
private static final String C_P_98_695="$clickPokemon({([p])})";
private static final String C_P_98_696="";
private static final String C_P_98_697="{getTrPokemon(([p]))}";
private PageDataAbilityData(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc3){
Element elt0_=el(_doc3,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_98_0));
attrs0_.add(at(C_BEAN,C_P_98_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,HEAD);
Element elt2_=el(_doc3,TITLE);
Element elt3_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_2));
at(elt3_,attrs1_);
Element elt4_=el(_doc3,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_3));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc3,LINK);
CustList<Attr> attrs3_=al(3);
attrs3_.add(at(HREF,C_P_98_4));
attrs3_.add(at(REL,C_P_98_5));
attrs3_.add(at(TYPE,C_P_98_6));
at(elt5_,attrs3_);
ad(elt1_,elt5_);
ad(elt0_,elt1_);
Element elt6_=el(_doc3,BODY);
build0(elt6_,_doc3);
build1(elt6_,_doc3);
build2(elt6_,_doc3);
build3(elt6_,_doc3);
build4(elt6_,_doc3);
build5(elt6_,_doc3);
build6(elt6_,_doc3);
build7(elt6_,_doc3);
build8(elt6_,_doc3);
build9(elt6_,_doc3);
build10(elt6_,_doc3);
build11(elt6_,_doc3);
build12(elt6_,_doc3);
build13(elt6_,_doc3);
build14(elt6_,_doc3);
build15(elt6_,_doc3);
build16(elt6_,_doc3);
build17(elt6_,_doc3);
build18(elt6_,_doc3);
build19(elt6_,_doc3);
build20(elt6_,_doc3);
build21(elt6_,_doc3);
build22(elt6_,_doc3);
build23(elt6_,_doc3);
build24(elt6_,_doc3);
build25(elt6_,_doc3);
build26(elt6_,_doc3);
build27(elt6_,_doc3);
build28(elt6_,_doc3);
build29(elt6_,_doc3);
build30(elt6_,_doc3);
build31(elt6_,_doc3);
build32(elt6_,_doc3);
build33(elt6_,_doc3);
build34(elt6_,_doc3);
build35(elt6_,_doc3);
build36(elt6_,_doc3);
build37(elt6_,_doc3);
//build38(elt6_,_doc3);
build39(elt6_,_doc3);
build40(elt6_,_doc3);
build41(elt6_,_doc3);
build42(elt6_,_doc3);
build43(elt6_,_doc3);
build44(elt6_,_doc3);
build45(elt6_,_doc3);
build46(elt6_,_doc3);
build47(elt6_,_doc3);
build48(elt6_,_doc3);
build49(elt6_,_doc3);
build50(elt6_,_doc3);
build51(elt6_,_doc3);
build52(elt6_,_doc3);
build53(elt6_,_doc3);
build54(elt6_,_doc3);
build55(elt6_,_doc3);
build56(elt6_,_doc3);
build57(elt6_,_doc3);
build58(elt6_,_doc3);
build59(elt6_,_doc3);
build60(elt6_,_doc3);
build61(elt6_,_doc3);
build62(elt6_,_doc3);
build63(elt6_,_doc3);
build64(elt6_,_doc3);
build65(elt6_,_doc3);
build66(elt6_,_doc3);
build67(elt6_,_doc3);
build68(elt6_,_doc3);
build69(elt6_,_doc3);
build70(elt6_,_doc3);
build71(elt6_,_doc3);
build72(elt6_,_doc3);
build73(elt6_,_doc3);
build74(elt6_,_doc3);
build75(elt6_,_doc3);
build76(elt6_,_doc3);
build77(elt6_,_doc3);
build78(elt6_,_doc3);
build79(elt6_,_doc3);
build80(elt6_,_doc3);
build81(elt6_,_doc3);
build82(elt6_,_doc3);
build83(elt6_,_doc3);
build84(elt6_,_doc3);
ad(elt0_,elt6_);
_doc3.appendChild(elt0_);
}
static void build0(Element _body,Document _doc3){
Element elt0_=el(_doc3,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_98_7));
attrs0_.add(at(HREF,C_P_98_8));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_9));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Text txt0_=tx(_doc3,C_P_98_10);
ad(_body,txt0_);
}
static void build1(Element _body,Document _doc3){
Element elt0_=el(_doc3,BR);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_11));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,P);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_12));
at(elt2_,attrs1_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_13));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc3,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_98_14));
attrs3_.add(at(HREF,C_P_98_15));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_16));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt6_=el(_doc3,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_98_17));
at(elt6_,attrs5_);
Element elt7_=el(_doc3,P);
Element elt8_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_98_18));
at(elt8_,attrs6_);
ad(elt7_,elt8_);
Element elt9_=el(_doc3,UL);
Element elt10_=el(_doc3,C_FOR);
CustList<Attr> attrs7_=al(3);
attrs7_.add(at(LIST,C_P_98_19));
attrs7_.add(at(VAR,C_P_98_20));
attrs7_.add(at(CLASSNAME,C_P_98_21));
at(elt10_,attrs7_);
Element elt11_=el(_doc3,LI);
Text txt0_=tx(_doc3,C_P_98_22);
ad(elt11_,txt0_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt7_,elt9_);
Element elt12_=el(_doc3,BR);
ad(elt7_,elt12_);
Element elt13_=el(_doc3,UL);
Element elt14_=el(_doc3,C_FOR);
CustList<Attr> attrs8_=al(5);
attrs8_.add(at(KEY,C_P_98_23));
attrs8_.add(at(MAP,C_P_98_24));
attrs8_.add(at(VALUE,C_P_98_25));
attrs8_.add(at(KEYCLASSNAME,C_P_98_26));
attrs8_.add(at(VARCLASSNAME,C_P_98_27));
at(elt14_,attrs8_);
Element elt15_=el(_doc3,LI);
Text txt1_=tx(_doc3,C_P_98_28);
ad(elt15_,txt1_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt7_,elt13_);
ad(elt6_,elt7_);
Element elt16_=el(_doc3,BR);
ad(elt6_,elt16_);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_29));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_IMPORT);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(PAGE,C_P_98_30));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,C_PACKAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(NAME,C_P_98_31));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,C_CLASS);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(NAME,C_P_98_32));
at(elt3_,attrs3_);
Element elt4_=el(_doc3,C_FIELD);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(PREPARE,C_P_98_33));
at(elt4_,attrs4_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_34));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_35));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_36));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_37));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_98_38));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_39));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
Element elt3_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_40));
at(elt3_,attrs3_);
ad(elt1_,elt3_);
Element elt4_=el(_doc3,UL);
Element elt5_=el(_doc3,C_FOR);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(LIST,C_P_98_41));
attrs4_.add(at(VAR,C_P_98_42));
at(elt5_,attrs4_);
Element elt6_=el(_doc3,LI);
Element elt7_=el(_doc3,A);
CustList<Attr> attrs5_=al(2);
attrs5_.add(at(C_COMMAND,C_P_98_43));
attrs5_.add(at(HREF,C_P_98_44));
at(elt7_,attrs5_);
Text txt0_=tx(_doc3,C_P_98_45);
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
Element elt8_=el(_doc3,BR);
ad(elt1_,elt8_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_46));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_47));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_48));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_49));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_50));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_51));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_52));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_53));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_54));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_55));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_56));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_57));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_58));
attrs5_.add(at(MAP,C_P_98_59));
attrs5_.add(at(VALUE,C_P_98_60));
attrs5_.add(at(KEYCLASSNAME,C_P_98_61));
attrs5_.add(at(VARCLASSNAME,C_P_98_62));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_98_63));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TD);
Element elt15_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_64));
attrs7_.add(at(HREF,C_P_98_65));
at(elt15_,attrs7_);
Text txt0_=tx(_doc3,C_P_98_66);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc3,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_98_67));
at(elt16_,attrs8_);
Element elt17_=el(_doc3,TD);
Element elt18_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_98_68));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_69);
ad(elt19_,txt1_);
ad(elt12_,elt19_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt20_=el(_doc3,BR);
ad(elt0_,elt20_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_70));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_71));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_72));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_73));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_74));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_75));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_76));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_77));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_78));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build13(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_79));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_80));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_81));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_82));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_83));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_84));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_85));
at(elt3_,attrs3_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_86));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_87));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_88));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build16(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_89));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_90));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_91));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build17(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_92));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_93));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_94));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build18(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_95));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_96));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_97));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build19(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_98));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_98_99));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_100));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
Element elt3_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_101));
at(elt3_,attrs3_);
ad(elt1_,elt3_);
Element elt4_=el(_doc3,UL);
Element elt5_=el(_doc3,C_FOR);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(LIST,C_P_98_102));
attrs4_.add(at(VAR,C_P_98_103));
at(elt5_,attrs4_);
Element elt6_=el(_doc3,LI);
Element elt7_=el(_doc3,A);
CustList<Attr> attrs5_=al(2);
attrs5_.add(at(C_COMMAND,C_P_98_104));
attrs5_.add(at(HREF,C_P_98_105));
at(elt7_,attrs5_);
Text txt0_=tx(_doc3,C_P_98_106);
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
Element elt8_=el(_doc3,BR);
ad(elt1_,elt8_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build20(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_107));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_108));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_109));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build21(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_110));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_111));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_112));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build22(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_113));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_114));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_115));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build23(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_116));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_117));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_118));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build24(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_119));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_120));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build25(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_121));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_98_122));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_123));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_124));
attrs3_.add(at(VAR,C_P_98_125));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_126));
attrs4_.add(at(HREF,C_P_98_127));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_128);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt1_,elt3_);
Element elt7_=el(_doc3,BR);
ad(elt1_,elt7_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build26(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_129));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_130));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_131));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build27(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_132));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_133));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_134));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build28(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_135));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_136));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_137));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_138));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build29(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_139));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_140));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_141));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_142));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build30(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_143));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_144));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_145));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_146));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build31(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_147));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_148));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_149));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_150));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build32(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_151));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_152));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_153));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_154));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build33(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_155));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_156));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_157));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_158));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build34(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_159));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_160));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_161));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_162));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build35(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_163));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_164));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_165));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_166));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build36(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_167));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_168));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_169));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_170));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build37(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_171));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_172));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_173));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_174));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
//static void build38(Element _body,Document _doc3){
//Element elt0_=el(_doc3,C_IF);
//CustList<Attr> attrs0_=al(1);
//attrs0_.add(at(CONDITION,C_P_98_175));
//at(elt0_,attrs0_);
//Element elt1_=el(_doc3,C_MESSAGE);
//CustList<Attr> attrs1_=al(1);
//attrs1_.add(at(VALUE,C_P_98_176));
//at(elt1_,attrs1_);
//ad(elt0_,elt1_);
//Element elt2_=el(_doc3,C_MESSAGE);
//CustList<Attr> attrs2_=al(1);
//attrs2_.add(at(VALUE,C_P_98_177));
//at(elt2_,attrs2_);
//Element elt3_=el(_doc3,PARAM);
//CustList<Attr> attrs3_=al(1);
//attrs3_.add(at(VALUE,C_P_98_178));
//at(elt3_,attrs3_);
//ad(elt2_,elt3_);
//ad(elt0_,elt2_);
//ad(_body,elt0_);
//}
static void build39(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_179));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_180));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_181));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_182));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build40(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_183));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_184));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_185));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_186));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build41(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_187));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_188));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,UL);
Element elt3_=el(_doc3,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_98_189));
attrs2_.add(at(VAR,C_P_98_190));
at(elt3_,attrs2_);
Element elt4_=el(_doc3,LI);
Element elt5_=el(_doc3,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_98_191));
attrs3_.add(at(HREF,C_P_98_192));
at(elt5_,attrs3_);
Text txt0_=tx(_doc3,C_P_98_193);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc3,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build42(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_194));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_195));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,UL);
Element elt3_=el(_doc3,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_98_196));
attrs2_.add(at(VAR,C_P_98_197));
at(elt3_,attrs2_);
Element elt4_=el(_doc3,LI);
Element elt5_=el(_doc3,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_98_198));
attrs3_.add(at(HREF,C_P_98_199));
at(elt5_,attrs3_);
Text txt0_=tx(_doc3,C_P_98_200);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc3,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build43(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_201));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_202));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,UL);
Element elt3_=el(_doc3,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_98_203));
attrs2_.add(at(VAR,C_P_98_204));
at(elt3_,attrs2_);
Element elt4_=el(_doc3,LI);
Element elt5_=el(_doc3,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_98_205));
attrs3_.add(at(HREF,C_P_98_206));
at(elt5_,attrs3_);
Text txt0_=tx(_doc3,C_P_98_207);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc3,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build44(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_208));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_209));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_210));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_211));
attrs3_.add(at(VAR,C_P_98_212));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_213));
attrs4_.add(at(HREF,C_P_98_214));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_215);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt7_=el(_doc3,BR);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build45(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_216));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_217));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_218));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_219));
attrs3_.add(at(VAR,C_P_98_220));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_221));
attrs4_.add(at(HREF,C_P_98_222));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_223);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt7_=el(_doc3,BR);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build46(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_224));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_225));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_226));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_227));
attrs3_.add(at(VAR,C_P_98_228));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_229));
attrs4_.add(at(HREF,C_P_98_230));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_231);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt7_=el(_doc3,BR);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build47(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_232));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_233));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_234));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_235));
attrs3_.add(at(VAR,C_P_98_236));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_237));
attrs4_.add(at(HREF,C_P_98_238));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_239);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt7_=el(_doc3,BR);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build48(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_240));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_241));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_242));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_243));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build49(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_244));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_98_245));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_246));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
Element elt3_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_247));
at(elt3_,attrs3_);
ad(elt1_,elt3_);
Element elt4_=el(_doc3,TABLE);
Element elt5_=el(_doc3,THEAD);
Element elt6_=el(_doc3,TR);
Element elt7_=el(_doc3,TH);
Element elt8_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_248));
at(elt8_,attrs4_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
Element elt9_=el(_doc3,TH);
Element elt10_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_249));
at(elt10_,attrs5_);
ad(elt9_,elt10_);
ad(elt6_,elt9_);
Element elt11_=el(_doc3,TH);
Element elt12_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_98_250));
at(elt12_,attrs6_);
ad(elt11_,elt12_);
ad(elt6_,elt11_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt13_=el(_doc3,TBODY);
Element elt14_=el(_doc3,C_FOR);
CustList<Attr> attrs7_=al(5);
attrs7_.add(at(KEY,C_P_98_251));
attrs7_.add(at(MAP,C_P_98_252));
attrs7_.add(at(VALUE,C_P_98_253));
attrs7_.add(at(KEYCLASSNAME,C_P_98_254));
attrs7_.add(at(VARCLASSNAME,C_P_98_255));
at(elt14_,attrs7_);
Element elt15_=el(_doc3,TR);
Element elt16_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_256);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
Element elt17_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_257);
ad(elt17_,txt1_);
ad(elt15_,elt17_);
Element elt18_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_258);
ad(elt18_,txt2_);
ad(elt15_,elt18_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt4_,elt13_);
ad(elt1_,elt4_);
Element elt19_=el(_doc3,BR);
ad(elt1_,elt19_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build50(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_259));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_260));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_261));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build51(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_262));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_263));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_264));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build52(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_265));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_266));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_267));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_268));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_269));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_270));
attrs5_.add(at(MAP,C_P_98_271));
attrs5_.add(at(VALUE,C_P_98_272));
attrs5_.add(at(KEYCLASSNAME,C_P_98_273));
attrs5_.add(at(VARCLASSNAME,C_P_98_274));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_98_275));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TD);
Element elt15_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_276));
attrs7_.add(at(HREF,C_P_98_277));
at(elt15_,attrs7_);
Text txt0_=tx(_doc3,C_P_98_278);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc3,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_98_279));
at(elt16_,attrs8_);
Element elt17_=el(_doc3,TD);
Element elt18_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_98_280));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc3,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_98_281));
at(elt19_,attrs10_);
Element elt20_=el(_doc3,TD);
Element elt21_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_98_282));
at(elt21_,attrs11_);
Element elt22_=el(_doc3,PARAM);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_98_283));
at(elt22_,attrs12_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt12_,elt19_);
Element elt23_=el(_doc3,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_98_284));
at(elt23_,attrs13_);
Element elt24_=el(_doc3,TD);
Element elt25_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_98_285));
at(elt25_,attrs14_);
Element elt26_=el(_doc3,PARAM);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_98_286));
at(elt26_,attrs15_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt12_,elt23_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt27_=el(_doc3,BR);
ad(elt0_,elt27_);
ad(_body,elt0_);
}
static void build53(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_287));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_288));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_289));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_290));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_291));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_292));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_98_293));
attrs6_.add(at(MAP,C_P_98_294));
attrs6_.add(at(VALUE,C_P_98_295));
attrs6_.add(at(KEYCLASSNAME,C_P_98_296));
attrs6_.add(at(VARCLASSNAME,C_P_98_297));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_98_298));
at(elt15_,attrs7_);
Element elt16_=el(_doc3,TD);
Element elt17_=el(_doc3,A);
CustList<Attr> attrs8_=al(2);
attrs8_.add(at(C_COMMAND,C_P_98_299));
attrs8_.add(at(HREF,C_P_98_300));
at(elt17_,attrs8_);
Text txt0_=tx(_doc3,C_P_98_301);
ad(elt17_,txt0_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
Element elt18_=el(_doc3,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_98_302));
at(elt18_,attrs9_);
Element elt19_=el(_doc3,TD);
Element elt20_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_98_303));
at(elt20_,attrs10_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt14_,elt18_);
Element elt21_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_304);
ad(elt21_,txt1_);
ad(elt14_,elt21_);
Element elt22_=el(_doc3,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_98_305));
at(elt22_,attrs11_);
Element elt23_=el(_doc3,TD);
Element elt24_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_98_306));
at(elt24_,attrs12_);
Element elt25_=el(_doc3,PARAM);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_98_307));
at(elt25_,attrs13_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt14_,elt22_);
Element elt26_=el(_doc3,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_98_308));
at(elt26_,attrs14_);
Element elt27_=el(_doc3,TD);
Element elt28_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_98_309));
at(elt28_,attrs15_);
Element elt29_=el(_doc3,PARAM);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(VALUE,C_P_98_310));
at(elt29_,attrs16_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt14_,elt26_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt30_=el(_doc3,BR);
ad(elt0_,elt30_);
ad(_body,elt0_);
}
static void build54(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_311));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_312));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_313));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_314));
attrs3_.add(at(VAR,C_P_98_315));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Text txt0_=tx(_doc3,C_P_98_316);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt6_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_317));
at(elt6_,attrs4_);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build55(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_318));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_319));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_320));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_321));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_322));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(2);
attrs5_.add(at(LIST,C_P_98_323));
attrs5_.add(at(VAR,C_P_98_324));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Element elt14_=el(_doc3,A);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(C_COMMAND,C_P_98_325));
attrs6_.add(at(HREF,C_P_98_326));
at(elt14_,attrs6_);
Text txt0_=tx(_doc3,C_P_98_327);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt15_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_328);
ad(elt15_,txt1_);
ad(elt12_,elt15_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt16_=el(_doc3,BR);
ad(elt0_,elt16_);
ad(_body,elt0_);
}
static void build56(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_329));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_330));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_331));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_332));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_333));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_334));
attrs5_.add(at(MAP,C_P_98_335));
attrs5_.add(at(VALUE,C_P_98_336));
attrs5_.add(at(KEYCLASSNAME,C_P_98_337));
attrs5_.add(at(VARCLASSNAME,C_P_98_338));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(LIST,C_P_98_339));
attrs6_.add(at(VAR,C_P_98_340));
at(elt12_,attrs6_);
Element elt13_=el(_doc3,TR);
Element elt14_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_341);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_342);
ad(elt15_,txt1_);
ad(elt13_,elt15_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt16_=el(_doc3,BR);
ad(elt0_,elt16_);
ad(_body,elt0_);
}
static void build57(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_343));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_344));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_345));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_346));
attrs3_.add(at(VAR,C_P_98_347));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Text txt0_=tx(_doc3,C_P_98_348);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt6_=el(_doc3,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build58(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_349));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_350));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_351));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_352));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_353));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_354));
attrs5_.add(at(MAP,C_P_98_355));
attrs5_.add(at(VALUE,C_P_98_356));
attrs5_.add(at(KEYCLASSNAME,C_P_98_357));
attrs5_.add(at(VARCLASSNAME,C_P_98_358));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_98_359));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TD);
Element elt15_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_360));
attrs7_.add(at(HREF,C_P_98_361));
at(elt15_,attrs7_);
Text txt0_=tx(_doc3,C_P_98_362);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc3,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_98_363));
at(elt16_,attrs8_);
Element elt17_=el(_doc3,TD);
Element elt18_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_98_364));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_365);
ad(elt19_,txt1_);
ad(elt12_,elt19_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt20_=el(_doc3,BR);
ad(elt0_,elt20_);
ad(_body,elt0_);
}
static void build59(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_366));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_367));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_368));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_369));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_370));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_371));
attrs5_.add(at(MAP,C_P_98_372));
attrs5_.add(at(VALUE,C_P_98_373));
attrs5_.add(at(KEYCLASSNAME,C_P_98_374));
attrs5_.add(at(VARCLASSNAME,C_P_98_375));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(LIST,C_P_98_376));
attrs6_.add(at(VAR,C_P_98_377));
at(elt12_,attrs6_);
Element elt13_=el(_doc3,TR);
Element elt14_=el(_doc3,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_98_378));
at(elt14_,attrs7_);
Element elt15_=el(_doc3,TD);
Element elt16_=el(_doc3,A);
CustList<Attr> attrs8_=al(2);
attrs8_.add(at(C_COMMAND,C_P_98_379));
attrs8_.add(at(HREF,C_P_98_380));
at(elt16_,attrs8_);
Text txt0_=tx(_doc3,C_P_98_381);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
Element elt17_=el(_doc3,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_98_382));
at(elt17_,attrs9_);
Element elt18_=el(_doc3,TD);
Element elt19_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_98_383));
at(elt19_,attrs10_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt13_,elt17_);
Element elt20_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_384);
ad(elt20_,txt1_);
ad(elt13_,elt20_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt21_=el(_doc3,BR);
ad(elt0_,elt21_);
ad(_body,elt0_);
}
static void build60(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_385));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_386));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_387));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_388));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_389));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_390));
attrs5_.add(at(MAP,C_P_98_391));
attrs5_.add(at(VALUE,C_P_98_392));
attrs5_.add(at(KEYCLASSNAME,C_P_98_393));
attrs5_.add(at(VARCLASSNAME,C_P_98_394));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(LIST,C_P_98_395));
attrs6_.add(at(VAR,C_P_98_396));
at(elt12_,attrs6_);
Element elt13_=el(_doc3,TR);
Element elt14_=el(_doc3,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_98_397));
at(elt14_,attrs7_);
Element elt15_=el(_doc3,TD);
Element elt16_=el(_doc3,A);
CustList<Attr> attrs8_=al(2);
attrs8_.add(at(C_COMMAND,C_P_98_398));
attrs8_.add(at(HREF,C_P_98_399));
at(elt16_,attrs8_);
Text txt0_=tx(_doc3,C_P_98_400);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
Element elt17_=el(_doc3,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_98_401));
at(elt17_,attrs9_);
Element elt18_=el(_doc3,TD);
Element elt19_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_98_402));
at(elt19_,attrs10_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt13_,elt17_);
Element elt20_=el(_doc3,TD);
Element elt21_=el(_doc3,A);
CustList<Attr> attrs11_=al(2);
attrs11_.add(at(C_COMMAND,C_P_98_403));
attrs11_.add(at(HREF,C_P_98_404));
at(elt21_,attrs11_);
Text txt1_=tx(_doc3,C_P_98_405);
ad(elt21_,txt1_);
ad(elt20_,elt21_);
ad(elt13_,elt20_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt22_=el(_doc3,BR);
ad(elt0_,elt22_);
ad(_body,elt0_);
}
static void build61(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_406));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_407));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_408));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_409));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_410));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_411));
attrs5_.add(at(MAP,C_P_98_412));
attrs5_.add(at(VALUE,C_P_98_413));
attrs5_.add(at(KEYCLASSNAME,C_P_98_414));
attrs5_.add(at(VARCLASSNAME,C_P_98_415));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(LIST,C_P_98_416));
attrs6_.add(at(VAR,C_P_98_417));
at(elt12_,attrs6_);
Element elt13_=el(_doc3,TR);
Element elt14_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_418);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc3,TD);
Element elt16_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_419));
attrs7_.add(at(HREF,C_P_98_420));
at(elt16_,attrs7_);
Text txt1_=tx(_doc3,C_P_98_421);
ad(elt16_,txt1_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt17_=el(_doc3,BR);
ad(elt0_,elt17_);
ad(_body,elt0_);
}
static void build62(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_422));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_423));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_424));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_425));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_426));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_427));
attrs5_.add(at(MAP,C_P_98_428));
attrs5_.add(at(VALUE,C_P_98_429));
attrs5_.add(at(KEYCLASSNAME,C_P_98_430));
attrs5_.add(at(VARCLASSNAME,C_P_98_431));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Element elt14_=el(_doc3,A);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(C_COMMAND,C_P_98_432));
attrs6_.add(at(HREF,C_P_98_433));
at(elt14_,attrs6_);
Text txt0_=tx(_doc3,C_P_98_434);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt15_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_435);
ad(elt15_,txt1_);
ad(elt12_,elt15_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt16_=el(_doc3,BR);
ad(elt0_,elt16_);
ad(_body,elt0_);
}
static void build63(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_436));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_437));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_438));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_439));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_440));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_441));
attrs5_.add(at(MAP,C_P_98_442));
attrs5_.add(at(VALUE,C_P_98_443));
attrs5_.add(at(KEYCLASSNAME,C_P_98_444));
attrs5_.add(at(VARCLASSNAME,C_P_98_445));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Element elt14_=el(_doc3,A);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(C_COMMAND,C_P_98_446));
attrs6_.add(at(HREF,C_P_98_447));
at(elt14_,attrs6_);
Text txt0_=tx(_doc3,C_P_98_448);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt15_=el(_doc3,TD);
Element elt16_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_449));
attrs7_.add(at(HREF,C_P_98_450));
at(elt16_,attrs7_);
Text txt1_=tx(_doc3,C_P_98_451);
ad(elt16_,txt1_);
ad(elt15_,elt16_);
ad(elt12_,elt15_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt17_=el(_doc3,BR);
ad(elt0_,elt17_);
ad(_body,elt0_);
}
static void build64(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_452));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_453));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_454));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_455));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_456));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_457));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(2);
attrs6_.add(at(LIST,C_P_98_458));
attrs6_.add(at(VAR,C_P_98_459));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_460);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
Element elt16_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_461);
ad(elt16_,txt1_);
ad(elt14_,elt16_);
Element elt17_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_462);
ad(elt17_,txt2_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt18_=el(_doc3,BR);
ad(elt0_,elt18_);
ad(_body,elt0_);
}
static void build65(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_463));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_464));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,TABLE);
Element elt3_=el(_doc3,THEAD);
Element elt4_=el(_doc3,TR);
Element elt5_=el(_doc3,TH);
Element elt6_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_465));
at(elt6_,attrs2_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc3,TH);
Element elt8_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_466));
at(elt8_,attrs3_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt9_=el(_doc3,TBODY);
Element elt10_=el(_doc3,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_98_467));
attrs4_.add(at(MAP,C_P_98_468));
attrs4_.add(at(VALUE,C_P_98_469));
attrs4_.add(at(KEYCLASSNAME,C_P_98_470));
attrs4_.add(at(VARCLASSNAME,C_P_98_471));
at(elt10_,attrs4_);
Element elt11_=el(_doc3,TR);
Element elt12_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_472);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_473);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt0_,elt2_);
Element elt14_=el(_doc3,BR);
ad(elt0_,elt14_);
ad(_body,elt0_);
}
static void build66(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_474));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_475));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_476));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_477));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_478));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_479));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_98_480));
attrs6_.add(at(MAP,C_P_98_481));
attrs6_.add(at(VALUE,C_P_98_482));
attrs6_.add(at(KEYCLASSNAME,C_P_98_483));
attrs6_.add(at(VARCLASSNAME,C_P_98_484));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_485);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
Element elt16_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_486);
ad(elt16_,txt1_);
ad(elt14_,elt16_);
Element elt17_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_487);
ad(elt17_,txt2_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt18_=el(_doc3,BR);
ad(elt0_,elt18_);
ad(_body,elt0_);
}
static void build67(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_488));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_489));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_490));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_491));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_492));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_493));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_98_494));
attrs6_.add(at(MAP,C_P_98_495));
attrs6_.add(at(VALUE,C_P_98_496));
attrs6_.add(at(KEYCLASSNAME,C_P_98_497));
attrs6_.add(at(VARCLASSNAME,C_P_98_498));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_499);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
Element elt16_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_500);
ad(elt16_,txt1_);
ad(elt14_,elt16_);
Element elt17_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_501);
ad(elt17_,txt2_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt18_=el(_doc3,BR);
ad(elt0_,elt18_);
ad(_body,elt0_);
}
static void build68(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_502));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_503));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_504));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_505));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_506));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_507));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_98_508));
attrs6_.add(at(MAP,C_P_98_509));
attrs6_.add(at(VALUE,C_P_98_510));
attrs6_.add(at(KEYCLASSNAME,C_P_98_511));
attrs6_.add(at(VARCLASSNAME,C_P_98_512));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_513);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
Element elt16_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_514);
ad(elt16_,txt1_);
ad(elt14_,elt16_);
Element elt17_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_515);
ad(elt17_,txt2_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt18_=el(_doc3,BR);
ad(elt0_,elt18_);
ad(_body,elt0_);
}
static void build69(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_516));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_517));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_518));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_519));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_520));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
Element elt10_=el(_doc3,TH);
Element elt11_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_98_521));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt5_,elt10_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt12_=el(_doc3,TBODY);
Element elt13_=el(_doc3,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_98_522));
attrs6_.add(at(MAP,C_P_98_523));
attrs6_.add(at(VALUE,C_P_98_524));
attrs6_.add(at(KEYCLASSNAME,C_P_98_525));
attrs6_.add(at(VARCLASSNAME,C_P_98_526));
at(elt13_,attrs6_);
Element elt14_=el(_doc3,TR);
Element elt15_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_527);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
Element elt16_=el(_doc3,TD);
Element elt17_=el(_doc3,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_98_528));
attrs7_.add(at(HREF,C_P_98_529));
at(elt17_,attrs7_);
Text txt1_=tx(_doc3,C_P_98_530);
ad(elt17_,txt1_);
ad(elt16_,elt17_);
ad(elt14_,elt16_);
Element elt18_=el(_doc3,TD);
Text txt2_=tx(_doc3,C_P_98_531);
ad(elt18_,txt2_);
ad(elt14_,elt18_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt3_,elt12_);
ad(elt0_,elt3_);
Element elt19_=el(_doc3,BR);
ad(elt0_,elt19_);
ad(_body,elt0_);
}
static void build70(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_532));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_533));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_534));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_535));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_536));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_537));
attrs5_.add(at(MAP,C_P_98_538));
attrs5_.add(at(VALUE,C_P_98_539));
attrs5_.add(at(KEYCLASSNAME,C_P_98_540));
attrs5_.add(at(VARCLASSNAME,C_P_98_541));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_542);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_543);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build71(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_544));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_545));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_546));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_547));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_548));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_549));
attrs5_.add(at(MAP,C_P_98_550));
attrs5_.add(at(VALUE,C_P_98_551));
attrs5_.add(at(KEYCLASSNAME,C_P_98_552));
attrs5_.add(at(VARCLASSNAME,C_P_98_553));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_554);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_555);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build72(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_556));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_557));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_558));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_559));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_560));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_561));
attrs5_.add(at(MAP,C_P_98_562));
attrs5_.add(at(VALUE,C_P_98_563));
attrs5_.add(at(KEYCLASSNAME,C_P_98_564));
attrs5_.add(at(VARCLASSNAME,C_P_98_565));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_566);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_567);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build73(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_568));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_569));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_570));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_571));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_572));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_573));
attrs5_.add(at(MAP,C_P_98_574));
attrs5_.add(at(VALUE,C_P_98_575));
attrs5_.add(at(KEYCLASSNAME,C_P_98_576));
attrs5_.add(at(VARCLASSNAME,C_P_98_577));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_578);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_579);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build74(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_580));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_581));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_582));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_583));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_584));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_585));
attrs5_.add(at(MAP,C_P_98_586));
attrs5_.add(at(VALUE,C_P_98_587));
attrs5_.add(at(KEYCLASSNAME,C_P_98_588));
attrs5_.add(at(VARCLASSNAME,C_P_98_589));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_590);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_591);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build75(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_592));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_593));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_594));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_595));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_596));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_597));
attrs5_.add(at(MAP,C_P_98_598));
attrs5_.add(at(VALUE,C_P_98_599));
attrs5_.add(at(KEYCLASSNAME,C_P_98_600));
attrs5_.add(at(VARCLASSNAME,C_P_98_601));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_602);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_603);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build76(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_604));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_605));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,TABLE);
Element elt3_=el(_doc3,THEAD);
Element elt4_=el(_doc3,TR);
Element elt5_=el(_doc3,TH);
Element elt6_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_606));
at(elt6_,attrs2_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc3,TH);
Element elt8_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_607));
at(elt8_,attrs3_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt9_=el(_doc3,TBODY);
Element elt10_=el(_doc3,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_98_608));
attrs4_.add(at(MAP,C_P_98_609));
attrs4_.add(at(VALUE,C_P_98_610));
attrs4_.add(at(KEYCLASSNAME,C_P_98_611));
attrs4_.add(at(VARCLASSNAME,C_P_98_612));
at(elt10_,attrs4_);
Element elt11_=el(_doc3,TR);
Element elt12_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_613);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_614);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt0_,elt2_);
Element elt14_=el(_doc3,BR);
ad(elt0_,elt14_);
ad(_body,elt0_);
}
static void build77(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_615));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_616));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_617));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_618));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_619));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_620));
attrs5_.add(at(MAP,C_P_98_621));
attrs5_.add(at(VALUE,C_P_98_622));
attrs5_.add(at(KEYCLASSNAME,C_P_98_623));
attrs5_.add(at(VARCLASSNAME,C_P_98_624));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_625);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_626);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build78(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_627));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_628));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_629));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_630));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_631));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_632));
attrs5_.add(at(MAP,C_P_98_633));
attrs5_.add(at(VALUE,C_P_98_634));
attrs5_.add(at(KEYCLASSNAME,C_P_98_635));
attrs5_.add(at(VARCLASSNAME,C_P_98_636));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_637);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_638);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build79(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_639));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_640));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_641));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_642));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_643));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_644));
attrs5_.add(at(MAP,C_P_98_645));
attrs5_.add(at(VALUE,C_P_98_646));
attrs5_.add(at(KEYCLASSNAME,C_P_98_647));
attrs5_.add(at(VARCLASSNAME,C_P_98_648));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_649);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_650);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build80(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_651));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_652));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_653));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc3,TABLE);
Element elt4_=el(_doc3,THEAD);
Element elt5_=el(_doc3,TR);
Element elt6_=el(_doc3,TH);
Element elt7_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_654));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc3,TH);
Element elt9_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_98_655));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt10_=el(_doc3,TBODY);
Element elt11_=el(_doc3,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_98_656));
attrs5_.add(at(MAP,C_P_98_657));
attrs5_.add(at(VALUE,C_P_98_658));
attrs5_.add(at(KEYCLASSNAME,C_P_98_659));
attrs5_.add(at(VARCLASSNAME,C_P_98_660));
at(elt11_,attrs5_);
Element elt12_=el(_doc3,TR);
Element elt13_=el(_doc3,TD);
Text txt0_=tx(_doc3,C_P_98_661);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_662);
ad(elt14_,txt1_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(elt0_,elt3_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build81(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_663));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_664));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,TABLE);
Element elt3_=el(_doc3,THEAD);
Element elt4_=el(_doc3,TR);
Element elt5_=el(_doc3,TH);
Element elt6_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_665));
at(elt6_,attrs2_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc3,TH);
Element elt8_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_666));
at(elt8_,attrs3_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt9_=el(_doc3,TBODY);
Element elt10_=el(_doc3,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_98_667));
attrs4_.add(at(MAP,C_P_98_668));
attrs4_.add(at(VALUE,C_P_98_669));
attrs4_.add(at(KEYCLASSNAME,C_P_98_670));
attrs4_.add(at(VARCLASSNAME,C_P_98_671));
at(elt10_,attrs4_);
Element elt11_=el(_doc3,TR);
Element elt12_=el(_doc3,TD);
Element elt13_=el(_doc3,A);
CustList<Attr> attrs5_=al(2);
attrs5_.add(at(C_COMMAND,C_P_98_672));
attrs5_.add(at(HREF,C_P_98_673));
at(elt13_,attrs5_);
Text txt0_=tx(_doc3,C_P_98_674);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
Element elt14_=el(_doc3,TD);
Text txt1_=tx(_doc3,C_P_98_675);
ad(elt14_,txt1_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt0_,elt2_);
Element elt15_=el(_doc3,BR);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build82(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_676));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,UL);
Element elt2_=el(_doc3,C_FOR);
CustList<Attr> attrs1_=al(5);
attrs1_.add(at(KEY,C_P_98_677));
attrs1_.add(at(MAP,C_P_98_678));
attrs1_.add(at(VALUE,C_P_98_679));
attrs1_.add(at(KEYCLASSNAME,C_P_98_680));
attrs1_.add(at(VARCLASSNAME,C_P_98_681));
at(elt2_,attrs1_);
Element elt3_=el(_doc3,LI);
Text txt0_=tx(_doc3,C_P_98_682);
ad(elt3_,txt0_);
Element elt4_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(QUOTED,C_P_98_683));
attrs2_.add(at(VALUE,C_P_98_684));
at(elt4_,attrs2_);
Element elt5_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_685));
at(elt5_,attrs3_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt6_=el(_doc3,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build83(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_686));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_687));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_688));
at(elt2_,attrs2_);
Element elt3_=el(_doc3,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_98_689));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build84(Element _body,Document _doc3){
Element elt0_=el(_doc3,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_98_690));
at(elt0_,attrs0_);
Element elt1_=el(_doc3,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_98_691));
at(elt1_,attrs1_);
Element elt2_=el(_doc3,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_98_692));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc3,UL);
Element elt4_=el(_doc3,C_FOR);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(LIST,C_P_98_693));
attrs3_.add(at(VAR,C_P_98_694));
at(elt4_,attrs3_);
Element elt5_=el(_doc3,LI);
Element elt6_=el(_doc3,A);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(C_COMMAND,C_P_98_695));
attrs4_.add(at(HREF,C_P_98_696));
at(elt6_,attrs4_);
Text txt0_=tx(_doc3,C_P_98_697);
ad(elt6_,txt0_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
}
