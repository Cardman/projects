package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataEndroundEff extends PageCardsCommon{
private static final String C_P_101_0="javahtml";
private static final String C_P_101_1="end";
private static final String C_P_101_2=PkScriptPages.REN_ADD_WEB_CSS_ABILITIES_CSS;
private static final String C_P_101_3="stylesheet";
private static final String C_P_101_4="text/css";
private static final String C_P_101_5="!isEmpty(move)";
private static final String C_P_101_6="$clickMove({index})";
private static final String C_P_101_7="";
private static final String C_P_101_8="{move}";
private static final String C_P_101_9="!isEmpty(ability)";
private static final String C_P_101_10="$clickAbility({index})";
private static final String C_P_101_11="";
private static final String C_P_101_12="{ability}";
private static final String C_P_101_13="!isEmpty(item)";
private static final String C_P_101_14="$clickItem({index})";
private static final String C_P_101_15="";
private static final String C_P_101_16="{item}";
private static final String C_P_101_17="!isEmpty(status)";
private static final String C_P_101_18="$clickStatus({index})";
private static final String C_P_101_19="";
private static final String C_P_101_20="{status}";
private static final String C_P_101_21="!moves.isEmpty()";
private static final String C_P_101_22="moves";
private static final String C_P_101_23="m";
private static final String C_P_101_24="$clickMoves({index},{([m])})";
private static final String C_P_101_25="";
private static final String C_P_101_26="{getTrMoves(([m]))}";
private static final String C_P_101_27="msg_event,rank";
private static final String C_P_101_28="endRoundRank";
private static final String C_P_101_29="!reasonsEndRound.isEmpty()";
private static final String C_P_101_30="msg_effendround,reasons";
private static final String C_P_101_31="reasonsEndRound";
private static final String C_P_101_32="r";
private static final String C_P_101_33="java.lang.String";
private static final String C_P_101_34="{r}";
private static final String C_P_101_35="c";
private static final String C_P_101_36="mapVarsFailEndRound";
private static final String C_P_101_37="r";
private static final String C_P_101_38="java.lang.String";
private static final String C_P_101_39="java.lang.String";
private static final String C_P_101_40="{c} : {r}";
private PageDataEndroundEff(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc6){
Element elt0_=el(_doc6,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_101_0));
attrs0_.add(at(C_BEAN,C_P_101_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc6,HEAD);
Element elt2_=el(_doc6,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_101_2));
attrs1_.add(at(REL,C_P_101_3));
attrs1_.add(at(TYPE,C_P_101_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc6,BODY);
build0(elt3_,_doc6);
build1(elt3_,_doc6);
build2(elt3_,_doc6);
build3(elt3_,_doc6);
ad(elt0_,elt3_);
_doc6.appendChild(elt0_);
}
static void build0(Element _body,Document _doc6){
Element elt0_=el(_doc6,P);
Element elt1_=el(_doc6,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_101_5));
at(elt1_,attrs0_);
Element elt2_=el(_doc6,A);
CustList<Attr> attrs1_=al(2);
attrs1_.add(at(C_COMMAND,C_P_101_6));
attrs1_.add(at(HREF,C_P_101_7));
at(elt2_,attrs1_);
Text txt0_=tx(_doc6,C_P_101_8);
ad(elt2_,txt0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc6,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_101_9));
at(elt3_,attrs2_);
Element elt4_=el(_doc6,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_101_10));
attrs3_.add(at(HREF,C_P_101_11));
at(elt4_,attrs3_);
Text txt1_=tx(_doc6,C_P_101_12);
ad(elt4_,txt1_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt5_=el(_doc6,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_101_13));
at(elt5_,attrs4_);
Element elt6_=el(_doc6,A);
CustList<Attr> attrs5_=al(2);
attrs5_.add(at(C_COMMAND,C_P_101_14));
attrs5_.add(at(HREF,C_P_101_15));
at(elt6_,attrs5_);
Text txt2_=tx(_doc6,C_P_101_16);
ad(elt6_,txt2_);
ad(elt5_,elt6_);
ad(elt0_,elt5_);
Element elt7_=el(_doc6,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_101_17));
at(elt7_,attrs6_);
Element elt8_=el(_doc6,A);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(C_COMMAND,C_P_101_18));
attrs7_.add(at(HREF,C_P_101_19));
at(elt8_,attrs7_);
Text txt3_=tx(_doc6,C_P_101_20);
ad(elt8_,txt3_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
Element elt9_=el(_doc6,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_101_21));
at(elt9_,attrs8_);
Element elt10_=el(_doc6,UL);
Element elt11_=el(_doc6,C_FOR);
CustList<Attr> attrs9_=al(2);
attrs9_.add(at(LIST,C_P_101_22));
attrs9_.add(at(VAR,C_P_101_23));
at(elt11_,attrs9_);
Element elt12_=el(_doc6,LI);
Element elt13_=el(_doc6,A);
CustList<Attr> attrs10_=al(2);
attrs10_.add(at(C_COMMAND,C_P_101_24));
attrs10_.add(at(HREF,C_P_101_25));
at(elt13_,attrs10_);
Text txt4_=tx(_doc6,C_P_101_26);
ad(elt13_,txt4_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc6){
Element elt0_=el(_doc6,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_101_27));
at(elt0_,attrs0_);
Element elt1_=el(_doc6,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_101_28));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc6){
Element elt0_=el(_doc6,BR);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc6){
Element elt0_=el(_doc6,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_101_29));
at(elt0_,attrs0_);
Element elt1_=el(_doc6,P);
Element elt2_=el(_doc6,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_101_30));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
Element elt3_=el(_doc6,UL);
Element elt4_=el(_doc6,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_101_31));
attrs2_.add(at(VAR,C_P_101_32));
attrs2_.add(at(CLASSNAME,C_P_101_33));
at(elt4_,attrs2_);
Element elt5_=el(_doc6,LI);
Text txt0_=tx(_doc6,C_P_101_34);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt1_,elt3_);
Element elt6_=el(_doc6,BR);
ad(elt1_,elt6_);
Element elt7_=el(_doc6,UL);
Element elt8_=el(_doc6,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_101_35));
attrs3_.add(at(MAP,C_P_101_36));
attrs3_.add(at(VALUE,C_P_101_37));
attrs3_.add(at(KEYCLASSNAME,C_P_101_38));
attrs3_.add(at(VARCLASSNAME,C_P_101_39));
at(elt8_,attrs3_);
Element elt9_=el(_doc6,LI);
Text txt1_=tx(_doc6,C_P_101_40);
ad(elt9_,txt1_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt1_,elt7_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
}
