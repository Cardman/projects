package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataEndroundGlobal extends PageCardsCommon{
private static final String C_P_104_0="javahtml";
private static final String C_P_104_1="end_global";
private static final String C_P_104_2=PkScriptPages.REN_ADD_WEB_CSS_ABILITIES_CSS;
private static final String C_P_104_3="stylesheet";
private static final String C_P_104_4="text/css";
private static final String C_P_104_5="endRoundHtml";
private static final String C_P_104_6="aiki.beans.endround";
private static final String C_P_104_7="EffectEndRoundBean";
private static final String C_P_104_8="$intern.index=index";
private static final String C_P_104_9="!damageEndRound.isZero()";
private static final String C_P_104_10="msg_effglobal,damage_end_round";
private static final String C_P_104_11="damageEndRound";
private static final String C_P_104_12="!healingEndRoundGround.isZero()";
private static final String C_P_104_13="msg_effglobal,healing_end_round_ground";
private static final String C_P_104_14="healingEndRoundGround";
private static final String C_P_104_15="!healingEndRound.isZero()";
private static final String C_P_104_16="msg_effglobal,healing_end_round";
private static final String C_P_104_17="healingEndRound";
private static final String C_P_104_18="puttingKo";
private static final String C_P_104_19="msg_effglobal,putting_ko";
private static final String C_P_104_20="!immuneTypes.isEmpty()";
private static final String C_P_104_21="msg_effglobal,immune_types";
private static final String C_P_104_22="immuneTypes";
private static final String C_P_104_23="t";
private static final String C_P_104_24="java.lang.String";
private static final String C_P_104_25="{t}";
private PageDataEndroundGlobal(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc9){
Element elt0_=el(_doc9,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_104_0));
attrs0_.add(at(C_BEAN,C_P_104_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc9,HEAD);
Element elt2_=el(_doc9,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_104_2));
attrs1_.add(at(REL,C_P_104_3));
attrs1_.add(at(TYPE,C_P_104_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc9,BODY);
build0(elt3_,_doc9);
build1(elt3_,_doc9);
ad(elt0_,elt3_);
_doc9.appendChild(elt0_);
}
static void build0(Element _body,Document _doc9){
Element elt0_=el(_doc9,C_IMPORT);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(PAGE,C_P_104_5));
at(elt0_,attrs0_);
Element elt1_=el(_doc9,C_PACKAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(NAME,C_P_104_6));
at(elt1_,attrs1_);
Element elt2_=el(_doc9,C_CLASS);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(NAME,C_P_104_7));
at(elt2_,attrs2_);
Element elt3_=el(_doc9,C_FIELD);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(PREPARE,C_P_104_8));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc9){
Element elt0_=el(_doc9,P);
Element elt1_=el(_doc9,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_104_9));
at(elt1_,attrs0_);
Element elt2_=el(_doc9,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_104_10));
at(elt2_,attrs1_);
Element elt3_=el(_doc9,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_104_11));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt4_=el(_doc9,C_IF);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(CONDITION,C_P_104_12));
at(elt4_,attrs3_);
Element elt5_=el(_doc9,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_104_13));
at(elt5_,attrs4_);
Element elt6_=el(_doc9,PARAM);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_104_14));
at(elt6_,attrs5_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt0_,elt4_);
Element elt7_=el(_doc9,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_104_15));
at(elt7_,attrs6_);
Element elt8_=el(_doc9,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_104_16));
at(elt8_,attrs7_);
Element elt9_=el(_doc9,PARAM);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_104_17));
at(elt9_,attrs8_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
Element elt10_=el(_doc9,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_104_18));
at(elt10_,attrs9_);
Element elt11_=el(_doc9,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_104_19));
at(elt11_,attrs10_);
ad(elt10_,elt11_);
ad(elt0_,elt10_);
Element elt12_=el(_doc9,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_104_20));
at(elt12_,attrs11_);
Element elt13_=el(_doc9,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_104_21));
at(elt13_,attrs12_);
ad(elt12_,elt13_);
Element elt14_=el(_doc9,UL);
Element elt15_=el(_doc9,C_FOR);
CustList<Attr> attrs13_=al(3);
attrs13_.add(at(LIST,C_P_104_22));
attrs13_.add(at(VAR,C_P_104_23));
attrs13_.add(at(CLASSNAME,C_P_104_24));
at(elt15_,attrs13_);
Element elt16_=el(_doc9,LI);
Text txt0_=tx(_doc9,C_P_104_25);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt12_,elt14_);
Element elt17_=el(_doc9,BR);
ad(elt12_,elt17_);
ad(elt0_,elt12_);
ad(_body,elt0_);
}
}
