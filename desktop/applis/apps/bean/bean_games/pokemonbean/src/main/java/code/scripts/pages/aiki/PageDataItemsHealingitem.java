package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataItemsHealingitem extends PageCardsCommon{
private static final String C_P_123_0="javahtml";
private static final String C_P_123_1="healingitem";
private static final String C_P_123_2="msg_item,title";
private static final String C_P_123_3="displayName";
private static final String C_P_123_4=PkScriptPages.REN_ADD_WEB_CSS_ITEMS_CSS;
private static final String C_P_123_5="stylesheet";
private static final String C_P_123_6="text/css";
private static final String C_P_123_7="itemBean";
private static final String C_P_123_8="aiki.beans.items";
private static final String C_P_123_9="ItemBean";
private static final String C_P_123_10="$intern.name=name";
private static final String C_P_123_11="healingTeam";
private static final String C_P_123_12="msg_healingitem,heal_team";
private static final String C_P_123_13="!happiness.isEmpty()";
private static final String C_P_123_14="msg_healingitem,happiness";
private static final String C_P_123_15="msg_healingitem,happiness_ball";
private static final String C_P_123_16="msg_healingitem,happiness_boost";
private static final String C_P_123_17="b";
private static final String C_P_123_18="happiness";
private static final String C_P_123_19="w";
private static final String C_P_123_20="java.lang.Object";
private static final String C_P_123_21="java.lang.Short";
private static final String C_P_123_22="!isBall(([b]))";
private static final String C_P_123_23="msg_healingitem,happiness_other_ball";
private static final String C_P_123_24="isBall(([b]))";
private static final String C_P_123_25="$clickHappiness({([b])})";
private static final String C_P_123_26="";
private static final String C_P_123_27="{getTrHappiness(([b]))}";
private static final String C_P_123_28="{w}";
private PageDataItemsHealingitem(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc28){
Element elt0_=el(_doc28,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_123_0));
attrs0_.add(at(C_BEAN,C_P_123_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc28,HEAD);
Element elt2_=el(_doc28,TITLE);
Element elt3_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_123_2));
at(elt3_,attrs1_);
Element elt4_=el(_doc28,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_123_3));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc28,LINK);
CustList<Attr> attrs3_=al(3);
attrs3_.add(at(HREF,C_P_123_4));
attrs3_.add(at(REL,C_P_123_5));
attrs3_.add(at(TYPE,C_P_123_6));
at(elt5_,attrs3_);
ad(elt1_,elt5_);
ad(elt0_,elt1_);
Element elt6_=el(_doc28,BODY);
build0(elt6_,_doc28);
build1(elt6_,_doc28);
ad(elt0_,elt6_);
_doc28.appendChild(elt0_);
}
static void build0(Element _body,Document _doc28){
Element elt0_=el(_doc28,C_IMPORT);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(PAGE,C_P_123_7));
at(elt0_,attrs0_);
Element elt1_=el(_doc28,C_PACKAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(NAME,C_P_123_8));
at(elt1_,attrs1_);
Element elt2_=el(_doc28,C_CLASS);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(NAME,C_P_123_9));
at(elt2_,attrs2_);
Element elt3_=el(_doc28,C_FIELD);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(PREPARE,C_P_123_10));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc28){
Element elt0_=el(_doc28,P);
Element elt1_=el(_doc28,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_123_11));
at(elt1_,attrs0_);
Element elt2_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_123_12));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc28,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_123_13));
at(elt3_,attrs2_);
Element elt4_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_123_14));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
Element elt5_=el(_doc28,TABLE);
Element elt6_=el(_doc28,THEAD);
Element elt7_=el(_doc28,TR);
Element elt8_=el(_doc28,TH);
Element elt9_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_123_15));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
Element elt10_=el(_doc28,TH);
Element elt11_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_123_16));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt7_,elt10_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt12_=el(_doc28,TBODY);
Element elt13_=el(_doc28,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_123_17));
attrs6_.add(at(MAP,C_P_123_18));
attrs6_.add(at(VALUE,C_P_123_19));
attrs6_.add(at(KEYCLASSNAME,C_P_123_20));
attrs6_.add(at(VARCLASSNAME,C_P_123_21));
at(elt13_,attrs6_);
Element elt14_=el(_doc28,TR);
Element elt15_=el(_doc28,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_123_22));
at(elt15_,attrs7_);
Element elt16_=el(_doc28,TD);
Element elt17_=el(_doc28,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_123_23));
at(elt17_,attrs8_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
Element elt18_=el(_doc28,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_123_24));
at(elt18_,attrs9_);
Element elt19_=el(_doc28,TD);
Element elt20_=el(_doc28,A);
CustList<Attr> attrs10_=al(2);
attrs10_.add(at(C_COMMAND,C_P_123_25));
attrs10_.add(at(HREF,C_P_123_26));
at(elt20_,attrs10_);
Text txt0_=tx(_doc28,C_P_123_27);
ad(elt20_,txt0_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt14_,elt18_);
Element elt21_=el(_doc28,TD);
Text txt1_=tx(_doc28,C_P_123_28);
ad(elt21_,txt1_);
ad(elt14_,elt21_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt5_,elt12_);
ad(elt3_,elt5_);
Element elt22_=el(_doc28,BR);
ad(elt3_,elt22_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
}
