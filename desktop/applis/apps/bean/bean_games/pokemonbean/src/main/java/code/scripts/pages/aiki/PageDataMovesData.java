package code.scripts.pages.aiki;
import aiki.beans.moves.AikiBeansMovesStd;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataMovesData extends PageCardsCommon{
private static final String C_P_143_0="javahtml";
private static final String C_P_143_1=AikiBeansMovesStd.BEAN_MOVE;
private static final String C_P_143_2="msg_movedata,title";
private static final String C_P_143_3="displayName";
private static final String C_P_143_4=PkScriptPages.REN_ADD_WEB_CSS_MOVES_CSS;
private static final String C_P_143_5="stylesheet";
private static final String C_P_143_6="text/css";
private static final String C_P_143_7="$clickMoves()";
private static final String C_P_143_8="";
private static final String C_P_143_9="msg_movedata,moves";
private static final String C_P_143_10="msg_movedata,general_move";
private static final String C_P_143_11="displayName";
private static final String C_P_143_12="msg_movedata,type_cat";
private static final String C_P_143_13="msg_movedata,typesBoost";
private static final String C_P_143_14="boostedTypes";
private static final String C_P_143_15="t";
private static final String C_P_143_16="java.lang.String";
private static final String C_P_143_17="{t}";
private static final String C_P_143_18="!hasDefaultTypes";
private static final String C_P_143_19="msg_movedata,type_title";
private static final String C_P_143_20="types";
private static final String C_P_143_21="t";
private static final String C_P_143_22="java.lang.String";
private static final String C_P_143_23="{t}";
private static final String C_P_143_24="typesDependOnlyOnItem()";
private static final String C_P_143_25="msg_movedata,moves";
private static final String C_P_143_26="msg_movedata,item";
private static final String C_P_143_27="msg_movedata,type_title";
private static final String C_P_143_28="i";
private static final String C_P_143_29="typesByOwnedItems";
private static final String C_P_143_30="t";
private static final String C_P_143_31="java.lang.Object";
private static final String C_P_143_32="java.lang.String";
private static final String C_P_143_33="isItem(([i]))";
private static final String C_P_143_34="$clickTypesByOwnedItems({([i])})";
private static final String C_P_143_35="{getTrTypesByOwnedItems(([i]))}";
private static final String C_P_143_36="!isItem(([i]))";
private static final String C_P_143_37="msg_movedata,other_item";
private static final String C_P_143_38="{t}";
private static final String C_P_143_39="typesDependOnlyOnWeather()";
private static final String C_P_143_40="msg_movedata,moves";
private static final String C_P_143_41="msg_movedata,weather";
private static final String C_P_143_42="msg_movedata,type_title";
private static final String C_P_143_43="i";
private static final String C_P_143_44="typesByWeathers";
private static final String C_P_143_45="t";
private static final String C_P_143_46="java.lang.Object";
private static final String C_P_143_47="java.lang.String";
private static final String C_P_143_48="isWeather(([i]))";
private static final String C_P_143_49="$clickTypesByWeathers({([i])})";
private static final String C_P_143_50="{getTrTypesByWeathers(([i]))}";
private static final String C_P_143_51="!isWeather(([i]))";
private static final String C_P_143_52="msg_movedata,other_weather";
private static final String C_P_143_53="{t}";
private static final String C_P_143_54="typesDependOnWeatherAndItem()";
private static final String C_P_143_55="msg_movedata,moves";
private static final String C_P_143_56="msg_movedata,item";
private static final String C_P_143_57="msg_movedata,type_title";
private static final String C_P_143_58="i";
private static final String C_P_143_59="typesByOwnedItems";
private static final String C_P_143_60="t";
private static final String C_P_143_61="java.lang.Object";
private static final String C_P_143_62="java.lang.String";
private static final String C_P_143_63="isItem(([i]))";
private static final String C_P_143_64="$clickTypesByOwnedItems({([i])})";
private static final String C_P_143_65="{getTrTypesByOwnedItems(([i]))}";
private static final String C_P_143_66="!isItem(([i]))";
private static final String C_P_143_67="msg_movedata,other_item";
private static final String C_P_143_68="{t}";
private static final String C_P_143_69="msg_movedata,types";
private static final String C_P_143_70="msg_movedata,moves";
private static final String C_P_143_71="msg_movedata,weather";
private static final String C_P_143_72="msg_movedata,type_title";
private static final String C_P_143_73="i";
private static final String C_P_143_74="typesByWeathers";
private static final String C_P_143_75="t";
private static final String C_P_143_76="java.lang.Object";
private static final String C_P_143_77="java.lang.String";
private static final String C_P_143_78="isWeather(([i]))";
private static final String C_P_143_79="$clickTypesByWeathers({([i])})";
private static final String C_P_143_80="{getTrTypesByWeathers(([i]))}";
private static final String C_P_143_81="!isWeather(([i]))";
private static final String C_P_143_82="msg_movedata,other_weather";
private static final String C_P_143_83="{t}";
private static final String C_P_143_84="isDamagingMove()";
private static final String C_P_143_85="isDamagingDirectMove()";
private static final String C_P_143_86="msg_movedata,cat_direct_true";
private static final String C_P_143_87="category";
private static final String C_P_143_88="!isDamagingDirectMove()";
private static final String C_P_143_89="msg_movedata,cat_direct_false";
private static final String C_P_143_90="category";
private static final String C_P_143_91="!isDamagingMove()";
private static final String C_P_143_92="msg_movedata,cat_status";
private static final String C_P_143_93="msg_movedata,pp_title";
private static final String C_P_143_94="msg_movedata,pp";
private static final String C_P_143_95="pp";
private static final String C_P_143_96="isZeroPriority()";
private static final String C_P_143_97="msg_movedata,priority_zero";
private static final String C_P_143_98="!isZeroPriority()";
private static final String C_P_143_99="msg_movedata,priority";
private static final String C_P_143_100="priority";
private static final String C_P_143_101="msg_movedata,targets_title";
private static final String C_P_143_102="msg_movedata,targets";
private static final String C_P_143_103="isAdjAdv()";
private static final String C_P_143_104="msg_movedata,targets_ADJ_ADV";
private static final String C_P_143_105="isAdjMult()";
private static final String C_P_143_106="msg_movedata,targets_ADJ_MULT";
private static final String C_P_143_107="isAdjUniq()";
private static final String C_P_143_108="msg_movedata,targets_ADJ_UNIQ";
private static final String C_P_143_109="isAllie()";
private static final String C_P_143_110="msg_movedata,targets_ALLIE";
private static final String C_P_143_111="isAllies()";
private static final String C_P_143_112="msg_movedata,targets_ALLIES";
private static final String C_P_143_113="isAnyFoe()";
private static final String C_P_143_114="msg_movedata,targets_ANY_FOE";
private static final String C_P_143_115="isAutreUniq()";
private static final String C_P_143_116="msg_movedata,targets_AUTRE_UNIQ";
private static final String C_P_143_117="isGlobale()";
private static final String C_P_143_118="msg_movedata,targets_GLOBALE";
private static final String C_P_143_119="isLanceur()";
private static final String C_P_143_120="msg_movedata,targets_LANCEUR";
private static final String C_P_143_121="isPseudoGlobale()";
private static final String C_P_143_122="msg_movedata,targets_PSEUDO_GLOBALE";
private static final String C_P_143_123="isTousAdv()";
private static final String C_P_143_124="msg_movedata,targets_TOUS_ADV";
private static final String C_P_143_125="isUniqueImporte()";
private static final String C_P_143_126="msg_movedata,targets_UNIQUE_IMPORTE";
private static final String C_P_143_127="isAdjAdv()";
private static final String C_P_143_128="msg_movedata,chosen_targets_ADJ_ADV";
private static final String C_P_143_129="isAdjMult()";
private static final String C_P_143_130="msg_movedata,chosen_targets_ADJ_MULT";
private static final String C_P_143_131="isAdjUniq()";
private static final String C_P_143_132="msg_movedata,chosen_targets_ADJ_UNIQ";
private static final String C_P_143_133="isAllie()";
private static final String C_P_143_134="msg_movedata,chosen_targets_ALLIE";
private static final String C_P_143_135="isAllies()";
private static final String C_P_143_136="msg_movedata,chosen_targets_ALLIES";
private static final String C_P_143_137="isAnyFoe()";
private static final String C_P_143_138="msg_movedata,chosen_targets_ANY_FOE";
private static final String C_P_143_139="isAutreUniq()";
private static final String C_P_143_140="msg_movedata,chosen_targets_AUTRE_UNIQ";
private static final String C_P_143_141="isGlobale()";
private static final String C_P_143_142="msg_movedata,chosen_targets_GLOBALE";
private static final String C_P_143_143="isLanceur()";
private static final String C_P_143_144="msg_movedata,chosen_targets_LANCEUR";
private static final String C_P_143_145="isPseudoGlobale()";
private static final String C_P_143_146="msg_movedata,chosen_targets_PSEUDO_GLOBALE";
private static final String C_P_143_147="isTousAdv()";
private static final String C_P_143_148="msg_movedata,chosen_targets_TOUS_ADV";
private static final String C_P_143_149="isUniqueImporte()";
private static final String C_P_143_150="msg_movedata,chosen_targets_UNIQUE_IMPORTE";
private static final String C_P_143_151="msg_movedata,accuracy_title";
private static final String C_P_143_152="isConstAccuracy()";
private static final String C_P_143_153="msg_movedata,accuracy_const";
private static final String C_P_143_154="accuracy";
private static final String C_P_143_155="!isConstAccuracy()";
private static final String C_P_143_156="msg_movedata,accuracy_var";
private static final String C_P_143_157="accuracy";
private static final String C_P_143_158="!mapVarsAccuracy.isEmpty()";
private static final String C_P_143_159="k";
private static final String C_P_143_160="mapVarsAccuracy";
private static final String C_P_143_161="v";
private static final String C_P_143_162="java.lang.String";
private static final String C_P_143_163="java.lang.String";
private static final String C_P_143_164="{k} :";
private static final String C_P_143_165="";
private static final String C_P_143_166="msg_movedata,formula";
private static final String C_P_143_167="v";
private static final String C_P_143_168="ignVarAccurUserNeg";
private static final String C_P_143_169="msg_movedata,ign_var_prec_lanceur_neg";
private static final String C_P_143_170="ignVarEvasTargetPos";
private static final String C_P_143_171="msg_movedata,ign_var_esq_cible_pos";
private static final String C_P_143_172="msg_movedata,prepa_round_title";
private static final String C_P_143_173="!isZeroPrepaRound()";
private static final String C_P_143_174="msg_movedata,prepa_tour_climat";
private static final String C_P_143_175="nbPrepaRound";
private static final String C_P_143_176="disappearBeforeUse";
private static final String C_P_143_177="msg_movedata,disparition_tour";
private static final String C_P_143_178="msg_movedata,success_title";
private static final String C_P_143_179="!deletedStatus.isEmpty()";
private static final String C_P_143_180="msg_movedata,deleted_status";
private static final String C_P_143_181="deletedStatus";
private static final String C_P_143_182="m";
private static final String C_P_143_183="$clickDeletedStatus({([m])})";
private static final String C_P_143_184="";
private static final String C_P_143_185="{getDeletedStatus(([m]))}";
private static final String C_P_143_186="!requiredStatus.isEmpty()";
private static final String C_P_143_187="msg_movedata,requiered_status";
private static final String C_P_143_188="requiredStatus";
private static final String C_P_143_189="m";
private static final String C_P_143_190="$clickRequiredStatus({([m])})";
private static final String C_P_143_191="";
private static final String C_P_143_192="{getRequiredStatus(([m]))}";
private static final String C_P_143_193="!achieveDisappearedPkUsingMove.isEmpty()";
private static final String C_P_143_194="msg_movedata,touche_pk_disparus";
private static final String C_P_143_195="achieveDisappearedPkUsingMove";
private static final String C_P_143_196="m";
private static final String C_P_143_197="{getTrAchieveDisappearedPkUsingMove(([m]))}";
private static final String C_P_143_197_0="$clickAchieveDisappearedPkUsingMove({([m])})";
private static final String C_P_143_198="!abilities.isEmpty()";
private static final String C_P_143_199="msg_movedata,abilities_affect";
private static final String C_P_143_200="abilities";
private static final String C_P_143_201="a";
private static final String C_P_143_202="$clickAbility({([a])})";
private static final String C_P_143_203="";
private static final String C_P_143_204="{getTrAbility(([a]))}";
private static final String C_P_143_205="!items.isEmpty()";
private static final String C_P_143_206="msg_movedata,items_affect";
private static final String C_P_143_207="items";
private static final String C_P_143_208="i";
private static final String C_P_143_209="$clickItem({([i])})";
private static final String C_P_143_210="";
private static final String C_P_143_211="{getTrItem(([i]))}";
private static final String C_P_143_212="cannotKo";
private static final String C_P_143_213="msg_movedata,cannot_ko";
private static final String C_P_143_214="!affectedByMoves.isEmpty()";
private static final String C_P_143_215="msg_movedata,affect_by_moves";
private static final String C_P_143_216="affectedByMoves";
private static final String C_P_143_217="m";
private static final String C_P_143_218="$clickMove({([m])})";
private static final String C_P_143_219="";
private static final String C_P_143_220="{getTrMove(([m]))}";
/*private static final String C_P_143_221="msg_movedata,effects_title";
private static final String C_P_143_222="secEffectsByItem.isEmpty()";
private static final String C_P_143_223="$int";
private static final String C_P_143_224="effects";
private static final String C_P_143_225="e";
private static final String C_P_143_226="isBeforePrimaryEffect(e)";
private static final String C_P_143_227="msg_movedata,effects_bef_first";
private static final String C_P_143_228="!isEndRoundEffect(e)";
private static final String C_P_143_229="isPrimaryEffect(e)";
private static final String C_P_143_230="msg_movedata,effects_first";
private static final String C_P_143_231="isAfterPrimaryEffect(e)";
private static final String C_P_143_232="msg_movedata,effects_sec";
private static final String C_P_143_233="secEffectIfNoDamage";
private static final String C_P_143_234="msg_movedata,effect_while_no_damage";
private static final String C_P_143_235="isEndRoundEffect(e)";
private static final String C_P_143_236="msg_movedata,effects_end_round";
private static final String C_P_143_237="{getPage(([e]))}";
private static final String C_P_143_238="aiki.beans.moves.effects";
private static final String C_P_143_239="EffectBean";
private static final String C_P_143_240="$intern.index=e";
private static final String C_P_143_241="$intern.move=name";
private static final String C_P_143_242="!secEffectsByItem.isEmpty()";
private static final String C_P_143_243="$int";
private static final String C_P_143_244="effects";
private static final String C_P_143_245="e";
private static final String C_P_143_246="isBeforePrimaryEffect(e)";
private static final String C_P_143_247="msg_movedata,effects_bef_first";
private static final String C_P_143_248="{getPage(([e]))}";
private static final String C_P_143_249="aiki.beans.moves.effects";
private static final String C_P_143_250="EffectBean";
private static final String C_P_143_251="$intern.index=e";
private static final String C_P_143_252="$intern.move=name";
private static final String C_P_143_253="!isEndRoundEffect(e)";
private static final String C_P_143_254="isPrimaryEffect(e)";
private static final String C_P_143_255="msg_movedata,effects_first";
private static final String C_P_143_256="{getPage(([e]))}";
private static final String C_P_143_257="aiki.beans.moves.effects";
private static final String C_P_143_258="EffectBean";
private static final String C_P_143_259="$intern.index=e";
private static final String C_P_143_260="$intern.move=name";
private static final String C_P_143_261="msg_movedata,effects_sec_dpt";
private static final String C_P_143_262="e";
private static final String C_P_143_263="secEffectsByItem";
private static final String C_P_143_264="l";
private static final String C_P_143_265="java.lang.Object";
private static final String C_P_143_266="ls";
private static final String C_P_143_267="{([e])}";
private static final String C_P_143_268="$clickItemSecEffect({([e])})";
private static final String C_P_143_269="";
private static final String C_P_143_270="{translateItemSecEffect(([e]))}";
private static final String C_P_143_271="secEffectIfNoDamage";
private static final String C_P_143_272="msg_movedata,effect_while_no_damage";
private static final String C_P_143_273="$int";
private static final String C_P_143_274="l";
private static final String C_P_143_275="n";
private static final String C_P_143_276="{getPage(n)}";
private static final String C_P_143_277="aiki.beans.moves.effects";
private static final String C_P_143_278="EffectBean";
private static final String C_P_143_279="$intern.index=n";
private static final String C_P_143_280="$intern.move=name";
private static final String C_P_143_281="$int";
private static final String C_P_143_282="effects";
private static final String C_P_143_283="e";
private static final String C_P_143_284="isEndRoundEffect(e)";
private static final String C_P_143_285="msg_movedata,effects_end_round";
private static final String C_P_143_286="{getPage(([e]))}";
private static final String C_P_143_287="aiki.beans.moves.effects";
private static final String C_P_143_288="EffectBean";
private static final String C_P_143_289="$intern.index=e";
private static final String C_P_143_290="$intern.move=name";*/
private static final String C_P_143_221="msg_movedata,effects_title";
private static final String C_P_143_222="effPrimOrBeforeNotEndRound(e)";
private static final String C_P_143_222_0="effSecNotEndRound(e)";
private static final String C_P_143_223="$int";
private static final String C_P_143_224="effects";
private static final String C_P_143_225="e";
private static final String C_P_143_226="isBeforePrimaryEffect(e)";
private static final String C_P_143_226_0="!isBeforePrimaryEffect(e)";
private static final String C_P_143_227="msg_movedata,effects_bef_first";
//private static final String C_P_143_228="!isEndRoundEffect(e)";
//private static final String C_P_143_229="isPrimaryEffect(e)";
private static final String C_P_143_230="msg_movedata,effects_first";
//private static final String C_P_143_231="isAfterPrimaryEffect(e)";
private static final String C_P_143_232="msg_movedata,effects_sec";
private static final String C_P_143_233="secEffectIfNoDamage";
private static final String C_P_143_234="msg_movedata,effect_while_no_damage";
private static final String C_P_143_235="isEndRoundEffect(e)";
private static final String C_P_143_236="msg_movedata,effects_end_round";
private static final String C_P_143_237="getPage(([e]))";
private static final String C_P_143_238="aiki.beans.moves.effects";
private static final String C_P_143_239="EffectBean";
private static final String C_P_143_240="$intern.index=e";
private static final String C_P_143_241="$intern.move=name";
private static final String C_P_143_242="!secEffectsByItem.isEmpty()";
/*private static final String C_P_143_243="$int";
private static final String C_P_143_244="effects";
private static final String C_P_143_245="e";
private static final String C_P_143_246="isBeforePrimaryEffect(e)";
private static final String C_P_143_247="msg_movedata,effects_bef_first";
private static final String C_P_143_248="{getPage(([e]))}";
private static final String C_P_143_249="aiki.beans.moves.effects";
private static final String C_P_143_250="EffectBean";
private static final String C_P_143_251="$intern.index=e";
private static final String C_P_143_252="$intern.move=name";
private static final String C_P_143_253="!isEndRoundEffect(e)";
private static final String C_P_143_254="isPrimaryEffect(e)";
private static final String C_P_143_255="msg_movedata,effects_first";
private static final String C_P_143_256="{getPage(([e]))}";
private static final String C_P_143_257="aiki.beans.moves.effects";
private static final String C_P_143_258="EffectBean";
private static final String C_P_143_259="$intern.index=e";
private static final String C_P_143_260="$intern.move=name";*/
private static final String C_P_143_261="msg_movedata,effects_sec_dpt";
private static final String C_P_143_262="e";
private static final String C_P_143_263="secEffectsByItem";
private static final String C_P_143_264="l";
private static final String C_P_143_265="java.lang.Object";
private static final String C_P_143_266="ls";
private static final String C_P_143_267="{([e])}";
private static final String C_P_143_268="$clickItemSecEffect({([e])})";
private static final String C_P_143_269="";
private static final String C_P_143_270="{translateItemSecEffect(([e]))}";
private static final String C_P_143_271="secEffectIfNoDamage";
private static final String C_P_143_272="msg_movedata,effect_while_no_damage";
private static final String C_P_143_273="$int";
private static final String C_P_143_274="l";
private static final String C_P_143_275="n";
private static final String C_P_143_276="getPage(n)";
private static final String C_P_143_277="aiki.beans.moves.effects";
private static final String C_P_143_278="EffectBean";
private static final String C_P_143_279="$intern.index=n";
private static final String C_P_143_280="$intern.move=name";
/*private static final String C_P_143_281="$int";
private static final String C_P_143_282="effects";
private static final String C_P_143_283="e";
private static final String C_P_143_284="isEndRoundEffect(e)";
private static final String C_P_143_285="msg_movedata,effects_end_round";
private static final String C_P_143_286="{getPage(([e]))}";
private static final String C_P_143_287="aiki.beans.moves.effects";
private static final String C_P_143_288="EffectBean";
private static final String C_P_143_289="$intern.index=e";
private static final String C_P_143_290="$intern.move=name";*/
private static final String C_P_143_291="msg_movedata,after_using";
private static final String C_P_143_292="switchAfterUsingMove()";
private static final String C_P_143_293="msg_movedata,switch";
private static final String C_P_143_294="rechargeRound";
private static final String C_P_143_295="msg_movedata,recharge";
private static final String C_P_143_296="msg_movedata,recharge_ab";
private static final String C_P_143_297="isRepeatedRound()";
private static final String C_P_143_298="constUserChoice";
private static final String C_P_143_299="msg_movedata,const_user_choice";
private static final String C_P_143_300=GO_TO_ENDROUND;
private static final String C_P_143_301="";
private static final String C_P_143_302="msg_movedata,end_round_link";
private static final String C_P_143_303="msg_movedata,repeated_round";
private static final String C_P_143_304="rankIncrementNbRound";
private static final String C_P_143_305="msg_movedata,nb_rounds";
private static final String C_P_143_306="msg_movedata,rate";
private static final String C_P_143_307="r";
private static final String C_P_143_308="repeatRoundLaw";
private static final String C_P_143_309="p";
private static final String C_P_143_310="li";
private static final String C_P_143_311="r";
private static final String C_P_143_312="{r}";
private static final String C_P_143_313="{p}";
private static final String C_P_143_314="canBeLearnt()";
private static final String C_P_143_315="msg_movedata,learning_move";
private static final String C_P_143_316="!movesLevelLearntByPokemon.isEmpty()";
private static final String C_P_143_317="msg_movedata,by_growing";
private static final String C_P_143_318="l";
private static final String C_P_143_319="movesLevelLearntByPokemon";
private static final String C_P_143_320="p";
private static final String C_P_143_321="java.lang.Short";
private static final String C_P_143_322="ls";
private static final String C_P_143_323="msg_movedata,grow_level";
private static final String C_P_143_324="l";
private static final String C_P_143_325="p";
private static final String C_P_143_326="k";
private static final String C_P_143_327="$clickPokemon({([l])},{([k])})";
private static final String C_P_143_328="";
private static final String C_P_143_329="{getTrPokemon(([l]),([k]))}";
private static final String C_P_143_330="!movesTmLearntByPokemon.isEmpty()";
private static final String C_P_143_331="msg_movedata,by_learn_tm";
private static final String C_P_143_332="movesTmLearntByPokemon";
private static final String C_P_143_333="l";
private static final String C_P_143_334="$clickPokemonTm({([l])})";
private static final String C_P_143_335="";
private static final String C_P_143_336="{getTrPokemonTm(([l]))}";
private static final String C_P_143_337="!movesHmLearntByPokemon.isEmpty()";
private static final String C_P_143_338="msg_movedata,by_learn_hm";
private static final String C_P_143_339="movesHmLearntByPokemon";
private static final String C_P_143_340="l";
private static final String C_P_143_341="$clickPokemonHm({([l])})";
private static final String C_P_143_342="";
private static final String C_P_143_343="{getTrPokemonHm(([l]))}";
private static final String C_P_143_344="!movesMtLearntByPokemon.isEmpty()";
private static final String C_P_143_345="msg_movedata,by_learn_mt";
private static final String C_P_143_346="movesMtLearntByPokemon";
private static final String C_P_143_347="l";
private static final String C_P_143_348="$clickPokemonMt({([l])})";
private static final String C_P_143_349="";
private static final String C_P_143_350="{getTrPokemonMt(([l]))}";
private PageDataMovesData(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc48){
Element elt0_=el(_doc48,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_143_0));
attrs0_.add(at(C_BEAN,C_P_143_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,HEAD);
Element elt2_=el(_doc48,TITLE);
Element elt3_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_2));
at(elt3_,attrs1_);
Element elt4_=el(_doc48,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_3));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc48,LINK);
CustList<Attr> attrs3_=al(3);
attrs3_.add(at(HREF,C_P_143_4));
attrs3_.add(at(REL,C_P_143_5));
attrs3_.add(at(TYPE,C_P_143_6));
at(elt5_,attrs3_);
ad(elt1_,elt5_);
ad(elt0_,elt1_);
Element elt6_=el(_doc48,BODY);
build0(elt6_,_doc48);
build1(elt6_,_doc48);
br(elt6_,_doc48);
build3(elt6_,_doc48);
build4(elt6_,_doc48);
build5(elt6_,_doc48);
build6(elt6_,_doc48);
build7(elt6_,_doc48);
build8(elt6_,_doc48);
build9(elt6_,_doc48);
build10(elt6_,_doc48);
build11(elt6_,_doc48);
build12(elt6_,_doc48);
hr(elt6_,_doc48);
build14(elt6_,_doc48);
build15(elt6_,_doc48);
build16(elt6_,_doc48);
build17(elt6_,_doc48);
build18(elt6_,_doc48);
build19(elt6_,_doc48);
build20(elt6_,_doc48);
br(elt6_,_doc48);
build22(elt6_,_doc48);
build23(elt6_,_doc48);
build24(elt6_,_doc48);
build25(elt6_,_doc48);
br(elt6_,_doc48);
build27(elt6_,_doc48);
build28(elt6_,_doc48);
build29(elt6_,_doc48);
build30(elt6_,_doc48);
build31(elt6_,_doc48);
hr(elt6_,_doc48);
build33(elt6_,_doc48);
build34(elt6_,_doc48);
build35(elt6_,_doc48);
build36(elt6_,_doc48);
build37(elt6_,_doc48);
build38(elt6_,_doc48);
build39(elt6_,_doc48);
build40(elt6_,_doc48);
br(elt6_,_doc48);
build42(elt6_,_doc48);
build43(elt6_,_doc48);
build44(elt6_,_doc48);
build45(elt6_,_doc48);
build46(elt6_,_doc48);
build47(elt6_,_doc48);
build48(elt6_,_doc48);
build49(elt6_,_doc48);
ad(elt0_,elt6_);
_doc48.appendChild(elt0_);
}
static void build0(Element _body,Document _doc48){
Element elt0_=el(_doc48,BR);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc48){
Element elt0_=el(_doc48,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_143_7));
attrs0_.add(at(HREF,C_P_143_8));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_9));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc48){
Element elt0_=el(_doc48,H1);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_10));
at(elt1_,attrs0_);
Element elt2_=el(_doc48,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_11));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc48){
Element elt0_=el(_doc48,H2);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_12));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_13));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc48){
Element elt0_=el(_doc48,UL);
Element elt1_=el(_doc48,C_FOR);
CustList<Attr> attrs0_=al(3);
attrs0_.add(at(LIST,C_P_143_14));
attrs0_.add(at(VAR,C_P_143_15));
attrs0_.add(at(CLASSNAME,C_P_143_16));
at(elt1_,attrs0_);
Element elt2_=el(_doc48,LI);
Text txt0_=tx(_doc48,C_P_143_17);
ad(elt2_,txt0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_18));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_19));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_143_20));
attrs2_.add(at(VAR,C_P_143_21));
attrs2_.add(at(CLASSNAME,C_P_143_22));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Text txt0_=tx(_doc48,C_P_143_23);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_24));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,TABLE);
Element elt2_=el(_doc48,CAPTION);
Element elt3_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_25));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc48,THEAD);
Element elt5_=el(_doc48,TR);
Element elt6_=el(_doc48,TH);
Element elt7_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_26));
at(elt7_,attrs2_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc48,TH);
Element elt9_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_27));
at(elt9_,attrs3_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
Element elt10_=el(_doc48,TBODY);
Element elt11_=el(_doc48,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_143_28));
attrs4_.add(at(MAP,C_P_143_29));
attrs4_.add(at(VALUE,C_P_143_30));
attrs4_.add(at(KEYCLASSNAME,C_P_143_31));
attrs4_.add(at(VARCLASSNAME,C_P_143_32));
at(elt11_,attrs4_);
Element elt12_=el(_doc48,TR);
Element elt13_=el(_doc48,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_143_33));
at(elt13_,attrs5_);
Element elt14_=el(_doc48,TD);
Element elt15_=el(_doc48,A);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(C_COMMAND,C_P_143_34));
at(elt15_,attrs6_);
Text txt0_=tx(_doc48,C_P_143_35);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc48,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_143_36));
at(elt16_,attrs7_);
Element elt17_=el(_doc48,TD);
Element elt18_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_143_37));
at(elt18_,attrs8_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc48,TD);
Text txt1_=tx(_doc48,C_P_143_38);
ad(elt19_,txt1_);
ad(elt12_,elt19_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt1_,elt10_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_39));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,TABLE);
Element elt2_=el(_doc48,CAPTION);
Element elt3_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_40));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc48,THEAD);
Element elt5_=el(_doc48,TR);
Element elt6_=el(_doc48,TH);
Element elt7_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_41));
at(elt7_,attrs2_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc48,TH);
Element elt9_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_42));
at(elt9_,attrs3_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
Element elt10_=el(_doc48,TBODY);
Element elt11_=el(_doc48,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_143_43));
attrs4_.add(at(MAP,C_P_143_44));
attrs4_.add(at(VALUE,C_P_143_45));
attrs4_.add(at(KEYCLASSNAME,C_P_143_46));
attrs4_.add(at(VARCLASSNAME,C_P_143_47));
at(elt11_,attrs4_);
Element elt12_=el(_doc48,TR);
Element elt13_=el(_doc48,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_143_48));
at(elt13_,attrs5_);
Element elt14_=el(_doc48,TD);
Element elt15_=el(_doc48,A);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(C_COMMAND,C_P_143_49));
at(elt15_,attrs6_);
Text txt0_=tx(_doc48,C_P_143_50);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc48,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_143_51));
at(elt16_,attrs7_);
Element elt17_=el(_doc48,TD);
Element elt18_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_143_52));
at(elt18_,attrs8_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc48,TD);
Text txt1_=tx(_doc48,C_P_143_53);
ad(elt19_,txt1_);
ad(elt12_,elt19_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt1_,elt10_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_54));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,TABLE);
Element elt2_=el(_doc48,CAPTION);
Element elt3_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_55));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc48,THEAD);
Element elt5_=el(_doc48,TR);
Element elt6_=el(_doc48,TH);
Element elt7_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_56));
at(elt7_,attrs2_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt8_=el(_doc48,TH);
Element elt9_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_57));
at(elt9_,attrs3_);
ad(elt8_,elt9_);
ad(elt5_,elt8_);
ad(elt4_,elt5_);
ad(elt1_,elt4_);
Element elt10_=el(_doc48,TBODY);
Element elt11_=el(_doc48,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_143_58));
attrs4_.add(at(MAP,C_P_143_59));
attrs4_.add(at(VALUE,C_P_143_60));
attrs4_.add(at(KEYCLASSNAME,C_P_143_61));
attrs4_.add(at(VARCLASSNAME,C_P_143_62));
at(elt11_,attrs4_);
Element elt12_=el(_doc48,TR);
Element elt13_=el(_doc48,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_143_63));
at(elt13_,attrs5_);
Element elt14_=el(_doc48,TD);
Element elt15_=el(_doc48,A);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(C_COMMAND,C_P_143_64));
at(elt15_,attrs6_);
Text txt0_=tx(_doc48,C_P_143_65);
ad(elt15_,txt0_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt16_=el(_doc48,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_143_66));
at(elt16_,attrs7_);
Element elt17_=el(_doc48,TD);
Element elt18_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_143_67));
at(elt18_,attrs8_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt12_,elt16_);
Element elt19_=el(_doc48,TD);
Text txt1_=tx(_doc48,C_P_143_68);
ad(elt19_,txt1_);
ad(elt12_,elt19_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt1_,elt10_);
ad(elt0_,elt1_);
Element elt20_=el(_doc48,BR);
ad(elt0_,elt20_);
Element elt21_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_143_69));
at(elt21_,attrs9_);
ad(elt0_,elt21_);
Element elt22_=el(_doc48,TABLE);
Element elt23_=el(_doc48,CAPTION);
Element elt24_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_143_70));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
Element elt25_=el(_doc48,THEAD);
Element elt26_=el(_doc48,TR);
Element elt27_=el(_doc48,TH);
Element elt28_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_143_71));
at(elt28_,attrs11_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
Element elt29_=el(_doc48,TH);
Element elt30_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_143_72));
at(elt30_,attrs12_);
ad(elt29_,elt30_);
ad(elt26_,elt29_);
ad(elt25_,elt26_);
ad(elt22_,elt25_);
Element elt31_=el(_doc48,TBODY);
Element elt32_=el(_doc48,C_FOR);
CustList<Attr> attrs13_=al(5);
attrs13_.add(at(KEY,C_P_143_73));
attrs13_.add(at(MAP,C_P_143_74));
attrs13_.add(at(VALUE,C_P_143_75));
attrs13_.add(at(KEYCLASSNAME,C_P_143_76));
attrs13_.add(at(VARCLASSNAME,C_P_143_77));
at(elt32_,attrs13_);
Element elt33_=el(_doc48,TR);
Element elt34_=el(_doc48,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_143_78));
at(elt34_,attrs14_);
Element elt35_=el(_doc48,TD);
Element elt36_=el(_doc48,A);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(C_COMMAND,C_P_143_79));
at(elt36_,attrs15_);
Text txt2_=tx(_doc48,C_P_143_80);
ad(elt36_,txt2_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
Element elt37_=el(_doc48,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_143_81));
at(elt37_,attrs16_);
Element elt38_=el(_doc48,TD);
Element elt39_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_143_82));
at(elt39_,attrs17_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
ad(elt33_,elt37_);
Element elt40_=el(_doc48,TD);
Text txt3_=tx(_doc48,C_P_143_83);
ad(elt40_,txt3_);
ad(elt33_,elt40_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt22_,elt31_);
ad(elt0_,elt22_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_84));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_143_85));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_86));
at(elt2_,attrs2_);
Element elt3_=el(_doc48,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_87));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt4_=el(_doc48,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_143_88));
at(elt4_,attrs4_);
Element elt5_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_143_89));
at(elt5_,attrs5_);
Element elt6_=el(_doc48,PARAM);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_143_90));
at(elt6_,attrs6_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt0_,elt4_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_91));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_92));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc48){
Element elt0_=el(_doc48,H2);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_93));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_94));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_95));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build16(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_96));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_97));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build17(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_98));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_99));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_100));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build18(Element _body,Document _doc48){
Element elt0_=el(_doc48,H2);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_101));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build19(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_102));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build20(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_103));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_104));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,BR);
ad(elt0_,elt2_);
ad(_body,elt0_);
Element elt3_=el(_doc48,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_143_105));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_106));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
Element elt5_=el(_doc48,BR);
ad(elt3_,elt5_);
ad(_body,elt3_);
Element elt6_=el(_doc48,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_143_107));
at(elt6_,attrs4_);
Element elt7_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_143_108));
at(elt7_,attrs5_);
ad(elt6_,elt7_);
Element elt8_=el(_doc48,BR);
ad(elt6_,elt8_);
ad(_body,elt6_);
Element elt9_=el(_doc48,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_143_109));
at(elt9_,attrs6_);
Element elt10_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_143_110));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc48,BR);
ad(elt9_,elt11_);
ad(_body,elt9_);
Element elt12_=el(_doc48,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_143_111));
at(elt12_,attrs8_);
Element elt13_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_143_112));
at(elt13_,attrs9_);
ad(elt12_,elt13_);
Element elt14_=el(_doc48,BR);
ad(elt12_,elt14_);
ad(_body,elt12_);
Element elt15_=el(_doc48,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_143_113));
at(elt15_,attrs10_);
Element elt16_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_143_114));
at(elt16_,attrs11_);
ad(elt15_,elt16_);
Element elt17_=el(_doc48,BR);
ad(elt15_,elt17_);
ad(_body,elt15_);
Element elt18_=el(_doc48,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_143_115));
at(elt18_,attrs12_);
Element elt19_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_143_116));
at(elt19_,attrs13_);
ad(elt18_,elt19_);
Element elt20_=el(_doc48,BR);
ad(elt18_,elt20_);
ad(_body,elt18_);
Element elt21_=el(_doc48,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_143_117));
at(elt21_,attrs14_);
Element elt22_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_143_118));
at(elt22_,attrs15_);
ad(elt21_,elt22_);
Element elt23_=el(_doc48,BR);
ad(elt21_,elt23_);
ad(_body,elt21_);
Element elt24_=el(_doc48,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_143_119));
at(elt24_,attrs16_);
Element elt25_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_143_120));
at(elt25_,attrs17_);
ad(elt24_,elt25_);
Element elt26_=el(_doc48,BR);
ad(elt24_,elt26_);
ad(_body,elt24_);
Element elt27_=el(_doc48,C_IF);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(CONDITION,C_P_143_121));
at(elt27_,attrs18_);
Element elt28_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs19_=al(1);
attrs19_.add(at(VALUE,C_P_143_122));
at(elt28_,attrs19_);
ad(elt27_,elt28_);
Element elt29_=el(_doc48,BR);
ad(elt27_,elt29_);
ad(_body,elt27_);
Element elt30_=el(_doc48,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_143_123));
at(elt30_,attrs20_);
Element elt31_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_143_124));
at(elt31_,attrs21_);
ad(elt30_,elt31_);
Element elt32_=el(_doc48,BR);
ad(elt30_,elt32_);
ad(_body,elt30_);
Element elt33_=el(_doc48,C_IF);
CustList<Attr> attrs22_=al(1);
attrs22_.add(at(CONDITION,C_P_143_125));
at(elt33_,attrs22_);
Element elt34_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(VALUE,C_P_143_126));
at(elt34_,attrs23_);
ad(elt33_,elt34_);
Element elt35_=el(_doc48,BR);
ad(elt33_,elt35_);
ad(_body,elt33_);
Element elt36_=el(_doc48,C_IF);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(CONDITION,C_P_143_127));
at(elt36_,attrs24_);
Element elt37_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(VALUE,C_P_143_128));
at(elt37_,attrs25_);
ad(elt36_,elt37_);
Element elt38_=el(_doc48,BR);
ad(elt36_,elt38_);
ad(_body,elt36_);
Element elt39_=el(_doc48,C_IF);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(CONDITION,C_P_143_129));
at(elt39_,attrs26_);
Element elt40_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(VALUE,C_P_143_130));
at(elt40_,attrs27_);
ad(elt39_,elt40_);
Element elt41_=el(_doc48,BR);
ad(elt39_,elt41_);
ad(_body,elt39_);
Element elt42_=el(_doc48,C_IF);
CustList<Attr> attrs28_=al(1);
attrs28_.add(at(CONDITION,C_P_143_131));
at(elt42_,attrs28_);
Element elt43_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs29_=al(1);
attrs29_.add(at(VALUE,C_P_143_132));
at(elt43_,attrs29_);
ad(elt42_,elt43_);
Element elt44_=el(_doc48,BR);
ad(elt42_,elt44_);
ad(_body,elt42_);
Element elt45_=el(_doc48,C_IF);
CustList<Attr> attrs30_=al(1);
attrs30_.add(at(CONDITION,C_P_143_133));
at(elt45_,attrs30_);
Element elt46_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs31_=al(1);
attrs31_.add(at(VALUE,C_P_143_134));
at(elt46_,attrs31_);
ad(elt45_,elt46_);
Element elt47_=el(_doc48,BR);
ad(elt45_,elt47_);
ad(_body,elt45_);
Element elt48_=el(_doc48,C_IF);
CustList<Attr> attrs32_=al(1);
attrs32_.add(at(CONDITION,C_P_143_135));
at(elt48_,attrs32_);
Element elt49_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs33_=al(1);
attrs33_.add(at(VALUE,C_P_143_136));
at(elt49_,attrs33_);
ad(elt48_,elt49_);
Element elt50_=el(_doc48,BR);
ad(elt48_,elt50_);
ad(_body,elt48_);
Element elt51_=el(_doc48,C_IF);
CustList<Attr> attrs34_=al(1);
attrs34_.add(at(CONDITION,C_P_143_137));
at(elt51_,attrs34_);
Element elt52_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs35_=al(1);
attrs35_.add(at(VALUE,C_P_143_138));
at(elt52_,attrs35_);
ad(elt51_,elt52_);
Element elt53_=el(_doc48,BR);
ad(elt51_,elt53_);
ad(_body,elt51_);
Element elt54_=el(_doc48,C_IF);
CustList<Attr> attrs36_=al(1);
attrs36_.add(at(CONDITION,C_P_143_139));
at(elt54_,attrs36_);
Element elt55_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs37_=al(1);
attrs37_.add(at(VALUE,C_P_143_140));
at(elt55_,attrs37_);
ad(elt54_,elt55_);
Element elt56_=el(_doc48,BR);
ad(elt54_,elt56_);
ad(_body,elt54_);
Element elt57_=el(_doc48,C_IF);
CustList<Attr> attrs38_=al(1);
attrs38_.add(at(CONDITION,C_P_143_141));
at(elt57_,attrs38_);
Element elt58_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs39_=al(1);
attrs39_.add(at(VALUE,C_P_143_142));
at(elt58_,attrs39_);
ad(elt57_,elt58_);
Element elt59_=el(_doc48,BR);
ad(elt57_,elt59_);
ad(_body,elt57_);
Element elt60_=el(_doc48,C_IF);
CustList<Attr> attrs40_=al(1);
attrs40_.add(at(CONDITION,C_P_143_143));
at(elt60_,attrs40_);
Element elt61_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs41_=al(1);
attrs41_.add(at(VALUE,C_P_143_144));
at(elt61_,attrs41_);
ad(elt60_,elt61_);
Element elt62_=el(_doc48,BR);
ad(elt60_,elt62_);
ad(_body,elt60_);
Element elt63_=el(_doc48,C_IF);
CustList<Attr> attrs42_=al(1);
attrs42_.add(at(CONDITION,C_P_143_145));
at(elt63_,attrs42_);
Element elt64_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs43_=al(1);
attrs43_.add(at(VALUE,C_P_143_146));
at(elt64_,attrs43_);
ad(elt63_,elt64_);
Element elt65_=el(_doc48,BR);
ad(elt63_,elt65_);
ad(_body,elt63_);
Element elt66_=el(_doc48,C_IF);
CustList<Attr> attrs44_=al(1);
attrs44_.add(at(CONDITION,C_P_143_147));
at(elt66_,attrs44_);
Element elt67_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs45_=al(1);
attrs45_.add(at(VALUE,C_P_143_148));
at(elt67_,attrs45_);
ad(elt66_,elt67_);
Element elt68_=el(_doc48,BR);
ad(elt66_,elt68_);
ad(_body,elt66_);
Element elt69_=el(_doc48,C_IF);
CustList<Attr> attrs46_=al(1);
attrs46_.add(at(CONDITION,C_P_143_149));
at(elt69_,attrs46_);
Element elt70_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs47_=al(1);
attrs47_.add(at(VALUE,C_P_143_150));
at(elt70_,attrs47_);
ad(elt69_,elt70_);
Element elt71_=el(_doc48,BR);
ad(elt69_,elt71_);
ad(_body,elt69_);
}
static void build22(Element _body,Document _doc48){
Element elt0_=el(_doc48,H2);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_151));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build23(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_152));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_153));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_154));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build24(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_155));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_156));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_157));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build25(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_158));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,BR);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs1_=al(5);
attrs1_.add(at(KEY,C_P_143_159));
attrs1_.add(at(MAP,C_P_143_160));
attrs1_.add(at(VALUE,C_P_143_161));
attrs1_.add(at(KEYCLASSNAME,C_P_143_162));
attrs1_.add(at(VARCLASSNAME,C_P_143_163));
at(elt3_,attrs1_);
Element elt4_=el(_doc48,LI);
Text txt0_=tx(_doc48,C_P_143_164);
ad(elt4_,txt0_);
Element elt5_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(QUOTED,C_P_143_165));
attrs2_.add(at(VALUE,C_P_143_166));
at(elt5_,attrs2_);
Element elt6_=el(_doc48,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_167));
at(elt6_,attrs3_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build27(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_168));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_169));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build28(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_170));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_171));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build29(Element _body,Document _doc48){
Element elt0_=el(_doc48,H2);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_172));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build30(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_173));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_174));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_175));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build31(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_176));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_177));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build33(Element _body,Document _doc48){
Element elt0_=el(_doc48,H1);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_178));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build34(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_179));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_180));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_181));
attrs2_.add(at(VAR,C_P_143_182));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_183));
attrs3_.add(at(HREF,C_P_143_184));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_185);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc48,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build35(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_186));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_187));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_188));
attrs2_.add(at(VAR,C_P_143_189));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_190));
attrs3_.add(at(HREF,C_P_143_191));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_192);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc48,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build36(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_193));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_194));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_195));
attrs2_.add(at(VAR,C_P_143_196));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_197_0));
attrs3_.add(at(HREF,C_P_143_184));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_197);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(elt0_,el(_doc48,BR));
ad(_body,elt0_);
}
static void build37(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_198));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_199));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_200));
attrs2_.add(at(VAR,C_P_143_201));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_202));
attrs3_.add(at(HREF,C_P_143_203));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_204);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc48,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build38(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_205));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_206));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_207));
attrs2_.add(at(VAR,C_P_143_208));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_209));
attrs3_.add(at(HREF,C_P_143_210));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_211);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc48,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build39(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_212));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_213));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,BR);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build40(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_214));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_215));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,UL);
Element elt3_=el(_doc48,C_FOR);
CustList<Attr> attrs2_=al(2);
attrs2_.add(at(LIST,C_P_143_216));
attrs2_.add(at(VAR,C_P_143_217));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,LI);
Element elt5_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_218));
attrs3_.add(at(HREF,C_P_143_219));
at(elt5_,attrs3_);
Text txt0_=tx(_doc48,C_P_143_220);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc48,BR);
ad(elt0_,elt6_);
ad(_body,elt0_);
}
static void build42(Element _body,Document _doc48){
Element elt0_=el(_doc48,H1);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_221));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build43(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_FOR);
CustList<Attr> attrs0_=al(3);
attrs0_.add(at(CLASSNAME,C_P_143_223));
attrs0_.add(at(LIST,C_P_143_224));
attrs0_.add(at(VAR,C_P_143_225));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_143_222));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_143_226));
at(elt2_,attrs2_);
Element elt3_=el(_doc48,H2);
Element elt4_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_227));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc48,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_143_226_0));
at(elt5_,attrs4_);
Element elt6_=el(_doc48,H2);
Element elt7_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_143_230));
at(elt7_,attrs5_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt1_,elt5_);
ad(elt0_,elt1_);
Element elt8_=el(_doc48,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_143_222_0));
at(elt8_,attrs6_);
Element elt9_=el(_doc48,H2);
Element elt10_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_143_232));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
Element elt11_=el(_doc48,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_143_233));
at(elt11_,attrs8_);
Element elt12_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_143_234));
at(elt12_,attrs9_);
ad(elt11_,elt12_);
ad(elt8_,elt11_);
ad(elt0_,elt8_);
Element elt13_=el(_doc48,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_143_235));
at(elt13_,attrs10_);
Element elt14_=el(_doc48,H2);
Element elt15_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_143_236));
at(elt15_,attrs11_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
Element elt17_=el(_doc48,C_IMPORT);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(PAGE,C_P_143_237));
at(elt17_,attrs13_);
Element elt18_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(NAME,C_P_143_238));
at(elt18_,attrs14_);
Element elt19_=el(_doc48,C_CLASS);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(NAME,C_P_143_239));
at(elt19_,attrs15_);
Element elt20_=el(_doc48,C_FIELD);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(PREPARE,C_P_143_240));
at(elt20_,attrs16_);
ad(elt19_,elt20_);
Element elt21_=el(_doc48,C_FIELD);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(PREPARE,C_P_143_241));
at(elt21_,attrs17_);
ad(elt19_,elt21_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt0_,elt17_);
ad(_body,elt0_);
}
static void build44(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_242));
at(elt0_,attrs0_);
ad(elt0_,el(_doc48,HR));
Element elt19_=el(_doc48,H2);
Element elt20_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_143_261));
at(elt20_,attrs17_);
ad(elt19_,elt20_);
ad(elt0_,elt19_);
Element elt21_=el(_doc48,C_FOR);
CustList<Attr> attrs18_=al(5);
attrs18_.add(at(KEY,C_P_143_262));
attrs18_.add(at(MAP,C_P_143_263));
attrs18_.add(at(VALUE,C_P_143_264));
attrs18_.add(at(KEYCLASSNAME,C_P_143_265));
attrs18_.add(at(VARCLASSNAME,C_P_143_266));
at(elt21_,attrs18_);
Element elt22_=el(_doc48,H3);
Text txt0_=tx(_doc48,C_P_143_267);
ad(elt22_,txt0_);
Element elt23_=el(_doc48,A);
CustList<Attr> attrs19_=al(2);
attrs19_.add(at(C_COMMAND,C_P_143_268));
attrs19_.add(at(HREF,C_P_143_269));
at(elt23_,attrs19_);
Text txt1_=tx(_doc48,C_P_143_270);
ad(elt23_,txt1_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
Element elt24_=el(_doc48,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_143_271));
at(elt24_,attrs20_);
Element elt25_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_143_272));
at(elt25_,attrs21_);
ad(elt24_,elt25_);
ad(elt21_,elt24_);
Element elt26_=el(_doc48,BR);
ad(elt21_,elt26_);
Element elt27_=el(_doc48,C_FOR);
CustList<Attr> attrs22_=al(3);
attrs22_.add(at(CLASSNAME,C_P_143_273));
attrs22_.add(at(LIST,C_P_143_274));
attrs22_.add(at(VAR,C_P_143_275));
at(elt27_,attrs22_);
Element elt28_=el(_doc48,C_IMPORT);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(PAGE,C_P_143_276));
at(elt28_,attrs23_);
Element elt29_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(NAME,C_P_143_277));
at(elt29_,attrs24_);
Element elt30_=el(_doc48,C_CLASS);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(NAME,C_P_143_278));
at(elt30_,attrs25_);
Element elt31_=el(_doc48,C_FIELD);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(PREPARE,C_P_143_279));
at(elt31_,attrs26_);
ad(elt30_,elt31_);
Element elt32_=el(_doc48,C_FIELD);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(PREPARE,C_P_143_280));
at(elt32_,attrs27_);
ad(elt30_,elt32_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt21_,elt27_);
Element elt33_=el(_doc48,BR);
ad(elt21_,elt33_);
Element elt34_=el(_doc48,BR);
ad(elt21_,elt34_);
ad(elt0_,elt21_);
ad(_body,elt0_);
}
/*static void build43(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_222));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_FOR);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(CLASSNAME,C_P_143_223));
attrs1_.add(at(LIST,C_P_143_224));
attrs1_.add(at(VAR,C_P_143_225));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_143_226));
at(elt2_,attrs2_);
Element elt3_=el(_doc48,H2);
Element elt4_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_227));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc48,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_143_228));
at(elt5_,attrs4_);
Element elt6_=el(_doc48,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_143_229));
at(elt6_,attrs5_);
Element elt7_=el(_doc48,H2);
Element elt8_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_143_230));
at(elt8_,attrs6_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
Element elt9_=el(_doc48,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_143_231));
at(elt9_,attrs7_);
Element elt10_=el(_doc48,H2);
Element elt11_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_143_232));
at(elt11_,attrs8_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
Element elt12_=el(_doc48,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_143_233));
at(elt12_,attrs9_);
Element elt13_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_143_234));
at(elt13_,attrs10_);
ad(elt12_,elt13_);
ad(elt9_,elt12_);
ad(elt5_,elt9_);
ad(elt1_,elt5_);
Element elt14_=el(_doc48,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_143_235));
at(elt14_,attrs11_);
Element elt15_=el(_doc48,H2);
Element elt16_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_143_236));
at(elt16_,attrs12_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt1_,elt14_);
Element elt17_=el(_doc48,C_IMPORT);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(PAGE,C_P_143_237));
at(elt17_,attrs13_);
Element elt18_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(NAME,C_P_143_238));
at(elt18_,attrs14_);
Element elt19_=el(_doc48,C_CLASS);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(NAME,C_P_143_239));
at(elt19_,attrs15_);
Element elt20_=el(_doc48,C_FIELD);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(PREPARE,C_P_143_240));
at(elt20_,attrs16_);
ad(elt19_,elt20_);
Element elt21_=el(_doc48,C_FIELD);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(PREPARE,C_P_143_241));
at(elt21_,attrs17_);
ad(elt19_,elt21_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt1_,elt17_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build44(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_242));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_FOR);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(CLASSNAME,C_P_143_243));
attrs1_.add(at(LIST,C_P_143_244));
attrs1_.add(at(VAR,C_P_143_245));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_143_246));
at(elt2_,attrs2_);
Element elt3_=el(_doc48,H2);
Element elt4_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_247));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc48,C_IMPORT);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(PAGE,C_P_143_248));
at(elt5_,attrs4_);
Element elt6_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(NAME,C_P_143_249));
at(elt6_,attrs5_);
Element elt7_=el(_doc48,C_CLASS);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(NAME,C_P_143_250));
at(elt7_,attrs6_);
Element elt8_=el(_doc48,C_FIELD);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(PREPARE,C_P_143_251));
at(elt8_,attrs7_);
ad(elt7_,elt8_);
Element elt9_=el(_doc48,C_FIELD);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(PREPARE,C_P_143_252));
at(elt9_,attrs8_);
ad(elt7_,elt9_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
Element elt10_=el(_doc48,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_143_253));
at(elt10_,attrs9_);
Element elt11_=el(_doc48,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_143_254));
at(elt11_,attrs10_);
Element elt12_=el(_doc48,H2);
Element elt13_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_143_255));
at(elt13_,attrs11_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
Element elt14_=el(_doc48,C_IMPORT);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(PAGE,C_P_143_256));
at(elt14_,attrs12_);
Element elt15_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(NAME,C_P_143_257));
at(elt15_,attrs13_);
Element elt16_=el(_doc48,C_CLASS);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(NAME,C_P_143_258));
at(elt16_,attrs14_);
Element elt17_=el(_doc48,C_FIELD);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(PREPARE,C_P_143_259));
at(elt17_,attrs15_);
ad(elt16_,elt17_);
Element elt18_=el(_doc48,C_FIELD);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(PREPARE,C_P_143_260));
at(elt18_,attrs16_);
ad(elt16_,elt18_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt1_,elt10_);
ad(elt0_,elt1_);
Element elt19_=el(_doc48,H2);
Element elt20_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_143_261));
at(elt20_,attrs17_);
ad(elt19_,elt20_);
ad(elt0_,elt19_);
Element elt21_=el(_doc48,C_FOR);
CustList<Attr> attrs18_=al(5);
attrs18_.add(at(KEY,C_P_143_262));
attrs18_.add(at(MAP,C_P_143_263));
attrs18_.add(at(VALUE,C_P_143_264));
attrs18_.add(at(KEYCLASSNAME,C_P_143_265));
attrs18_.add(at(VARCLASSNAME,C_P_143_266));
at(elt21_,attrs18_);
Element elt22_=el(_doc48,H3);
Text txt0_=tx(_doc48,C_P_143_267);
ad(elt22_,txt0_);
Element elt23_=el(_doc48,A);
CustList<Attr> attrs19_=al(2);
attrs19_.add(at(C_COMMAND,C_P_143_268));
attrs19_.add(at(HREF,C_P_143_269));
at(elt23_,attrs19_);
Text txt1_=tx(_doc48,C_P_143_270);
ad(elt23_,txt1_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
Element elt24_=el(_doc48,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_143_271));
at(elt24_,attrs20_);
Element elt25_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_143_272));
at(elt25_,attrs21_);
ad(elt24_,elt25_);
ad(elt21_,elt24_);
Element elt26_=el(_doc48,BR);
ad(elt21_,elt26_);
Element elt27_=el(_doc48,C_FOR);
CustList<Attr> attrs22_=al(3);
attrs22_.add(at(CLASSNAME,C_P_143_273));
attrs22_.add(at(LIST,C_P_143_274));
attrs22_.add(at(VAR,C_P_143_275));
at(elt27_,attrs22_);
Element elt28_=el(_doc48,C_IMPORT);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(PAGE,C_P_143_276));
at(elt28_,attrs23_);
Element elt29_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(NAME,C_P_143_277));
at(elt29_,attrs24_);
Element elt30_=el(_doc48,C_CLASS);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(NAME,C_P_143_278));
at(elt30_,attrs25_);
Element elt31_=el(_doc48,C_FIELD);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(PREPARE,C_P_143_279));
at(elt31_,attrs26_);
ad(elt30_,elt31_);
Element elt32_=el(_doc48,C_FIELD);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(PREPARE,C_P_143_280));
at(elt32_,attrs27_);
ad(elt30_,elt32_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt21_,elt27_);
Element elt33_=el(_doc48,BR);
ad(elt21_,elt33_);
Element elt34_=el(_doc48,BR);
ad(elt21_,elt34_);
ad(elt0_,elt21_);
Element elt35_=el(_doc48,C_FOR);
CustList<Attr> attrs28_=al(3);
attrs28_.add(at(CLASSNAME,C_P_143_281));
attrs28_.add(at(LIST,C_P_143_282));
attrs28_.add(at(VAR,C_P_143_283));
at(elt35_,attrs28_);
Element elt36_=el(_doc48,C_IF);
CustList<Attr> attrs29_=al(1);
attrs29_.add(at(CONDITION,C_P_143_284));
at(elt36_,attrs29_);
Element elt37_=el(_doc48,H2);
Element elt38_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs30_=al(1);
attrs30_.add(at(VALUE,C_P_143_285));
at(elt38_,attrs30_);
ad(elt37_,elt38_);
ad(elt36_,elt37_);
Element elt39_=el(_doc48,C_IMPORT);
CustList<Attr> attrs31_=al(1);
attrs31_.add(at(PAGE,C_P_143_286));
at(elt39_,attrs31_);
Element elt40_=el(_doc48,C_PACKAGE);
CustList<Attr> attrs32_=al(1);
attrs32_.add(at(NAME,C_P_143_287));
at(elt40_,attrs32_);
Element elt41_=el(_doc48,C_CLASS);
CustList<Attr> attrs33_=al(1);
attrs33_.add(at(NAME,C_P_143_288));
at(elt41_,attrs33_);
Element elt42_=el(_doc48,C_FIELD);
CustList<Attr> attrs34_=al(1);
attrs34_.add(at(PREPARE,C_P_143_289));
at(elt42_,attrs34_);
ad(elt41_,elt42_);
Element elt43_=el(_doc48,C_FIELD);
CustList<Attr> attrs35_=al(1);
attrs35_.add(at(PREPARE,C_P_143_290));
at(elt43_,attrs35_);
ad(elt41_,elt43_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt36_,elt39_);
ad(elt35_,elt36_);
ad(elt0_,elt35_);
ad(_body,elt0_);
}*/
static void build45(Element _body,Document _doc48){
Element elt0_=el(_doc48,H1);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_143_291));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build46(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_292));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_293));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build47(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_294));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_295));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_296));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build48(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_297));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,C_IF);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(CONDITION,C_P_143_298));
at(elt1_,attrs1_);
Element elt2_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_143_299));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc48,A);
CustList<Attr> attrs3_=al(2);
attrs3_.add(at(C_COMMAND,C_P_143_300));
attrs3_.add(at(HREF,C_P_143_301));
at(elt3_,attrs3_);
Element elt4_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_143_302));
at(elt4_,attrs4_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt5_=el(_doc48,BR);
ad(elt0_,elt5_);
Element elt6_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_143_303));
at(elt6_,attrs5_);
Element elt7_=el(_doc48,PARAM);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_143_304));
at(elt7_,attrs6_);
ad(elt6_,elt7_);
ad(elt0_,elt6_);
Element elt8_=el(_doc48,TABLE);
Element elt9_=el(_doc48,THEAD);
Element elt10_=el(_doc48,TR);
Element elt11_=el(_doc48,TH);
Element elt12_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_143_305));
at(elt12_,attrs7_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
Element elt13_=el(_doc48,TH);
Element elt14_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_143_306));
at(elt14_,attrs8_);
ad(elt13_,elt14_);
ad(elt10_,elt13_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
Element elt15_=el(_doc48,TBODY);
Element elt16_=el(_doc48,C_FOR);
CustList<Attr> attrs9_=al(5);
attrs9_.add(at(KEY,C_P_143_307));
attrs9_.add(at(MAP,C_P_143_308));
attrs9_.add(at(VALUE,C_P_143_309));
attrs9_.add(at(KEYCLASSNAME,C_P_143_310));
attrs9_.add(at(VARCLASSNAME,C_P_143_311));
at(elt16_,attrs9_);
Element elt17_=el(_doc48,TR);
Element elt18_=el(_doc48,TD);
Text txt0_=tx(_doc48,C_P_143_312);
ad(elt18_,txt0_);
ad(elt17_,elt18_);
Element elt19_=el(_doc48,TD);
Text txt1_=tx(_doc48,C_P_143_313);
ad(elt19_,txt1_);
ad(elt17_,elt19_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt8_,elt15_);
ad(elt0_,elt8_);
Element elt20_=el(_doc48,BR);
ad(elt0_,elt20_);
ad(_body,elt0_);
}
static void build49(Element _body,Document _doc48){
Element elt0_=el(_doc48,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_143_314));
at(elt0_,attrs0_);
Element elt1_=el(_doc48,H1);
Element elt2_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_143_315));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc48,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_143_316));
at(elt3_,attrs2_);
Element elt4_=el(_doc48,H2);
Element elt5_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_143_317));
at(elt5_,attrs3_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt6_=el(_doc48,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_143_318));
attrs4_.add(at(MAP,C_P_143_319));
attrs4_.add(at(VALUE,C_P_143_320));
attrs4_.add(at(KEYCLASSNAME,C_P_143_321));
attrs4_.add(at(VARCLASSNAME,C_P_143_322));
at(elt6_,attrs4_);
Element elt7_=el(_doc48,H3);
Element elt8_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_143_323));
at(elt8_,attrs5_);
Element elt9_=el(_doc48,PARAM);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_143_324));
at(elt9_,attrs6_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
Element elt10_=el(_doc48,UL);
Element elt11_=el(_doc48,C_FOR);
CustList<Attr> attrs7_=al(2);
attrs7_.add(at(LIST,C_P_143_325));
attrs7_.add(at(VAR,C_P_143_326));
at(elt11_,attrs7_);
Element elt12_=el(_doc48,LI);
Element elt13_=el(_doc48,A);
CustList<Attr> attrs8_=al(2);
attrs8_.add(at(C_COMMAND,C_P_143_327));
attrs8_.add(at(HREF,C_P_143_328));
at(elt13_,attrs8_);
Text txt0_=tx(_doc48,C_P_143_329);
ad(elt13_,txt0_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt6_,elt10_);
Element elt14_=el(_doc48,BR);
ad(elt6_,elt14_);
ad(elt3_,elt6_);
ad(elt0_,elt3_);
Element elt15_=el(_doc48,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_143_330));
at(elt15_,attrs9_);
Element elt16_=el(_doc48,H2);
Element elt17_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_143_331));
at(elt17_,attrs10_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
Element elt18_=el(_doc48,UL);
Element elt19_=el(_doc48,C_FOR);
CustList<Attr> attrs11_=al(2);
attrs11_.add(at(LIST,C_P_143_332));
attrs11_.add(at(VAR,C_P_143_333));
at(elt19_,attrs11_);
Element elt20_=el(_doc48,LI);
Element elt21_=el(_doc48,A);
CustList<Attr> attrs12_=al(2);
attrs12_.add(at(C_COMMAND,C_P_143_334));
attrs12_.add(at(HREF,C_P_143_335));
at(elt21_,attrs12_);
Text txt1_=tx(_doc48,C_P_143_336);
ad(elt21_,txt1_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt15_,elt18_);
ad(elt0_,elt15_);
Element elt22_=el(_doc48,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_143_337));
at(elt22_,attrs13_);
Element elt23_=el(_doc48,H2);
Element elt24_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_143_338));
at(elt24_,attrs14_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
Element elt25_=el(_doc48,UL);
Element elt26_=el(_doc48,C_FOR);
CustList<Attr> attrs15_=al(2);
attrs15_.add(at(LIST,C_P_143_339));
attrs15_.add(at(VAR,C_P_143_340));
at(elt26_,attrs15_);
Element elt27_=el(_doc48,LI);
Element elt28_=el(_doc48,A);
CustList<Attr> attrs16_=al(2);
attrs16_.add(at(C_COMMAND,C_P_143_341));
attrs16_.add(at(HREF,C_P_143_342));
at(elt28_,attrs16_);
Text txt2_=tx(_doc48,C_P_143_343);
ad(elt28_,txt2_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt22_,elt25_);
ad(elt0_,elt22_);
Element elt29_=el(_doc48,C_IF);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(CONDITION,C_P_143_344));
at(elt29_,attrs17_);
Element elt30_=el(_doc48,H2);
Element elt31_=el(_doc48,C_MESSAGE);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(VALUE,C_P_143_345));
at(elt31_,attrs18_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
Element elt32_=el(_doc48,UL);
Element elt33_=el(_doc48,C_FOR);
CustList<Attr> attrs19_=al(2);
attrs19_.add(at(LIST,C_P_143_346));
attrs19_.add(at(VAR,C_P_143_347));
at(elt33_,attrs19_);
Element elt34_=el(_doc48,LI);
Element elt35_=el(_doc48,A);
CustList<Attr> attrs20_=al(2);
attrs20_.add(at(C_COMMAND,C_P_143_348));
attrs20_.add(at(HREF,C_P_143_349));
at(elt35_,attrs20_);
Text txt3_=tx(_doc48,C_P_143_350);
ad(elt35_,txt3_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt29_,elt32_);
ad(elt0_,elt29_);
ad(_body,elt0_);
}
}
