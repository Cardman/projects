package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataMovesEffectsEff extends PageCardsCommon{
private static final String C_P_144_0="javahtml";
private static final String C_P_144_1="eff";
private static final String C_P_144_2=PkScriptPages.REN_ADD_WEB_CSS_MOVES_CSS;
private static final String C_P_144_3="stylesheet";
private static final String C_P_144_4="text/css";
private static final String C_P_144_5="msg_eff,targets";
private static final String C_P_144_6="isAdjAdv()";
private static final String C_P_144_7="msg_eff,targets_ADJ_ADV";
private static final String C_P_144_8="isAdjMult()";
private static final String C_P_144_9="msg_eff,targets_ADJ_MULT";
private static final String C_P_144_10="isAdjUniq()";
private static final String C_P_144_11="msg_eff,targets_ADJ_UNIQ";
private static final String C_P_144_12="isAllie()";
private static final String C_P_144_13="msg_eff,targets_ALLIE";
private static final String C_P_144_14="isAllies()";
private static final String C_P_144_15="msg_eff,targets_ALLIES";
private static final String C_P_144_16="isAnyFoe()";
private static final String C_P_144_17="msg_eff,targets_ANY_FOE";
private static final String C_P_144_18="isAutreUniq()";
private static final String C_P_144_19="msg_eff,targets_AUTRE_UNIQ";
private static final String C_P_144_20="isGlobale()";
private static final String C_P_144_21="msg_eff,targets_GLOBALE";
private static final String C_P_144_22="isLanceur()";
private static final String C_P_144_23="msg_eff,targets_LANCEUR";
private static final String C_P_144_24="isPseudoGlobale()";
private static final String C_P_144_25="msg_eff,targets_PSEUDO_GLOBALE";
private static final String C_P_144_26="isTousAdv()";
private static final String C_P_144_27="msg_eff,targets_TOUS_ADV";
private static final String C_P_144_28="isUniqueImporte()";
private static final String C_P_144_29="msg_eff,targets_UNIQUE_IMPORTE";
private static final String C_P_144_30="!reasons.isEmpty()";
private static final String C_P_144_31="msg_eff,reasons";
private static final String C_P_144_32="reasons";
private static final String C_P_144_33="r";
private static final String C_P_144_34="java.lang.String";
private static final String C_P_144_35="{r}";
private static final String C_P_144_36="c";
private static final String C_P_144_37="mapVarsFail";
private static final String C_P_144_38="r";
private static final String C_P_144_39="java.lang.String";
private static final String C_P_144_40="java.lang.String";
private static final String C_P_144_41="{c} :";
private static final String C_P_144_42="";
private static final String C_P_144_43="msg_eff,formula";
private static final String C_P_144_44="r";
private static final String C_P_144_45="needSuccessFirstEffect";
private static final String C_P_144_46="msg_eff,need_sucess";
private PageDataMovesEffectsEff(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc49){
Element elt0_=el(_doc49,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_144_0));
attrs0_.add(at(C_BEAN,C_P_144_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc49,HEAD);
Element elt2_=el(_doc49,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_144_2));
attrs1_.add(at(REL,C_P_144_3));
attrs1_.add(at(TYPE,C_P_144_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc49,BODY);
build0(elt3_,_doc49);
build1(elt3_,_doc49);
build2(elt3_,_doc49);
build3(elt3_,_doc49);
build4(elt3_,_doc49);
ad(elt0_,elt3_);
_doc49.appendChild(elt0_);
}
static void build0(Element _body,Document _doc49){
Element elt0_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_144_5));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc49){
Element elt0_=el(_doc49,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_144_6));
at(elt0_,attrs0_);
Element elt1_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_144_7));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc49,BR);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc49){
Element elt0_=el(_doc49,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_144_8));
at(elt0_,attrs0_);
Element elt1_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_144_9));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc49,BR);
ad(elt0_,elt2_);
ad(_body,elt0_);
Element elt3_=el(_doc49,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_144_10));
at(elt3_,attrs2_);
Element elt4_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_144_11));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
Element elt5_=el(_doc49,BR);
ad(elt3_,elt5_);
ad(_body,elt3_);
Element elt6_=el(_doc49,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_144_12));
at(elt6_,attrs4_);
Element elt7_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_144_13));
at(elt7_,attrs5_);
ad(elt6_,elt7_);
Element elt8_=el(_doc49,BR);
ad(elt6_,elt8_);
ad(_body,elt6_);
Element elt9_=el(_doc49,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_144_14));
at(elt9_,attrs6_);
Element elt10_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_144_15));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc49,BR);
ad(elt9_,elt11_);
ad(_body,elt9_);
Element elt12_=el(_doc49,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_144_16));
at(elt12_,attrs8_);
Element elt13_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_144_17));
at(elt13_,attrs9_);
ad(elt12_,elt13_);
Element elt14_=el(_doc49,BR);
ad(elt12_,elt14_);
ad(_body,elt12_);
Element elt15_=el(_doc49,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_144_18));
at(elt15_,attrs10_);
Element elt16_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_144_19));
at(elt16_,attrs11_);
ad(elt15_,elt16_);
Element elt17_=el(_doc49,BR);
ad(elt15_,elt17_);
ad(_body,elt15_);
Element elt18_=el(_doc49,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_144_20));
at(elt18_,attrs12_);
Element elt19_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_144_21));
at(elt19_,attrs13_);
ad(elt18_,elt19_);
Element elt20_=el(_doc49,BR);
ad(elt18_,elt20_);
ad(_body,elt18_);
Element elt21_=el(_doc49,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_144_22));
at(elt21_,attrs14_);
Element elt22_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_144_23));
at(elt22_,attrs15_);
ad(elt21_,elt22_);
Element elt23_=el(_doc49,BR);
ad(elt21_,elt23_);
ad(_body,elt21_);
Element elt24_=el(_doc49,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_144_24));
at(elt24_,attrs16_);
Element elt25_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_144_25));
at(elt25_,attrs17_);
ad(elt24_,elt25_);
Element elt26_=el(_doc49,BR);
ad(elt24_,elt26_);
ad(_body,elt24_);
Element elt27_=el(_doc49,C_IF);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(CONDITION,C_P_144_26));
at(elt27_,attrs18_);
Element elt28_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs19_=al(1);
attrs19_.add(at(VALUE,C_P_144_27));
at(elt28_,attrs19_);
ad(elt27_,elt28_);
Element elt29_=el(_doc49,BR);
ad(elt27_,elt29_);
ad(_body,elt27_);
Element elt30_=el(_doc49,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_144_28));
at(elt30_,attrs20_);
Element elt31_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_144_29));
at(elt31_,attrs21_);
ad(elt30_,elt31_);
Element elt32_=el(_doc49,BR);
ad(elt30_,elt32_);
ad(_body,elt30_);
}
static void build3(Element _body,Document _doc49){
Element elt0_=el(_doc49,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_144_30));
at(elt0_,attrs0_);
Element elt1_=el(_doc49,P);
Element elt2_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_144_31));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
Element elt3_=el(_doc49,UL);
Element elt4_=el(_doc49,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_144_32));
attrs2_.add(at(VAR,C_P_144_33));
attrs2_.add(at(CLASSNAME,C_P_144_34));
at(elt4_,attrs2_);
Element elt5_=el(_doc49,LI);
Text txt0_=tx(_doc49,C_P_144_35);
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt1_,elt3_);
Element elt6_=el(_doc49,BR);
ad(elt1_,elt6_);
Element elt7_=el(_doc49,UL);
Element elt8_=el(_doc49,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_144_36));
attrs3_.add(at(MAP,C_P_144_37));
attrs3_.add(at(VALUE,C_P_144_38));
attrs3_.add(at(KEYCLASSNAME,C_P_144_39));
attrs3_.add(at(VARCLASSNAME,C_P_144_40));
at(elt8_,attrs3_);
Element elt9_=el(_doc49,LI);
Text txt1_=tx(_doc49,C_P_144_41);
ad(elt9_,txt1_);
Element elt10_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(QUOTED,C_P_144_42));
attrs4_.add(at(VALUE,C_P_144_43));
at(elt10_,attrs4_);
Element elt11_=el(_doc49,PARAM);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_144_44));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt1_,elt7_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc49){
Element elt0_=el(_doc49,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_144_45));
at(elt0_,attrs0_);
Element elt1_=el(_doc49,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_144_46));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
}
