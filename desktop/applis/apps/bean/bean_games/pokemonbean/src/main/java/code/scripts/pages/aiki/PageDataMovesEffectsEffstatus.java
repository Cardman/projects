package code.scripts.pages.aiki;
import aiki.beans.moves.effects.AikiBeansMovesEffectsStd;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataMovesEffectsEffstatus extends PageCardsCommon{
private static final String C_P_167_0="javahtml";
private static final String C_P_167_1=AikiBeansMovesEffectsStd.BEAN_EFFECT_STATUS;
private static final String C_P_167_2=PkScriptPages.REN_ADD_WEB_CSS_MOVES_CSS;
private static final String C_P_167_3="stylesheet";
private static final String C_P_167_4="text/css";
private static final String C_P_167_5="msg_effstatus,effect";
private static final String C_P_167_6="effectBean";
private static final String C_P_167_7="aiki.beans.moves.effects";
private static final String C_P_167_8="EffectBean";
private static final String C_P_167_9="$intern.index=index";
private static final String C_P_167_10="$intern.move=move";
private static final String C_P_167_11="!lawStatus.isEmpty()";
private static final String C_P_167_12="msg_effstatus,law_status";
private static final String C_P_167_13="msg_effstatus,status";
private static final String C_P_167_14="msg_effstatus,fail";
private static final String C_P_167_15="msg_effstatus,rate_event";
private static final String C_P_167_16="c";
private static final String C_P_167_17="lawStatus";
private static final String C_P_167_18="r";
private static final String C_P_167_19="java.lang.Object";
private static final String C_P_167_20="r";
private static final String C_P_167_21="isStatus(([c]))";
private static final String C_P_167_22="$clickLink({index},{([c])})";
private static final String C_P_167_23="";
private static final String C_P_167_24="{getTrLink(([c]))}";
private static final String C_P_167_25="!isStatus(([c]))";
private static final String C_P_167_26="msg_effstatus,other_status";
private static final String C_P_167_27="{getFail(([c]))}";
private static final String C_P_167_28="{r}";
private static final String C_P_167_29="!mapVarsStatus.isEmpty()";
private static final String C_P_167_30="k";
private static final String C_P_167_31="mapVarsStatus";
private static final String C_P_167_32="v";
private static final String C_P_167_33="java.lang.String";
private static final String C_P_167_34="java.lang.String";
private static final String C_P_167_35="{k} :";
private static final String C_P_167_36="";
private static final String C_P_167_37="msg_effstatus,formula";
private static final String C_P_167_38="v";
private static final String C_P_167_39="!deletedStatus.isEmpty()";
private static final String C_P_167_40="msg_effstatus,deleted_status";
private static final String C_P_167_41="deletedStatus";
private static final String C_P_167_42="s";
private static final String C_P_167_43="$clickLinkDeleted({index},{([s])})";
private static final String C_P_167_44="";
private static final String C_P_167_45="{getTrLinkDeleted(([s]))}";
private static final String C_P_167_46="koUserHealSubst";
private static final String C_P_167_47="msg_effstatus,ko_user";
private static final String C_P_167_48="statusFromUser";
private static final String C_P_167_49="msg_effstatus,forward";
private PageDataMovesEffectsEffstatus(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc72){
Element elt0_=el(_doc72,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_167_0));
attrs0_.add(at(C_BEAN,C_P_167_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc72,HEAD);
Element elt2_=el(_doc72,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_167_2));
attrs1_.add(at(REL,C_P_167_3));
attrs1_.add(at(TYPE,C_P_167_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc72,BODY);
build0(elt3_,_doc72);
ad(elt0_,elt3_);
_doc72.appendChild(elt0_);
}
static void build0(Element _body,Document _doc72){
Element elt0_=el(_doc72,P);
Element elt1_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_167_5));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc72,C_IMPORT);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(PAGE,C_P_167_6));
at(elt2_,attrs1_);
Element elt3_=el(_doc72,C_PACKAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(NAME,C_P_167_7));
at(elt3_,attrs2_);
Element elt4_=el(_doc72,C_CLASS);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(NAME,C_P_167_8));
at(elt4_,attrs3_);
Element elt5_=el(_doc72,C_FIELD);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(PREPARE,C_P_167_9));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc72,C_FIELD);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(PREPARE,C_P_167_10));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc72,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_167_11));
at(elt7_,attrs6_);
Element elt8_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_167_12));
at(elt8_,attrs7_);
ad(elt7_,elt8_);
Element elt9_=el(_doc72,TABLE);
Element elt10_=el(_doc72,THEAD);
Element elt11_=el(_doc72,TR);
Element elt12_=el(_doc72,TH);
Element elt13_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_167_13));
at(elt13_,attrs8_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
Element elt14_=el(_doc72,TH);
Element elt15_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_167_14));
at(elt15_,attrs9_);
ad(elt14_,elt15_);
ad(elt11_,elt14_);
Element elt16_=el(_doc72,TH);
Element elt17_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_167_15));
at(elt17_,attrs10_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
Element elt18_=el(_doc72,TBODY);
Element elt19_=el(_doc72,C_FOR);
CustList<Attr> attrs11_=al(5);
attrs11_.add(at(KEY,C_P_167_16));
attrs11_.add(at(MAP,C_P_167_17));
attrs11_.add(at(VALUE,C_P_167_18));
attrs11_.add(at(KEYCLASSNAME,C_P_167_19));
attrs11_.add(at(VARCLASSNAME,C_P_167_20));
at(elt19_,attrs11_);
Element elt20_=el(_doc72,TR);
Element elt21_=el(_doc72,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_167_21));
at(elt21_,attrs12_);
Element elt22_=el(_doc72,TD);
Element elt23_=el(_doc72,A);
CustList<Attr> attrs13_=al(2);
attrs13_.add(at(C_COMMAND,C_P_167_22));
attrs13_.add(at(HREF,C_P_167_23));
at(elt23_,attrs13_);
Text txt0_=tx(_doc72,C_P_167_24);
ad(elt23_,txt0_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
Element elt24_=el(_doc72,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_167_25));
at(elt24_,attrs14_);
Element elt25_=el(_doc72,TD);
Element elt26_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_167_26));
at(elt26_,attrs15_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt20_,elt24_);
Element elt27_=el(_doc72,TD);
Text txt1_=tx(_doc72,C_P_167_27);
ad(elt27_,txt1_);
ad(elt20_,elt27_);
Element elt28_=el(_doc72,TD);
Text txt2_=tx(_doc72,C_P_167_28);
ad(elt28_,txt2_);
ad(elt20_,elt28_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt9_,elt18_);
ad(elt7_,elt9_);
Element elt29_=el(_doc72,BR);
ad(elt7_,elt29_);
Element elt30_=el(_doc72,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_167_29));
at(elt30_,attrs16_);
Element elt31_=el(_doc72,UL);
Element elt32_=el(_doc72,C_FOR);
CustList<Attr> attrs17_=al(5);
attrs17_.add(at(KEY,C_P_167_30));
attrs17_.add(at(MAP,C_P_167_31));
attrs17_.add(at(VALUE,C_P_167_32));
attrs17_.add(at(KEYCLASSNAME,C_P_167_33));
attrs17_.add(at(VARCLASSNAME,C_P_167_34));
at(elt32_,attrs17_);
Element elt33_=el(_doc72,LI);
Text txt3_=tx(_doc72,C_P_167_35);
ad(elt33_,txt3_);
Element elt34_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs18_=al(2);
attrs18_.add(at(QUOTED,C_P_167_36));
attrs18_.add(at(VALUE,C_P_167_37));
at(elt34_,attrs18_);
Element elt35_=el(_doc72,PARAM);
CustList<Attr> attrs19_=al(1);
attrs19_.add(at(VALUE,C_P_167_38));
at(elt35_,attrs19_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt7_,elt30_);
Element elt36_=el(_doc72,BR);
ad(elt7_,elt36_);
ad(elt0_,elt7_);
Element elt37_=el(_doc72,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_167_39));
at(elt37_,attrs20_);
Element elt38_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_167_40));
at(elt38_,attrs21_);
ad(elt37_,elt38_);
Element elt39_=el(_doc72,UL);
Element elt40_=el(_doc72,C_FOR);
CustList<Attr> attrs22_=al(2);
attrs22_.add(at(LIST,C_P_167_41));
attrs22_.add(at(VAR,C_P_167_42));
at(elt40_,attrs22_);
Element elt41_=el(_doc72,LI);
Element elt42_=el(_doc72,A);
CustList<Attr> attrs23_=al(2);
attrs23_.add(at(C_COMMAND,C_P_167_43));
attrs23_.add(at(HREF,C_P_167_44));
at(elt42_,attrs23_);
Text txt4_=tx(_doc72,C_P_167_45);
ad(elt42_,txt4_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt37_,elt39_);
Element elt43_=el(_doc72,BR);
ad(elt37_,elt43_);
ad(elt0_,elt37_);
Element elt44_=el(_doc72,C_IF);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(CONDITION,C_P_167_46));
at(elt44_,attrs24_);
Element elt45_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(VALUE,C_P_167_47));
at(elt45_,attrs25_);
ad(elt44_,elt45_);
ad(elt0_,elt44_);
Element elt46_=el(_doc72,C_IF);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(CONDITION,C_P_167_48));
at(elt46_,attrs26_);
Element elt47_=el(_doc72,C_MESSAGE);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(VALUE,C_P_167_49));
at(elt47_,attrs27_);
ad(elt46_,elt47_);
ad(elt0_,elt46_);
ad(_body,elt0_);
}
}
