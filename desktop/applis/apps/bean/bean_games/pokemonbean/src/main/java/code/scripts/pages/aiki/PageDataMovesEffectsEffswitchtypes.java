package code.scripts.pages.aiki;
import aiki.beans.moves.effects.AikiBeansMovesEffectsStd;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataMovesEffectsEffswitchtypes extends PageCardsCommon{
private static final String C_P_173_0="javahtml";
private static final String C_P_173_1=AikiBeansMovesEffectsStd.BEAN_EFFECT_SWITCHTYPES;
private static final String C_P_173_2=PkScriptPages.REN_ADD_WEB_CSS_MOVES_CSS;
private static final String C_P_173_3="stylesheet";
private static final String C_P_173_4="text/css";
private static final String C_P_173_5="msg_effswitchtypes,effect";
private static final String C_P_173_6="effectBean";
private static final String C_P_173_7="aiki.beans.moves.effects";
private static final String C_P_173_8="EffectBean";
private static final String C_P_173_9="$intern.index=index";
private static final String C_P_173_10="$intern.move=move";
private static final String C_P_173_11="isResTypes()";
private static final String C_P_173_12="msg_effswitchtypes,res_moves";
private static final String C_P_173_13="isUserTypes()";
private static final String C_P_173_14="msg_effswitchtypes,user_moves";
private static final String C_P_173_15="!isConstTypes()";
private static final String C_P_173_16="!chgtTypeByEnv.isEmpty()";
private static final String C_P_173_17="msg_effswitchtypes,envir";
private static final String C_P_173_18="msg_effswitchtypes,envir_env";
private static final String C_P_173_19="msg_effswitchtypes,envir_type";
private static final String C_P_173_20="e";
private static final String C_P_173_21="chgtTypeByEnv";
private static final String C_P_173_22="t";
private static final String C_P_173_23="java.lang.Object";
private static final String C_P_173_24="java.lang.String";
private static final String C_P_173_25="{getTrEnv(([e]))}";
private static final String C_P_173_26="{t}";
private static final String C_P_173_27="!globalMoves.isEmpty()";
private static final String C_P_173_28="msg_effswitchtypes,envir_env_exc";
private static final String C_P_173_29="globalMoves";
private static final String C_P_173_30="m";
private static final String C_P_173_31="$clickGlobalMoveFctEnv({([m])})";
private static final String C_P_173_32="";
private static final String C_P_173_33="{getTrGlobalMoveFctEnv(([m]))}";
private static final String C_P_173_34="!addedTypes.isEmpty()";
private static final String C_P_173_35="msg_effswitchtypes,added_types";
private static final String C_P_173_36="addedTypes";
private static final String C_P_173_37="t";
private static final String C_P_173_38="{getTrAddedType(([t]))}";
private static final String C_P_173_39="addedTypes.isEmpty()";
private static final String C_P_173_40="giveToTarget()";
private static final String C_P_173_41="msg_effswitchtypes,affect_types_not_const_target";
private static final String C_P_173_42="giveToUser()";
private static final String C_P_173_43="msg_effswitchtypes,affect_types_not_const_user";
private static final String C_P_173_44="switchTypes()";
private static final String C_P_173_45="msg_effswitchtypes,switch_types";
private static final String C_P_173_46="giveConst()";
private static final String C_P_173_47="msg_effswitchtypes,affect_types";
private static final String C_P_173_48="constTypes";
private static final String C_P_173_49="t";
private static final String C_P_173_50="{getTrConstType(([t]))}";
private PageDataMovesEffectsEffswitchtypes(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc78){
Element elt0_=el(_doc78,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_173_0));
attrs0_.add(at(C_BEAN,C_P_173_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc78,HEAD);
Element elt2_=el(_doc78,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_173_2));
attrs1_.add(at(REL,C_P_173_3));
attrs1_.add(at(TYPE,C_P_173_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc78,BODY);
build0(elt3_,_doc78);
ad(elt0_,elt3_);
_doc78.appendChild(elt0_);
}
static void build0(Element _body,Document _doc78){
Element elt0_=el(_doc78,P);
Element elt1_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_173_5));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc78,C_IMPORT);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(PAGE,C_P_173_6));
at(elt2_,attrs1_);
Element elt3_=el(_doc78,C_PACKAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(NAME,C_P_173_7));
at(elt3_,attrs2_);
Element elt4_=el(_doc78,C_CLASS);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(NAME,C_P_173_8));
at(elt4_,attrs3_);
Element elt5_=el(_doc78,C_FIELD);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(PREPARE,C_P_173_9));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc78,C_FIELD);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(PREPARE,C_P_173_10));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc78,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_173_11));
at(elt7_,attrs6_);
Element elt8_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_173_12));
at(elt8_,attrs7_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
Element elt9_=el(_doc78,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_173_13));
at(elt9_,attrs8_);
Element elt10_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_173_14));
at(elt10_,attrs9_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
Element elt11_=el(_doc78,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_173_15));
at(elt11_,attrs10_);
Element elt12_=el(_doc78,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_173_16));
at(elt12_,attrs11_);
Element elt13_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_173_17));
at(elt13_,attrs12_);
ad(elt12_,elt13_);
Element elt14_=el(_doc78,TABLE);
Element elt15_=el(_doc78,THEAD);
Element elt16_=el(_doc78,TR);
Element elt17_=el(_doc78,TH);
Element elt18_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_173_18));
at(elt18_,attrs13_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
Element elt19_=el(_doc78,TH);
Element elt20_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_173_19));
at(elt20_,attrs14_);
ad(elt19_,elt20_);
ad(elt16_,elt19_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
Element elt21_=el(_doc78,TBODY);
Element elt22_=el(_doc78,C_FOR);
CustList<Attr> attrs15_=al(5);
attrs15_.add(at(KEY,C_P_173_20));
attrs15_.add(at(MAP,C_P_173_21));
attrs15_.add(at(VALUE,C_P_173_22));
attrs15_.add(at(KEYCLASSNAME,C_P_173_23));
attrs15_.add(at(VARCLASSNAME,C_P_173_24));
at(elt22_,attrs15_);
Element elt23_=el(_doc78,TR);
Element elt24_=el(_doc78,TD);
Text txt0_=tx(_doc78,C_P_173_25);
ad(elt24_,txt0_);
ad(elt23_,elt24_);
Element elt25_=el(_doc78,TD);
Text txt1_=tx(_doc78,C_P_173_26);
ad(elt25_,txt1_);
ad(elt23_,elt25_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt14_,elt21_);
ad(elt12_,elt14_);
Element elt26_=el(_doc78,BR);
ad(elt12_,elt26_);
Element elt27_=el(_doc78,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_173_27));
at(elt27_,attrs16_);
Element elt28_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_173_28));
at(elt28_,attrs17_);
ad(elt27_,elt28_);
Element elt29_=el(_doc78,UL);
Element elt30_=el(_doc78,C_FOR);
CustList<Attr> attrs18_=al(2);
attrs18_.add(at(LIST,C_P_173_29));
attrs18_.add(at(VAR,C_P_173_30));
at(elt30_,attrs18_);
Element elt31_=el(_doc78,LI);
Element elt32_=el(_doc78,A);
CustList<Attr> attrs19_=al(2);
attrs19_.add(at(C_COMMAND,C_P_173_31));
attrs19_.add(at(HREF,C_P_173_32));
at(elt32_,attrs19_);
Text txt2_=tx(_doc78,C_P_173_33);
ad(elt32_,txt2_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt27_,elt29_);
Element elt33_=el(_doc78,BR);
ad(elt27_,elt33_);
ad(elt12_,elt27_);
ad(elt11_,elt12_);
Element elt34_=el(_doc78,C_IF);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(CONDITION,C_P_173_34));
at(elt34_,attrs20_);
Element elt35_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(VALUE,C_P_173_35));
at(elt35_,attrs21_);
ad(elt34_,elt35_);
Element elt36_=el(_doc78,UL);
Element elt37_=el(_doc78,C_FOR);
CustList<Attr> attrs22_=al(2);
attrs22_.add(at(LIST,C_P_173_36));
attrs22_.add(at(VAR,C_P_173_37));
at(elt37_,attrs22_);
Element elt38_=el(_doc78,LI);
Text txt3_=tx(_doc78,C_P_173_38);
ad(elt38_,txt3_);
ad(elt37_,elt38_);
ad(elt36_,elt37_);
ad(elt34_,elt36_);
Element elt39_=el(_doc78,BR);
ad(elt34_,elt39_);
ad(elt11_,elt34_);
Element elt40_=el(_doc78,C_IF);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(CONDITION,C_P_173_39));
at(elt40_,attrs23_);
Element elt41_=el(_doc78,C_IF);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(CONDITION,C_P_173_40));
at(elt41_,attrs24_);
Element elt42_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(VALUE,C_P_173_41));
at(elt42_,attrs25_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
Element elt43_=el(_doc78,C_IF);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(CONDITION,C_P_173_42));
at(elt43_,attrs26_);
Element elt44_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(VALUE,C_P_173_43));
at(elt44_,attrs27_);
ad(elt43_,elt44_);
ad(elt40_,elt43_);
Element elt45_=el(_doc78,C_IF);
CustList<Attr> attrs28_=al(1);
attrs28_.add(at(CONDITION,C_P_173_44));
at(elt45_,attrs28_);
Element elt46_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs29_=al(1);
attrs29_.add(at(VALUE,C_P_173_45));
at(elt46_,attrs29_);
ad(elt45_,elt46_);
ad(elt40_,elt45_);
Element elt47_=el(_doc78,C_IF);
CustList<Attr> attrs30_=al(1);
attrs30_.add(at(CONDITION,C_P_173_46));
at(elt47_,attrs30_);
Element elt48_=el(_doc78,C_MESSAGE);
CustList<Attr> attrs31_=al(1);
attrs31_.add(at(VALUE,C_P_173_47));
at(elt48_,attrs31_);
ad(elt47_,elt48_);
Element elt49_=el(_doc78,UL);
Element elt50_=el(_doc78,C_FOR);
CustList<Attr> attrs32_=al(2);
attrs32_.add(at(LIST,C_P_173_48));
attrs32_.add(at(VAR,C_P_173_49));
at(elt50_,attrs32_);
Element elt51_=el(_doc78,LI);
Text txt4_=tx(_doc78,C_P_173_50);
ad(elt51_,txt4_);
ad(elt50_,elt51_);
ad(elt49_,elt50_);
ad(elt47_,elt49_);
Element elt52_=el(_doc78,BR);
ad(elt47_,elt52_);
ad(elt40_,elt47_);
ad(elt11_,elt40_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
}
