package code.scripts.pages.aiki;
import aiki.beans.moves.AikiBeansMovesStd;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataMovesMoves extends PageCardsCommon{
private static final String C_P_180_0="javahtml";
private static final String C_P_180_1= AikiBeansMovesStd.BEAN_MOVES;
private static final String C_P_180_2="msg_moves,title";
private static final String C_P_180_3=PkScriptPages.REN_ADD_WEB_CSS_MOVES_CSS;
private static final String C_P_180_4="stylesheet";
private static final String C_P_180_5="text/css";
private static final String C_P_180_6=GO_TO_IND;
private static final String C_P_180_7="";
private static final String C_P_180_8="msg_moves,index";
private static final String C_P_180_9="";
private static final String C_P_180_10="$search";
private static final String C_P_180_11="post";
private static final String C_P_180_12="searching";
private static final String C_P_180_13="msg_moves,content_name";
private static final String C_P_180_14="typedName";
private static final String C_P_180_15="typedName";
private static final String C_P_180_16="text";
private static final String C_P_180_17="msg_moves,cat";
private static final String C_P_180_18="";
private static final String C_P_180_19="categories";
private static final String C_P_180_20="category";
private static final String C_P_180_21="";
private static final String C_P_180_22="category";
private static final String C_P_180_23="msg_moves,content_type";
private static final String C_P_180_24="typedType";
private static final String C_P_180_25="typedType";
private static final String C_P_180_26="text";
private static final String C_P_180_27="msg_moves,content_type_whole";
private static final String C_P_180_28="wholeWord";
private static final String C_P_180_29="wholeWord";
private static final String C_P_180_30="checkbox";
private static final String C_P_180_31="msg_moves,accuracy";
private static final String C_P_180_32="minAccuracy";
private static final String C_P_180_33="minAccuracy";
private static final String C_P_180_34="text";
private static final String C_P_180_35="maxAccuracy";
private static final String C_P_180_36="maxAccuracy";
private static final String C_P_180_37="text";
private static final String C_P_180_38="msg_moves,const_power";
private static final String C_P_180_39="minPower";
private static final String C_P_180_40="minPower";
private static final String C_P_180_41="text";
private static final String C_P_180_42="maxPower";
private static final String C_P_180_43="maxPower";
private static final String C_P_180_44="text";
private static final String C_P_180_45_0="msg_moves,learnt";
private static final String C_P_180_45_1="";
private static final String C_P_180_45_2="booleans";
private static final String C_P_180_45_3="learnt";
private static final String C_P_180_45_4="";
private static final String C_P_180_45_5="learnt";
private static final String C_P_180_46="msg_moves,ok";
private static final String C_P_180_47="msg_moves,moves";
private static final String C_P_180_48="msg_moves,name_h";
private static final String C_P_180_49="msg_moves,pp_h";
private static final String C_P_180_50="msg_moves,types_h";
private static final String C_P_180_51="msg_moves,cat_h";
private static final String C_P_180_52="msg_moves,damag_h";
private static final String C_P_180_53="msg_moves,direc_h";
private static final String C_P_180_54="msg_moves,prio_h";
private static final String C_P_180_55="msg_moves,accuracy";
private static final String C_P_180_56="msg_moves,const_power";
private static final String C_P_180_57="aiki.beans.facade.dto.MoveLine";
private static final String C_P_180_58="moves";
private static final String C_P_180_59="d";
private static final String C_P_179_5="$clickLink({([d])})";
private static final String C_P_179_6="";
private static final String C_P_179_7="{d.displayName}";
private static final String C_P_179_8="{d.pp}";
private static final String C_P_179_9="d.getTypes()";
private static final String C_P_179_10="t";
private static final String C_P_179_11="java.lang.String";
private static final String C_P_179_12="{t} -";
private static final String C_P_179_13="{d.category}";
private static final String C_P_179_14="d.isDamageMove()";
private static final String C_P_179_15="msg_moves,damaging";
private static final String C_P_179_16="msg_moves,status";
private static final String C_P_179_17="!d.isDamageMove()";
private static final String C_P_179_18="msg_moves,status_indirect";
private static final String C_P_179_19="d.isDirect()";
private static final String C_P_179_20="msg_moves,damaging_direct";
private static final String C_P_179_21="msg_moves,damaging_indirect";
private static final String C_P_179_22="{d.priority}";
private static final String C_P_179_23="{d.accuracy}";
private static final String C_P_179_24="{d.power}";
//private static final String C_P_180_60="movesBean";
//private static final String C_P_180_61="aiki.beans.moves";
//private static final String C_P_180_62="MoveLineBean";
//private static final String C_P_180_63="$intern.index=([d])";
//private static final String C_P_180_64="$intern.moveLine=d";
//private static final String C_P_180_65="$intern.sortedMoves=sortedMoves";
private static final String C_P_180_66=GO_TO_IND;
private static final String C_P_180_67="";
private static final String C_P_180_68="msg_moves,index";
private PageDataMovesMoves(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc85){
Element elt0_=el(_doc85,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_180_0));
attrs0_.add(at(C_BEAN,C_P_180_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc85,HEAD);
Element elt2_=el(_doc85,TITLE);
Element elt3_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_180_2));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc85,LINK);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(HREF,C_P_180_3));
attrs2_.add(at(REL,C_P_180_4));
attrs2_.add(at(TYPE,C_P_180_5));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc85,BODY);
build0(elt5_,_doc85);
build1(elt5_,_doc85);
build2(elt5_,_doc85);
build3(elt5_,_doc85);
br(elt5_,_doc85);
build5(elt5_,_doc85);
ad(elt0_,elt5_);
_doc85.appendChild(elt0_);
}
static void build0(Element _body,Document _doc85){
Element elt0_=el(_doc85,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_180_6));
attrs0_.add(at(HREF,C_P_180_7));
at(elt0_,attrs0_);
Element elt1_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_180_8));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc85){
Element elt0_=el(_doc85,FORM);
CustList<Attr> attrs0_=al(4);
attrs0_.add(at(ACTION,C_P_180_9));
attrs0_.add(at(C_COMMAND,C_P_180_10));
attrs0_.add(at(METHOD,C_P_180_11));
attrs0_.add(at(NAME,C_P_180_12));
at(elt0_,attrs0_);
Element elt1_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_180_13));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc85,INPUT);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(C_VARVALUE,C_P_180_14));
attrs2_.add(at(NAME,C_P_180_15));
attrs2_.add(at(TYPE,C_P_180_16));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc85,BR);
ad(elt0_,elt3_);
Element elt4_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_180_17));
at(elt4_,attrs3_);
ad(elt0_,elt4_);
Element elt5_=el(_doc85,C_SELECT);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(DEFAULT,C_P_180_18));
attrs4_.add(at(MAP,C_P_180_19));
attrs4_.add(at(NAME,C_P_180_20));
attrs4_.add(at(UPDATE,C_P_180_21));
attrs4_.add(at(VARVALUE,C_P_180_22));
at(elt5_,attrs4_);
ad(elt0_,elt5_);
Element elt6_=el(_doc85,BR);
ad(elt0_,elt6_);
Element elt7_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_180_23));
at(elt7_,attrs5_);
ad(elt0_,elt7_);
Element elt8_=el(_doc85,INPUT);
CustList<Attr> attrs6_=al(3);
attrs6_.add(at(C_VARVALUE,C_P_180_24));
attrs6_.add(at(NAME,C_P_180_25));
attrs6_.add(at(TYPE,C_P_180_26));
at(elt8_,attrs6_);
ad(elt0_,elt8_);
Element elt9_=el(_doc85,BR);
ad(elt0_,elt9_);
Element elt10_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_180_27));
at(elt10_,attrs7_);
ad(elt0_,elt10_);
Element elt11_=el(_doc85,INPUT);
CustList<Attr> attrs8_=al(3);
attrs8_.add(at(C_VARVALUE,C_P_180_28));
attrs8_.add(at(NAME,C_P_180_29));
attrs8_.add(at(TYPE,C_P_180_30));
at(elt11_,attrs8_);
ad(elt0_,elt11_);
Element elt12_=el(_doc85,BR);
ad(elt0_,elt12_);
Element elt13_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_180_31));
at(elt13_,attrs9_);
ad(elt0_,elt13_);
Element elt14_=el(_doc85,INPUT);
CustList<Attr> attrs10_=al(3);
attrs10_.add(at(C_VARVALUE,C_P_180_32));
attrs10_.add(at(NAME,C_P_180_33));
attrs10_.add(at(TYPE,C_P_180_34));
at(elt14_,attrs10_);
ad(elt0_,elt14_);
Element elt15_=el(_doc85,INPUT);
CustList<Attr> attrs11_=al(3);
attrs11_.add(at(C_VARVALUE,C_P_180_35));
attrs11_.add(at(NAME,C_P_180_36));
attrs11_.add(at(TYPE,C_P_180_37));
at(elt15_,attrs11_);
ad(elt0_,elt15_);
Element elt16_=el(_doc85,BR);
ad(elt0_,elt16_);
Element elt17_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_180_38));
at(elt17_,attrs12_);
ad(elt0_,elt17_);
Element elt18_=el(_doc85,INPUT);
CustList<Attr> attrs13_=al(3);
attrs13_.add(at(C_VARVALUE,C_P_180_39));
attrs13_.add(at(NAME,C_P_180_40));
attrs13_.add(at(TYPE,C_P_180_41));
at(elt18_,attrs13_);
ad(elt0_,elt18_);
Element elt19_=el(_doc85,INPUT);
CustList<Attr> attrs14_=al(3);
attrs14_.add(at(C_VARVALUE,C_P_180_42));
attrs14_.add(at(NAME,C_P_180_43));
attrs14_.add(at(TYPE,C_P_180_44));
at(elt19_,attrs14_);
ad(elt0_,elt19_);
Element elt20_=el(_doc85,BR);
ad(elt0_,elt20_);
Element elt14l_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs10l_=al(1);
attrs10l_.add(at(VALUE,C_P_180_45_0));
at(elt14l_,attrs10l_);
ad(elt0_,elt14l_);
Element elt15l_=el(_doc85,C_SELECT);
CustList<Attr> attrs11l_=al(5);
attrs11l_.add(at(DEFAULT,C_P_180_45_1));
attrs11l_.add(at(MAP,C_P_180_45_2));
attrs11l_.add(at(NAME,C_P_180_45_3));
attrs11l_.add(at(UPDATE,C_P_180_45_4));
attrs11l_.add(at(VARVALUE,C_P_180_45_5));
at(elt15l_,attrs11l_);
ad(elt0_,elt15l_);
ad(elt0_,el(_doc85,BR));
Element elt21_=el(_doc85,C_SUBMIT);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(MESSAGE,C_P_180_46));
at(elt21_,attrs15_);
ad(elt0_,elt21_);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc85){
Element elt0_=el(_doc85,BR);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc85){
Element elt0_=el(_doc85,TABLE);
Element elt1_=el(_doc85,CAPTION);
Element elt2_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_180_47));
at(elt2_,attrs0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc85,THEAD);
Element elt4_=el(_doc85,TR);
Element elt5_=el(_doc85,TH);
Element elt6_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_180_48));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc85,TH);
Element elt8_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_180_49));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
Element elt9_=el(_doc85,TH);
Element elt10_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_180_50));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt4_,elt9_);
Element elt11_=el(_doc85,TH);
Element elt12_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_180_51));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt4_,elt11_);
Element elt13_=el(_doc85,TH);
Element elt14_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_180_52));
at(elt14_,attrs5_);
ad(elt13_,elt14_);
ad(elt4_,elt13_);
Element elt15_=el(_doc85,TH);
Element elt16_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_180_53));
at(elt16_,attrs6_);
ad(elt15_,elt16_);
ad(elt4_,elt15_);
Element elt17_=el(_doc85,TH);
Element elt18_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_180_54));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt4_,elt17_);
Element elt19_=el(_doc85,TH);
Element elt20_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_180_55));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt4_,elt19_);
Element elt21_=el(_doc85,TH);
Element elt22_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_180_56));
at(elt22_,attrs9_);
ad(elt21_,elt22_);
ad(elt4_,elt21_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt23_=el(_doc85,TBODY);
Element elt24_=el(_doc85,C_FOR);
CustList<Attr> attrs10_=al(3);
attrs10_.add(at(CLASSNAME,C_P_180_57));
attrs10_.add(at(LIST,C_P_180_58));
attrs10_.add(at(VAR,C_P_180_59));
at(elt24_,attrs10_);
//Element elt25_=el(_doc85,C_IMPORT);
//CustList<Attr> attrs11_=al(1);
//attrs11_.add(at(PAGE,C_P_180_60));
//at(elt25_,attrs11_);
//Element elt26_=el(_doc85,C_PACKAGE);
//CustList<Attr> attrs12_=al(1);
//attrs12_.add(at(NAME,C_P_180_61));
//at(elt26_,attrs12_);
//Element elt27_=el(_doc85,C_CLASS);
//CustList<Attr> attrs13_=al(1);
//attrs13_.add(at(NAME,C_P_180_62));
//at(elt27_,attrs13_);
//Element elt28_=el(_doc85,C_FIELD);
//CustList<Attr> attrs14_=al(1);
//attrs14_.add(at(PREPARE,C_P_180_63));
//at(elt28_,attrs14_);
//ad(elt27_,elt28_);
//Element elt29_=el(_doc85,C_FIELD);
//CustList<Attr> attrs15_=al(1);
//attrs15_.add(at(PREPARE,C_P_180_64));
//at(elt29_,attrs15_);
//ad(elt27_,elt29_);
//Element elt30_=el(_doc85,C_FIELD);
//CustList<Attr> attrs16_=al(1);
//attrs16_.add(at(PREPARE,C_P_180_65));
//at(elt30_,attrs16_);
//ad(elt27_,elt30_);
//ad(elt26_,elt27_);
//ad(elt25_,elt26_);
//ad(elt24_,elt25_);
build0i(elt24_,_doc85);
ad(elt23_,elt24_);
ad(elt0_,elt23_);
ad(_body,elt0_);
}
static void build0i(Element _body,Document _doc84){
Element elt0_=el(_doc84,TR);
Element elt1_=el(_doc84,TD);
Element elt2_=el(_doc84,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_179_5));
attrs0_.add(at(HREF,C_P_179_6));
at(elt2_,attrs0_);
Text txt0_=tx(_doc84,C_P_179_7);
ad(elt2_,txt0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc84,TD);
Text txt1_=tx(_doc84,C_P_179_8);
ad(elt3_,txt1_);
ad(elt0_,elt3_);
Element elt4_=el(_doc84,TD);
Element elt5_=el(_doc84,C_FOR);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(LIST,C_P_179_9));
attrs1_.add(at(VAR,C_P_179_10));
attrs1_.add(at(CLASSNAME,C_P_179_11));
at(elt5_,attrs1_);
Text txt2_=tx(_doc84,C_P_179_12);
ad(elt5_,txt2_);
ad(elt4_,elt5_);
ad(elt0_,elt4_);
Element elt6_=el(_doc84,TD);
Text txt3_=tx(_doc84,C_P_179_13);
ad(elt6_,txt3_);
ad(elt0_,elt6_);
Element elt7_=el(_doc84,TD);
Element elt8_=el(_doc84,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_179_14));
at(elt8_,attrs2_);
Element elt9_=el(_doc84,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_179_15));
at(elt9_,attrs3_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
Element elt10_=el(_doc84,C_ELSE);
Element elt11_=el(_doc84,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_179_16));
at(elt11_,attrs4_);
ad(elt10_,elt11_);
ad(elt7_,elt10_);
ad(elt0_,elt7_);
Element elt12_=el(_doc84,TD);
Element elt13_=el(_doc84,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_179_17));
at(elt13_,attrs5_);
Element elt14_=el(_doc84,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_179_18));
at(elt14_,attrs6_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt15_=el(_doc84,C_ELSEIF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_179_19));
at(elt15_,attrs7_);
Element elt16_=el(_doc84,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_179_20));
at(elt16_,attrs8_);
ad(elt15_,elt16_);
ad(elt12_,elt15_);
Element elt17_=el(_doc84,C_ELSE);
Element elt18_=el(_doc84,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_179_21));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt12_,elt17_);
ad(elt0_,elt12_);
Element elt19_=el(_doc84,TD);
Text txt4_=tx(_doc84,C_P_179_22);
ad(elt19_,txt4_);
ad(elt0_,elt19_);
Element elt20_=el(_doc84,TD);
Text txt5_=tx(_doc84,C_P_179_23);
ad(elt20_,txt5_);
ad(elt0_,elt20_);
Element elt21_=el(_doc84,TD);
Text txt6_=tx(_doc84,C_P_179_24);
ad(elt21_,txt6_);
ad(elt0_,elt21_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc85){
Element elt0_=el(_doc85,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_180_66));
attrs0_.add(at(HREF,C_P_180_67));
at(elt0_,attrs0_);
Element elt1_=el(_doc85,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_180_68));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
}
