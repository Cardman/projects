package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageDataSolutionSolution extends PageCardsCommon{
private static final String C_P_203_0="javahtml";
private static final String C_P_203_1="solution";
private static final String C_P_203_2=PkScriptPages.REN_ADD_WEB_CSS_POKEDEX_CSS;
private static final String C_P_203_3="stylesheet";
private static final String C_P_203_4="text/css";
private static final String C_P_203_5="msg_solution,title";
private static final String C_P_203_6=GO_TO_IND;
private static final String C_P_203_7="";
private static final String C_P_203_8="msg_solution,index";
private static final String C_P_203_9="aiki.beans.facade.solution.dto.StepDto";
private static final String C_P_203_10="steps";
private static final String C_P_203_11="s";
private static final String C_P_203_12="{([s])}";
private static final String C_P_203_13="i";
private static final String C_P_203_14="s.getPokemon()";
private static final String C_P_203_15="g";
private static final String C_P_203_16="java.lang.Object";
private static final String C_P_203_17="ls";
private static final String C_P_203_18="{getPlace(([s]),([i]))}";
private static final String C_P_203_19="msg_solution,image";
private static final String C_P_203_20="msg_solution,name";
private static final String C_P_203_21="msg_solution,gender";
private static final String C_P_203_22="aiki.beans.facade.solution.dto.WildPokemonDto";
private static final String C_P_203_23="g";
private static final String C_P_203_24="l";
private static final String C_P_203_25="l.image";
private static final String C_P_203_26="{l.name}";
private static final String C_P_203_27="{l.gender}";
private static final String C_P_203_28="!s.getNames().isEmpty()";
private static final String C_P_203_29="aiki.beans.facade.solution.dto.PlaceTrainerDto";
private static final String C_P_203_30="s.getNames()";
private static final String C_P_203_31="i";
private static final String C_P_203_32="{i.trainer} - {i.place}";
private PageDataSolutionSolution(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc108){
Element elt0_=el(_doc108,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_203_0));
attrs0_.add(at(C_BEAN,C_P_203_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc108,HEAD);
Element elt2_=el(_doc108,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_203_2));
attrs1_.add(at(REL,C_P_203_3));
attrs1_.add(at(TYPE,C_P_203_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
Element elt3_=el(_doc108,TITLE);
Element elt4_=el(_doc108,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_203_5));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt1_,elt3_);
ad(elt0_,elt1_);
Element elt5_=el(_doc108,BODY);
build0(elt5_,_doc108);
build1(elt5_,_doc108);
ad(elt0_,elt5_);
_doc108.appendChild(elt0_);
}
static void build0(Element _body,Document _doc108){
Element elt0_=el(_doc108,A);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_COMMAND,C_P_203_6));
attrs0_.add(at(HREF,C_P_203_7));
at(elt0_,attrs0_);
Element elt1_=el(_doc108,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_203_8));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc108){
Element elt0_=el(_doc108,C_FOR);
CustList<Attr> attrs0_=al(3);
attrs0_.add(at(CLASSNAME,C_P_203_9));
attrs0_.add(at(LIST,C_P_203_10));
attrs0_.add(at(VAR,C_P_203_11));
at(elt0_,attrs0_);
Text txt0_=tx(_doc108,C_P_203_12);
ad(elt0_,txt0_);
Element elt1_=el(_doc108,BR);
ad(elt0_,elt1_);
Element elt2_=el(_doc108,P);
Element elt3_=el(_doc108,C_FOR);
CustList<Attr> attrs1_=al(5);
attrs1_.add(at(KEY,C_P_203_13));
attrs1_.add(at(MAP,C_P_203_14));
attrs1_.add(at(VALUE,C_P_203_15));
attrs1_.add(at(KEYCLASSNAME,C_P_203_16));
attrs1_.add(at(VARCLASSNAME,C_P_203_17));
at(elt3_,attrs1_);
Element elt4_=el(_doc108,TABLE);
Element elt5_=el(_doc108,CAPTION);
Element elt6_=el(_doc108,B);
Text txt1_=tx(_doc108,C_P_203_18);
ad(elt6_,txt1_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc108,THEAD);
Element elt8_=el(_doc108,TR);
Element elt9_=el(_doc108,TH);
Element elt10_=el(_doc108,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_203_19));
at(elt10_,attrs2_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
Element elt11_=el(_doc108,TH);
Element elt12_=el(_doc108,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_203_20));
at(elt12_,attrs3_);
ad(elt11_,elt12_);
ad(elt8_,elt11_);
Element elt13_=el(_doc108,TH);
Element elt14_=el(_doc108,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_203_21));
at(elt14_,attrs4_);
ad(elt13_,elt14_);
ad(elt8_,elt13_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
Element elt15_=el(_doc108,TBODY);
Element elt16_=el(_doc108,C_FOR);
CustList<Attr> attrs5_=al(3);
attrs5_.add(at(CLASSNAME,C_P_203_22));
attrs5_.add(at(LIST,C_P_203_23));
attrs5_.add(at(VAR,C_P_203_24));
at(elt16_,attrs5_);
Element elt17_=el(_doc108,TR);
Element elt18_=el(_doc108,TD);
Element elt19_=el(_doc108,C_IMG);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(SRC,C_P_203_25));
at(elt19_,attrs6_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
Element elt20_=el(_doc108,TD);
Text txt2_=tx(_doc108,C_P_203_26);
ad(elt20_,txt2_);
ad(elt17_,elt20_);
Element elt21_=el(_doc108,TD);
Text txt3_=tx(_doc108,C_P_203_27);
ad(elt21_,txt3_);
ad(elt17_,elt21_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt4_,elt15_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt22_=el(_doc108,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_203_28));
at(elt22_,attrs7_);
Element elt23_=el(_doc108,UL);
Element elt24_=el(_doc108,C_FOR);
CustList<Attr> attrs8_=al(3);
attrs8_.add(at(CLASSNAME,C_P_203_29));
attrs8_.add(at(LIST,C_P_203_30));
attrs8_.add(at(VAR,C_P_203_31));
at(elt24_,attrs8_);
Element elt25_=el(_doc108,LI);
Text txt4_=tx(_doc108,C_P_203_32);
ad(elt25_,txt4_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt2_,elt22_);
ad(elt0_,elt2_);
Element elt26_=el(_doc108,BR);
ad(elt0_,elt26_);
Element elt27_=el(_doc108,BR);
ad(elt0_,elt27_);
ad(_body,elt0_);
}
}
