package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageFightFight extends PageCardsCommon{
private static final String C_P_206_0="javahtml";
private static final String C_P_206_1="fight";
private static final String C_P_206_2="msg_fight,title_fight";
private static final String C_P_206_3=PkScriptPages.REN_ADD_WEB_FIGHT_CSS_FIGHT_CSS;
private static final String C_P_206_4="stylesheet";
private static final String C_P_206_5="text/css";
private static final String C_P_206_6="$f()";
private static final String C_P_206_7="msg_fight,refresh";
private static final String C_P_206_8="$d()";
private static final String C_P_206_9="msg_fight,go_detail";
private static final String C_P_206_10="$clickPlayer()";
private static final String C_P_206_11="msg_fight,yours";
private static final String C_P_206_12="$clickFoe()";
private static final String C_P_206_13="msg_fight,foes";
private static final String C_P_206_14="msg_fight,mult";
private static final String C_P_206_15="mult";
private static final String C_P_206_16="msg_fight,nb_rounds";
private static final String C_P_206_17="nbRounds";
private static final String C_P_206_18="msg_fight,nb_flee_attempts";
private static final String C_P_206_19="nbFleeAttempt";
private static final String C_P_206_20="msg_fight,win_money";
private static final String C_P_206_21="winningMoney";
private static final String C_P_206_22="msg_fight,enbaled_moves";
private static final String C_P_206_23="msg_fight,enbaled_moves_key";
private static final String C_P_206_24="msg_fight,enbaled_moves_still";
private static final String C_P_206_25="msg_fight,enbaled_moves_enabled";
private static final String C_P_206_26="msg_fight,enbaled_moves_nb_round";
private static final String C_P_206_27="m";
private static final String C_P_206_28="enabledMoves";
private static final String C_P_206_29="a";
private static final String C_P_206_30="java.lang.String";
private static final String C_P_206_31="aiki.game.fight.ActivityOfMove";
private static final String C_P_206_32="{m}";
private static final String C_P_206_33="isStillEnabled(([m]))";
private static final String C_P_206_34="a.isEnabled()";
private static final String C_P_206_35="msg_fight,enbaled_moves_enabled_y";
private static final String C_P_206_36="!a.isEnabled()";
private static final String C_P_206_37="msg_fight,enbaled_moves_enabled_n";
private static final String C_P_206_38="!isStillEnabled(([m]))";
private static final String C_P_206_39="msg_fight,enbaled_moves_no";
private static final String C_P_206_40="a.isEnabled()";
private static final String C_P_206_41="msg_fight,enbaled_moves_enabled_y";
private static final String C_P_206_42="!a.isEnabled()";
private static final String C_P_206_43="msg_fight,enbaled_moves_enabled_n";
private static final String C_P_206_44="a.isIncrementCount()";
private static final String C_P_206_45="{a.getNbTurn()}";
private static final String C_P_206_46="!a.isIncrementCount()";
private static final String C_P_206_47="msg_fight,enbaled_moves_no";
private PageFightFight(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc111){
Element elt0_=el(_doc111,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_206_0));
attrs0_.add(at(C_BEAN,C_P_206_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,HEAD);
Element elt2_=el(_doc111,TITLE);
Element elt3_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_2));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc111,LINK);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(HREF,C_P_206_3));
attrs2_.add(at(REL,C_P_206_4));
attrs2_.add(at(TYPE,C_P_206_5));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc111,BODY);
build0(elt5_,_doc111);
build1(elt5_,_doc111);
build2(elt5_,_doc111);
build3(elt5_,_doc111);
build4(elt5_,_doc111);
build5(elt5_,_doc111);
build6(elt5_,_doc111);
build7(elt5_,_doc111);
build8(elt5_,_doc111);
build9(elt5_,_doc111);
ad(elt0_,elt5_);
_doc111.appendChild(elt0_);
}
static void build0(Element _body,Document _doc111){
Element elt0_=el(_doc111,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_206_6));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_7));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc111,BR);
ad(_body,elt2_);
}
static void build1(Element _body,Document _doc111){
Element elt0_=el(_doc111,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_206_8));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_9));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc111,BR);
ad(_body,elt2_);
}
static void build2(Element _body,Document _doc111){
Element elt0_=el(_doc111,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_206_10));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_11));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc111,BR);
ad(_body,elt2_);
}
static void build3(Element _body,Document _doc111){
Element elt0_=el(_doc111,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_206_12));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_13));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc111,BR);
ad(_body,elt2_);
}
static void build4(Element _body,Document _doc111){
Element elt0_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_14));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_15));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc111){
Element elt0_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_16));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_17));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc111){
Element elt0_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_18));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_19));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc111){
Element elt0_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_20));
at(elt0_,attrs0_);
Element elt1_=el(_doc111,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_21));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc111){
Element elt0_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_22));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc111){
Element elt0_=el(_doc111,TABLE);
Element elt1_=el(_doc111,THEAD);
Element elt2_=el(_doc111,TR);
Element elt3_=el(_doc111,TH);
Element elt4_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_206_23));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc111,TH);
Element elt6_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_206_24));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc111,TH);
Element elt8_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_206_25));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc111,TH);
Element elt10_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_206_26));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc111,TBODY);
Element elt12_=el(_doc111,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_206_27));
attrs4_.add(at(MAP,C_P_206_28));
attrs4_.add(at(VALUE,C_P_206_29));
attrs4_.add(at(KEYCLASSNAME,C_P_206_30));
attrs4_.add(at(VARCLASSNAME,C_P_206_31));
at(elt12_,attrs4_);
Element elt13_=el(_doc111,TR);
Element elt14_=el(_doc111,TD);
Text txt0_=tx(_doc111,C_P_206_32);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc111,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_206_33));
at(elt15_,attrs5_);
Element elt16_=el(_doc111,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_206_34));
at(elt16_,attrs6_);
Element elt17_=el(_doc111,TD);
Element elt18_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_206_35));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
Element elt19_=el(_doc111,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_206_36));
at(elt19_,attrs8_);
Element elt20_=el(_doc111,TD);
Element elt21_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_206_37));
at(elt21_,attrs9_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt15_,elt19_);
ad(elt13_,elt15_);
Element elt22_=el(_doc111,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_206_38));
at(elt22_,attrs10_);
Element elt23_=el(_doc111,TD);
Element elt24_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_206_39));
at(elt24_,attrs11_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt13_,elt22_);
Element elt25_=el(_doc111,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_206_40));
at(elt25_,attrs12_);
Element elt26_=el(_doc111,TD);
Element elt27_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_206_41));
at(elt27_,attrs13_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt13_,elt25_);
Element elt28_=el(_doc111,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_206_42));
at(elt28_,attrs14_);
Element elt29_=el(_doc111,TD);
Element elt30_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_P_206_43));
at(elt30_,attrs15_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt13_,elt28_);
Element elt31_=el(_doc111,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_206_44));
at(elt31_,attrs16_);
Element elt32_=el(_doc111,TD);
Text txt1_=tx(_doc111,C_P_206_45);
ad(elt32_,txt1_);
ad(elt31_,elt32_);
ad(elt13_,elt31_);
Element elt33_=el(_doc111,C_IF);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(CONDITION,C_P_206_46));
at(elt33_,attrs17_);
Element elt34_=el(_doc111,TD);
Element elt35_=el(_doc111,C_MESSAGE);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(VALUE,C_P_206_47));
at(elt35_,attrs18_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt13_,elt33_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
}
