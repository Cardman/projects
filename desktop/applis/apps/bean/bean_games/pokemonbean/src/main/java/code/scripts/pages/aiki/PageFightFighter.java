package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageFightFighter extends PageCardsCommon{
private static final String C_P_208_0="javahtml";
private static final String C_P_208_1="fighter";
private static final String C_P_208_2="msg_fighter,title";
private static final String C_P_208_3=PkScriptPages.REN_ADD_WEB_FIGHT_CSS_FIGHT_CSS;
private static final String C_P_208_4="stylesheet";
private static final String C_P_208_5="text/css";
private static final String C_P_208_6="$f()";
private static final String C_P_208_7="msg_fighter,fight";
private static final String C_P_208_8="$t()";
private static final String C_P_208_9="msg_fighter,team";
private static final String C_P_208_10="$e()";
private static final String C_P_208_11="msg_fighter,refresh";
private static final String C_P_208_12="msg_fighter,name";
private static final String C_P_208_13="name";
private static final String C_P_208_14="changed";
private static final String C_P_208_15="msg_fighter,current_name";
private static final String C_P_208_16="currentName";
private static final String C_P_208_17="msg_fighter,current_gender";
private static final String C_P_208_18="currentGender";
private static final String C_P_208_19="!isEmpty(usedBallCatching)";
private static final String C_P_208_20="msg_fighter,used_ball_catching";
private static final String C_P_208_21="usedBallCatching";
private static final String C_P_208_22="belongingToPlayer";
private static final String C_P_208_23="msg_fighter,belong_player";
private static final String C_P_208_24="!belongingToPlayer";
private static final String C_P_208_25="msg_fighter,belong_player_no";
private static final String C_P_208_26="!isBackSubst()";
private static final String C_P_208_27="msg_fighter,ground_place";
private static final String C_P_208_28="groundPlaceSubst";
private static final String C_P_208_29="isBackSubst()";
private static final String C_P_208_30="msg_fighter,ground_substit_back";
private static final String C_P_208_31="!isBack()";
private static final String C_P_208_32="msg_fighter,ground_substit";
private static final String C_P_208_33="groundPlace";
private static final String C_P_208_34="isBack()";
private static final String C_P_208_35="msg_fighter,ground_place_back";
private static final String C_P_208_36="msg_fighter,nickname";
private static final String C_P_208_37="nickname";
private static final String C_P_208_38="msg_fighter,happiness";
private static final String C_P_208_39="happiness";
private static final String C_P_208_40="msg_fighter,level";
private static final String C_P_208_41="level";
private static final String C_P_208_42="msg_fighter,won_exp_last_level";
private static final String C_P_208_43="wonExpSinceLastLevel";
private static final String C_P_208_44="msg_fighter,necessary_pts";
private static final String C_P_208_45="necessaryPointsNextLevel";
private static final String C_P_208_46="msg_fighter,gender";
private static final String C_P_208_47="gender";
private static final String C_P_208_48="msg_fighter,weight";
private static final String C_P_208_49="weight";
private static final String C_P_208_50="weightStr";
private static final String C_P_208_51="msg_fighter,height";
private static final String C_P_208_52="height";
private static final String C_P_208_53="heightStr";
private static final String C_P_208_54="msg_fighter,remain_hp";
private static final String C_P_208_55="remainingHp";
private static final String C_P_208_55_0="maxHp";
private static final String C_P_208_56="remainingHpStr";
private static final String C_P_208_57="remainingHpStrPerCent";
private static final String C_P_208_58="msg_fighter,clone";
private static final String C_P_208_59="clone";
private static final String C_P_208_60="cloneStr";
private static final String C_P_208_61="msg_fighter,ability";
private static final String C_P_208_62="ability";
private static final String C_P_208_63="!isEmpty(currentAbility)";
private static final String C_P_208_64="msg_fighter,current_ability";
private static final String C_P_208_65="currentAbility";
private static final String C_P_208_66="isEmpty(currentAbility)";
private static final String C_P_208_67="msg_fighter,current_ability_no";
private static final String C_P_208_68="acted";
private static final String C_P_208_69="msg_fighter,acted";
private static final String C_P_208_70="!acted";
private static final String C_P_208_71="msg_fighter,acted_no";
private static final String C_P_208_72="!isEmpty(lastUsedItem)";
private static final String C_P_208_73="msg_fighter,last_used_item";
private static final String C_P_208_74="lastUsedItem";
private static final String C_P_208_75="isEmpty(lastUsedItem)";
private static final String C_P_208_76="msg_fighter,last_used_item_no";
private static final String C_P_208_77="!isEmpty(item)";
private static final String C_P_208_78="msg_fighter,item";
private static final String C_P_208_79="item";
private static final String C_P_208_80="isEmpty(item)";
private static final String C_P_208_81="msg_fighter,item_no";
private static final String C_P_208_82="!isEmpty(expItem)";
private static final String C_P_208_83="msg_fighter,exp_item";
private static final String C_P_208_84="expItem";
private static final String C_P_208_85="isEmpty(expItem)";
private static final String C_P_208_86="msg_fighter,exp_item_no";
private static final String C_P_208_87="usingItem";
private static final String C_P_208_88="msg_fighter,using_item";
private static final String C_P_208_89="msg_fighter,types";
private static final String C_P_208_90="types";
private static final String C_P_208_91="t";
private static final String C_P_208_92="java.lang.String";
private static final String C_P_208_93="{t}";
private static final String C_P_208_94="msg_fighter,moves";
private static final String C_P_208_95="msg_fighter,moves_key";
private static final String C_P_208_96="msg_fighter,moves_value_one";
private static final String C_P_208_97="msg_fighter,moves_value_two";
private static final String C_P_208_98="m";
private static final String C_P_208_99="moves";
private static final String C_P_208_100="s";
private static final String C_P_208_101="java.lang.String";
private static final String C_P_208_102="aiki.game.UsesOfMove";
private static final String C_P_208_103="{m}";
private static final String C_P_208_104="{s.getCurrent()}";
private static final String C_P_208_105="{s.getMax()}";
private static final String C_P_208_106="msg_fighter,current_moves";
private static final String C_P_208_107="msg_fighter,current_moves_key";
private static final String C_P_208_108="msg_fighter,current_moves_value_one";
private static final String C_P_208_109="msg_fighter,current_moves_value_two";
private static final String C_P_208_110="m";
private static final String C_P_208_111="currentMoves";
private static final String C_P_208_112="s";
private static final String C_P_208_113="java.lang.String";
private static final String C_P_208_114="aiki.game.UsesOfMove";
private static final String C_P_208_115="{m}";
private static final String C_P_208_116="{s.getCurrent()}";
private static final String C_P_208_117="{s.getMax()}";
private static final String C_P_208_118="msg_fighter,nb_rounds";
private static final String C_P_208_119="nbRounds";
private static final String C_P_208_120="msg_fighter,copied_moves";
private static final String C_P_208_121="msg_fighter,copied_moves_old";
private static final String C_P_208_122="msg_fighter,copied_moves_new";
private static final String C_P_208_123="msg_fighter,copied_moves_pp";
private static final String C_P_208_124="m";
private static final String C_P_208_125="copiedMoves";
private static final String C_P_208_126="s";
private static final String C_P_208_127="java.lang.String";
private static final String C_P_208_128="aiki.game.fight.util.CopiedMove";
private static final String C_P_208_129="{m}";
private static final String C_P_208_130="{s.getMove()}";
private static final String C_P_208_131="{s.getPp()}";
private static final String C_P_208_132="msg_fighter,statistics";
private static final String C_P_208_133="msg_fighter,statistics_key";
private static final String C_P_208_134="msg_fighter,statistics_base";
private static final String C_P_208_135="msg_fighter,statistics_ev";
private static final String C_P_208_136="msg_fighter,statistics_iv";
private static final String C_P_208_137="msg_fighter,statistics_boost";
private static final String C_P_208_138="aiki.beans.facade.fight.StatisticInfo";
private static final String C_P_208_139="statistics";
private static final String C_P_208_140="s";
private static final String C_P_208_141="{s.getDisplayStatistic()}";
private static final String C_P_208_142="s.isBase()";
private static final String C_P_208_143="{s.getStatisBase()}";
private static final String C_P_208_144="!s.isBase()";
private static final String C_P_208_145="msg_fighter,statistics_no";
private static final String C_P_208_146="s.isBase()";
private static final String C_P_208_147="{s.getEv()}";
private static final String C_P_208_148="!s.isBase()";
private static final String C_P_208_149="msg_fighter,statistics_no";
private static final String C_P_208_150="s.isBase()";
private static final String C_P_208_151="{s.getIv()}";
private static final String C_P_208_152="!s.isBase()";
private static final String C_P_208_153="msg_fighter,statistics_no";
private static final String C_P_208_154="s.isBoost()";
private static final String C_P_208_155="{s.getStatisBoost()}";
private static final String C_P_208_156="!s.isBoost()";
private static final String C_P_208_157="msg_fighter,statistics_no";
private static final String C_P_208_158="msg_fighter,damage_power_types";
private static final String C_P_208_159="msg_fighter,damage_power_types_key";
private static final String C_P_208_160="msg_fighter,damage_power_types_value_one";
private static final String C_P_208_161="msg_fighter,damage_power_types_value_two";
private static final String C_P_208_162="m";
private static final String C_P_208_163="damageRateByType";
private static final String C_P_208_164="r";
private static final String C_P_208_165="java.lang.String";
private static final String C_P_208_166="aiki.beans.facade.fight.MultPowerMoves";
private static final String C_P_208_167="{m}";
private static final String C_P_208_168="{r.getMultInflicted()}";
private static final String C_P_208_169="{r.getMultSuffering()}";
private static final String C_P_208_170="!protectedAgainstMoveTypes.isEmpty()";
private static final String C_P_208_171="msg_fighter,types_protected";
private static final String C_P_208_172="protectedAgainstMoveTypes";
private static final String C_P_208_173="t";
private static final String C_P_208_174="java.lang.String";
private static final String C_P_208_175="{t}";
private static final String C_P_208_176="msg_fighter,suffering_damage";
private static final String C_P_208_177="msg_fighter,suffering_damage_key";
private static final String C_P_208_178="msg_fighter,suffering_damage_value_round";
private static final String C_P_208_179="msg_fighter,suffering_damage_value_using";
private static final String C_P_208_180="c";
private static final String C_P_208_181="damageSufferedCateg";
private static final String C_P_208_182="r";
private static final String C_P_208_183="java.lang.String";
private static final String C_P_208_184="aiki.beans.facade.fight.SufferedDamageCategory";
private static final String C_P_208_185="{c}";
private static final String C_P_208_186="{r.getRound()}";
private static final String C_P_208_187="{r.getUsing()}";
private static final String C_P_208_188="msg_fighter,enbaled_moves";
private static final String C_P_208_189="msg_fighter,enbaled_moves_key";
private static final String C_P_208_190="msg_fighter,enbaled_moves_enabled";
private static final String C_P_208_191="msg_fighter,enbaled_moves_nb_round";
private static final String C_P_208_192="m";
private static final String C_P_208_193="enabledMoves";
private static final String C_P_208_194="a";
private static final String C_P_208_195="java.lang.String";
private static final String C_P_208_196="aiki.game.fight.ActivityOfMove";
private static final String C_P_208_197="{m}";
private static final String C_P_208_198="a.isEnabled()";
private static final String C_P_208_199="msg_fighter,enbaled_moves_enabled_y";
private static final String C_P_208_200="!a.isEnabled()";
private static final String C_P_208_201="msg_fighter,enbaled_moves_enabled_n";
private static final String C_P_208_202="a.isIncrementCount()";
private static final String C_P_208_203="{a.getNbTurn()}";
private static final String C_P_208_204="!a.isIncrementCount()";
private static final String C_P_208_205="msg_fighter,enbaled_moves_no";
private static final String C_P_208_206="msg_fighter,enbaled_moves_ally";
private static final String C_P_208_207="msg_fighter,enbaled_moves_ally_key";
private static final String C_P_208_208="msg_fighter,enbaled_moves_ally_enabled";
private static final String C_P_208_209="m";
private static final String C_P_208_210="enabledMovesForAlly";
private static final String C_P_208_211="a";
private static final String C_P_208_212="java.lang.String";
private static final String C_P_208_213="java.lang.Boolean";
private static final String C_P_208_214="{m}";
private static final String C_P_208_215="a";
private static final String C_P_208_216="msg_fighter,enbaled_moves_ally_enabled_y";
private static final String C_P_208_217="!a";
private static final String C_P_208_218="msg_fighter,enbaled_moves_ally_enabled_n";
private static final String C_P_208_219="msg_fighter,nb_uses";
private static final String C_P_208_220="msg_fighter,nb_uses_key";
private static final String C_P_208_221="msg_fighter,nb_uses_value";
private static final String C_P_208_222="m";
private static final String C_P_208_223="nbUsesMoves";
private static final String C_P_208_224="u";
private static final String C_P_208_225="java.lang.String";
private static final String C_P_208_226="java.lang.Integer";
private static final String C_P_208_227="{m}";
private static final String C_P_208_228="{u}";
private static final String C_P_208_229="msg_fighter,nb_success_moves";
private static final String C_P_208_230="nbRepeatingSuccessfulMoves";
private static final String C_P_208_231="successfulMove";
private static final String C_P_208_232="msg_fighter,successful_move";
private static final String C_P_208_233="!isEmpty(lastSuccessfulMove)";
private static final String C_P_208_234="msg_fighter,last_successful_move";
private static final String C_P_208_235="lastSuccessfulMove";
private static final String C_P_208_236="!isEmpty(lastUsedMove)";
private static final String C_P_208_237="msg_fighter,last_used_move";
private static final String C_P_208_238="lastUsedMove";
private static final String C_P_208_239="!isEmpty(usedMoveLastRound)";
private static final String C_P_208_240="msg_fighter,used_move_last_round";
private static final String C_P_208_241="usedMoveLastRound";
private static final String C_P_208_242="!successfulMove";
private static final String C_P_208_243="msg_fighter,successful_move_no";
private static final String C_P_208_244="msg_fighter,nb_round_prepa";
private static final String C_P_208_245="nbPrepaRound";
private static final String C_P_208_246="!alreadyInvokedMovesRound.isEmpty()";
private static final String C_P_208_247="msg_fighter,invoked_moves";
private static final String C_P_208_248="alreadyInvokedMovesRound";
private static final String C_P_208_249="m";
private static final String C_P_208_250="java.lang.String";
private static final String C_P_208_251="{m}";
private static final String C_P_208_252="!isEmpty(lastSufferedMove)";
private static final String C_P_208_253="msg_fighter,last_suffered_move";
private static final String C_P_208_254="lastSufferedMove";
private static final String C_P_208_255="!lastSufferedMoveTypes.isEmpty()";
private static final String C_P_208_256="msg_fighter,last_suffered_move_types";
private static final String C_P_208_257="lastSufferedMoveTypes";
private static final String C_P_208_258="m";
private static final String C_P_208_259="java.lang.String";
private static final String C_P_208_260="{m}";
private static final String C_P_208_261="disappeared";
private static final String C_P_208_262="msg_fighter,disappeared";
private static final String C_P_208_263="!disappeared";
private static final String C_P_208_264="msg_fighter,disappeared_no";
private static final String C_P_208_265="needingToRecharge";
private static final String C_P_208_266="msg_fighter,needing_recharge";
private static final String C_P_208_267="msg_fighter,status";
private static final String C_P_208_268="msg_fighter,status_key";
private static final String C_P_208_269="msg_fighter,status_value";
private static final String C_P_208_270="s";
private static final String C_P_208_271="status";
private static final String C_P_208_272="r";
private static final String C_P_208_273="java.lang.String";
private static final String C_P_208_274="java.lang.Short";
private static final String C_P_208_275="{s}";
private static final String C_P_208_276="{r}";
private static final String C_P_208_277="msg_fighter,status_rel";
private static final String C_P_208_278="msg_fighter,status_rel_key_one";
private static final String C_P_208_279="msg_fighter,status_rel_key_two";
private static final String C_P_208_280="msg_fighter,status_rel_key_three";
private static final String C_P_208_281="msg_fighter,status_rel_enabled";
private static final String C_P_208_282="s";
private static final String C_P_208_283="aiki.game.fight.MoveTeamPosition";
private static final String C_P_208_284="java.lang.Object";
private static final String C_P_208_285="statusRelat";
private static final String C_P_208_286="e";
private static final String C_P_208_287="{s.getMove()}";
private static final String C_P_208_288="isFoeStatusRelatTeam(([s]))";
private static final String C_P_208_289="msg_fighter,status_rel_foe";
private static final String C_P_208_290="!isFoeStatusRelatTeam(([s]))";
private static final String C_P_208_291="msg_fighter,status_rel_player";
private static final String C_P_208_292="{getStatusRelatTeam(([s]))}";
private static final String C_P_208_293="isEnabled(([s]))";
private static final String C_P_208_294="msg_fighter,status_rel_enabled_y";
private static final String C_P_208_295="!isEnabled(([s]))";
private static final String C_P_208_296="msg_fighter,status_rel_enabled_n";
private static final String C_P_208_297="msg_fighter,private_moves";
private static final String C_P_208_298="msg_fighter,private_moves_key_one";
private static final String C_P_208_299="msg_fighter,private_moves_key_two";
private static final String C_P_208_300="msg_fighter,private_moves_key_three";
private static final String C_P_208_301="msg_fighter,private_moves_mv";
private static final String C_P_208_302="s";
private static final String C_P_208_303="aiki.game.fight.MoveTeamPosition";
private static final String C_P_208_304="java.lang.String";
private static final String C_P_208_305="privateMoves";
private static final String C_P_208_306="m";
private static final String C_P_208_307="{s.getMove()}";
private static final String C_P_208_308="isFoePrivateMovesTeam(([s]))";
private static final String C_P_208_309="msg_fighter,private_moves_foe";
private static final String C_P_208_310="!isFoePrivateMovesTeam(([s]))";
private static final String C_P_208_311="msg_fighter,private_moves_player";
private static final String C_P_208_312="{getIncrPrivateMovesTeam(([s]))}";
private static final String C_P_208_313="{m}";
private static final String C_P_208_314="msg_fighter,trapping_moves";
private static final String C_P_208_315="msg_fighter,trapping_moves_key_one";
private static final String C_P_208_316="msg_fighter,trapping_moves_key_two";
private static final String C_P_208_317="msg_fighter,trapping_moves_key_three";
private static final String C_P_208_318="msg_fighter,trapping_moves_enabled";
private static final String C_P_208_319="msg_fighter,trapping_moves_nb_round";
private static final String C_P_208_320="s";
private static final String C_P_208_321="aiki.game.fight.MoveTeamPosition";
private static final String C_P_208_322="trappingMoves";
private static final String C_P_208_323="a";
private static final String C_P_208_324="aiki.game.fight.ActivityOfMove";
private static final String C_P_208_325="{s.getMove()}";
private static final String C_P_208_326="isFoeTrappingMovesTeam(([s]))";
private static final String C_P_208_327="msg_fighter,trapping_moves_foe";
private static final String C_P_208_328="!isFoeTrappingMovesTeam(([s]))";
private static final String C_P_208_329="msg_fighter,trapping_moves_player";
private static final String C_P_208_330="{getIncrTrappingMovesTeam(([s]))}";
private static final String C_P_208_331="a.isEnabled()";
private static final String C_P_208_332="msg_fighter,trapping_moves_enabled_y";
private static final String C_P_208_333="!a.isEnabled()";
private static final String C_P_208_334="msg_fighter,trapping_moves_enabled_n";
private static final String C_P_208_335="a.isIncrementCount()";
private static final String C_P_208_336="{a.getNbTurn()}";
private static final String C_P_208_337="!a.isIncrementCount()";
private static final String C_P_208_338="msg_fighter,trapping_moves_no";
private static final String C_P_208_339="msg_fighter,tracking_moves";
private static final String C_P_208_340="msg_fighter,tracking_moves_key_one";
private static final String C_P_208_341="msg_fighter,tracking_moves_key_two";
private static final String C_P_208_342="msg_fighter,tracking_moves_key_three";
private static final String C_P_208_343="msg_fighter,tracking_moves_v";
private static final String C_P_208_344="msg_fighter,tracking_moves_enabled";
private static final String C_P_208_345="msg_fighter,tracking_moves_nb_round";
private static final String C_P_208_346="s";
private static final String C_P_208_347="aiki.game.fight.MoveTeamPosition";
private static final String C_P_208_348="trackingMoves";
private static final String C_P_208_349="a";
private static final String C_P_208_350="aiki.game.fight.util.AffectedMove";
private static final String C_P_208_351="{s.getMove()}";
private static final String C_P_208_352="isFoeTrackingMovesTeam(([s]))";
private static final String C_P_208_353="msg_fighter,tracking_moves_foe";
private static final String C_P_208_354="!isFoeTrackingMovesTeam(([s]))";
private static final String C_P_208_355="msg_fighter,tracking_moves_player";
private static final String C_P_208_356="{getIncrTrackingMovesTeam(([s]))}";
private static final String C_P_208_357="{a.getMove()}";
private static final String C_P_208_358="a.getActivity().isEnabled()";
private static final String C_P_208_359="msg_fighter,tracking_moves_enabled_y";
private static final String C_P_208_360="!a.getActivity().isEnabled()";
private static final String C_P_208_361="msg_fighter,tracking_moves_enabled_n";
private static final String C_P_208_362="a.getActivity().isIncrementCount()";
private static final String C_P_208_363="{a.getActivity().getNbTurn()}";
private static final String C_P_208_364="!a.getActivity().isIncrementCount()";
private static final String C_P_208_365="msg_fighter,tracking_moves_no";
private static final String C_P_208_366="msg_fighter,inc_accuracy";
private static final String C_P_208_367="msg_fighter,inc_accuracy_key_one";
private static final String C_P_208_368="msg_fighter,inc_accuracy_key_two";
private static final String C_P_208_369="msg_fighter,inc_accuracy_key_three";
private static final String C_P_208_370="msg_fighter,inc_accuracy_enabled";
private static final String C_P_208_371="s";
private static final String C_P_208_372="aiki.game.fight.MoveTeamPosition";
private static final String C_P_208_373="incrUserAccuracy";
private static final String C_P_208_374="a";
private static final String C_P_208_375="java.lang.Boolean";
private static final String C_P_208_376="{s.getMove()}";
private static final String C_P_208_377="isFoeIncrUserAccuracyTeam(([s]))";
private static final String C_P_208_378="msg_fighter,inc_accuracy_foe";
private static final String C_P_208_379="!isFoeIncrUserAccuracyTeam(([s]))";
private static final String C_P_208_380="msg_fighter,inc_accuracy_player";
private static final String C_P_208_381="{getIncrUserAccuracyTeam(([s]))}";
private static final String C_P_208_382="a";
private static final String C_P_208_383="msg_fighter,inc_accuracy_enabled_y";
private static final String C_P_208_384="!a";
private static final String C_P_208_385="msg_fighter,inc_accuracy_enabled_n";
private PageFightFighter(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc113){
Element elt0_=el(_doc113,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_208_0));
attrs0_.add(at(C_BEAN,C_P_208_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,HEAD);
Element elt2_=el(_doc113,TITLE);
Element elt3_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_2));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc113,LINK);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(HREF,C_P_208_3));
attrs2_.add(at(REL,C_P_208_4));
attrs2_.add(at(TYPE,C_P_208_5));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc113,BODY);
build0(elt5_,_doc113);
build1(elt5_,_doc113);
build2(elt5_,_doc113);
build3(elt5_,_doc113);
build4(elt5_,_doc113);
build5(elt5_,_doc113);
build6(elt5_,_doc113);
build7(elt5_,_doc113);
build8(elt5_,_doc113);
build9(elt5_,_doc113);
build10(elt5_,_doc113);
build11(elt5_,_doc113);
build12(elt5_,_doc113);
build13(elt5_,_doc113);
build14(elt5_,_doc113);
build15(elt5_,_doc113);
build16(elt5_,_doc113);
build17(elt5_,_doc113);
build18(elt5_,_doc113);
build19(elt5_,_doc113);
build20(elt5_,_doc113);
build21(elt5_,_doc113);
build22(elt5_,_doc113);
build23(elt5_,_doc113);
build24(elt5_,_doc113);
build25(elt5_,_doc113);
build26(elt5_,_doc113);
build27(elt5_,_doc113);
build28(elt5_,_doc113);
build29(elt5_,_doc113);
build30(elt5_,_doc113);
build31(elt5_,_doc113);
build32(elt5_,_doc113);
build33(elt5_,_doc113);
build34(elt5_,_doc113);
build35(elt5_,_doc113);
build36(elt5_,_doc113);
build37(elt5_,_doc113);
build38(elt5_,_doc113);
build39(elt5_,_doc113);
build40(elt5_,_doc113);
build41(elt5_,_doc113);
build42(elt5_,_doc113);
build43(elt5_,_doc113);
build44(elt5_,_doc113);
build45(elt5_,_doc113);
build46(elt5_,_doc113);
build47(elt5_,_doc113);
build48(elt5_,_doc113);
build49(elt5_,_doc113);
build50(elt5_,_doc113);
build51(elt5_,_doc113);
build52(elt5_,_doc113);
build53(elt5_,_doc113);
build54(elt5_,_doc113);
build55(elt5_,_doc113);
build56(elt5_,_doc113);
build57(elt5_,_doc113);
build58(elt5_,_doc113);
build59(elt5_,_doc113);
build60(elt5_,_doc113);
build61(elt5_,_doc113);
build62(elt5_,_doc113);
build63(elt5_,_doc113);
build64(elt5_,_doc113);
build65(elt5_,_doc113);
build66(elt5_,_doc113);
build67(elt5_,_doc113);
build68(elt5_,_doc113);
build69(elt5_,_doc113);
build70(elt5_,_doc113);
build71(elt5_,_doc113);
build72(elt5_,_doc113);
build73(elt5_,_doc113);
build74(elt5_,_doc113);
build75(elt5_,_doc113);
build76(elt5_,_doc113);
build77(elt5_,_doc113);
build78(elt5_,_doc113);
build79(elt5_,_doc113);
build80(elt5_,_doc113);
ad(elt0_,elt5_);
_doc113.appendChild(elt0_);
}
static void build0(Element _body,Document _doc113){
Element elt0_=el(_doc113,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_208_6));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_7));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc113,BR);
ad(_body,elt2_);
}
static void build1(Element _body,Document _doc113){
Element elt0_=el(_doc113,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_208_8));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_9));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc113,BR);
ad(_body,elt2_);
}
static void build2(Element _body,Document _doc113){
Element elt0_=el(_doc113,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_208_10));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_11));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc113,BR);
ad(_body,elt2_);
}
static void build3(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_12));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_13));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_14));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_15));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_16));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_17));
at(elt3_,attrs3_);
Element elt4_=el(_doc113,PARAM);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_18));
at(elt4_,attrs4_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_19));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_20));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_21));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_22));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_23));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_24));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_25));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_26));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_27));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_28));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_29));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_30));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_31));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_32));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_33));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_34));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_35));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_36));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_37));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build13(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_38));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_39));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_40));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_41));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_42));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_43));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build16(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_44));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_45));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build17(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_46));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_47));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build18(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_48));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_49));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_50));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build19(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_51));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_52));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_53));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build20(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_54));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_55));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_56));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc113,PARAM);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_57));
at(elt3_,attrs3_);
ad(elt0_,elt3_);
Element elt4_=el(_doc113,PARAM);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_55_0));
at(elt4_,attrs4_);
ad(elt0_,elt4_);
ad(_body,elt0_);
}
static void build21(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_58));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_59));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_60));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build22(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_61));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_62));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build23(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_63));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_64));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_65));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build24(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_66));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_67));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build25(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_68));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_69));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build26(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_70));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_71));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build27(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_72));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_73));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_74));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build28(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_75));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_76));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build29(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_77));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_78));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_79));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build30(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_80));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_81));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build31(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_82));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_83));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_84));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build32(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_85));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_86));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build33(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_87));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_88));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build34(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_89));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build35(Element _body,Document _doc113){
Element elt0_=el(_doc113,UL);
Element elt1_=el(_doc113,C_FOR);
CustList<Attr> attrs0_=al(3);
attrs0_.add(at(LIST,C_P_208_90));
attrs0_.add(at(VAR,C_P_208_91));
attrs0_.add(at(CLASSNAME,C_P_208_92));
at(elt1_,attrs0_);
Element elt2_=el(_doc113,LI);
Text txt0_=tx(_doc113,C_P_208_93);
ad(elt2_,txt0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build36(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_94));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build37(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_95));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_96));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_97));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_98));
attrs3_.add(at(MAP,C_P_208_99));
attrs3_.add(at(VALUE,C_P_208_100));
attrs3_.add(at(KEYCLASSNAME,C_P_208_101));
attrs3_.add(at(VARCLASSNAME,C_P_208_102));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_103);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_104);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_105);
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build38(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_106));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build39(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_107));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_108));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_109));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_110));
attrs3_.add(at(MAP,C_P_208_111));
attrs3_.add(at(VALUE,C_P_208_112));
attrs3_.add(at(KEYCLASSNAME,C_P_208_113));
attrs3_.add(at(VARCLASSNAME,C_P_208_114));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_115);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_116);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_117);
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build40(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_118));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_119));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build41(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_120));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build42(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_121));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_122));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_123));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_124));
attrs3_.add(at(MAP,C_P_208_125));
attrs3_.add(at(VALUE,C_P_208_126));
attrs3_.add(at(KEYCLASSNAME,C_P_208_127));
attrs3_.add(at(VARCLASSNAME,C_P_208_128));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_129);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_130);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_131);
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build43(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_132));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build44(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_133));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_134));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_135));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_136));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc113,TH);
Element elt12_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_137));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc113,TBODY);
Element elt14_=el(_doc113,C_FOR);
CustList<Attr> attrs5_=al(3);
attrs5_.add(at(CLASSNAME,C_P_208_138));
attrs5_.add(at(LIST,C_P_208_139));
attrs5_.add(at(VAR,C_P_208_140));
at(elt14_,attrs5_);
Element elt15_=el(_doc113,TR);
Element elt16_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_141);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
Element elt17_=el(_doc113,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_208_142));
at(elt17_,attrs6_);
Element elt18_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_143);
ad(elt18_,txt1_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt19_=el(_doc113,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_208_144));
at(elt19_,attrs7_);
Element elt20_=el(_doc113,TD);
Element elt21_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_208_145));
at(elt21_,attrs8_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt15_,elt19_);
Element elt22_=el(_doc113,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_208_146));
at(elt22_,attrs9_);
Element elt23_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_147);
ad(elt23_,txt2_);
ad(elt22_,elt23_);
ad(elt15_,elt22_);
Element elt24_=el(_doc113,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_208_148));
at(elt24_,attrs10_);
Element elt25_=el(_doc113,TD);
Element elt26_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_208_149));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt15_,elt24_);
Element elt27_=el(_doc113,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_208_150));
at(elt27_,attrs12_);
Element elt28_=el(_doc113,TD);
Text txt3_=tx(_doc113,C_P_208_151);
ad(elt28_,txt3_);
ad(elt27_,elt28_);
ad(elt15_,elt27_);
Element elt29_=el(_doc113,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_208_152));
at(elt29_,attrs13_);
Element elt30_=el(_doc113,TD);
Element elt31_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_208_153));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt15_,elt29_);
Element elt32_=el(_doc113,C_IF);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(CONDITION,C_P_208_154));
at(elt32_,attrs15_);
Element elt33_=el(_doc113,TD);
Text txt4_=tx(_doc113,C_P_208_155);
ad(elt33_,txt4_);
ad(elt32_,elt33_);
ad(elt15_,elt32_);
Element elt34_=el(_doc113,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_208_156));
at(elt34_,attrs16_);
Element elt35_=el(_doc113,TD);
Element elt36_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_208_157));
at(elt36_,attrs17_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt15_,elt34_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build45(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_158));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build46(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_159));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_160));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_161));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_162));
attrs3_.add(at(MAP,C_P_208_163));
attrs3_.add(at(VALUE,C_P_208_164));
attrs3_.add(at(KEYCLASSNAME,C_P_208_165));
attrs3_.add(at(VARCLASSNAME,C_P_208_166));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_167);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_168);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_169);
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build47(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_170));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_171));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,UL);
Element elt3_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_208_172));
attrs2_.add(at(VAR,C_P_208_173));
attrs2_.add(at(CLASSNAME,C_P_208_174));
at(elt3_,attrs2_);
Element elt4_=el(_doc113,LI);
Text txt0_=tx(_doc113,C_P_208_175);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build48(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_176));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build49(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_177));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_178));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_179));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_180));
attrs3_.add(at(MAP,C_P_208_181));
attrs3_.add(at(VALUE,C_P_208_182));
attrs3_.add(at(KEYCLASSNAME,C_P_208_183));
attrs3_.add(at(VARCLASSNAME,C_P_208_184));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_185);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_186);
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_187);
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build50(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_188));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build51(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_189));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_190));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_191));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc113,TBODY);
Element elt10_=el(_doc113,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_208_192));
attrs3_.add(at(MAP,C_P_208_193));
attrs3_.add(at(VALUE,C_P_208_194));
attrs3_.add(at(KEYCLASSNAME,C_P_208_195));
attrs3_.add(at(VARCLASSNAME,C_P_208_196));
at(elt10_,attrs3_);
Element elt11_=el(_doc113,TR);
Element elt12_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_197);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc113,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_208_198));
at(elt13_,attrs4_);
Element elt14_=el(_doc113,TD);
Element elt15_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_208_199));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc113,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_208_200));
at(elt16_,attrs6_);
Element elt17_=el(_doc113,TD);
Element elt18_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_208_201));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc113,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_208_202));
at(elt19_,attrs8_);
Element elt20_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_203);
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc113,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_208_204));
at(elt21_,attrs9_);
Element elt22_=el(_doc113,TD);
Element elt23_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_208_205));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build52(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_206));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build53(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_207));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_208));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc113,TBODY);
Element elt8_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_208_209));
attrs2_.add(at(MAP,C_P_208_210));
attrs2_.add(at(VALUE,C_P_208_211));
attrs2_.add(at(KEYCLASSNAME,C_P_208_212));
attrs2_.add(at(VARCLASSNAME,C_P_208_213));
at(elt8_,attrs2_);
Element elt9_=el(_doc113,TR);
Element elt10_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_214);
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc113,C_IF);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(CONDITION,C_P_208_215));
at(elt11_,attrs3_);
Element elt12_=el(_doc113,TD);
Element elt13_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_216));
at(elt13_,attrs4_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
Element elt14_=el(_doc113,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_208_217));
at(elt14_,attrs5_);
Element elt15_=el(_doc113,TD);
Element elt16_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_208_218));
at(elt16_,attrs6_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt9_,elt14_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build54(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_219));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build55(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_220));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_221));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc113,TBODY);
Element elt8_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_208_222));
attrs2_.add(at(MAP,C_P_208_223));
attrs2_.add(at(VALUE,C_P_208_224));
attrs2_.add(at(KEYCLASSNAME,C_P_208_225));
attrs2_.add(at(VARCLASSNAME,C_P_208_226));
at(elt8_,attrs2_);
Element elt9_=el(_doc113,TR);
Element elt10_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_227);
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_228);
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build56(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_229));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_230));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build57(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_231));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_232));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build58(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_233));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_234));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_235));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build59(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_236));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_237));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_238));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build60(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_239));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_240));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_241));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build61(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_242));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_243));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build62(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_244));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,PARAM);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_245));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build63(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_246));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_247));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,UL);
Element elt3_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_208_248));
attrs2_.add(at(VAR,C_P_208_249));
attrs2_.add(at(CLASSNAME,C_P_208_250));
at(elt3_,attrs2_);
Element elt4_=el(_doc113,LI);
Text txt0_=tx(_doc113,C_P_208_251);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build64(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_252));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_253));
at(elt1_,attrs1_);
Element elt2_=el(_doc113,PARAM);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_254));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build65(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_255));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_256));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc113,UL);
Element elt3_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(LIST,C_P_208_257));
attrs2_.add(at(VAR,C_P_208_258));
attrs2_.add(at(CLASSNAME,C_P_208_259));
at(elt3_,attrs2_);
Element elt4_=el(_doc113,LI);
Text txt0_=tx(_doc113,C_P_208_260);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build66(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_261));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_262));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build67(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_263));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_264));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build68(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_208_265));
at(elt0_,attrs0_);
Element elt1_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_266));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build69(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_267));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build70(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_268));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_269));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc113,TBODY);
Element elt8_=el(_doc113,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_208_270));
attrs2_.add(at(MAP,C_P_208_271));
attrs2_.add(at(VALUE,C_P_208_272));
attrs2_.add(at(KEYCLASSNAME,C_P_208_273));
attrs2_.add(at(VARCLASSNAME,C_P_208_274));
at(elt8_,attrs2_);
Element elt9_=el(_doc113,TR);
Element elt10_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_275);
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_276);
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build71(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_277));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build72(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_278));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_279));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_280));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_281));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc113,TBODY);
Element elt12_=el(_doc113,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_208_282));
attrs4_.add(at(KEYCLASSNAME,C_P_208_283));
attrs4_.add(at(VARCLASSNAME,C_P_208_284));
attrs4_.add(at(MAP,C_P_208_285));
attrs4_.add(at(VALUE,C_P_208_286));
at(elt12_,attrs4_);
Element elt13_=el(_doc113,TR);
Element elt14_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_287);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc113,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_208_288));
at(elt15_,attrs5_);
Element elt16_=el(_doc113,TD);
Element elt17_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_208_289));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc113,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_208_290));
at(elt18_,attrs7_);
Element elt19_=el(_doc113,TD);
Element elt20_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_208_291));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_292);
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc113,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_208_293));
at(elt22_,attrs9_);
Element elt23_=el(_doc113,TD);
Element elt24_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_208_294));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt13_,elt22_);
Element elt25_=el(_doc113,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_208_295));
at(elt25_,attrs11_);
Element elt26_=el(_doc113,TD);
Element elt27_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_208_296));
at(elt27_,attrs12_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt13_,elt25_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
static void build73(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_297));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build74(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_298));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_299));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_300));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_301));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc113,TBODY);
Element elt12_=el(_doc113,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_208_302));
attrs4_.add(at(KEYCLASSNAME,C_P_208_303));
attrs4_.add(at(VARCLASSNAME,C_P_208_304));
attrs4_.add(at(MAP,C_P_208_305));
attrs4_.add(at(VALUE,C_P_208_306));
at(elt12_,attrs4_);
Element elt13_=el(_doc113,TR);
Element elt14_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_307);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc113,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_208_308));
at(elt15_,attrs5_);
Element elt16_=el(_doc113,TD);
Element elt17_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_208_309));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc113,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_208_310));
at(elt18_,attrs7_);
Element elt19_=el(_doc113,TD);
Element elt20_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_208_311));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_312);
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_313);
ad(elt22_,txt2_);
ad(elt13_,elt22_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
static void build75(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_314));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build76(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_315));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_316));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_317));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_318));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc113,TH);
Element elt12_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_319));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc113,TBODY);
Element elt14_=el(_doc113,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_208_320));
attrs5_.add(at(KEYCLASSNAME,C_P_208_321));
attrs5_.add(at(MAP,C_P_208_322));
attrs5_.add(at(VALUE,C_P_208_323));
attrs5_.add(at(VARCLASSNAME,C_P_208_324));
at(elt14_,attrs5_);
Element elt15_=el(_doc113,TR);
Element elt16_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_325);
ad(elt16_,txt0_);
ad(elt15_,elt16_);
Element elt17_=el(_doc113,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_208_326));
at(elt17_,attrs6_);
Element elt18_=el(_doc113,TD);
Element elt19_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_208_327));
at(elt19_,attrs7_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt20_=el(_doc113,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_208_328));
at(elt20_,attrs8_);
Element elt21_=el(_doc113,TD);
Element elt22_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_208_329));
at(elt22_,attrs9_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt15_,elt20_);
Element elt23_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_330);
ad(elt23_,txt1_);
ad(elt15_,elt23_);
Element elt24_=el(_doc113,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_208_331));
at(elt24_,attrs10_);
Element elt25_=el(_doc113,TD);
Element elt26_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_208_332));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt15_,elt24_);
Element elt27_=el(_doc113,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_208_333));
at(elt27_,attrs12_);
Element elt28_=el(_doc113,TD);
Element elt29_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_P_208_334));
at(elt29_,attrs13_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt15_,elt27_);
Element elt30_=el(_doc113,C_IF);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(CONDITION,C_P_208_335));
at(elt30_,attrs14_);
Element elt31_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_336);
ad(elt31_,txt2_);
ad(elt30_,elt31_);
ad(elt15_,elt30_);
Element elt32_=el(_doc113,C_IF);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(CONDITION,C_P_208_337));
at(elt32_,attrs15_);
Element elt33_=el(_doc113,TD);
Element elt34_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(VALUE,C_P_208_338));
at(elt34_,attrs16_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt15_,elt32_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build77(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_339));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build78(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_340));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_341));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_342));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_343));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc113,TH);
Element elt12_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_208_344));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
Element elt13_=el(_doc113,TH);
Element elt14_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_208_345));
at(elt14_,attrs5_);
ad(elt13_,elt14_);
ad(elt2_,elt13_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt15_=el(_doc113,TBODY);
Element elt16_=el(_doc113,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_208_346));
attrs6_.add(at(KEYCLASSNAME,C_P_208_347));
attrs6_.add(at(MAP,C_P_208_348));
attrs6_.add(at(VALUE,C_P_208_349));
attrs6_.add(at(VARCLASSNAME,C_P_208_350));
at(elt16_,attrs6_);
Element elt17_=el(_doc113,TR);
Element elt18_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_351);
ad(elt18_,txt0_);
ad(elt17_,elt18_);
Element elt19_=el(_doc113,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_208_352));
at(elt19_,attrs7_);
Element elt20_=el(_doc113,TD);
Element elt21_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_208_353));
at(elt21_,attrs8_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt17_,elt19_);
Element elt22_=el(_doc113,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_208_354));
at(elt22_,attrs9_);
Element elt23_=el(_doc113,TD);
Element elt24_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_208_355));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt17_,elt22_);
Element elt25_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_356);
ad(elt25_,txt1_);
ad(elt17_,elt25_);
Element elt26_=el(_doc113,TD);
Text txt2_=tx(_doc113,C_P_208_357);
ad(elt26_,txt2_);
ad(elt17_,elt26_);
Element elt27_=el(_doc113,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_208_358));
at(elt27_,attrs11_);
Element elt28_=el(_doc113,TD);
Element elt29_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_208_359));
at(elt29_,attrs12_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt17_,elt27_);
Element elt30_=el(_doc113,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_208_360));
at(elt30_,attrs13_);
Element elt31_=el(_doc113,TD);
Element elt32_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_208_361));
at(elt32_,attrs14_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt17_,elt30_);
Element elt33_=el(_doc113,C_IF);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(CONDITION,C_P_208_362));
at(elt33_,attrs15_);
Element elt34_=el(_doc113,TD);
Text txt3_=tx(_doc113,C_P_208_363);
ad(elt34_,txt3_);
ad(elt33_,elt34_);
ad(elt17_,elt33_);
Element elt35_=el(_doc113,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_208_364));
at(elt35_,attrs16_);
Element elt36_=el(_doc113,TD);
Element elt37_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_208_365));
at(elt37_,attrs17_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt17_,elt35_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build79(Element _body,Document _doc113){
Element elt0_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_366));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build80(Element _body,Document _doc113){
Element elt0_=el(_doc113,TABLE);
Element elt1_=el(_doc113,THEAD);
Element elt2_=el(_doc113,TR);
Element elt3_=el(_doc113,TH);
Element elt4_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_208_367));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc113,TH);
Element elt6_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_208_368));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc113,TH);
Element elt8_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_208_369));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc113,TH);
Element elt10_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_208_370));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc113,TBODY);
Element elt12_=el(_doc113,C_FOR);
CustList<Attr> attrs4_=al(5);
attrs4_.add(at(KEY,C_P_208_371));
attrs4_.add(at(KEYCLASSNAME,C_P_208_372));
attrs4_.add(at(MAP,C_P_208_373));
attrs4_.add(at(VALUE,C_P_208_374));
attrs4_.add(at(VARCLASSNAME,C_P_208_375));
at(elt12_,attrs4_);
Element elt13_=el(_doc113,TR);
Element elt14_=el(_doc113,TD);
Text txt0_=tx(_doc113,C_P_208_376);
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc113,C_IF);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(CONDITION,C_P_208_377));
at(elt15_,attrs5_);
Element elt16_=el(_doc113,TD);
Element elt17_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_P_208_378));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc113,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_208_379));
at(elt18_,attrs7_);
Element elt19_=el(_doc113,TD);
Element elt20_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_208_380));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc113,TD);
Text txt1_=tx(_doc113,C_P_208_381);
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc113,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_208_382));
at(elt22_,attrs9_);
Element elt23_=el(_doc113,TD);
Element elt24_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_208_383));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt13_,elt22_);
Element elt25_=el(_doc113,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_208_384));
at(elt25_,attrs11_);
Element elt26_=el(_doc113,TD);
Element elt27_=el(_doc113,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_208_385));
at(elt27_,attrs12_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt13_,elt25_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
}
