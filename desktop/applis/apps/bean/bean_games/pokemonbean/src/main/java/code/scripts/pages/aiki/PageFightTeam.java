package code.scripts.pages.aiki;
import code.scripts.confs.*;
import code.sml.*;
import code.util.*;
final class PageFightTeam extends PageCardsCommon{
private static final String C_P_209_0="javahtml";
private static final String C_P_209_1="team";
private static final String C_P_209_2=PkScriptPages.REN_ADD_WEB_FIGHT_CSS_FIGHT_CSS;
private static final String C_P_209_3="stylesheet";
private static final String C_P_209_4="text/css";
private static final String C_P_209_5="foeTeam";
private static final String C_P_209_6="msg_team,title_foe";
private static final String C_P_209_7="!foeTeam";
private static final String C_P_209_8="msg_team,title_player";
private static final String C_P_209_9="$f()";
private static final String C_P_209_10="msg_team,fight";
private static final String C_P_209_11="$t()";
private static final String C_P_209_12="msg_team,refresh";
private static final String C_P_209_13="getMembers()";
private static final String C_P_209_14="f";
private static final String C_P_209_15="java.lang.Byte";
private static final String C_P_209_16="$clickFighter({f})";
private static final String C_P_209_17="{getTrPokemonLink(([f]))}";
private static final String C_P_209_18="msg_team,enbaled_moves";
private static final String C_P_209_19="msg_team,enbaled_moves_key";
private static final String C_P_209_20="msg_team,enbaled_moves_enabled";
private static final String C_P_209_21="msg_team,enbaled_moves_nb_round";
private static final String C_P_209_22="m";
private static final String C_P_209_23="enabledMoves";
private static final String C_P_209_24="a";
private static final String C_P_209_25="java.lang.String";
private static final String C_P_209_26="aiki.game.fight.ActivityOfMove";
private static final String C_P_209_27="{m}";
private static final String C_P_209_28="a.isEnabled()";
private static final String C_P_209_29="msg_team,enbaled_moves_enabled_y";
private static final String C_P_209_30="!a.isEnabled()";
private static final String C_P_209_31="msg_team,enbaled_moves_enabled_n";
private static final String C_P_209_32="a.isIncrementCount()";
private static final String C_P_209_33="{a.getNbTurn()}";
private static final String C_P_209_34="!a.isIncrementCount()";
private static final String C_P_209_35="msg_team,enbaled_moves_no";
private static final String C_P_209_36="msg_team,enbaled_moves_groups";
private static final String C_P_209_37="msg_team,enbaled_moves_groups_key";
private static final String C_P_209_38="msg_team,enbaled_moves_groups_enabled";
private static final String C_P_209_39="msg_team,enbaled_moves_groups_nb_round";
private static final String C_P_209_40="m";
private static final String C_P_209_41="enabledMovesByGroup";
private static final String C_P_209_42="a";
private static final String C_P_209_43="java.lang.Object";
private static final String C_P_209_44="aiki.game.fight.ActivityOfMove";
private static final String C_P_209_45="{getKey(([m]))}";
private static final String C_P_209_46="a.isEnabled()";
private static final String C_P_209_47="msg_team,enbaled_moves_groups_enabled_y";
private static final String C_P_209_48="!a.isEnabled()";
private static final String C_P_209_49="msg_team,enbaled_moves_groups_enabled_n";
private static final String C_P_209_50="a.isIncrementCount()";
private static final String C_P_209_51="{a.getNbTurn()}";
private static final String C_P_209_52="!a.isIncrementCount()";
private static final String C_P_209_53="msg_team,enbaled_moves_groups_no";
private static final String C_P_209_54="msg_team,enbaled_moves_send";
private static final String C_P_209_55="msg_team,enbaled_moves_send_key";
private static final String C_P_209_56="msg_team,enbaled_moves_send_value";
private static final String C_P_209_57="m";
private static final String C_P_209_58="enabledMovesWhileSendingFoeUses";
private static final String C_P_209_59="u";
private static final String C_P_209_60="java.lang.String";
private static final String C_P_209_61="li";
private static final String C_P_209_62="{m}";
private static final String C_P_209_63="{u}";
private static final String C_P_209_64="msg_team,enbaled_moves_uses";
private static final String C_P_209_65="msg_team,enbaled_moves_uses_key";
private static final String C_P_209_66="msg_team,enbaled_moves_uses_value";
private static final String C_P_209_67="m";
private static final String C_P_209_68="nbUsesMoves";
private static final String C_P_209_69="u";
private static final String C_P_209_70="java.lang.String";
private static final String C_P_209_71="java.lang.Integer";
private static final String C_P_209_72="{m}";
private static final String C_P_209_73="{u}";
private static final String C_P_209_74="msg_team,heal_after";
private static final String C_P_209_75="msg_team,heal_after_key_one";
private static final String C_P_209_76="msg_team,heal_after_key_two";
private static final String C_P_209_77="msg_team,heal_after_key_rd";
private static final String C_P_209_78="msg_team,heal_after_key_used_current";
private static final String C_P_209_79="msg_team,heal_after_key_used_last";
private static final String C_P_209_80="m";
private static final String C_P_209_81="healAfter";
private static final String C_P_209_82="u";
private static final String C_P_209_83="java.lang.String";
private static final String C_P_209_84="lse";
private static final String C_P_209_85="p";
private static final String C_P_209_86="u";
private static final String C_P_209_87="s";
private static final String C_P_209_88="java.lang.Byte";
private static final String C_P_209_89="aiki.game.fight.StacksOfUses";
private static final String C_P_209_90="{m}";
private static final String C_P_209_91="{p}";
private static final String C_P_209_92="{s.getNbRounds()}";
private static final String C_P_209_93="s.isFirstStacked()";
private static final String C_P_209_94="msg_team,heal_after_y";
private static final String C_P_209_95="!s.isFirstStacked()";
private static final String C_P_209_96="msg_team,heal_after_n";
private static final String C_P_209_97="s.isLastStacked()";
private static final String C_P_209_98="msg_team,heal_after_y";
private static final String C_P_209_99="!s.isLastStacked()";
private static final String C_P_209_100="msg_team,heal_after_n";
private static final String C_P_209_101="msg_team,move_ant";
private static final String C_P_209_102="msg_team,move_ant_key_one";
private static final String C_P_209_103="msg_team,move_ant_key_two";
private static final String C_P_209_104="msg_team,move_ant_team";
private static final String C_P_209_105="msg_team,move_ant_ground";
private static final String C_P_209_106="msg_team,move_ant_damage";
private static final String C_P_209_107="msg_team,move_ant_nb_round";
private static final String C_P_209_108="m";
private static final String C_P_209_109="movesAnticipation";
private static final String C_P_209_110="u";
private static final String C_P_209_111="java.lang.String";
private static final String C_P_209_112="lse";
private static final String C_P_209_113="p";
private static final String C_P_209_114="u";
private static final String C_P_209_115="s";
private static final String C_P_209_116="java.lang.Byte";
private static final String C_P_209_117="aiki.game.fight.Anticipation";
private static final String C_P_209_118="{m}";
private static final String C_P_209_119="{p}";
private static final String C_P_209_120="isFoeMovesAnticipationTeam(([m]),([p]))";
private static final String C_P_209_121="msg_team,move_ant_foe";
private static final String C_P_209_122="isPlayerMovesAnticipationTeam(([m]),([p]))";
private static final String C_P_209_123="msg_team,move_ant_player";
private static final String C_P_209_122_0="isBackMovesAnticipationTeam(([m]),([p]))";
private static final String C_P_209_123_0="msg_team,move_ant_no";
private static final String C_P_209_124="!isBackMovesAnticipationTeam(([m]),([p]))";
private static final String C_P_209_125="{s.getTargetPosition().getPosition()}";
private static final String C_P_209_126="isBackMovesAnticipationTeam(([m]),([p]))";
private static final String C_P_209_127="msg_team,move_ant_no";
private static final String C_P_209_128="{s.getDamage()}";
private static final String C_P_209_129="s.isIncrementing()";
private static final String C_P_209_130="{s.getNbRounds()}";
private static final String C_P_209_131="!s.isIncrementing()";
private static final String C_P_209_132="msg_team,move_ant_no";
private static final String C_P_209_133="!playerFightersAgainstFoe.isEmpty()";
private static final String C_P_209_134="msg_team,player_foe";
private static final String C_P_209_135="p";
private static final String C_P_209_136="playerFightersAgainstFoe";
private static final String C_P_209_137="f";
private static final String C_P_209_138="java.lang.Object";
private static final String C_P_209_139="ls";
private static final String C_P_209_140="{getPlayerFigtherAgainstFoe(([p]))}:";
private static final String C_P_209_141="!f.isEmpty()";
private static final String C_P_209_142="f";
private static final String C_P_209_143="c";
private static final String C_P_209_144="{getFoeFigtherAgainstFoe(([p]),([c]))}";
private PageFightTeam(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc114){
Element elt0_=el(_doc114,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(XMLNS_C,C_P_209_0));
attrs0_.add(at(C_BEAN,C_P_209_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc114,HEAD);
Element elt2_=el(_doc114,LINK);
CustList<Attr> attrs1_=al(3);
attrs1_.add(at(HREF,C_P_209_2));
attrs1_.add(at(REL,C_P_209_3));
attrs1_.add(at(TYPE,C_P_209_4));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
Element elt3_=el(_doc114,TITLE);
Element elt4_=el(_doc114,C_IF);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(CONDITION,C_P_209_5));
at(elt4_,attrs2_);
Element elt5_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_209_6));
at(elt5_,attrs3_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt6_=el(_doc114,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_209_7));
at(elt6_,attrs4_);
Element elt7_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_209_8));
at(elt7_,attrs5_);
ad(elt6_,elt7_);
ad(elt3_,elt6_);
ad(elt1_,elt3_);
ad(elt0_,elt1_);
Element elt8_=el(_doc114,BODY);
build0(elt8_,_doc114);
build1(elt8_,_doc114);
build2(elt8_,_doc114);
build3(elt8_,_doc114);
build4(elt8_,_doc114);
build5(elt8_,_doc114);
build6(elt8_,_doc114);
build7(elt8_,_doc114);
build8(elt8_,_doc114);
build9(elt8_,_doc114);
build10(elt8_,_doc114);
build11(elt8_,_doc114);
build12(elt8_,_doc114);
build13(elt8_,_doc114);
build14(elt8_,_doc114);
build15(elt8_,_doc114);
ad(elt0_,elt8_);
_doc114.appendChild(elt0_);
}
static void build0(Element _body,Document _doc114){
Element elt0_=el(_doc114,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_209_9));
at(elt0_,attrs0_);
Element elt1_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_10));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc114,BR);
ad(_body,elt2_);
}
static void build1(Element _body,Document _doc114){
Element elt0_=el(_doc114,A);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(C_COMMAND,C_P_209_11));
at(elt0_,attrs0_);
Element elt1_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_12));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc114,BR);
ad(_body,elt2_);
}
static void build2(Element _body,Document _doc114){
Element elt0_=el(_doc114,UL);
Element elt1_=el(_doc114,C_FOR);
CustList<Attr> attrs0_=al(3);
attrs0_.add(at(LIST,C_P_209_13));
attrs0_.add(at(VAR,C_P_209_14));
attrs0_.add(at(CLASSNAME,C_P_209_15));
at(elt1_,attrs0_);
Element elt2_=el(_doc114,LI);
Element elt3_=el(_doc114,A);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(C_COMMAND,C_P_209_16));
at(elt3_,attrs1_);
Text txt0_=tx(_doc114,C_P_209_17);
ad(elt3_,txt0_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_18));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_19));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_20));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc114,TH);
Element elt8_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_209_21));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc114,TBODY);
Element elt10_=el(_doc114,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_209_22));
attrs3_.add(at(MAP,C_P_209_23));
attrs3_.add(at(VALUE,C_P_209_24));
attrs3_.add(at(KEYCLASSNAME,C_P_209_25));
attrs3_.add(at(VARCLASSNAME,C_P_209_26));
at(elt10_,attrs3_);
Element elt11_=el(_doc114,TR);
Element elt12_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_27);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc114,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_209_28));
at(elt13_,attrs4_);
Element elt14_=el(_doc114,TD);
Element elt15_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_209_29));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc114,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_209_30));
at(elt16_,attrs6_);
Element elt17_=el(_doc114,TD);
Element elt18_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_209_31));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc114,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_209_32));
at(elt19_,attrs8_);
Element elt20_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_33);
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc114,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_209_34));
at(elt21_,attrs9_);
Element elt22_=el(_doc114,TD);
Element elt23_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_209_35));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_36));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_37));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_38));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc114,TH);
Element elt8_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_209_39));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc114,TBODY);
Element elt10_=el(_doc114,C_FOR);
CustList<Attr> attrs3_=al(5);
attrs3_.add(at(KEY,C_P_209_40));
attrs3_.add(at(MAP,C_P_209_41));
attrs3_.add(at(VALUE,C_P_209_42));
attrs3_.add(at(KEYCLASSNAME,C_P_209_43));
attrs3_.add(at(VARCLASSNAME,C_P_209_44));
at(elt10_,attrs3_);
Element elt11_=el(_doc114,TR);
Element elt12_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_45);
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc114,C_IF);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(CONDITION,C_P_209_46));
at(elt13_,attrs4_);
Element elt14_=el(_doc114,TD);
Element elt15_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_209_47));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc114,C_IF);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(CONDITION,C_P_209_48));
at(elt16_,attrs6_);
Element elt17_=el(_doc114,TD);
Element elt18_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_P_209_49));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc114,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_209_50));
at(elt19_,attrs8_);
Element elt20_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_51);
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc114,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_209_52));
at(elt21_,attrs9_);
Element elt22_=el(_doc114,TD);
Element elt23_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_209_53));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_54));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_55));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_56));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc114,TBODY);
Element elt8_=el(_doc114,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_209_57));
attrs2_.add(at(MAP,C_P_209_58));
attrs2_.add(at(VALUE,C_P_209_59));
attrs2_.add(at(KEYCLASSNAME,C_P_209_60));
attrs2_.add(at(VARCLASSNAME,C_P_209_61));
at(elt8_,attrs2_);
Element elt9_=el(_doc114,TR);
Element elt10_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_62);
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_63);
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_64));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_65));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_66));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc114,TBODY);
Element elt8_=el(_doc114,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_209_67));
attrs2_.add(at(MAP,C_P_209_68));
attrs2_.add(at(VALUE,C_P_209_69));
attrs2_.add(at(KEYCLASSNAME,C_P_209_70));
attrs2_.add(at(VARCLASSNAME,C_P_209_71));
at(elt8_,attrs2_);
Element elt9_=el(_doc114,TR);
Element elt10_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_72);
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_73);
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_74));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_75));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_76));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc114,TH);
Element elt8_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_209_77));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc114,TH);
Element elt10_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_209_78));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc114,TH);
Element elt12_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_209_79));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc114,TBODY);
Element elt14_=el(_doc114,C_FOR);
CustList<Attr> attrs5_=al(5);
attrs5_.add(at(KEY,C_P_209_80));
attrs5_.add(at(MAP,C_P_209_81));
attrs5_.add(at(VALUE,C_P_209_82));
attrs5_.add(at(KEYCLASSNAME,C_P_209_83));
attrs5_.add(at(VARCLASSNAME,C_P_209_84));
at(elt14_,attrs5_);
Element elt15_=el(_doc114,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_209_85));
attrs6_.add(at(MAP,C_P_209_86));
attrs6_.add(at(VALUE,C_P_209_87));
attrs6_.add(at(KEYCLASSNAME,C_P_209_88));
attrs6_.add(at(VARCLASSNAME,C_P_209_89));
at(elt15_,attrs6_);
Element elt16_=el(_doc114,TR);
Element elt17_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_90);
ad(elt17_,txt0_);
ad(elt16_,elt17_);
Element elt18_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_91);
ad(elt18_,txt1_);
ad(elt16_,elt18_);
Element elt19_=el(_doc114,TD);
Text txt2_=tx(_doc114,C_P_209_92);
ad(elt19_,txt2_);
ad(elt16_,elt19_);
Element elt20_=el(_doc114,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_P_209_93));
at(elt20_,attrs7_);
Element elt21_=el(_doc114,TD);
Element elt22_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_P_209_94));
at(elt22_,attrs8_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt16_,elt20_);
Element elt23_=el(_doc114,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_P_209_95));
at(elt23_,attrs9_);
Element elt24_=el(_doc114,TD);
Element elt25_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(VALUE,C_P_209_96));
at(elt25_,attrs10_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt16_,elt23_);
Element elt26_=el(_doc114,C_IF);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(CONDITION,C_P_209_97));
at(elt26_,attrs11_);
Element elt27_=el(_doc114,TD);
Element elt28_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_P_209_98));
at(elt28_,attrs12_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt16_,elt26_);
Element elt29_=el(_doc114,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_209_99));
at(elt29_,attrs13_);
Element elt30_=el(_doc114,TD);
Element elt31_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_209_100));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt16_,elt29_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build13(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_101));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc114){
Element elt0_=el(_doc114,TABLE);
Element elt1_=el(_doc114,THEAD);
Element elt2_=el(_doc114,TR);
Element elt3_=el(_doc114,TH);
Element elt4_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(VALUE,C_P_209_102));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc114,TH);
Element elt6_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_103));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc114,TH);
Element elt8_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_P_209_104));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc114,TH);
Element elt10_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_P_209_105));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc114,TH);
Element elt12_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_P_209_106));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
Element elt13_=el(_doc114,TH);
Element elt14_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_P_209_107));
at(elt14_,attrs5_);
ad(elt13_,elt14_);
ad(elt2_,elt13_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt15_=el(_doc114,TBODY);
Element elt16_=el(_doc114,C_FOR);
CustList<Attr> attrs6_=al(5);
attrs6_.add(at(KEY,C_P_209_108));
attrs6_.add(at(MAP,C_P_209_109));
attrs6_.add(at(VALUE,C_P_209_110));
attrs6_.add(at(KEYCLASSNAME,C_P_209_111));
attrs6_.add(at(VARCLASSNAME,C_P_209_112));
at(elt16_,attrs6_);
Element elt17_=el(_doc114,C_FOR);
CustList<Attr> attrs7_=al(5);
attrs7_.add(at(KEY,C_P_209_113));
attrs7_.add(at(MAP,C_P_209_114));
attrs7_.add(at(VALUE,C_P_209_115));
attrs7_.add(at(KEYCLASSNAME,C_P_209_116));
attrs7_.add(at(VARCLASSNAME,C_P_209_117));
at(elt17_,attrs7_);
Element elt18_=el(_doc114,TR);
Element elt19_=el(_doc114,TD);
Text txt0_=tx(_doc114,C_P_209_118);
ad(elt19_,txt0_);
ad(elt18_,elt19_);
Element elt20_=el(_doc114,TD);
Text txt1_=tx(_doc114,C_P_209_119);
ad(elt20_,txt1_);
ad(elt18_,elt20_);
Element elt21_=el(_doc114,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_P_209_120));
at(elt21_,attrs8_);
Element elt22_=el(_doc114,TD);
Element elt23_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_P_209_121));
at(elt23_,attrs9_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt18_,elt21_);
Element elt24_=el(_doc114,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_P_209_122));
at(elt24_,attrs10_);
Element elt25_=el(_doc114,TD);
Element elt26_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_P_209_123));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt18_,elt24_);
Element elt240_=el(_doc114,C_IF);
CustList<Attr> attrs100_=al(1);
attrs100_.add(at(CONDITION,C_P_209_122_0));
at(elt240_,attrs10_);
Element elt250_=el(_doc114,TD);
Element elt260_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs110_=al(1);
attrs110_.add(at(VALUE,C_P_209_123_0));
at(elt260_,attrs110_);
ad(elt250_,elt260_);
ad(elt240_,elt250_);
ad(elt18_,elt240_);
Element elt27_=el(_doc114,C_IF);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(CONDITION,C_P_209_124));
at(elt27_,attrs12_);
Element elt28_=el(_doc114,TD);
Text txt2_=tx(_doc114,C_P_209_125);
ad(elt28_,txt2_);
ad(elt27_,elt28_);
ad(elt18_,elt27_);
Element elt29_=el(_doc114,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_P_209_126));
at(elt29_,attrs13_);
Element elt30_=el(_doc114,TD);
Element elt31_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_P_209_127));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt18_,elt29_);
Element elt32_=el(_doc114,TD);
Text txt3_=tx(_doc114,C_P_209_128);
ad(elt32_,txt3_);
ad(elt18_,elt32_);
Element elt33_=el(_doc114,C_IF);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(CONDITION,C_P_209_129));
at(elt33_,attrs15_);
Element elt34_=el(_doc114,TD);
Text txt4_=tx(_doc114,C_P_209_130);
ad(elt34_,txt4_);
ad(elt33_,elt34_);
ad(elt18_,elt33_);
Element elt35_=el(_doc114,C_IF);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(CONDITION,C_P_209_131));
at(elt35_,attrs16_);
Element elt36_=el(_doc114,TD);
Element elt37_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_P_209_132));
at(elt37_,attrs17_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt18_,elt35_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc114){
Element elt0_=el(_doc114,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_P_209_133));
at(elt0_,attrs0_);
Element elt1_=el(_doc114,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_P_209_134));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc114,UL);
Element elt3_=el(_doc114,C_FOR);
CustList<Attr> attrs2_=al(5);
attrs2_.add(at(KEY,C_P_209_135));
attrs2_.add(at(MAP,C_P_209_136));
attrs2_.add(at(VALUE,C_P_209_137));
attrs2_.add(at(KEYCLASSNAME,C_P_209_138));
attrs2_.add(at(VARCLASSNAME,C_P_209_139));
at(elt3_,attrs2_);
Element elt4_=el(_doc114,LI);
Text txt0_=tx(_doc114,C_P_209_140);
ad(elt4_,txt0_);
Element elt5_=el(_doc114,BR);
ad(elt4_,elt5_);
Element elt6_=el(_doc114,C_IF);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(CONDITION,C_P_209_141));
at(elt6_,attrs3_);
Element elt7_=el(_doc114,UL);
Element elt8_=el(_doc114,C_FOR);
CustList<Attr> attrs4_=al(2);
attrs4_.add(at(LIST,C_P_209_142));
attrs4_.add(at(VAR,C_P_209_143));
at(elt8_,attrs4_);
Element elt9_=el(_doc114,LI);
Text txt1_=tx(_doc114,C_P_209_144);
ad(elt9_,txt1_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
}
