package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageTarotResults extends PageCardsCommon{
private static final String C_3_1_0="results";
private static final String C_3_1_1="javahtml";
private static final String C_3_1_2="msg,results";
private static final String C_3_1_3="resources_cards/css/tarot.css";
private static final String C_3_1_4="stylesheet";
private static final String C_3_1_5="text/css";
private static final String C_3_1_6="playClassicGame()";
private static final String C_3_1_7="msg,classic_points";
private static final String C_3_1_8="msg,classic_oulders";
private static final String C_3_1_9="{numberOudlersTaker}";
private static final String C_3_1_10="msg,classic_need";
private static final String C_3_1_11="{needlyScoresTaker}";
private static final String C_3_1_12="msg,classic_won";
private static final String C_3_1_13="{scoreTaker}";
private static final String C_3_1_14="msg,classic_att";
private static final String C_3_1_15="msg,classic_taker";
private static final String C_3_1_16="{taker}";
private static final String C_3_1_17="msg,classic_parts";
private static final String C_3_1_18="calledPlayers.isEmpty()";
private static final String C_3_1_19="msg,classic_none_part";
private static final String C_3_1_20="!calledPlayers.isEmpty()";
private static final String C_3_1_21="p";
private static final String C_3_1_22="calledPlayers";
private static final String C_3_1_23="java.lang.String";
private static final String C_3_1_24="{p}";
private static final String C_3_1_25="msg,classic_called";
private static final String C_3_1_26="calledCardsList.isEmpty()";
private static final String C_3_1_27="msg,classic_none_called";
private static final String C_3_1_28="!calledCardsList.isEmpty()";
private static final String C_3_1_29="c";
private static final String C_3_1_30="calledCardsList";
private static final String C_3_1_31="java.lang.String";
private static final String C_3_1_32="{c}";
private static final String C_3_1_33="msg,classic_bid_end";
private static final String C_3_1_34="{bidString()}";
private static final String C_3_1_35="msg,classic_res";
private static final String C_3_1_36="win()";
private static final String C_3_1_37="msg,win";
private static final String C_3_1_38="equality()";
private static final String C_3_1_39="msg,equality";
private static final String C_3_1_40="loose()";
private static final String C_3_1_41="msg,loose";
private static final String C_3_1_42="successfulBid()";
private static final String C_3_1_43="msg,successful";
private static final String C_3_1_44="bidString()";
private static final String C_3_1_45="absoluteDiff()";
private static final String C_3_1_46="midBid()";
private static final String C_3_1_47="msg,mid";
private static final String C_3_1_48="bidString()";
private static final String C_3_1_49="failedBid()";
private static final String C_3_1_50="msg,failed";
private static final String C_3_1_51="bidString()";
private static final String C_3_1_52="absoluteDiff()";
private static final String C_3_1_53="successfulDeclaredSlamAttack()";
private static final String C_3_1_54="msg,successfulDeclaredSlam";
private static final String C_3_1_55="successfulNoDeclaredSlamAttack()";
private static final String C_3_1_56="msg,successfulNoDeclaredSlam";
private static final String C_3_1_57="failedSlamAttack()";
private static final String C_3_1_58="msg,failedDeclaredSlam";
private static final String C_3_1_59="noSlamAttack()";
private static final String C_3_1_60="msg,noSlamAttack";
private static final String C_3_1_61="slamDefense()";
private static final String C_3_1_62="msg,noSlamDefense";
private static final String C_3_1_63="noSlamDefense()";
private static final String C_3_1_64="msg,noSlamDefense";
private static final String C_3_1_65="playVariantModeGame()";
private static final String C_3_1_66="msg,variant_res";
private static final String C_3_1_67="msg,variant_res_1";
private static final String C_3_1_68="{maxDifference}";
private static final String C_3_1_69="msg,variant_res_2";
private static final String C_3_1_70="{initialUserPosition}";
private static final String C_3_1_71="msg,variant_res_3";
private static final String C_3_1_72="{finalUserPosition}";
private static final String C_3_1_73="1";
private static final String C_3_1_74="msg,variant_scores";
private static final String C_3_1_75="p";
private static final String C_3_1_76="nicknames";
private static final String C_3_1_77="java.lang.String";
private static final String C_3_1_78="{p}";
private static final String C_3_1_79="l";
private static final String C_3_1_80="linesDeal";
private static final String C_3_1_81="cards.beans.LineDeal";
private static final String C_3_1_82="{l.number}";
private static final String C_3_1_83="s";
private static final String C_3_1_84="l.scores";
private static final String C_3_1_85="java.lang.Long";
private static final String C_3_1_86="{s}";
private PageTarotResults(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _docTarot){
Element elt0_=el(_docTarot,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_BEAN,C_3_1_0));
attrs0_.add(at(XMLNS_C,C_3_1_1));
at(elt0_,attrs0_);
Element elt1_=el(_docTarot,HEAD);
Element elt2_=el(_docTarot,TITLE);
Element elt3_=el(_docTarot,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_3_1_2));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_docTarot,LINK);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(HREF,C_3_1_3));
attrs2_.add(at(REL,C_3_1_4));
attrs2_.add(at(TYPE,C_3_1_5));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_docTarot,BODY);
build0(elt5_,_docTarot);
build1(elt5_,_docTarot);
build2(elt5_,_docTarot);
build3(elt5_,_docTarot);
build4(elt5_,_docTarot);
ad(elt0_,elt5_);
_docTarot.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_3_1_6));
at(elt0_,attrs0_);
Element elt1_=el(_doc,H1);
Element elt2_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_3_1_7));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,UL);
Element elt4_=el(_doc,LI);
Element elt5_=el(_doc,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_3_1_8));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Text txt0_=tx(_doc,C_3_1_9);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,LI);
Element elt7_=el(_doc,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_3_1_10));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
Text txt1_=tx(_doc,C_3_1_11);
ad(elt6_,txt1_);
ad(elt3_,elt6_);
Element elt8_=el(_doc,LI);
Element elt9_=el(_doc,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_3_1_12));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
Text txt2_=tx(_doc,C_3_1_13);
ad(elt8_,txt2_);
ad(elt3_,elt8_);
ad(elt0_,elt3_);
Element elt10_=el(_doc,H1);
Element elt11_=el(_doc,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_3_1_14));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt0_,elt10_);
Element elt12_=el(_doc,UL);
Element elt13_=el(_doc,LI);
Element elt14_=el(_doc,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_3_1_15));
at(elt14_,attrs6_);
ad(elt13_,elt14_);
Text txt3_=tx(_doc,C_3_1_16);
ad(elt13_,txt3_);
ad(elt12_,elt13_);
Element elt15_=el(_doc,LI);
Element elt16_=el(_doc,C_MESSAGE);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(VALUE,C_3_1_17));
at(elt16_,attrs7_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,C_IF);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(CONDITION,C_3_1_18));
at(elt17_,attrs8_);
Element elt18_=el(_doc,C_MESSAGE);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(VALUE,C_3_1_19));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt19_=el(_doc,C_IF);
CustList<Attr> attrs10_=al(1);
attrs10_.add(at(CONDITION,C_3_1_20));
at(elt19_,attrs10_);
Element elt20_=el(_doc,UL);
Element elt21_=el(_doc,C_FOR);
CustList<Attr> attrs11_=al(3);
attrs11_.add(at(VAR,C_3_1_21));
attrs11_.add(at(LIST,C_3_1_22));
attrs11_.add(at(CLASSNAME,C_3_1_23));
at(elt21_,attrs11_);
Element elt22_=el(_doc,LI);
Text txt4_=tx(_doc,C_3_1_24);
ad(elt22_,txt4_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt15_,elt19_);
ad(elt12_,elt15_);
Element elt23_=el(_doc,LI);
Element elt24_=el(_doc,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_3_1_25));
at(elt24_,attrs12_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,C_IF);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(CONDITION,C_3_1_26));
at(elt25_,attrs13_);
Element elt26_=el(_doc,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_3_1_27));
at(elt26_,attrs14_);
ad(elt25_,elt26_);
ad(elt23_,elt25_);
Element elt27_=el(_doc,C_IF);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(CONDITION,C_3_1_28));
at(elt27_,attrs15_);
Element elt28_=el(_doc,UL);
Element elt29_=el(_doc,C_FOR);
CustList<Attr> attrs16_=al(3);
attrs16_.add(at(VAR,C_3_1_29));
attrs16_.add(at(LIST,C_3_1_30));
attrs16_.add(at(CLASSNAME,C_3_1_31));
at(elt29_,attrs16_);
Element elt30_=el(_doc,LI);
Text txt5_=tx(_doc,C_3_1_32);
ad(elt30_,txt5_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt23_,elt27_);
ad(elt12_,elt23_);
Element elt31_=el(_doc,LI);
Element elt32_=el(_doc,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_3_1_33));
at(elt32_,attrs17_);
ad(elt31_,elt32_);
Text txt6_=tx(_doc,C_3_1_34);
ad(elt31_,txt6_);
ad(elt12_,elt31_);
ad(elt0_,elt12_);
Element elt33_=el(_doc,H1);
Element elt34_=el(_doc,C_MESSAGE);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(VALUE,C_3_1_35));
at(elt34_,attrs18_);
ad(elt33_,elt34_);
ad(elt0_,elt33_);
Element elt35_=el(_doc,P);
Element elt36_=el(_doc,C_IF);
CustList<Attr> attrs19_=al(1);
attrs19_.add(at(CONDITION,C_3_1_36));
at(elt36_,attrs19_);
Element elt37_=el(_doc,C_MESSAGE);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(VALUE,C_3_1_37));
at(elt37_,attrs20_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
Element elt38_=el(_doc,C_IF);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(CONDITION,C_3_1_38));
at(elt38_,attrs21_);
Element elt39_=el(_doc,C_MESSAGE);
CustList<Attr> attrs22_=al(1);
attrs22_.add(at(VALUE,C_3_1_39));
at(elt39_,attrs22_);
ad(elt38_,elt39_);
ad(elt35_,elt38_);
Element elt40_=el(_doc,C_IF);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(CONDITION,C_3_1_40));
at(elt40_,attrs23_);
Element elt41_=el(_doc,C_MESSAGE);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(VALUE,C_3_1_41));
at(elt41_,attrs24_);
ad(elt40_,elt41_);
ad(elt35_,elt40_);
ad(elt0_,elt35_);
Element elt42_=el(_doc,BR);
ad(elt0_,elt42_);
Element elt43_=el(_doc,P);
Element elt44_=el(_doc,C_IF);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(CONDITION,C_3_1_42));
at(elt44_,attrs25_);
Element elt45_=el(_doc,C_MESSAGE);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(VALUE,C_3_1_43));
at(elt45_,attrs26_);
Element elt46_=el(_doc,PARAM);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(VALUE,C_3_1_44));
at(elt46_,attrs27_);
ad(elt45_,elt46_);
Element elt47_=el(_doc,PARAM);
CustList<Attr> attrs28_=al(1);
attrs28_.add(at(VALUE,C_3_1_45));
at(elt47_,attrs28_);
ad(elt45_,elt47_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
Element elt48_=el(_doc,C_IF);
CustList<Attr> attrs29_=al(1);
attrs29_.add(at(CONDITION,C_3_1_46));
at(elt48_,attrs29_);
Element elt49_=el(_doc,C_MESSAGE);
CustList<Attr> attrs30_=al(1);
attrs30_.add(at(VALUE,C_3_1_47));
at(elt49_,attrs30_);
Element elt50_=el(_doc,PARAM);
CustList<Attr> attrs31_=al(1);
attrs31_.add(at(VALUE,C_3_1_48));
at(elt50_,attrs31_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt43_,elt48_);
Element elt51_=el(_doc,C_IF);
CustList<Attr> attrs32_=al(1);
attrs32_.add(at(CONDITION,C_3_1_49));
at(elt51_,attrs32_);
Element elt52_=el(_doc,C_MESSAGE);
CustList<Attr> attrs33_=al(1);
attrs33_.add(at(VALUE,C_3_1_50));
at(elt52_,attrs33_);
Element elt53_=el(_doc,PARAM);
CustList<Attr> attrs34_=al(1);
attrs34_.add(at(VALUE,C_3_1_51));
at(elt53_,attrs34_);
ad(elt52_,elt53_);
Element elt54_=el(_doc,PARAM);
CustList<Attr> attrs35_=al(1);
attrs35_.add(at(VALUE,C_3_1_52));
at(elt54_,attrs35_);
ad(elt52_,elt54_);
ad(elt51_,elt52_);
ad(elt43_,elt51_);
ad(elt0_,elt43_);
Element elt55_=el(_doc,BR);
ad(elt0_,elt55_);
Element elt56_=el(_doc,P);
Element elt57_=el(_doc,C_IF);
CustList<Attr> attrs36_=al(1);
attrs36_.add(at(CONDITION,C_3_1_53));
at(elt57_,attrs36_);
Element elt58_=el(_doc,C_MESSAGE);
CustList<Attr> attrs37_=al(1);
attrs37_.add(at(VALUE,C_3_1_54));
at(elt58_,attrs37_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
Element elt59_=el(_doc,C_IF);
CustList<Attr> attrs38_=al(1);
attrs38_.add(at(CONDITION,C_3_1_55));
at(elt59_,attrs38_);
Element elt60_=el(_doc,C_MESSAGE);
CustList<Attr> attrs39_=al(1);
attrs39_.add(at(VALUE,C_3_1_56));
at(elt60_,attrs39_);
ad(elt59_,elt60_);
ad(elt56_,elt59_);
Element elt61_=el(_doc,C_IF);
CustList<Attr> attrs40_=al(1);
attrs40_.add(at(CONDITION,C_3_1_57));
at(elt61_,attrs40_);
Element elt62_=el(_doc,C_MESSAGE);
CustList<Attr> attrs41_=al(1);
attrs41_.add(at(VALUE,C_3_1_58));
at(elt62_,attrs41_);
ad(elt61_,elt62_);
ad(elt56_,elt61_);
Element elt63_=el(_doc,C_IF);
CustList<Attr> attrs42_=al(1);
attrs42_.add(at(CONDITION,C_3_1_59));
at(elt63_,attrs42_);
Element elt64_=el(_doc,C_MESSAGE);
CustList<Attr> attrs43_=al(1);
attrs43_.add(at(VALUE,C_3_1_60));
at(elt64_,attrs43_);
ad(elt63_,elt64_);
ad(elt56_,elt63_);
Element elt65_=el(_doc,C_IF);
CustList<Attr> attrs44_=al(1);
attrs44_.add(at(CONDITION,C_3_1_61));
at(elt65_,attrs44_);
Element elt66_=el(_doc,C_MESSAGE);
CustList<Attr> attrs45_=al(1);
attrs45_.add(at(VALUE,C_3_1_62));
at(elt66_,attrs45_);
ad(elt65_,elt66_);
ad(elt56_,elt65_);
Element elt67_=el(_doc,C_IF);
CustList<Attr> attrs46_=al(1);
attrs46_.add(at(CONDITION,C_3_1_63));
at(elt67_,attrs46_);
Element elt68_=el(_doc,C_MESSAGE);
CustList<Attr> attrs47_=al(1);
attrs47_.add(at(VALUE,C_3_1_64));
at(elt68_,attrs47_);
ad(elt67_,elt68_);
ad(elt56_,elt67_);
ad(elt0_,elt56_);
Element elt69_=el(_doc,BR);
ad(elt0_,elt69_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_3_1_65));
at(elt0_,attrs0_);
Element elt1_=el(_doc,H1);
Element elt2_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_3_1_66));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,UL);
Element elt4_=el(_doc,LI);
Element elt5_=el(_doc,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_3_1_67));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Text txt0_=tx(_doc,C_3_1_68);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,LI);
Element elt7_=el(_doc,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_3_1_69));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
Text txt1_=tx(_doc,C_3_1_70);
ad(elt6_,txt1_);
ad(elt3_,elt6_);
Element elt8_=el(_doc,LI);
Element elt9_=el(_doc,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_3_1_71));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
Text txt2_=tx(_doc,C_3_1_72);
ad(elt8_,txt2_);
ad(elt3_,elt8_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,BR);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,TABLE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(BORDER,C_3_1_73));
at(elt0_,attrs0_);
Element elt1_=el(_doc,CAPTION);
Element elt2_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_3_1_74));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,THEAD);
Element elt4_=el(_doc,TR);
Element elt5_=el(_doc,TD);
ad(elt4_,elt5_);
Element elt6_=el(_doc,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(VAR,C_3_1_75));
attrs2_.add(at(LIST,C_3_1_76));
attrs2_.add(at(CLASSNAME,C_3_1_77));
at(elt6_,attrs2_);
Element elt7_=el(_doc,TD);
Text txt0_=tx(_doc,C_3_1_78);
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt8_=el(_doc,TBODY);
Element elt9_=el(_doc,C_FOR);
CustList<Attr> attrs3_=al(3);
attrs3_.add(at(VAR,C_3_1_79));
attrs3_.add(at(LIST,C_3_1_80));
attrs3_.add(at(CLASSNAME,C_3_1_81));
at(elt9_,attrs3_);
Element elt10_=el(_doc,TR);
Element elt11_=el(_doc,TD);
Text txt1_=tx(_doc,C_3_1_82);
ad(elt11_,txt1_);
ad(elt10_,elt11_);
Element elt12_=el(_doc,C_FOR);
CustList<Attr> attrs4_=al(3);
attrs4_.add(at(VAR,C_3_1_83));
attrs4_.add(at(LIST,C_3_1_84));
attrs4_.add(at(CLASSNAME,C_3_1_85));
at(elt12_,attrs4_);
Element elt13_=el(_doc,TD);
Text txt2_=tx(_doc,C_3_1_86);
ad(elt13_,txt2_);
ad(elt12_,elt13_);
ad(elt10_,elt12_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
ad(elt0_,elt8_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc){
Element elt0_=el(_doc,BR);
ad(_body,elt0_);
}
}
