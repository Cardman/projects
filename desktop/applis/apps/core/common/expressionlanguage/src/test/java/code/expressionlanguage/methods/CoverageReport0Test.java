package code.expressionlanguage.methods;

import code.expressionlanguage.Argument;
import code.expressionlanguage.ContextEl;
import code.expressionlanguage.functionid.MethodId;
import code.expressionlanguage.linkage.ExportCst;
import code.util.CustList;
import code.util.StringMap;
import org.junit.Test;

public final class CoverageReport0Test extends ProcessMethodCommon {
    private static final String CUST_ITER_PATH = "src/pkg/CustIter";
    private static final String CUST_LIST_PATH = "src/pkg/CustList";
    private static final String CUST_ITER_TABLE_PATH = "src/pkg/CustIterTable";
    private static final String CUST_PAIR_PATH = "src/pkg/CustPair";
    private static final String CUST_TABLE_PATH = "src/pkg/CustTable";
    @Test
    public void coverage1Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage2Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=8;\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage3Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage4Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 2 ?{4i}:{6i};\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 2 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage5Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">t</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage6Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   break;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   break;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage7Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"106\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"106\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage8Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  while (true){\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   return sum;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">while</span> (<span class=\"f\">true</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"104\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"104\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage9Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"124\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"143\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"124\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"143\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage10Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"60\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"91\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"119\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"60\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage11Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int infoInt()1i;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(2i)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  java.lang.Object arr = $class(MyAnnot).getDeclaredMethods()[0i].getDefaultValue();\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class(java.lang.Integer)){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  java.lang.Integer a = $(java.lang.Integer)arr;\n");
        xml_.append("  $if (a != 1i){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">infoInt</a>()<span class=\"f2\">1i</span>;\n" +
                "}\n" +
                "<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"n2\">2i</span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"83\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"114\">catching</a>(){\n" +
                "  java.lang.Object <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"145\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>.<span class=\"f\">getDefaultValue()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"145\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(java.lang.Integer)</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  java.lang.Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"318\">a</a> </span>=<span class=\"f\"> $(java.lang.Integer)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"145\">arr</a></span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"318\">a</a> </span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage12Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int st = 0;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=8;\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"46\">st</a> </span>=<span class=\"g\"> 0</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"76\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage13Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $if(t<0){\n");
        xml_.append("   $return 1i/0i;\n");
        xml_.append("  }\n");
        xml_.append("  $else{\n");
        xml_.append("   t=1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"false\">&lt;</a><span class=\"f\">0</span></span>){\n" +
                "   $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "  }\n" +
                "  $else{\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage14Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $if(t>=0){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append("  $else{\n");
        xml_.append("   $return 1i/0i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                "  $else{\n" +
                "   $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage15Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 10;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage16Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=8;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 10;\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage17Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=9;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=16;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">9</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 10;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"n\">16</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage18Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=9;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=16;\n");
        xml_.append("   $default;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">9</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 10;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"n\">16</span></span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">$default</a></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage19Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=8;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=16;\n");
        xml_.append("   $default;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 10;\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">16</span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$default</a></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage20Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return call();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.$static call()\" href=\"#"+ExportCst.PREF_REF+"99\">call</a>()</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"99\">call</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage21Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"95\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage22Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$operator- pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field-q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$operator<a name=\""+ExportCst.PREF_REF+"124\">-</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"141\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"151\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"163\">out</a> </span>=<span class=\"n\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"163\">out</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a> </span></span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"141\">p</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span>-<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"151\">q</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"163\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"245\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"268\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"297\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"316\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"346\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"245\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"346\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"346\">two</a></span></span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"453\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage22_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+[pkg.Ex;] Ex (Ex p, Ex q){\n");
        xml_.append(" Ex out = $new Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$operator-[pkg.Ex;] Ex (Ex p, Ex q){\n");
        xml_.append(" Ex out = $new Ex();\n");
        xml_.append(" out.field = p.field-q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a>[<span class=\"i\">pkg.Ex</span>;] <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <a name=\""+ExportCst.PREF_REF+"27\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <a name=\""+ExportCst.PREF_REF+"33\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"41\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"41\">out</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"27\">p</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"33\">q</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"41\">out</a></span>;\n" +
                "}\n" +
                "$operator<a name=\""+ExportCst.PREF_REF+"113\">-</a>[<span class=\"i\">pkg.Ex</span>;] <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <a name=\""+ExportCst.PREF_REF+"131\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <a name=\""+ExportCst.PREF_REF+"137\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"145\">out</a> </span>=<span class=\"n\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">Ex</a>()</span></span>;\n" +
                " <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"145\">out</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a> </span></span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"131\">p</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a></span></span>-<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"137\">q</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"145\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"223\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"246\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"275\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"294\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"324\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"223\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"324\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"324\">two</a></span></span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"246\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"431\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage23Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $return 1i/0i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch(Object o){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "   }\n" +
                "   $return <span class=\"n\">2</span>;\n" +
                "  } <span class=\"f\"><a title=\"1/1\">$catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"154\">o</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage_23Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $throw $null;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch {\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $throw <span class=\"f\">$null</span>;\n" +
                "   }\n" +
                "   $return <span class=\"n\">2</span>;\n" +
                "  } <span class=\"f\"><a title=\"1/1\">$catch</a></span> {\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage__23Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t<0){\n");
        xml_.append("    $throw $null;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch {\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"false\">&lt;</a><span class=\"f\">0</span></span>){\n" +
                "    $throw <span class=\"n\">$null</span>;\n" +
                "   }\n" +
                "   $return <span class=\"f\">2</span>;\n" +
                "  } <span class=\"n\"><a title=\"0/1\">$catch</a></span> {\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"n\">1i</span></span>;\n" +
                "   $return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage24Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=-1i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $return 1i/0i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch(Object o){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">-<span class=\"f\">1i</span></span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"false\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "   }\n" +
                "   $return <span class=\"f\">2</span>;\n" +
                "  } <span class=\"n\"><a title=\"0/1\">$catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"155\">o</a>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"n\">1i</span></span>;\n" +
                "   $return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage25_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE;\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(){\n");
        xml_.append("  field=5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return $values(ExEnum).length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum()\" href=\"#"+ExportCst.PREF_REF+"51\">ONE</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"43\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"51\">ExEnum(</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"43\">field</a></span>=<span class=\"g\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"118\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">$values(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a>)</span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage25__Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE;\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(){\n");
        xml_.append("  field=5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return $valueOf(ExEnum,\"ONE\").field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum()\" href=\"#"+ExportCst.PREF_REF+"51\">ONE</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"43\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"51\">ExEnum(</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"43\">field</a></span>=<span class=\"g\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"118\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">$valueOf(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a>,<span class=\"f\"><span class=\"s\">\"ONE\"</span></span>)</span>.<span class=\"f\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"43\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage25Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE;\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(){\n");
        xml_.append("  field=5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum()\" href=\"#"+ExportCst.PREF_REF+"51\">ONE</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"43\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"51\">ExEnum(</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"43\">field</a></span>=<span class=\"g\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"118\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"147\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"147\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"201\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"220\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"134\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"201\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"147\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"220\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"147\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage26Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE(5);\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"54\">ONE</a>(<span class=\"g\">5</span>)</span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"46\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"54\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"65\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"46\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"65\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"106\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"134\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"150\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"163\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"163\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"217\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"236\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"150\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"217\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"163\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"236\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"163\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage27Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" FOUR(5);\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"55\">FOUR</a>(<span class=\"g\">5</span>)</span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"47\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"55\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"66\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"47\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"66\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"135\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"151\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"164\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"218\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"237\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"151\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"218\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"164\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"237\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"164\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage28Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">ONE</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"46\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"74\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"90\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"103\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"157\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"176\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"90\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"157\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"103\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"176\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"103\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage29Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" FOUR(5){\n");
        xml_.append("  (int p){\n");
        xml_.append("   super(p);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum-FOUR.pkg.ExEnum-FOUR(int)\" href=\"#"+ExportCst.PREF_REF+"37\">FOUR</a>(<span class=\"g\">5</span>)</span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"37\">(</a>int <a name=\""+ExportCst.PREF_REF+"42\">p</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"87\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"42\">p</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"79\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"87\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"98\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"79\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"98\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"139\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"183\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"196\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"250\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"269\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"183\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"250\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"196\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"269\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"196\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage30Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" FOUR{\n");
        xml_.append("  (){\n");
        xml_.append("   this(5);\n");
        xml_.append("  }\n");
        xml_.append("  (int p){\n");
        xml_.append("   super(p);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum-FOUR.pkg.ExEnum-FOUR()\" href=\"#"+ExportCst.PREF_REF+"34\">FOUR</a></span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"34\">(</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum-FOUR.pkg.ExEnum-FOUR(int)\" href=\"#"+ExportCst.PREF_REF+"56\">this</a>(<span class=\"g\">5</span>)</span>;\n" +
                "  }\n" +
                "  <a name=\""+ExportCst.PREF_REF+"56\">(</a>int <a name=\""+ExportCst.PREF_REF+"61\">p</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"106\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"61\">p</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"98\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"106\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"117\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"98\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"117\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"158\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"186\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"202\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"215\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"215\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"269\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"288\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"202\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"269\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"215\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"288\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"215\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage31Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" FOUR{\n");
        xml_.append("  public int field;\n");
        xml_.append(" };\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">FOUR</a></span>{\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"45\">field</a></span>;\n" +
                " };\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"71\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"99\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"115\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"128\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"128\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for (int <a name=\""+ExportCst.PREF_REF+"182\">j</a></span>:<span class=\"n\">{<span class=\"n\">0</span>,<span class=\"n\">1</span>}</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"201\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"115\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"182\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"128\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"201\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"128\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage32Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Ex(pkg.Ex f,pkg.Ex s) {\n");
        xml_.append(" return new pkg.Ex(f.field + s.field);\n");
        xml_.append("}\n");
        xml_.append("operator+ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field);\n");
        xml_.append("}\n");
        xml_.append("operator++ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field+1);\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Ex(int field){\n");
        xml_.append("  this.field = field;\n");
        xml_.append(" }\n");
        xml_.append(" public Ex(){\n");
        xml_.append("  this(0);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex one = new Ex(5);\n");
        xml_.append("  Ex two = new Ex(3);\n");
        xml_.append("  var three = one + two;\n");
        xml_.append("  var four = + two;\n");
        xml_.append("  var five = three += four;\n");
        xml_.append("  var six = new Ex(6);\n");
        xml_.append("  var seven = !(six != six);\n");
        xml_.append("  if (seven){\n");
        xml_.append("   seven = !seven;\n");
        xml_.append("  } else if (seven){\n");
        xml_.append("   seven = !seven;\n");
        xml_.append("  }\n");
        xml_.append("  six[0] += 8;\n");
        xml_.append("  six[1] = 8;\n");
        xml_.append("  Ex eight = new Ex(8);\n");
        xml_.append("  eight++;\n");
        xml_.append("  ++eight;\n");
        xml_.append("  six[2]++;\n");
        xml_.append("  ++six[3];\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr += new ExTwo();\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  return t[0]+caller();\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int p){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int p){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append(" public static int caller(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public String $toString(){\n");
        xml_.append("  return null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"24\">f</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"33\">s</a>) {\n" +
                " return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"24\">f</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"33\">s</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"87\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"103\">f</a>) {\n" +
                " return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">f</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"147\">++</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"164\">f</a>) {\n" +
                " return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">f</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>+<span class=\"f\">1</span></span>)</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"215\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"244\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"258\">field</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"258\">field</a></span></span>;\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"292\">public Ex(</a>){\n" +
                "  <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">this</a>(<span class=\"n\">0</span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"338\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"353\">one</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">5</span>)</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"375\">two</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">3</span>)</span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"398\">three</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"353\">one</a> </span><a title=\"static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"8\">+</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"375\">two</a></span></span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"423\">four</a> </span>=<span class=\"f\"> <a title=\"static +(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"87\">+</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"375\">two</a></span></span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"443\">five</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"398\">three</a> </span><a title=\"static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"8\">+</a>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"423\">four</a></span></span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"471\">six</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">6</span>)</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"494\">seven</a> </span>=<span class=\"p\"> <a title=\"true\">!</a><span class=\"p\">(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"471\">six</a> </span><a title=\"false\">!=</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"471\">six</a></span></span>)</span></span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a></span>){\n" +
                "   <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a> </span>=<span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a></span></span></span>;\n" +
                "  } <span class=\"n\">else if</span> (<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a> </span>=<span class=\"n\"> !<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"494\">seven</a></span></span></span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"471\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">[</a><span class=\"f\">0</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">]</a> </span></span>+<a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"863\">=</a><span class=\"f\"> 8</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"471\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"863\">[</a><span class=\"f\">1</span><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"863\">]</a> </span></span>=<span class=\"f\"> 8</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"628\">eight</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">8</span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"628\">eight</a></span><a title=\"static ++(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"147\">+</a>+</span>;\n" +
                "  <span class=\"f\"><a title=\"static ++(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"147\">+</a>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"628\">eight</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"471\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">[</a><span class=\"f\">2</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">]</a></span></span>+<a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"863\">+</a></span>;\n" +
                "  <span class=\"f\">+<a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"863\">+</a><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"471\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">[</a><span class=\"f\">3</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"818\">]</a></span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"699\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"712\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"712\">toStr</a> </span><i>+</i>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"955\">ExTwo</a>()</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"756\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"699\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"756\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>+<span class=\"f\"><a title=\"pkg.Ex.static caller()\" href=\"#"+ExportCst.PREF_REF+"915\">caller</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"818\">this</a>(int <a name=\""+ExportCst.PREF_REF+"827\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"863\">this</a>(int <a name=\""+ExportCst.PREF_REF+"872\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"915\">caller</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"955\">pkg.ExTwo</a> {\n" +
                " public String <a name=\""+ExportCst.PREF_REF+"982\">$toString</a>(){\n" +
                "  return <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage33Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Ex(pkg.Ex f,pkg.Ex s) {\n");
        xml_.append(" return new pkg.Ex(f.field + s.field);\n");
        xml_.append("}\n");
        xml_.append("operator+ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field);\n");
        xml_.append("}\n");
        xml_.append("operator++ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field+1);\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Ex(int field){\n");
        xml_.append("  this.field = field;\n");
        xml_.append(" }\n");
        xml_.append(" public Ex(){\n");
        xml_.append("  this(0);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var one = true;\n");
        xml_.append("  var two = true;\n");
        xml_.append("  var three = one && two;\n");
        xml_.append("  var four = !one && two;\n");
        xml_.append("  var five = !one && !two;\n");
        xml_.append("  var eight = one && !two;\n");
        xml_.append("  var six = new Ex(6);\n");
        xml_.append("  var seven = !(six != six);\n");
        xml_.append("  for (int i = 0; i < 2; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  six[0] += 8;\n");
        xml_.append("  six[1] = 8;\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr += new ExTwo();\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  s+=1;\n");
        xml_.append("  return t[0]+caller();\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int p){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int p){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append(" public static int caller(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"24\">f</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"33\">s</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"24\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>+<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"33\">s</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"87\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"103\">f</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"103\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"147\">++</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"164\">f</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"164\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>+<span class=\"n\">1</span></span>)</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"215\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"244\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"258\">field</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"258\">field</a></span></span>;\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"292\">public Ex(</a>){\n" +
                "  <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">this</a>(<span class=\"n\">0</span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"338\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"354\">one</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"372\">two</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"390\">three</a> </span>=<span class=\"p\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"416\">four</a> </span>=<span class=\"p\"><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span></span><a title=\"false\">&amp;</a>&amp;<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"442\">five</a> </span>=<span class=\"p\"><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span></span><a title=\"false\">&amp;</a>&amp;<span class=\"n\"> !<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"469\">eight</a> </span>=<span class=\"p\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span><a title=\"true\">&amp;</a><a title=\"false\">&amp;</a><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"496\">six</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">6</span>)</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"519\">seven</a> </span>=<span class=\"p\"> <a title=\"true\">!</a><span class=\"p\">(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a> </span><a title=\"false\">!=</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span></span>)</span></span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"553\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a> </span>&lt;<span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"519\">seven</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"785\">[</a><span class=\"f\">0</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"785\">]</a> </span></span>+<a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"830\">=</a><span class=\"f\"> 8</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"830\">[</a><span class=\"f\">1</span><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"830\">]</a> </span></span>=<span class=\"f\"> 8</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"658\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"671\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"671\">toStr</a> </span>+=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"922\">ExTwo</a>()</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"715\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"658\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"658\">s</a></span>+=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"715\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>+<span class=\"f\"><a title=\"pkg.Ex.static caller()\" href=\"#"+ExportCst.PREF_REF+"882\">caller</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"785\">this</a>(int <a name=\""+ExportCst.PREF_REF+"794\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"830\">this</a>(int <a name=\""+ExportCst.PREF_REF+"839\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"882\">caller</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"922\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage34Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Ex(pkg.Ex f,pkg.Ex s) {\n");
        xml_.append(" return new pkg.Ex(f.field + s.field);\n");
        xml_.append("}\n");
        xml_.append("operator+ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field);\n");
        xml_.append("}\n");
        xml_.append("operator++ pkg.Ex(pkg.Ex f) {\n");
        xml_.append(" return new pkg.Ex(f.field+1);\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Ex(int field){\n");
        xml_.append("  this.field = field;\n");
        xml_.append(" }\n");
        xml_.append(" public Ex(){\n");
        xml_.append("  this(0);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var one = true;\n");
        xml_.append("  var two = true;\n");
        xml_.append("  var three = one || two;\n");
        xml_.append("  var four = !one || two;\n");
        xml_.append("  var five = !one || !two;\n");
        xml_.append("  var eight = one || !two;\n");
        xml_.append("  var six = new Ex(6);\n");
        xml_.append("  var seven = !(six != six);\n");
        xml_.append("  for (int i = 0; i < 4; i++){\n");
        xml_.append("   if (i % 2 == 0 && i > 1){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  six[0] += 8;\n");
        xml_.append("  six[1] = 8;\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr += new ExTwo();\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  s+=1;\n");
        xml_.append("  return t[0]+caller();\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int p){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int p){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append(" public static int caller(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"24\">f</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"33\">s</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"24\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>+<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"33\">s</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"87\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"103\">f</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"103\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>)</span>;\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"147\">++</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"164\">f</a>) {\n" +
                " return <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">pkg.Ex</a>(<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"164\">f</a></span>.<span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span></span>+<span class=\"n\">1</span></span>)</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"215\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"244\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"258\">field</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"258\">field</a></span></span>;\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"292\">public Ex(</a>){\n" +
                "  <span class=\"n\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">this</a>(<span class=\"n\">0</span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"338\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"354\">one</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"372\">two</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"390\">three</a> </span>=<span class=\"p\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span><a title=\"true\">|</a>|<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"416\">four</a> </span>=<span class=\"p\"><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"442\">five</a> </span>=<span class=\"p\"><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span></span><a title=\"false\">|</a><a title=\"false\">|</a><span class=\"p\"> <a title=\"false\">!</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"469\">eight</a> </span>=<span class=\"p\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"354\">one</a> </span><a title=\"true\">|</a>|<span class=\"n\"> !<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"372\">two</a></span></span></span></span>;\n" +
                "  <b title=\"pkg.Ex\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"496\">six</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"244\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"215\">Ex</a>(<span class=\"f\">6</span>)</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"519\">seven</a> </span>=<span class=\"p\"> <a title=\"true\">!</a><span class=\"p\">(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a> </span><a title=\"false\">!=</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span></span>)</span></span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"553\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a> </span>&lt;<span class=\"f\"> 4</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"553\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0 </span></span>&amp;&amp;<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"553\">i</a> </span>&gt;<span class=\"f\"> 1</span></span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"519\">seven</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"791\">[</a><span class=\"f\">0</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"791\">]</a> </span></span>+<a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"836\">=</a><span class=\"f\"> 8</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">six</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"836\">[</a><span class=\"f\">1</span><a title=\"pkg.Ex.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"836\">]</a> </span></span>=<span class=\"f\"> 8</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"664\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"677\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"677\">toStr</a> </span>+=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"928\">ExTwo</a>()</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"721\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"664\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"664\">s</a></span>+=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"721\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>+<span class=\"f\"><a title=\"pkg.Ex.static caller()\" href=\"#"+ExportCst.PREF_REF+"888\">caller</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"791\">this</a>(int <a name=\""+ExportCst.PREF_REF+"800\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"836\">this</a>(int <a name=\""+ExportCst.PREF_REF+"845\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"236\">field</a> </span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"888\">caller</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"928\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage35Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var s = \"\"<\"\";\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr += 1;\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"><span class=\"f\"> <span class=\"s\">\"\"</span></span>&lt;<span class=\"f\"><span class=\"s\">\"\"</span></span></span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"74\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"74\">toStr</a> </span>+=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage36Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var s = \"\"<\"\";\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  Object right = 1;\n");
        xml_.append("  toStr += right;\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"><span class=\"f\"> <span class=\"s\">\"\"</span></span>&lt;<span class=\"f\"><span class=\"s\">\"\"</span></span></span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"74\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  Object <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"95\">right</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"74\">toStr</a> </span><i>+</i>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"95\">right</a></span></span>;\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage37Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var s = \"\"<\"\";\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  Object[] right = null;\n");
        xml_.append("  toStr += right;\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"><span class=\"f\"> <span class=\"s\">\"\"</span></span>&lt;<span class=\"f\"><span class=\"s\">\"\"</span></span></span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"74\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  Object[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"97\">right</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"74\">toStr</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"97\">right</a></span></span>;\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage38Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public annotation pkg.Annotation {}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var s = \"\"<\"\";\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  Annotation right = null;\n");
        xml_.append("  toStr += right;\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.Annotation</a> {}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"49\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"77\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">s</a> </span>=<span class=\"f\"><span class=\"f\"> <span class=\"s\">\"\"</span></span>&lt;<span class=\"f\"><span class=\"s\">\"\"</span></span></span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <a title=\"pkg.Annotation\" href=\"#"+ExportCst.PREF_REF+"18\">Annotation</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">right</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">toStr</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"135\">right</a></span></span>;\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage39Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var one = true;\n");
        xml_.append("  if (one){\n");
        xml_.append("   return 5;\n");
        xml_.append("  }\n");
        xml_.append("  var two = true;\n");
        xml_.append("  var three = one && two;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">one</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"57\">one</a></span>){\n" +
                "   return <span class=\"f\">5</span>;\n" +
                "  }\n" +
                "  <b title=\"boolean\">var</b> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"104\">two</a> </span>=<span class=\"n\"> true</span></span>;\n" +
                "  <b title=\"boolean\">var</b> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"122\">three</a> </span>=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">one</a> </span>&amp;&amp;<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"104\">two</a></span></span></span>;\n" +
                "  return <span class=\"n\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage40Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  <span class=\"f\">$foreach(java.lang.Number <a name=\""+ExportCst.PREF_REF+"230\">e</a></span>:<span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"230\">e</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"290\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage41Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("   $break;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  <span class=\"p\">$foreach(java.lang.Number <a name=\""+ExportCst.PREF_REF+"230\">e</a></span>:<span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"230\">e</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "   $break;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"301\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage42Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"p\">$foreach(java.lang.Number <a name=\""+ExportCst.PREF_REF+"182\">e</a></span>:<span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"182\">e</a></span>.<span class=\"n\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"242\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage43Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  $if (res == 0) {\n");
        xml_.append("   $return;\n");
        xml_.append("  }\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"p\">$if</span> (<span class=\"q\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a> </span><a title=\"true\">==</a><span class=\"g\"> 0</span></span>) {\n" +
                "   $return;\n" +
                "  }\n" +
                "  <span class=\"n\">$foreach(java.lang.Number <a name=\""+ExportCst.PREF_REF+"217\">e</a></span>:<span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"217\">e</a></span>.<span class=\"n\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"277\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage44Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">3</span>,<span class=\"g\">5</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">8</span>,<span class=\"g\">1</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">2</span>,<span class=\"g\">6</span>)</span></span>;\n" +
                "  <span class=\"f\">$for(Number <a name=\""+ExportCst.PREF_REF+"207\">f</a>, Number <a name=\""+ExportCst.PREF_REF+"217\">s</a></span>: <span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span>+=<span class=\"g\"><span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"207\">f</a></span>.<span class=\"g\">intValue()</span></span>+<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"217\">s</a></span>.<span class=\"g\">intValue()</span></span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"293\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage45Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("   $break;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">3</span>,<span class=\"g\">5</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">8</span>,<span class=\"g\">1</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">2</span>,<span class=\"g\">6</span>)</span></span>;\n" +
                "  <span class=\"p\">$for(Number <a name=\""+ExportCst.PREF_REF+"207\">f</a>, Number <a name=\""+ExportCst.PREF_REF+"217\">s</a></span>: <span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span>+=<span class=\"g\"><span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"207\">f</a></span>.<span class=\"g\">intValue()</span></span>+<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"217\">s</a></span>.<span class=\"g\">intValue()</span></span></span></span>;\n" +
                "   $break;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"304\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage46Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"p\">$for(Number <a name=\""+ExportCst.PREF_REF+"156\">f</a>, Number <a name=\""+ExportCst.PREF_REF+"166\">s</a></span>: <span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span>+=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"156\">f</a></span>.<span class=\"n\">intValue()</span></span>+<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"166\">s</a></span>.<span class=\"n\">intValue()</span></span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"242\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage47Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  $if (res == 0) {\n");
        xml_.append("   $return;\n");
        xml_.append("  }\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"p\">$if</span> (<span class=\"q\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span><a title=\"true\">==</a><span class=\"g\"> 0</span></span>) {\n" +
                "   $return;\n" +
                "  }\n" +
                "  <span class=\"n\">$for(Number <a name=\""+ExportCst.PREF_REF+"191\">f</a>, Number <a name=\""+ExportCst.PREF_REF+"201\">s</a></span>: <span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span>+=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"191\">f</a></span>.<span class=\"n\">intValue()</span></span>+<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"201\">s</a></span>.<span class=\"n\">intValue()</span></span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"277\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage48Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  for (int i = 0; i < 2; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public String $toString() {\n");
        xml_.append("  return null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"131\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span><i>+</i><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>() </span><i>+</i><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"f\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"248\">pkg.ExTwo</a> {\n" +
                " public String <a name=\""+ExportCst.PREF_REF+"275\">$toString</a>() {\n" +
                "  return <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage49Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  if (s == 1){\n");
        xml_.append("   return 7;\n");
        xml_.append("  }\n");
        xml_.append("  for (int i = 0; i < 2; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>){\n" +
                "   return <span class=\"f\">7</span>;\n" +
                "  }\n" +
                "  <span class=\"n\">for</span> (int <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"107\">i</a> </span>=<span class=\"n\"> 0</span></span>; <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"107\">i</a> </span>&lt;<span class=\"n\"> 2</span></span>; <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"107\">i</a></span>++</span>){\n" +
                "   <span class=\"n\">if</span> (<span class=\"n\">!<span class=\"n\">(<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"107\">i</a> </span>%<span class=\"n\"> 2 </span></span>==<span class=\"n\"> 0</span></span>)</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"176\">toStr</a> </span>=<span class=\"n\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"176\">toStr</a> </span>=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"176\">toStr</a> </span>+<span class=\"n\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"280\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"176\">toStr</a> </span>=<span class=\"n\"><span class=\"n\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"280\">ExTwo</a>() </span>+<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"176\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"n\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"280\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage50Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  if (s == 1){\n");
        xml_.append("   return 7;\n");
        xml_.append("  }\n");
        xml_.append("  for (;;){\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>){\n" +
                "   return <span class=\"f\">7</span>;\n" +
                "  }\n" +
                "  for (;;){\n" +
                "    break;\n" +
                "  }\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"129\">toStr</a> </span>=<span class=\"n\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"129\">toStr</a> </span>=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"129\">toStr</a> </span>+<span class=\"n\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"233\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"129\">toStr</a> </span>=<span class=\"n\"><span class=\"n\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"233\">ExTwo</a>() </span>+<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"129\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"n\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage51Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $else $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $else $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"60\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"91\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"119\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"60\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$else $if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$else $if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage52Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var seven = false;\n");
        xml_.append("  for (int i = 0; i < 4; i++){\n");
        xml_.append("   if (i % 2 == 0){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("   else if (i > 1){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  return 8;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"83\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span>&lt;<span class=\"f\"> 4</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "   }\n" +
                "   <span class=\"f\">else if</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span>&gt;<span class=\"f\"> 1</span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\">8</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage53Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var seven = false;\n");
        xml_.append("  for (int i = 0; i < 4; i++){\n");
        xml_.append("   if (i < 4){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("   else if (i > 1){\n");
        xml_.append("    seven = true;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  return 8;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"83\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span>&lt;<span class=\"f\"> 4</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a></span>++</span>){\n" +
                "   <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 4</span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "   }\n" +
                "   <span class=\"n\">else if</span> (<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a> </span>&gt;<span class=\"n\"> 1</span></span>){\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"n\"> true</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"194\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\">8</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage54Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  for (int i = 0; i < 2; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"131\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>+<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>() </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"f\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"248\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage55Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public Ex(){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new Ex();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"25\">$public Ex(</a>){\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"66\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex()\" href=\"#"+ExportCst.PREF_REF+"25\">$new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage56Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $new StringBuilder(\"hello\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$new StringBuilder(<span class=\"f\"><span class=\"s\">\"hello\"</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage57Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  while (s == 1){\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   return sum;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">while</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"106\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"106\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage58Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return sum;\n");
        xml_.append("  }\n");
        xml_.append("  while (s == 1){\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   return sum;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                "  }\n" +
                "  <span class=\"n\">while</span> (<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> 1</span></span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"142\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"142\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "   return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage59Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $return 1i/0i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch(Object o){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  } $finally {\n");
        xml_.append("   $return 3;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "   }\n" +
                "   $return <span class=\"n\">2</span>;\n" +
                "  } <span class=\"f\"><a title=\"1/1\">$catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"154\">o</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  } $finally {\n" +
                "   $return <span class=\"f\">3</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage60Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=-1i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $return 1i/0i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch(Object o){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  } $finally {\n");
        xml_.append("   $return 3;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">-<span class=\"f\">1i</span></span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"false\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "   }\n" +
                "   $return <span class=\"f\">2</span>;\n" +
                "  } <span class=\"n\"><a title=\"0/1\">$catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"155\">o</a>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"n\">1i</span></span>;\n" +
                "   $return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  } $finally {\n" +
                "   $return <span class=\"f\">3</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage61Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $throw 1i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch(Object o){\n");
        xml_.append("   t=1i;\n");
        xml_.append("   $return t;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $throw <span class=\"f\">1i</span>;\n" +
                "   }\n" +
                "   $return <span class=\"n\">2</span>;\n" +
                "  } <span class=\"f\"><a title=\"1/1\">$catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"150\">o</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">1i</span></span>;\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage62Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  do{\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   return sum;\n");
        xml_.append("  }while (true);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  do{\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                "  }<span class=\"n\">while</span> (<span class=\"n\">true</span>);\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage63Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  do{\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }while (sum < 7);\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  do{\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  }<span class=\"f\">while</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>&lt;<span class=\"f\"> 7</span></span>);\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage64Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  do{\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   if (sum >= 7){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }while (sum < 17);\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  do{\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>&gt;=<span class=\"f\"> 7</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }<span class=\"p\">while</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 17</span></span>);\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage65Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  do{\n");
        xml_.append("   int[] t = s == 0 ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   if (sum >= 7){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("   continue;\n");
        xml_.append("  }while (sum < 17);\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  do{\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> 0 </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"94\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>&gt;=<span class=\"f\"> 7</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "   continue;\n" +
                "  }<span class=\"p\">while</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 17</span></span>);\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage66Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public Ex(){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"25\">$public Ex(</a>){\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"66\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex()\" href=\"#"+ExportCst.PREF_REF+"25\">$new</a>{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage67Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public Ex($int p){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex(0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"25\">$public Ex(</a>$int <a name=\""+ExportCst.PREF_REF+"41\">p</a>){\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"72\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex($int)\" href=\"#"+ExportCst.PREF_REF+"25\">$new</a>{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<span class=\"f\">0</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage68Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.CustIter</a>&lt;<a name=\""+ExportCst.PREF_REF+"28\">T</a>&gt; :$iterator&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">T</a>&gt;{\n" +
                " $private <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">T</a>&gt; <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">list</a></span>;\n" +
                " $private $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"93\">length</a></span>;\n" +
                " $private $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"116\">index</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"124\">$public (</a><a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"149\">i</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.list\" href=\"#"+ExportCst.PREF_REF+"72\">list</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"149\">i</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.length\" href=\"#"+ExportCst.PREF_REF+"93\">length</a></span>=<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.list\" href=\"#"+ExportCst.PREF_REF+"72\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustList.size()\" href=\"CustList.html#"+ExportCst.PREF_REF+"460\">size</a>()</span></span></span>;\n" +
                " }\n" +
                " $public $normal <a href=\"#"+ExportCst.PREF_REF+"28\">T</a> <a name=\""+ExportCst.PREF_REF+"207\">next</a>(){\n" +
                "  <a href=\"#"+ExportCst.PREF_REF+"28\">T</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"219\">out</a></span>=<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.list\" href=\"#"+ExportCst.PREF_REF+"72\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustList.get($int)\" href=\"CustList.html#"+ExportCst.PREF_REF+"508\">get</a>(<span class=\"g\"><a title=\"pkg.CustIter.index\" href=\"#"+ExportCst.PREF_REF+"116\">index</a></span>)</span></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.index\" href=\"#"+ExportCst.PREF_REF+"116\">index</a></span>++</span>;\n" +
                "  $return <span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"219\">out</a></span>;\n" +
                " }\n" +
                " $public $normal $boolean <a name=\""+ExportCst.PREF_REF+"295\">hasNext</a>(){\n" +
                "  $return <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIter.index\" href=\"#"+ExportCst.PREF_REF+"116\">index</a></span>&lt;<span class=\"g\"><a title=\"pkg.CustIter.length\" href=\"#"+ExportCst.PREF_REF+"93\">length</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }
    @Test
    public void coverage69Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $foreach(java.lang.Number e:inst){\n");
        xml_.append("   res+=e.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;<a name=\""+ExportCst.PREF_REF+"28\">U</a>&gt; :$iterable&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">U</a>&gt;{\n" +
                " $private <a href=\"#"+ExportCst.PREF_REF+"28\">U</a>[] <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"60\">list</a></span>;\n" +
                " $private $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"81\">length</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"90\">$public (</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span>=<span class=\"g\">$new <a href=\"#"+ExportCst.PREF_REF+"28\">U</a>[<span class=\"g\">0i</span>]</span></span>;\n" +
                " }\n" +
                " $public $normal $void <a name=\""+ExportCst.PREF_REF+"147\">add</a>(<a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"153\">elt</a>){\n" +
                "  <span class=\"g\"><a title=\"pkg.CustList.add($int,#U)\" href=\"#"+ExportCst.PREF_REF+"204\">add</a>(<span class=\"g\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>,<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"153\">elt</a></span>)</span>;\n" +
                " }\n" +
                " $public $normal $void <a name=\""+ExportCst.PREF_REF+"204\">add</a>($int <a name=\""+ExportCst.PREF_REF+"213\">index</a>,<a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"221\">elt</a>){\n" +
                "  <a href=\"#"+ExportCst.PREF_REF+"28\">U</a>[] <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"233\">newlist</a></span>=<span class=\"g\">$new <a href=\"#"+ExportCst.PREF_REF+"28\">U</a>[<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>+<span class=\"g\">1i</span></span>]</span></span>;\n" +
                "  <span class=\"f\">$iter</span>($int <a name=\""+ExportCst.PREF_REF+"273\">i</a>=<span class=\"g\">0i</span>;<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"213\">index</a></span>;<span class=\"g\">1i</span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"233\">newlist</a></span><span class=\"g\">[<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"273\">i</a></span>]</span></span>=<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"g\">[<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"273\">i</a></span>]</span></span></span>;\n" +
                "  }\n" +
                "  <span class=\"g\"><span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"233\">newlist</a></span><span class=\"g\">[<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"213\">index</a></span>]</span></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"221\">elt</a></span></span>;\n" +
                "  <span class=\"p\">$iter</span>($int <a name=\""+ExportCst.PREF_REF+"351\">i</a>=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"213\">index</a></span>+<span class=\"g\">1i</span></span>;<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>+<span class=\"g\">1i</span></span>;<span class=\"g\">1i</span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"233\">newlist</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"351\">i</a></span>]</span></span>=<span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"n\">[<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"351\">i</a></span>-<span class=\"n\">1i</span></span>]</span></span></span>;\n" +
                "  }\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>++</span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"233\">newlist</a></span></span>;\n" +
                " }\n" +
                " $public $normal $int <a name=\""+ExportCst.PREF_REF+"460\">size</a>(){\n" +
                "  $return <span class=\"g\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>;\n" +
                " }\n" +
                " $public $normal <a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"508\">get</a>($int <a name=\""+ExportCst.PREF_REF+"517\">index</a>){\n" +
                "  $return <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"g\">[<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"517\">index</a></span>]</span></span>;\n" +
                " }\n" +
                " $public $normal $void <a name=\""+ExportCst.PREF_REF+"574\">set</a>($int <a name=\""+ExportCst.PREF_REF+"583\">index</a>,<a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"591\">elt</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"583\">index</a></span>]</span></span>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"591\">elt</a></span></span>;\n" +
                " }\n" +
                " $public $normal $void <a name=\""+ExportCst.PREF_REF+"642\">remove</a>($int <a name=\""+ExportCst.PREF_REF+"654\">index</a>){\n" +
                "  <span class=\"n\">$iter</span>($int <a name=\""+ExportCst.PREF_REF+"675\">i</a>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"654\">index</a></span>;<span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>-<span class=\"n\">1i</span></span>;<span class=\"n\">1i</span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"675\">i</a></span>]</span></span>=<span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"n\">[<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"675\">i</a></span>+<span class=\"n\">1i</span></span>]</span></span></span>;\n" +
                "  }\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.list\" href=\"#"+ExportCst.PREF_REF+"60\">list</a></span><span class=\"n\">[<span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>-<span class=\"n\">1i</span></span>]</span></span>=<span class=\"n\">$null</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.CustList.length\" href=\"#"+ExportCst.PREF_REF+"81\">length</a></span>--</span>;\n" +
                " }\n" +
                " $public $normal $iterator&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">U</a>&gt; <a name=\""+ExportCst.PREF_REF+"795\">iterator</a>(){\n" +
                "  $return <span class=\"g\"><a title=\"pkg.CustIter.pkg.CustIter(pkg.CustList&lt;#T&gt;)\" href=\"CustIter.html#"+ExportCst.PREF_REF+"124\">$new</a> <a title=\"pkg.CustIter\" href=\"CustIter.html#"+ExportCst.PREF_REF+"15\">pkg.CustIter</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">U</a>&gt;(<span class=\"g\">$this</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(2));
    }
    @Test
    public void coverage70Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.CustIterTable</a>&lt;<a name=\""+ExportCst.PREF_REF+"33\">U</a>,<a name=\""+ExportCst.PREF_REF+"35\">V</a>&gt; :$iteratorTable&lt;<a href=\"#"+ExportCst.PREF_REF+"33\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"35\">V</a>&gt;{\n" +
                " $private <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"33\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"35\">V</a>&gt; <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"85\">list</a></span>;\n" +
                " $private $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"106\">length</a></span>;\n" +
                " $private $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"129\">index</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"137\">$public CustIterTable(</a><a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"33\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"35\">V</a>&gt; <a name=\""+ExportCst.PREF_REF+"174\">i</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.list\" href=\"#"+ExportCst.PREF_REF+"85\">list</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"174\">i</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.length\" href=\"#"+ExportCst.PREF_REF+"106\">length</a></span>=<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.list\" href=\"#"+ExportCst.PREF_REF+"85\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.size()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"289\">size</a>()</span></span></span>;\n" +
                " }\n" +
                " $public <a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"33\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"35\">V</a>&gt; <a name=\""+ExportCst.PREF_REF+"236\">nextPair</a>(){\n" +
                "  <a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"33\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"35\">V</a>&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"264\">out</a></span>=<span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.list\" href=\"#"+ExportCst.PREF_REF+"85\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.get($int)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"346\">get</a>(<span class=\"g\"><a title=\"pkg.CustIterTable.index\" href=\"#"+ExportCst.PREF_REF+"129\">index</a></span>)</span></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.index\" href=\"#"+ExportCst.PREF_REF+"129\">index</a></span>++</span>;\n" +
                "  $return <span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"264\">out</a></span>;\n" +
                " }\n" +
                " $public $boolean <a name=\""+ExportCst.PREF_REF+"332\">hasNextPair</a>(){\n" +
                "  $return <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustIterTable.index\" href=\"#"+ExportCst.PREF_REF+"129\">index</a></span>&lt;<span class=\"g\"><a title=\"pkg.CustIterTable.length\" href=\"#"+ExportCst.PREF_REF+"106\">length</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(3));
    }
    @Test
    public void coverage71Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.CustTable</a>&lt;<a name=\""+ExportCst.PREF_REF+"29\">U</a>,<a name=\""+ExportCst.PREF_REF+"31\">V</a>&gt; :$iterableTable&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt;{\n" +
                " $private <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">CustList</a>&lt;<a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt;&gt; <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"90\">list</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"97\">$public (</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustTable.list\" href=\"#"+ExportCst.PREF_REF+"90\">list</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">CustList</a>&lt;<a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt;&gt;()</span></span>;\n" +
                " }\n" +
                " $public $void <a name=\""+ExportCst.PREF_REF+"166\">add</a>(<a href=\"#"+ExportCst.PREF_REF+"29\">U</a> <a name=\""+ExportCst.PREF_REF+"172\">f</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a> <a name=\""+ExportCst.PREF_REF+"176\">s</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustTable.list\" href=\"#"+ExportCst.PREF_REF+"90\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\"><a title=\"pkg.CustPair.pkg.CustPair(#U,#V)\" href=\"CustPair.html#"+ExportCst.PREF_REF+"110\">$new</a> <a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt;(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"172\">f</a></span>,<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"176\">s</a></span>)</span>)</span></span>;\n" +
                " }\n" +
                " $public $void <a name=\""+ExportCst.PREF_REF+"235\">add</a>(<a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt; <a name=\""+ExportCst.PREF_REF+"253\">p</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.CustTable.list\" href=\"#"+ExportCst.PREF_REF+"90\">list</a></span>.<span class=\"n\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"253\">p</a></span>)</span></span>;\n" +
                " }\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"289\">size</a>(){\n" +
                "  $return <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustTable.list\" href=\"#"+ExportCst.PREF_REF+"90\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustList.size()\" href=\"CustList.html#"+ExportCst.PREF_REF+"460\">size</a>()</span></span>;\n" +
                " }\n" +
                " $public <a title=\"pkg.CustPair\" href=\"CustPair.html#"+ExportCst.PREF_REF+"15\">CustPair</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt; <a name=\""+ExportCst.PREF_REF+"346\">get</a>($int <a name=\""+ExportCst.PREF_REF+"355\">index</a>){\n" +
                "  $return <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustTable.list\" href=\"#"+ExportCst.PREF_REF+"90\">list</a></span>.<span class=\"g\"><a title=\"pkg.CustList.get($int)\" href=\"CustList.html#"+ExportCst.PREF_REF+"508\">get</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"355\">index</a></span>)</span></span>;\n" +
                " }\n" +
                " $public $iteratorTable&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt; <a name=\""+ExportCst.PREF_REF+"422\">iteratorTable</a>(){\n" +
                "  $return <span class=\"g\"><a title=\"pkg.CustIterTable.pkg.CustIterTable(pkg.CustTable&lt;#U,#V&gt;)\" href=\"CustIterTable.html#"+ExportCst.PREF_REF+"137\">$new</a> <a title=\"pkg.CustIterTable\" href=\"CustIterTable.html#"+ExportCst.PREF_REF+"15\">CustIterTable</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"29\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"31\">V</a>&gt;(<span class=\"g\">$this</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(4));
    }


    @Test
    public void coverage72Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for(Number f, Number s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.CustPair</a>&lt;<a name=\""+ExportCst.PREF_REF+"28\">U</a>,<a name=\""+ExportCst.PREF_REF+"30\">V</a>&gt; :$pair&lt;<a href=\"#"+ExportCst.PREF_REF+"28\">U</a>,<a href=\"#"+ExportCst.PREF_REF+"30\">V</a>&gt;{\n" +
                " $private <a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"58\">first</a></span>;\n" +
                " $private <a href=\"#"+ExportCst.PREF_REF+"30\">V</a> <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"77\">second</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"86\">$public CustPair(</a>){\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"110\">$public CustPair(</a><a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"129\">f</a>,<a href=\"#"+ExportCst.PREF_REF+"30\">V</a> <a name=\""+ExportCst.PREF_REF+"133\">s</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustPair.first\" href=\"#"+ExportCst.PREF_REF+"58\">first</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"129\">f</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.CustPair.second\" href=\"#"+ExportCst.PREF_REF+"77\">second</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"133\">s</a></span></span>;\n" +
                " }\n" +
                " $public <a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"178\">getFirst</a>(){\n" +
                "  $return <span class=\"g\"><a title=\"pkg.CustPair.first\" href=\"#"+ExportCst.PREF_REF+"58\">first</a></span>;\n" +
                " }\n" +
                " $public <a href=\"#"+ExportCst.PREF_REF+"30\">V</a> <a name=\""+ExportCst.PREF_REF+"221\">getSecond</a>(){\n" +
                "  $return <span class=\"g\"><a title=\"pkg.CustPair.second\" href=\"#"+ExportCst.PREF_REF+"77\">second</a></span>;\n" +
                " }\n" +
                " $public $void <a name=\""+ExportCst.PREF_REF+"270\">setFirst</a>(<a href=\"#"+ExportCst.PREF_REF+"28\">U</a> <a name=\""+ExportCst.PREF_REF+"281\">f</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.CustPair.first\" href=\"#"+ExportCst.PREF_REF+"58\">first</a> </span>=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"281\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(5));
    }
    @Test
    public void coverage73Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator< $boolean (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" $return p.field<q.field;\n");
        xml_.append("}\n");
        xml_.append("$operator> $boolean (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" $return p.field>q.field;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $boolean rOne = one < two;\n");
        xml_.append("  $boolean rTwo = one > two;\n");
        xml_.append("  $boolean rThree = one.field < two.field;\n");
        xml_.append("  $boolean rFour = one.field > two.field;\n");
        xml_.append("  $return 5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covDisplay(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">&lt;</a> $boolean (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"28\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"38\">q</a>){\n" +
                " $return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"28\">p</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span><a title=\"&quot;\">&lt;</a><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"38\">q</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span></span>;\n" +
                "}\n" +
                "$operator<a name=\""+ExportCst.PREF_REF+"79\">&gt;</a> $boolean (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"98\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"108\">q</a>){\n" +
                " $return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"98\">p</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span><a title=\"&amp;\">&gt;</a><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"108\">q</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"155\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"178\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"207\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"226\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"256\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"155\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"226\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"256\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $boolean <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"322\">rOne</a> </span>=<span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"226\">one</a> </span><a title=\"$static &lt;(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">&lt;</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"256\">two</a></span></span></span>;\n" +
                "  $boolean <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"351\">rTwo</a> </span>=<span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"226\">one</a> </span><a title=\"$static &gt;(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"79\">&gt;</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"256\">two</a></span></span></span>;\n" +
                "  $boolean <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"380\">rThree</a> </span>=<span class=\"p\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"226\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a> </span></span><a title=\"&quot;\">&lt;</a><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"256\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span></span></span>;\n" +
                "  $boolean <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"423\">rFour</a> </span>=<span class=\"p\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"226\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a> </span></span><a title=\"&amp;\">&gt;</a><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"256\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a></span></span></span></span>;\n" +
                "  $return <span class=\"f\">5</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage74Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  iter (int j=0;2;1){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"91\">j</a>=<span class=\"f\">0</span>;<span class=\"f\">2</span>;<span class=\"f\">1</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">t</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">j</a> </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"110\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage75Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  iter (int j=0;2;1){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   break;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"91\">j</a>=<span class=\"f\">0</span>;<span class=\"f\">2</span>;<span class=\"f\">1</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"110\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   break;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage76Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  iter (int j=0;0;1){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"91\">j</a>=<span class=\"f\">0</span>;<span class=\"f\">0</span>;<span class=\"f\">1</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"110\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"91\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"110\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage77Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  if (sum == 0){\n");
        xml_.append("   return s;\n");
        xml_.append("  }\n");
        xml_.append("  iter (int j=0;0;1){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span><a title=\"true\">==</a><span class=\"f\"> 0</span></span>){\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                "  }\n" +
                "  <span class=\"n\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"125\">j</a>=<span class=\"n\">0</span>;<span class=\"n\">0</span>;<span class=\"n\">1</span>){\n" +
                "   int[] <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"144\">t</a> </span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"125\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"144\">t</a></span><span class=\"n\">[<span class=\"n\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage78Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $new StringBuilder(\"hel\\\"lo\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$new StringBuilder(<span class=\"f\"><span class=\"s\">\"hel\\\"lo\"</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage79Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $new StringBuilder(`hel``lo`);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$new StringBuilder(<span class=\"f\"><span class=\"s\">`hel``lo`</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage80Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $char exmeth(){\n");
        xml_.append("  $return '\\'';\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $char <a name=\""+ExportCst.PREF_REF+"47\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"s\">'\\''</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage81Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$super.field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"372\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$super.<a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"330\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"372\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"398\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage81_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex: ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$super.field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>: <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"373\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"168\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"187\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"217\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"187\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"217\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"187\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"217\">two</a></span></span>)</span>.<span class=\"f\">$super.<a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"399\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"331\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"373\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"399\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage81__Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:pkg. ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$super.field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"377\">pkg. ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"172\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"191\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"221\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"191\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"221\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"191\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"221\">two</a></span></span>)</span>.<span class=\"f\">$super.<a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"403\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"335\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"377\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"403\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage82Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$super.method();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $int method(){\n");
        xml_.append("  $return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"375\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$super.<a title=\"pkg.ExTwo.method()\" href=\"#"+ExportCst.PREF_REF+"422\">method</a>()</span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"333\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"375\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"401\">field</a></span>;\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"422\">method</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"401\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage83Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int one,two;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.one = 1;\n");
        xml_.append("  one.two = 2;\n");
        xml_.append("  two.one = 3;\n");
        xml_.append("  two.two = 4;\n");
        xml_.append("  $return 5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">one</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"42\">two</a></span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"69\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"88\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"118\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"88\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"88\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"42\">two</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"118\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"118\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"42\">two</a> </span></span>=<span class=\"f\"> 4</span></span>;\n" +
                "  $return <span class=\"f\">5</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage84Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int one=7,two=8;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.one = 1;\n");
        xml_.append("  one.two = 2;\n");
        xml_.append("  two.one = 3;\n");
        xml_.append("  two.two = 4;\n");
        xml_.append("  $return 5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">one</a></span>=<span class=\"f\">7</span></span>,<span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"44\">two</a></span>=<span class=\"f\">8</span></span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"73\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"92\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"44\">two</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"44\">two</a> </span></span>=<span class=\"f\"> 4</span></span>;\n" +
                "  $return <span class=\"f\">5</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage85Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append(" ONE,TWO;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExEnum.ONE.$ordinal()+ExEnum.TWO.$ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"32\">TWO</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"54\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"85\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"28\">ONE</a></span></span>.<span class=\"f\">$ordinal()</span></span>+<span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"32\">TWO</a></span></span>.<span class=\"f\">$ordinal()</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage86Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $iterable<java.lang.Number> iter = inst;\n");
        xml_.append("  $var it = iter.iterator();\n");
        xml_.append("  $while(it.hasNext()){\n");
        xml_.append("   $var l = it.next();\n");
        xml_.append("   res+=l.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  $iterable&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"232\">iter</a> </span>=<span class=\"g\"> <a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span></span>;\n" +
                "  <b title=\"java.lang.$iterator&lt;java.lang.Number&gt;\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"252\">it</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"232\">iter</a></span>.<span class=\"g\">iterator()</span></span></span>;\n" +
                "  <span class=\"f\">$while</span>(<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"252\">it</a></span>.<span class=\"g\">hasNext()</span></span>){\n" +
                "   <b title=\"java.lang.Number\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"306\">l</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"252\">it</a></span>.<span class=\"g\">next()</span></span></span>;\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"306\">l</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"372\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage87Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $var iter = inst;\n");
        xml_.append("  $var it = iter.iterator();\n");
        xml_.append("  $while(it.hasNext()){\n");
        xml_.append("   $var l = it.next();\n");
        xml_.append("   res+=l.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  <b title=\"pkg.CustList&lt;java.lang.Number&gt;\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"209\">iter</a> </span>=<span class=\"g\"> <a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span></span>;\n" +
                "  <b title=\"java.lang.$iterator&lt;java.lang.Number&gt;\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"229\">it</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"209\">iter</a></span>.<span class=\"g\"><a title=\"pkg.CustList.iterator()\" href=\"CustList.html#"+ExportCst.PREF_REF+"795\">iterator</a>()</span></span></span>;\n" +
                "  <span class=\"f\">$while</span>(<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"229\">it</a></span>.<span class=\"g\">hasNext()</span></span>){\n" +
                "   <b title=\"java.lang.Number\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"283\">l</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"229\">it</a></span>.<span class=\"g\">next()</span></span></span>;\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"283\">l</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"349\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage88Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$static java.lang.Integer.MAX_VALUE;\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return MAX_VALUE;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">$static java.lang.Integer.MAX_VALUE</span>;\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"52\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"83\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">MAX_VALUE</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage88_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class [$static java.lang.Integer.MAX_VALUE;] pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return MAX_VALUE;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">" +
                "$public $class [<span class=\"i\">$static java.lang.Integer.MAX_VALUE</span>;] <a name=\""+ExportCst.PREF_REF+"54\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"85\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">MAX_VALUE</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage89Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int field;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $lambda(Ex,,field).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"46\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"75\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"46\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,,field)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage90Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append(" ONE;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static ExEnum exmeth(){\n");
        xml_.append("  $return $lambda(ExEnum,,ONE).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">ONE</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"50\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <a name=\""+ExportCst.PREF_REF+"83\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"28\">$lambda</a>(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a>,,ONE)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage91Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append(" ONE{};\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static ExEnum exmeth(){\n");
        xml_.append("  $return $lambda(ExEnum,,ONE).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">ONE</a></span>{};\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"52\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <a name=\""+ExportCst.PREF_REF+"85\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"28\">$lambda</a>(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a>,,ONE)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage92Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $lambda(Integer,,MAX_VALUE).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$lambda(Integer,,MAX_VALUE)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage93Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $lambda(StringBuilder,$new).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$lambda(StringBuilder,$new)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage94Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return $lambda(Ex,$new).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$lambda(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,$new)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage95Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public Ex(){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return $lambda(Ex,$new).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"25\">$public Ex(</a>){\n" +
                " }\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"62\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex()\" href=\"#"+ExportCst.PREF_REF+"25\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,$new)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage96Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public Ex($int field){\n");
        xml_.append("  $this.field=field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return $lambda(Ex,$new,$int).call(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"46\">$public Ex(</a>$int <a name=\""+ExportCst.PREF_REF+"62\">field</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">$this</span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"114\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex($int)\" href=\"#"+ExportCst.PREF_REF+"46\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,$new,$int)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage97Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Ex[] exmeth(){\n");
        xml_.append("  $return $lambda(Ex[],$new,$int).call(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>[] <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$lambda(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>[],$new,$int)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage98Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return \"\".$lambda(String,length).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">$lambda(String,length)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage99Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $new Ex().$lambda(Ex,inst).call();\n");
        xml_.append(" }\n");
        xml_.append(" $public $int inst(){\n");
        xml_.append("  $return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.inst()\" href=\"#"+ExportCst.PREF_REF+"118\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,inst)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"118\">inst</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage99_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $static().$lambda(Ex,inst,$id,Ex).call();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int inst(){\n");
        xml_.append("  $return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$static()</span>.<span class=\"f\"><a title=\"pkg.Ex.$static inst()\" href=\"#"+ExportCst.PREF_REF+"133\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,inst,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"133\">inst</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage99__Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $static().$lambda(Ex,inst,$id,Ex,ExTwo).call($new ExTwo());\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int inst(ExTwo e){\n");
        xml_.append("  $return e.v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int v=5;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$static()</span>.<span class=\"f\"><a title=\"pkg.Ex.$static inst(pkg.ExTwo)\" href=\"#"+ExportCst.PREF_REF+"151\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,inst,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"201\">ExTwo</a>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">$new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"201\">ExTwo</a>()</span>)</span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"151\">inst</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"201\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"162\">e</a>){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"162\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.v\" href=\"#"+ExportCst.PREF_REF+"227\">v</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"201\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"227\">v</a></span>=<span class=\"f\">5</span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage100Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $new Ex().$lambda(Ex,[],$int).call(8);\n");
        xml_.append(" }\n");
        xml_.append(" $public $int $this($int param){\n");
        xml_.append("  $return field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $void $this($int param){\n");
        xml_.append("  field = $value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"67\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.[]($int)\" href=\"#"+ExportCst.PREF_REF+"143\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,[],$int)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">8</span>)</span></span>;\n" +
                " }\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"143\">$this</a>($int <a name=\""+ExportCst.PREF_REF+"154\">param</a>){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " }\n" +
                " $public $void <a name=\""+ExportCst.PREF_REF+"197\">$this</a>($int <a name=\""+ExportCst.PREF_REF+"208\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span>=<span class=\"n\"> <b>$value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage100_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $long t;\n");
        xml_.append(" $public Ex($int i){\n");
        xml_.append("  t=i;\n");
        xml_.append(" }\n");
        xml_.append(" $public Ex($long i){\n");
        xml_.append("  t=i;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $long exmeth(){\n");
        xml_.append("  $Fct<$int,Ex> f = $lambda(Ex,$new,$id,$int);\n");
        xml_.append("  $return f.call(5).t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"31\">t</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"35\">$public Ex(</a>$int <a name=\""+ExportCst.PREF_REF+"51\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.t\" href=\"#"+ExportCst.PREF_REF+"31\">t</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"51\">i</a></span></span>;\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"66\">$public Ex(</a>$long <a name=\""+ExportCst.PREF_REF+"83\">i</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.t\" href=\"#"+ExportCst.PREF_REF+"31\">t</a></span>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"83\">i</a></span></span>;\n" +
                " }\n" +
                " $public $static $long <a name=\""+ExportCst.PREF_REF+"120\">exmeth</a>(){\n" +
                "  $Fct&lt;$int,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex($int)\" href=\"#"+ExportCst.PREF_REF+"35\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,$new,$id,$int)</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"146\">f</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>.<span class=\"f\"><a title=\"pkg.Ex.t\" href=\"#"+ExportCst.PREF_REF+"31\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage100_1Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $class Inner {\n");
        xml_.append("  $public $int field;\n");
        xml_.append("  $public Inner($int... p){\n");
        xml_.append("   $for ($int i: p){\n");
        xml_.append("    field += i;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  $public $normal $int get(){\n");
        xml_.append("   $return field;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $Fct<$int[],Ex.Inner> c = $new Ex().$lambda(Ex.Inner,$new,$id,$int...);\n");
        xml_.append("  Ex.Inner instance = c.call($new $int[]{5,8});\n");
        xml_.append("  $return instance.get();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $class <a name=\""+ExportCst.PREF_REF+"40\">Inner</a> {\n" +
                "  $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"72\">$public Inner(</a>$int... <a name=\""+ExportCst.PREF_REF+"94\">p</a>){\n" +
                "   <span class=\"f\">$for ($int <a name=\""+ExportCst.PREF_REF+"112\">i</a></span>: <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"94\">p</a></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"112\">i</a></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  $public $normal $int <a name=\""+ExportCst.PREF_REF+"167\">get</a>(){\n" +
                "   $return <span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"221\">exmeth</a>(){\n" +
                "  $Fct&lt;$int[],<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"255\">c</a> </span>=<span class=\"f\"><span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner($int...)\" href=\"#"+ExportCst.PREF_REF+"72\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>,$new,$id,$int...)</span></span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"316\">instance</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"255\">c</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">$new $int[]{<span class=\"f\">5</span>,<span class=\"f\">8</span>}</span>)</span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">instance</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.get()\" href=\"#"+ExportCst.PREF_REF+"167\">get</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage101Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new Ex().$lambda(Ex,[]=,$int).call(8,15);\n");
        xml_.append(" }\n");
        xml_.append(" $public $int $this($int param){\n");
        xml_.append("  $return field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $void $this($int param){\n");
        xml_.append("  field = $value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"69\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.[]=($int)\" href=\"#"+ExportCst.PREF_REF+"203\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,[]=,$int)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">8</span>,<span class=\"f\">15</span>)</span></span>;\n" +
                " }\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"149\">$this</a>($int <a name=\""+ExportCst.PREF_REF+"160\">param</a>){\n" +
                "  $return <span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " }\n" +
                " $public $void <a name=\""+ExportCst.PREF_REF+"203\">$this</a>($int <a name=\""+ExportCst.PREF_REF+"214\">param</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span>=<span class=\"f\"> <b>$value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage102Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex(pkg.Ex a,pkg.Ex b) {\n");
        xml_.append(" $var o = $new pkg.Ex();\n");
        xml_.append(" o.field = a.field + b.field;\n");
        xml_.append(" $return o;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return $lambda($operator,+,Ex,Ex).call(one,two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"25\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"34\">b</a>) {\n" +
                " <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"45\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"25\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"34\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"123\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">field</a></span>;\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"177\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"192\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">$lambda</a>($operator,+,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage102_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex(pkg.Ex a,pkg.Ex b) {\n");
        xml_.append(" $var o = $new pkg.Ex();\n");
        xml_.append(" o.field = a.field + b.field;\n");
        xml_.append(" $return o;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return $lambda($operator,+,$id,Ex,Ex).call(one,two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"25\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"34\">b</a>) {\n" +
                " <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"45\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"25\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"34\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"123\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">field</a></span>;\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"177\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"192\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">$lambda</a>($operator,+,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage103_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex(pkg.Ex a,pkg.Ex b) {\n");
        xml_.append(" $var o = $new pkg.Ex();\n");
        xml_.append(" o.field = a.field + b.field;\n");
        xml_.append(" $return o;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return one.$lambda($operator,+,$id,Ex).call(two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"25\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"34\">b</a>) {\n" +
                " <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"45\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"25\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"34\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"45\">o</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"123\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">field</a></span>;\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"177\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"192\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">one</a></span>.<span class=\"f\"><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">$lambda</a>($operator,+,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"123\">Ex</a>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage104_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ $int (pkg.Ex a, pkg.Ex b){\n");
        xml_.append(" $return a.a+b.a;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int a;\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  $if ($operator(+)(one, two) != 8i){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 2i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> $int (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"24\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"34\">b</a>){\n" +
                " $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"24\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"96\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"34\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"96\">a</a></span></span></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"73\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"96\">a</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"138\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"138\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"96\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"172\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"73\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"172\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"96\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">$operator</a>(+)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"138\">one</a></span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"172\">two</a></span>) </span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">2i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage103Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append(" ONE{};\n");
        xml_.append(" $public $int method(){\n");
        xml_.append("  $return 5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $lambda(ExEnum,,ONE).call().method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">ONE</a></span>{};\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"49\">method</a>(){\n" +
                "  $return <span class=\"f\">5</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"92\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"123\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"28\">$lambda</a>(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a>,,ONE)</span>.<span class=\"f\"><b>call</b>()</span></span>.<span class=\"f\"><a title=\"pkg.ExEnum.method()\" href=\"#"+ExportCst.PREF_REF+"49\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage104Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int one,two=one;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.one = 1;\n");
        xml_.append("  one.two = 2;\n");
        xml_.append("  two.one = 3;\n");
        xml_.append("  two.two = 4;\n");
        xml_.append("  $return 5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">one</a></span>,<span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"42\">two</a></span>=<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a></span></span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"73\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"92\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"42\">two</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.one\" href=\"#"+ExportCst.PREF_REF+"38\">one</a> </span></span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.two\" href=\"#"+ExportCst.PREF_REF+"42\">two</a> </span></span>=<span class=\"f\"> 4</span></span>;\n" +
                "  $return <span class=\"f\">5</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage105Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$superaccess(ExTwo)method();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $int method(){\n");
        xml_.append("  $return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"387\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$superaccess(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"387\">ExTwo</a>)<a title=\"pkg.ExTwo.method()\" href=\"#"+ExportCst.PREF_REF+"434\">method</a>()</span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"345\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"387\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"413\">field</a></span>;\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"434\">method</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage106Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$classchoice(ExTwo)method();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $public $int method(){\n");
        xml_.append("  $return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"387\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$classchoice(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"387\">ExTwo</a>)<a title=\"pkg.ExTwo.method()\" href=\"#"+ExportCst.PREF_REF+"434\">method</a>()</span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"345\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"387\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"413\">field</a></span>;\n" +
                " $public $int <a name=\""+ExportCst.PREF_REF+"434\">method</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"413\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage107Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $char exmeth(){\n");
        xml_.append("  $return '\\'';\n");
        xml_.append(" }\n");
        xml_.append(" $public $static String exmeth2(){\n");
        xml_.append("  $return \"\"+'\\'';\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $char <a name=\""+ExportCst.PREF_REF+"47\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"s\">'\\''</span></span>;\n" +
                " }\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"100\">exmeth2</a>(){\n" +
                "  $return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"\"</span></span>+<span class=\"n\"><span class=\"s\">'\\''</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage108Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $true;\n");
        xml_.append("  b &= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"true\">&amp;</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage109Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $false;\n");
        xml_.append("  b &= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"false\">&amp;</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage110Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $for ($boolean c:{$true,$false}){\n");
        xml_.append("   b &= c;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"f\">$for ($boolean <a name=\""+ExportCst.PREF_REF+"91\">c</a></span>:<span class=\"f\">{<span class=\"f\">$true</span>,<span class=\"f\">$false</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span>&amp;=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">c</a></span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage111Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $for ($boolean c:{}){\n");
        xml_.append("   b &= c;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\">$for ($boolean <a name=\""+ExportCst.PREF_REF+"91\">c</a></span>:<span class=\"f\">{}</span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span>&amp;=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"91\">c</a></span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage112Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  b &= $true;\n");
        xml_.append("  b &= $false;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span>&amp;=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span>&amp;=<span class=\"f\"> $false</span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage113Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $for ($boolean b:{$true,$false}){\n");
        xml_.append("   $for ($boolean c:{$false,$true}){\n");
        xml_.append("    $var loc = b;\n");
        xml_.append("    loc &= c;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <span class=\"f\">$for ($boolean <a name=\""+ExportCst.PREF_REF+"73\">b</a></span>:<span class=\"f\">{<span class=\"f\">$true</span>,<span class=\"f\">$false</span>}</span>){\n" +
                "   <span class=\"f\">$for ($boolean <a name=\""+ExportCst.PREF_REF+"110\">c</a></span>:<span class=\"f\">{<span class=\"f\">$false</span>,<span class=\"f\">$true</span>}</span>){\n" +
                "    <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"138\">loc</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"73\">b</a></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"138\">loc</a> </span>&amp;=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"110\">c</a></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage114Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $for ($boolean c:{$true,$false,$true}){\n");
        xml_.append("   b &= c;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"f\">$for ($boolean <a name=\""+ExportCst.PREF_REF+"91\">c</a></span>:<span class=\"f\">{<span class=\"f\">$true</span>,<span class=\"f\">$false</span>,<span class=\"f\">$true</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span>&amp;=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">c</a></span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage115Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1, u = 2;\n");
        xml_.append("  int[] t = s == 1 && u == 2?{4i}:{6i};\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>,<span class=\"f\"><span class=\"f\"> <a name=\""+ExportCst.PREF_REF+"64\">u</a> </span>=<span class=\"f\"> 2</span></span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"79\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"64\">u</a> </span><a title=\"true\">==</a><span class=\"f\"> 2</span></span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage116Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i = 0, j = 1; i < 2 && j < 4; i++,j++){\n");
        xml_.append("   s += i + j;\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">i</a> </span>=<span class=\"f\"> 0</span></span>,<span class=\"f\"><span class=\"f\"> <a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> 1</span></span></span>; <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>&lt;<span class=\"f\"> 2 </span></span>&amp;<a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 4</span></span></span>; <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span>++</span>,<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span>++</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage117Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i = 0, j = i; i < 2 && j < 4; i++,j++){\n");
        xml_.append("   s += i + j;\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">i</a> </span>=<span class=\"f\"> 0</span></span>,<span class=\"f\"><span class=\"f\"> <a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span></span></span>; <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>&lt;<span class=\"f\"> 2 </span></span>&amp;<a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a> </span><a title=\"true\">&lt;</a><span class=\"f\"> 4</span></span></span>; <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span>++</span>,<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span>++</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage118Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1, u = s;\n");
        xml_.append("  int[] t = s == 1 && u == 2?{4i}:{6i};\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>,<span class=\"f\"><span class=\"f\"> <a name=\""+ExportCst.PREF_REF+"64\">u</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span></span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"79\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span><a title=\"true\">&amp;</a><a title=\"false\">&amp;</a><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"64\">u</a> </span><a title=\"false\">==</a><span class=\"f\"> 2</span></span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage119Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i = 0, j; i < 2; i++){\n");
        xml_.append("   s += i;\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">i</a> </span>=<span class=\"f\"> 0</span></span>,<span class=\"f\"> <a name=\""+ExportCst.PREF_REF+"82\">j</a></span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>&lt;<span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span>++</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage120Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i : {1,2}){\n");
        xml_.append("   s += ([i]);\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"75\">i</a></span> : <span class=\"f\">{<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"> ([<a href=\"#"+ExportCst.PREF_REF+"75\">i</a>])</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage121Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int s = 1;\n");
        xml_.append("  $for ($int i : {1,2}){\n");
        xml_.append("   s += i;\n");
        xml_.append("  }\n");
        xml_.append("  $return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">$for ($int <a name=\""+ExportCst.PREF_REF+"83\">i</a></span> : <span class=\"f\">{<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">s</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"83\">i</a></span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage122Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i : {1,2}){\n");
        xml_.append("   s += i;\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"75\">i</a></span> : <span class=\"f\">{<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage123Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=0i;\n");
        xml_.append("  $try{\n");
        xml_.append("   $if(t>=0){\n");
        xml_.append("    $throw 1i;\n");
        xml_.append("   }\n");
        xml_.append("   $return 2;\n");
        xml_.append("  } $catch($int o){\n");
        xml_.append("   $return o;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\">0i</span></span>;\n" +
                "  $try{\n" +
                "   <span class=\"p\">$if</span>(<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><a title=\"true\">&gt;=</a><span class=\"f\">0</span></span>){\n" +
                "    $throw <span class=\"f\">1i</span>;\n" +
                "   }\n" +
                "   $return <span class=\"n\">2</span>;\n" +
                "  } <span class=\"f\"><a title=\"1/1\">$catch</a></span>($int <a name=\""+ExportCst.PREF_REF+"148\">o</a>){\n" +
                "   $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"148\">o</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage124Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExTwo.exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg2/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo\" href=\"../pkg2/Ex.html#"+ExportCst.PREF_REF+"15\">ExTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.$static exmeth()\" href=\"../pkg2/Ex.html#"+ExportCst.PREF_REF+"49\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage125Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExTwo.exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo\" href=\"../Ex.html#"+ExportCst.PREF_REF+"15\">ExTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.$static exmeth()\" href=\"../Ex.html#"+ExportCst.PREF_REF+"49\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage126Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExTwo.exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/inner/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo\" href=\"inner/Ex.html#"+ExportCst.PREF_REF+"15\">ExTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.$static exmeth()\" href=\"inner/Ex.html#"+ExportCst.PREF_REF+"49\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage127Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExTwo.exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/com/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/com/pkg2/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo\" href=\"../pkg2/Ex.html#"+ExportCst.PREF_REF+"15\">ExTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.$static exmeth()\" href=\"../pkg2/Ex.html#"+ExportCst.PREF_REF+"49\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage128Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ExTwo.exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/d1/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/d2/pkg2/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo\" href=\"../../d2/pkg2/Ex.html#"+ExportCst.PREF_REF+"15\">ExTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.$static exmeth()\" href=\"../../d2/pkg2/Ex.html#"+ExportCst.PREF_REF+"49\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage129Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  for (int i:{10,9,8}){\n");
        xml_.append("   switch(i){\n");
        xml_.append("    case 10;\n");
        xml_.append("    case 8;\n");
        xml_.append("     t+=12;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"80\">i</a></span>:<span class=\"f\">{<span class=\"f\">10</span>,<span class=\"f\">9</span>,<span class=\"f\">8</span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"3/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">i</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 8;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"f\">12</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage130Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  for (int i:{10,9,8}){\n");
        xml_.append("   switch(i){\n");
        xml_.append("    case 10;\n");
        xml_.append("    case 8;\n");
        xml_.append("     t+=12;\n");
        xml_.append("     break;\n");
        xml_.append("    default;\n");
        xml_.append("     t+=14;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"80\">i</a></span>:<span class=\"f\">{<span class=\"f\">10</span>,<span class=\"f\">9</span>,<span class=\"f\">8</span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"3/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">i</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 8;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"f\">12</span></span>;\n" +
                "     break;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"f\">14</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage131Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  for (int i:{}){\n");
        xml_.append("   switch(i){\n");
        xml_.append("    case 10;\n");
        xml_.append("    case 8;\n");
        xml_.append("     t+=12;\n");
        xml_.append("     break;\n");
        xml_.append("    default;\n");
        xml_.append("     t+=14;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"80\">i</a></span>:<span class=\"f\">{}</span>){\n" +
                "   <span class=\"n\"><a title=\"0/3\">switch</a></span>(<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"80\">i</a></span>){\n" +
                "    <span class=\"n\"><a title=\"0/1\">case</a></span> 10;\n" +
                "    <span class=\"n\"><a title=\"0/1\">case</a></span> 8;\n" +
                "     <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"n\">12</span></span>;\n" +
                "     break;\n" +
                "    <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "     <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"n\">14</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage132Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  for (int i:{10,8}){\n");
        xml_.append("   switch(i){\n");
        xml_.append("    case 10;\n");
        xml_.append("    case 8;\n");
        xml_.append("     t+=12;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"80\">i</a></span>:<span class=\"f\">{<span class=\"f\">10</span>,<span class=\"f\">8</span>}</span>){\n" +
                "   <span class=\"p\"><a title=\"2/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">i</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 8;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>+=<span class=\"f\">12</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage133Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $iterable<java.lang.Number> iter = Ex.inst;\n");
        xml_.append("  $var it = iter.iterator();\n");
        xml_.append("  $while(it.hasNext()){\n");
        xml_.append("   $var l = it.next();\n");
        xml_.append("   res+=l.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  $iterable&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"232\">iter</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a></span>.<span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span></span></span>;\n" +
                "  <b title=\"java.lang.$iterator&lt;java.lang.Number&gt;\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"255\">it</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"232\">iter</a></span>.<span class=\"g\">iterator()</span></span></span>;\n" +
                "  <span class=\"f\">$while</span>(<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"255\">it</a></span>.<span class=\"g\">hasNext()</span></span>){\n" +
                "   <b title=\"java.lang.Number\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"309\">l</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"255\">it</a></span>.<span class=\"g\">next()</span></span></span>;\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"309\">l</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"375\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage134Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static pkg.CustList<java.lang.Number> inst=$new pkg.CustList<java.lang.Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3i);\n");
        xml_.append("  inst.add(1i);\n");
        xml_.append("  inst.add(2i);\n");
        xml_.append("  $iterable<java.lang.Number> iter = Ex. inst;\n");
        xml_.append("  $var it = iter.iterator();\n");
        xml_.append("  $while(it.hasNext()){\n");
        xml_.append("   $var l = it.next();\n");
        xml_.append("   res+=l.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustList.pkg.CustList()\" href=\"CustList.html#"+ExportCst.PREF_REF+"90\">$new</a> <a title=\"pkg.CustList\" href=\"CustList.html#"+ExportCst.PREF_REF+"15\">pkg.CustList</a>&lt;java.lang.Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">3i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">1i</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustList.add(#U)\" href=\"CustList.html#"+ExportCst.PREF_REF+"147\">add</a>(<span class=\"g\">2i</span>)</span></span>;\n" +
                "  $iterable&lt;java.lang.Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"232\">iter</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a></span>.<span class=\"g\"> <a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"72\">inst</a></span></span></span>;\n" +
                "  <b title=\"java.lang.$iterator&lt;java.lang.Number&gt;\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"256\">it</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"232\">iter</a></span>.<span class=\"g\">iterator()</span></span></span>;\n" +
                "  <span class=\"f\">$while</span>(<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"256\">it</a></span>.<span class=\"g\">hasNext()</span></span>){\n" +
                "   <b title=\"java.lang.Number\">$var</b> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"310\">l</a> </span>=<span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"256\">it</a></span>.<span class=\"g\">next()</span></span></span>;\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>+=<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"310\">l</a></span>.<span class=\"g\">intValue()</span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"376\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"138\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage135Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (var j:new int[]{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (<b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">new int[]{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"118\">t</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"118\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage136Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<Number,Number> inst=$new CustTable<Number,Number>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  inst.add(3,5);\n");
        xml_.append("  inst.add(8,1);\n");
        xml_.append("  inst.add(2,6);\n");
        xml_.append("  $for($var f, $var s: inst){\n");
        xml_.append("   res += f.intValue()+s.intValue();\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;Number,Number&gt;()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">3</span>,<span class=\"g\">5</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">8</span>,<span class=\"g\">1</span>)</span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>.<span class=\"g\"><a title=\"pkg.CustTable.add(#U,#V)\" href=\"CustTable.html#"+ExportCst.PREF_REF+"166\">add</a>(<span class=\"g\">2</span>,<span class=\"g\">6</span>)</span></span>;\n" +
                "  <span class=\"f\">$for(<b title=\"java.lang.Number\">$var</b> <a name=\""+ExportCst.PREF_REF+"205\">f</a>, <b title=\"java.lang.Number\">$var</b> <a name=\""+ExportCst.PREF_REF+"213\">s</a></span>: <span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"66\">inst</a></span>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a> </span>+=<span class=\"g\"><span class=\"g\"><span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"205\">f</a></span>.<span class=\"g\">intValue()</span></span>+<span class=\"g\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"213\">s</a></span>.<span class=\"g\">intValue()</span></span></span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"289\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"126\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage137Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  var seven = 8;\n");
        xml_.append("  for (var i = 0; i < 2; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    seven += 15;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return seven;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <b title=\"int\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">seven</a> </span>=<span class=\"f\"> 8</span></span>;\n" +
                "  <span class=\"f\">for</span> (<b title=\"int\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"79\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">i</a> </span>&lt;<span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a> </span>+=<span class=\"f\"> 15</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">seven</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage138Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case ONE;\n");
        xml_.append("   $case TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"27\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">TWO</a>\n" +
                "</span>}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"52\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"83\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"100\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"117\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"117\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"117\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"31\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage139Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case ONE;\n");
        xml_.append("   case TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"25\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"29\">TWO</a>\n" +
                "</span>}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"48\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"76\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"92\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"29\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage140Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case ONE;\n");
        xml_.append("   $case $null;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"27\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">TWO</a>\n" +
                "</span>}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"52\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"83\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"100\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"117\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"117\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"117\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> $null;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage141Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case ONE;\n");
        xml_.append("   case null;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"25\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"29\">TWO</a>\n" +
                "</span>}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"48\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"76\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"92\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> null;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage142Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExEnum {\n");
        xml_.append(" $public $static $final $int ONE = 10;\n");
        xml_.append(" $public $static $final $int TWO = 8;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int o = 10;\n");
        xml_.append("  $int t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case ExEnum.ONE;\n");
        xml_.append("   $case ExEnum.TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.ExEnum</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"57\">ONE</a> </span>=<span class=\"g\"> 10</span></span>;\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"96\">TWO</a> </span>=<span class=\"g\"> 8</span></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"122\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"153\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"170\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"185\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"185\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"15\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"57\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"185\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"15\">ExEnum</a>.<a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"57\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"15\">ExEnum</a>.<a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"96\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"170\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"170\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage143Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExEnum {\n");
        xml_.append(" public static final int ONE = 10;\n");
        xml_.append(" public static final int TWO = 8;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int o = 10;\n");
        xml_.append("  int t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case(ExEnum.ONE);\n");
        xml_.append("   case(ExEnum.TWO);\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExEnum</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"51\">ONE</a> </span>=<span class=\"g\"> 10</span></span>;\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"86\">TWO</a> </span>=<span class=\"g\"> 8</span></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"110\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"138\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"154\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"13\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"51\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span>(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"13\">ExEnum</a>.<a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"51\">ONE</a>);\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span>(<a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"13\">ExEnum</a>.<a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"86\">TWO</a>);\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"154\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"154\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage144Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO;\n");
        xml_.append(" $public $static $final $int THREE = 9;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case ONE;\n");
        xml_.append("   $case TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"27\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">TWO</a></span>;\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"65\">THREE</a> </span>=<span class=\"g\"> 9</span></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"93\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"124\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"158\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"158\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"158\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"31\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage145Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO;\n");
        xml_.append(" public static final int THREE = 9;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case ONE;\n");
        xml_.append("   case TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  return 1+(int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"25\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"29\">TWO</a></span>;\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"59\">THREE</a> </span>=<span class=\"g\"> 9</span></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"85\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"113\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"129\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"146\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"146\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"25\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"29\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"129\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\">1</span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"129\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage146Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{0,1}) lab {\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   break lab;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>) <a name=\""+ExportCst.PREF_REF+"99\">lab</a> {\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"114\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"114\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   break <a href=\"#"+ExportCst.PREF_REF+"99\">lab</a>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage147Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{0,1}) lab {\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   continue lab;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>) <a name=\""+ExportCst.PREF_REF+"99\">lab</a> {\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"114\">t</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>==<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"114\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   continue <a href=\"#"+ExportCst.PREF_REF+"99\">lab</a>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage148Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return (Ex)$null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)<span class=\"f\">$null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage149Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Ex exmeth(){\n");
        xml_.append("  return (Ex)null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"40\">exmeth</a>(){\n" +
                "  return <span class=\"f\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)<span class=\"f\">null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage150Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return $(Ex)$null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)<span class=\"f\">$null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage151Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Ex exmeth(){\n");
        xml_.append("  return $(Ex)null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"40\">exmeth</a>(){\n" +
                "  return <span class=\"f\">$(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)<span class=\"f\">null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage152Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int i=0;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $static(Ex).i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"46\">i</a></span>=<span class=\"g\">0</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"73\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$static(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)</span>.<span class=\"f\"><a title=\"pkg.Ex.i\" href=\"#"+ExportCst.PREF_REF+"46\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage153Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int i=0;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return static(Ex).i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">i</a></span>=<span class=\"g\">0</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">static(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>.<span class=\"f\"><a title=\"pkg.Ex.i\" href=\"#"+ExportCst.PREF_REF+"41\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage154Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return null instanceof Ex;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"p\"><span class=\"f\">null </span>instanceof <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage155Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static class ExTwo{}\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return null instanceof Ex<ExTwo>;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static class <a name=\""+ExportCst.PREF_REF+"46\">ExTwo</a>{}\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"77\">exmeth</a>(){\n" +
                "  return <span class=\"p\"><span class=\"f\">null </span>instanceof <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;<a title=\"pkg.Ex..ExTwo\" href=\"#"+ExportCst.PREF_REF+"46\">ExTwo</a>&gt;</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage156Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public class Inner<U> {\n");
        xml_.append("  public int field;\n");
        xml_.append("  public(int p){\n");
        xml_.append("   field=p;\n");
        xml_.append("  }\n");
        xml_.append("  public int get(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public int call(T p){\n");
        xml_.append("  Fct<int,Ex<T>.Inner<T>> c = this.$lambda(Inner<T>,new,int);\n");
        xml_.append("  Ex<T>.Inner<T> instance = c.call(14);\n");
        xml_.append("  return instance.get();\n");
        xml_.append(" }\n");
        xml_.append(" public int call2(T p){\n");
        xml_.append("  return call(p);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex<String> instance = new Ex<String>();\n");
        xml_.append("  return instance.call2(\"\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"45\">U</a>&gt; {\n" +
                "  public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"72\">public(</a>int <a name=\""+ExportCst.PREF_REF+"83\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"116\">get</a>(){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  }\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"159\">call</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">T</a> <a name=\""+ExportCst.PREF_REF+"166\">p</a>){\n" +
                "  Fct&lt;int,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">c</a> </span>=<span class=\"f\"><span class=\"f\"> this</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"72\">$lambda</a>(<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;,new,int)</span></span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"249\">instance</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"196\">c</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">14</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">instance</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.get()\" href=\"#"+ExportCst.PREF_REF+"116\">get</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"312\">call2</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">T</a> <a name=\""+ExportCst.PREF_REF+"320\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.call(#T)\" href=\"#"+ExportCst.PREF_REF+"159\">call</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"320\">p</a></span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"364\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;String&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"387\">instance</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;String&gt;()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"387\">instance</a></span>.<span class=\"f\"><a title=\"pkg.Ex.call2(#T)\" href=\"#"+ExportCst.PREF_REF+"312\">call2</a>(<span class=\"f\"><span class=\"s\">\"\"</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage157Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public class Inner<U> {\n");
        xml_.append("  public int field;\n");
        xml_.append("  public(U p){\n");
        xml_.append("   field=(int)p;\n");
        xml_.append("  }\n");
        xml_.append("  public int get(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public int call(T p){\n");
        xml_.append("  Fct<T,Ex<T>.Inner<T>> c = this.$lambda(Inner<T>,new,T);\n");
        xml_.append("  Ex<T>.Inner<T> instance = c.call((T)14);\n");
        xml_.append("  return instance.get();\n");
        xml_.append(" }\n");
        xml_.append(" public int call2(T p){\n");
        xml_.append("  return call(p);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex<int> instance = new Ex<int>();\n");
        xml_.append("  return instance.call2(0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"45\">U</a>&gt; {\n" +
                "  public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"72\">public(</a><a href=\"#"+ExportCst.PREF_REF+"45\">U</a> <a name=\""+ExportCst.PREF_REF+"81\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span>=<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"81\">p</a></span></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"119\">get</a>(){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ex..Inner.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span>;\n" +
                "  }\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"162\">call</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">T</a> <a name=\""+ExportCst.PREF_REF+"169\">p</a>){\n" +
                "  Fct&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"197\">c</a> </span>=<span class=\"f\"><span class=\"f\"> this</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner(#U)\" href=\"#"+ExportCst.PREF_REF+"72\">$lambda</a>(<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;,new,<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>)</span></span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"248\">instance</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"197\">c</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">T</a>)<span class=\"f\">14</span></span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"248\">instance</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.get()\" href=\"#"+ExportCst.PREF_REF+"119\">get</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"314\">call2</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">T</a> <a name=\""+ExportCst.PREF_REF+"322\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.call(#T)\" href=\"#"+ExportCst.PREF_REF+"162\">call</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"322\">p</a></span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"366\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"386\">instance</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"386\">instance</a></span>.<span class=\"f\"><a title=\"pkg.Ex.call2(#T)\" href=\"#"+ExportCst.PREF_REF+"314\">call2</a>(<span class=\"f\">0</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage158Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex().$lambda(Ex,inst,$id,Ex).call(null);\n");
        xml_.append(" }\n");
        xml_.append(" public int inst(Ex p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.inst(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"120\">$lambda</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,inst,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">null</span>)</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"120\">inst</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"128\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage159Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Ex exmeth(){\n");
        xml_.append("  return defaultValue(Ex);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"40\">exmeth</a>(){\n" +
                "  return <span class=\"f\">defaultValue(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage160Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex().inst($id(Ex,Ex),null);\n");
        xml_.append(" }\n");
        xml_.append(" public int inst(Ex p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.inst(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"107\">inst</a>(<span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>,<span class=\"f\">null</span>)</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"107\">inst</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"115\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage161Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new ExTwo<Integer>().inst($id(ExTwo,T),null);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T> {\n");
        xml_.append(" public int inst(T p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex2", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"Ex2.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>&lt;Integer&gt;()</span>.<span class=\"f\"><a title=\"pkg.ExTwo.inst(#T)\" href=\"Ex2.html#"+ExportCst.PREF_REF+"40\">inst</a>(<span class=\"f\">$id(<a title=\"pkg.ExTwo\" href=\"Ex2.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"Ex2.html#"+ExportCst.PREF_REF+"23\">T</a>)</span>,<span class=\"f\">null</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage161_Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new ExTwo<Integer>().inst($id(ExTwo,T),null);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T> {\n");
        xml_.append(" public int inst(T p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex2", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"Ex2.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>&lt;Integer&gt;()</span>.<span class=\"f\"><a title=\"pkg.ExTwo.inst(#T)\" href=\"Ex2.html#"+ExportCst.PREF_REF+"40\">inst</a>(<span class=\"f\">$id(<a title=\"pkg.ExTwo\" href=\"Ex2.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"Ex2.html#"+ExportCst.PREF_REF+"23\">T</a>)</span>,<span class=\"f\">null</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage162Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex().inst($id(Ex,static,Ex),null);\n");
        xml_.append(" }\n");
        xml_.append(" public static int inst(Ex p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.static inst(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"121\">inst</a>(<span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,static,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>,<span class=\"f\">null</span>)</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"121\">inst</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"129\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage163Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static Ex<int> exmeth(){\n");
        xml_.append("  return new Ex<>();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a><a title=\"pkg.Ex&lt;int&gt;\">&lt;&gt;</a>()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage163_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static Ex<int> exmeth(){\n");
        xml_.append("  return new pkg. Ex<>();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">pkg. Ex</a><a title=\"pkg.Ex&lt;int&gt;\">&lt;&gt;</a>()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage164Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public class Inner<S> {\n");
        xml_.append(" }\n");
        xml_.append(" public Inner<int> exmeth(){\n");
        xml_.append("  return new Inner<>();\n");
        xml_.append(" }\n");
        xml_.append(" public static Ex<int>.Inner<int> exmeth(){\n");
        xml_.append("  return new Ex<int>().exmeth();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"45\">S</a>&gt; {\n" +
                " }\n" +
                " public <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"72\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a><a title=\"pkg.Ex&lt;#T&gt;..Inner&lt;int&gt;\">&lt;&gt;</a>()</span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"143\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;()</span>.<span class=\"f\"><a title=\"pkg.Ex.exmeth()\" href=\"#"+ExportCst.PREF_REF+"72\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage165Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public class Inner<S> {\n");
        xml_.append(" }\n");
        xml_.append(" public static Ex<int>.Inner<int> exmeth(){\n");
        xml_.append("  return new Ex<int>().new Inner<>();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"39\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"45\">S</a>&gt; {\n" +
                " }\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;.<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"87\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;()</span>.<span class=\"f\">new <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"39\">Inner</a><a title=\"pkg.Ex&lt;int&gt;..Inner&lt;int&gt;\">&lt;&gt;</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage166Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static Ex<int>[] exmeth(){\n");
        xml_.append("  return new Ex<>[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;[] <a name=\""+ExportCst.PREF_REF+"50\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a><a title=\"pkg.Ex&lt;int&gt;\">&lt;&gt;</a>[<span class=\"f\">0</span>]</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage167Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static Ex<?> exmeth(){\n");
        xml_.append("  return new Ex<int>();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;?&gt; <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage168Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Ex[] exmeth(){\n");
        xml_.append("  return new Ex[]{};\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>[] <a name=\""+ExportCst.PREF_REF+"42\">exmeth</a>(){\n" +
                "  return <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>[]{}</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage169Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Ex[] exmeth(){\n");
        xml_.append("  return {};\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>[] <a name=\""+ExportCst.PREF_REF+"42\">exmeth</a>(){\n" +
                "  return <span class=\"f\">{}</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage170Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex().inst($vararg(Ex),$firstopt(null));\n");
        xml_.append(" }\n");
        xml_.append(" public static int inst(Ex... p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.static inst(pkg.Ex...)\" href=\"#"+ExportCst.PREF_REF+"126\">inst</a>(<span class=\"f\">$vararg(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>,<span class=\"f\">$firstopt(<span class=\"f\">null</span>)</span>)</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"126\">inst</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>... <a name=\""+ExportCst.PREF_REF+"137\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage171Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex().inst($vararg(Ex));\n");
        xml_.append(" }\n");
        xml_.append(" public static int inst(Ex... p){\n");
        xml_.append("  return \"\".length();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.static inst(pkg.Ex...)\" href=\"#"+ExportCst.PREF_REF+"110\">inst</a>(<span class=\"f\">$vararg(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>)</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"110\">inst</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>... <a name=\""+ExportCst.PREF_REF+"121\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>.<span class=\"f\">length()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage172Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExSuper {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public int this(int param){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int param){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex:ExSuper {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  return e.super[8];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExSuper</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"39\">field</a></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"58\">this</a>(int <a name=\""+ExportCst.PREF_REF+"67\">param</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExSuper.field\" href=\"#"+ExportCst.PREF_REF+"39\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"107\">this</a>(int <a name=\""+ExportCst.PREF_REF+"116\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.ExSuper.field\" href=\"#"+ExportCst.PREF_REF+"39\">field</a> </span>=<span class=\"n\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"159\">pkg.Ex</a>:<a title=\"pkg.ExSuper\" href=\"#"+ExportCst.PREF_REF+"13\">ExSuper</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"195\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"159\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"210\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"159\">Ex</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"210\">e</a></span>.<span class=\"f\">super</span></span><span class=\"f\"><a title=\"pkg.ExSuper.[](int)\" href=\"#"+ExportCst.PREF_REF+"58\">[</a><span class=\"f\">8</span><a title=\"pkg.ExSuper.[](int)\" href=\"#"+ExportCst.PREF_REF+"58\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage173Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  return e.that[8];\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int param){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int param){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"60\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">e</a></span>.<span class=\"f\">that</span></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"124\">[</a><span class=\"f\">8</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"124\">]</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"124\">this</a>(int <a name=\""+ExportCst.PREF_REF+"133\">param</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"173\">this</a>(int <a name=\""+ExportCst.PREF_REF+"182\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"n\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage174Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  return e.classchoice(Ex)[8];\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int param){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int param){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"60\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">e</a></span>.<span class=\"f\">classchoice(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"135\">[</a><span class=\"f\">8</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"135\">]</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"135\">this</a>(int <a name=\""+ExportCst.PREF_REF+"144\">param</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"184\">this</a>(int <a name=\""+ExportCst.PREF_REF+"193\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"n\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage175Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  return e.thisaccess(Ex)[8];\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int param){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int param){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"60\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">e</a></span>.<span class=\"f\">thisaccess(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"134\">[</a><span class=\"f\">8</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"134\">]</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"134\">this</a>(int <a name=\""+ExportCst.PREF_REF+"143\">param</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"183\">this</a>(int <a name=\""+ExportCst.PREF_REF+"192\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"n\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage176Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  return e.superaccess(Ex)[8];\n");
        xml_.append(" }\n");
        xml_.append(" public int this(int param){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int param){\n");
        xml_.append("  field = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"60\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">e</a></span>.<span class=\"f\">superaccess(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span></span><span class=\"f\"><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"135\">[</a><span class=\"f\">8</span><a title=\"pkg.Ex.[](int)\" href=\"#"+ExportCst.PREF_REF+"135\">]</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"135\">this</a>(int <a name=\""+ExportCst.PREF_REF+"144\">param</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"184\">this</a>(int <a name=\""+ExportCst.PREF_REF+"193\">param</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"n\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage177Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum<T,S> {\n");
        xml_.append(" ONE<Ex,ExTwo>,\n");
        xml_.append(" TWO<ExTwo,Ex>{}\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a>&lt;<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">S</a>&gt; {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">ONE</a>&lt;<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"104\">Ex</a>,<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"78\">ExTwo</a>&gt;</span>,\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"47\">TWO</a>&lt;<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"78\">ExTwo</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"104\">Ex</a>&gt;</span>{}\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"78\">pkg.ExTwo</a> {}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"104\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"132\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage_177Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum<T,S> {\n");
        xml_.append(" ONE< Ex, ExTwo>,\n");
        xml_.append(" TWO< ExTwo, Ex>{}\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a>&lt;<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">S</a>&gt; {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">ONE</a>&lt; <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"108\">Ex</a>, <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"82\">ExTwo</a>&gt;</span>,\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"49\">TWO</a>&lt; <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"82\">ExTwo</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"108\">Ex</a>&gt;</span>{}\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"82\">pkg.ExTwo</a> {}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"108\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"136\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage_178Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum<T,S> {\n");
        xml_.append(" ONE< Ex , ExTwo >,\n");
        xml_.append(" TWO< ExTwo , Ex >{}\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a>&lt;<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">S</a>&gt; {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">ONE</a>&lt; <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"112\">Ex</a> , <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"86\">ExTwo</a> &gt;</span>,\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"51\">TWO</a>&lt; <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"86\">ExTwo</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"112\">Ex</a> &gt;</span>{}\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"86\">pkg.ExTwo</a> {}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"112\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"140\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage178Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static int count;\n");
        xml_.append(" public int field = ++count;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (ExTwo e: {new ExTwo(),new ExTwo(),new ExTwo(),new ExTwo()}){\n");
        xml_.append("   sum += e.field;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a> {\n" +
                " public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">count</a></span>;\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">field</a> </span>=<span class=\"f\"> ++<span class=\"f\"><a title=\"pkg.ExTwo.count\" href=\"#"+ExportCst.PREF_REF+"44\">count</a></span></span></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"95\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"123\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"161\">e</a></span>: <span class=\"f\">{<span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>()</span>,<span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>()</span>,<span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>()</span>,<span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>()</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"161\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"63\">field</a></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage179Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static CustTable<ExTwo,ExTwo> inst=$new CustTable<>();\n");
        xml_.append(" $public $static $int res;\n");
        xml_.append(" $static {\n");
        xml_.append("  $for(ExTwo f, ExTwo s: inst){\n");
        xml_.append("   res += 2;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        files_.put(CUST_ITER_PATH, getCustomIterator());
        files_.put(CUST_LIST_PATH, getCustomList());
        files_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        files_.put(CUST_TABLE_PATH, getCustomTable());
        files_.put(CUST_PAIR_PATH, getCustomPair());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"44\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a>&lt;<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"15\">ExTwo</a>,<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"15\">ExTwo</a>&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"93\">inst</a></span>=<span class=\"g\"><a title=\"pkg.CustTable.pkg.CustTable()\" href=\"CustTable.html#"+ExportCst.PREF_REF+"97\">$new</a> <a title=\"pkg.CustTable\" href=\"CustTable.html#"+ExportCst.PREF_REF+"15\">CustTable</a><a title=\"pkg.CustTable&lt;pkg.ExTwo,pkg.ExTwo&gt;\">&lt;&gt;</a>()</span></span>;\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"140\">res</a></span>;\n" +
                " $static {\n" +
                "  <span class=\"p\">$for(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"15\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"169\">f</a>, <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"15\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"178\">s</a></span>: <span class=\"g\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"93\">inst</a></span>){\n" +
                "   <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"140\">res</a> </span>+=<span class=\"n\"> 2</span></span>;\n" +
                "  }\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"230\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.res\" href=\"#"+ExportCst.PREF_REF+"140\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage180Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field = 15;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  try {\n");
        xml_.append("   throw new Ex();\n");
        xml_.append("  }\n");
        xml_.append("  catch (Ex e){\n");
        xml_.append("   return e.field;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  try {\n" +
                "   throw <span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"118\">e</a>){\n" +
                "   return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"118\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"34\">field</a></span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage181Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int field = 15;\n");
        xml_.append(" public static Ex exmeth(){\n");
        xml_.append("  for (Ex e = new Ex();;) {\n");
        xml_.append("   return e;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"64\">exmeth</a>(){\n" +
                "  for (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"84\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;;) {\n" +
                "   return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">e</a></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage182Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot\n");
        xml_.append("@MyAnnotTwo\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                "<span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"111\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"142\">catching</a>(){\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage183Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return catching(0i);\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(@MyAnnot@MyAnnotTwo $int p){\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.$static catching($int)\" href=\"#"+ExportCst.PREF_REF+"182\">catching</a>(<span class=\"f\">0i</span>)</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"182\">catching</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"216\">p</a>){\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage184Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return catching(0i,1i);\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(@MyAnnot $int p,@MyAnnotTwo $int q){\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.$static catching($int,$int)\" href=\"#"+ExportCst.PREF_REF+"185\">catching</a>(<span class=\"f\">0i</span>,<span class=\"f\">1i</span>)</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"185\">catching</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span> $int <a name=\""+ExportCst.PREF_REF+"208\">p</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"227\">q</a>){\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage185Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append(" $public Ex(@MyAnnot $int p,@MyAnnotTwo $int q){\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"150\">$public Ex(</a><span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span> $int <a name=\""+ExportCst.PREF_REF+"175\">p</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"194\">q</a>){\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage186Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$operator+ pkg.Ex(@pkg.MyAnnot pkg.Ex p,@pkg.MyAnnotTwo pkg.Ex q){\n");
        xml_.append(" $return $new pkg.Ex();\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "$operator<a name=\""+ExportCst.PREF_REF+"160\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a></span> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"189\">p</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a></span> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"214\">q</a>){\n" +
                " $return <span class=\"n\">$new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a>()</span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage187Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"77\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"108\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"130\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"77\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"130\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage188Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("public enum pkg.ExEnum<T,S> {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" ONE<Ex,ExTwo>,\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" TWO<ExTwo,Ex>{}\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"52\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"83\">pkg.ExEnum</a>&lt;<a name=\""+ExportCst.PREF_REF+"94\">T</a>,<a name=\""+ExportCst.PREF_REF+"96\">S</a>&gt; {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"18\">MyAnnot</a></span>\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"112\">ONE</a>&lt;<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"198\">Ex</a>,<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"172\">ExTwo</a>&gt;</span>,\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"52\">MyAnnotTwo</a></span>\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"141\">TWO</a>&lt;<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"172\">ExTwo</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"198\">Ex</a>&gt;</span>{}\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"172\">pkg.ExTwo</a> {}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"198\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"226\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage189Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" public static int field;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"52\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"84\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"18\">MyAnnot</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"52\">MyAnnotTwo</a></span>\n" +
                " public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"135\">field</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage190Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"52\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"84\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"18\">MyAnnot</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"52\">MyAnnotTwo</a></span>\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"135\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage191Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" public Ex(){\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 7;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"52\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"84\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"18\">MyAnnot</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"52\">MyAnnotTwo</a></span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"117\">public Ex(</a>){\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"152\">exmeth</a>(){\n" +
                "  return <span class=\"f\">7</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage192Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@pkg.MyAnnot\n");
        xml_.append("@pkg.MyAnnotTwo\n");
        xml_.append("$operator+ pkg.Ex(pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" $return $new pkg.Ex();\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a></span>\n" +
                "<span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a></span>\n" +
                "$operator<a name=\""+ExportCst.PREF_REF+"189\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"205\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"215\">q</a>){\n" +
                " $return <span class=\"n\">$new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"90\">pkg.Ex</a>()</span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage193Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" $int method();\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"95\">pkg.MyAnnotThree</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span>\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"143\">method</a>();\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"170\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"201\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage194Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$classchoice(ExTwo)field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"384\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$classchoice(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"384\">ExTwo</a>)<a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"342\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"384\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"410\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage195Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator+ pkg.Ex (pkg.Ex p, pkg.Ex q){\n");
        xml_.append(" pkg.Ex out = $new pkg.Ex();\n");
        xml_.append(" out.field = p.field+q.field;\n");
        xml_.append(" $return out;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex:ExTwo {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  pkg.Ex one = $new pkg.Ex();\n");
        xml_.append("  pkg.Ex two = $new pkg.Ex();\n");
        xml_.append("  one.field = 1;\n");
        xml_.append("  two.field = 2;\n");
        xml_.append("  $return (one+two).$superaccess(ExTwo)field;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExTwo {\n");
        xml_.append(" $public $int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator<a name=\""+ExportCst.PREF_REF+"9\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"26\">p</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"36\">q</a>){\n" +
                " <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">out</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                " <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"26\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"36\">q</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span></span></span>;\n" +
                " $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"48\">out</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"384\">ExTwo</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"186\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"130\">pkg.Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">one</a></span><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"9\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"216\">two</a></span></span>)</span>.<span class=\"f\">$superaccess(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"384\">ExTwo</a>)<a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"410\">field</a></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"342\">call</a>(){\n" +
                "  $return <span class=\"n\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"384\">pkg.ExTwo</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"410\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage196Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" MyAnnotTwo method() @MyAnnotTwo;\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"90\">MyAnnotTwo</a> <a name=\""+ExportCst.PREF_REF+"46\">method</a>() <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"90\">MyAnnotTwo</a></span>;\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"90\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"124\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"155\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage197Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.IntOne {}\n");
        xml_.append("$public $interface pkg.IntTwo {}\n");
        xml_.append("$public $interface pkg.IntThree {}\n");
        xml_.append("$public $interface pkg.IntFour {}\n");
        xml_.append("$public $class pkg.ExParam<T:IntOne&IntTwo,U:IntThree&IntFour> {}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.IntOne</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"52\">pkg.IntTwo</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"85\">pkg.IntThree</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"120\">pkg.IntFour</a> {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"150\">pkg.ExParam</a>&lt;<a name=\""+ExportCst.PREF_REF+"162\">T</a>:<a title=\"pkg.IntOne\" href=\"#"+ExportCst.PREF_REF+"19\">IntOne</a>&amp;<a title=\"pkg.IntTwo\" href=\"#"+ExportCst.PREF_REF+"52\">IntTwo</a>,<a name=\""+ExportCst.PREF_REF+"178\">U</a>:<a title=\"pkg.IntThree\" href=\"#"+ExportCst.PREF_REF+"85\">IntThree</a>&amp;<a title=\"pkg.IntFour\" href=\"#"+ExportCst.PREF_REF+"120\">IntFour</a>&gt; {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"216\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"247\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage198Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.IntOne {}\n");
        xml_.append("$public $interface pkg.IntTwo {}\n");
        xml_.append("$public $interface pkg.IntThree {}\n");
        xml_.append("$public $interface pkg.IntFour {}\n");
        xml_.append("$public $class pkg.ExParam<TV:IntOne&IntTwo,UW:IntThree&IntFour> {}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.IntOne</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"52\">pkg.IntTwo</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"85\">pkg.IntThree</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"120\">pkg.IntFour</a> {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"150\">pkg.ExParam</a>&lt;<a name=\""+ExportCst.PREF_REF+"162\">TV</a>:<a title=\"pkg.IntOne\" href=\"#"+ExportCst.PREF_REF+"19\">IntOne</a>&amp;<a title=\"pkg.IntTwo\" href=\"#"+ExportCst.PREF_REF+"52\">IntTwo</a>,<a name=\""+ExportCst.PREF_REF+"179\">UW</a>:<a title=\"pkg.IntThree\" href=\"#"+ExportCst.PREF_REF+"85\">IntThree</a>&amp;<a title=\"pkg.IntFour\" href=\"#"+ExportCst.PREF_REF+"120\">IntFour</a>&gt; {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"218\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"249\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage199Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.IntOne {}\n");
        xml_.append("$public $interface pkg.IntTwo {}\n");
        xml_.append("$public $interface pkg.IntThree {}\n");
        xml_.append("$public $interface pkg.IntFour {}\n");
        xml_.append("$public $class pkg.ExParam<TVX:IntOne&IntTwo,UWY:IntThree&IntFour> {}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.IntOne</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"52\">pkg.IntTwo</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"85\">pkg.IntThree</a> {}\n" +
                "$public $interface <a name=\""+ExportCst.PREF_REF+"120\">pkg.IntFour</a> {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"150\">pkg.ExParam</a>&lt;<a name=\""+ExportCst.PREF_REF+"162\">TVX</a>:<a title=\"pkg.IntOne\" href=\"#"+ExportCst.PREF_REF+"19\">IntOne</a>&amp;<a title=\"pkg.IntTwo\" href=\"#"+ExportCst.PREF_REF+"52\">IntTwo</a>,<a name=\""+ExportCst.PREF_REF+"180\">UWY</a>:<a title=\"pkg.IntThree\" href=\"#"+ExportCst.PREF_REF+"85\">IntThree</a>&amp;<a title=\"pkg.IntFour\" href=\"#"+ExportCst.PREF_REF+"120\">IntFour</a>&gt; {}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"220\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"251\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage200Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>=<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"87\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"118\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"140\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"87\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"140\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage201Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot( method=2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"> <a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>=<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"88\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"119\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"88\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage202Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append(" $int method2()3;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=2,method2=4)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"57\">method2</a>()<span class=\"f2\">3</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>=<span class=\"f2\">2</span></span>,<span class=\"f2\"><a title=\"pkg.MyAnnot.method2()\" href=\"#"+ExportCst.PREF_REF+"57\">method2</a>=<span class=\"f2\">4</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"115\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"146\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"115\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage203Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\">2</span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"80\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"111\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"133\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"80\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"133\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage204Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method = 5;\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method()+MyAnnot.method;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"40\">method</a> </span>=<span class=\"g\"> 5</span></span>;\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"58\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"58\">method</a>=<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"105\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"136\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"158\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"105\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"158\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"58\">method</a>()</span></span>+<span class=\"f\"><span class=\"f\"><a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method\" href=\"#"+ExportCst.PREF_REF+"40\">method</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage205Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.$lambda(MyAnnot,method).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>=<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"87\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"118\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"140\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"87\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"140\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">$lambda</a>(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>,method)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage206Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return $lambda(MyAnnot,method).call(m);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>=<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"87\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"118\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"140\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"87\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">$lambda</a>(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>,method)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"140\">m</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage207Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $final $int FIELD = 2;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return FIELD+(FIELD+FIELD)+FIELD;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">FIELD</a> </span>=<span class=\"g\"> 2</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"86\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span>+<span class=\"f\">(<span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span>+<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>)</span></span>+<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage208Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $final $int FIELD = 2;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 2;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int exmeth2(){\n");
        xml_.append("  $return FIELD+(FIELD+FIELD)+FIELD;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">FIELD</a> </span>=<span class=\"g\"> 2</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"86\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">2</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"134\">exmeth2</a>(){\n" +
                "  $return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span>+<span class=\"n\">(<span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span>+<span class=\"n\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>)</span></span>+<span class=\"n\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage209Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" String method()\"1\";\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method=\"2\")\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static String catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return $lambda(MyAnnot,method).call(m);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " String <a name=\""+ExportCst.PREF_REF+"42\">method</a>()<span class=\"f2\"><span class=\"s\">\"1\"</span></span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"42\">method</a>=<span class=\"f2\"><span class=\"s\">\"2\"</span></span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"93\">pkg.Ex</a> {\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"126\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"148\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"93\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"42\">$lambda</a>(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>,method)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"148\">m</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage210Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $true;\n");
        xml_.append("  b &&= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage211Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $false;\n");
        xml_.append("  $var c = $true;\n");
        xml_.append("  b &&= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">c</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"false\">&amp;</a>&amp;=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage212Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $false;\n");
        xml_.append("  $var c = $false;\n");
        xml_.append("  b ||= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">c</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"false\">|</a><a title=\"false\">|</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"82\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage213Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $false;\n");
        xml_.append("  b ||= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"true\">|</a>|=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }


    @Test
    public void coverage214Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return explicit(int)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\">explicit(int)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage215Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  return explicit(ExClass)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static explicit(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"161\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass</a>)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"105\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"131\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"161\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"174\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"188\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"131\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"174\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage216Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  return explicit(ExClass)new ExClass();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  return <span class=\"f\">explicit(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>)<span class=\"f\">new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"143\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"173\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"186\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"200\">out</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"200\">out</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"143\">field</a> </span></span>=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"186\">i</a></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"200\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage217Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  return explicit(ExClass,int)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"109\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static explicit(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"165\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"109\">ExClass</a>,int)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"109\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"109\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"165\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"178\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"109\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"192\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"109\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"135\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"178\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"192\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage218Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass<int> method(){\n");
        xml_.append("  return explicit(ExClass<int>,T)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static ExClass<T> explicit(T i){\n");
        xml_.append("  ExClass<T> out = new ExClass<T>();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"53\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static explicit(pkg.ExClass&lt;#T&gt;,#T)\" href=\"#"+ExportCst.PREF_REF+"177\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>&lt;int&gt;,<a href=\"#"+ExportCst.PREF_REF+"129\">T</a>)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"129\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"129\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"144\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"129\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"177\">explicit</a>(<a href=\"#"+ExportCst.PREF_REF+"129\">T</a> <a name=\""+ExportCst.PREF_REF+"188\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"129\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"205\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"117\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"129\">T</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"144\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"188\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage219Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  Fct<int,ExClass> fct = $lambda(ExClass,explicit,int);\n");
        xml_.append("  return fct.call(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  Fct&lt;int,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">fct</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.static explicit(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"210\">$lambda</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a>,explicit,int)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"154\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"180\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"210\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"223\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"237\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"237\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"180\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"223\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"237\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage220Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  Fct<int,ExClass> fct = $lambda(ExClass,explicit,$id,int);\n");
        xml_.append("  return fct.call(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  Fct&lt;int,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">fct</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.static explicit(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"214\">$lambda</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a>,explicit,$id,int)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"158\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"184\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"214\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"227\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"241\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"158\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"241\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"184\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"227\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"241\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage221Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass<int> method(){\n");
        xml_.append("  return new ExClassTwo<int>().method(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClassTwo<S> {\n");
        xml_.append(" public ExClass<S> method(S i){\n");
        xml_.append("  Fct<S,ExClass<S>> fct = $lambda(ExClass<S>,explicit,S);\n");
        xml_.append("  return fct.call(i);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static ExClass<T> explicit(T i){\n");
        xml_.append("  ExClass<T> out = new ExClass<T>();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"53\">method</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"123\">ExClassTwo</a>&lt;int&gt;()</span>.<span class=\"f\"><a title=\"pkg.ExClassTwo.method(#S)\" href=\"#"+ExportCst.PREF_REF+"162\">method</a>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"123\">pkg.ExClassTwo</a>&lt;<a name=\""+ExportCst.PREF_REF+"138\">S</a>&gt; {\n" +
                " public <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"138\">S</a>&gt; <a name=\""+ExportCst.PREF_REF+"162\">method</a>(<a href=\"#"+ExportCst.PREF_REF+"138\">S</a> <a name=\""+ExportCst.PREF_REF+"171\">i</a>){\n" +
                "  Fct&lt;<a href=\"#"+ExportCst.PREF_REF+"138\">S</a>,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"138\">S</a>&gt;&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"195\">fct</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.static explicit(pkg.ExClass&lt;#T&gt;,#T)\" href=\"#"+ExportCst.PREF_REF+"333\">$lambda</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"138\">S</a>&gt;,explicit,<a href=\"#"+ExportCst.PREF_REF+"138\">S</a>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"195\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"171\">i</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"273\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"285\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"285\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"300\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"285\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"333\">explicit</a>(<a href=\"#"+ExportCst.PREF_REF+"285\">T</a> <a name=\""+ExportCst.PREF_REF+"344\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"285\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"361\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"273\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"285\">T</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"361\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"300\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"344\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"361\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage222Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass<int> method(){\n");
        xml_.append("  Fct<int,ExClass<int>> fct = $lambda(ExClass<int>,explicit,$id,T);\n");
        xml_.append("  return fct.call(5);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static ExClass<T> explicit(T i){\n");
        xml_.append("  ExClass<T> out = new ExClass<T>();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"53\">method</a>(){\n" +
                "  Fct&lt;int,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;int&gt;&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"87\">fct</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.static explicit(pkg.ExClass&lt;#T&gt;,#T)\" href=\"#"+ExportCst.PREF_REF+"231\">$lambda</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;int&gt;,explicit,$id,<a href=\"#"+ExportCst.PREF_REF+"183\">T</a>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"87\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">5</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"171\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"183\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"183\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"198\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"183\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"231\">explicit</a>(<a href=\"#"+ExportCst.PREF_REF+"183\">T</a> <a name=\""+ExportCst.PREF_REF+"242\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"183\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"259\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"171\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"183\">T</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"198\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"242\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage223Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  Fct<Object,String> fct = $lambda(String,explicit,Object);\n");
        xml_.append("  return fct.call(\"5\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  Fct&lt;Object,String&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">fct</a> </span>=<span class=\"f\"> $lambda(String,explicit,Object)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><span class=\"s\">\"5\"</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage224Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static Apply method(){\n");
        xml_.append("  Fct<Object,Apply> fct = $lambda(Apply,explicit,Object);\n");
        xml_.append("  return fct.call(new Apply());\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a> <a name=\""+ExportCst.PREF_REF+"46\">method</a>(){\n" +
                "  Fct&lt;Object,<a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"76\">fct</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a>,explicit,Object)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"76\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">new <a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a>()</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage225Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClassTwo method(){\n");
        xml_.append("  return explicit(ExClassTwo,ExClass) explicit(ExClass,int)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass explicit(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClassTwo {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClassTwo explicit(ExClass i){\n");
        xml_.append("  ExClassTwo out = new ExClassTwo();\n");
        xml_.append("  out.field = i.field;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"294\">ExClassTwo</a> <a name=\""+ExportCst.PREF_REF+"51\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClassTwo.static explicit(pkg.ExClassTwo,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"356\">explicit</a>(<a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"294\">ExClassTwo</a>,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>)<span class=\"f\"> <a title=\"pkg.ExClass.static explicit(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"197\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>,int)<span class=\"f\">5</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"141\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"197\">explicit</a>(int <a name=\""+ExportCst.PREF_REF+"210\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"224\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"210\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"294\">pkg.ExClassTwo</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"323\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"294\">ExClassTwo</a> <a name=\""+ExportCst.PREF_REF+"356\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"373\">i</a>){\n" +
                "  <a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"294\">ExClassTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"390\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClassTwo\" href=\"#"+ExportCst.PREF_REF+"294\">ExClassTwo</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"390\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClassTwo.field\" href=\"#"+ExportCst.PREF_REF+"323\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"373\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"390\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage226Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int i=0;\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return staticCall(Ex).i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">i</a></span>=<span class=\"g\">0</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)</span>.<span class=\"f\"><a title=\"pkg.Ex.i\" href=\"#"+ExportCst.PREF_REF+"41\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage227Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $new StringBuilder(\"\t\"+\"\n\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$new StringBuilder(<span class=\"f\"><span class=\"f\"><span class=\"s\">\"\t\"</span></span>+<span class=\"f\"><span class=\"s\">\"\n\"</span></span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage228Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  {$return 1i;}\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  {$return <span class=\"f\">1i</span>;}\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage229Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 1 ?? 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">1 </span>??<span class=\"n\"> 2</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage230Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return null ?? 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">null </span>??<span class=\"f\"> 2</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage231Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 1 ?? null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">1 </span>??<span class=\"n\"> null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage232Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return (int)(null ?? null);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\">(int)<span class=\"f\">(<span class=\"f\"><span class=\"f\">null </span>??<span class=\"f\"> null</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage233Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 1 ?? 2;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"n\"><span class=\"n\">1 </span>??<span class=\"n\"> 2</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"90\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage234Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return null ?? 2;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"n\"><span class=\"n\">null </span>??<span class=\"n\"> 2</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"93\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage235Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 1 ?? null;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"n\"><span class=\"n\">1 </span>??<span class=\"n\"> null</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"93\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage236Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return (int)(null ?? null);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"n\">(int)<span class=\"n\">(<span class=\"n\"><span class=\"n\">null </span>??<span class=\"n\"> null</span></span>)</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"103\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage237Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ?? j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">i</a> </span><a title=\"not null\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"78\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage238Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ?? j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">i</a> </span><a title=\"null\">?</a><a title=\"not null\">?</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage239Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ?? j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">i</a> </span><a title=\"not null\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"78\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage240Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ?? j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">i</a> </span><a title=\"null\">?</a><a title=\"null\">?</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage241Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = true;\n");
        xml_.append("  Boolean j = true;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"true\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage242Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = true;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"true\">?</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage243Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = true;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"true\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage244Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"null\">?</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage245Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage246Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"false\">?</a><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage247Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return (boolean)(i ?? j);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>?<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage248Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return true ?? i ?? j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\">true </span>??<span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span>??<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage249Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return true ?? false ?? null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">true </span>??<span class=\"n\"><span class=\"n\"> false </span>??<span class=\"n\"> null</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage250Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean v = true;\n");
        xml_.append("  return (boolean)(v ?? false ?? null);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\">(boolean)<span class=\"p\">(<span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">?</a>?<span class=\"n\"><span class=\"n\"> false </span>??<span class=\"n\"> null</span></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage251Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  Boolean v = null;\n");
        xml_.append("  return v ?? false ?? true;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"null\">?</a>?<span class=\"f\"><span class=\"f\"> false </span>??<span class=\"f\"> true</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage252Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Integer v = null;\n");
        xml_.append("  return v ?? 0 ?? 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">v</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">v</a> </span><a title=\"null\">?</a>?<span class=\"f\"><span class=\"f\"> 0 </span>??<span class=\"f\"> 1</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage253Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>?=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage254Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"false\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage255Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>?=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage256Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage257Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = true;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"true\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage258Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"not null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage259Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>?=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage260Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>?=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage261Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a><a title=\"null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage262Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ??= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"90\">exmeth</a>(){\n" +
                "  Integer <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"110\">i</a> </span>=<span class=\"n\"> null</span></span>;\n" +
                "  Integer <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"130\">j</a> </span>=<span class=\"n\"> null</span></span>;\n" +
                "  return <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"110\">i</a> </span>??=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"130\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage263Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  return i ??= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>?=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage264Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  return i ??= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage265Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  return i ??= 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>?=<span class=\"n\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage266Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  return i ??= 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?=<span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage267Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static Ex<int> field = new Ex<>();\n");
        xml_.append(" public static Ex<int> exmeth(){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"48\">field</a> </span>=<span class=\"g\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a><a title=\"pkg.Ex&lt;int&gt;\">&lt;&gt;</a>()</span></span>;\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"91\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"48\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage268Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public static final Ex<int> field = new Ex<>();\n");
        xml_.append(" public static Ex<int> exmeth(){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">T</a>&gt; {\n" +
                " public static final <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"54\">field</a> </span>=<span class=\"g\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a><a title=\"pkg.Ex&lt;int&gt;\">&lt;&gt;</a>()</span></span>;\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"97\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"54\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage269Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int count=0;\n");
        xml_.append("  for (Integer i: {null,1}){\n");
        xml_.append("   count += i ?? 2;\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">count</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"81\">i</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"81\">i</a> </span>??<span class=\"f\"> 2</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage270Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int count=0;\n");
        xml_.append("  for (Integer i: {null,1}){\n");
        xml_.append("   for (Integer j: {null,2}){\n");
        xml_.append("    count += i ?? j;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">count</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"81\">i</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"111\">j</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">2</span>}</span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"81\">i</a> </span>??<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"111\">j</a></span></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage271Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean count=false;\n");
        xml_.append("  for (Boolean i: {null,true,false}){\n");
        xml_.append("   for (Boolean j: {null,true,false}){\n");
        xml_.append("    count = i ?? j;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">count</a></span>=<span class=\"f\">false</span></span>;\n" +
                "  <span class=\"f\">for (Boolean <a name=\""+ExportCst.PREF_REF+"93\">i</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">true</span>,<span class=\"f\">false</span>}</span>){\n" +
                "   <span class=\"f\">for (Boolean <a name=\""+ExportCst.PREF_REF+"132\">j</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">true</span>,<span class=\"f\">false</span>}</span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">count</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">i</a> </span>??<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"132\">j</a></span></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage272Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int count=0;\n");
        xml_.append("  for (Integer i: {null,1}){\n");
        xml_.append("   count += i ?. intValue();\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">count</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"81\">i</a></span>: <span class=\"f\">{<span class=\"f\">null</span>,<span class=\"f\">1</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"81\">i</a> </span>?.<span class=\"f\"> intValue()</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage273Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int count=0;\n");
        xml_.append("  for (Integer i: {null}){\n");
        xml_.append("   count += i ?. intValue();\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">count</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"81\">i</a></span>: <span class=\"f\">{<span class=\"f\">null</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a> </span>+=<span class=\"f\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">i</a> </span><a title=\"null\">?</a>.<span class=\"n\"> intValue()</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage274Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int count=0;\n");
        xml_.append("  for (Integer i: {1}){\n");
        xml_.append("   count += i ?. intValue();\n");
        xml_.append("  }\n");
        xml_.append("  return count;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">count</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\">for (Integer <a name=\""+ExportCst.PREF_REF+"81\">i</a></span>: <span class=\"f\">{<span class=\"f\">1</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a> </span>+=<span class=\"f\"><span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">i</a> </span><a title=\"not null\">?</a>.<span class=\"f\"> intValue()</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">count</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage275Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static pkg.Ex.ExInner..ONE INSTANCE = ExInner.ONE;\n");
        xml_.append("public static int field = INSTANCE.first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"34\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"45\">ONE</a></span>{public int <a name=\""+ExportCst.PREF_REF+"60\">first</a>(int <a name=\""+ExportCst.PREF_REF+"70\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"70\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">pkg.Ex</a>.<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"34\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"45\">ONE</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"129\">INSTANCE</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"34\">ExInner</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.ONE\" href=\"#"+ExportCst.PREF_REF+"45\">ONE</a></span></span></span>;\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"171\">field</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex.INSTANCE\" href=\"#"+ExportCst.PREF_REF+"129\">INSTANCE</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.first(int)\" href=\"#"+ExportCst.PREF_REF+"60\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"217\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage276Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public static int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static int field = pkg.Ex.ExInner..ONE.first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"34\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"45\">ONE</a></span>{public static int <a name=\""+ExportCst.PREF_REF+"67\">first</a>(int <a name=\""+ExportCst.PREF_REF+"77\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"77\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"120\">field</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">pkg.Ex</a>.<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"34\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"45\">ONE</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.static first(int)\" href=\"#"+ExportCst.PREF_REF+"67\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"177\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage277Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public static int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static int field = Ex.ExInner..ONE.first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"34\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"45\">ONE</a></span>{public static int <a name=\""+ExportCst.PREF_REF+"67\">first</a>(int <a name=\""+ExportCst.PREF_REF+"77\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"77\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"120\">field</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a>.<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"34\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"45\">ONE</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.static first(int)\" href=\"#"+ExportCst.PREF_REF+"67\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"173\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage278Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public static int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static int field = ExInner..ONE.first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"34\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"45\">ONE</a></span>{public static int <a name=\""+ExportCst.PREF_REF+"67\">first</a>(int <a name=\""+ExportCst.PREF_REF+"77\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"77\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"120\">field</a> </span>=<span class=\"g\"><span class=\"g\"> <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"34\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"45\">ONE</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.static first(int)\" href=\"#"+ExportCst.PREF_REF+"67\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"170\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage279Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public static int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static int field = static(ExInner..ONE).first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"61\">ONE</a></span>{public static int <a name=\""+ExportCst.PREF_REF+"83\">first</a>(int <a name=\""+ExportCst.PREF_REF+"93\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"93\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"136\">field</a> </span>=<span class=\"g\"><span class=\"g\"> static(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a>)</span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.static first(int)\" href=\"#"+ExportCst.PREF_REF+"83\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"194\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage279_Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ;\n");
        xml_.append(" public static int first(int add){return 4i+add;}\n");
        xml_.append("}\n");
        xml_.append("public static int field = static(ExInner).first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " ;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"82\">first</a>(int <a name=\""+ExportCst.PREF_REF+"92\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"92\">add</a></span></span>;}\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"133\">field</a> </span>=<span class=\"g\"><span class=\"g\"> static(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>)</span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.static first(int)\" href=\"#"+ExportCst.PREF_REF+"82\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"186\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage279__Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public static int field = static(Ex).exmeth2();\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth2(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {;\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"40\">field</a> </span>=<span class=\"g\"><span class=\"g\"> static(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a>)</span>.<span class=\"g\"><a title=\"pkg.Ex.static exmeth2()\" href=\"#"+ExportCst.PREF_REF+"133\">exmeth2</a>()</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"89\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"133\">exmeth2</a>(){\n" +
                "  return <span class=\"g\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage280Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner..ONE;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{public static int first(int add){return 4i+add;}};\n");
        xml_.append("}\n");
        xml_.append("public static int field = static(ONE).first(2);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner..ONE</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"33\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"55\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"66\">ONE</a></span>{public static int <a name=\""+ExportCst.PREF_REF+"88\">first</a>(int <a name=\""+ExportCst.PREF_REF+"98\">add</a>){return <span class=\"g\"><span class=\"g\">4i</span>+<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"98\">add</a></span></span>;}};\n" +
                "}\n" +
                "public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"141\">field</a> </span>=<span class=\"g\"><span class=\"g\"> static(<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"66\">ONE</a>)</span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner-ONE.static first(int)\" href=\"#"+ExportCst.PREF_REF+"88\">first</a>(<span class=\"g\">2</span>)</span></span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"190\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage281Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{};\n");
        xml_.append("}\n");
        xml_.append("public static boolean field = method($id(Ex,static,ExInner..ONE),ExInner.ONE);\n");
        xml_.append("public static boolean method(ExInner..ONE e){\n");
        xml_.append(" return e instanceof ExInner..ONE;\n");
        xml_.append("}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"61\">ONE</a></span>{};\n" +
                "}\n" +
                "public static boolean <span class=\"q\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"92\">field</a> </span>=<span class=\"q\"> <a title=\"pkg.Ex.static method(pkg.Ex..ExInner-ONE)\" href=\"#"+ExportCst.PREF_REF+"171\">method</a>(<span class=\"g\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>,static,<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a>)</span>,<span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span></span>)</span></span>;\n" +
                "public static boolean <a name=\""+ExportCst.PREF_REF+"171\">method</a>(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a> <a name=\""+ExportCst.PREF_REF+"191\">e</a>){\n" +
                " return <span class=\"q\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"191\">e</a> </span>instanceof <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span>;\n" +
                "}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"251\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage282Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{};\n");
        xml_.append("}\n");
        xml_.append("public static boolean field = classchoice(Ex)method($id(Ex,static,ExInner..ONE),ExInner.ONE);\n");
        xml_.append("public static boolean method(ExInner..ONE e){\n");
        xml_.append(" return e instanceof ExInner..ONE;\n");
        xml_.append("}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"61\">ONE</a></span>{};\n" +
                "}\n" +
                "public static boolean <span class=\"q\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"92\">field</a> </span>=<span class=\"q\"> classchoice(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>)<a title=\"pkg.Ex.static method(pkg.Ex..ExInner-ONE)\" href=\"#"+ExportCst.PREF_REF+"186\">method</a>(<span class=\"g\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>,static,<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a>)</span>,<span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span></span>)</span></span>;\n" +
                "public static boolean <a name=\""+ExportCst.PREF_REF+"186\">method</a>(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a> <a name=\""+ExportCst.PREF_REF+"206\">e</a>){\n" +
                " return <span class=\"q\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"206\">e</a> </span>instanceof <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span>;\n" +
                "}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"266\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage283Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{};\n");
        xml_.append("}\n");
        xml_.append("public static boolean field = thisaccess(Ex)method($id(Ex,static,ExInner..ONE),ExInner.ONE);\n");
        xml_.append("public static boolean method(ExInner..ONE e){\n");
        xml_.append(" return e instanceof ExInner..ONE;\n");
        xml_.append("}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"61\">ONE</a></span>{};\n" +
                "}\n" +
                "public static boolean <span class=\"q\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"92\">field</a> </span>=<span class=\"q\"> thisaccess(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>)<a title=\"pkg.Ex.static method(pkg.Ex..ExInner-ONE)\" href=\"#"+ExportCst.PREF_REF+"185\">method</a>(<span class=\"g\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>,static,<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a>)</span>,<span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span></span>)</span></span>;\n" +
                "public static boolean <a name=\""+ExportCst.PREF_REF+"185\">method</a>(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a> <a name=\""+ExportCst.PREF_REF+"205\">e</a>){\n" +
                " return <span class=\"q\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"205\">e</a> </span>instanceof <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span>;\n" +
                "}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"265\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage284Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("pkg.Ex.ExInner;\n");
        xml_.append("public enum pkg.Ex {;\n");
        xml_.append("public enum ExInner {\n");
        xml_.append(" ONE{};\n");
        xml_.append("}\n");
        xml_.append("public static boolean field = thisaccess( Ex) method($id(Ex,static,ExInner..ONE),ExInner.ONE);\n");
        xml_.append("public static boolean method(ExInner..ONE e){\n");
        xml_.append(" return e instanceof ExInner..ONE;\n");
        xml_.append("}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkg.Ex.ExInner</span>;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"28\">pkg.Ex</a> {;\n" +
                "public enum <a name=\""+ExportCst.PREF_REF+"50\">ExInner</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"61\">ONE</a></span>{};\n" +
                "}\n" +
                "public static boolean <span class=\"q\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"92\">field</a> </span>=<span class=\"q\"> thisaccess( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>) <a title=\"pkg.Ex.static method(pkg.Ex..ExInner-ONE)\" href=\"#"+ExportCst.PREF_REF+"187\">method</a>(<span class=\"g\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"28\">Ex</a>,static,<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a>)</span>,<span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a></span>.<span class=\"g\"><a title=\"pkg.Ex..ExInner.ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span></span>)</span></span>;\n" +
                "public static boolean <a name=\""+ExportCst.PREF_REF+"187\">method</a>(<a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a> <a name=\""+ExportCst.PREF_REF+"207\">e</a>){\n" +
                " return <span class=\"q\"><span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"207\">e</a> </span>instanceof <a title=\"pkg.Ex..ExInner\" href=\"#"+ExportCst.PREF_REF+"50\">ExInner</a>..<a title=\"pkg.Ex..ExInner-ONE\" href=\"#"+ExportCst.PREF_REF+"61\">ONE</a></span>;\n" +
                "}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"267\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage285Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int a;\n");
        xml_.append(" operator+ int (pkg.Ex a, pkg.Ex b){\n");
        xml_.append("  return a.a+b.a;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex one = new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  if (one + two != 8i){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">a</a></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"46\">+</a> int (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"60\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"70\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"114\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"129\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"129\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"162\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"162\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"129\">one</a> </span><a title=\"pkg.Ex.static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"46\">+</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"162\">two</a> </span></span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage286Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int a;\n");
        xml_.append(" operator+ Ex (Ex a, Ex b){\n");
        xml_.append("  Ex c = new Ex();\n");
        xml_.append("  c.a=a.a+b.a;\n");
        xml_.append("  return c;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex one = new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  if ((one + two).a != 8i){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">a</a></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"46\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"55\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"61\">b</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">c</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">c</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"55\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"61\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">c</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"133\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"148\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"148\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"148\">one</a> </span><a title=\"pkg.Ex.static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"46\">+</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"181\">two</a></span></span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"34\">a</a> </span></span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage287Test() {
        StringBuilder xml_ = new StringBuilder();

        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $operator+ Ex(Ex a,Ex b) {\n");
        xml_.append("  $var o = $new Ex();\n");
        xml_.append("  o.field = a.field + b.field;\n");
        xml_.append("  $return o;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return $lambda($operator,Ex,+,Ex,Ex).call(one,two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $operator<a name=\""+ExportCst.PREF_REF+"55\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"63\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"68\">b</a>) {\n" +
                "  <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"80\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"63\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"68\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span></span></span></span>;\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>;\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"166\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"203\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"55\">$lambda</a>($operator,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,+,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage288Test() {
        StringBuilder xml_ = new StringBuilder();

        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $operator+ Ex(Ex a,Ex b) {\n");
        xml_.append("  $var o = $new Ex();\n");
        xml_.append("  o.field = a.field + b.field;\n");
        xml_.append("  $return o;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return $lambda($operator,Ex,+,$id,Ex,Ex).call(one,two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $operator<a name=\""+ExportCst.PREF_REF+"55\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"63\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"68\">b</a>) {\n" +
                "  <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"80\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"63\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"68\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span></span></span></span>;\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>;\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"166\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"203\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"55\">$lambda</a>($operator,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,+,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage289Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int field;\n");
        xml_.append(" $operator+ Ex(Ex a,Ex b) {\n");
        xml_.append("  $var o = $new Ex();\n");
        xml_.append("  o.field = a.field + b.field;\n");
        xml_.append("  $return o;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return one.$lambda($operator,Ex,+,$id,Ex).call(two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $operator<a name=\""+ExportCst.PREF_REF+"55\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"63\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"68\">b</a>) {\n" +
                "  <b title=\"pkg.Ex\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"80\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"63\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"68\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span></span></span></span>;\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">o</a></span>;\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"166\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"203\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"181\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"55\">$lambda</a>($operator,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>,+,$id,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"203\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage290Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int a;\n");
        xml_.append(" $operator+ $int (Ex a, Ex b){\n");
        xml_.append("  $return a.a+b.a;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  $if ($operator(+,Ex)(one, two) != 8i){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 2i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " $operator<a name=\""+ExportCst.PREF_REF+"51\">+</a> $int (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"62\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"68\">b</a>){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"116\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"133\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"133\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"167\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><a title=\"pkg.Ex.$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"51\">$operator</a>(+,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"133\">one</a></span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"167\">two</a></span>) </span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">2i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage291Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$operator + $int (pkg.Ex a, pkg.Ex b){\n");
        xml_.append(" $return a.a+b.a;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int a;\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  $if ($operator(+)(one, two) != 8i){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 2i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$operator <a name=\""+ExportCst.PREF_REF+"10\">+</a> $int (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"25\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"35\">b</a>){\n" +
                " $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"25\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"97\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"35\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"97\">a</a></span></span></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"74\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"97\">a</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"122\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"97\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"74\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"173\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"97\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><a title=\"$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"10\">$operator</a>(+)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">one</a></span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"173\">two</a></span>) </span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">2i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage292Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $int a;\n");
        xml_.append(" $operator + $int (Ex a, Ex b){\n");
        xml_.append("  $return a.a+b.a;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  Ex one = $new Ex();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex two = $new Ex();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  $if ($operator(+,Ex)(one, two) != 8i){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 2i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " $operator <a name=\""+ExportCst.PREF_REF+"52\">+</a> $int (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"63\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"69\">b</a>){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"69\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"117\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"134\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><a title=\"pkg.Ex.$static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"52\">$operator</a>(+,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"134\">one</a></span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"168\">two</a></span>) </span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">2i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage293Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return staticCall(ExCaller<int>).method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCaller<S> {\n");
        xml_.append(" public staticCall S method(){\n");
        xml_.append("  ExClass<S> e = new ExClass<S>();\n");
        xml_.append("  e.field = (S)5;\n");
        xml_.append("  return explicit(ExClass<S>,T,ExClass<T>)e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static T explicit(ExClass<T> i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExCaller\" href=\"#"+ExportCst.PREF_REF+"117\">ExCaller</a>&lt;int&gt;)</span>.<span class=\"f\"><a title=\"pkg.ExCaller.staticCall method()\" href=\"#"+ExportCst.PREF_REF+"156\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExCaller</a>&lt;<a name=\""+ExportCst.PREF_REF+"130\">S</a>&gt; {\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"130\">S</a> <a name=\""+ExportCst.PREF_REF+"156\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"282\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"282\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"309\">field</a> </span></span>=<span class=\"f\"> (<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>)<span class=\"f\">5</span></span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static explicit(#T,pkg.ExClass&lt;#T&gt;)\" href=\"#"+ExportCst.PREF_REF+"333\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"282\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt;,<a href=\"#"+ExportCst.PREF_REF+"294\">T</a>,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"282\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"294\">T</a>&gt;)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"282\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"294\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"294\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"309\">field</a></span>;\n" +
                " public static <a href=\"#"+ExportCst.PREF_REF+"294\">T</a> <a name=\""+ExportCst.PREF_REF+"333\">explicit</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"282\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"294\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"353\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"353\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"309\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage294Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public int a;\n");
        xml_.append(" operator! int (pkg.Apply a){\n");
        xml_.append("  return a.a;\n");
        xml_.append(" }\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  Apply one = new Apply();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  if (!one != 5i){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"37\">a</a></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"49\">!</a> int (<a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">pkg.Apply</a> <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.Apply.a\" href=\"#"+ExportCst.PREF_REF+"37\">a</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"106\">method</a>(){\n" +
                "  <a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"124\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Apply\" href=\"#"+ExportCst.PREF_REF+"13\">Apply</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"124\">one</a></span>.<span class=\"f\"><a title=\"pkg.Apply.a\" href=\"#"+ExportCst.PREF_REF+"37\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a title=\"pkg.Apply.static !(pkg.Apply)\" href=\"#"+ExportCst.PREF_REF+"49\">!</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"124\">one</a> </span></span><a title=\"false\">!=</a><span class=\"f\"> 5i</span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage295Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  return $(ExClass,int)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public static ExClass $(int i){\n");
        xml_.append("  ExClass out = new ExClass();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"102\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static $(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"158\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"102\">ExClass</a>,int)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"102\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"128\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"102\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"158\">$</a>(int <a name=\""+ExportCst.PREF_REF+"164\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"102\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"178\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"102\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"128\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"164\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage296Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass<int> method(){\n");
        xml_.append("  return $(ExClass<int>,T)5;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static ExClass<T> $(T i){\n");
        xml_.append("  ExClass<T> out = new ExClass<T>();\n");
        xml_.append("  out.field = i;\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"110\">ExClass</a>&lt;int&gt; <a name=\""+ExportCst.PREF_REF+"53\">method</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static $(pkg.ExClass&lt;#T&gt;,#T)\" href=\"#"+ExportCst.PREF_REF+"170\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"110\">ExClass</a>&lt;int&gt;,<a href=\"#"+ExportCst.PREF_REF+"122\">T</a>)<span class=\"f\">5</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"110\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"122\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"122\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"137\">field</a></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"110\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"122\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"170\">$</a>(<a href=\"#"+ExportCst.PREF_REF+"122\">T</a> <a name=\""+ExportCst.PREF_REF+"174\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"110\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"122\">T</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"191\">out</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"110\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"122\">T</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"191\">out</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"174\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"191\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage297Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return staticCall(ExCaller<int>).method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCaller<S> {\n");
        xml_.append(" public staticCall S method(){\n");
        xml_.append("  ExClass<S> e = new ExClass<S>();\n");
        xml_.append("  e.field = (S)5;\n");
        xml_.append("  return $(ExClass<S>,T,ExClass<T>)e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static T $(ExClass<T> i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExCaller\" href=\"#"+ExportCst.PREF_REF+"117\">ExCaller</a>&lt;int&gt;)</span>.<span class=\"f\"><a title=\"pkg.ExCaller.staticCall method()\" href=\"#"+ExportCst.PREF_REF+"156\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExCaller</a>&lt;<a name=\""+ExportCst.PREF_REF+"130\">S</a>&gt; {\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"130\">S</a> <a name=\""+ExportCst.PREF_REF+"156\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"275\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"275\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"302\">field</a> </span></span>=<span class=\"f\"> (<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>)<span class=\"f\">5</span></span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static $(#T,pkg.ExClass&lt;#T&gt;)\" href=\"#"+ExportCst.PREF_REF+"326\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"275\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>&gt;,<a href=\"#"+ExportCst.PREF_REF+"287\">T</a>,<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"275\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"287\">T</a>&gt;)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"275\">pkg.ExClass</a>&lt;<a name=\""+ExportCst.PREF_REF+"287\">T</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"287\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"302\">field</a></span>;\n" +
                " public static <a href=\"#"+ExportCst.PREF_REF+"287\">T</a> <a name=\""+ExportCst.PREF_REF+"326\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"275\">ExClass</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"287\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"339\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"339\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"302\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage298Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  t[0]=8;\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>=<span class=\"f\">8</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage299Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  t[0]++;\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>++</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage300Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  ++t[0];\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\">++<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage301Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  t[0]+=8;\n");
        xml_.append("  return t[0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>+=<span class=\"f\">8</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage302Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class interfaces(ExInt) pkg.Ex:ExInt {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" public static int v;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class interfaces(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"109\">ExInt</a>) <a name=\""+ExportCst.PREF_REF+"31\">pkg.Ex</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"109\">ExInt</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"109\">pkg.ExInt</a> {\n" +
                " public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"140\">v</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage303Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" public static class interfaces(ExInt) ExInner:ExInt {\n");
        xml_.append("  public static int exmeth1(){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" public static int v;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " public static class interfaces(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"191\">ExInt</a>) <a name=\""+ExportCst.PREF_REF+"105\">ExInner</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"191\">ExInt</a> {\n" +
                "  public static int <a name=\""+ExportCst.PREF_REF+"141\">exmeth1</a>(){\n" +
                "   return <span class=\"n\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"191\">pkg.ExInt</a> {\n" +
                " public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"222\">v</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage304Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" public static class interfaces(Ex.ExInt) ExInner:ExInt {\n");
        xml_.append("  public static int exmeth1(){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public static interface ExInt {\n");
        xml_.append("  public static int v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " public static class interfaces(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..ExInt\" href=\"#"+ExportCst.PREF_REF+"200\">ExInt</a>) <a name=\""+ExportCst.PREF_REF+"108\">ExInner</a>:<a title=\"pkg.Ex..ExInt\" href=\"#"+ExportCst.PREF_REF+"200\">ExInt</a> {\n" +
                "  public static int <a name=\""+ExportCst.PREF_REF+"144\">exmeth1</a>(){\n" +
                "   return <span class=\"n\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                " public static interface <a name=\""+ExportCst.PREF_REF+"200\">ExInt</a> {\n" +
                "  public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"228\">v</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage305Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class interfaces(ExTwo.ExInt) pkg.Ex:pkg.ExTwo.ExInt {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static interface ExInt {\n");
        xml_.append("  public static int v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class interfaces(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"121\">ExTwo</a>.<a title=\"pkg.ExTwo..ExInt\" href=\"#"+ExportCst.PREF_REF+"158\">ExInt</a>) <a name=\""+ExportCst.PREF_REF+"37\">pkg.Ex</a>:<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"121\">pkg.ExTwo</a>.<a title=\"pkg.ExTwo..ExInt\" href=\"#"+ExportCst.PREF_REF+"158\">ExInt</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"81\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"121\">pkg.ExTwo</a> {\n" +
                " public static interface <a name=\""+ExportCst.PREF_REF+"158\">ExInt</a> {\n" +
                "  public static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"186\">v</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage306Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex:ExInt {\n");
        xml_.append(" public Ex(){\n");
        xml_.append("  interfaces(ExInt)();\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  new Ex();\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" public int v;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"143\">ExInt</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"29\">public Ex(</a>){\n" +
                "  <span class=\"f\">interfaces(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"143\">ExInt</a>)()</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"87\">exmeth</a>(){\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex()\" href=\"#"+ExportCst.PREF_REF+"29\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"143\">pkg.ExInt</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">v</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage307Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex:ExInt {\n");
        xml_.append(" public Ex(int v){\n");
        xml_.append("  interfaces(ExInt)(v);\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return new Ex(10).v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" public int v;\n");
        xml_.append(" public ExInt(int v){\n");
        xml_.append("  this.v=v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"148\">ExInt</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"29\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"43\">v</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExInt.pkg.ExInt(int)\" href=\"#"+ExportCst.PREF_REF+"176\">interfaces</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"148\">ExInt</a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"43\">v</a></span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"93\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"29\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>(<span class=\"f\">10</span>)</span>.<span class=\"f\"><a title=\"pkg.ExInt.v\" href=\"#"+ExportCst.PREF_REF+"172\">v</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"148\">pkg.ExInt</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"172\">v</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"176\">public ExInt(</a>int <a name=\""+ExportCst.PREF_REF+"193\">v</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.ExInt.v\" href=\"#"+ExportCst.PREF_REF+"172\">v</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"193\">v</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage308Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  ExInt i = new ExImp();\n");
        xml_.append("  Fct<int> f = i.$lambda(ExInt,v);\n");
        xml_.append("  ExInt m = (ExInt)f;\n");
        xml_.append("  return m.v();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExImp:ExInt {\n");
        xml_.append(" public int v=140;\n");
        xml_.append(" public int v(){\n");
        xml_.append("  return v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" int v();\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"255\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">i</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExImp\" href=\"#"+ExportCst.PREF_REF+"167\">ExImp</a>()</span></span>;\n" +
                "  Fct&lt;int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"87\">f</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"59\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"272\">$lambda</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"255\">ExInt</a>,v)</span></span></span>;\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"255\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"119\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"255\">ExInt</a>)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"87\">f</a></span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">m</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"272\">v</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"167\">pkg.ExImp</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"255\">ExInt</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"197\">v</a></span>=<span class=\"f\">140</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"216\">v</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExImp.v\" href=\"#"+ExportCst.PREF_REF+"197\">v</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"255\">pkg.ExInt</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"272\">v</a>();\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage309Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  ExInt i = new ExImp();\n");
        xml_.append("  Fct<int> f = i.$lambda(ExInt,v);\n");
        xml_.append("  ExInt m = (ExInt)(f,interfaces(ExInt)());\n");
        xml_.append("  return m.v();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExImp:ExInt {\n");
        xml_.append(" public int v=140;\n");
        xml_.append(" public int v(){\n");
        xml_.append("  return v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" int v();\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">i</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExImp\" href=\"#"+ExportCst.PREF_REF+"189\">ExImp</a>()</span></span>;\n" +
                "  Fct&lt;int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"87\">f</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"59\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"294\">$lambda</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a>,v)</span></span></span>;\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"119\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a>)<span class=\"f\">(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"87\">f</a></span>,<span class=\"f\">interfaces(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a>)()</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">m</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"294\">v</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"189\">pkg.ExImp</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"277\">ExInt</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">v</a></span>=<span class=\"f\">140</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"238\">v</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExImp.v\" href=\"#"+ExportCst.PREF_REF+"219\">v</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"277\">pkg.ExInt</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"294\">v</a>();\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage310Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  ExInt i = new ExImp(150);\n");
        xml_.append("  Fct<int> f = i.$lambda(ExInt,v);\n");
        xml_.append("  ExInt m = (ExInt)(f,interfaces(ExInt)(140));\n");
        xml_.append("  return m.v();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExImp:ExInt {\n");
        xml_.append(" public ExImp(int v){\n");
        xml_.append("  interfaces(ExInt)(v);\n");
        xml_.append(" }\n");
        xml_.append(" public int v(){\n");
        xml_.append("  return v;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.ExInt {\n");
        xml_.append(" int v;\n");
        xml_.append(" public ExInt(int v){\n");
        xml_.append("  this.v=v;\n");
        xml_.append(" }\n");
        xml_.append(" int v();\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">i</a> </span>=<span class=\"f\"> <a title=\"pkg.ExImp.pkg.ExImp(int)\" href=\"#"+ExportCst.PREF_REF+"214\">new</a> <a title=\"pkg.ExImp\" href=\"#"+ExportCst.PREF_REF+"195\">ExImp</a>(<span class=\"f\">150</span>)</span></span>;\n" +
                "  Fct&lt;int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"90\">f</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"59\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"375\">$lambda</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a>,v)</span></span></span>;\n" +
                "  <a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a>)<span class=\"f\">(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">f</a></span>,<span class=\"f\"><a title=\"pkg.ExInt.pkg.ExInt(int)\" href=\"#"+ExportCst.PREF_REF+"334\">interfaces</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a>)(<span class=\"f\">140</span>)</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">m</a></span>.<span class=\"f\"><a title=\"pkg.ExInt.v()\" href=\"#"+ExportCst.PREF_REF+"375\">v</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"195\">pkg.ExImp</a>:<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"214\">public ExImp(</a>int <a name=\""+ExportCst.PREF_REF+"231\">v</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExInt.pkg.ExInt(int)\" href=\"#"+ExportCst.PREF_REF+"334\">interfaces</a>(<a title=\"pkg.ExInt\" href=\"#"+ExportCst.PREF_REF+"313\">ExInt</a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"231\">v</a></span>)</span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"274\">v</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExInt.v\" href=\"#"+ExportCst.PREF_REF+"330\">v</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"313\">pkg.ExInt</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"330\">v</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"334\">public ExInt(</a>int <a name=\""+ExportCst.PREF_REF+"351\">v</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.ExInt.v\" href=\"#"+ExportCst.PREF_REF+"330\">v</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"351\">v</a></span></span>;\n" +
                " }\n" +
                " int <a name=\""+ExportCst.PREF_REF+"375\">v</a>();\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage311Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" MyAnnotSecond m();\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotSecond {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(@MyAnnotSecond)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a> <a name=\""+ExportCst.PREF_REF+"49\">m</a>();\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"76\">pkg.MyAnnotSecond</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\">@<a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"138\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"169\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"197\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"138\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"197\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"197\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"197\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage312Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" MyAnnotSecond m();\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotSecond {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(m=@MyAnnotSecond)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a> <a name=\""+ExportCst.PREF_REF+"49\">m</a>();\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"76\">pkg.MyAnnotSecond</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.m()\" href=\"#"+ExportCst.PREF_REF+"49\">m</a>=<span class=\"f2\">@<a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a></span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"140\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"171\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"140\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"199\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"199\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"199\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage313Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" MyAnnotSecond m();\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotSecond {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot( @MyAnnotSecond)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a> <a name=\""+ExportCst.PREF_REF+"49\">m</a>();\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"76\">pkg.MyAnnotSecond</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"> @<a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"139\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"170\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"198\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"139\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"198\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"198\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"198\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage314Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" MyAnnotSecond m();\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotSecond {\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(m= @MyAnnotSecond)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a> <a name=\""+ExportCst.PREF_REF+"49\">m</a>();\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"76\">pkg.MyAnnotSecond</a> {\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.m()\" href=\"#"+ExportCst.PREF_REF+"49\">m</a>=<span class=\"f2\"> @<a title=\"pkg.MyAnnotSecond\" href=\"#"+ExportCst.PREF_REF+"76\">MyAnnotSecond</a></span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"141\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"172\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"200\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"141\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"200\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"200\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"200\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage315Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot(method =2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a> =<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"88\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"119\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"88\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage316Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int method()1;\n");
        xml_.append("}\n");
        xml_.append("@MyAnnot( method =2)\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  MyAnnot m = (MyAnnot)$class(Ex).getAnnotations()[0];\n");
        xml_.append("  $return m.method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">method</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "<span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>(<span class=\"f2\"> <a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a> =<span class=\"f2\">2</span></span>)</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"89\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"120\">catching</a>(){\n" +
                "  <a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"142\">m</a> </span>=<span class=\"f\"> (<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)<span class=\"f\"><span class=\"f\"><span class=\"f\">$class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"89\">Ex</a>)</span>.<span class=\"f\">getAnnotations()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"142\">m</a></span>.<span class=\"f\"><a title=\"pkg.MyAnnot.method()\" href=\"#"+ExportCst.PREF_REF+"40\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage317Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class [pkg.Int3;pkg.Int2;] $interfaces(Int3) pkgtwo.Ex :Int2{\n");
        xml_.append("\n");
        xml_.append(" $public(){\n");
        xml_.append("  $interfaces(Int3)();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $class pkg.ExThree {\n");
        xml_.append(" $public pkgtwo.Ex inst=$new pkgtwo.Ex();\n");
        xml_.append(" $public pkgtwo.Ex ance=$new pkgtwo.Ex();\n");
        xml_.append(" $public (){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static ExThree catching(){\n");
        xml_.append("  $return $new ExThree();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExThree", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.Int :pkg.Int2{}\n");
        files_.put("src/pkg/Int", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.Int2 :pkg.Int3{}\n");
        files_.put("src/pkg/Int2", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("$public $interface pkg.Int3 {\n");
        xml_.append(" $public $static $int nb=1i;\n");
        xml_.append(" {\n");
        xml_.append("  nb++;\n");
        xml_.append(" }\n");
        xml_.append(" $public $int common=nb;\n");
        xml_.append("}\n");
        files_.put("src/pkg/Int3", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.ExThree", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class [<span class=\"i\">pkg.Int3</span>;<span class=\"i\">pkg.Int2</span>;] $interfaces(<a title=\"pkg.Int3\" href=\"Int3.html#"+ExportCst.PREF_REF+"19\">Int3</a>) <a name=\""+ExportCst.PREF_REF+"54\">pkgtwo.Ex</a> :<a title=\"pkg.Int2\" href=\"Int2.html#"+ExportCst.PREF_REF+"19\">Int2</a>{\n" +
                "\n" +
                " <a name=\""+ExportCst.PREF_REF+"73\">$public(</a>){\n" +
                "  <span class=\"f\">$interfaces(<a title=\"pkg.Int3\" href=\"Int3.html#"+ExportCst.PREF_REF+"19\">Int3</a>)()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.ExThree</a> {\n" +
                " $public <a title=\"pkgtwo.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"54\">pkgtwo.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"48\">inst</a></span>=<span class=\"f\"><a title=\"pkgtwo.Ex.pkgtwo.Ex()\" href=\"Ex.html#"+ExportCst.PREF_REF+"73\">$new</a> <a title=\"pkgtwo.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"54\">pkgtwo.Ex</a>()</span></span>;\n" +
                " $public <a title=\"pkgtwo.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"54\">pkgtwo.Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"90\">ance</a></span>=<span class=\"f\"><a title=\"pkgtwo.Ex.pkgtwo.Ex()\" href=\"Ex.html#"+ExportCst.PREF_REF+"73\">$new</a> <a title=\"pkgtwo.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"54\">pkgtwo.Ex</a>()</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"114\">$public (</a>){\n" +
                " }\n" +
                " $public $static <a title=\"pkg.ExThree\" href=\"#"+ExportCst.PREF_REF+"15\">ExThree</a> <a name=\""+ExportCst.PREF_REF+"154\">catching</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.ExThree.pkg.ExThree()\" href=\"#"+ExportCst.PREF_REF+"114\">$new</a> <a title=\"pkg.ExThree\" href=\"#"+ExportCst.PREF_REF+"15\">ExThree</a>()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.Int</a> :<a title=\"pkg.Int2\" href=\"Int2.html#"+ExportCst.PREF_REF+"19\">pkg.Int2</a>{}\n" +
                "</span></pre></body></html>", filesExp_.getValue(2));
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.Int2</a> :<a title=\"pkg.Int3\" href=\"Int3.html#"+ExportCst.PREF_REF+"19\">pkg.Int3</a>{}\n" +
                "</span></pre></body></html>", filesExp_.getValue(3));
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $interface <a name=\""+ExportCst.PREF_REF+"19\">pkg.Int3</a> {\n" +
                " $public $static $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"52\">nb</a></span>=<span class=\"g\">1i</span></span>;\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Int3.nb\" href=\"#"+ExportCst.PREF_REF+"52\">nb</a></span>++</span>;\n" +
                " }\n" +
                " $public $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"87\">common</a></span>=<span class=\"f\"><a title=\"pkg.Int3.nb\" href=\"#"+ExportCst.PREF_REF+"52\">nb</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(4));
    }
    @Test
    public void coverage318Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return default(1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\">default(<span class=\"f\">1</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage319Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return call ();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.$static call()\" href=\"#"+ExportCst.PREF_REF+"100\">call</a> ()</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"100\">call</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage320Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $classchoice(Ex)call ();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$classchoice(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)<a title=\"pkg.Ex.$static call()\" href=\"#"+ExportCst.PREF_REF+"116\">call</a> ()</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"116\">call</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage321Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return $superaccess(Ex)call ();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int call(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">$superaccess(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)<a title=\"pkg.Ex.$static call()\" href=\"#"+ExportCst.PREF_REF+"116\">call</a> ()</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"116\">call</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage322Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  return t.length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">t</a></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage323Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int[] exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int[] t = s == 1 ?{4i}:{6i};\n");
        xml_.append("  return t.clone();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int[] <a name=\""+ExportCst.PREF_REF+"43\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"74\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"59\">s</a> </span><a title=\"true\">==</a><span class=\"f\"> 1 </span></span>?<span class=\"f\">{<span class=\"f\">4i</span>}</span>:<span class=\"n\">{<span class=\"n\">6i</span>}</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"74\">t</a></span>.<span class=\"f\"><b>clone</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage324Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class [static pkg.ExTwo.CST;] pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return CST;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static final int CST = 15;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class [<span class=\"i\">static pkg.ExTwo.CST</span>;] <a name=\""+ExportCst.PREF_REF+"37\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExTwo.CST\" href=\"#"+ExportCst.PREF_REF+"144\">CST</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.ExTwo</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"144\">CST</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage325Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class [static pkg.ExTwo.CST;] pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return CST;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static final int CST = 15, CST2 = 30;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class [<span class=\"i\">static pkg.ExTwo.CST</span>;] <a name=\""+ExportCst.PREF_REF+"37\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"65\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExTwo.CST\" href=\"#"+ExportCst.PREF_REF+"144\">CST</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.ExTwo</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"144\">CST</a> </span>=<span class=\"g\"> 15</span></span>,<span class=\"g\"><span class=\"g\"> <a name=\""+ExportCst.PREF_REF+"154\">CST2</a> </span>=<span class=\"g\"> 30</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage326Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class [static pkg.ExTwo.CST2;] pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return CST2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static final int CST = 15, CST2 = 30;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class [<span class=\"i\">static pkg.ExTwo.CST2</span>;] <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"66\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExTwo.CST2\" href=\"#"+ExportCst.PREF_REF+"156\">CST2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"109\">pkg.ExTwo</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"146\">CST</a> </span>=<span class=\"g\"> 15</span></span>,<span class=\"g\"><span class=\"g\"> <a name=\""+ExportCst.PREF_REF+"156\">CST2</a> </span>=<span class=\"g\"> 30</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage327Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class [static pkg.ExTwo.*;] pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return CST + CST2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static final int CST = 15, CST2 = 30;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class [<span class=\"i\">static pkg.ExTwo.*</span>;] <a name=\""+ExportCst.PREF_REF+"35\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"63\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.CST\" href=\"#"+ExportCst.PREF_REF+"149\">CST</a> </span>+<span class=\"f\"> <a title=\"pkg.ExTwo.CST2\" href=\"#"+ExportCst.PREF_REF+"159\">CST2</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"112\">pkg.ExTwo</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"149\">CST</a> </span>=<span class=\"g\"> 15</span></span>,<span class=\"g\"><span class=\"g\"> <a name=\""+ExportCst.PREF_REF+"159\">CST2</a> </span>=<span class=\"g\"> 30</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage328Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $enum pkg.ExEnum {\n");
        xml_.append("ONE,TWO{}\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $int o = 10;\n");
        xml_.append("  ExEnum t;\n");
        xml_.append("  t=ExEnum.ONE;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case ONE;\n");
        xml_.append("   $case TWO;\n");
        xml_.append("    o=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $enum <a name=\""+ExportCst.PREF_REF+"14\">pkg.ExEnum</a> {\n" +
                "<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"27\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"31\">TWO</a></span>{}\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"54\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"85\">exmeth</a>(){\n" +
                "  $int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"102\">o</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  <a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"119\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">t</a></span>=<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"14\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a></span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"27\">ONE</a>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"31\">TWO</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">o</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">o</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage329Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Content c = null;\n");
        xml_.append("  return c?.$lambda(Content,,content).call()+1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Content{\n");
        xml_.append(" public int content;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"137\">Content</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">c</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">c</a></span><a title=\"null\">?</a>.<span class=\"f\"><a title=\"pkg.Content.content\" href=\"#"+ExportCst.PREF_REF+"162\">$lambda</a>(<a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"137\">Content</a>,,content)</span></span>.<span class=\"f\"><b>call</b>()</span></span>+<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"137\">pkg.Content</a>{\n" +
                " public int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"162\">content</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage330Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Content c = new Content();\n");
        xml_.append("  return c?.$lambda(Content,,content).call()+1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Content{\n");
        xml_.append(" public int content;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"146\">Content</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"61\">c</a> </span>=<span class=\"f\"> new <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"146\">Content</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"61\">c</a></span><a title=\"not null\">?</a>.<span class=\"f\"><a title=\"pkg.Content.content\" href=\"#"+ExportCst.PREF_REF+"171\">$lambda</a>(<a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"146\">Content</a>,,content)</span></span>.<span class=\"f\"><b>call</b>()</span></span>+<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Content</a>{\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"171\">content</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage331Test() {
        StringBuilder xml_ = new StringBuilder();

        xml_.append("$public $class pkg.Ex<T> {\n");
        xml_.append(" $public T field;\n");
        xml_.append(" $operator+ $staticCall Ex<T>(Ex<T> a,Ex<T> b) {\n");
        xml_.append("  $var o = $new Ex<T>();\n");
        xml_.append("  o.field = (T)(($int)a.field + ($int)b.field);\n");
        xml_.append("  $return o;\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  Ex<$int> one = $new Ex<$int>();\n");
        xml_.append("  Ex<$int> two = $new Ex<$int>();\n");
        xml_.append("  one.field = 15;\n");
        xml_.append("  two.field = 14;\n");
        xml_.append("  $return $lambda($operator,Ex<$int>,+,$id,$staticCall,Ex<T>,Ex<T>).call(one,two);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"22\">T</a>&gt; {\n" +
                " $public <a href=\"#"+ExportCst.PREF_REF+"22\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">field</a></span>;\n" +
                " $operator<a name=\""+ExportCst.PREF_REF+"55\">+</a> $staticCall <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt;(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"81\">a</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt; <a name=\""+ExportCst.PREF_REF+"89\">b</a>) {\n" +
                "  <b title=\"pkg.Ex&lt;#T&gt;\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"101\">o</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"101\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> (<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">($int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"81\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span></span>+<span class=\"f\"> ($int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"89\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a></span></span></span></span>)</span></span></span>;\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"101\">o</a></span>;\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"207\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;$int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"228\">one</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;$int&gt;()</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;$int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"262\">two</a> </span>=<span class=\"f\"> $new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;$int&gt;()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"228\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 15</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"262\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.field\" href=\"#"+ExportCst.PREF_REF+"38\">field</a> </span></span>=<span class=\"f\"> 14</span></span>;\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.$staticCall +(pkg.Ex&lt;#T&gt;,pkg.Ex&lt;#T&gt;)\" href=\"#"+ExportCst.PREF_REF+"55\">$lambda</a>($operator,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;$int&gt;,+,$id,$staticCall,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt;,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"22\">T</a>&gt;)</span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"228\">one</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"262\">two</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage332Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return e&&f?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"310\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"361\">&amp;</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"188\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"246\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"259\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"259\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"310\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"324\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"324\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"false\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"361\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"381\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"392\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"381\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"392\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"441\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"461\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"472\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"461\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"472\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"535\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"545\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"545\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"596\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"606\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"620\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"606\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage333Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return e&&f?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"311\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"362\">&amp;</a><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>?<span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"189\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"215\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"247\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"260\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"260\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"325\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"325\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"true\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"362\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"382\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"393\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"382\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"393\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"442\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"462\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"473\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"462\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"473\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"536\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"546\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"546\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"597\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"607\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"621\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"621\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"607\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"621\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage334Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += e&&f?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span><a title=\"pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"403\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"454\">&amp;</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">f</a></span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"241\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"267\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"277\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"296\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"296\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"339\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"352\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"352\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"403\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"417\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"417\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>!=<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"454\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"474\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"485\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"474\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"485\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"534\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"554\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"565\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"554\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"565\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"628\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"638\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"638\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"689\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"699\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"713\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"699\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"713\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage335Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return e||f?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"246\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"441\">|</a><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"188\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"246\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"259\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"310\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"324\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"324\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"361\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"381\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"392\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"381\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"392\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"441\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"461\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"472\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"461\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"472\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"535\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"545\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"545\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"596\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"606\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"620\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"606\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage336Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return e||f?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"247\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"442\">|</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"189\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"215\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"247\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"260\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"325\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"325\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"362\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"382\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"393\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"382\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"393\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"442\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"462\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"473\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"462\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"473\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"536\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"546\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"546\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"597\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"607\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"621\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"189\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"621\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"215\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"607\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"621\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage337Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += e||f?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"339\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"534\">|</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">f</a></span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"241\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"267\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"277\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"296\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"296\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"339\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"352\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"352\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"403\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"417\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"417\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"454\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"474\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"485\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"474\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"485\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"534\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"554\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"565\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"554\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"565\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"628\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"638\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"638\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"267\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"689\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"699\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"713\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"277\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"241\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"699\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"713\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage338Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"313\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"364\">&amp;</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"191\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"217\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"249\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"262\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"262\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"313\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"327\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"327\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"false\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"364\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"384\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"395\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"384\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"395\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"444\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"464\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"475\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"464\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"475\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"538\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"548\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"548\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"599\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"609\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"623\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"623\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"609\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"623\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage339Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"314\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"365\">&amp;</a>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>)</span>?<span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"192\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"250\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"263\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"263\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"314\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"328\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"328\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"365\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"385\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"396\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"385\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"396\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"445\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"465\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"476\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"465\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"476\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"539\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"549\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"549\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"600\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"610\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"624\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"610\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage340Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"249\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"444\">|</a>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"191\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"217\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"249\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"262\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"262\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"313\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"327\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"327\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"364\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"384\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"395\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"384\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"395\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"444\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"464\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"475\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"464\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"475\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"538\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"548\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"548\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"599\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"609\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"623\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"623\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"609\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"623\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage341Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"250\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"445\">|</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"192\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"250\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"263\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"263\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"314\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"328\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"328\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"365\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"385\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"396\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"385\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"396\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"445\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"465\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"476\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"465\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"476\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"539\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"549\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"549\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"600\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"610\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"624\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"610\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage342Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass g = e;\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += (g&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span></span>;\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"159\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"f\"> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">g</a></span><a title=\"pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"424\">&amp;</a><a title=\"pkg.ExClass.static &amp;&amp;(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"475\">&amp;</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"262\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"298\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"317\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"317\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"360\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"373\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"373\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"424\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"438\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"438\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>!=<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"475\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"495\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"506\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"495\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">&amp;</a><a title=\"true\">&amp;</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"506\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"555\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"575\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"586\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"575\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"586\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"649\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"659\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"659\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"710\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"720\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"734\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"720\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"734\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage343Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass g = e;\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += (g||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span></span>;\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"159\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"p\"> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">g</a></span><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"360\">|</a><a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"555\">|</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"262\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"298\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"317\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"317\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"360\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"373\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"373\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"424\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"438\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"438\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"475\">&amp;&amp;</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"495\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"506\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"495\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"n\">1</span></span>&amp;&amp;<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"506\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"555\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"575\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"586\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"575\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"586\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"649\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"659\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"659\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"288\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"710\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"720\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"734\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"298\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"262\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"720\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"734\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage344Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=\"8\";\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case String v;\n");
        xml_.append("    t=v+\" string\";\n");
        xml_.append("   case int v;\n");
        xml_.append("    t=v+\" int\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"103\">v</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">v</a></span>+<span class=\"f\"><span class=\"s\">\" string\"</span></span></span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"137\">v</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"137\">v</a></span>+<span class=\"n\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span><i>+</i><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage345Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=8;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case String v;\n");
        xml_.append("    t=v+\" string\";\n");
        xml_.append("   case int v;\n");
        xml_.append("    t=v+\" int\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"101\">v</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"101\">v</a></span>+<span class=\"n\"><span class=\"s\">\" string\"</span></span></span></span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"135\">v</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"135\">v</a></span>+<span class=\"f\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span><i>+</i><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage346Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=new ExTwo();\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case ExTwo v;\n");
        xml_.append("    t=v+\" string\";\n");
        xml_.append("   case ExThree v;\n");
        xml_.append("    t=v+\" int\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExThree {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\">new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"204\">ExTwo</a>()</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"204\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"110\">v</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">v</a></span>+<span class=\"f\"><span class=\"s\">\" string\"</span></span></span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.ExThree\" href=\"#"+ExportCst.PREF_REF+"231\">ExThree</a> <a name=\""+ExportCst.PREF_REF+"148\">v</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"148\">v</a></span>+<span class=\"n\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span><i>+</i><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"204\">pkg.ExTwo</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"231\">pkg.ExThree</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage347Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String o=\"\";\n");
        xml_.append("  for (Object t:{\"8\",8,null}){\n");
        xml_.append("   switch(t){\n");
        xml_.append("    case String v;\n");
        xml_.append("     o+=v+\" string\";\n");
        xml_.append("    case int v;\n");
        xml_.append("     o+=v+\" int\";\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">o</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (Object <a name=\""+ExportCst.PREF_REF+"83\">t</a></span>:<span class=\"f\">{<span class=\"f\"><span class=\"s\">\"8\"</span></span>,<span class=\"f\">8</span>,<span class=\"f\">null</span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"3/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">t</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"130\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"130\">v</a></span>+<span class=\"f\"><span class=\"s\">\" string\"</span></span></span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"167\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"167\">v</a></span>+<span class=\"f\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage348Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String o=\"\";\n");
        xml_.append("  for (Object t:{\"8\",8,null}){\n");
        xml_.append("   switch(t){\n");
        xml_.append("    case String v;\n");
        xml_.append("     o+=v+\" string\";\n");
        xml_.append("    case int v;\n");
        xml_.append("     o+=v+\" int\";\n");
        xml_.append("    default v;\n");
        xml_.append("     o+=v+\" def\";\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">o</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (Object <a name=\""+ExportCst.PREF_REF+"83\">t</a></span>:<span class=\"f\">{<span class=\"f\"><span class=\"s\">\"8\"</span></span>,<span class=\"f\">8</span>,<span class=\"f\">null</span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"3/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">t</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"130\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"130\">v</a></span>+<span class=\"f\"><span class=\"s\">\" string\"</span></span></span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"167\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"167\">v</a></span>+<span class=\"f\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"$core.Object\" name=\""+ExportCst.PREF_REF+"200\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"200\">v</a></span><i>+</i><span class=\"f\"><span class=\"s\">\" def\"</span></span></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage349Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String o=\"\";\n");
        xml_.append("  for (Number t:{8.0,8}){\n");
        xml_.append("   switch(t){\n");
        xml_.append("    case int v;\n");
        xml_.append("     o+=v+\" int\";\n");
        xml_.append("    default v;\n");
        xml_.append("     o+=v+\" dec\";\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">o</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (Number <a name=\""+ExportCst.PREF_REF+"83\">t</a></span>:<span class=\"f\">{<span class=\"f\">8.0</span>,<span class=\"f\">8</span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"2/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">t</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"122\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">v</a></span>+<span class=\"f\"><span class=\"s\">\" int\"</span></span></span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"$core.Number\" name=\""+ExportCst.PREF_REF+"155\">v</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"155\">v</a></span>+<span class=\"f\"><span class=\"s\">\" dec\"</span></span></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">o</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage350Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return e?\"Vrai\":\"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"205\">:</a><span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"147\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"205\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"218\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"218\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"269\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"283\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"283\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage351Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  return e?\"Vrai\"+1/0:\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>?<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"205\">:</a><span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"147\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"205\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"218\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"218\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"269\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"283\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"283\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage352Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return bool(e,\"Vrai\",\"Faux\"+1/0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"211\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>,<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>,<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"153\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"211\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"224\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"275\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"289\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"289\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage353Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  return bool(e,\"Vrai\"+1/0,\"Faux\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"211\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>,<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>,<span class=\"f\"><span class=\"s\">\"Faux\"</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"153\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"211\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"224\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"275\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"289\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"289\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage354Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return staticCall(ExClass).true(e)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"f\">staticCall(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a>)</span>.<span class=\"p\"><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"227\">true</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)</span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"169\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"195\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"227\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"240\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"240\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"291\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"305\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"305\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage355Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  return staticCall(ExClass).true(e)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"f\">staticCall(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a>)</span>.<span class=\"p\"><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"227\">true</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)</span></span>?<span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"169\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"195\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"227\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"240\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"240\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"291\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"169\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"305\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"305\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"195\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage356Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return staticCall(ExClass).false(e)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"f\">staticCall(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>)</span>.<span class=\"p\"><a title=\"pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"292\">false</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)</span></span>?<span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"170\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"228\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"241\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"241\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"292\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"306\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"306\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span><a title=\"false\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage357Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  return staticCall(ExClass).false(e)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"f\">staticCall(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>)</span>.<span class=\"p\"><a title=\"pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"292\">false</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)</span></span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"170\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"228\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"241\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"241\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"292\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"306\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"306\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span><a title=\"true\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage358Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return true ? 1 : 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">true </span>?<span class=\"f\"> 1 </span>:<span class=\"n\"> 0</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage359Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return false ? 1 : 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">false </span>?<span class=\"n\"> 1 </span>:<span class=\"f\"> 0</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage360Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v && false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">&amp;</a>&amp;<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage361Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v && false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">&amp;</a>&amp;<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage362Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v || false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">|</a>|<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage363Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v || false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">|</a>|<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage364Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v &&= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">&amp;</a>&amp;=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage365Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v &&= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">&amp;</a>&amp;=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage366Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v ||= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">|</a>|=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage367Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v ||= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">|</a>|=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage368Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return true && false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">true </span>&amp;&amp;<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage369Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return false && false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">false </span>&amp;&amp;<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage370Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return true || false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">true </span>||<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage371Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  return false || false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">false </span>||<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage372Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  if (e){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"228\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"170\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"228\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"241\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"241\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"292\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"306\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"306\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage373Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  if (e){\n");
        xml_.append("   return \"Vrai\"+1/0;\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"228\">{</a>\n" +
                "   return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"s\">\"Faux\"</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"170\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"228\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"241\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"241\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"292\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"306\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"306\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage374Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  if (e!=e){\n");
        xml_.append("   return \"\";\n");
        xml_.append("  } else if (e){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\">!=</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span></span>){\n" +
                "   return <span class=\"n\"><span class=\"s\">\"\"</span></span>;\n" +
                "  } <span class=\"p\">else if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"262\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"204\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"230\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"262\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"275\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"275\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"326\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"340\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"340\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage375Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  if (e!=e){\n");
        xml_.append("   return \"\";\n");
        xml_.append("  } else if (e){\n");
        xml_.append("   return \"Vrai\"+1/0;\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\">!=</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span></span>){\n" +
                "   return <span class=\"n\"><span class=\"s\">\"\"</span></span>;\n" +
                "  } <span class=\"p\">else if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"262\">{</a>\n" +
                "   return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"s\">\"Faux\"</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"204\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"230\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"262\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"275\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"275\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"326\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"204\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"340\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"340\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"230\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage376Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  while (e){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">while</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"231\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"173\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"231\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"244\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"244\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"295\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"309\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"309\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage377Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  while (e){\n");
        xml_.append("   return \"Vrai\"+1/0;\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  <span class=\"p\">while</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"231\">{</a>\n" +
                "   return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"s\">\"Faux\"</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"173\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"231\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"244\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"244\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"295\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"309\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"309\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage378Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=0;\n");
        xml_.append("  do {\n");
        xml_.append("   e.field++;\n");
        xml_.append("  } while (e);\n");
        xml_.append("  return \"=\"+e.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>=<span class=\"f\">0</span></span>;\n" +
                "  do {\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>++</span>;\n" +
                "  } <span class=\"f\">while</span> (<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"233\">;</a>\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"=\"</span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"175\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"201\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"233\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"246\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"246\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"297\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"311\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"311\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage379Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  do {\n");
        xml_.append("   e.field++;\n");
        xml_.append("  } while (e);\n");
        xml_.append("  return \"=\"+e.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  do {\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>++</span>;\n" +
                "  } <span class=\"p\">while</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"233\">;</a>\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"=\"</span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"175\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"201\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"233\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"246\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"246\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"297\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"175\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"311\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"311\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"201\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage380Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  for (;e;){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">for</span> (;<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>;)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"231\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"173\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"231\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"244\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"244\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"295\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"309\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"309\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage381Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=2;\n");
        xml_.append("  for (;e;){\n");
        xml_.append("   return \"Vrai\"+1/0;\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>=<span class=\"f\">2</span></span>;\n" +
                "  <span class=\"p\">for</span> (;<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>;)<a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"231\">{</a>\n" +
                "   return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"s\">\"Faux\"</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"173\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"231\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"244\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"244\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"295\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"309\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"309\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage382Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<S> :pkg.ExTwo<S>{\n");
        xml_.append(" $intern{getter(S):getter(Ex,S)|getter(ExTwo,T)};\n");
        xml_.append(" public S inst=(S)2i;\n");
        xml_.append(" public (S i){\n");
        xml_.append("  super((S)16i);\n");
        xml_.append("  inst=i;\n");
        xml_.append("  inst=(S)((int)inst+(int)getter((S)((int)i+10)));\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  return new Ex<int>(9).inst;\n");
        xml_.append(" }\n");
        xml_.append(" public S getter(S t){\n");
        xml_.append("  return inst;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T> {\n");
        xml_.append(" public T sec;\n");
        xml_.append(" package (T i){\n");
        xml_.append("  sec=i;\n");
        xml_.append(" }\n");
        xml_.append(" public T getter(T t){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">S</a>&gt; :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>&gt;{\n" +
                " $intern{getter(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>):<a title=\"pkg.Ex.getter(#S)\" href=\"#"+ExportCst.PREF_REF+"278\">getter</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)|<a title=\"pkg.ExTwo.getter(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"81\">getter</a>(<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"ExTwo.html#"+ExportCst.PREF_REF+"23\">T</a>)};\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"98\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">2i</span></span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"111\">public (</a><a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"121\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"44\">super</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">16i</span></span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"98\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"121\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"98\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"98\">inst</a></span></span>+<span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.getter(#S)\" href=\"#"+ExportCst.PREF_REF+"278\">getter</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"121\">i</a></span></span>+<span class=\"f\">10</span></span>)</span></span>)</span></span></span>)</span></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"225\">getter</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(#S)\" href=\"#"+ExportCst.PREF_REF+"111\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;(<span class=\"f\">9</span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"98\">inst</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"278\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"287\">t</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"98\">inst</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage383Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex :pkg.ExTwo{\n");
        xml_.append(" $intern{getter():getter(Ex)|getter(ExTwo);getter2():getter2(Ex)};\n");
        xml_.append(" public int inst=2i;\n");
        xml_.append(" public (int i){\n");
        xml_.append("  super(20i);\n");
        xml_.append("  inst=i;\n");
        xml_.append("  inst+=getter();\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo ex = new Ex(9);\n");
        xml_.append("  return ex.getter2();\n");
        xml_.append(" }\n");
        xml_.append(" public int getter(){\n");
        xml_.append("  return inst;\n");
        xml_.append(" }\n");
        xml_.append(" public int getter2(){\n");
        xml_.append("  return inst*2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int sec;\n");
        xml_.append(" package (int i){\n");
        xml_.append("  sec=i;\n");
        xml_.append(" }\n");
        xml_.append(" public int getter(){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append(" public int getter2(){\n");
        xml_.append("  return sec+2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>{\n" +
                " $intern{getter():<a title=\"pkg.Ex.getter()\" href=\"#"+ExportCst.PREF_REF+"273\">getter</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)|<a title=\"pkg.ExTwo.getter()\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"84\">getter</a>(<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>);getter2():<a title=\"pkg.Ex.getter2()\" href=\"#"+ExportCst.PREF_REF+"313\">getter2</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>)};\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"111\">inst</a></span>=<span class=\"f\">2i</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"121\">public (</a>int <a name=\""+ExportCst.PREF_REF+"133\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(int)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"43\">super</a>(<span class=\"f\">20i</span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"111\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"133\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"111\">inst</a></span>+=<span class=\"f\"><a title=\"pkg.Ex.getter()\" href=\"#"+ExportCst.PREF_REF+"273\">getter</a>()</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"201\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">ex</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"121\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"219\">ex</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter2()\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"123\">getter2</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"273\">getter</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"111\">inst</a></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"313\">getter2</a>(){\n" +
                "  return <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"111\">inst</a></span>*<span class=\"n\">2</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage384Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<V> :pkg.ExTwo<V,V>{\n");
        xml_.append(" public V inst=(V)2i;\n");
        xml_.append(" public (V i){\n");
        xml_.append("  super((V)16i,(V)20i);\n");
        xml_.append("  inst=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo<int,int> e = new Ex<int>(9);\n");
        xml_.append("  return e.getter($id(ExTwo,T),25);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter2(V v){\n");
        xml_.append("  return (V)((int)inst+(int)v);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter3(V v){\n");
        xml_.append("  return (V)((int)inst*(int)v);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T,U> {\n");
        xml_.append(" public T sec;\n");
        xml_.append(" public U th;\n");
        xml_.append(" package (T i,U j){\n");
        xml_.append("  sec=i;\n");
        xml_.append("  th=j;\n");
        xml_.append(" }\n");
        xml_.append(" public T getter(T t)$intern(Ex:getter2(Ex,V);ExTwo:getter(ExTwo,T)){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append(" public U getter(U u)$intern(Ex:getter3(Ex,V);ExTwo:getter(ExTwo,U)){\n");
        xml_.append("  return th;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">V</a>&gt; :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>,<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>&gt;{\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">2i</span></span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"63\">public (</a><a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"73\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(#T,#U)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"60\">super</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">16i</span></span>,<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">20i</span></span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"73\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"133\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>&lt;int,int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"160\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(#V)\" href=\"#"+ExportCst.PREF_REF+"63\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"160\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"109\">getter</a>(<span class=\"f\">$id(<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"ExTwo.html#"+ExportCst.PREF_REF+"23\">T</a>)</span>,<span class=\"f\">25</span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"229\">getter2</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"239\">v</a>){\n" +
                "  return <span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"239\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"288\">getter3</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"298\">v</a>){\n" +
                "  return <span class=\"n\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"n\">(<span class=\"n\"><span class=\"n\">(int)<span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>*<span class=\"n\">(int)<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"298\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>&lt;<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">U</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"60\">package (</a><a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"71\">i</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"75\">j</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"71\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">j</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"109\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"118\">t</a>)$intern(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>:<a title=\"pkg.Ex.getter2(#V)\" href=\"Ex.html#"+ExportCst.PREF_REF+"229\">getter2</a>(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>);<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>:<a title=\"pkg.ExTwo.getter(#T)\" href=\"#"+ExportCst.PREF_REF+"109\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"23\">T</a>)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"196\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"205\">u</a>)$intern(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>:<a title=\"pkg.Ex.getter3(#V)\" href=\"Ex.html#"+ExportCst.PREF_REF+"288\">getter3</a>(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>);<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>:<a title=\"pkg.ExTwo.getter(#U)\" href=\"#"+ExportCst.PREF_REF+"196\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a>)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }

    @Test
    public void coverage385Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<V> :pkg.ExTwo<V,V>{\n");
        xml_.append(" public V inst=(V)2i;\n");
        xml_.append(" public (V i){\n");
        xml_.append("  super((V)16i,(V)20i);\n");
        xml_.append("  inst=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo<int,int> e = new Ex<int>(9);\n");
        xml_.append("  return e.getter($id(ExTwo,T,int),25,14);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter2(V v,int w){\n");
        xml_.append("  return (V)((int)inst+(int)v);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter3(V v,int w){\n");
        xml_.append("  return (V)((int)inst*(int)v);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T,U> {\n");
        xml_.append(" public T sec;\n");
        xml_.append(" public U th;\n");
        xml_.append(" package (T i,U j){\n");
        xml_.append("  sec=i;\n");
        xml_.append("  th=j;\n");
        xml_.append(" }\n");
        xml_.append(" public T getter(T t,int w)$intern(Ex:getter2(Ex,V,int);ExTwo:getter(ExTwo,T,int)){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append(" public U getter(U u,int w)$intern(Ex:getter3(Ex,V,int);ExTwo:getter(ExTwo,U,int)){\n");
        xml_.append("  return th;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>&lt;<a name=\""+ExportCst.PREF_REF+"20\">V</a>&gt; :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>&lt;<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>,<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>&gt;{\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">2i</span></span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"63\">public (</a><a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"73\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(#T,#U)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"60\">super</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">16i</span></span>,<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">20i</span></span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"73\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"133\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>&lt;int,int&gt; <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"160\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(#V)\" href=\"#"+ExportCst.PREF_REF+"63\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>&lt;int&gt;(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"160\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter(#T,int)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"109\">getter</a>(<span class=\"f\">$id(<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"ExTwo.html#"+ExportCst.PREF_REF+"23\">T</a>,int)</span>,<span class=\"f\">25</span>,<span class=\"f\">14</span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"236\">getter2</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"246\">v</a>,int <a name=\""+ExportCst.PREF_REF+"252\">w</a>){\n" +
                "  return <span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"246\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"301\">getter3</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"311\">v</a>,int <a name=\""+ExportCst.PREF_REF+"317\">w</a>){\n" +
                "  return <span class=\"n\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"n\">(<span class=\"n\"><span class=\"n\">(int)<span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>*<span class=\"n\">(int)<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"311\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>&lt;<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">U</a>&gt; {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"60\">package (</a><a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"71\">i</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"75\">j</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"71\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">j</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"109\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"118\">t</a>,int <a name=\""+ExportCst.PREF_REF+"124\">w</a>)$intern(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>:<a title=\"pkg.Ex.getter2(#V,int)\" href=\"Ex.html#"+ExportCst.PREF_REF+"236\">getter2</a>(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>,int);<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>:<a title=\"pkg.ExTwo.getter(#T,int)\" href=\"#"+ExportCst.PREF_REF+"109\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"23\">T</a>,int)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"210\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"219\">u</a>,int <a name=\""+ExportCst.PREF_REF+"225\">w</a>)$intern(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>:<a title=\"pkg.Ex.getter3(#V,int)\" href=\"Ex.html#"+ExportCst.PREF_REF+"301\">getter3</a>(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>,int);<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>:<a title=\"pkg.ExTwo.getter(#U,int)\" href=\"#"+ExportCst.PREF_REF+"210\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a>,int)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }

    @Test
    public void coverage386Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex :pkg.ExTwo{\n");
        xml_.append(" public int inst=2i;\n");
        xml_.append(" public (int i){\n");
        xml_.append("  super(16i);\n");
        xml_.append("  inst=i;\n");
        xml_.append("  inst+=getter();\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo e = new Ex(9);\n");
        xml_.append("  return e.getter();\n");
        xml_.append(" }\n");
        xml_.append(" public int getter(){\n");
        xml_.append("  return inst;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int sec;\n");
        xml_.append(" package (int i){\n");
        xml_.append("  sec=i;\n");
        xml_.append(" }\n");
        xml_.append(" public int getter()$intern(Ex:getter(ExTwo);ExTwo:getter(ExTwo)){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>{\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"44\">inst</a></span>=<span class=\"f\">2i</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"54\">public (</a>int <a name=\""+ExportCst.PREF_REF+"66\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(int)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"43\">super</a>(<span class=\"f\">16i</span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>+=<span class=\"f\"><a title=\"pkg.Ex.getter()\" href=\"#"+ExportCst.PREF_REF+"203\">getter</a>()</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"134\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"152\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"54\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter()\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"84\">getter</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"203\">getter</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"37\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"43\">package (</a>int <a name=\""+ExportCst.PREF_REF+"56\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"37\">sec</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"56\">i</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"84\">getter</a>()$intern(<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>:<a title=\"pkg.ExTwo.getter()\" href=\"#"+ExportCst.PREF_REF+"84\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>);<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>:<a title=\"pkg.ExTwo.getter()\" href=\"#"+ExportCst.PREF_REF+"84\">getter</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>)){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"37\">sec</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }

    @Test
    public void coverage387Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $class Inner {\n");
        xml_.append("  $public Inner(){\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex().$new{} Inner();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $class <a name=\""+ExportCst.PREF_REF+"40\">Inner</a> {\n" +
                "  <a name=\""+ExportCst.PREF_REF+"50\">$public Inner(</a>){\n" +
                "  }\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"98\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$new{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner()\" href=\"#"+ExportCst.PREF_REF+"50\">$new</a>{} <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage388Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $class Inner {\n");
        xml_.append("  $public Inner($int p){\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public Ex($int p){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex(0).$new{} Inner(1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $class <a name=\""+ExportCst.PREF_REF+"40\">Inner</a> {\n" +
                "  <a name=\""+ExportCst.PREF_REF+"50\">$public Inner(</a>$int <a name=\""+ExportCst.PREF_REF+"69\">p</a>){\n" +
                "  }\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"81\">$public Ex(</a>$int <a name=\""+ExportCst.PREF_REF+"97\">p</a>){\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"128\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex($int)\" href=\"#"+ExportCst.PREF_REF+"81\">$new</a>{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<span class=\"f\">0</span>)</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner($int)\" href=\"#"+ExportCst.PREF_REF+"50\">$new</a>{} <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage389Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $class Inner<T> {\n");
        xml_.append("  $public Inner(){\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex().$new{} Inner<Ex>();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $class <a name=\""+ExportCst.PREF_REF+"40\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"46\">T</a>&gt; {\n" +
                "  <a name=\""+ExportCst.PREF_REF+"53\">$public Inner(</a>){\n" +
                "  }\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"101\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$new{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner()\" href=\"#"+ExportCst.PREF_REF+"53\">$new</a>{} <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>&lt;<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&gt;()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage390Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $class Inner<T> {\n");
        xml_.append("  $public Inner($int p){\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" $public Ex($int p){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static Object exmeth(){\n");
        xml_.append("  $return $new{} Ex(0).$new{} Inner<Ex>(1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $class <a name=\""+ExportCst.PREF_REF+"40\">Inner</a>&lt;<a name=\""+ExportCst.PREF_REF+"46\">T</a>&gt; {\n" +
                "  <a name=\""+ExportCst.PREF_REF+"53\">$public Inner(</a>$int <a name=\""+ExportCst.PREF_REF+"72\">p</a>){\n" +
                "  }\n" +
                " }\n" +
                " <a name=\""+ExportCst.PREF_REF+"84\">$public Ex(</a>$int <a name=\""+ExportCst.PREF_REF+"100\">p</a>){\n" +
                " }\n" +
                " $public $static Object <a name=\""+ExportCst.PREF_REF+"131\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex($int)\" href=\"#"+ExportCst.PREF_REF+"84\">$new</a>{} <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>(<span class=\"f\">0</span>)</span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner($int)\" href=\"#"+ExportCst.PREF_REF+"53\">$new</a>{} <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"40\">Inner</a>&lt;<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>&gt;(<span class=\"f\">1</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage391Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int extField;\n");
        xml_.append(" void m(){\n");
        xml_.append("  class Loc{\n");
        xml_.append("   int field;\n");
        xml_.append("  }\n");
        xml_.append("  Loc l = new Loc();\n");
        xml_.append("  l.field = 2;\n");
        xml_.append("  extField = l.field;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e.m();\n");
        xml_.append("  return e.extField;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">extField</a></span>;\n" +
                " void <a name=\""+ExportCst.PREF_REF+"37\">m</a>(){\n" +
                "  class <a name=\""+ExportCst.PREF_REF+"50\">Loc</a>{\n" +
                "   int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">field</a></span>;\n" +
                "  }\n" +
                "  <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"50\">Loc</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"79\">l</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"50\">Loc</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"79\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"62\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"79\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"62\">field</a></span></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"146\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"157\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.m()\" href=\"#"+ExportCst.PREF_REF+"37\">m</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"157\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage392Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int extField;\n");
        xml_.append(" void m(){\n");
        xml_.append("  interface Super{\n");
        xml_.append("   int superField;\n");
        xml_.append("   Super(int p){\n");
        xml_.append("    superField = p;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  class Loc:Super{\n");
        xml_.append("   int field;\n");
        xml_.append("   Loc(int p, int q){\n");
        xml_.append("    interfaces(Super)(p);\n");
        xml_.append("    field = q;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  Loc l = new Loc(2,4);\n");
        xml_.append("  extField = l.field+l.superField;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e.m();\n");
        xml_.append("  return e.extField;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">extField</a></span>;\n" +
                " void <a name=\""+ExportCst.PREF_REF+"37\">m</a>(){\n" +
                "  interface <a name=\""+ExportCst.PREF_REF+"54\">Super</a>{\n" +
                "   int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">superField</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"83\">Super(</a>int <a name=\""+ExportCst.PREF_REF+"93\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Super+1.superField\" href=\"#"+ExportCst.PREF_REF+"68\">superField</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">p</a></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  class <a name=\""+ExportCst.PREF_REF+"134\">Loc</a>:<a title=\"pkg.Ext..Super+1\" href=\"#"+ExportCst.PREF_REF+"54\">Super</a>{\n" +
                "   int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"152\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"162\">Loc(</a>int <a name=\""+ExportCst.PREF_REF+"170\">p</a>, int <a name=\""+ExportCst.PREF_REF+"177\">q</a>){\n" +
                "    <span class=\"f\"><a title=\"pkg.Ext..Super+1.pkg.Ext..Super+1(int)\" href=\"#"+ExportCst.PREF_REF+"83\">interfaces</a>(<a title=\"pkg.Ext..Super+1\" href=\"#"+ExportCst.PREF_REF+"54\">Super</a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"170\">p</a></span>)</span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"152\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"177\">q</a></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"134\">Loc</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"237\">l</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext..Loc+1.pkg.Ext..Loc+1(int,int)\" href=\"#"+ExportCst.PREF_REF+"162\">new</a> <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"134\">Loc</a>(<span class=\"f\">2</span>,<span class=\"f\">4</span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"237\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"152\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"237\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Super+1.superField\" href=\"#"+ExportCst.PREF_REF+"68\">superField</a></span></span></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"305\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"316\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.m()\" href=\"#"+ExportCst.PREF_REF+"37\">m</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage393Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("static pkg.ExTwo.*;\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append(" int infoIntOne()2i;\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append(" int infoIntTwo()4i;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append("\n");
        xml_.append(" public static int method( @MyAnnot(infoIntOne=1i)@MyAnnotTwo(infoIntTwo=3i) int p){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">static pkg.ExTwo.*</span>;\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"38\">pkg.MyAnnot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"57\">infoIntOne</a>()<span class=\"n2\">2i</span>;\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"93\">pkg.MyAnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"115\">infoIntTwo</a>()<span class=\"n2\">4i</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Ex</a> {\n" +
                "\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"175\">method</a>( <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"38\">MyAnnot</a>(<span class=\"n2\"><a title=\"pkg.MyAnnot.infoIntOne()\" href=\"#"+ExportCst.PREF_REF+"57\">infoIntOne</a>=<span class=\"n2\">1i</span></span>)</span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"93\">MyAnnotTwo</a>(<span class=\"n2\"><a title=\"pkg.MyAnnotTwo.infoIntTwo()\" href=\"#"+ExportCst.PREF_REF+"115\">infoIntTwo</a>=<span class=\"n2\">3i</span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"237\">p</a>){\n" +
                "  return <span class=\"n\">0i</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"276\">catching</a>(){\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage394Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("static pkg.ExTwo.*;\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append(" int infoIntOne()2i;\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append(" int infoIntTwo()4i;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append("\n");
        xml_.append(" public static int method(@MyAnnot(infoIntOne=1i) @MyAnnotTwo(infoIntTwo=3i) int p){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">static pkg.ExTwo.*</span>;\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"38\">pkg.MyAnnot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"57\">infoIntOne</a>()<span class=\"n2\">2i</span>;\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"93\">pkg.MyAnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"115\">infoIntTwo</a>()<span class=\"n2\">4i</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Ex</a> {\n" +
                "\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"175\">method</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"38\">MyAnnot</a>(<span class=\"n2\"><a title=\"pkg.MyAnnot.infoIntOne()\" href=\"#"+ExportCst.PREF_REF+"57\">infoIntOne</a>=<span class=\"n2\">1i</span></span>)</span> <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"93\">MyAnnotTwo</a>(<span class=\"n2\"><a title=\"pkg.MyAnnotTwo.infoIntTwo()\" href=\"#"+ExportCst.PREF_REF+"115\">infoIntTwo</a>=<span class=\"n2\">3i</span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"237\">p</a>){\n" +
                "  return <span class=\"n\">0i</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"276\">catching</a>(){\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage395Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("static pkg.ExTwo.*;\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append(" int infoIntOne()2i;\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append(" int infoIntTwo()4i;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append("\n");
        xml_.append(" public static int method( @MyAnnot(infoIntOne=1i) @MyAnnotTwo(infoIntTwo=3i) int p){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">static pkg.ExTwo.*</span>;\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"38\">pkg.MyAnnot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"57\">infoIntOne</a>()<span class=\"n2\">2i</span>;\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"93\">pkg.MyAnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"115\">infoIntTwo</a>()<span class=\"n2\">4i</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Ex</a> {\n" +
                "\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"175\">method</a>( <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"38\">MyAnnot</a>(<span class=\"n2\"><a title=\"pkg.MyAnnot.infoIntOne()\" href=\"#"+ExportCst.PREF_REF+"57\">infoIntOne</a>=<span class=\"n2\">1i</span></span>)</span> <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"93\">MyAnnotTwo</a>(<span class=\"n2\"><a title=\"pkg.MyAnnotTwo.infoIntTwo()\" href=\"#"+ExportCst.PREF_REF+"115\">infoIntTwo</a>=<span class=\"n2\">3i</span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"238\">p</a>){\n" +
                "  return <span class=\"n\">0i</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"277\">catching</a>(){\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage396Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" $int method;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"95\">pkg.MyAnnotThree</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"56\">MyAnnotTwo</a></span>\n" +
                " $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"143\">method</a></span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"168\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"199\">catching</a>(){\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage397Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int extField;\n");
        xml_.append(" void m(){\n");
        xml_.append("  @MyAnnot\n");
        xml_.append("  class Loc{\n");
        xml_.append("   int field;\n");
        xml_.append("  }\n");
        xml_.append("  Loc l = new Loc();\n");
        xml_.append("  l.field = 2;\n");
        xml_.append("  extField = l.field;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e.m();\n");
        xml_.append("  return e.extField;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">extField</a></span>;\n" +
                " void <a name=\""+ExportCst.PREF_REF+"37\">m</a>(){\n" +
                "  <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"236\">MyAnnot</a></span>\n" +
                "  class <a name=\""+ExportCst.PREF_REF+"61\">Loc</a>{\n" +
                "   int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"73\">field</a></span>;\n" +
                "  }\n" +
                "  <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"61\">Loc</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"90\">l</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext..Loc+1\" href=\"#"+ExportCst.PREF_REF+"61\">Loc</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"73\">field</a> </span></span>=<span class=\"f\"> 2</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">l</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Loc+1.field\" href=\"#"+ExportCst.PREF_REF+"73\">field</a></span></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"157\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.m()\" href=\"#"+ExportCst.PREF_REF+"37\">m</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"21\">extField</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"236\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage398Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Ex exmeth(){\n");
        xml_.append("  $return ( Ex)$null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a> <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a>)<span class=\"f\">$null</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverageComment1Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  \\\\comment\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <span class=\"c\">\\\\comment</span>\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment2Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  \\*comment*\\\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <span class=\"c\">\\*comment*\\</span>\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment3Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("\\\\comment\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"c\">\\\\comment</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"25\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"56\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment4Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("\\*comment*\\\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"c\">\\*comment*\\</span>\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"27\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"58\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment5Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("\\\\comment\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "<span class=\"c\">\\\\comment</span>\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment6Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("\\*comment*\\\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "<span class=\"c\">\\*comment*\\</span>\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment7Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("\\\\");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "<span class=\"c\">\\\\</span>" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment8Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("\\*comment");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "<span class=\"c\">\\*comment</span>" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment9Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   \\\\EIGHT\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 10;\n" +
                "   <span class=\"c\">\\\\EIGHT</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment10Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   \\*EIGHT*\\\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 10;\n" +
                "   <span class=\"c\">\\*EIGHT*\\</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment11Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   \\\\EIGHT\n");
        xml_.append("   $default;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 10;\n" +
                "   <span class=\"c\">\\\\EIGHT</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$default</a></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment12Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $case 10;\n");
        xml_.append("   \\*EIGHT*\\\n");
        xml_.append("   $default;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> 10;\n" +
                "   <span class=\"c\">\\*EIGHT*\\</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$default</a></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment13Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $default;\n");
        xml_.append("   \\\\EIGHT\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$default</a></span>;\n" +
                "   <span class=\"c\">\\\\EIGHT</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment14Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $long t;\n");
        xml_.append("  t=10;\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $default;\n");
        xml_.append("   \\*EIGHT*\\\n");
        xml_.append("   $case 8;\n");
        xml_.append("    t=12;\n");
        xml_.append("  }\n");
        xml_.append("  $return 1i+$($int)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $long <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">10</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">$default</a></span>;\n" +
                "   <span class=\"c\">\\*EIGHT*\\</span>\n" +
                "   <span class=\"n\"><a title=\"0/1\">$case</a></span> 8;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span>=<span class=\"f\">12</span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><span class=\"f\">1i</span>+<span class=\"f\">$($int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">t</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment15Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"\\\\\";\n");
        xml_.append("  \\\\comment\n");
        xml_.append("  $switch(t){\n");
        xml_.append("   $default;\n");
        xml_.append("   \\*EIGHT*\\\n");
        xml_.append("   $case \"\\\\\";\n");
        xml_.append("    t+=\"12\";\n");
        xml_.append("  }\n");
        xml_.append("  $return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\\\\\"</span></span></span>;\n" +
                "  <span class=\"c\">\\\\comment</span>\n" +
                "  <span class=\"p\"><a title=\"1/2\">$switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">$default</a></span>;\n" +
                "   <span class=\"c\">\\*EIGHT*\\</span>\n" +
                "   <span class=\"f\"><a title=\"1/1\">$case</a></span> <span class=\"s\">\"\\\\\"</span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">t</a></span>+=<span class=\"f\"><span class=\"s\">\"12\"</span></span></span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment16Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return\\*comment*\\1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covCom(files_);
        CustList<Argument> args_ = new CustList<Argument>();
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, args_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  $return<span class=\"c\">\\*comment*\\</span><span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }


    @Test
    public void coverageFailTest() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static Object catching(){\n");
        xml_.append("  $return $(T)0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        assertTrue(covErr(files_));
    }

    private static String getCustomPair() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustPair<U,V> :$pair<U,V>{\n");
        xml_.append(" $private U first;\n");
        xml_.append(" $private V second;\n");
        xml_.append(" $public CustPair(){\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair(U f,V s){\n");
        xml_.append("  first = f;\n");
        xml_.append("  second = s;\n");
        xml_.append(" }\n");
        xml_.append(" $public U getFirst(){\n");
        xml_.append("  $return first;\n");
        xml_.append(" }\n");
        xml_.append(" $public V getSecond(){\n");
        xml_.append("  $return second;\n");
        xml_.append(" }\n");
        xml_.append(" $public $void setFirst(U f){\n");
        xml_.append("  first = f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomTable() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustTable<U,V> :$iterableTable<U,V>{\n");
        xml_.append(" $private CustList<CustPair<U,V>> list;\n");
        xml_.append(" $public (){\n");
        xml_.append("  list=$new CustList<CustPair<U,V>>();\n");
        xml_.append(" }\n");
        xml_.append(" $public $void add(U f,V s){\n");
        xml_.append("  list.add($new CustPair<U,V>(f,s));\n");
        xml_.append(" }\n");
        xml_.append(" $public $void add(CustPair<U,V> p){\n");
        xml_.append("  list.add(p);\n");
        xml_.append(" }\n");
        xml_.append(" $public $int size(){\n");
        xml_.append("  $return list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair<U,V> get($int index){\n");
        xml_.append("  $return list.get(index);\n");
        xml_.append(" }\n");
        xml_.append(" $public $iteratorTable<U,V> iteratorTable(){\n");
        xml_.append("  $return $new CustIterTable<U,V>($this);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomIteratorTable() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustIterTable<U,V> :$iteratorTable<U,V>{\n");
        xml_.append(" $private CustTable<U,V> list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $private $int index;\n");
        xml_.append(" $public CustIterTable(CustTable<U,V> i){\n");
        xml_.append("  list=i;\n");
        xml_.append("  length=list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair<U,V> nextPair(){\n");
        xml_.append("  CustPair<U,V> out=list.get(index);\n");
        xml_.append("  index++;\n");
        xml_.append("  $return out;\n");
        xml_.append(" }\n");
        xml_.append(" $public $boolean hasNextPair(){\n");
        xml_.append("  $return index<length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomList() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustList<U> :$iterable<U>{\n");
        xml_.append(" $private U[] list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $public (){\n");
        xml_.append("  list=$new U[0i];\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void add(U elt){\n");
        xml_.append("  add(length,elt);\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void add($int index,U elt){\n");
        xml_.append("  U[] newlist=$new U[length+1i];\n");
        xml_.append("  $iter($int i=0i;index;1i){\n");
        xml_.append("   newlist[i]=list[i];\n");
        xml_.append("  }\n");
        xml_.append("  newlist[index]=elt;\n");
        xml_.append("  $iter($int i=index+1i;length+1i;1i){\n");
        xml_.append("   newlist[i]=list[i-1i];\n");
        xml_.append("  }\n");
        xml_.append("  length++;\n");
        xml_.append("  list=newlist;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $int size(){\n");
        xml_.append("  $return length;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal U get($int index){\n");
        xml_.append("  $return list[index];\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void set($int index,U elt){\n");
        xml_.append("  list[index]=elt;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void remove($int index){\n");
        xml_.append("  $iter($int i=index;length-1i;1i){\n");
        xml_.append("   list[i]=list[i+1i];\n");
        xml_.append("  }\n");
        xml_.append("  list[length-1i]=$null;\n");
        xml_.append("  length--;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $iterator<U> iterator(){\n");
        xml_.append("  $return $new pkg.CustIter<U>($this);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomIterator() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustIter<T> :$iterator<T>{\n");
        xml_.append(" $private pkg.CustList<T> list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $private $int index;\n");
        xml_.append(" $public (pkg.CustList<T> i){\n");
        xml_.append("  list=i;\n");
        xml_.append("  length=list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal T next(){\n");
        xml_.append("  T out=list.get(index);\n");
        xml_.append("  index++;\n");
        xml_.append("  $return out;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $boolean hasNext(){\n");
        xml_.append("  $return index<length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }

}
