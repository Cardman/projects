package code.expressionlanguage.methods;

import code.expressionlanguage.ContextEl;
import code.expressionlanguage.common.MessagesCdmBase;
import code.expressionlanguage.functionid.MethodId;
import code.expressionlanguage.linkage.ExportCst;
import code.util.StringMap;
import org.junit.Test;

public final class CoverageReport1Test extends ProcessMethodCommon {

    @Test
    public void coverage399Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new Int(){\n");
        xml_.append("   public int field=++extField;\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"42\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"64\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"86\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"97\">l</a> </span>=<span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"110\">{</a>\n" +
                "   public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"126\">field</a></span>=<span class=\"f\">++<span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"64\">extField</a></span></span></span>;\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"158\">field</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"126\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"97\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage400Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" public int field=++extField;\n");
        xml_.append(" public int field(){\n");
        xml_.append("  return field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new Int(){\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">extField</a></span>;\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"50\">field</a></span>=<span class=\"f\">++<span class=\"f\"><a title=\"pkg.Int.extField\" href=\"#"+ExportCst.PREF_REF+"28\">extField</a></span></span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"80\">field</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"50\">field</a></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"116\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"138\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"149\">l</a> </span>=<span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"162\">{</a>\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"149\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"80\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage401Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new Int(1){\n");
        xml_.append("   public int field;\n");
        xml_.append("   Int(int p){\n");
        xml_.append("    field=p;\n");
        xml_.append("   }\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"42\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"64\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">l</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"115\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>(<span class=\"f\">1</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"89\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"105\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"115\">Int(</a>int <a name=\""+ExportCst.PREF_REF+"123\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"105\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"123\">p</a></span></span>;\n" +
                "   }\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"159\">field</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"105\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage402Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field = 15;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  if (new Int(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field == 15)lab{\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"41\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"63\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(){\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"105\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"121\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 15</span></span>)<a name=\""+ExportCst.PREF_REF+"147\">lab</a>{\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage403Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field = 15;\n");
        xml_.append(" static boolean true(Int i){\n");
        xml_.append("  return i.field == 15;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  if (new Int(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"49\">true</a>(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"58\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">i</a></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 15</span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"97\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"119\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"141\">m</a>(){\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"161\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"177\">subfield</a></span>;\n" +
                "  }</span></span>)<a title=\"pkg.Int.static true(boolean,pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"49\">{</a>\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage404Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field = 15;\n");
        xml_.append(" static boolean true(Int i){\n");
        xml_.append("  return i.field == 15;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  if (new Int(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  })lab{\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"49\">true</a>(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"58\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">i</a></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 15</span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"97\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"119\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"141\">m</a>(){\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"161\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"177\">subfield</a></span>;\n" +
                "  }</span></span>)<a name=\""+ExportCst.PREF_REF+"191\">lab</a><a title=\"pkg.Int.static true(boolean,pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"49\">{</a>\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage405Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Init {\n");
        xml_.append(" int field = 2;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Until {\n");
        xml_.append(" int field = 15;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Step {\n");
        xml_.append(" int field = 3;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  iter (int v = new Init(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Until(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Step(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field){\n");
        xml_.append("   sum += v;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Init</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"22\">field</a> </span>=<span class=\"f\"> 2</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"41\">pkg.Until</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"78\">pkg.Step</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">field</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"113\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"135\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"157\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"189\">v</a> = <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Init\" href=\"#"+ExportCst.PREF_REF+"6\">Init</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"203\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Init.field\" href=\"#"+ExportCst.PREF_REF+"22\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Until\" href=\"#"+ExportCst.PREF_REF+"41\">Until</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"250\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"266\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Until.field\" href=\"#"+ExportCst.PREF_REF+"58\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Step\" href=\"#"+ExportCst.PREF_REF+"78\">Step</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"296\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"312\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Step.field\" href=\"#"+ExportCst.PREF_REF+"94\">field</a></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"189\">v</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage406Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Init {\n");
        xml_.append(" int field = 2;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Until {\n");
        xml_.append(" int field = 15;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Step {\n");
        xml_.append(" int field = 3;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  iter (int v = new Init(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Until(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Step(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field){\n");
        xml_.append("   sum += v;\n");
        xml_.append("  }\n");
        xml_.append("  iter (int v = new Init(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Until(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;new Step(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field){\n");
        xml_.append("   sum += v;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Init</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"22\">field</a> </span>=<span class=\"f\"> 2</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"41\">pkg.Until</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"78\">pkg.Step</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">field</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"113\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"135\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"157\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"189\">v</a> = <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Init\" href=\"#"+ExportCst.PREF_REF+"6\">Init</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"203\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Init.field\" href=\"#"+ExportCst.PREF_REF+"22\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Until\" href=\"#"+ExportCst.PREF_REF+"41\">Until</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"250\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"266\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Until.field\" href=\"#"+ExportCst.PREF_REF+"58\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Step\" href=\"#"+ExportCst.PREF_REF+"78\">Step</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"296\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"312\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Step.field\" href=\"#"+ExportCst.PREF_REF+"94\">field</a></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"189\">v</a></span></span>;\n" +
                "  }\n" +
                "  <span class=\"f\">iter</span> (int <a name=\""+ExportCst.PREF_REF+"363\">v</a> = <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Init\" href=\"#"+ExportCst.PREF_REF+"6\">Init</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"377\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"393\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Init.field\" href=\"#"+ExportCst.PREF_REF+"22\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Until\" href=\"#"+ExportCst.PREF_REF+"41\">Until</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"424\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"440\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Until.field\" href=\"#"+ExportCst.PREF_REF+"58\">field</a></span></span>;<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Step\" href=\"#"+ExportCst.PREF_REF+"78\">Step</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"470\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"486\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Step.field\" href=\"#"+ExportCst.PREF_REF+"94\">field</a></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"363\">v</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage407Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Init {\n");
        xml_.append(" int field = 2;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Until {\n");
        xml_.append(" int field = 15;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Step {\n");
        xml_.append(" int field = 3;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int v = new Init(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;v < new Until(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field;v += new Step(){\n");
        xml_.append("   public int subfield;\n");
        xml_.append("  }.field){\n");
        xml_.append("   sum += v;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Init</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"22\">field</a> </span>=<span class=\"f\"> 2</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"41\">pkg.Until</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">field</a> </span>=<span class=\"f\"> 15</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"78\">pkg.Step</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">field</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"113\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"135\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"157\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"168\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"188\">v</a> </span>=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Init\" href=\"#"+ExportCst.PREF_REF+"6\">Init</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"202\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Init.field\" href=\"#"+ExportCst.PREF_REF+"22\">field</a></span></span></span>;<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">v</a> </span>"+MessagesCdmBase.LT+"<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Until\" href=\"#"+ExportCst.PREF_REF+"41\">Until</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"253\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"269\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Until.field\" href=\"#"+ExportCst.PREF_REF+"58\">field</a></span></span></span>;<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">v</a> </span>+=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Step\" href=\"#"+ExportCst.PREF_REF+"78\">Step</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"304\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"320\">subfield</a></span>;\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Step.field\" href=\"#"+ExportCst.PREF_REF+"94\">field</a></span></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a> </span>+=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"188\">v</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"168\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage408Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" ONE(new Int(1){\n");
        xml_.append("  static int extField;\n");
        xml_.append("  public int field;\n");
        xml_.append("  public Int(int p){\n");
        xml_.append("   field = p;\n");
        xml_.append("  }\n");
        xml_.append("  public int field(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" }){\n");
        xml_.append("  ONE(Int p){\n");
        xml_.append("   super(p);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" Int inner;\n");
        xml_.append(" Ext(Int p){\n");
        xml_.append("  inner = p;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return ONE.inner.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"41\">pkg.Ext</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"52\" title=\"pkg.Ext-ONE.pkg.Ext-ONE(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"200\">ONE</a>(<span class=\"g\"><a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"113\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>(<span class=\"g\">1</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"66\">{</a>\n" +
                "  static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"81\">extField</a></span>;\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"104\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"113\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"128\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"104\">field</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"128\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"163\">field</a>(){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"104\">field</a></span>;\n" +
                "  }\n" +
                " }</span></span>)</span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"200\">ONE(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <a name=\""+ExportCst.PREF_REF+"208\">p</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.Ext.pkg.Ext(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"246\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"208\">p</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"238\">inner</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"246\">Ext(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <a name=\""+ExportCst.PREF_REF+"254\">p</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext.inner\" href=\"#"+ExportCst.PREF_REF+"238\">inner</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"254\">p</a></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"286\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.ONE\" href=\"#"+ExportCst.PREF_REF+"52\">ONE</a></span>.<span class=\"f\"><a title=\"pkg.Ext.inner\" href=\"#"+ExportCst.PREF_REF+"238\">inner</a></span></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage409Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" ONE(new Int(1){\n");
        xml_.append("  static int extField;\n");
        xml_.append("  public int field;\n");
        xml_.append("  public Int(int p){\n");
        xml_.append("   field = p;\n");
        xml_.append("  }\n");
        xml_.append("  public int field(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" });\n");
        xml_.append(" Int inner;\n");
        xml_.append(" Ext(Int p){\n");
        xml_.append("  inner = p;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return ONE.inner.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"41\">pkg.Ext</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"52\" title=\"pkg.Ext.pkg.Ext(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"211\">ONE</a>(<span class=\"g\"><a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"113\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>(<span class=\"g\">1</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"66\">{</a>\n" +
                "  static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"81\">extField</a></span>;\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"104\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"113\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"128\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"104\">field</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"128\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"163\">field</a>(){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"104\">field</a></span>;\n" +
                "  }\n" +
                " }</span></span>)</span>;\n" +
                " <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"203\">inner</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"211\">Ext(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <a name=\""+ExportCst.PREF_REF+"219\">p</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext.inner\" href=\"#"+ExportCst.PREF_REF+"203\">inner</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"219\">p</a></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"251\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.ONE\" href=\"#"+ExportCst.PREF_REF+"52\">ONE</a></span>.<span class=\"f\"><a title=\"pkg.Ext.inner\" href=\"#"+ExportCst.PREF_REF+"203\">inner</a></span></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage410Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" static int stfield;\n");
        xml_.append(" int field();\n");
        xml_.append(" static {\n");
        xml_.append("  stfield++;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new interfaces(Int) Int(){\n");
        xml_.append("   public int field=++stfield;\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"32\">stfield</a></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"46\">field</a>();\n" +
                " static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Int.stfield\" href=\"#"+ExportCst.PREF_REF+"32\">stfield</a></span>++</span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"89\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"111\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">l</a> </span>=<span class=\"f\"> new interfaces(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>) <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"151\">{</a>\n" +
                "   public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">field</a></span>=<span class=\"f\">++<span class=\"f\"><a title=\"pkg.Int.stfield\" href=\"#"+ExportCst.PREF_REF+"32\">stfield</a></span></span></span>;\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"198\">field</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"46\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage411Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" static int stfield;\n");
        xml_.append(" int field();\n");
        xml_.append(" static {\n");
        xml_.append("  stfield++;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new {} interfaces(Int) Int(){\n");
        xml_.append("   public int field=++stfield;\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"32\">stfield</a></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"46\">field</a>();\n" +
                " static {\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Int.stfield\" href=\"#"+ExportCst.PREF_REF+"32\">stfield</a></span>++</span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"89\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"111\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">l</a> </span>=<span class=\"f\"> new {} interfaces(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>) <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"154\">{</a>\n" +
                "   public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"170\">field</a></span>=<span class=\"f\">++<span class=\"f\"><a title=\"pkg.Int.stfield\" href=\"#"+ExportCst.PREF_REF+"32\">stfield</a></span></span></span>;\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"201\">field</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"170\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"46\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage412Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  while (i < new Int(){}.field){\n");
        xml_.append("   res+=',';\n");
        xml_.append("   i++;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"f\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">while</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a> </span>"+MessagesCdmBase.LT+"<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"122\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"s\">','</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a></span>++</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage413Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  if (i < 0){\n");
        xml_.append("  } else if (i < new Int(){}.field){\n");
        xml_.append("   res+=',';\n");
        xml_.append("   i++;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"f\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a> </span><a title=\"false\">"+MessagesCdmBase.LT+"</a><span class=\"f\"> 0</span></span>){\n" +
                "  } <span class=\"p\">else if</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a> </span><a title=\"true\">"+MessagesCdmBase.LT+"</a><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"140\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"s\">','</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a></span>++</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage414Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static Int inner = new Int(){\n");
        xml_.append("  static int extField;\n");
        xml_.append("  public int field=1;\n");
        xml_.append("  public int field(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return inner.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"42\">pkg.Ext</a> {\n" +
                " static <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"64\">inner</a> </span>=<span class=\"g\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"81\">{</a>\n" +
                "  static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"96\">extField</a></span>;\n" +
                "  public int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"119\">field</a></span>=<span class=\"g\">1</span></span>;\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"141\">field</a>(){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"119\">field</a></span>;\n" +
                "  }\n" +
                " }</span></span></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"187\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.inner\" href=\"#"+ExportCst.PREF_REF+"64\">inner</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage415Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  switch (new Int(){}.field){\n");
        xml_.append("   case 1;\n");
        xml_.append("   res+=',';\n");
        xml_.append("   i++;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"f\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span> (<span class=\"f\"><span class=\"f\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"119\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 1;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"s\">','</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a></span>++</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage416Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  do {\n");
        xml_.append("   res+=',';\n");
        xml_.append("   i++;\n");
        xml_.append("  }\n");
        xml_.append("  while (i < new Int(){}.field);\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"f\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  do {\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"s\">','</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a></span>++</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">while</span> (<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">i</a> </span><a title=\"false\">"+MessagesCdmBase.LT+"</a><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"154\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span></span>);\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage417Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  for (int i: new Iterable<int>(1,2){\n");
        xml_.append("   int[] f;\n");
        xml_.append("   Iterable(int... a){\n");
        xml_.append("    f = a;\n");
        xml_.append("   }\n");
        xml_.append("   public Iterator<int> iterator(){\n");
        xml_.append("    return new Iterator<int>(f){\n");
        xml_.append("     int[] g;\n");
        xml_.append("     int j;\n");
        xml_.append("     Iterator(int... a){\n");
        xml_.append("      g = a;\n");
        xml_.append("     }\n");
        xml_.append("     public boolean hasNext(){\n");
        xml_.append("      return j < g.length;\n");
        xml_.append("     }\n");
        xml_.append("     public int next(){\n");
        xml_.append("      return g[j++];\n");
        xml_.append("     }\n");
        xml_.append("    };\n");
        xml_.append("   }\n");
        xml_.append("  }) {\n");
        xml_.append("   res+=i+\",\";\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"n\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"98\">i</a></span>: <span class=\"f\"><a title=\"pkg.Ext..Iterable*1.pkg.Ext..Iterable*1(int...)\" href=\"#"+ExportCst.PREF_REF+"140\">new</a> Iterable"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"(<span class=\"f\">1</span>,<span class=\"f\">2</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>\n" +
                "   int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">f</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"140\">Iterable(</a>int... <a name=\""+ExportCst.PREF_REF+"156\">a</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Iterable*1.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"156\">a</a></span></span>;\n" +
                "   }\n" +
                "   public Iterator"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"200\">iterator</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Iterable*1..Iterator*1.pkg.Ext..Iterable*1..Iterator*1(int...)\" href=\"#"+ExportCst.PREF_REF+"276\">new</a> Iterator"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"(<span class=\"f\"><a title=\"pkg.Ext..Iterable*1.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"243\">{</a>\n" +
                "     int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"256\">g</a></span>;\n" +
                "     int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"268\">j</a></span>;\n" +
                "     <a name=\""+ExportCst.PREF_REF+"276\">Iterator(</a>int... <a name=\""+ExportCst.PREF_REF+"292\">a</a>){\n" +
                "      <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Iterable*1..Iterator*1.g\" href=\"#"+ExportCst.PREF_REF+"256\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"292\">a</a></span></span>;\n" +
                "     }\n" +
                "     public boolean <a name=\""+ExportCst.PREF_REF+"336\">hasNext</a>(){\n" +
                "      return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Iterable*1..Iterator*1.j\" href=\"#"+ExportCst.PREF_REF+"268\">j</a> </span>"+MessagesCdmBase.LT+"<span class=\"f\"><span class=\"f\"> <a title=\"pkg.Ext..Iterable*1..Iterator*1.g\" href=\"#"+ExportCst.PREF_REF+"256\">g</a></span>.<span class=\"f\"><b>length</b></span></span></span>;\n" +
                "     }\n" +
                "     public int <a name=\""+ExportCst.PREF_REF+"397\">next</a>(){\n" +
                "      return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Iterable*1..Iterator*1.g\" href=\"#"+ExportCst.PREF_REF+"256\">g</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Iterable*1..Iterator*1.j\" href=\"#"+ExportCst.PREF_REF+"268\">j</a></span>++</span>]</span></span>;\n" +
                "     }\n" +
                "    }</span></span>;\n" +
                "   }\n" +
                "  }</span></span>) {\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"98\">i</a></span>+<span class=\"f\"><span class=\"s\">\",\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage418Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field=1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  for (int i, int y: new IterableTable<int,int>(new int[]{1,2},new int[]{3,4}){\n");
        xml_.append("   int[] e;\n");
        xml_.append("   int[] f;\n");
        xml_.append("   IterableTable(int[] b,int[] a){\n");
        xml_.append("    e = b;\n");
        xml_.append("    f = a;\n");
        xml_.append("   }\n");
        xml_.append("   public IteratorTable<int,int> iteratorTable(){\n");
        xml_.append("    return new IteratorTable<int,int>(e,f){\n");
        xml_.append("     int[] g;\n");
        xml_.append("     int[] h;\n");
        xml_.append("     int j;\n");
        xml_.append("     IteratorTable(int[] b,int[] a){\n");
        xml_.append("      g = b;\n");
        xml_.append("      h = a;\n");
        xml_.append("     }\n");
        xml_.append("     public boolean hasNextPair(){\n");
        xml_.append("      return j < g.length;\n");
        xml_.append("     }\n");
        xml_.append("     public Pair<int,int> nextPair(){\n");
        xml_.append("      return new Pair<int,int>(g,h,j++){\n");
        xml_.append("       int[] k;\n");
        xml_.append("       int[] l;\n");
        xml_.append("       int m;\n");
        xml_.append("       Pair(int[] b,int[] a, int z){\n");
        xml_.append("        k = b;\n");
        xml_.append("        l = a;\n");
        xml_.append("        m = z;\n");
        xml_.append("       }\n");
        xml_.append("       public int getFirst(){\n");
        xml_.append("        return k[m];\n");
        xml_.append("       }\n");
        xml_.append("       public int getSecond(){\n");
        xml_.append("        return l[m];\n");
        xml_.append("       }\n");
        xml_.append("      };\n");
        xml_.append("     }\n");
        xml_.append("    };\n");
        xml_.append("   }\n");
        xml_.append("  }) {\n");
        xml_.append("   res+=y+\",\"+i+\";\";\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>=<span class=\"n\">1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"38\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"63\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"77\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"98\">i</a>, int <a name=\""+ExportCst.PREF_REF+"105\">y</a></span>: <span class=\"f\"><a title=\"pkg.Ext..IterableTable*1.pkg.Ext..IterableTable*1([int,[int)\" href=\"#"+ExportCst.PREF_REF+"194\">new</a> IterableTable"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+"(<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span>,<span class=\"f\">new int[]{<span class=\"f\">3</span>,<span class=\"f\">4</span>}</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"165\">{</a>\n" +
                "   int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"176\">e</a></span>;\n" +
                "   int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"188\">f</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"194\">IterableTable(</a>int[] <a name=\""+ExportCst.PREF_REF+"214\">b</a>,int[] <a name=\""+ExportCst.PREF_REF+"222\">a</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1.e\" href=\"#"+ExportCst.PREF_REF+"176\">e</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"214\">b</a></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1.f\" href=\"#"+ExportCst.PREF_REF+"188\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"222\">a</a></span></span>;\n" +
                "   }\n" +
                "   public IteratorTable"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"286\">iteratorTable</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.pkg.Ext..IterableTable*1..IteratorTable*1([int,[int)\" href=\"#"+ExportCst.PREF_REF+"392\">new</a> IteratorTable"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+"(<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1.e\" href=\"#"+ExportCst.PREF_REF+"176\">e</a></span>,<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1.f\" href=\"#"+ExportCst.PREF_REF+"188\">f</a></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"345\">{</a>\n" +
                "     int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"358\">g</a></span>;\n" +
                "     int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"372\">h</a></span>;\n" +
                "     int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"384\">j</a></span>;\n" +
                "     <a name=\""+ExportCst.PREF_REF+"392\">IteratorTable(</a>int[] <a name=\""+ExportCst.PREF_REF+"412\">b</a>,int[] <a name=\""+ExportCst.PREF_REF+"420\">a</a>){\n" +
                "      <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.g\" href=\"#"+ExportCst.PREF_REF+"358\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"412\">b</a></span></span>;\n" +
                "      <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.h\" href=\"#"+ExportCst.PREF_REF+"372\">h</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"420\">a</a></span></span>;\n" +
                "     }\n" +
                "     public boolean <a name=\""+ExportCst.PREF_REF+"477\">hasNextPair</a>(){\n" +
                "      return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.j\" href=\"#"+ExportCst.PREF_REF+"384\">j</a> </span>"+MessagesCdmBase.LT+"<span class=\"f\"><span class=\"f\"> <a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.g\" href=\"#"+ExportCst.PREF_REF+"358\">g</a></span>.<span class=\"f\"><b>length</b></span></span></span>;\n" +
                "     }\n" +
                "     public Pair"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"552\">nextPair</a>(){\n" +
                "      return <span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1([int,[int,int)\" href=\"#"+ExportCst.PREF_REF+"658\">new</a> Pair"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+"(<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.g\" href=\"#"+ExportCst.PREF_REF+"358\">g</a></span>,<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.h\" href=\"#"+ExportCst.PREF_REF+"372\">h</a></span>,<span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1.j\" href=\"#"+ExportCst.PREF_REF+"384\">j</a></span>++</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"603\">{</a>\n" +
                "       int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"618\">k</a></span>;\n" +
                "       int[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"634\">l</a></span>;\n" +
                "       int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"648\">m</a></span>;\n" +
                "       <a name=\""+ExportCst.PREF_REF+"658\">Pair(</a>int[] <a name=\""+ExportCst.PREF_REF+"669\">b</a>,int[] <a name=\""+ExportCst.PREF_REF+"677\">a</a>, int <a name=\""+ExportCst.PREF_REF+"684\">z</a>){\n" +
                "        <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.k\" href=\"#"+ExportCst.PREF_REF+"618\">k</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"669\">b</a></span></span>;\n" +
                "        <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.l\" href=\"#"+ExportCst.PREF_REF+"634\">l</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"677\">a</a></span></span>;\n" +
                "        <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.m\" href=\"#"+ExportCst.PREF_REF+"648\">m</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"684\">z</a></span></span>;\n" +
                "       }\n" +
                "       public int <a name=\""+ExportCst.PREF_REF+"760\">getFirst</a>(){\n" +
                "        return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.k\" href=\"#"+ExportCst.PREF_REF+"618\">k</a></span><span class=\"f\">[<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.m\" href=\"#"+ExportCst.PREF_REF+"648\">m</a></span>]</span></span>;\n" +
                "       }\n" +
                "       public int <a name=\""+ExportCst.PREF_REF+"820\">getSecond</a>(){\n" +
                "        return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.l\" href=\"#"+ExportCst.PREF_REF+"634\">l</a></span><span class=\"f\">[<span class=\"f\"><a title=\"pkg.Ext..IterableTable*1..IteratorTable*1..Pair*1.m\" href=\"#"+ExportCst.PREF_REF+"648\">m</a></span>]</span></span>;\n" +
                "       }\n" +
                "      }</span></span>;\n" +
                "     }\n" +
                "    }</span></span>;\n" +
                "   }\n" +
                "  }</span></span>) {\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>+=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">y</a></span>+<span class=\"f\"><span class=\"s\">\",\"</span></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"98\">i</a></span></span>+<span class=\"f\"><span class=\"s\">\";\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage419Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" String field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  Int[] a = {new Int(1){\n");
        xml_.append("   public String field;\n");
        xml_.append("   Int(int p){\n");
        xml_.append("    field=\"one\\\"escape\"+p;\n");
        xml_.append("   }\n");
        xml_.append("   public String field(){\n");
        xml_.append("    return field+\"endone\";\n");
        xml_.append("   }\n");
        xml_.append("  },new Int(2,3){\n");
        xml_.append("   public String field;\n");
        xml_.append("   Int(int p, int q){\n");
        xml_.append("    field=\"two\\\"escape\"+p+';'+q;\n");
        xml_.append("   }\n");
        xml_.append("   public String field(){\n");
        xml_.append("    return field+\"endtwo\";\n");
        xml_.append("   }\n");
        xml_.append("  }};\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  while (i < 2){\n");
        xml_.append("   res+=a[i].field()+',';\n");
        xml_.append("   i++;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " String <a name=\""+ExportCst.PREF_REF+"28\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"45\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"70\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"83\">a</a> </span>=<span class=\"f\"> {<span class=\"f\"><a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"127\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>(<span class=\"f\">1</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"98\">{</a>\n" +
                "   public String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"117\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"127\">Int(</a>int <a name=\""+ExportCst.PREF_REF+"135\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"117\">field</a></span>=<span class=\"f\"><span class=\"f\"><span class=\"s\">\"one\\\"escape\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"135\">p</a></span></span></span>;\n" +
                "   }\n" +
                "   public String <a name=\""+ExportCst.PREF_REF+"188\">field</a>(){\n" +
                "    return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"117\">field</a></span>+<span class=\"f\"><span class=\"s\">\"endone\"</span></span></span>;\n" +
                "   }\n" +
                "  }</span></span>,<span class=\"f\"><a title=\"pkg.Ext..Int*2.pkg.Ext..Int*2(int,int)\" href=\"#"+ExportCst.PREF_REF+"274\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>(<span class=\"f\">2</span>,<span class=\"f\">3</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"245\">{</a>\n" +
                "   public String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"264\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"274\">Int(</a>int <a name=\""+ExportCst.PREF_REF+"282\">p</a>, int <a name=\""+ExportCst.PREF_REF+"289\">q</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*2.field\" href=\"#"+ExportCst.PREF_REF+"264\">field</a></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"s\">\"two\\\"escape\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"282\">p</a></span></span>+<span class=\"f\"><span class=\"s\">';'</span></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"289\">q</a></span></span></span>;\n" +
                "   }\n" +
                "   public String <a name=\""+ExportCst.PREF_REF+"348\">field</a>(){\n" +
                "    return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*2.field\" href=\"#"+ExportCst.PREF_REF+"264\">field</a></span>+<span class=\"f\"><span class=\"s\">\"endtwo\"</span></span></span>;\n" +
                "   }\n" +
                "  }</span></span>}</span></span>;\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"404\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"420\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">while</span> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"420\">i</a> </span>"+MessagesCdmBase.LT+"<span class=\"f\"> 2</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"404\">res</a></span>+=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">a</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"420\">i</a></span>]</span></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"28\">field</a>()</span></span>+<span class=\"f\"><span class=\"s\">','</span></span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"420\">i</a></span>++</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"404\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage420Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int CST = 1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  switch(1){\n");
        xml_.append("   case new Int(){}.CST;\n");
        xml_.append("    res += 1;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">CST</a> </span>=<span class=\"g\"> 1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"51\">pkg.Ext</a> {\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"76\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"90\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">1</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"130\">{</a>}</span>.<a title=\"pkg.Int.CST\" href=\"#"+ExportCst.PREF_REF+"34\">CST</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">res</a> </span>+=<span class=\"f\"> 1</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage421Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static final int CST = 1;\n");
        xml_.append(" static String m(){\n");
        xml_.append("  String res = \"\";\n");
        xml_.append("  switch(2){\n");
        xml_.append("   case CST+CST;\n");
        xml_.append("    res += 1;\n");
        xml_.append("  }\n");
        xml_.append("  return res;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">CST</a> </span>=<span class=\"g\"> 1</span></span>;\n" +
                " static String <a name=\""+ExportCst.PREF_REF+"58\">m</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"72\">res</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">2</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.Ext.CST\" href=\"#"+ExportCst.PREF_REF+"34\">CST</a>+<a title=\"pkg.Ext.CST\" href=\"#"+ExportCst.PREF_REF+"34\">CST</a>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">res</a> </span>+=<span class=\"f\"> 1</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"72\">res</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage422Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field = 1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Int2 {\n");
        xml_.append(" Int f;\n");
        xml_.append(" Int2(Int i) {\n");
        xml_.append("  f = i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return new Int2(new Int(){}){\n");
        xml_.append("   Int2(Int p){super(p);}\n");
        xml_.append("  }.f.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"40\">pkg.Int2</a> {\n" +
                " <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"56\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"60\">Int2(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"69\">i</a>) {\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Int2.f\" href=\"#"+ExportCst.PREF_REF+"56\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"69\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"94\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"116\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int2*1.pkg.Ext..Int2*1(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"156\">new</a> <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"40\">Int2</a>(<span class=\"f\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"148\">{</a>}</span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"151\">{</a>\n" +
                "   <a name=\""+ExportCst.PREF_REF+"156\">Int2(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"165\">p</a>){<span class=\"f\"><a title=\"pkg.Int2.pkg.Int2(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"60\">super</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"165\">p</a></span>)</span>;}\n" +
                "  }</span></span>.<span class=\"f\"><a title=\"pkg.Int2.f\" href=\"#"+ExportCst.PREF_REF+"56\">f</a></span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage423Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return (int a:int)->{return 2 * a;}.call(3);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"47\">a</a>:int)<a name=\""+ExportCst.PREF_REF+"53\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"47\">a</a></span></span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">3</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage424Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((int a:int)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"92\">m</a>(<span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"49\">a</a>:int)<a name=\""+ExportCst.PREF_REF+"55\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"49\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"92\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"107\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"115\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"115\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage425Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext<T> {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext<int>).m();\n");
        xml_.append(" }\n");
        xml_.append(" staticCall T m(){\n");
        xml_.append("  return staticCall(ExtOther<T>).m((T a:T)->{return (T)(2 * (int)a);},(T)3);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.ExtOther<S> {\n");
        xml_.append(" staticCall S m(Fct<S,S> fct,S a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"14\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"31\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m()\" href=\"#"+ExportCst.PREF_REF+"88\">m</a>()</span></span>;\n" +
                " }\n" +
                " staticCall <a href=\"#"+ExportCst.PREF_REF+"14\">T</a> <a name=\""+ExportCst.PREF_REF+"88\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExtOther\" href=\"#"+ExportCst.PREF_REF+"181\">ExtOther</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.ExtOther.staticCall m($core.Fct"+MessagesCdmBase.LT+"#S,#S"+MessagesCdmBase.GT+",#S)\" href=\"#"+ExportCst.PREF_REF+"213\">m</a>(<span class=\"f\"><span class=\"t\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a> <a name=\""+ExportCst.PREF_REF+"131\">a</a>:<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>)<a name=\""+ExportCst.PREF_REF+"135\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> (int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"131\">a</a></span></span></span>)</span></span>;}</span></span>,<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>)<span class=\"f\">3</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"181\">pkg.ExtOther</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"194\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " staticCall <a href=\"#"+ExportCst.PREF_REF+"194\">S</a> <a name=\""+ExportCst.PREF_REF+"213\">m</a>(Fct"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"194\">S</a>,<a href=\"#"+ExportCst.PREF_REF+"194\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"224\">fct</a>,<a href=\"#"+ExportCst.PREF_REF+"194\">S</a> <a name=\""+ExportCst.PREF_REF+"230\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"230\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage426Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Content content = new Content();\n");
        xml_.append("  m((Content a:void)->{a.incr();},content);\n");
        xml_.append("  return content.value;\n");
        xml_.append(" }\n");
        xml_.append(" static void m(Fct<Content,void> fct,Content a){\n");
        xml_.append("  fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Content {\n");
        xml_.append(" int value = 5;\n");
        xml_.append(" void incr(){\n");
        xml_.append("  value++;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"214\">Content</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"43\">content</a> </span>=<span class=\"f\"> new <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"214\">Content</a>()</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"pkg.Content,void"+MessagesCdmBase.GT+",pkg.Content)\" href=\"#"+ExportCst.PREF_REF+"152\">m</a>(<span class=\"f\"><span class=\"t\">(<a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"214\">Content</a> <a name=\""+ExportCst.PREF_REF+"81\">a</a>:void)<a name=\""+ExportCst.PREF_REF+"88\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"81\">a</a></span>.<span class=\"f\"><a title=\"pkg.Content.incr()\" href=\"#"+ExportCst.PREF_REF+"250\">incr</a>()</span></span>;}</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"43\">content</a></span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"43\">content</a></span>.<span class=\"f\"><a title=\"pkg.Content.value\" href=\"#"+ExportCst.PREF_REF+"233\">value</a></span></span>;\n" +
                " }\n" +
                " static void <a name=\""+ExportCst.PREF_REF+"152\">m</a>(Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"214\">Content</a>,void"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"172\">fct</a>,<a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"214\">Content</a> <a name=\""+ExportCst.PREF_REF+"184\">a</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"172\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"184\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"214\">pkg.Content</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"233\">value</a> </span>=<span class=\"f\"> 5</span></span>;\n" +
                " void <a name=\""+ExportCst.PREF_REF+"250\">incr</a>(){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Content.value\" href=\"#"+ExportCst.PREF_REF+"233\">value</a></span>++</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage427Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((a:int)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"88\">m</a>(<span class=\"f\"><span class=\"t\">(<a name=\""+ExportCst.PREF_REF+"45\">a</a>:int)<a name=\""+ExportCst.PREF_REF+"51\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"45\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"88\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"103\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"111\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"111\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage428Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((a:)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"85\">m</a>(<span class=\"f\"><span class=\"t\">(<a name=\""+ExportCst.PREF_REF+"45\">a</a>:)<a name=\""+ExportCst.PREF_REF+"48\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"45\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"100\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"108\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"108\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage429Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((int a)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"88\">m</a>(<span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"49\">a</a>)<a name=\""+ExportCst.PREF_REF+"51\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"49\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"88\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"103\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"111\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"111\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage430Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((a)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"84\">m</a>(<span class=\"f\"><span class=\"t\">(<a name=\""+ExportCst.PREF_REF+"45\">a</a>)<a name=\""+ExportCst.PREF_REF+"47\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"45\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"84\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"99\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"107\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"99\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage431Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext<T> {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext<int>).m();\n");
        xml_.append(" }\n");
        xml_.append(" staticCall T m(){\n");
        xml_.append("  return staticCall(ExtOther<T>).m((T a)->{return (T)(2 * (int)a);},(T)3);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.ExtOther<S> {\n");
        xml_.append(" staticCall S m(Fct<S,S> fct,S a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"14\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"31\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m()\" href=\"#"+ExportCst.PREF_REF+"88\">m</a>()</span></span>;\n" +
                " }\n" +
                " staticCall <a href=\"#"+ExportCst.PREF_REF+"14\">T</a> <a name=\""+ExportCst.PREF_REF+"88\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExtOther\" href=\"#"+ExportCst.PREF_REF+"179\">ExtOther</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.ExtOther.staticCall m($core.Fct"+MessagesCdmBase.LT+"#S,#S"+MessagesCdmBase.GT+",#S)\" href=\"#"+ExportCst.PREF_REF+"211\">m</a>(<span class=\"f\"><span class=\"t\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a> <a name=\""+ExportCst.PREF_REF+"131\">a</a>)<a name=\""+ExportCst.PREF_REF+"133\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> (int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"131\">a</a></span></span></span>)</span></span>;}</span></span>,<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"14\">T</a>)<span class=\"f\">3</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"179\">pkg.ExtOther</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"192\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " staticCall <a href=\"#"+ExportCst.PREF_REF+"192\">S</a> <a name=\""+ExportCst.PREF_REF+"211\">m</a>(Fct"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"192\">S</a>,<a href=\"#"+ExportCst.PREF_REF+"192\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"222\">fct</a>,<a href=\"#"+ExportCst.PREF_REF+"192\">S</a> <a name=\""+ExportCst.PREF_REF+"228\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"222\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"228\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage432Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((int a:int) -> {return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"94\">m</a>(<span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"49\">a</a>:int) <a name=\""+ExportCst.PREF_REF+"56\">-"+MessagesCdmBase.GT+"</a> {return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"49\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"94\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"109\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"117\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"117\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage433Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(a->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"82\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"44\">a</a><a name=\""+ExportCst.PREF_REF+"45\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"44\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"82\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"97\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"105\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"97\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage434Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(a -> {return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"84\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"44\">a</a> <a name=\""+ExportCst.PREF_REF+"46\">-"+MessagesCdmBase.GT+"</a> {return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"44\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"84\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"99\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"107\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"99\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage435Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m((a) -> 2 * a ,3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"77\">m</a>(<span class=\"f\"><span class=\"t\">(<a name=\""+ExportCst.PREF_REF+"45\">a</a>) <a name=\""+ExportCst.PREF_REF+"48\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"45\">a</a></span></span></span> </span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"77\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"92\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"100\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"92\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage436Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(a -> 2 * a ,3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"75\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"44\">a</a> <a name=\""+ExportCst.PREF_REF+"46\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"44\">a</a></span></span></span> </span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"75\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"90\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"98\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"98\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage437Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(a -> b -> a * b,2,3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"81\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"44\">a</a> <a name=\""+ExportCst.PREF_REF+"46\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"49\">b</a> <a name=\""+ExportCst.PREF_REF+"51\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"44\">a</a> </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"49\">b</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"81\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"105\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"113\">a</a>,int <a name=\""+ExportCst.PREF_REF+"119\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"113\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"119\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage438Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"145\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"167\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage439Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" ONE;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"89\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"122\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"133\">ONE</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"150\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage440Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" ONE{};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"89\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"122\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"133\">ONE</a></span>{};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"152\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage441Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" ONE{};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"106\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"91\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " int <a name=\""+ExportCst.PREF_REF+"106\">field</a>();\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"122\">pkg.Ext</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"133\">ONE</a></span>{};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"152\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage442Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" @Annot\n");
        xml_.append(" int field()new Int(){}.FIELD;\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" ONE{};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a></span>\n" +
                " int <a name=\""+ExportCst.PREF_REF+"81\">field</a>()<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"97\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span>;\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"114\">pkg.Ext</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"125\">ONE</a></span>{};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"144\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage443Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" int field()new Int(){}.FIELD;\n");
        xml_.append("}\n");
        xml_.append("enum pkg.Ext {\n");
        xml_.append(" ONE{};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"106\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"91\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " int <a name=\""+ExportCst.PREF_REF+"106\">field</a>()<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"122\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span>;\n" +
                "}\n" +
                "enum <a name=\""+ExportCst.PREF_REF+"139\">pkg.Ext</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"150\">ONE</a></span>{};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"169\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage444Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=Int.FIELD)\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\"><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"148\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"170\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"192\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage445Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" @Annot(field=Int.FIELD)\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\"><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"170\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"192\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage446Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"156\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"178\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"200\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage447Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" Ext(){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">Ext(</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"155\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage448Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" Ext(@Annot(field=new Int(){}.FIELD) int p){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">Ext(</a><span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"160\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"174\">p</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"192\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage449Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" Ext(@Annot(field=new Int(){}.FIELD)@Annot(field=new Int(){}.FIELD) int p){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">Ext(</a><span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"160\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span><span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"191\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"205\">p</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"223\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage450Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" Ext(@Annot(field=new Int(){}.FIELD) int p, @Annot(field=new Int(){}.FIELD) int q){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">Ext(</a><span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"160\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"174\">p</a>, <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"199\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"213\">q</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"231\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage451Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static void l(){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static void <a name=\""+ExportCst.PREF_REF+"146\">l</a>(){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"165\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage452Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static void l(@Annot(field=new Int(){}.FIELD) int p){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static void <a name=\""+ExportCst.PREF_REF+"146\">l</a>(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"170\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"184\">p</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"202\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage453Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static void l(@Annot(field=new Int(){}.FIELD)@Annot(field=new Int(){}.FIELD) int p){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static void <a name=\""+ExportCst.PREF_REF+"146\">l</a>(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"170\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span><span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"201\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"215\">p</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"233\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage454Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" static void l(@Annot(field=new Int(){}.FIELD) int p, @Annot(field=new Int(){}.FIELD) int q){};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " static void <a name=\""+ExportCst.PREF_REF+"146\">l</a>(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"170\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"184\">p</a>, <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"209\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"223\">q</a>){};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"241\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage455Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" void this(@Annot(field=new Int(){}.FIELD) int p){};\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" int this(@Annot(field=new Int(){}.FIELD) int p){return 0;};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " void <a name=\""+ExportCst.PREF_REF+"139\">this</a>(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"166\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"180\">p</a>){};\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"209\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " int <a name=\""+ExportCst.PREF_REF+"224\">this</a>(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"251\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"265\">p</a>){return <span class=\"n\">0</span>;};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"292\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage456Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" @Annot(field=new Int(){}.FIELD)\n");
        xml_.append(" operator+ int(@Annot(field=new Int(){}.FIELD) int p){return 0;};\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"123\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"142\">+</a> int(<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"170\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"184\">p</a>){return <span class=\"n\">0</span>;};\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"211\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage457Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("@Annot(field=new Int(){}.FIELD)\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"106\">{</a>}</span></span>.<span class=\"n2\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span></span>)</span>\n" +
                "class <a name=\""+ExportCst.PREF_REF+"122\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"144\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage458Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("@Annot(field=(:int)->{return Int.FIELD;}.call())\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\"><span class=\"t\">(:int)<a name=\""+ExportCst.PREF_REF+"103\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"n\"><span class=\"n\"><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a></span>.<span class=\"n\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span>;}</span></span>.<span class=\"n2\"><b>call</b>()</span></span></span>)</span>\n" +
                "class <a name=\""+ExportCst.PREF_REF+"139\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"161\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage459Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" static final int FIELD=1;\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append("@Annot(field=(:int)->{return Int.FIELD;}.call())\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FIELD</a></span>=<span class=\"g\">1</span></span>;\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"56\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"90\">pkg.Ext</a> {\n" +
                "<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"56\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.field()\" href=\"#"+ExportCst.PREF_REF+"73\">field</a>=<span class=\"n2\"><span class=\"n2\"><span class=\"t\">(:int)<a name=\""+ExportCst.PREF_REF+"119\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"n\"><span class=\"n\"><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a></span>.<span class=\"n\"><a title=\"pkg.Int.FIELD\" href=\"#"+ExportCst.PREF_REF+"34\">FIELD</a></span></span>;}</span></span>.<span class=\"n2\"><b>call</b>()</span></span></span>)</span>\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"161\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage460Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext).m();\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(){\n");
        xml_.append("  return m(a -> a -> a * #a,2,3);\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>)</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m()\" href=\"#"+ExportCst.PREF_REF+"82\">m</a>()</span></span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"82\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.staticCall m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"140\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"98\">a</a> <a name=\""+ExportCst.PREF_REF+"100\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"103\">a</a> <a name=\""+ExportCst.PREF_REF+"105\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">a</a> </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"98\">#a</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"140\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"164\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"172\">a</a>,int <a name=\""+ExportCst.PREF_REF+"178\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"172\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage461Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  int sum2 = 3;\n");
        xml_.append("  for (int i = 1; i <= 9; i+= 2){\n");
        xml_.append("   sum += m(a -> i -> sum2 + i + a + ([i]) + #i,2,7);\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"39\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"54\">sum2</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">i</a> </span>=<span class=\"f\"> 1</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a> </span>"+MessagesCdmBase.LT+"=<span class=\"f\"> 9</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">i</a></span>+=<span class=\"f\"> 2</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum</a> </span>+=<span class=\"f\"> <a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"185\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"110\">a</a> <a name=\""+ExportCst.PREF_REF+"112\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"115\">i</a> <a name=\""+ExportCst.PREF_REF+"117\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"54\">sum2</a> </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"115\">i</a> </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"110\">a</a> </span></span>+<span class=\"f\"> ([<a href=\"#"+ExportCst.PREF_REF+"75\">i</a>]) </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"75\">#i</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">7</span>)</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum</a></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"185\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"209\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"217\">a</a>,int <a name=\""+ExportCst.PREF_REF+"223\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"209\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"217\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"223\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage462Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext).m();\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(){\n");
        xml_.append("  int a = 3;\n");
        xml_.append("  return m(a -> a * #a,2);\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>)</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m()\" href=\"#"+ExportCst.PREF_REF+"82\">m</a>()</span></span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"82\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">a</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.staticCall m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"146\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"111\">a</a> <a name=\""+ExportCst.PREF_REF+"113\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"111\">a</a> </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">#a</a></span></span></span></span>,<span class=\"f\">2</span>)</span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"146\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"161\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"169\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"161\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"169\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage463Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum3 = 0;\n");
        xml_.append("  for (int i = 2; i <= 10; i+= 2){\n");
        xml_.append("  sum3+=(:int) -> {int sum = 0;\n");
        xml_.append("  int sum2 = 3;\n");
        xml_.append("  for (int i = 1; i <= 9; i+= 2){\n");
        xml_.append("   sum += m(i -> i -> sum2 + #i + i + ([#i]) + ##i,2,7);\n");
        xml_.append("  }\n");
        xml_.append("  return sum;}.call();\n");
        xml_.append("  }\n");
        xml_.append("  return sum3;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"39\">sum3</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">i</a> </span>=<span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">i</a> </span>"+MessagesCdmBase.LT+"=<span class=\"f\"> 10</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">i</a></span>+=<span class=\"f\"> 2</span></span>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum3</a></span>+=<span class=\"f\"><span class=\"f\"><span class=\"t\">(:int) <a name=\""+ExportCst.PREF_REF+"99\">-"+MessagesCdmBase.GT+"</a> {int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">sum2</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"143\">i</a> </span>=<span class=\"f\"> 1</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"143\">i</a> </span>"+MessagesCdmBase.LT+"=<span class=\"f\"> 9</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"143\">i</a></span>+=<span class=\"f\"> 2</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">sum</a> </span>+=<span class=\"f\"> <a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"284\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"178\">i</a> <a name=\""+ExportCst.PREF_REF+"180\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"183\">i</a> <a name=\""+ExportCst.PREF_REF+"185\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">sum2</a> </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"178\">#i</a> </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"183\">i</a> </span></span>+<span class=\"f\"> ([<a href=\"#"+ExportCst.PREF_REF+"60\">#i</a>]) </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"143\">##i</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">7</span>)</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">sum</a></span>;}</span></span>.<span class=\"f\"><b>call</b>()</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum3</a></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"284\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"308\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"316\">a</a>,int <a name=\""+ExportCst.PREF_REF+"322\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"308\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"316\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"322\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage464Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext).m();\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(){\n");
        xml_.append("  int a = 4;\n");
        xml_.append("  return m(a -> a -> a * #a * ##a,2,3);\n");
        xml_.append(" }\n");
        xml_.append(" staticCall int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>)</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m()\" href=\"#"+ExportCst.PREF_REF+"82\">m</a>()</span></span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"82\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">a</a> </span>=<span class=\"f\"> 4</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.staticCall m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"159\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"111\">a</a> <a name=\""+ExportCst.PREF_REF+"113\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"116\">a</a> <a name=\""+ExportCst.PREF_REF+"118\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"116\">a</a> </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"111\">#a</a> </span></span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">##a</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " staticCall int <a name=\""+ExportCst.PREF_REF+"159\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"183\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"191\">a</a>,int <a name=\""+ExportCst.PREF_REF+"197\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"183\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"191\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"197\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage465Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int sum3 = 0;\n");
        xml_.append("  for (int i = 2; i <= 10; i+= 2){\n");
        xml_.append("  sum3+=(:int) -> {int sum = 0;\n");
        xml_.append("  int sum2 = 3;\n");
        xml_.append("  for (int i = 1; i <= 9; i+= 2){\n");
        xml_.append("   sum += ([#i])+m(i -> i -> sum2 + #i + i + ([#i]) + ##i,2,7);\n");
        xml_.append("  }\n");
        xml_.append("  return sum;}.call();\n");
        xml_.append("  }\n");
        xml_.append("  return sum3;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,Fct<int,int>> fct,int a,int b){\n");
        xml_.append("  return fct.call(a).call(b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"39\">sum3</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">i</a> </span>=<span class=\"f\"> 2</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">i</a> </span>"+MessagesCdmBase.LT+"=<span class=\"f\"> 10</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">i</a></span>+=<span class=\"f\"> 2</span></span>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum3</a></span>+=<span class=\"f\"><span class=\"f\"><span class=\"t\">(:int) <a name=\""+ExportCst.PREF_REF+"99\">-"+MessagesCdmBase.GT+"</a> {int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"122\">sum2</a> </span>=<span class=\"f\"> 3</span></span>;\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"143\">i</a> </span>=<span class=\"f\"> 1</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"143\">i</a> </span>"+MessagesCdmBase.LT+"=<span class=\"f\"> 9</span></span>; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"143\">i</a></span>+=<span class=\"f\"> 2</span></span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> ([<a href=\"#"+ExportCst.PREF_REF+"60\">#i</a>])</span>+<span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,$core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"291\">m</a>(<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"185\">i</a> <a name=\""+ExportCst.PREF_REF+"187\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"190\">i</a> <a name=\""+ExportCst.PREF_REF+"192\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">sum2</a> </span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"185\">#i</a> </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"190\">i</a> </span></span>+<span class=\"f\"> ([<a href=\"#"+ExportCst.PREF_REF+"60\">#i</a>]) </span></span>+<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"143\">##i</a></span></span></span></span></span></span>,<span class=\"f\">2</span>,<span class=\"f\">7</span>)</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">sum</a></span>;}</span></span>.<span class=\"f\"><b>call</b>()</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">sum3</a></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"291\">m</a>(Fct"+MessagesCdmBase.LT+"int,Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"315\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"323\">a</a>,int <a name=\""+ExportCst.PREF_REF+"329\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"315\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"323\">a</a></span>)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"329\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage466Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(2,c:5,b:3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(int a,int b,int c){\n");
        xml_.append("  return a*b+c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m(int,int,int)\" href=\"#"+ExportCst.PREF_REF+"71\">m</a>(<span class=\"f\">2</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"89\">c</a>:<span class=\"f\">5</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">b</a>:<span class=\"f\">3</span></span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"71\">m</a>(int <a name=\""+ExportCst.PREF_REF+"77\">a</a>,int <a name=\""+ExportCst.PREF_REF+"83\">b</a>,int <a name=\""+ExportCst.PREF_REF+"89\">c</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">a</a></span>*<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"83\">b</a></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"89\">c</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage467Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(2, c :5, b :3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(int a,int b,int c){\n");
        xml_.append("  return a*b+c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m(int,int,int)\" href=\"#"+ExportCst.PREF_REF+"75\">m</a>(<span class=\"f\">2</span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">c</a> :<span class=\"f\">5</span></span>,<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"87\">b</a> :<span class=\"f\">3</span></span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"75\">m</a>(int <a name=\""+ExportCst.PREF_REF+"81\">a</a>,int <a name=\""+ExportCst.PREF_REF+"87\">b</a>,int <a name=\""+ExportCst.PREF_REF+"93\">c</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"81\">a</a></span>*<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"87\">b</a></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">c</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage468Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return ExtTwo.m(2,c:5,b:3);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("class pkg.ExtTwo {\n");
        xml_.append(" static int m(int a,int b,int c){\n");
        xml_.append("  return a*b+c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExtTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"6\">ExtTwo</a></span>.<span class=\"f\"><a title=\"pkg.ExtTwo.static m(int,int,int)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"31\">m</a>(<span class=\"f\">2</span>,<span class=\"f\"><a href=\"ExTwo.html#"+ExportCst.PREF_REF+"49\">c</a>:<span class=\"f\">5</span></span>,<span class=\"f\"><a href=\"ExTwo.html#"+ExportCst.PREF_REF+"43\">b</a>:<span class=\"f\">3</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.ExtTwo</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"31\">m</a>(int <a name=\""+ExportCst.PREF_REF+"37\">a</a>,int <a name=\""+ExportCst.PREF_REF+"43\">b</a>,int <a name=\""+ExportCst.PREF_REF+"49\">c</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"37\">a</a></span>*<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"43\">b</a></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"49\">c</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }
    @Test
    public void coverage469Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int field;\n");
        xml_.append(" Ext(int a,int b,int c,int d){\n");
        xml_.append("  field = a*b+c-d;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext(d:10,b:13,c:4,a:7){\n");
        xml_.append("   Ext(int a,int b,int c,int d){\n");
        xml_.append("    super(a,b,c,d);\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return e.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"29\">Ext(</a>int <a name=\""+ExportCst.PREF_REF+"37\">a</a>,int <a name=\""+ExportCst.PREF_REF+"43\">b</a>,int <a name=\""+ExportCst.PREF_REF+"49\">c</a>,int <a name=\""+ExportCst.PREF_REF+"55\">d</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"37\">a</a></span>*<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"43\">b</a></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"49\">c</a></span></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"55\">d</a></span></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"93\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"104\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext..Ext*1.pkg.Ext..Ext*1(int,int,int,int)\" href=\"#"+ExportCst.PREF_REF+"139\">new</a> <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"165\">d</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"153\">b</a>:<span class=\"f\">13</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">c</a>:<span class=\"f\">4</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"147\">a</a>:<span class=\"f\">7</span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"134\">{</a>\n" +
                "   <a name=\""+ExportCst.PREF_REF+"139\">Ext(</a>int <a name=\""+ExportCst.PREF_REF+"147\">a</a>,int <a name=\""+ExportCst.PREF_REF+"153\">b</a>,int <a name=\""+ExportCst.PREF_REF+"159\">c</a>,int <a name=\""+ExportCst.PREF_REF+"165\">d</a>){\n" +
                "    <span class=\"f\"><a title=\"pkg.Ext.pkg.Ext(int,int,int,int)\" href=\"#"+ExportCst.PREF_REF+"29\">super</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"147\">a</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"153\">b</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">c</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"165\">d</a></span>)</span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"104\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage470Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static long m(){\n");
        xml_.append("  Generator g = (Generator)(Fct<long,long>)l -> l * 2;\n");
        xml_.append("  return g.get(a:10);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static long <a name=\""+ExportCst.PREF_REF+"29\">m</a>(){\n" +
                "  Generator <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"46\">g</a> </span>=<span class=\"f\"> (Generator)<span class=\"f\">(Fct"+MessagesCdmBase.LT+"long,long"+MessagesCdmBase.GT+")<span class=\"f\"><span class=\"t\"><a name=\""+ExportCst.PREF_REF+"77\">l</a> <a name=\""+ExportCst.PREF_REF+"79\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"77\">l</a> </span>*<span class=\"f\"> 2</span></span></span></span></span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"46\">g</a></span>.<span class=\"f\">get(<span class=\"f\">a:<span class=\"f\">10</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage471Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  return e[i:0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"n\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage472Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e[i:0]=15;\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">]</a></span></span>=<span class=\"f\">15</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage473Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e[i:0]++;\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a><a href=\"#"+ExportCst.PREF_REF+"91\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">]</a></span></span>+<a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">+</a></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage474Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e[i:0]+=15;\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a><a href=\"#"+ExportCst.PREF_REF+"91\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">]</a></span></span>+<a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">=</a><span class=\"f\">15</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage475Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e[i :0]++;\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a> <a href=\"#"+ExportCst.PREF_REF+"91\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">]</a></span></span>+<a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">+</a></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage476Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" int[] field={0,1};\n");
        xml_.append(" int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Ext e = new Ext();\n");
        xml_.append("  e[i :0]+=15;\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"23\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " int <a name=\""+ExportCst.PREF_REF+"41\">this</a>(int <a name=\""+ExportCst.PREF_REF+"50\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " void <a name=\""+ExportCst.PREF_REF+"82\">this</a>(int <a name=\""+ExportCst.PREF_REF+"91\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"23\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"128\">m</a>(){\n" +
                "  <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">e</a></span><span class=\"f\"><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"50\">i</a> <a href=\"#"+ExportCst.PREF_REF+"91\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ext.[](int)\" href=\"#"+ExportCst.PREF_REF+"41\">]</a></span></span>+<a title=\"pkg.Ext.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"82\">=</a><span class=\"f\">15</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage477Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int c = 5;\n");
        xml_.append("  return m(2,c:c,b:3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(int a,int b,int c){\n");
        xml_.append("  return a*b+c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"39\">c</a> </span>=<span class=\"f\"> 5</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m(int,int,int)\" href=\"#"+ExportCst.PREF_REF+"84\">m</a>(<span class=\"f\">2</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">c</a>:<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">c</a></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"96\">b</a>:<span class=\"f\">3</span></span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"84\">m</a>(int <a name=\""+ExportCst.PREF_REF+"90\">a</a>,int <a name=\""+ExportCst.PREF_REF+"96\">b</a>,int <a name=\""+ExportCst.PREF_REF+"102\">c</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">a</a></span>*<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"96\">b</a></span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">c</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage478Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" $public $static $int field;\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredFields()[0].getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"51\">pkg.Ex</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " $public $static $int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"92\">field</a></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"121\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"149\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"51\">Ex</a>)</span>.<span class=\"f\">getDeclaredFields()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"149\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"149\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"149\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage479Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" $int field()1;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(MyAnnot).getDeclaredMethods()[0].getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"50\">field</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"77\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"108\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"136\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage480Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int field()1;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">field</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"67\">pkg.Ex</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"108\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"136\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"67\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"136\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage481Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $void catching(@MyAnnotOne@MyAnnotTwo $int a,@MyAnnotThree@MyAnnotFour $int b){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[][] arr = $class(Ex).getDeclaredMethods()[0].getAnnotationsParameters();\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[0].length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[1].length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0][0]) != $class(MyAnnotOne)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0][1]) != $class(MyAnnotTwo)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1][0]) != $class(MyAnnotThree)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1][1]) != $class(MyAnnotFour)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " $public $static $void <a name=\""+ExportCst.PREF_REF+"206\">catching</a>(<span class=\"f2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span><span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"243\">a</a>,<span class=\"f2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span><span class=\"f2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span> $int <a name=\""+ExportCst.PREF_REF+"276\">b</a>){\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"305\">catching</a>(){\n" +
                "  $Annotation[][] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"335\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage482Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $void catching(@MyAnnotOne@MyAnnotTwo $int a,@MyAnnotThree@MyAnnotFour $int b){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[][] arr = $class(Ex).getDeclaredMethods()[0].getAnnotationsParameters($class(MyAnnotOne));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[0].length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[1].length != 0i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0][0]) != $class(MyAnnotOne)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " $public $static $void <a name=\""+ExportCst.PREF_REF+"206\">catching</a>(<span class=\"f2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"243\">a</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span> $int <a name=\""+ExportCst.PREF_REF+"276\">b</a>){\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"305\">catching</a>(){\n" +
                "  $Annotation[][] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"335\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters(<span class=\"f\">$class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 0i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage483Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $void catching(@MyAnnotOne@MyAnnotTwo $int a,@MyAnnotThree@MyAnnotFour $int b){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[][] arr = $class(Ex).getDeclaredMethods()[0].getAnnotationsParameters($class(MyAnnotTwo));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[0].length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[1].length != 0i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0][0]) != $class(MyAnnotTwo)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " $public $static $void <a name=\""+ExportCst.PREF_REF+"206\">catching</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span><span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"243\">a</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span> $int <a name=\""+ExportCst.PREF_REF+"276\">b</a>){\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"305\">catching</a>(){\n" +
                "  $Annotation[][] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"335\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters(<span class=\"f\">$class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 0i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage484Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $void catching(@MyAnnotOne@MyAnnotTwo $int a,@MyAnnotThree@MyAnnotFour $int b){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[][] arr = $class(Ex).getDeclaredMethods()[0].getAnnotationsParameters($class(MyAnnotThree));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[0].length != 0){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[1].length != 1){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1][0]) != $class(MyAnnotThree)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " $public $static $void <a name=\""+ExportCst.PREF_REF+"206\">catching</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"243\">a</a>,<span class=\"f2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span> $int <a name=\""+ExportCst.PREF_REF+"276\">b</a>){\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"305\">catching</a>(){\n" +
                "  $Annotation[][] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"335\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters(<span class=\"f\">$class(<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 0</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage485Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $void catching(@MyAnnotOne@MyAnnotTwo $int a,@MyAnnotThree@MyAnnotFour $int b){\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[][] arr = $class(Ex).getDeclaredMethods()[0].getAnnotationsParameters($class(MyAnnotFour));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[0].length != 0){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if (arr[1].length != 1){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1][0]) != $class(MyAnnotFour)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " $public $static $void <a name=\""+ExportCst.PREF_REF+"206\">catching</a>(<span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span> $int <a name=\""+ExportCst.PREF_REF+"243\">a</a>,<span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span><span class=\"f2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span> $int <a name=\""+ExportCst.PREF_REF+"276\">b</a>){\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"305\">catching</a>(){\n" +
                "  $Annotation[][] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"335\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters(<span class=\"f\">$class(<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 0</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"335\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage486Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotThree\n");
        xml_.append(" @MyAnnotFour\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotOne));\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotOne)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"260\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage487Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotThree\n");
        xml_.append(" @MyAnnotFour\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotTwo));\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotTwo)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"260\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage488Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotThree\n");
        xml_.append(" @MyAnnotFour\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotThree));\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotThree)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"260\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage489Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotThree {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotFour {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotThree\n");
        xml_.append(" @MyAnnotFour\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotFour));\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotFour)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"98\">pkg.MyAnnotThree</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.MyAnnotFour</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"174\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotThree\" href=\"#"+ExportCst.PREF_REF+"98\">MyAnnotThree</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"260\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"288\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"174\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"288\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">MyAnnotFour</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage490Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotOne));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotOne)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class(MyAnnotOne)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"93\">pkg.Ex</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"176\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"204\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"93\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage491Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnotOne {\n");
        xml_.append("}\n");
        xml_.append("$public $annotation pkg.MyAnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" @MyAnnotOne\n");
        xml_.append(" @MyAnnotTwo\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredMethods()[0].getAnnotations($class(MyAnnotTwo));\n");
        xml_.append("  $if (arr.length != 2i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0]) != $class(MyAnnotTwo)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[1]) != $class(MyAnnotTwo)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnotOne</a> {\n" +
                "}\n" +
                "$public $annotation <a name=\""+ExportCst.PREF_REF+"59\">pkg.MyAnnotTwo</a> {\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"93\">pkg.Ex</a> {\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " <span class=\"n2\">@<a title=\"pkg.MyAnnotOne\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnotOne</a></span>\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a></span>\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"176\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"204\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"93\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations(<span class=\"f\">$class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span>)</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 2i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"204\">arr</a></span><span class=\"f\">[<span class=\"f\">1</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"59\">MyAnnotTwo</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage492Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  for (int i = 0; true ; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public String $toString() {\n");
        xml_.append("  return null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"f\">for</span> (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">i</a> </span>=<span class=\"f\"> 0</span></span>; <span class=\"f\">true</span> ; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"131\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span><i>+</i><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"248\">ExTwo</a>() </span><i>+</i><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"144\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"f\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"248\">pkg.ExTwo</a> {\n" +
                " public String <a name=\""+ExportCst.PREF_REF+"275\">$toString</a>() {\n" +
                "  return <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage493Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  for (int i = 0; ; i++){\n");
        xml_.append("   if (!(i % 2 == 0)){\n");
        xml_.append("    break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  var toStr = \"\";\n");
        xml_.append("  toStr = toStr + new ExTwo();\n");
        xml_.append("  toStr = new ExTwo() + toStr;\n");
        xml_.append("  return 6;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public String $toString() {\n");
        xml_.append("  return null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  for (int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">i</a> </span>=<span class=\"f\"> 0</span></span>; ; <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a></span>++</span>){\n" +
                "   <span class=\"f\">if</span> (<span class=\"f\">!<span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">i</a> </span>%<span class=\"f\"> 2 </span></span>==<span class=\"f\"> 0</span></span>)</span></span>){\n" +
                "    break;\n" +
                "   }\n" +
                "  }\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"126\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">toStr</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"139\">toStr</a> </span><i>+</i><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"243\">ExTwo</a>()</span></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"139\">toStr</a> </span>=<span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"243\">ExTwo</a>() </span><i>+</i><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"139\">toStr</a></span></span></span>;\n" +
                "  return <span class=\"f\">6</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"243\">pkg.ExTwo</a> {\n" +
                " public String <a name=\""+ExportCst.PREF_REF+"270\">$toString</a>() {\n" +
                "  return <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage494Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static StringBuilder exmeth(){\n");
        xml_.append("  $return $lambda(StringBuilder,$new,$id).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static StringBuilder <a name=\""+ExportCst.PREF_REF+"55\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">$lambda(StringBuilder,$new,$id)</span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage495Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static String exmeth(){\n");
        xml_.append("  $return $static().$lambda(ExField,,field).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExField {\n");
        xml_.append(" $public $static String field = \"\";\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$static()</span>.<span class=\"f\"><a title=\"pkg.ExField.field\" href=\"#"+ExportCst.PREF_REF+"168\">$lambda</a>(<a title=\"pkg.ExField\" href=\"#"+ExportCst.PREF_REF+"130\">ExField</a>,,field)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.ExField</a> {\n" +
                " $public $static String <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"168\">field</a> </span>=<span class=\"g\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage496Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static String exmeth(){\n");
        xml_.append("  $return $static().$lambda(ExField,,field,String).call(\"value\");\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExField {\n");
        xml_.append(" $public $static String field = \"\";\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$static()</span>.<span class=\"f\"><a title=\"pkg.ExField.field\" href=\"#"+ExportCst.PREF_REF+"182\">$lambda</a>(<a title=\"pkg.ExField\" href=\"#"+ExportCst.PREF_REF+"144\">ExField</a>,,field,String)</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><span class=\"s\">\"value\"</span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"144\">pkg.ExField</a> {\n" +
                " $public $static String <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"182\">field</a> </span>=<span class=\"g\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage497Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static String exmeth(){\n");
        xml_.append("  $return $static().$lambda(ExField,,field).call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.ExField {\n");
        xml_.append(" $public $static $final String field = \"\";\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static String <a name=\""+ExportCst.PREF_REF+"48\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\"><span class=\"f\">$static()</span>.<span class=\"f\"><a title=\"pkg.ExField.field\" href=\"#"+ExportCst.PREF_REF+"175\">$lambda</a>(<a title=\"pkg.ExField\" href=\"#"+ExportCst.PREF_REF+"130\">ExField</a>,,field)</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"130\">pkg.ExField</a> {\n" +
                " $public $static $final String <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"175\">field</a> </span>=<span class=\"g\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage498Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $true;\n");
        xml_.append("  b &&&= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"true\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+"<a title=\"true\">"+MessagesCdmBase.AMP+"</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage499Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $false;\n");
        xml_.append("  $var c = $true;\n");
        xml_.append("  b &&&= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">c</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"false\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage500Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $false;\n");
        xml_.append("  $var c = $false;\n");
        xml_.append("  b |||= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">c</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"false\">|</a>|<a title=\"false\">|</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"82\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage501Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $var b = $true;\n");
        xml_.append("  $var c = $false;\n");
        xml_.append("  b |||= c;\n");
        xml_.append("  $return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">exmeth</a>(){\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">b</a> </span>=<span class=\"f\"> $true</span></span>;\n" +
                "  <b title=\"$boolean\">$var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"81\">c</a> </span>=<span class=\"f\"> $false</span></span>;\n" +
                "  <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"63\">b</a> </span><a title=\"true\">|</a>||=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"81\">c</a></span></span>;\n" +
                "  $return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage502Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e&&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"314\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+"<a title=\"pkg.ExClass.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"365\">"+MessagesCdmBase.AMP+"</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"192\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"250\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"263\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"263\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"314\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"328\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"328\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"false\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"365\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"385\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"396\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"385\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">"+MessagesCdmBase.AMP+"</a><a title=\"true\">"+MessagesCdmBase.AMP+"</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"396\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"445\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"465\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"476\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"465\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"476\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"539\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"549\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"549\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"600\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"610\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"624\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"610\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage503Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e&&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"315\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+"<a title=\"pkg.ExClass.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"366\">"+MessagesCdmBase.AMP+"</a>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>)</span>?<span class=\"n\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"193\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"251\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"264\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"264\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"315\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"329\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"329\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"true\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"366\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"386\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"397\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"386\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"397\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"446\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"466\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"477\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"466\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"477\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"540\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"550\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"550\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"601\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"611\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"625\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"625\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"611\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"625\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage504Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e|||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"250\">|</a>|<a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"445\">|</a>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"192\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"250\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"263\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"263\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"314\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"328\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"328\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"365\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"385\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"396\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"385\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"396\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"445\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"465\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"476\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"465\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"476\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"539\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"549\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"549\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"600\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"610\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a> <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"624\">e</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"192\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"610\">i</a></span>?<span class=\"n\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"624\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage505Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=10;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return (e|||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"110\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\">(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"false\n" +
                "\n" +
                "pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"251\">|</a>|<a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"446\">|</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"110\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"193\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"219\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"251\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"264\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"264\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"315\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"329\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"329\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"366\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"386\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"397\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"386\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"397\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"446\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"466\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"477\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"466\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"477\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"540\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"550\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"550\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"601\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"611\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"625\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"193\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"625\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"219\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"611\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"625\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage506Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass g = e;\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += (g&&&=f)?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span></span>;\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"159\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"f\"> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">g</a></span><a title=\"pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"425\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+"<a title=\"pkg.ExClass.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"476\">"+MessagesCdmBase.AMP+"</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"f\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"263\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"289\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"299\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"318\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"318\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"361\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"374\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"374\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"425\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"439\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"439\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>!=<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"476\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"496\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"507\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"496\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">"+MessagesCdmBase.AMP+"</a><a title=\"true\">"+MessagesCdmBase.AMP+"</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"507\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"556\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"576\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"587\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"576\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"587\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"650\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"660\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"660\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"711\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"721\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"735\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"721\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"735\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage507Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  String out = \"\";\n");
        xml_.append("  for (ExClass e:{ new ExClass(10), new ExClass(1)}){\n");
        xml_.append("   ExClass g = e;\n");
        xml_.append("   ExClass f = new ExClass(1);\n");
        xml_.append("   f.field=1;\n");
        xml_.append("   out += (g|||=f)?\"Vrai\":\"Faux\";\n");
        xml_.append("  }\n");
        xml_.append("  return out;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public ExClass(int p){\n");
        xml_.append("  field = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass(i?1:2);\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">out</a> </span>=<span class=\"f\"> <span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"91\">e</a></span>:<span class=\"f\">{<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">10</span>)</span>,<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">1</span>)</span>}</span>){\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"141\">g</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">e</a></span></span>;\n" +
                "   <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"159\">f</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\">1</span>)</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a> </span>+=<span class=\"f\"><span class=\"p\"> (<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"141\">g</a></span><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"361\">|</a>|<a title=\"pkg.ExClass.static ||(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"556\">|</a>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">f</a></span></span>)</span>?<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">out</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"263\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"289\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"299\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"318\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"318\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"361\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"374\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"374\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"425\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"439\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"439\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"476\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"496\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"507\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"496\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"n\">1</span></span>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"507\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"556\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"576\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"587\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"576\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">1</span></span><a title=\"false\">|</a><a title=\"true\">|</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"587\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"650\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"660\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"660\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"289\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"711\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"721\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"735\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"299\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"263\">ExClass</a>(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"721\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"735\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage508Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v &&&= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage509Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v &&&= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">"+MessagesCdmBase.AMP+"</a>"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage510Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = true;\n");
        xml_.append("  return v |||= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"true\">|</a>||=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage511Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static boolean exmeth(){\n");
        xml_.append("  boolean v = false;\n");
        xml_.append("  return v |||= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">v</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">v</a> </span><a title=\"false\">|</a>||=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage512Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>??=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage513Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = false;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?<a title=\"false\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage514Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>??=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"86\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage515Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = null;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?<a title=\"null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage516Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  Boolean j = true;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> true</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?<a title=\"true\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage517Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?<a title=\"not null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage518Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>??=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage519Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  Integer j = 1;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"82\">j</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>??=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"82\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage520Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">j</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>?<a title=\"null\">?</a>=<span class=\"p\"> <a href=\"#"+ExportCst.PREF_REF+"85\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage521Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth1(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  Integer j = null;\n");
        xml_.append("  return i ???= j;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth1");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth1</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"90\">exmeth</a>(){\n" +
                "  Integer <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"110\">i</a> </span>=<span class=\"n\"> null</span></span>;\n" +
                "  Integer <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"130\">j</a> </span>=<span class=\"n\"> null</span></span>;\n" +
                "  return <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"110\">i</a> </span>???=<span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"130\">j</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage522Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = false;\n");
        xml_.append("  return i ???= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"false\">?</a>??=<span class=\"n\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage523Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Boolean exmeth(){\n");
        xml_.append("  Boolean i = null;\n");
        xml_.append("  return i ???= false;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Boolean <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Boolean <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>??=<span class=\"f\"> false</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage524Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = 1;\n");
        xml_.append("  return i ???= 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"not null\">?</a>??=<span class=\"n\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage525Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static Integer exmeth(){\n");
        xml_.append("  Integer i = null;\n");
        xml_.append("  return i ???= 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static Integer <a name=\""+ExportCst.PREF_REF+"45\">exmeth</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">i</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"65\">i</a> </span><a title=\"null\">?</a>??=<span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage526Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int t;\n");
        xml_.append("  t=0;\n");
        xml_.append("  exmeth(that(t));\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that int t){\n");
        xml_.append("  t=8;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static exmeth(~int)\" href=\"#"+ExportCst.PREF_REF+"121\">exmeth</a>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"121\">exmeth</a>(that int <a name=\""+ExportCst.PREF_REF+"137\">t</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"137\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage527Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int t;\n");
        xml_.append("  t=0;\n");
        xml_.append("  exmeth($id(Ex,~int),that(t));\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that int t){\n");
        xml_.append("  t=8;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>=<span class=\"f\">0</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static exmeth(~int)\" href=\"#"+ExportCst.PREF_REF+"134\">exmeth</a>(<span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,~int)</span>,<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"134\">exmeth</a>(that int <a name=\""+ExportCst.PREF_REF+"150\">t</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"150\">t</a></span>=<span class=\"f\">8</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage528Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Compo t;\n");
        xml_.append("  t=null;\n");
        xml_.append("  exmeth($id(Ex,~Compo),that(t));\n");
        xml_.append("  return t.t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that Compo t){\n");
        xml_.append("  Compo c = new Compo();\n");
        xml_.append("  c.t = 8;\n");
        xml_.append("  t=c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Compo {\n");
        xml_.append("  public int t;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"226\">Compo</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>=<span class=\"f\">null</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static exmeth(~pkg.Compo)\" href=\"#"+ExportCst.PREF_REF+"143\">exmeth</a>(<span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,~<a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"226\">Compo</a>)</span>,<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>.<span class=\"f\"><a title=\"pkg.Compo.t\" href=\"#"+ExportCst.PREF_REF+"251\">t</a></span></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"143\">exmeth</a>(that <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"226\">Compo</a> <a name=\""+ExportCst.PREF_REF+"161\">t</a>){\n" +
                "  <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"226\">Compo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">c</a> </span>=<span class=\"f\"> new <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"226\">Compo</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"173\">c</a></span>.<span class=\"f\"><a title=\"pkg.Compo.t\" href=\"#"+ExportCst.PREF_REF+"251\">t</a> </span></span>=<span class=\"f\"> 8</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"161\">t</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"173\">c</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"226\">pkg.Compo</a> {\n" +
                "  public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"251\">t</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage529Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int i = 0;\n");
        xml_.append("  new Compo(that(i));\n");
        xml_.append("  return i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Compo {\n");
        xml_.append(" public int f=15;\n");
        xml_.append(" public Compo(that int p){\n");
        xml_.append("  p = f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">i</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Compo.pkg.Compo(~int)\" href=\"#"+ExportCst.PREF_REF+"147\">new</a> <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"116\">Compo</a>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">i</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">i</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"116\">pkg.Compo</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"140\">f</a></span>=<span class=\"f\">15</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"147\">public Compo(</a>that int <a name=\""+ExportCst.PREF_REF+"169\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"169\">p</a> </span>=<span class=\"f\"> <a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"140\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage530Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int t = 1;\n");
        xml_.append("  that var u = that(t);\n");
        xml_.append("  u += 8;\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">t</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  that <b title=\"int\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"75\">u</a> </span>=<span class=\"f\"> that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">u</a> </span>+=<span class=\"f\"> 8</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage531Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Compo t = new Compo();\n");
        xml_.append("  t.f=8;\n");
        xml_.append("  Compo u = new Compo();\n");
        xml_.append("  u.f=3;\n");
        xml_.append("  that Compo v = that(t);\n");
        xml_.append("  v += u;\n");
        xml_.append("  return t.f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Compo {\n");
        xml_.append(" public int f;\n");
        xml_.append(" operator+ Compo (Compo a, Compo b){\n");
        xml_.append("  Compo c = new Compo();\n");
        xml_.append("  c.f = a.f+b.f;\n");
        xml_.append("  return c;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">t</a> </span>=<span class=\"f\"> new <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a></span></span>=<span class=\"f\">8</span></span>;\n" +
                "  <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"93\">u</a> </span>=<span class=\"f\"> new <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"93\">u</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a></span></span>=<span class=\"f\">3</span></span>;\n" +
                "  that <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"132\">v</a> </span>=<span class=\"f\"> that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"132\">v</a> </span><a title=\"pkg.Compo.static +(pkg.Compo,pkg.Compo)\" href=\"#"+ExportCst.PREF_REF+"223\">+</a>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"93\">u</a></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">t</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"187\">pkg.Compo</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"211\">f</a></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"223\">+</a> <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> (<a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <a name=\""+ExportCst.PREF_REF+"238\">a</a>, <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <a name=\""+ExportCst.PREF_REF+"247\">b</a>){\n" +
                "  <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"259\">c</a> </span>=<span class=\"f\"> new <a title=\"pkg.Compo\" href=\"#"+ExportCst.PREF_REF+"187\">Compo</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">c</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a> </span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"238\">a</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"247\">b</a></span>.<span class=\"f\"><a title=\"pkg.Compo.f\" href=\"#"+ExportCst.PREF_REF+"211\">f</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">c</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage532Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(field:10);\n");
        xml_.append("  return r.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"111\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"111\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"126\">field</a>:<span class=\"f\">10</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"126\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"111\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"126\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage533Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"145\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"145\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"120\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"145\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage534Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(two:10,one:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"145\">two</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"145\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"120\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"145\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage535Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int one,two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"139\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"135\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"139\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"120\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">one</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">two</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage536Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int two,one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"120\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"135\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"135\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"120\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"135\">two</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">one</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage537Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,Rec> l = $lambda(Rec,new,field);\n");
        xml_.append("  Rec r = l.call(10);\n");
        xml_.append("  return r.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"147\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"147\">Rec</a>,new,<a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"162\">field</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"147\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"101\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"67\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"101\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"162\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"147\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"162\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage538Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"175\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"185\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"175\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"185\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"160\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"185\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage539Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int one,two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"175\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"175\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"160\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">one</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">two</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage540Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int two;\n");
        xml_.append(" int one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"185\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"175\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"185\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"175\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"160\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">two</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"185\">one</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage541Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class pkg.Rec {\n");
        xml_.append(" int two,one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"175\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"160\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"175\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class <a name=\""+ExportCst.PREF_REF+"160\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">two</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">one</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage542Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int t = 7;\n");
        xml_.append("  (that int u:void)->{u=8;}.call(that(t));\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that int t){\n");
        xml_.append("  t=8;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(int t){\n");
        xml_.append("  return t+8;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">t</a> </span>=<span class=\"f\"> 7</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"t\">(that int <a name=\""+ExportCst.PREF_REF+"76\">u</a>:void)<a name=\""+ExportCst.PREF_REF+"83\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"76\">u</a></span>=<span class=\"f\">8</span></span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>)</span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"142\">exmeth</a>(that int <a name=\""+ExportCst.PREF_REF+"158\">t</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"158\">t</a></span>=<span class=\"n\">8</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"191\">exmeth</a>(int <a name=\""+ExportCst.PREF_REF+"202\">t</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"202\">t</a></span>+<span class=\"n\">8</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage543Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Inner v = new Inner(7);\n");
        xml_.append("  (that Inner u:void)->{u=new Inner(8);}.call(that(v));\n");
        xml_.append("  return v.t;\n");
        xml_.append(" }\n");
        xml_.append(" public static class Inner{\n");
        xml_.append("  int t;\n");
        xml_.append("  Inner(int p){\n");
        xml_.append("   t = p;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"171\">Inner</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">v</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"189\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"171\">Inner</a>(<span class=\"f\">7</span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"t\">(that <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"171\">Inner</a> <a name=\""+ExportCst.PREF_REF+"91\">u</a>:void)<a name=\""+ExportCst.PREF_REF+"98\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">u</a></span>=<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"189\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"171\">Inner</a>(<span class=\"f\">8</span>)</span></span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">v</a></span>)</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">v</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"184\">t</a></span></span>;\n" +
                " }\n" +
                " public static class <a name=\""+ExportCst.PREF_REF+"171\">Inner</a>{\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"184\">t</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"189\">Inner(</a>int <a name=\""+ExportCst.PREF_REF+"199\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"184\">t</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"199\">p</a></span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage544Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int t = 7;\n");
        xml_.append("  app((that u:void)->{u=8;},that(t));\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void app(Fct<~int,void> f,that int u){\n");
        xml_.append("  f.call(that(u));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">t</a> </span>=<span class=\"f\"> 7</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static app($core.Fct"+MessagesCdmBase.LT+"~int,void"+MessagesCdmBase.GT+",~int)\" href=\"#"+ExportCst.PREF_REF+"137\">app</a>(<span class=\"f\"><span class=\"t\">(that <a name=\""+ExportCst.PREF_REF+"76\">u</a>:void)<a name=\""+ExportCst.PREF_REF+"83\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"76\">u</a></span>=<span class=\"f\">8</span></span>;}</span></span>,<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"137\">app</a>(Fct"+MessagesCdmBase.LT+"~int,void"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"156\">f</a>,that int <a name=\""+ExportCst.PREF_REF+"167\">u</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"156\">f</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"167\">u</a></span>)</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage545Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Inner v = new Inner(7);\n");
        xml_.append("  (that Inner u:that Inner)->{return that(u);}.call(that(v))=new Inner(8);\n");
        xml_.append("  return v.t;\n");
        xml_.append(" }\n");
        xml_.append(" public static class Inner{\n");
        xml_.append("  int t;\n");
        xml_.append("  Inner(int p){\n");
        xml_.append("   t = p;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"190\">Inner</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"59\">v</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"208\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"190\">Inner</a>(<span class=\"f\">7</span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"t\">(that <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"190\">Inner</a> <a name=\""+ExportCst.PREF_REF+"91\">u</a>:that <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"190\">Inner</a>)<a name=\""+ExportCst.PREF_REF+"104\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">u</a></span>)</span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">v</a></span>)</span>)</span></span>=<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"208\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"190\">Inner</a>(<span class=\"f\">8</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"59\">v</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"203\">t</a></span></span>;\n" +
                " }\n" +
                " public static class <a name=\""+ExportCst.PREF_REF+"190\">Inner</a>{\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"203\">t</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"208\">Inner(</a>int <a name=\""+ExportCst.PREF_REF+"218\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"203\">t</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"218\">p</a></span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage546Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" static Inner v = new Inner(7);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  (:that Inner)->{return that(v);}.call()=new Inner(8);\n");
        xml_.append("  return v.t;\n");
        xml_.append(" }\n");
        xml_.append(" public static class Inner{\n");
        xml_.append("  int t;\n");
        xml_.append("  Inner(int p){\n");
        xml_.append("   t = p;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " static <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"177\">Inner</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"36\">v</a> </span>=<span class=\"g\"> <a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"195\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"177\">Inner</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"73\">exmeth</a>(){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"t\">(:that <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"177\">Inner</a>)<a name=\""+ExportCst.PREF_REF+"98\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.v\" href=\"#"+ExportCst.PREF_REF+"36\">v</a></span>)</span>;}</span></span>.<span class=\"f\"><b>call</b>()</span></span>=<span class=\"f\"><a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"195\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"177\">Inner</a>(<span class=\"f\">8</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.v\" href=\"#"+ExportCst.PREF_REF+"36\">v</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"190\">t</a></span></span>;\n" +
                " }\n" +
                " public static class <a name=\""+ExportCst.PREF_REF+"177\">Inner</a>{\n" +
                "  int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"190\">t</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"195\">Inner(</a>int <a name=\""+ExportCst.PREF_REF+"205\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"190\">t</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"205\">p</a></span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage547Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" static Inner v = new Inner(7);\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  (:Inner)->{return v;}.call();\n");
        xml_.append("  return v.t;\n");
        xml_.append(" }\n");
        xml_.append(" public static class Inner{\n");
        xml_.append("  int t;\n");
        xml_.append("  Inner(int p){\n");
        xml_.append("   t = p;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " static <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"153\">Inner</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"36\">v</a> </span>=<span class=\"g\"> <a title=\"pkg.Ex..Inner.pkg.Ex..Inner(int)\" href=\"#"+ExportCst.PREF_REF+"171\">new</a> <a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"153\">Inner</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"73\">exmeth</a>(){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"t\">(:<a title=\"pkg.Ex..Inner\" href=\"#"+ExportCst.PREF_REF+"153\">Inner</a>)<a name=\""+ExportCst.PREF_REF+"93\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><a title=\"pkg.Ex.v\" href=\"#"+ExportCst.PREF_REF+"36\">v</a></span>;}</span></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.v\" href=\"#"+ExportCst.PREF_REF+"36\">v</a></span>.<span class=\"f\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"166\">t</a></span></span>;\n" +
                " }\n" +
                " public static class <a name=\""+ExportCst.PREF_REF+"153\">Inner</a>{\n" +
                "  int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"166\">t</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"171\">Inner(</a>int <a name=\""+ExportCst.PREF_REF+"181\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ex..Inner.t\" href=\"#"+ExportCst.PREF_REF+"166\">t</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"181\">p</a></span></span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage548Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(field:10);\n");
        xml_.append("  return r.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"115\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"115\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"130\">field</a>:<span class=\"f\">10</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"130\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"115\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"130\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage549Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"149\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"149\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"124\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"149\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage550Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(two:10,one:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"149\">two</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"149\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"124\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"149\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage551Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int one,two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"143\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"139\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"143\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"124\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">one</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"143\">two</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage552Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(one:10,two:12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int two,one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"124\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"143\">one</a>:<span class=\"f\">10</span></span>,<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"139\">two</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"143\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"139\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"124\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"139\">two</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"143\">one</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage553Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,Rec> l = $lambda(Rec,new,field);\n");
        xml_.append("  Rec r = l.call(10);\n");
        xml_.append("  return r.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"151\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"151\">Rec</a>,new,<a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"166\">field</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"151\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"101\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"67\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"101\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"166\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"151\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"166\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage554Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int one;\n");
        xml_.append(" int two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"189\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"189\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"164\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">one</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"189\">two</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage555Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int one,two;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"183\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"179\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"183\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"164\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">one</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"183\">two</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage556Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int two;\n");
        xml_.append(" int one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"189\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"189\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"164\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">two</a></span>;\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"189\">one</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage557Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Fct<int,int,Rec> l = $lambda(Rec,new,one,two);\n");
        xml_.append("  Rec r = l.call(10,12);\n");
        xml_.append("  return r.one-r.two;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@interface pkg.Rec {\n");
        xml_.append(" int two,one;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  Fct"+MessagesCdmBase.LT+"int,int,<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">l</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a>,new,<a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"183\">one</a>,<a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a>)</span></span>;\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"164\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"107\">r</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"71\">l</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">10</span>,<span class=\"f\">12</span>)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.one\" href=\"#"+ExportCst.PREF_REF+"183\">one</a></span></span>-<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"107\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.two\" href=\"#"+ExportCst.PREF_REF+"179\">two</a></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@interface <a name=\""+ExportCst.PREF_REF+"164\">pkg.Rec</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">two</a></span>,<span class=\"f\"><a name=\""+ExportCst.PREF_REF+"183\">one</a></span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage558Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return m(( a)->{return 2 * a;},3);\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int> fct,int a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+",int)\" href=\"#"+ExportCst.PREF_REF+"85\">m</a>(<span class=\"f\"><span class=\"t\">( <a name=\""+ExportCst.PREF_REF+"46\">a</a>)<a name=\""+ExportCst.PREF_REF+"48\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"46\">a</a></span></span>;}</span></span>,<span class=\"f\">3</span>)</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(Fct"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"100\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"108\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"100\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"108\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage559Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $return m"+(char)225+"();\n");
        xml_.append(" }\n");
        xml_.append(" $public $static $int m"+(char)225+"(){\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"46\">catching</a>(){\n" +
                "  $return <span class=\"f\"><a title=\"pkg.Ex.$static m&#225;()\" href=\"#"+ExportCst.PREF_REF+"99\">m&#225;</a>()</span>;\n" +
                " }\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"99\">m&#225;</a>(){\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage560Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return staticCall(ExCaller<int>).method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCaller<S> {\n");
        xml_.append(" public staticCall S method(){\n");
        xml_.append("  ExClass<S> e = new ExClass<S>();\n");
        xml_.append("  e.field = (S)5;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public static T $(ExClass<T> i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExCaller\" href=\"#"+ExportCst.PREF_REF+"117\">ExCaller</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.ExCaller.staticCall method()\" href=\"#"+ExportCst.PREF_REF+"156\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExCaller</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"130\">S</a> <a name=\""+ExportCst.PREF_REF+"156\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"249\">ExClass</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"249\">ExClass</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+"()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"276\">field</a> </span></span>=<span class=\"f\"> (<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>)<span class=\"f\">5</span></span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static $(#T,pkg.ExClass"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"300\"> </a><a href=\"#"+ExportCst.PREF_REF+"179\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"249\">pkg.ExClass</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"261\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"261\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"276\">field</a></span>;\n" +
                " public static <a href=\"#"+ExportCst.PREF_REF+"261\">T</a> <a name=\""+ExportCst.PREF_REF+"300\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"249\">ExClass</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"261\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"313\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"313\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"276\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage561Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  return staticCall(ExCaller<int>).method();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCaller<S> {\n");
        xml_.append(" public staticCall S method(){\n");
        xml_.append("  Fct<S> fct = (:S) -> new ExClass<S>((S)5);\n");
        xml_.append("  return fct.call();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass<T> {\n");
        xml_.append(" public T field;\n");
        xml_.append(" public ExClass(T p){\n");
        xml_.append("  field=p;\n");
        xml_.append(" }\n");
        xml_.append(" public static T $(ExClass<T> i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExCaller\" href=\"#"+ExportCst.PREF_REF+"117\">ExCaller</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.ExCaller.staticCall method()\" href=\"#"+ExportCst.PREF_REF+"156\">method</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.ExCaller</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"130\">S</a> <a name=\""+ExportCst.PREF_REF+"156\">method</a>(){\n" +
                "  Fct"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">fct</a> </span>=<span class=\"f\"><span class=\"t\"> (:<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>) <a name=\""+ExportCst.PREF_REF+"186\">-"+MessagesCdmBase.GT+"</a> <span class=\"f\"><a title=\"pkg.ExClass.static $(#T,pkg.ExClass"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"337\"> </a><a title=\"pkg.ExClass.pkg.ExClass(#T)\" href=\"#"+ExportCst.PREF_REF+"285\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"250\">ExClass</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>"+MessagesCdmBase.GT+"(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"130\">S</a>)<span class=\"f\">5</span></span>)</span></span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"175\">fct</a></span>.<span class=\"f\"><b>call</b>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"250\">pkg.ExClass</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"262\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"262\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"285\">public ExClass(</a><a href=\"#"+ExportCst.PREF_REF+"262\">T</a> <a name=\""+ExportCst.PREF_REF+"302\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"277\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"302\">p</a></span></span>;\n" +
                " }\n" +
                " public static <a href=\"#"+ExportCst.PREF_REF+"262\">T</a> <a name=\""+ExportCst.PREF_REF+"337\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"250\">ExClass</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"262\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"350\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"350\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"277\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage562Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return e?\"Vrai\":\"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"205\">?</a><span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"147\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"205\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"215\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"215\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"266\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"279\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"279\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"330\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"344\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"344\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage563Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return bool(e,\"Vrai\",\"Faux\"+1/0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"211\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>,<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>,<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"153\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"211\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"221\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"221\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"272\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"285\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"285\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"336\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"350\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"350\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage564Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  if (e){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>)<a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"228\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"170\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"228\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"238\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"238\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"289\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"302\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"302\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"353\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"170\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"367\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"367\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage565Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  boolean res = e;\n");
        xml_.append("  if (res){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  boolean <span class=\"p\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">res</a> </span>=<span class=\"p\"><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"249\"> </a> <a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"109\">res</a></span>){\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"191\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"217\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"249\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"259\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"259\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"310\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"323\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"323\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"374\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"191\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"388\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"388\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"217\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage566Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  for (;e;){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">for</span> (;<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>;)<a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"231\">{</a>\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"173\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"199\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"231\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"241\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"241\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"292\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"305\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"305\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"356\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"173\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"370\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"370\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"199\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage567Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  int[] arr = {0,1,2};\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  return arr[e];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"62\">arr</a> </span>=<span class=\"f\"> {<span class=\"f\">0</span>,<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"87\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"62\">arr</a></span><span class=\"f\">[<span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"195\"> </a><a href=\"#"+ExportCst.PREF_REF+"87\">e</a></span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"141\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"195\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"205\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"253\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"266\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"266\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"317\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"331\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"331\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage568Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  Integer nb = null;\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  nb ??= ex;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  Integer <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">nb</a> </span>=<span class=\"f\"> null</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"149\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"85\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"149\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"64\">nb</a> </span><a title=\"null\">?</a><a title=\"not null\">?</a>=<span class=\"p\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"203\"> </a> <a href=\"#"+ExportCst.PREF_REF+"85\">ex</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"149\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"175\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"203\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"149\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"213\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"213\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"175\">field</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"261\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"149\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"274\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"274\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"175\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"325\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"149\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"339\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"339\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"175\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage569Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  int nb = 0;\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  nb += ex;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append(" operator+ ExClass (int i, ExClass h){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i + h.field;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">nb</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a> </span><a title=\"pkg.ExClass.static +(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"239\">+</a>=<a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"195\"> </a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"78\">ex</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"141\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"195\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"205\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"239\">+</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> (int <a name=\""+ExportCst.PREF_REF+"254\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"265\">h</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"279\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"279\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"254\">i</a> </span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"265\">h</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"279\">e</a></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"361\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"374\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"374\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"425\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"439\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"439\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage570Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  int nb = 0;\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  nb += ex;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">nb</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a> </span>+=<span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"195\"> </a> <a href=\"#"+ExportCst.PREF_REF+"78\">ex</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"141\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"195\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"205\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"253\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"266\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"266\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"317\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"141\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"331\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"331\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"167\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage571Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  nb += ex;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static ExClass $(int i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"98\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a> <a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"307\"> </a></span>+=<a title=\"pkg.ExClass.static $(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"219\"> </a><span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"307\"> </a> <a href=\"#"+ExportCst.PREF_REF+"98\">ex</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"161\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"187\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"219\">$</a>(int <a name=\""+ExportCst.PREF_REF+"225\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"239\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"239\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"187\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"225\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"239\">e</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"307\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"317\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"317\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"187\">field</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"365\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"378\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"378\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"187\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"429\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"161\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"443\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"443\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"187\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage572Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  int nb = 0;\n");
        xml_.append("  ++nb;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">nb</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">++<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage573Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ++nb;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static ExClass $(int i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\">++<a title=\"pkg.ExClass.static $(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"185\"> </a><span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"273\"> </a><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"127\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"153\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"185\">$</a>(int <a name=\""+ExportCst.PREF_REF+"191\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"205\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"153\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"191\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">e</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"273\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"283\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"283\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"153\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage574Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  nb++;\n");
        xml_.append("  return nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static ExClass $(int i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"273\"> </a></span><a title=\"pkg.ExClass.static $(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"185\"> </a>++</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"127\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"153\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"185\">$</a>(int <a name=\""+ExportCst.PREF_REF+"191\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"205\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"153\">field</a> </span></span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"191\">i</a></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">e</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"273\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"127\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"283\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"283\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"153\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage575Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  int sum = nb + ex;\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"167\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"167\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"167\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"94\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"167\">ExClass</a>()</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"120\">sum</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"64\">nb</a> <a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"221\"> </a></span>+<span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"221\"> </a> <a href=\"#"+ExportCst.PREF_REF+"94\">ex</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"120\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"167\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"193\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"221\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"167\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"231\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"231\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"193\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage576Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ExTwo ex = new ExTwo();\n");
        xml_.append("  return nb + ex;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" operator+ ExClass (ExClass h, int i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i + h.field;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExTwo i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"308\">ExTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"96\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"308\">ExTwo</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a> </span><a title=\"pkg.ExClass.static +(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"194\">+</a><span class=\"f\"><a title=\"pkg.ExTwo.static $(int,pkg.ExTwo)\" href=\"#"+ExportCst.PREF_REF+"360\"> </a> <a href=\"#"+ExportCst.PREF_REF+"96\">ex</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"150\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"176\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"194\">+</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a> (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"213\">h</a>, int <a name=\""+ExportCst.PREF_REF+"220\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"234\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"150\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"234\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"176\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"220\">i</a> </span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"213\">h</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"176\">field</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"234\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"308\">pkg.ExTwo</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"332\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"360\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"308\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"368\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"368\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"332\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage577Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static boolean method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ExClass ex = new ExClass();\n");
        xml_.append("  return nb <= ex;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"155\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"155\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"155\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"98\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"155\">ExClass</a>()</span></span>;\n" +
                "  return <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a> <a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"209\"> </a></span><a title=\"true\">"+MessagesCdmBase.LT+"=</a><span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"209\"> </a> <a href=\"#"+ExportCst.PREF_REF+"98\">ex</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"155\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"209\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"155\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"219\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"219\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"181\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage578Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static ExClass method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  ExTwo ex = new ExTwo();\n");
        xml_.append("  return nb <= ex;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" operator<= ExClass (ExClass h, int i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field = i + h.field;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExTwo i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"310\">ExTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"96\">ex</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"310\">ExTwo</a>()</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a> </span><a title=\"pkg.ExClass.static "+MessagesCdmBase.LT+"=(pkg.ExClass,int)\" href=\"#"+ExportCst.PREF_REF+"195\">"+MessagesCdmBase.LT+"=</a><span class=\"f\"><a title=\"pkg.ExTwo.static $(int,pkg.ExTwo)\" href=\"#"+ExportCst.PREF_REF+"362\"> </a> <a href=\"#"+ExportCst.PREF_REF+"96\">ex</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"151\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"177\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"195\">"+MessagesCdmBase.LT+"=</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a> (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"215\">h</a>, int <a name=\""+ExportCst.PREF_REF+"222\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"236\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"151\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"236\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"177\">field</a> </span></span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"222\">i</a> </span>+<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"215\">h</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"177\">field</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"236\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"310\">pkg.ExTwo</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"334\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"362\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"310\">ExTwo</a> <a name=\""+ExportCst.PREF_REF+"370\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"370\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.field\" href=\"#"+ExportCst.PREF_REF+"334\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage579Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  return -nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a>()</span></span>;\n" +
                "  return <span class=\"f\">-<span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"170\"> </a><a href=\"#"+ExportCst.PREF_REF+"64\">nb</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"116\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"142\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"170\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"180\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"180\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"142\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage580Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  return ~nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"64\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a>()</span></span>;\n" +
                "  return <span class=\"f\">~<span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"170\"> </a><a href=\"#"+ExportCst.PREF_REF+"64\">nb</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"116\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"142\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"170\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"116\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"180\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"180\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"142\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage581Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static boolean method(){\n");
        xml_.append("  ExClass nb = new ExClass();\n");
        xml_.append("  return !nb;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"120\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">nb</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"120\">ExClass</a>()</span></span>;\n" +
                "  return <span class=\"p\"><a title=\"true\">!</a><span class=\"p\"><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"178\"> </a><a href=\"#"+ExportCst.PREF_REF+"68\">nb</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"120\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"146\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"178\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"120\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"188\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"146\">field</a></span></span><a title=\"false\">==</a><span class=\"f\">0</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage582Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass f = new ExClass();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return e&&f?\"Vrai\":\"Faux\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1&&j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" operator|| boolean (ExClass i, ExClass j){\n");
        xml_.append("  return i.field==1||j.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static ExClass $(boolean i){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=i?1:2;\n");
        xml_.append("  return e;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span><a title=\"true\n" +
                "\n" +
                "pkg.ExClass.static false(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"310\">"+MessagesCdmBase.AMP+"</a><a title=\"pkg.ExClass.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.ExClass,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"361\">"+MessagesCdmBase.AMP+"</a><a title=\"pkg.ExClass.static $(pkg.ExClass,boolean)\" href=\"#"+ExportCst.PREF_REF+"596\"> </a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">f</a></span></span><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"535\">?</a><span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>:<span class=\"n\"><span class=\"s\">\"Faux\"</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"188\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"214\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"246\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"259\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"259\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"310\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"324\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"324\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"false\">!=</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"361\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"381\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"392\">j</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"381\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span><a title=\"true\">"+MessagesCdmBase.AMP+"</a><a title=\"true\">"+MessagesCdmBase.AMP+"</a><span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"392\">j</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"441\">||</a> boolean (<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"461\">i</a>, <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"472\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"461\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span>||<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"472\">j</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>==<span class=\"n\">1</span></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"535\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"545\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"545\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"596\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"606\">i</a>){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"620\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"188\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"214\">field</a></span></span>=<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"606\">i</a></span>?<span class=\"f\">1</span>:<span class=\"n\">2</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"620\">e</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage583Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static boolean method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  return and(e,f);\n");
        xml_.append(" }\n");
        xml_.append(" static boolean and(boolean a, boolean b){\n");
        xml_.append("  return a&&b;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass2 i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"48\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"242\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"68\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"242\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"68\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"353\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"111\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"353\">ExClass2</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"111\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"380\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"p\"><a title=\"pkg.Apply.static and(boolean,boolean)\" href=\"#"+ExportCst.PREF_REF+"182\">and</a>(<span class=\"p\"><a title=\"pkg.ExClass.static $(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"300\"> </a><a href=\"#"+ExportCst.PREF_REF+"68\">e</a></span>,<span class=\"p\"><a title=\"pkg.ExClass2.static $(boolean,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"412\"> </a><a href=\"#"+ExportCst.PREF_REF+"111\">f</a></span>)</span>;\n" +
                " }\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"182\">and</a>(boolean <a name=\""+ExportCst.PREF_REF+"194\">a</a>, boolean <a name=\""+ExportCst.PREF_REF+"205\">b</a>){\n" +
                "  return <span class=\"p\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"194\">a</a></span><a title=\"true\">"+MessagesCdmBase.AMP+"</a><a title=\"true\">"+MessagesCdmBase.AMP+"</a><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"205\">b</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"242\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"268\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"300\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"242\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"310\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"310\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"268\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"353\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"380\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"412\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"353\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"423\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"423\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"380\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage584Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  e[f]=10;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int[] field={0,1};\n");
        xml_.append(" public int this(int i){\n");
        xml_.append("  return field[i];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int i){\n");
        xml_.append("  field[i]=value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"157\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"157\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"307\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"95\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"307\">ExClass2</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"95\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"334\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">e</a></span><span class=\"f\"><a title=\"pkg.ExClass.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"258\">[</a><span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"362\"> </a><a href=\"#"+ExportCst.PREF_REF+"95\">f</a></span><a title=\"pkg.ExClass.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"258\">]</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"157\">pkg.ExClass</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"185\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"210\">this</a>(int <a name=\""+ExportCst.PREF_REF+"219\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"185\">field</a></span><span class=\"n\">[<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"219\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"258\">this</a>(int <a name=\""+ExportCst.PREF_REF+"267\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"185\">field</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"267\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"307\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"334\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"362\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"307\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"373\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"373\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"334\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage585Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  ExClass3 g = new ExClass3();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  g.field=1;\n");
        xml_.append("  e[f,g]=10;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int[] field={0,1,2};\n");
        xml_.append(" public int this(int i,int j){\n");
        xml_.append("  return field[i+j];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int i,int j){\n");
        xml_.append("  field[i+j]=value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass3 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass3 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"203\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"203\">ExClass</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"371\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"95\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"371\">ExClass2</a>()</span></span>;\n" +
                "  <a title=\"pkg.ExClass3\" href=\"#"+ExportCst.PREF_REF+"477\">ExClass3</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"126\">g</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass3\" href=\"#"+ExportCst.PREF_REF+"477\">ExClass3</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"95\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"126\">g</a></span>.<span class=\"f\"><a title=\"pkg.ExClass3.field\" href=\"#"+ExportCst.PREF_REF+"504\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">e</a></span><span class=\"f\"><a title=\"pkg.ExClass.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"314\">[</a><span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"426\"> </a><a href=\"#"+ExportCst.PREF_REF+"95\">f</a></span>,<span class=\"f\"><a title=\"pkg.ExClass3.static $(int,pkg.ExClass3)\" href=\"#"+ExportCst.PREF_REF+"532\"> </a><a href=\"#"+ExportCst.PREF_REF+"126\">g</a></span><a title=\"pkg.ExClass.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"314\">]</a></span></span>=<span class=\"f\">10</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"203\">pkg.ExClass</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"231\">field</a></span>=<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"258\">this</a>(int <a name=\""+ExportCst.PREF_REF+"267\">i</a>,int <a name=\""+ExportCst.PREF_REF+"273\">j</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"231\">field</a></span><span class=\"n\">[<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"267\">i</a></span>+<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"273\">j</a></span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"314\">this</a>(int <a name=\""+ExportCst.PREF_REF+"323\">i</a>,int <a name=\""+ExportCst.PREF_REF+"329\">j</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"231\">field</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"323\">i</a></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"329\">j</a></span></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"371\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"398\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"426\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"371\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"437\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"437\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"398\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"477\">pkg.ExClass3</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"504\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"532\">$</a>(<a title=\"pkg.ExClass3\" href=\"#"+ExportCst.PREF_REF+"477\">ExClass3</a> <a name=\""+ExportCst.PREF_REF+"543\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"543\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass3.field\" href=\"#"+ExportCst.PREF_REF+"504\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage586Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  ExClass e = new ExClass(field:f);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public @class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"202\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"202\">ExClass2</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"229\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"154\">ExClass</a>(<span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"257\"> </a><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"180\">field</a>:<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public @class <a name=\""+ExportCst.PREF_REF+"154\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"180\">field</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"202\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"229\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"257\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"202\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"268\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"268\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"229\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage587Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  int[] field={new ExClass2()};\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">field</a></span>=<span class=\"f\">{<span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"160\"> </a>new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass2</a>()</span>}</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"105\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"132\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"160\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"105\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"171\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"171\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"132\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage588Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  ExClass e = new ExClass(f);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public ExClass(int i){\n");
        xml_.append("  field=i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"233\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"233\">ExClass2</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"260\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"181\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"147\">ExClass</a>(<span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"288\"> </a><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"147\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"173\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"181\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"200\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"173\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"200\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"260\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"288\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"233\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"299\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"299\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"260\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage589Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  ExClass2 f = new ExClass2();\n");
        xml_.append("  f.field=1;\n");
        xml_.append("  iter(int i = f; 1; 1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public ExClass(int i){\n");
        xml_.append("  field=i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass2 {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static int $(ExClass2 i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"228\">ExClass2</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">f</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"228\">ExClass2</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"255\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">iter</span>(int <a name=\""+ExportCst.PREF_REF+"110\">i</a> = <span class=\"f\"><a title=\"pkg.ExClass2.static $(int,pkg.ExClass2)\" href=\"#"+ExportCst.PREF_REF+"283\"> </a><a href=\"#"+ExportCst.PREF_REF+"66\">f</a></span>; <span class=\"f\">1</span>; <span class=\"f\">1</span>);\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"142\">pkg.ExClass</a> {\n" +
                " public int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"168\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"176\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"195\">i</a>){\n" +
                "  <span class=\"n\"><span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"168\">field</a></span>=<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"195\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"228\">pkg.ExClass2</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"255\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"283\">$</a>(<a title=\"pkg.ExClass2\" href=\"#"+ExportCst.PREF_REF+"228\">ExClass2</a> <a name=\""+ExportCst.PREF_REF+"294\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass2.field\" href=\"#"+ExportCst.PREF_REF+"255\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage590Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  iter(int i = new ExClass(1); 1; 1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public ExClass(int i){\n");
        xml_.append("  field=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <span class=\"p\">iter</span>(int <a name=\""+ExportCst.PREF_REF+"66\">i</a> = <span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"201\"> </a><a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"145\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a>(<span class=\"f\">1</span>)</span>; <span class=\"f\">1</span>; <span class=\"f\">1</span>);\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"111\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"137\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"145\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"164\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"201\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"211\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"211\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage591Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  iter(int i = 1; new ExClass(1); 1);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public ExClass(int i){\n");
        xml_.append("  field=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <span class=\"p\">iter</span>(int <a name=\""+ExportCst.PREF_REF+"66\">i</a> = <span class=\"f\">1</span>; <span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"201\"> </a><a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"145\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a>(<span class=\"f\">1</span>)</span>; <span class=\"f\">1</span>);\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"111\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"137\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"145\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"164\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"201\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"211\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"211\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage592Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static void method(){\n");
        xml_.append("  iter(int i = 1; 1; new ExClass(1));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public ExClass(int i){\n");
        xml_.append("  field=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExClass i){\n");
        xml_.append("  return i.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"45\">method</a>(){\n" +
                "  <span class=\"p\">iter</span>(int <a name=\""+ExportCst.PREF_REF+"66\">i</a> = <span class=\"f\">1</span>; <span class=\"f\">1</span>; <span class=\"f\"><a title=\"pkg.ExClass.static $(int,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"201\"> </a><a title=\"pkg.ExClass.pkg.ExClass(int)\" href=\"#"+ExportCst.PREF_REF+"145\">new</a> <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a>(<span class=\"f\">1</span>)</span>);\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"111\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"137\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"145\">public ExClass(</a>int <a name=\""+ExportCst.PREF_REF+"164\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"164\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"201\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"111\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"211\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"211\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"137\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage593Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  return bool(e,\"Vrai\",\"Faux\"+1/0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExClass.static true(boolean,pkg.ExClass)\" href=\"#"+ExportCst.PREF_REF+"211\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>,<span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>,<span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"153\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"211\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"224\">i</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">i</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"275\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"153\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"289\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"289\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"179\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage594Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  if (e.field==1){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"179\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"179\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"205\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"205\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>){\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"179\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"205\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"237\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"179\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"247\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"247\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"205\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"298\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"179\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"311\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"311\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"205\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"362\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"179\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"376\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"376\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"205\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage595Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  ExClass e = new ExClass();\n");
        xml_.append("  e.field=1;\n");
        xml_.append("  for (;e.field==1;){\n");
        xml_.append("   return \"Vrai\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"Faux\"+1/0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExClass {\n");
        xml_.append(" public int field=2;\n");
        xml_.append(" public static boolean $(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExClass i){\n");
        xml_.append("  return i.field==1;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean false(ExClass i){\n");
        xml_.append("  return i.field!=1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"47\">method</a>(){\n" +
                "  <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"182\">ExClass</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"182\">ExClass</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a></span></span>=<span class=\"f\">1</span></span>;\n" +
                "  <span class=\"p\">for</span> (;<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a></span></span><a title=\"true\">==</a><span class=\"f\">1</span></span>;){\n" +
                "   return <span class=\"f\"><span class=\"s\">\"Vrai\"</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"s\">\"Faux\"</span></span>+<span class=\"n\"><span class=\"n\">1</span>/<span class=\"n\">0</span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"182\">pkg.ExClass</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"208\">field</a></span>=<span class=\"f\">2</span></span>;\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"240\">$</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"182\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"250\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"250\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"301\">true</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"182\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"314\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"314\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a></span></span>==<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"365\">false</a>(<a title=\"pkg.ExClass\" href=\"#"+ExportCst.PREF_REF+"182\">ExClass</a> <a name=\""+ExportCst.PREF_REF+"379\">i</a>){\n" +
                "  return <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"379\">i</a></span>.<span class=\"n\"><a title=\"pkg.ExClass.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a></span></span>!=<span class=\"n\">1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage596Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static String method(){\n");
        xml_.append("  return \"\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl2(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertTrue(!filesExp_.isEmpty());
    }
    @Test
    public void coverage597Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("class pkg.Int {\n");
        xml_.append(" int field = 1;\n");
        xml_.append("}\n");
        xml_.append("class pkg.Int2 {\n");
        xml_.append(" Int f;\n");
        xml_.append(" Int2(Int i) {\n");
        xml_.append("  f = i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return ((:Int2)->new Int2(new Int(){}){\n");
        xml_.append("   Int2(Int p){super(p);}\n");
        xml_.append("  }).call().f.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Int</a> {\n" +
                " int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"21\">field</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"40\">pkg.Int2</a> {\n" +
                " <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"56\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"60\">Int2(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"69\">i</a>) {\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Int2.f\" href=\"#"+ExportCst.PREF_REF+"56\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"69\">i</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"94\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"116\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"t\">(:<a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"40\">Int2</a>)<a name=\""+ExportCst.PREF_REF+"138\">-"+MessagesCdmBase.GT+"</a><span class=\"f\"><a title=\"pkg.Ext..Int2*1.pkg.Ext..Int2*1(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"166\">new</a> <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"40\">Int2</a>(<span class=\"f\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"158\">{</a>}</span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"161\">{</a>\n" +
                "   <a name=\""+ExportCst.PREF_REF+"166\">Int2(</a><a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"6\">Int</a> <a name=\""+ExportCst.PREF_REF+"175\">p</a>){<span class=\"f\"><a title=\"pkg.Int2.pkg.Int2(pkg.Int)\" href=\"#"+ExportCst.PREF_REF+"60\">super</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"175\">p</a></span>)</span>;}\n" +
                "  }</span></span></span></span>)</span>.<span class=\"f\"><b>call</b>()</span></span>.<span class=\"f\"><a title=\"pkg.Int2.f\" href=\"#"+ExportCst.PREF_REF+"56\">f</a></span></span>.<span class=\"f\"><a title=\"pkg.Int.field\" href=\"#"+ExportCst.PREF_REF+"21\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage598Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int t = 7;\n");
        xml_.append("  that int r = that(t);\n");
        xml_.append("  (int r:void)->{exmeth(that(#r),r);}.call(8);\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that int s,int u){\n");
        xml_.append("  s = u;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">t</a> </span>=<span class=\"f\"> 7</span></span>;\n" +
                "  that int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"71\">r</a> </span>=<span class=\"f\"> that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"91\">r</a>:void)<a name=\""+ExportCst.PREF_REF+"98\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><a title=\"pkg.Ext.static exmeth(~int,int)\" href=\"#"+ExportCst.PREF_REF+"166\">exmeth</a>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"71\">#r</a></span>)</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">r</a></span>)</span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">8</span>)</span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"166\">exmeth</a>(that int <a name=\""+ExportCst.PREF_REF+"182\">s</a>,int <a name=\""+ExportCst.PREF_REF+"188\">u</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"182\">s</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"188\">u</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage599Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int t = 7;\n");
        xml_.append("  exmeth(that(t));\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append(" public static void exmeth(that int r){\n");
        xml_.append("  (int r:void)->{#r=8;}.call(0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">t</a> </span>=<span class=\"f\"> 7</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ext.static exmeth(~int)\" href=\"#"+ExportCst.PREF_REF+"114\">exmeth</a>(<span class=\"f\">that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>)</span>)</span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>;\n" +
                " }\n" +
                " public static void <a name=\""+ExportCst.PREF_REF+"114\">exmeth</a>(that int <a name=\""+ExportCst.PREF_REF+"130\">r</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"141\">r</a>:void)<a name=\""+ExportCst.PREF_REF+"148\">-"+MessagesCdmBase.GT+"</a>{<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"130\">#r</a></span>=<span class=\"f\">8</span></span>;}</span></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">0</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage600Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Simple {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param1< T> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param2<T > {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param3< T > {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param4< T:Simple> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param5<T :Simple> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param6< T :Simple> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param7< T: Simple> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param8<T : Simple> {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param9< T : Simple> {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"77\">pkg.Simple</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"105\">pkg.Param1</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"117\">T</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"137\">pkg.Param2</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"148\">T</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"169\">pkg.Param3</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"181\">T</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"202\">pkg.Param4</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"214\">T</a>:<a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"241\">pkg.Param5</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"252\">T</a> :<a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"280\">pkg.Param6</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"292\">T</a> :<a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"320\">pkg.Param7</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"332\">T</a>: <a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"360\">pkg.Param8</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"371\">T</a> : <a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"400\">pkg.Param9</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"412\">T</a> : <a title=\"pkg.Simple\" href=\"#"+ExportCst.PREF_REF+"77\">Simple</a>"+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage601Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int1 {\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int2 {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param1<T: Int1 & Int2 > {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param2<T : Int1 & Int2 > {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param3< T: Int1 & Int2 > {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param4< T : Int1 & Int2 > {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"81\">pkg.Int1</a> {\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"111\">pkg.Int2</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"137\">pkg.Param1</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"148\">T</a>: <a title=\"pkg.Int1\" href=\"#"+ExportCst.PREF_REF+"81\">Int1</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"111\">Int2</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"182\">pkg.Param2</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"193\">T</a> : <a title=\"pkg.Int1\" href=\"#"+ExportCst.PREF_REF+"81\">Int1</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"111\">Int2</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"228\">pkg.Param3</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"240\">T</a>: <a title=\"pkg.Int1\" href=\"#"+ExportCst.PREF_REF+"81\">Int1</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"111\">Int2</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"274\">pkg.Param4</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"286\">T</a> : <a title=\"pkg.Int1\" href=\"#"+ExportCst.PREF_REF+"81\">Int1</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"111\">Int2</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage602Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int1 {\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int2 {\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int3 {\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int4 {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Param< T : Int1 & Int2 , S : Int3 & Int4 > {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"81\">pkg.Int1</a> {\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"111\">pkg.Int2</a> {\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"141\">pkg.Int3</a> {\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"171\">pkg.Int4</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"197\">pkg.Param</a>"+MessagesCdmBase.LT+" <a name=\""+ExportCst.PREF_REF+"208\">T</a> : <a title=\"pkg.Int1\" href=\"#"+ExportCst.PREF_REF+"81\">Int1</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int2\" href=\"#"+ExportCst.PREF_REF+"111\">Int2</a> , <a name=\""+ExportCst.PREF_REF+"226\">S</a> : <a title=\"pkg.Int3\" href=\"#"+ExportCst.PREF_REF+"141\">Int3</a> "+MessagesCdmBase.AMP+" <a title=\"pkg.Int4\" href=\"#"+ExportCst.PREF_REF+"171\">Int4</a> "+MessagesCdmBase.GT+" {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage603Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(true);\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(boolean b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(boolean)\" href=\"#"+ExportCst.PREF_REF+"152\">exmeth</a>(<span class=\"f\">true</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"152\">exmeth</a>(boolean <a name=\""+ExportCst.PREF_REF+"167\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"167\">b</a></span>?<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>:<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage604Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(false);\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(boolean b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(boolean)\" href=\"#"+ExportCst.PREF_REF+"153\">exmeth</a>(<span class=\"f\">false</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"153\">exmeth</a>(boolean <a name=\""+ExportCst.PREF_REF+"168\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"168\">b</a></span>?<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>:<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage605Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(1));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"255\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a>(<span class=\"f\">1</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>?<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span><a title=\"pkg.ExBool.static true(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"305\">:</a><span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"251\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"255\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"266\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"266\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"305\">true</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"317\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"317\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage606Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(0));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"255\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a>(<span class=\"f\">0</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>?<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span><a title=\"pkg.ExBool.static true(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"305\">:</a><span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"251\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"255\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"266\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"266\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"305\">true</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"317\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"317\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span></span><a title=\"false\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage607Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(1));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"255\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a>(<span class=\"f\">1</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span><a title=\"pkg.ExBool.static $(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"305\">?</a><span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>:<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"251\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"255\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"266\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"266\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"305\">$</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"314\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"314\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage608Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(0));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(b?that(p1):that(p2));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"255\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a>(<span class=\"f\">0</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span><a title=\"pkg.ExBool.static $(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"305\">?</a><span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>:<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"251\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"255\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"266\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"266\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"305\">$</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"233\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"314\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"314\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"251\">f</a> </span></span><a title=\"false\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage609Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(true);\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(boolean b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(boolean)\" href=\"#"+ExportCst.PREF_REF+"152\">exmeth</a>(<span class=\"f\">true</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"152\">exmeth</a>(boolean <a name=\""+ExportCst.PREF_REF+"167\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\">bool(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"167\">b</a></span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage610Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(false);\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(boolean b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(boolean)\" href=\"#"+ExportCst.PREF_REF+"153\">exmeth</a>(<span class=\"f\">false</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"153\">exmeth</a>(boolean <a name=\""+ExportCst.PREF_REF+"168\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\">bool(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"168\">b</a></span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage611Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(1));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"261\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a>(<span class=\"f\">1</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.ExBool.static true(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"311\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"239\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"257\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"261\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"272\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"272\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">true</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"323\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"323\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage612Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(0));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean true(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"261\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a>(<span class=\"f\">0</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.ExBool.static true(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"311\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"239\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"257\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"261\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"272\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"272\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">true</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"323\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"323\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span></span><a title=\"false\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage613Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(1));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"261\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a>(<span class=\"f\">1</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.ExBool.static $(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"311\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"239\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"257\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"261\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"272\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"272\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">$</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"320\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"320\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span></span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage614Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int p1 = 15;\n");
        xml_.append(" public static int p2 = 18;\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return exmeth(new ExBool(0));\n");
        xml_.append(" }\n");
        xml_.append(" public static that int exmeth(ExBool b){\n");
        xml_.append("  return that(bool(b,that(p1),that(p2)));\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExBool {\n");
        xml_.append(" int f;\n");
        xml_.append(" ExBool(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static boolean $(ExBool v){\n");
        xml_.append("  return v.f == 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"41\">p1</a> </span>=<span class=\"g\"> 15</span></span>;\n" +
                " public static int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"69\">p2</a> </span>=<span class=\"g\"> 18</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"97\">m</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.~static exmeth(pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"161\">exmeth</a>(<span class=\"f\"><a title=\"pkg.ExBool.pkg.ExBool(int)\" href=\"#"+ExportCst.PREF_REF+"261\">new</a> <a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a>(<span class=\"f\">0</span>)</span>)</span>;\n" +
                " }\n" +
                " public static that int <a name=\""+ExportCst.PREF_REF+"161\">exmeth</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"175\">b</a>){\n" +
                "  return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.ExBool.static $(boolean,pkg.ExBool)\" href=\"#"+ExportCst.PREF_REF+"311\">bool</a>(<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"175\">b</a></span>,<span class=\"n\">that(<span class=\"n\"><a title=\"pkg.Ex.p1\" href=\"#"+ExportCst.PREF_REF+"41\">p1</a></span>)</span>,<span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ex.p2\" href=\"#"+ExportCst.PREF_REF+"69\">p2</a></span>)</span>)</span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"239\">pkg.ExBool</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"257\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"261\">ExBool(</a>int <a name=\""+ExportCst.PREF_REF+"272\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"272\">p</a></span></span>;\n" +
                " }\n" +
                " public static boolean <a name=\""+ExportCst.PREF_REF+"311\">$</a>(<a title=\"pkg.ExBool\" href=\"#"+ExportCst.PREF_REF+"239\">ExBool</a> <a name=\""+ExportCst.PREF_REF+"320\">v</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"320\">v</a></span>.<span class=\"f\"><a title=\"pkg.ExBool.f\" href=\"#"+ExportCst.PREF_REF+"257\">f</a> </span></span><a title=\"false\">==</a><span class=\"f\"> 1</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage615Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  Content[] arr = {null,null};\n");
        xml_.append("  for (that Content e : arr){\n");
        xml_.append("    e = new Content();\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Content {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">m</a>(){\n" +
                "  <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"164\">Content</a>[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">arr</a> </span>=<span class=\"f\"> {<span class=\"f\">null</span>,<span class=\"f\">null</span>}</span></span>;\n" +
                "  <span class=\"f\">for (that <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"164\">Content</a> <a name=\""+ExportCst.PREF_REF+"97\">e</a></span> : <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">arr</a></span>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"97\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"164\">Content</a>()</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"164\">pkg.Content</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage616Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  Content v = new Content();\n");
        xml_.append("  for (that Content e = that(v);;){\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Content {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">m</a>(){\n" +
                "  <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"156\">Content</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"56\">v</a> </span>=<span class=\"f\"> new <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"156\">Content</a>()</span></span>;\n" +
                "  for (that <a title=\"pkg.Content\" href=\"#"+ExportCst.PREF_REF+"156\">Content</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"95\">e</a> </span>=<span class=\"f\"> that(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"56\">v</a></span>)</span></span>;;){\n" +
                "    break;\n" +
                "  }\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"156\">pkg.Content</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage617Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String m(){\n");
        xml_.append("  return \"\"\"\n first \n second \n continuing \\\n after \n two words \n finish \"\"\";\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"s\">\"\"\"\n" +
                " first \n" +
                " second \n" +
                " continuing \\\n" +
                " after \n" +
                " two words \n" +
                " finish \"\"\"</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage618Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Int(pkg.Comp a, pkg.Comp b) {\n");
        xml_.append(" return new pkg.Int(a.field+b.field){\n");
        xml_.append("  int field;\n");
        xml_.append("  public Int(int p){\n");
        xml_.append("   field = p;\n");
        xml_.append("  }\n");
        xml_.append("  public int field()$intern($core.Int*1:field($core.Int*1)){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Comp {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Comp(int p){\n");
        xml_.append("  field=p;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return (new Comp(2)+new Comp(4)).field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"239\">pkg.Int</a>(<a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"27\">a</a>, <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"39\">b</a>) {\n" +
                " return <span class=\"f\"><a title=\"$core.Int*1.$core.Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"97\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"239\">pkg.Int</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"27\">a</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"301\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">b</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"301\">field</a></span></span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"80\">{</a>\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"88\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"97\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"112\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"$core.Int*1.field\" href=\"#"+ExportCst.PREF_REF+"88\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"112\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"147\">field</a>()$intern(<a title=\"$core.Int*1\" href=\"#"+ExportCst.PREF_REF+"80\">$core.Int*1</a>:<a title=\"$core.Int*1.field()\" href=\"#"+ExportCst.PREF_REF+"147\">field</a>(<a title=\"$core.Int*1\" href=\"#"+ExportCst.PREF_REF+"80\">$core.Int*1</a>)){\n" +
                "   return <span class=\"f\"><a title=\"$core.Int*1.field\" href=\"#"+ExportCst.PREF_REF+"88\">field</a></span>;\n" +
                "  }\n" +
                " }</span></span>;\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"239\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"254\">field</a>();\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"278\">pkg.Comp</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"301\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"309\">public Comp(</a>int <a name=\""+ExportCst.PREF_REF+"325\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"301\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"325\">p</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"351\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"373\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"309\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"278\">Comp</a>(<span class=\"f\">2</span>)</span><a title=\"static +(pkg.Comp,pkg.Comp)\" href=\"#"+ExportCst.PREF_REF+"8\">+</a><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"309\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"278\">Comp</a>(<span class=\"f\">4</span>)</span></span>)</span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"254\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage619Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Int(pkg.Comp a, pkg.Comp b) {\n");
        xml_.append(" return new pkg.Int(a.field+b.field){\n");
        xml_.append("  int field;\n");
        xml_.append("  public Int(int p){\n");
        xml_.append("   field = p;\n");
        xml_.append("  }\n");
        xml_.append("  public int field(int f)$intern($core.Int*1:field($core.Int*1,int)){\n");
        xml_.append("   return field+f;\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int {\n");
        xml_.append(" int field(int f);\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Comp {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Comp(int p){\n");
        xml_.append("  field=p;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return (new Comp(2)+new Comp(4)).field(0);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"250\">pkg.Int</a>(<a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"294\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"27\">a</a>, <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"294\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"39\">b</a>) {\n" +
                " return <span class=\"f\"><a title=\"$core.Int*1.$core.Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"97\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"250\">pkg.Int</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"27\">a</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"317\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"39\">b</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"317\">field</a></span></span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"80\">{</a>\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"88\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"97\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"112\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"$core.Int*1.field\" href=\"#"+ExportCst.PREF_REF+"88\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"112\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"147\">field</a>(int <a name=\""+ExportCst.PREF_REF+"157\">f</a>)$intern(<a title=\"$core.Int*1\" href=\"#"+ExportCst.PREF_REF+"80\">$core.Int*1</a>:<a title=\"$core.Int*1.field(int)\" href=\"#"+ExportCst.PREF_REF+"147\">field</a>(<a title=\"$core.Int*1\" href=\"#"+ExportCst.PREF_REF+"80\">$core.Int*1</a>,int)){\n" +
                "   return <span class=\"f\"><span class=\"f\"><a title=\"$core.Int*1.field\" href=\"#"+ExportCst.PREF_REF+"88\">field</a></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"157\">f</a></span></span>;\n" +
                "  }\n" +
                " }</span></span>;\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"250\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"265\">field</a>(int <a name=\""+ExportCst.PREF_REF+"275\">f</a>);\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"294\">pkg.Comp</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"317\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"325\">public Comp(</a>int <a name=\""+ExportCst.PREF_REF+"341\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"317\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"341\">p</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"367\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"389\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"325\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"294\">Comp</a>(<span class=\"f\">2</span>)</span><a title=\"static +(pkg.Comp,pkg.Comp)\" href=\"#"+ExportCst.PREF_REF+"8\">+</a><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"325\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"294\">Comp</a>(<span class=\"f\">4</span>)</span></span>)</span>.<span class=\"f\"><a title=\"pkg.Int.field(int)\" href=\"#"+ExportCst.PREF_REF+"265\">field</a>(<span class=\"f\">0</span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage620Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int[] info2();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new @Annot(info={2})@AnnotTwo(info2={2}) Int(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"51\">pkg.AnnotTwo</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"94\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"109\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"126\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"148\">m</a>(){\n" +
                "  <span class=\"f\">new <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"51\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"201\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"217\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage621Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int[] info2();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new @Annot(info={2})@AnnotTwo(info2={2}) Int(5){\n");
        xml_.append("   public int field;\n");
        xml_.append("   public Int(int p){\n");
        xml_.append("    field=p;\n");
        xml_.append("   }\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"51\">pkg.AnnotTwo</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"94\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"109\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"126\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"148\">m</a>(){\n" +
                "  <span class=\"f\"><a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(int)\" href=\"#"+ExportCst.PREF_REF+"228\">new</a> <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"51\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>(<span class=\"f\">5</span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"202\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"228\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"243\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"243\">p</a></span></span>;\n" +
                "   }\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"279\">field</a>(){\n" +
                "    return <span class=\"n\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage622Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int[] info2();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new @Annot(info={new Int(){public int field(){return 0;}}.field()})@AnnotTwo(info2={2}) Int(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"51\">pkg.AnnotTwo</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"94\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"109\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"126\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"148\">m</a>(){\n" +
                "  <span class=\"f\">new <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"181\">{</a>public int <a name=\""+ExportCst.PREF_REF+"193\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"109\">field</a>()</span></span>}</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"51\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"248\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"264\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage623Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int[] info2();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotThree {\n");
        xml_.append(" int[] info3();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotFour {\n");
        xml_.append(" int[] info4();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new @Annot(info={2})@AnnotTwo(info2={2}) Int(new @AnnotThree(info3={2})@AnnotFour(info4={2}) Int(){public int field(){return 0;}}.field()){\n");
        xml_.append("   public int field;\n");
        xml_.append("   public Int(int p){\n");
        xml_.append("    field=p;\n");
        xml_.append("   }\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"51\">pkg.AnnotTwo</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"95\">pkg.AnnotThree</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"119\">info3</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"141\">pkg.AnnotFour</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"164\">info4</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"185\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"200\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"217\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"239\">m</a>(){\n" +
                "  <span class=\"f\"><a title=\"pkg.Ext..Int*2.pkg.Ext..Int*2(int)\" href=\"#"+ExportCst.PREF_REF+"410\">new</a> <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"n2\">{<span class=\"n2\">2</span>}</span></span>)</span><span class=\"n2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"51\">AnnotTwo</a>(<span class=\"n2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"n2\">{<span class=\"n2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"185\">Int</a>(<span class=\"f\"><span class=\"f\">new <span class=\"f2\">@<a title=\"pkg.AnnotThree\" href=\"#"+ExportCst.PREF_REF+"95\">AnnotThree</a>(<span class=\"f2\"><a title=\"pkg.AnnotThree.info3()\" href=\"#"+ExportCst.PREF_REF+"119\">info3</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotFour\" href=\"#"+ExportCst.PREF_REF+"141\">AnnotFour</a>(<span class=\"f2\"><a title=\"pkg.AnnotFour.info4()\" href=\"#"+ExportCst.PREF_REF+"164\">info4</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"185\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"344\">{</a>public int <a name=\""+ExportCst.PREF_REF+"356\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"200\">field</a>()</span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"384\">{</a>\n" +
                "   public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"400\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"410\">public Int(</a>int <a name=\""+ExportCst.PREF_REF+"425\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*2.field\" href=\"#"+ExportCst.PREF_REF+"400\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"425\">p</a></span></span>;\n" +
                "   }\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"461\">field</a>(){\n" +
                "    return <span class=\"n\"><a title=\"pkg.Ext..Int*2.field\" href=\"#"+ExportCst.PREF_REF+"400\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage624Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new {} @Annot(info={2}) Int(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"50\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"65\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"82\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"104\">m</a>(){\n" +
                "  <span class=\"f\">new {} <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"140\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"156\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage625Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" static int st;\n");
        xml_.append(" static{\n");
        xml_.append("  st++;\n");
        xml_.append(" }\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new {} @Annot(info={2}) interfaces(Int) Int(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"50\">pkg.Int</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">st</a></span>;\n" +
                " static{\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Int.st\" href=\"#"+ExportCst.PREF_REF+"72\">st</a></span>++</span>;\n" +
                " }\n" +
                " int <a name=\""+ExportCst.PREF_REF+"101\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"118\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"140\">m</a>(){\n" +
                "  <span class=\"f\">new {} <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> interfaces(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a>) <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"192\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"208\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage626Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" static int st;\n");
        xml_.append(" static{\n");
        xml_.append("  st++;\n");
        xml_.append(" }\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int v = new {} @Annot(info={2}) interfaces(Int) (){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..$id*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"50\">pkg.Int</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">st</a></span>;\n" +
                " static{\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.Int.st\" href=\"#"+ExportCst.PREF_REF+"72\">st</a></span>++</span>;\n" +
                " }\n" +
                " int <a name=\""+ExportCst.PREF_REF+"101\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"118\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"140\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"151\">v</a> </span>=<span class=\"f\"> new {} <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> interfaces(<a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a>) ()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"197\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"213\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..$id*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage627Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int<T> {\n");
        xml_.append(" T field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int<int> v = new {} @Annot(info={2}) Int<>(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return 0;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"50\">pkg.Int</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"58\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " <a href=\"#"+ExportCst.PREF_REF+"58\">T</a> <a name=\""+ExportCst.PREF_REF+"66\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"83\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"105\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"121\">v</a> </span>=<span class=\"f\"> new {} <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"50\">Int</a><a title=\"pkg.Int"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"156\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"172\">field</a>(){\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage628Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("operator+ pkg.Int(pkg.Comp a, pkg.Comp b) {\n");
        xml_.append(" return new @pkg.Annot(info={1}) (a.field+b.field){\n");
        xml_.append("  int field;\n");
        xml_.append("  public $id(int p){\n");
        xml_.append("   field = p;\n");
        xml_.append("  }\n");
        xml_.append("  public int field(){\n");
        xml_.append("   return field;\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Comp {\n");
        xml_.append(" public int field;\n");
        xml_.append(" public Comp(int p){\n");
        xml_.append("  field=p;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return (new Comp(2)+new Comp(4)).field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"37\">info</a>();\n" +
                "}\n" +
                "operator<a name=\""+ExportCst.PREF_REF+"55\">+</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"261\">pkg.Int</a>(<a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"300\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"74\">a</a>, <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"300\">pkg.Comp</a> <a name=\""+ExportCst.PREF_REF+"86\">b</a>) {\n" +
                " return <span class=\"f\"><a title=\"$core.$id*1.$core.$id*1(int)\" href=\"#"+ExportCst.PREF_REF+"158\">new</a> <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"18\">pkg.Annot</a>(<span class=\"n2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"37\">info</a>=<span class=\"n2\">{<span class=\"n2\">1</span>}</span></span>)</span> (<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"74\">a</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"323\">field</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">b</a></span>.<span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"323\">field</a></span></span></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"141\">{</a>\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"149\">field</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"158\">public $id(</a>int <a name=\""+ExportCst.PREF_REF+"173\">p</a>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a title=\"$core.$id*1.field\" href=\"#"+ExportCst.PREF_REF+"149\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"173\">p</a></span></span>;\n" +
                "  }\n" +
                "  public int <a name=\""+ExportCst.PREF_REF+"208\">field</a>(){\n" +
                "   return <span class=\"f\"><a title=\"$core.$id*1.field\" href=\"#"+ExportCst.PREF_REF+"149\">field</a></span>;\n" +
                "  }\n" +
                " }</span></span>;\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"261\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"276\">field</a>();\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"300\">pkg.Comp</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"323\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"331\">public Comp(</a>int <a name=\""+ExportCst.PREF_REF+"347\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.field\" href=\"#"+ExportCst.PREF_REF+"323\">field</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"347\">p</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"373\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"395\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"331\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"300\">Comp</a>(<span class=\"f\">2</span>)</span><a title=\"static +(pkg.Comp,pkg.Comp)\" href=\"#"+ExportCst.PREF_REF+"55\">+</a><span class=\"f\"><a title=\"pkg.Comp.pkg.Comp(int)\" href=\"#"+ExportCst.PREF_REF+"331\">new</a> <a title=\"pkg.Comp\" href=\"#"+ExportCst.PREF_REF+"300\">Comp</a>(<span class=\"f\">4</span>)</span></span>)</span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"276\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage629Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.AnnotOne {\n");
        xml_.append(" int info1();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int info2();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotThree {\n");
        xml_.append(" int info3();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotFour {\n");
        xml_.append(" int info4();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotFive {\n");
        xml_.append(" int info5();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotSix {\n");
        xml_.append(" int info6();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int v = m((@AnnotOne(info1=7)@AnnotTwo(info2=8) int a,@AnnotThree(info3=9)@AnnotFour(info4=10) int b:@AnnotFive(info5=11)@AnnotSix(info6=12) int)->{return 2 * a * b;},3,4);\n");
        xml_.append("  var met = class(Ext).getDeclaredMethods()[0].getDeclaredAnonymousLambda()[0];\n");
        xml_.append("  var arr = met.getAnnotations();\n");
        xml_.append("  var arrs = met.getAnnotationsParameters();\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int,int> fct,int a, int b){\n");
        xml_.append("  return fct.call(a,b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.AnnotOne</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"31\">info1</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"53\">pkg.AnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"95\">pkg.AnnotThree</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"117\">info3</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.AnnotFour</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"160\">info4</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"182\">pkg.AnnotFive</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"203\">info5</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"225\">pkg.AnnotSix</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"245\">info6</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"262\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"284\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"295\">v</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int,int"+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"650\">m</a>(<span class=\"f\"><span class=\"t\">(<span class=\"f2\">@<a title=\"pkg.AnnotOne\" href=\"#"+ExportCst.PREF_REF+"11\">AnnotOne</a>(<span class=\"f2\"><a title=\"pkg.AnnotOne.info1()\" href=\"#"+ExportCst.PREF_REF+"31\">info1</a>=<span class=\"f2\">7</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"53\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\">8</span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"343\">a</a>,<span class=\"f2\">@<a title=\"pkg.AnnotThree\" href=\"#"+ExportCst.PREF_REF+"95\">AnnotThree</a>(<span class=\"f2\"><a title=\"pkg.AnnotThree.info3()\" href=\"#"+ExportCst.PREF_REF+"117\">info3</a>=<span class=\"f2\">9</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">AnnotFour</a>(<span class=\"f2\"><a title=\"pkg.AnnotFour.info4()\" href=\"#"+ExportCst.PREF_REF+"160\">info4</a>=<span class=\"f2\">10</span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"390\">b</a>:<span class=\"f2\">@<a title=\"pkg.AnnotFive\" href=\"#"+ExportCst.PREF_REF+"182\">AnnotFive</a>(<span class=\"f2\"><a title=\"pkg.AnnotFive.info5()\" href=\"#"+ExportCst.PREF_REF+"203\">info5</a>=<span class=\"f2\">11</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotSix\" href=\"#"+ExportCst.PREF_REF+"225\">AnnotSix</a>(<span class=\"f2\"><a title=\"pkg.AnnotSix.info6()\" href=\"#"+ExportCst.PREF_REF+"245\">info6</a>=<span class=\"f2\">12</span></span>)</span> int)<a name=\""+ExportCst.PREF_REF+"436\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"343\">a</a> </span></span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"390\">b</a></span></span>;}</span></span>,<span class=\"f\">3</span>,<span class=\"f\">4</span>)</span></span>;\n" +
                "  <b title=\"$core.Method\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"470\">met</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"262\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredAnonymousLambda()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  <b title=\"[$core.Annotation\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"550\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"470\">met</a></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <b title=\"[[$core.Annotation\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"584\">arrs</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"470\">met</a></span>.<span class=\"f\">getAnnotationsParameters()</span></span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"650\">m</a>(Fct"+MessagesCdmBase.LT+"int,int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"669\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"677\">a</a>, int <a name=\""+ExportCst.PREF_REF+"684\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"669\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"677\">a</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"684\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage630Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.AnnotOne {\n");
        xml_.append(" int info1();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int info2();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotThree {\n");
        xml_.append(" int info3();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotFour {\n");
        xml_.append(" int info4();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotFive {\n");
        xml_.append(" int info5();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotSix {\n");
        xml_.append(" int info6();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  int v = m((@AnnotOne(info1=7+new Int(){public int field(){return 0;}}.field())@AnnotTwo(info2=8+new Int(){public int field(){return 0;}}.field()) int a,@AnnotThree(info3=9+new Int(){public int field(){return 0;}}.field())@AnnotFour(info4=10+new Int(){public int field(){return 0;}}.field()) int b:@AnnotFive(info5=11+new Int(){public int field(){return 0;}}.field())@AnnotSix(info6=12+new Int(){public int field(){return 0;}}.field()) int)->{return 2 * a * b;},3,4);\n");
        xml_.append("  var met = class(Ext).getDeclaredMethods()[0].getDeclaredAnonymousLambda()[0];\n");
        xml_.append("  var arr = met.getAnnotations();\n");
        xml_.append("  var arrs = met.getAnnotationsParameters();\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" static int m(Fct<int,int,int> fct,int a, int b){\n");
        xml_.append("  return fct.call(a,b);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.AnnotOne</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"31\">info1</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"53\">pkg.AnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"95\">pkg.AnnotThree</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"117\">info3</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"139\">pkg.AnnotFour</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"160\">info4</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"182\">pkg.AnnotFive</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"203\">info5</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"225\">pkg.AnnotSix</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"245\">info6</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"266\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"281\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"298\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"320\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"331\">v</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"int,int,int"+MessagesCdmBase.GT+",int,int)\" href=\"#"+ExportCst.PREF_REF+"980\">m</a>(<span class=\"f\"><span class=\"t\">(<span class=\"f2\">@<a title=\"pkg.AnnotOne\" href=\"#"+ExportCst.PREF_REF+"11\">AnnotOne</a>(<span class=\"f2\"><a title=\"pkg.AnnotOne.info1()\" href=\"#"+ExportCst.PREF_REF+"31\">info1</a>=<span class=\"f2\"><span class=\"f2\">7</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"365\">{</a>public int <a name=\""+ExportCst.PREF_REF+"377\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"53\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\"><span class=\"f2\">8</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"432\">{</a>public int <a name=\""+ExportCst.PREF_REF+"444\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"477\">a</a>,<span class=\"f2\">@<a title=\"pkg.AnnotThree\" href=\"#"+ExportCst.PREF_REF+"95\">AnnotThree</a>(<span class=\"f2\"><a title=\"pkg.AnnotThree.info3()\" href=\"#"+ExportCst.PREF_REF+"117\">info3</a>=<span class=\"f2\"><span class=\"f2\">9</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"508\">{</a>public int <a name=\""+ExportCst.PREF_REF+"520\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotFour\" href=\"#"+ExportCst.PREF_REF+"139\">AnnotFour</a>(<span class=\"f2\"><a title=\"pkg.AnnotFour.info4()\" href=\"#"+ExportCst.PREF_REF+"160\">info4</a>=<span class=\"f2\"><span class=\"f2\">10</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"577\">{</a>public int <a name=\""+ExportCst.PREF_REF+"589\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span> int <a name=\""+ExportCst.PREF_REF+"622\">b</a>:<span class=\"f2\">@<a title=\"pkg.AnnotFive\" href=\"#"+ExportCst.PREF_REF+"182\">AnnotFive</a>(<span class=\"f2\"><a title=\"pkg.AnnotFive.info5()\" href=\"#"+ExportCst.PREF_REF+"203\">info5</a>=<span class=\"f2\"><span class=\"f2\">11</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"653\">{</a>public int <a name=\""+ExportCst.PREF_REF+"665\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotSix\" href=\"#"+ExportCst.PREF_REF+"225\">AnnotSix</a>(<span class=\"f2\"><a title=\"pkg.AnnotSix.info6()\" href=\"#"+ExportCst.PREF_REF+"245\">info6</a>=<span class=\"f2\"><span class=\"f2\">12</span>+<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"266\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"721\">{</a>public int <a name=\""+ExportCst.PREF_REF+"733\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"281\">field</a>()</span></span></span></span>)</span> int)<a name=\""+ExportCst.PREF_REF+"766\">-"+MessagesCdmBase.GT+"</a>{return <span class=\"f\"><span class=\"f\"><span class=\"f\">2 </span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"477\">a</a> </span></span>*<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"622\">b</a></span></span>;}</span></span>,<span class=\"f\">3</span>,<span class=\"f\">4</span>)</span></span>;\n" +
                "  <b title=\"$core.Method\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"800\">met</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"298\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredAnonymousLambda()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "  <b title=\"[$core.Annotation\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"880\">arr</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"800\">met</a></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <b title=\"[[$core.Annotation\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"914\">arrs</a> </span>=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"800\">met</a></span>.<span class=\"f\">getAnnotationsParameters()</span></span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"980\">m</a>(Fct"+MessagesCdmBase.LT+"int,int,int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"999\">fct</a>,int <a name=\""+ExportCst.PREF_REF+"1007\">a</a>, int <a name=\""+ExportCst.PREF_REF+"1014\">b</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"999\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"1007\">a</a></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"1014\">b</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage631Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("annotation pkg.Annot {\n");
        xml_.append(" int[] info();\n");
        xml_.append("}\n");
        xml_.append("annotation pkg.AnnotTwo {\n");
        xml_.append(" int[] info2();\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  new @Annot(info={})@AnnotTwo(info2={2}) Int(){\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return new Int(){public int field(){return 0;}}.field();\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return Class.forName(\"pkg.Ext..Int*1\",false).getAnnotations().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">annotation <a name=\""+ExportCst.PREF_REF+"11\">pkg.Annot</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"30\">info</a>();\n" +
                "}\n" +
                "annotation <a name=\""+ExportCst.PREF_REF+"51\">pkg.AnnotTwo</a> {\n" +
                " int[] <a name=\""+ExportCst.PREF_REF+"73\">info2</a>();\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"94\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"109\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"126\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"148\">m</a>(){\n" +
                "  <span class=\"f\">new <span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"11\">Annot</a>(<span class=\"f2\"><a title=\"pkg.Annot.info()\" href=\"#"+ExportCst.PREF_REF+"30\">info</a>=<span class=\"f2\">{}</span></span>)</span><span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"51\">AnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.AnnotTwo.info2()\" href=\"#"+ExportCst.PREF_REF+"73\">info2</a>=<span class=\"f2\">{<span class=\"f2\">2</span>}</span></span>)</span> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"200\">{</a>\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"216\">field</a>(){\n" +
                "    return <span class=\"n\"><span class=\"n\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"94\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"245\">{</a>public int <a name=\""+ExportCst.PREF_REF+"257\">field</a>(){return <span class=\"n\">0</span>;}}</span></span>.<span class=\"n\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"109\">field</a>()</span></span>;\n" +
                "   }\n" +
                "  }</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Class</span>.<span class=\"f\">forName(<span class=\"f\"><span class=\"s\">\"pkg.Ext..Int*1\"</span></span>,<span class=\"f\">false</span>)</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage632Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int a = 10;\n");
        xml_.append("  int t = switch(a) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return 5;\n");
        xml_.append("   default;\n");
        xml_.append("    return 1;\n");
        xml_.append("  };\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">a</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"67\">t</a> </span>=<span class=\"f\"> <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">a</a></span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    return <span class=\"f\">5</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return <span class=\"n\">1</span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage633Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int a = 9;\n");
        xml_.append("  int t = switch(a) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return 5;\n");
        xml_.append("   default;\n");
        xml_.append("    return 1;\n");
        xml_.append("  };\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">a</a> </span>=<span class=\"f\"> 9</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"66\">t</a> </span>=<span class=\"f\"> <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">a</a></span>) <span class=\"t\">{\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> 10;\n" +
                "    return <span class=\"n\">5</span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "    return <span class=\"f\">1</span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage634Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int t = 0;\n");
        xml_.append("  for (int a: {9,10}) {\n");
        xml_.append("   t += switch[int](a) {\n");
        xml_.append("    case 10;\n");
        xml_.append("     return 5;\n");
        xml_.append("    default;\n");
        xml_.append("     return 1;\n");
        xml_.append("   };\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">t</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"71\">a</a></span>: <span class=\"f\">{<span class=\"f\">9</span>,<span class=\"f\">10</span>}</span>) {\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a> </span>+=<span class=\"f\"> <span class=\"f\"><a title=\"2/2\">switch</a></span>[int](<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"71\">a</a></span>) <span class=\"t\">{\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "     return <span class=\"f\">5</span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "     return <span class=\"f\">1</span>;\n" +
                "   }</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage635Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int t = 0;\n");
        xml_.append("  for (int a: {}) {\n");
        xml_.append("   t += switch[int](a) {\n");
        xml_.append("    case 10;\n");
        xml_.append("     return 5;\n");
        xml_.append("    default;\n");
        xml_.append("     return 1;\n");
        xml_.append("   };\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"53\">t</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"71\">a</a></span>: <span class=\"f\">{}</span>) {\n" +
                "   <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a> </span>+=<span class=\"n\"> <span class=\"n\"><a title=\"0/2\">switch</a></span>[int](<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"71\">a</a></span>) <span class=\"t\">{\n" +
                "    <span class=\"n\"><a title=\"0/1\">case</a></span> 10;\n" +
                "     return <span class=\"n\">5</span>;\n" +
                "    <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "     return <span class=\"n\">1</span>;\n" +
                "   }</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"53\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage636Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static Compo field = new Compo(7);\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  (switch[Compo](10) {\n");
        xml_.append("   default;\n");
        xml_.append("    return that(field);\n");
        xml_.append("  } += new Compo(8));\n");
        xml_.append("  return field.f;\n");
        xml_.append(" }\n");
        xml_.append(" static class Compo {\n");
        xml_.append("  public int f;\n");
        xml_.append("  public Compo(int p){\n");
        xml_.append("   f = p;\n");
        xml_.append("  }\n");
        xml_.append("  operator+ Compo (Compo a, Compo b){\n");
        xml_.append("   return new Compo(a.f+b.f);\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">field</a> </span>=<span class=\"g\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"232\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(){\n" +
                "  <span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"1/1\">switch</a></span>[<a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a>](<span class=\"f\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "    return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>)</span>;\n" +
                "  }</span> </span><a title=\"pkg.Ext..Compo.static +(pkg.Ext..Compo,pkg.Ext..Compo)\" href=\"#"+ExportCst.PREF_REF+"277\">+</a>=<span class=\"f\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"232\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a>(<span class=\"f\">8</span>)</span></span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"227\">f</a></span></span>;\n" +
                " }\n" +
                " static class <a name=\""+ExportCst.PREF_REF+"206\">Compo</a> {\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"227\">f</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"232\">public Compo(</a>int <a name=\""+ExportCst.PREF_REF+"249\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"227\">f</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"249\">p</a></span></span>;\n" +
                "  }\n" +
                "  operator<a name=\""+ExportCst.PREF_REF+"277\">+</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a> (<a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a> <a name=\""+ExportCst.PREF_REF+"292\">a</a>, <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a> <a name=\""+ExportCst.PREF_REF+"301\">b</a>){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"232\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"206\">Compo</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"292\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"227\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"301\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"227\">f</a></span></span></span>)</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage637Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static Compo field = new Compo(7);\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  (switch [ Compo](10) {\n");
        xml_.append("   default;\n");
        xml_.append("    return that(field);\n");
        xml_.append("  } += new Compo(8));\n");
        xml_.append("  return field.f;\n");
        xml_.append(" }\n");
        xml_.append(" static class Compo {\n");
        xml_.append("  public int f;\n");
        xml_.append("  public Compo(int p){\n");
        xml_.append("   f = p;\n");
        xml_.append("  }\n");
        xml_.append("  operator+ Compo (Compo a, Compo b){\n");
        xml_.append("   return new Compo(a.f+b.f);\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">field</a> </span>=<span class=\"g\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(){\n" +
                "  <span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"1/1\">switch</a></span> [ <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>](<span class=\"f\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "    return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>)</span>;\n" +
                "  }</span> </span><a title=\"pkg.Ext..Compo.static +(pkg.Ext..Compo,pkg.Ext..Compo)\" href=\"#"+ExportCst.PREF_REF+"279\">+</a>=<span class=\"f\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\">8</span>)</span></span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>;\n" +
                " }\n" +
                " static class <a name=\""+ExportCst.PREF_REF+"208\">Compo</a> {\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"229\">f</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"234\">public Compo(</a>int <a name=\""+ExportCst.PREF_REF+"251\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"251\">p</a></span></span>;\n" +
                "  }\n" +
                "  operator<a name=\""+ExportCst.PREF_REF+"279\">+</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> (<a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"294\">a</a>, <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"303\">b</a>){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"303\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span></span>)</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage638Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static Compo field = new Compo(7);\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  (switch [  Compo](10) {\n");
        xml_.append("   default;\n");
        xml_.append("    return that(field);\n");
        xml_.append("  } +=new Compo(8));\n");
        xml_.append("  return field.f;\n");
        xml_.append(" }\n");
        xml_.append(" static class Compo {\n");
        xml_.append("  public int f;\n");
        xml_.append("  public Compo(int p){\n");
        xml_.append("   f = p;\n");
        xml_.append("  }\n");
        xml_.append("  operator+ Compo (Compo a, Compo b){\n");
        xml_.append("   return new Compo(a.f+b.f);\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">field</a> </span>=<span class=\"g\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(){\n" +
                "  <span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"1/1\">switch</a></span> [  <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>](<span class=\"f\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "    return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>)</span>;\n" +
                "  }</span> </span><a title=\"pkg.Ext..Compo.static +(pkg.Ext..Compo,pkg.Ext..Compo)\" href=\"#"+ExportCst.PREF_REF+"279\">+</a>=<span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\">8</span>)</span></span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>;\n" +
                " }\n" +
                " static class <a name=\""+ExportCst.PREF_REF+"208\">Compo</a> {\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"229\">f</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"234\">public Compo(</a>int <a name=\""+ExportCst.PREF_REF+"251\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"251\">p</a></span></span>;\n" +
                "  }\n" +
                "  operator<a name=\""+ExportCst.PREF_REF+"279\">+</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> (<a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"294\">a</a>, <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"303\">b</a>){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"303\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span></span>)</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage639Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static Compo field = new Compo(7);\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  (switch  [ Compo](10) {\n");
        xml_.append("   default;\n");
        xml_.append("    return that(field);\n");
        xml_.append("  } +=new Compo(8));\n");
        xml_.append("  return field.f;\n");
        xml_.append(" }\n");
        xml_.append(" static class Compo {\n");
        xml_.append("  public int f;\n");
        xml_.append("  public Compo(int p){\n");
        xml_.append("   f = p;\n");
        xml_.append("  }\n");
        xml_.append("  operator+ Compo (Compo a, Compo b){\n");
        xml_.append("   return new Compo(a.f+b.f);\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">field</a> </span>=<span class=\"g\"> <a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"g\">7</span>)</span></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"85\">m</a>(){\n" +
                "  <span class=\"f\">(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"1/1\">switch</a></span>  [ <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>](<span class=\"f\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "    return <span class=\"f\">that(<span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>)</span>;\n" +
                "  }</span> </span><a title=\"pkg.Ext..Compo.static +(pkg.Ext..Compo,pkg.Ext..Compo)\" href=\"#"+ExportCst.PREF_REF+"279\">+</a>=<span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\">8</span>)</span></span>)</span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.field\" href=\"#"+ExportCst.PREF_REF+"44\">field</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>;\n" +
                " }\n" +
                " static class <a name=\""+ExportCst.PREF_REF+"208\">Compo</a> {\n" +
                "  public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"229\">f</a></span>;\n" +
                "  <a name=\""+ExportCst.PREF_REF+"234\">public Compo(</a>int <a name=\""+ExportCst.PREF_REF+"251\">p</a>){\n" +
                "   <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"251\">p</a></span></span>;\n" +
                "  }\n" +
                "  operator<a name=\""+ExportCst.PREF_REF+"279\">+</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> (<a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"294\">a</a>, <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a> <a name=\""+ExportCst.PREF_REF+"303\">b</a>){\n" +
                "   return <span class=\"f\"><a title=\"pkg.Ext..Compo.pkg.Ext..Compo(int)\" href=\"#"+ExportCst.PREF_REF+"234\">new</a> <a title=\"pkg.Ext..Compo\" href=\"#"+ExportCst.PREF_REF+"208\">Compo</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"294\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"303\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ext..Compo.f\" href=\"#"+ExportCst.PREF_REF+"229\">f</a></span></span></span>)</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage640Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.AnnotTwo {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int a = 10;\n");
        xml_.append("  int t = switch[int:@Annot:@AnnotTwo](a) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return 5;\n");
        xml_.append("   default;\n");
        xml_.append("    return 1;\n");
        xml_.append("  };\n");
        xml_.append("  return class(Ext).getDeclaredMethods()[0].getDeclaredSwitchMethods()[0].getAnnotations().length+\n");
        xml_.append("class(Ext).getDeclaredMethods()[0].getDeclaredSwitchMethods()[0].getAnnotationsParameters().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.Annot</a> {\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"50\">pkg.AnnotTwo</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"80\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"109\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"120\">a</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">t</a> </span>=<span class=\"f\"> <span class=\"p\"><a title=\"1/2\">switch</a></span>[int:<span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"18\">Annot</a></span>:<span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"50\">AnnotTwo</a></span>](<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"120\">a</a></span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    return <span class=\"f\">5</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return <span class=\"n\">1</span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"80\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredSwitchMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>+<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">\n" +
                "class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"80\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredSwitchMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters()</span></span>.<span class=\"f\"><b>length</b></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage641Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append(" int info1();\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.AnnotTwo {\n");
        xml_.append(" int info2();\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int {\n");
        xml_.append(" normal int field(){return 0;}\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  int a = 10;\n");
        xml_.append("  int t = switch[int:@Annot(new Int(){}.field()):@AnnotTwo(new Int(){}.field())](a) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return 5;\n");
        xml_.append("   default;\n");
        xml_.append("    return 1;\n");
        xml_.append("  };\n");
        xml_.append("  return class(Ext).getDeclaredMethods()[0].getDeclaredSwitchMethods()[0].getAnnotations().length+\n");
        xml_.append("class(Ext).getDeclaredMethods()[0].getDeclaredSwitchMethods()[0].getAnnotationsParameters().length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public annotation <a name=\""+ExportCst.PREF_REF+"18\">pkg.Annot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"35\">info1</a>();\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"64\">pkg.AnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"84\">info2</a>();\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"112\">pkg.Int</a> {\n" +
                " normal int <a name=\""+ExportCst.PREF_REF+"134\">field</a>(){return <span class=\"f\">0</span>;}\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"168\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"197\">m</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"208\">a</a> </span>=<span class=\"f\"> 10</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"222\">t</a> </span>=<span class=\"f\"> <span class=\"p\"><a title=\"1/2\">switch</a></span>[int:<span class=\"f2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"18\">Annot</a>(<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"112\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"253\">{</a>}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"134\">field</a>()</span></span>)</span>:<span class=\"f2\">@<a title=\"pkg.AnnotTwo\" href=\"#"+ExportCst.PREF_REF+"64\">AnnotTwo</a>(<span class=\"f2\"><span class=\"f2\">new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"112\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"284\">{</a>}</span></span>.<span class=\"f2\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"134\">field</a>()</span></span>)</span>](<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"208\">a</a></span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    return <span class=\"f\">5</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return <span class=\"n\">1</span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"168\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredSwitchMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span>.<span class=\"f\"><b>length</b></span></span>+<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\">\n" +
                "class(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"168\">Ext</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getDeclaredSwitchMethods()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotationsParameters()</span></span>.<span class=\"f\"><b>length</b></span></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage642Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return staticCall(ExParam<>).inst(2).f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExParam<T> {\n");
        xml_.append(" public T f;\n");
        xml_.append(" public ExParam(T p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public staticCall ExParam<T> inst(T p){\n");
        xml_.append("  return new(p);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExParam\" href=\"#"+ExportCst.PREF_REF+"107\">ExParam</a><a title=\"pkg.ExParam"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>)</span>.<span class=\"f\"><a title=\"pkg.ExParam.staticCall inst(#T)\" href=\"#"+ExportCst.PREF_REF+"201\">inst</a>(<span class=\"f\">2</span>)</span></span>.<span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.ExParam</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"119\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"138\">public ExParam(</a><a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <a name=\""+ExportCst.PREF_REF+"155\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"155\">p</a></span></span>;\n" +
                " }\n" +
                " public staticCall <a title=\"pkg.ExParam\" href=\"#"+ExportCst.PREF_REF+"107\">ExParam</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"119\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"201\">inst</a>(<a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <a name=\""+ExportCst.PREF_REF+"208\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExParam.pkg.ExParam(#T)\" href=\"#"+ExportCst.PREF_REF+"138\">new</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"208\">p</a></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage643Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return staticCall(ExParam <>).inst(2).f;\n");
        xml_.append(" }\n");
        xml_.append("}");
        xml_.append("public class pkg.ExParam<T> {\n");
        xml_.append(" public T f;\n");
        xml_.append(" public ExParam(T p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public staticCall ExParam<T> inst(T p){\n");
        xml_.append("  return new(p);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"42\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExParam\" href=\"#"+ExportCst.PREF_REF+"107\">ExParam</a> <a title=\"pkg.ExParam"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>)</span>.<span class=\"f\"><a title=\"pkg.ExParam.staticCall inst(#T)\" href=\"#"+ExportCst.PREF_REF+"201\">inst</a>(<span class=\"f\">2</span>)</span></span>.<span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a></span></span>;\n" +
                " }\n" +
                "}" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.ExParam</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"119\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"134\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"138\">public ExParam(</a><a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <a name=\""+ExportCst.PREF_REF+"155\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"134\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"155\">p</a></span></span>;\n" +
                " }\n" +
                " public staticCall <a title=\"pkg.ExParam\" href=\"#"+ExportCst.PREF_REF+"107\">ExParam</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"119\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"201\">inst</a>(<a href=\"#"+ExportCst.PREF_REF+"119\">T</a> <a name=\""+ExportCst.PREF_REF+"208\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExParam.pkg.ExParam(#T)\" href=\"#"+ExportCst.PREF_REF+"138\">new</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"208\">p</a></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage644Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class [staticCall pkg.ExParam.inst;] pkg.Ext {\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return staticCall(<>).inst(2).f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExParam<T> {\n");
        xml_.append(" public T f;\n");
        xml_.append(" public ExParam(T p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public staticCall ExParam<T> inst(T p){\n");
        xml_.append("  return new(p);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class [<span class=\"i\">staticCall pkg.ExParam.inst</span>;] <a name=\""+ExportCst.PREF_REF+"44\">pkg.Ext</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"73\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.ExParam"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>)</span>.<span class=\"f\"><a title=\"pkg.ExParam.staticCall inst(#T)\" href=\"#"+ExportCst.PREF_REF+"225\">inst</a>(<span class=\"f\">2</span>)</span></span>.<span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"158\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"131\">pkg.ExParam</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"143\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"143\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"158\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"162\">public ExParam(</a><a href=\"#"+ExportCst.PREF_REF+"143\">T</a> <a name=\""+ExportCst.PREF_REF+"179\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExParam.f\" href=\"#"+ExportCst.PREF_REF+"158\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"179\">p</a></span></span>;\n" +
                " }\n" +
                " public staticCall <a title=\"pkg.ExParam\" href=\"#"+ExportCst.PREF_REF+"131\">ExParam</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"143\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"225\">inst</a>(<a href=\"#"+ExportCst.PREF_REF+"143\">T</a> <a name=\""+ExportCst.PREF_REF+"232\">p</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExParam.pkg.ExParam(#T)\" href=\"#"+ExportCst.PREF_REF+"162\">new</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"232\">p</a></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage645Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("public class pkg.Ext<T> {\n");
        xml_.append(" public T f;\n");
        xml_.append(" public Ext(T p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static int m(){\n");
        xml_.append("  return staticCall(Ext<>).inn(14);\n");
        xml_.append(" }\n");
        xml_.append(" public staticCall T inn(T p){\n");
        xml_.append("  Fct<Ext<T>,T> f = staticCall(Ext<>).$lambda(exmethtwo);\n");
        xml_.append("  return f.call(new Ext<>(p));\n");
        xml_.append(" }\n");
        xml_.append(" public staticCall T exmethtwo(Ext<T> e){\n");
        xml_.append("  return e.f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ext</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"21\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"21\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"36\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"40\">public Ext(</a><a href=\"#"+ExportCst.PREF_REF+"21\">T</a> <a name=\""+ExportCst.PREF_REF+"53\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext.f\" href=\"#"+ExportCst.PREF_REF+"36\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"53\">p</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"88\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"13\">Ext</a><a title=\"pkg.Ext"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>)</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall inn(#T)\" href=\"#"+ExportCst.PREF_REF+"153\">inn</a>(<span class=\"f\">14</span>)</span></span>;\n" +
                " }\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"21\">T</a> <a name=\""+ExportCst.PREF_REF+"153\">inn</a>(<a href=\"#"+ExportCst.PREF_REF+"21\">T</a> <a name=\""+ExportCst.PREF_REF+"159\">p</a>){\n" +
                "  Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"13\">Ext</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"21\">T</a>"+MessagesCdmBase.GT+",<a href=\"#"+ExportCst.PREF_REF+"21\">T</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"179\">f</a> </span>=<span class=\"f\"><span class=\"f\"> staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"13\">Ext</a><a title=\"pkg.Ext"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>)</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall exmethtwo(pkg.Ext"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"276\">$lambda</a>(exmethtwo)</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"179\">f</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a title=\"pkg.Ext.pkg.Ext(#T)\" href=\"#"+ExportCst.PREF_REF+"40\">new</a> <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"13\">Ext</a><a title=\"pkg.Ext"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"159\">p</a></span>)</span>)</span></span>;\n" +
                " }\n" +
                " public staticCall <a href=\"#"+ExportCst.PREF_REF+"21\">T</a> <a name=\""+ExportCst.PREF_REF+"276\">exmethtwo</a>(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"13\">Ext</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"21\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"293\">e</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"293\">e</a></span>.<span class=\"f\"><a title=\"pkg.Ext.f\" href=\"#"+ExportCst.PREF_REF+"36\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage646Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int<T> {\n");
        xml_.append(" T field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext<U> {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  return staticCall(Ext<int>).m(2);\n");
        xml_.append(" }\n");
        xml_.append(" staticCall U m(U p){\n");
        xml_.append("  Int<U> l = new Int<U>(p){\n");
        xml_.append("   public T field;\n");
        xml_.append("   public Int(T p){\n");
        xml_.append("    field = p;\n");
        xml_.append("   }\n");
        xml_.append("   public T field(){\n");
        xml_.append("    return field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"18\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " <a href=\"#"+ExportCst.PREF_REF+"18\">T</a> <a name=\""+ExportCst.PREF_REF+"26\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"43\">pkg.Ext</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"51\">U</a>"+MessagesCdmBase.GT+" {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"68\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"90\">m</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">staticCall(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"43\">Ext</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")</span>.<span class=\"f\"><a title=\"pkg.Ext.staticCall m(#U)\" href=\"#"+ExportCst.PREF_REF+"148\">m</a>(<span class=\"f\">2</span>)</span></span>;\n" +
                " }\n" +
                " staticCall <a href=\"#"+ExportCst.PREF_REF+"51\">U</a> <a name=\""+ExportCst.PREF_REF+"148\">m</a>(<a href=\"#"+ExportCst.PREF_REF+"51\">U</a> <a name=\""+ExportCst.PREF_REF+"152\">p</a>){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"51\">U</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"165\">l</a> </span>=<span class=\"f\"> <a title=\"pkg.Ext..Int*1.pkg.Ext..Int*1(#T)\" href=\"#"+ExportCst.PREF_REF+"206\">new</a> <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"51\">U</a>"+MessagesCdmBase.GT+"(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">p</a></span>)<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"182\">{</a>\n" +
                "   public <a href=\"#"+ExportCst.PREF_REF+"182\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"196\">field</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"206\">public Int(</a><a href=\"#"+ExportCst.PREF_REF+"182\">T</a> <a name=\""+ExportCst.PREF_REF+"219\">p</a>){\n" +
                "    <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"219\">p</a></span></span>;\n" +
                "   }\n" +
                "   public <a href=\"#"+ExportCst.PREF_REF+"182\">T</a> <a name=\""+ExportCst.PREF_REF+"255\">field</a>(){\n" +
                "    return <span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"196\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"165\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"26\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage647Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $annotation pkg.MyAnnot {\n");
        xml_.append(" $int field()1;\n");
        xml_.append("}\n");
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" @MyAnnot\n");
        xml_.append(" $public Ex(){}\n");
        xml_.append(" $public $static $int catching(){\n");
        xml_.append("  $Annotation[] arr = $class(Ex).getDeclaredConstructors()[0].getAnnotations();\n");
        xml_.append("  $if (arr.length != 1i){\n");
        xml_.append("   $return 3i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr) != $class($Annotation[])){\n");
        xml_.append("   $return 2i;\n");
        xml_.append("  }\n");
        xml_.append("  $if ($static($Class).getClass(arr[0i]) != $class(MyAnnot)){\n");
        xml_.append("   $return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  $return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $annotation <a name=\""+ExportCst.PREF_REF+"20\">pkg.MyAnnot</a> {\n" +
                " $int <a name=\""+ExportCst.PREF_REF+"40\">field</a>()<span class=\"f2\">1</span>;\n" +
                "}\n" +
                "$public $class <a name=\""+ExportCst.PREF_REF+"67\">pkg.Ex</a> {\n" +
                " <span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a></span>\n" +
                " <a name=\""+ExportCst.PREF_REF+"87\">$public Ex(</a>){}\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"124\">catching</a>(){\n" +
                "  $Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"152\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> $class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"67\">Ex</a>)</span>.<span class=\"f\">getDeclaredConstructors()</span></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\">getAnnotations()</span></span></span>;\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">arr</a></span>.<span class=\"f\"><b>length</b> </span></span><a title=\"false\">!=</a><span class=\"f\"> 1i</span></span>){\n" +
                "   $return <span class=\"n\">3i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">arr</a></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class($Annotation[])</span></span>){\n" +
                "   $return <span class=\"n\">2i</span>;\n" +
                "  }\n" +
                "  <span class=\"p\">$if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\">$static($Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">arr</a></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>) </span></span><a title=\"false\">!=</a><span class=\"f\"> $class(<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"20\">MyAnnot</a>)</span></span>){\n" +
                "   $return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  $return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage648Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("operator+ pkg.Ex(pkg.Ex a, pkg.Ex b) {\n");
        xml_.append(" return new pkg.Ex(a.f+b.f+switch[int](0){\n");
        xml_.append("  default;\n");
        xml_.append("   public class Loc : pkg.Int {public int field(){return 0;}}\n");
        xml_.append("   return new Loc(){public int field(){return 0;}}.field();\n");
        xml_.append(" });\n");
        xml_.append("}\n");
        xml_.append("public interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int f;\n");
        xml_.append(" public Ex(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Ex e = new Ex(5);\n");
        xml_.append("  Ex g = new Ex(7);\n");
        xml_.append("  return (e+g).f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">operator<a name=\""+ExportCst.PREF_REF+"8\">+</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Ex</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"24\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Ex</a> <a name=\""+ExportCst.PREF_REF+"34\">b</a>) {\n" +
                " return <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"303\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">pkg.Ex</a>(<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"24\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"299\">f</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"34\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"299\">f</a></span></span></span>+<span class=\"f\"><span class=\"f\"><a title=\"1/1\">switch</a></span>[int](<span class=\"f\">0</span>)<span class=\"t\">{\n" +
                "  <span class=\"f\"><a title=\"1/1\">default</a></span>;\n" +
                "   public class <a name=\""+ExportCst.PREF_REF+"109\">Loc</a> : <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"239\">pkg.Int</a> {public int <a name=\""+ExportCst.PREF_REF+"135\">field</a>(){return <span class=\"n\">0</span>;}}\n" +
                "   return <span class=\"f\"><span class=\"f\">new <a title=\"$core.Loc+1\" href=\"#"+ExportCst.PREF_REF+"109\">Loc</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"174\">{</a>public int <a name=\""+ExportCst.PREF_REF+"186\">field</a>(){return <span class=\"f\">0</span>;}}</span></span>.<span class=\"f\"><a title=\"$core.Loc+1.field()\" href=\"#"+ExportCst.PREF_REF+"135\">field</a>()</span></span>;\n" +
                " }</span></span></span>)</span>;\n" +
                "}\n" +
                "public interface <a name=\""+ExportCst.PREF_REF+"239\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"254\">field</a>();\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"278\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"299\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"303\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"317\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"299\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"317\">p</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"352\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"303\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">Ex</a>(<span class=\"f\">5</span>)</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"387\">g</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"303\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"278\">Ex</a>(<span class=\"f\">7</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">e</a></span><a title=\"static +(pkg.Ex,pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"8\">+</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"387\">g</a></span></span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"299\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage649Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("pkgtwo.OuterTwo;\n");
        xml_.append("public class pkg.Outer<C>: OuterTwo<C> {\n");
        xml_.append(" public class Inner {\n");
        xml_.append(" }\n");
        xml_.append(" public class InnerTwo:OuterTwo<C>.InnerThree<C> {\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkgtwo.OuterTwo<B>:OuterThree<B> {\n");
        xml_.append(" public class InnerThree<F>:OuterThree<B>.InnerFive<F> {\n");
        xml_.append(" }\n");
        xml_.append(" public class InnerFour:InnerThree<B> {\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkgtwo.OuterThree<A> {\n");
        xml_.append(" public class InnerFive<E> {\n");
        xml_.append("  public class InnerInner<G> {\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkgtwo.ExFour {\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int method(){\n");
        xml_.append("  var v = new Outer<pkgtwo.ExFour>().new InnerThree<pkgtwo.ExFour>().new InnerInner<pkgtwo.ExFour>();\n");
        xml_.append("  if (static(Class).getClass(v).getName() != \"pkgtwo.OuterThree<pkgtwo.ExFour>..InnerFive<pkgtwo.ExFour>..InnerInner<pkgtwo.ExFour>\") {\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("method");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">pkgtwo.OuterTwo</span>;\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"30\">pkg.Outer</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"40\">C</a>"+MessagesCdmBase.GT+": <a title=\"pkgtwo.OuterTwo\" href=\"#"+ExportCst.PREF_REF+"152\">OuterTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"40\">C</a>"+MessagesCdmBase.GT+" {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"72\">Inner</a> {\n" +
                " }\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"97\">InnerTwo</a>:<a title=\"pkgtwo.OuterTwo\" href=\"#"+ExportCst.PREF_REF+"152\">OuterTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"40\">C</a>"+MessagesCdmBase.GT+".<a title=\"pkgtwo.OuterTwo..InnerThree\" href=\"#"+ExportCst.PREF_REF+"201\">InnerThree</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"40\">C</a>"+MessagesCdmBase.GT+" {\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"152\">pkgtwo.OuterTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"168\">B</a>"+MessagesCdmBase.GT+":<a title=\"pkgtwo.OuterThree\" href=\"#"+ExportCst.PREF_REF+"305\">OuterThree</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"168\">B</a>"+MessagesCdmBase.GT+" {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"201\">InnerThree</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"212\">F</a>"+MessagesCdmBase.GT+":<a title=\"pkgtwo.OuterThree\" href=\"#"+ExportCst.PREF_REF+"305\">OuterThree</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"168\">B</a>"+MessagesCdmBase.GT+".<a title=\"pkgtwo.OuterThree..InnerFive\" href=\"#"+ExportCst.PREF_REF+"342\">InnerFive</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"212\">F</a>"+MessagesCdmBase.GT+" {\n" +
                " }\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"261\">InnerFour</a>:<a title=\"pkgtwo.OuterTwo..InnerThree\" href=\"#"+ExportCst.PREF_REF+"201\">InnerThree</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"168\">B</a>"+MessagesCdmBase.GT+" {\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"305\">pkgtwo.OuterThree</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"323\">A</a>"+MessagesCdmBase.GT+" {\n" +
                " public class <a name=\""+ExportCst.PREF_REF+"342\">InnerFive</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"352\">E</a>"+MessagesCdmBase.GT+" {\n" +
                "  public class <a name=\""+ExportCst.PREF_REF+"372\">InnerInner</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"383\">G</a>"+MessagesCdmBase.GT+" {\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"410\">pkgtwo.ExFour</a> {\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"441\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"469\">method</a>(){\n" +
                "  <b title=\"pkgtwo.OuterThree"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"..InnerFive"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"..InnerInner"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"485\">v</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Outer\" href=\"#"+ExportCst.PREF_REF+"30\">Outer</a>"+MessagesCdmBase.LT+"<a title=\"pkgtwo.ExFour\" href=\"#"+ExportCst.PREF_REF+"410\">pkgtwo.ExFour</a>"+MessagesCdmBase.GT+"()</span>.<span class=\"f\">new <a title=\"pkgtwo.OuterTwo..InnerThree\" href=\"#"+ExportCst.PREF_REF+"201\">InnerThree</a>"+MessagesCdmBase.LT+"<a title=\"pkgtwo.ExFour\" href=\"#"+ExportCst.PREF_REF+"410\">pkgtwo.ExFour</a>"+MessagesCdmBase.GT+"()</span></span>.<span class=\"f\">new <a title=\"pkgtwo.OuterThree..InnerFive..InnerInner\" href=\"#"+ExportCst.PREF_REF+"372\">InnerInner</a>"+MessagesCdmBase.LT+"<a title=\"pkgtwo.ExFour\" href=\"#"+ExportCst.PREF_REF+"410\">pkgtwo.ExFour</a>"+MessagesCdmBase.GT+"()</span></span></span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\">static(Class)</span>.<span class=\"f\">getClass(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"485\">v</a></span>)</span></span>.<span class=\"f\">getName() </span></span><a title=\"false\">!=</a><span class=\"f\"> <span class=\"s\">\"pkgtwo.OuterThree"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"..InnerFive"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"..InnerInner"+MessagesCdmBase.LT+"pkgtwo.ExFour"+MessagesCdmBase.GT+"\"</span></span></span>) {\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage650Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE (5);\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"55\">ONE</a> (<span class=\"g\">5</span>)</span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"47\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"55\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"66\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"47\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"66\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"107\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"135\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage651Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum<T> {\n");
        xml_.append(" ONE < Ex > (5);\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"29\" title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"65\">ONE</a> "+MessagesCdmBase.LT+" <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"117\">Ex</a> "+MessagesCdmBase.GT+" (<span class=\"g\">5</span>)</span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"57\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"65\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"76\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"57\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"76\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"117\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"145\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"29\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage652Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int[] exmeth(){\n");
        xml_.append("  return new int[]{2,4,6,8}[0??????1];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int[] <a name=\""+ExportCst.PREF_REF+"43\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new int[]{<span class=\"f\">2</span>,<span class=\"f\">4</span>,<span class=\"f\">6</span>,<span class=\"f\">8</span>}</span><span class=\"f\">[<span class=\"f\"><span class=\"f\">0</span>??????<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage653Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int[] exmeth(){\n");
        xml_.append("  return new int[]{2,4,6,8}[0??? ???1];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int[] <a name=\""+ExportCst.PREF_REF+"43\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new int[]{<span class=\"f\">2</span>,<span class=\"f\">4</span>,<span class=\"f\">6</span>,<span class=\"f\">8</span>}</span><span class=\"f\">[<span class=\"f\"><span class=\"f\">0</span>??? ???<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage654Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int[] exmeth(){\n");
        xml_.append("  return new int[]{2,4,6,8}[new ExNum(0)??? ???new ExNum(1)];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExNum {\n");
        xml_.append(" public int f;\n");
        xml_.append(" ExNum(int p){\n");
        xml_.append("  f = p;\n");
        xml_.append(" }\n");
        xml_.append(" public static int $(ExNum p){\n");
        xml_.append("  return p.f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int[] <a name=\""+ExportCst.PREF_REF+"43\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">new int[]{<span class=\"f\">2</span>,<span class=\"f\">4</span>,<span class=\"f\">6</span>,<span class=\"f\">8</span>}</span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExNum.pkg.ExNum(int)\" href=\"#"+ExportCst.PREF_REF+"161\">new</a> <a title=\"pkg.ExNum\" href=\"#"+ExportCst.PREF_REF+"133\">ExNum</a>(<span class=\"f\">0</span>)<a title=\"pkg.ExNum.static $(int,pkg.ExNum)\" href=\"#"+ExportCst.PREF_REF+"206\"> </a></span>??? ???<span class=\"f\"><a title=\"pkg.ExNum.static $(int,pkg.ExNum)\" href=\"#"+ExportCst.PREF_REF+"206\"> </a><a title=\"pkg.ExNum.pkg.ExNum(int)\" href=\"#"+ExportCst.PREF_REF+"161\">new</a> <a title=\"pkg.ExNum\" href=\"#"+ExportCst.PREF_REF+"133\">ExNum</a>(<span class=\"f\">1</span>)</span></span>]</span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"133\">pkg.ExNum</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"161\">ExNum(</a>int <a name=\""+ExportCst.PREF_REF+"171\">p</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExNum.f\" href=\"#"+ExportCst.PREF_REF+"157\">f</a> </span>=<span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"171\">p</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"206\">$</a>(<a title=\"pkg.ExNum\" href=\"#"+ExportCst.PREF_REF+"133\">ExNum</a> <a name=\""+ExportCst.PREF_REF+"214\">p</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"214\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExNum.f\" href=\"#"+ExportCst.PREF_REF+"157\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage655Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static long exmeth(){\n");
        xml_.append("  return *new Ex();\n");
        xml_.append(" }\n");
        xml_.append(" public long null(){\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static long <a name=\""+ExportCst.PREF_REF+"42\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><i>*</i><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span></span>;\n" +
                " }\n" +
                " public long <a name=\""+ExportCst.PREF_REF+"88\">null</a>(){\n" +
                "  return <span class=\"f\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage656Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static long exmeth(){\n");
        xml_.append("  return *2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static long <a name=\""+ExportCst.PREF_REF+"42\">exmeth</a>(){\n" +
                "  return <span class=\"f\">*<span class=\"f\">2</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage657Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  for (int i : {1,2}){\n");
        xml_.append("   s += ( [ i ] );\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"75\">i</a></span> : <span class=\"f\">{<span class=\"f\">1</span>,<span class=\"f\">2</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span>+=<span class=\"f\"> ( [ <a href=\"#"+ExportCst.PREF_REF+"75\">i</a> ] )</span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage658Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE ( 5 , 6 );\n");
        xml_.append(" public int field;\n");
        xml_.append(" public int sec;\n");
        xml_.append(" ExEnum(int param, int sec){\n");
        xml_.append("  field=param;\n");
        xml_.append("  this.sec=sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum(int,int)\" href=\"#"+ExportCst.PREF_REF+"78\">ONE</a> ( <span class=\"g\">5 </span>,<span class=\"g\"> 6</span> )</span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">field</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"78\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"89\">param</a>, int <a name=\""+ExportCst.PREF_REF+"100\">sec</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"53\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"89\">param</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><span class=\"g\">this</span>.<span class=\"g\"><a title=\"pkg.ExEnum.sec\" href=\"#"+ExportCst.PREF_REF+"72\">sec</a></span></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"100\">sec</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"155\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"183\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage659Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE ( 5 , 6 ){\n");
        xml_.append("  ONE(int param, int sec){\n");
        xml_.append("   super(param,sec);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" public int field;\n");
        xml_.append(" public int sec;\n");
        xml_.append(" ExEnum(int param, int sec){\n");
        xml_.append("  field=param;\n");
        xml_.append("  this.sec=sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum-ONE.pkg.ExEnum-ONE(int,int)\" href=\"#"+ExportCst.PREF_REF+"43\">ONE</a> ( <span class=\"g\">5 </span>,<span class=\"g\"> 6</span> )</span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"43\">ONE(</a>int <a name=\""+ExportCst.PREF_REF+"51\">param</a>, int <a name=\""+ExportCst.PREF_REF+"62\">sec</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum.pkg.ExEnum(int,int)\" href=\"#"+ExportCst.PREF_REF+"134\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"51\">param</a></span>,<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"62\">sec</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"109\">field</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"128\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"145\">param</a>, int <a name=\""+ExportCst.PREF_REF+"156\">sec</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"109\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"145\">param</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><span class=\"g\">this</span>.<span class=\"g\"><a title=\"pkg.ExEnum.sec\" href=\"#"+ExportCst.PREF_REF+"128\">sec</a></span></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"156\">sec</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"211\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"239\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage660Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE ( 5 , 6) ;\n");
        xml_.append(" public int field;\n");
        xml_.append(" public int sec;\n");
        xml_.append(" ExEnum(int param, int sec){\n");
        xml_.append("  field=param;\n");
        xml_.append("  this.sec=sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum.pkg.ExEnum(int,int)\" href=\"#"+ExportCst.PREF_REF+"78\">ONE</a> ( <span class=\"g\">5 </span>,<span class=\"g\"> 6</span>) </span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">field</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"72\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"78\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"89\">param</a>, int <a name=\""+ExportCst.PREF_REF+"100\">sec</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"53\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"89\">param</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><span class=\"g\">this</span>.<span class=\"g\"><a title=\"pkg.ExEnum.sec\" href=\"#"+ExportCst.PREF_REF+"72\">sec</a></span></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"100\">sec</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"155\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"183\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage661Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE ( 5 , 6) {\n");
        xml_.append("  ONE(int param, int sec){\n");
        xml_.append("   super(param,sec);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" public int field;\n");
        xml_.append(" public int sec;\n");
        xml_.append(" ExEnum(int param, int sec){\n");
        xml_.append("  field=param;\n");
        xml_.append("  this.sec=sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\" title=\"pkg.ExEnum-ONE.pkg.ExEnum-ONE(int,int)\" href=\"#"+ExportCst.PREF_REF+"43\">ONE</a> ( <span class=\"g\">5 </span>,<span class=\"g\"> 6</span>) </span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"43\">ONE(</a>int <a name=\""+ExportCst.PREF_REF+"51\">param</a>, int <a name=\""+ExportCst.PREF_REF+"62\">sec</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum.pkg.ExEnum(int,int)\" href=\"#"+ExportCst.PREF_REF+"134\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"51\">param</a></span>,<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"62\">sec</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"109\">field</a></span>;\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"128\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"134\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"145\">param</a>, int <a name=\""+ExportCst.PREF_REF+"156\">sec</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"109\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"145\">param</a></span></span>;\n" +
                "  <span class=\"g\"><span class=\"g\"><span class=\"g\">this</span>.<span class=\"g\"><a title=\"pkg.ExEnum.sec\" href=\"#"+ExportCst.PREF_REF+"128\">sec</a></span></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"156\">sec</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"211\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"239\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage662Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum<T> {\n");
        xml_.append(" ONE < Ex > (5){\n");
        xml_.append("  ONE(int param){\n");
        xml_.append("   super(param);\n");
        xml_.append("  }\n");
        xml_.append(" };\n");
        xml_.append(" public int field;\n");
        xml_.append(" ExEnum(int param){\n");
        xml_.append("  field=param;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return ExEnum.ONE.ordinal();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"29\" title=\"pkg.ExEnum-ONE.pkg.ExEnum-ONE(int)\" href=\"#"+ExportCst.PREF_REF+"47\">ONE</a> "+MessagesCdmBase.LT+" <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"160\">Ex</a> "+MessagesCdmBase.GT+" (<span class=\"g\">5</span>)</span>{\n" +
                "  <a name=\""+ExportCst.PREF_REF+"47\">ONE(</a>int <a name=\""+ExportCst.PREF_REF+"55\">param</a>){\n" +
                "   <span class=\"g\"><a title=\"pkg.ExEnum.pkg.ExEnum(int)\" href=\"#"+ExportCst.PREF_REF+"108\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"55\">param</a></span>)</span>;\n" +
                "  }\n" +
                " };\n" +
                " public int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"100\">field</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"108\">ExEnum(</a>int <a name=\""+ExportCst.PREF_REF+"119\">param</a>){\n" +
                "  <span class=\"g\"><span class=\"g\"><a title=\"pkg.ExEnum.field\" href=\"#"+ExportCst.PREF_REF+"100\">field</a></span>=<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"119\">param</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"160\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"188\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"29\">ONE</a></span></span>.<span class=\"f\">ordinal()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage663Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch(ExEnum.ONE){\n");
        xml_.append("   case TWO,THREE;\n");
        xml_.append("    return 2;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">THREE</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"56\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"84\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/4\">switch</a></span>(<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a></span></span>){\n" +
                "   <span class=\"n\"><a title=\"0/2\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"30\">TWO</a>,<a title=\"pkg.ExEnum.THREE\" href=\"#"+ExportCst.PREF_REF+"34\">THREE</a>;\n" +
                "    return <span class=\"n\">2</span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a>;\n" +
                "    return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage664Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch(ExEnum.TWO){\n");
        xml_.append("   case TWO,THREE;\n");
        xml_.append("    return 2;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">THREE</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"56\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"84\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/4\">switch</a></span>(<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"30\">TWO</a></span></span>){\n" +
                "   <span class=\"p\"><a title=\"1/2\n0\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"30\">TWO</a>,<a title=\"pkg.ExEnum.THREE\" href=\"#"+ExportCst.PREF_REF+"34\">THREE</a>;\n" +
                "    return <span class=\"f\">2</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a>;\n" +
                "    return <span class=\"n\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage665Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE,TWO,THREE,FOUR;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int w = 0;\n");
        xml_.append("  for(var v:ExEnum.values()){\n");
        xml_.append("   switch(v){\n");
        xml_.append("    case TWO,THREE;\n");
        xml_.append("     w += 2;\n");
        xml_.append("    case ONE;\n");
        xml_.append("     w += 1;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return w;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">THREE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"40\">FOUR</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"61\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"89\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"105\">w</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for(<b title=\"pkg.ExEnum\">var</b> <a name=\""+ExportCst.PREF_REF+"122\">v</a></span>:<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\">values()</span></span>){\n" +
                "   <span class=\"f\"><a title=\"4/4\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"122\">v</a></span>){\n" +
                "    <span class=\"f\"><a title=\"2/2\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"30\">TWO</a>,<a title=\"pkg.ExEnum.THREE\" href=\"#"+ExportCst.PREF_REF+"34\">THREE</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">w</a> </span>+=<span class=\"f\"> 2</span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">w</a> </span>+=<span class=\"f\"> 1</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"105\">w</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage666Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.ExEnum {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch(ExEnum.THREE){\n");
        xml_.append("   case TWO,THREE;\n");
        xml_.append("    return 2;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    return 1;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.ExEnum</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">THREE</a></span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"56\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"84\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/4\">switch</a></span>(<span class=\"f\"><span class=\"f\"><a title=\"pkg.ExEnum\" href=\"#"+ExportCst.PREF_REF+"12\">ExEnum</a></span>.<span class=\"f\"><a title=\"pkg.ExEnum.THREE\" href=\"#"+ExportCst.PREF_REF+"34\">THREE</a></span></span>){\n" +
                "   <span class=\"p\"><a title=\"1/2\n1\">case</a></span> <a title=\"pkg.ExEnum.TWO\" href=\"#"+ExportCst.PREF_REF+"30\">TWO</a>,<a title=\"pkg.ExEnum.THREE\" href=\"#"+ExportCst.PREF_REF+"34\">THREE</a>;\n" +
                "    return <span class=\"f\">2</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.ExEnum.ONE\" href=\"#"+ExportCst.PREF_REF+"26\">ONE</a>;\n" +
                "    return <span class=\"n\">1</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage667Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch(1){\n");
        xml_.append("   case 1??2;\n");
        xml_.append("    return 2;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">1</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 1??2;\n" +
                "    return <span class=\"f\">2</span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage668Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int t: t == 1;\n");
        xml_.append("    return t;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">t</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage669Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int t: t == new ExTwo(){}.f;\n");
        xml_.append("    return t;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int f = 1;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">t</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span><a title=\"true\">==</a><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"157\">ExTwo</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"103\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.ExTwo.f\" href=\"#"+ExportCst.PREF_REF+"181\">f</a></span></span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"157\">pkg.ExTwo</a> {\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"181\">f</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage670Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int t: t == 2 ? t % 5 == 0 : t + 6 == 7;\n");
        xml_.append("    return t;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">t</a>: <span class=\"p\"><span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span><a title=\"false\">==</a><span class=\"f\"> 2 </span></span>?<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span>%<span class=\"n\"> 5 </span></span>==<span class=\"n\"> 0 </span></span>:<span class=\"p\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span>+<span class=\"f\"> 6 </span></span><a title=\"true\">==</a><span class=\"f\"> 7</span></span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage671Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return switch((Object)1){\n");
        xml_.append("   case int t: t == 2 ? t % 5 == 0 : t + 6 == 7;\n");
        xml_.append("    return t;\n");
        xml_.append("   default t;\n");
        xml_.append("    return 0;\n");
        xml_.append("  };\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>)<span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"91\">t</a>: <span class=\"p\"><span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">t</a> </span><a title=\"false\">==</a><span class=\"f\"> 2 </span></span>?<span class=\"n\"><span class=\"n\"><span class=\"n\"> <a href=\"#"+ExportCst.PREF_REF+"91\">t</a> </span>%<span class=\"n\"> 5 </span></span>==<span class=\"n\"> 0 </span></span>:<span class=\"p\"><span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"91\">t</a> </span>+<span class=\"f\"> 6 </span></span><a title=\"true\">==</a><span class=\"f\"> 7</span></span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"91\">t</a></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span> <a title=\"$core.Object\" name=\""+ExportCst.PREF_REF+"153\">t</a>;\n" +
                "    return <span class=\"n\">0</span>;\n" +
                "  }</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage672Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int t: t == new ExTwo(){}.f;\n");
        xml_.append("    return t;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public static final int f = 1;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">t</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a> </span><a title=\"true\">==</a><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"157\">ExTwo</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"103\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.ExTwo.f\" href=\"#"+ExportCst.PREF_REF+"194\">f</a></span></span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">t</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"157\">pkg.ExTwo</a> {\n" +
                " public static final int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"194\">f</a> </span>=<span class=\"g\"> 1</span></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage673Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int tv: tv == 1;\n");
        xml_.append("    return tv;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">tv</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">tv</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">tv</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage674Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case int tv : tv == 1;\n");
        xml_.append("    return tv;\n");
        xml_.append("  }\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"84\">tv</a> : <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">tv</a> </span><a title=\"true\">==</a><span class=\"f\"> 1</span></span>;\n" +
                "    return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"84\">tv</a></span>;\n" +
                "  }\n" +
                "  return <span class=\"n\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage675Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"\";\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case String w: w == w();\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case int v: v == v();\n");
        xml_.append("    t=v+\"plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    t=\"1\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append(" public static int v(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append(" public static int w(){\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"22\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">THREE</a></span>;\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"59\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/4\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"125\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a> </span>==<span class=\"n\"> <a title=\"pkg.Ex.static w()\" href=\"#"+ExportCst.PREF_REF+"322\">w</a>()</span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"178\">v</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">v</a> </span><a title=\"true\">==</a><span class=\"f\"> <a title=\"pkg.Ex.static v()\" href=\"#"+ExportCst.PREF_REF+"283\">v</a>()</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">v</a></span>+<span class=\"f\"><span class=\"s\">\"plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"22\">ONE</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"s\">\"1\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"283\">v</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"322\">w</a>(){\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage676Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"\";\n");
        xml_.append("  switch((Object)2){\n");
        xml_.append("   case String w: w == w();\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case int v: v == v();\n");
        xml_.append("    t=v+\"plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    t=\"1\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append(" public static int v(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append(" public static int w(){\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"22\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">THREE</a></span>;\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"59\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/4\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">2</span></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"125\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a> </span>==<span class=\"n\"> <a title=\"pkg.Ex.static w()\" href=\"#"+ExportCst.PREF_REF+"322\">w</a>()</span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"178\">v</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"178\">v</a> </span><a title=\"false\">==</a><span class=\"f\"> <a title=\"pkg.Ex.static v()\" href=\"#"+ExportCst.PREF_REF+"283\">v</a>()</span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"178\">v</a></span>+<span class=\"n\"><span class=\"s\">\"plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"22\">ONE</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"s\">\"1\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"283\">v</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"322\">w</a>(){\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage677Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"\";\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case String w: w == w();\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case Ex w: w == w();\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case int v: v == v();\n");
        xml_.append("    t=v+\"plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    t=\"1\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append(" public static int v(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append(" public static int w(){\n");
        xml_.append("  return 2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"22\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">THREE</a></span>;\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"59\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/5\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"125\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a> </span>==<span class=\"n\"> <a title=\"pkg.Ex.static w()\" href=\"#"+ExportCst.PREF_REF+"374\">w</a>()</span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <a name=\""+ExportCst.PREF_REF+"177\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"177\">w</a> </span>==<span class=\"n\"> <a title=\"pkg.Ex.static w()\" href=\"#"+ExportCst.PREF_REF+"374\">w</a>()</span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"177\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"230\">v</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"230\">v</a> </span><a title=\"true\">==</a><span class=\"f\"> <a title=\"pkg.Ex.static v()\" href=\"#"+ExportCst.PREF_REF+"335\">v</a>()</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"230\">v</a></span>+<span class=\"f\"><span class=\"s\">\"plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"22\">ONE</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"s\">\"1\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"335\">v</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"374\">w</a>(){\n" +
                "  return <span class=\"n\">2</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage678Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a<=4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&,Ex<int>)=$(ExTwo,Ex<S>,ExTwo<S>)explicit(Ex,Ex<T>)((Ex<int>)one,two);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"false\">"+MessagesCdmBase.LT+"=</a><span class=\"f\">4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"true\n\npkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")=<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+",<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+")<a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\">explicit</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+")(<span class=\"p\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage679Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a<=4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&,Ex<int>)=((Ex<int>)one,two);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"false\">"+MessagesCdmBase.LT+"=</a><span class=\"f\">4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"true\n\npkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\"> </a><a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\"> </a>=(<span class=\"p\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage680Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a> 4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&,Ex<int>)=(b:two,a:(Ex<int>)one);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"n\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"n\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"n\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"true\">"+MessagesCdmBase.GT+"</a><span class=\"f\"> 4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"n\"><span class=\"n\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"n\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"n\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"n\"><span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"n\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"n\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"false\n\npkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\"> </a><a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\"> </a>=(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a>:<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span></span>,<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a>:<span class=\"f\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage681Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int f;\n");
        xml_.append(" public Ex(int f){\n");
        xml_.append("  this.f=f;\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  ExCont e = new(new(5));\n");
        xml_.append("  var f = $lambda(Ex,=,ExTwo);\n");
        xml_.append("  f.call(that(e[0]),new(6));\n");
        xml_.append("  return e[0].f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCont {\n");
        xml_.append(" public Ex[] a;\n");
        xml_.append(" public ExCont(Ex... a){\n");
        xml_.append("  this.a=a;\n");
        xml_.append(" }\n");
        xml_.append(" public Ex this(int i){\n");
        xml_.append("  return a[i];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int i){\n");
        xml_.append("  a[i]=value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExTwo:Ex {\n");
        xml_.append(" public ExTwo(int p){\n");
        xml_.append("  super(p);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"34\">f</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"38\">public Ex(</a>int <a name=\""+ExportCst.PREF_REF+"52\">f</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"34\">f</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"52\">f</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"90\">exmeth</a>(){\n" +
                "  <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"221\">ExCont</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.ExCont.pkg.ExCont(pkg.Ex...)\" href=\"#"+ExportCst.PREF_REF+"251\">new</a>(<span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"38\">new</a>(<span class=\"f\">5</span>)</span>)</span></span>;\n" +
                "  <b title=\"$core.Fct"+MessagesCdmBase.LT+"~pkg.Ex,pkg.ExTwo,pkg.ExTwo"+MessagesCdmBase.GT+"\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"132\">f</a> </span>=<span class=\"f\"> $lambda(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,=,<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"390\">ExTwo</a>)</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"132\">f</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\">that(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">e</a></span><span class=\"f\"><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"301\">[</a><span class=\"f\">0</span><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"301\">]</a></span></span>)</span>,<span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(int)\" href=\"#"+ExportCst.PREF_REF+"406\">new</a>(<span class=\"f\">6</span>)</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"109\">e</a></span><span class=\"f\"><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"301\">[</a><span class=\"f\">0</span><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"301\">]</a></span></span>.<span class=\"f\"><a title=\"pkg.Ex.f\" href=\"#"+ExportCst.PREF_REF+"34\">f</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"221\">pkg.ExCont</a> {\n" +
                " public <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"247\">a</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"251\">public ExCont(</a><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>... <a name=\""+ExportCst.PREF_REF+"271\">a</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"247\">a</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"271\">a</a></span></span>;\n" +
                " }\n" +
                " public <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"301\">this</a>(int <a name=\""+ExportCst.PREF_REF+"310\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"247\">a</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"310\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"345\">this</a>(int <a name=\""+ExportCst.PREF_REF+"354\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"247\">a</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"354\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"390\">pkg.ExTwo</a>:<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> {\n" +
                " <a name=\""+ExportCst.PREF_REF+"406\">public ExTwo(</a>int <a name=\""+ExportCst.PREF_REF+"423\">p</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"38\">super</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"423\">p</a></span>)</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage682Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  Rec r = new Rec(field:10, RecSuper.field2:12);\n");
        xml_.append("  return r.field;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class interfaces(RecSuper) pkg.Rec:RecSuper {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"152\">Rec</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">r</a> </span>=<span class=\"f\"> new <a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"152\">Rec</a>(<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"176\">field</a>:<span class=\"f\">10</span></span>,<span class=\"f\"> <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a>.<a title=\"pkg.RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"215\">field2</a>:<span class=\"f\">12</span></span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">r</a></span>.<span class=\"f\"><a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"176\">field</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "@class interfaces(<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a>) <a name=\""+ExportCst.PREF_REF+"152\">pkg.Rec</a>:<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"176\">field</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"195\">pkg.RecSuper</a> {\n" +
                " int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"215\">field2</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage683Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  $lambda(Rec,new, field, RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class interfaces(RecSuper) pkg.Rec:RecSuper {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\">$lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"141\">Rec</a>,new, <a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"165\">field</a>, <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"184\">RecSuper</a>.<a title=\"pkg.RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"204\">field2</a>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "@class interfaces(<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"184\">RecSuper</a>) <a name=\""+ExportCst.PREF_REF+"141\">pkg.Rec</a>:<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"184\">RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"165\">field</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"184\">pkg.RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"204\">field2</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage684Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  $lambda(Rec,new, field, RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class interfaces( RecSuperSt ; RecSuper ) pkg.Rec:RecSuper:RecSuperSt {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuperSt {\n");
        xml_.append(" static int field3;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\">$lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"156\">Rec</a>,new, <a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"191\">field</a>, <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"210\">RecSuper</a>.<a title=\"pkg.RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"230\">field2</a>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "@class interfaces( <a title=\"pkg.RecSuperSt\" href=\"#"+ExportCst.PREF_REF+"250\">RecSuperSt</a> ; <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"210\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"156\">pkg.Rec</a>:<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"210\">RecSuper</a>:<a title=\"pkg.RecSuperSt\" href=\"#"+ExportCst.PREF_REF+"250\">RecSuperSt</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"191\">field</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"210\">pkg.RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"230\">field2</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"250\">pkg.RecSuperSt</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"279\">field3</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage685Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  $lambda(Rec,new, field, RecSuper.field2, RecSuper2.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class interfaces( RecSuperSt , RecSuperSt2 ; RecSuper , RecSuper2 ) pkg.Rec:RecSuper:RecSuper2:RecSuperSt:RecSuperSt2 {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper2 {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuperSt {\n");
        xml_.append(" static int field3;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuperSt2 {\n");
        xml_.append(" static int field3;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\">$lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"200\">Rec</a>,new, <a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"257\">field</a>, <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"276\">RecSuper</a>.<a title=\"pkg.RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"296\">field2</a>, <a title=\"pkg.RecSuper2\" href=\"#"+ExportCst.PREF_REF+"316\">RecSuper2</a>.<a title=\"pkg.RecSuper2.field2\" href=\"#"+ExportCst.PREF_REF+"337\">field2</a>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "@class interfaces( <a title=\"pkg.RecSuperSt\" href=\"#"+ExportCst.PREF_REF+"357\">RecSuperSt</a> , <a title=\"pkg.RecSuperSt2\" href=\"#"+ExportCst.PREF_REF+"406\">RecSuperSt2</a> ; <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"276\">RecSuper</a> , <a title=\"pkg.RecSuper2\" href=\"#"+ExportCst.PREF_REF+"316\">RecSuper2</a> ) <a name=\""+ExportCst.PREF_REF+"200\">pkg.Rec</a>:<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"276\">RecSuper</a>:<a title=\"pkg.RecSuper2\" href=\"#"+ExportCst.PREF_REF+"316\">RecSuper2</a>:<a title=\"pkg.RecSuperSt\" href=\"#"+ExportCst.PREF_REF+"357\">RecSuperSt</a>:<a title=\"pkg.RecSuperSt2\" href=\"#"+ExportCst.PREF_REF+"406\">RecSuperSt2</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"257\">field</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"276\">pkg.RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"296\">field2</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"316\">pkg.RecSuper2</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"337\">field2</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"357\">pkg.RecSuperSt</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"386\">field3</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"406\">pkg.RecSuperSt2</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"436\">field3</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage686Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  $lambda(Rec,new, field, RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("@class interfaces(  ; RecSuper ) pkg.Rec:RecSuper {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        xml_.append("interface pkg.RecSuper {\n");
        xml_.append(" int field2;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\">$lambda(<a title=\"pkg.Rec\" href=\"#"+ExportCst.PREF_REF+"146\">Rec</a>,new, <a title=\"pkg.Rec.field\" href=\"#"+ExportCst.PREF_REF+"170\">field</a>, <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"189\">RecSuper</a>.<a title=\"pkg.RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"209\">field2</a>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "@class interfaces(  ; <a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"189\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"146\">pkg.Rec</a>:<a title=\"pkg.RecSuper\" href=\"#"+ExportCst.PREF_REF+"189\">RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"170\">field</a></span>;\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"189\">pkg.RecSuper</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"209\">field2</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage687Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  $lambda(Ex.Rec,new, field, Ex.RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\">$lambda(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"151\">Rec</a>,new, <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"172\">field</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"193\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"210\">field2</a>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"193\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"151\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"193\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"172\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"193\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"210\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage688Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().$lambda(Rec,new, field, Ex.RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">$lambda(<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"157\">Rec</a>,new, <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"178\">field</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"199\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"216\">field2</a>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"199\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"157\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"199\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"178\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"199\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"216\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage689Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  return new Ex().exmeth();\n");
        xml_.append(" }\n");
        xml_.append(" public int exmeth (){\n");
        xml_.append("  new Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append(" return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  return <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\"><a title=\"pkg.Ex.exmeth()\" href=\"#"+ExportCst.PREF_REF+"95\">exmeth</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"95\">exmeth</a> (){\n" +
                "  <span class=\"f\">new <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"197\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"218\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"239\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"256\">field2</a>:<span class=\"f\">2</span></span>)</span>;\n" +
                " return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"239\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"197\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"239\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"218\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"239\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"256\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage690Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"153\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"174\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"212\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"153\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"195\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"174\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"195\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"212\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage691Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().$lambda(Rec,new, $id, field, Ex.RecSuper.field2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">$lambda(<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"162\">Rec</a>,new, $id, <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"183\">field</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"204\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"221\">field2</a>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"204\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"162\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"204\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"183\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"204\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"221\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage692Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $final $int FIELD = 2;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return (Ex.FIELD)+FIELD;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">FIELD</a> </span>=<span class=\"g\"> 2</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"86\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a></span>.<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>)</span>+<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage693Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $final $int FIELD = 2;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return ( Ex.FIELD)+FIELD;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">FIELD</a> </span>=<span class=\"g\"> 2</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"86\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"15\">Ex</a></span>.<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>)</span>+<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage694Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.Ex {\n");
        xml_.append(" $public $static $final $int FIELD = 2;\n");
        xml_.append(" $public $static $int exmeth(){\n");
        xml_.append("  $return (FIELD)+FIELD;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = cov(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">$public $class <a name=\""+ExportCst.PREF_REF+"15\">pkg.Ex</a> {\n" +
                " $public $static $final $int <span class=\"g\"><span class=\"g\"><a name=\""+ExportCst.PREF_REF+"53\">FIELD</a> </span>=<span class=\"g\"> 2</span></span>;\n" +
                " $public $static $int <a name=\""+ExportCst.PREF_REF+"86\">exmeth</a>(){\n" +
                "  $return <span class=\"f\"><span class=\"f\">(<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span>)</span>+<span class=\"f\"><a title=\"pkg.Ex.FIELD\" href=\"#"+ExportCst.PREF_REF+"53\">FIELD</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage695Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<S> :pkg.ExTwo<S>{\n");
        xml_.append(" $intern{ getter (S): getter (Ex,S)| getter (ExTwo,T)};\n");
        xml_.append(" public S inst=(S)2i;\n");
        xml_.append(" public (S i){\n");
        xml_.append("  super((S)16i);\n");
        xml_.append("  inst=i;\n");
        xml_.append("  inst=(S)((int)inst+(int)getter((S)((int)i+10)));\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  return new Ex<int>(9).inst;\n");
        xml_.append(" }\n");
        xml_.append(" public S getter(S t){\n");
        xml_.append("  return inst;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T> {\n");
        xml_.append(" public T sec;\n");
        xml_.append(" package (T i){\n");
        xml_.append("  sec=i;\n");
        xml_.append(" }\n");
        xml_.append(" public T getter(T t){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"20\">S</a>"+MessagesCdmBase.GT+" :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>"+MessagesCdmBase.GT+"{\n" +
                " $intern{ getter (<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>): <a title=\"pkg.Ex.getter(#S)\" href=\"#"+ExportCst.PREF_REF+"284\">getter</a> (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)| <a title=\"pkg.ExTwo.getter(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"81\">getter</a> (<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"ExTwo.html#"+ExportCst.PREF_REF+"23\">T</a>)};\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"104\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">2i</span></span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"117\">public (</a><a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"127\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"44\">super</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">16i</span></span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"104\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"127\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"104\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"104\">inst</a></span></span>+<span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.getter(#S)\" href=\"#"+ExportCst.PREF_REF+"284\">getter</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"127\">i</a></span></span>+<span class=\"f\">10</span></span>)</span></span>)</span></span></span>)</span></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"231\">getter</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.pkg.Ex(#S)\" href=\"#"+ExportCst.PREF_REF+"117\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"(<span class=\"f\">9</span>)</span>.<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"104\">inst</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"284\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">S</a> <a name=\""+ExportCst.PREF_REF+"293\">t</a>){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"104\">inst</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage696Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex<V> :pkg.ExTwo<V,V>{\n");
        xml_.append(" public V inst=(V)2i;\n");
        xml_.append(" public (V i){\n");
        xml_.append("  super((V)16i,(V)20i);\n");
        xml_.append("  inst=i;\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo<int,int> e = new Ex<int>(9);\n");
        xml_.append("  return e.getter($id(ExTwo,T),25);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter2(V v){\n");
        xml_.append("  return (V)((int)inst+(int)v);\n");
        xml_.append(" }\n");
        xml_.append(" public V getter3(V v){\n");
        xml_.append("  return (V)((int)inst*(int)v);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<T,U> {\n");
        xml_.append(" public T sec;\n");
        xml_.append(" public U th;\n");
        xml_.append(" package (T i,U j){\n");
        xml_.append("  sec=i;\n");
        xml_.append("  th=j;\n");
        xml_.append(" }\n");
        xml_.append(" public T getter(T t) $intern ( Ex: getter2 (Ex,V); ExTwo: getter (ExTwo,T)){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append(" public U getter(U u) $intern ( Ex: getter3 (Ex,V); ExTwo: getter (ExTwo,U)){\n");
        xml_.append("  return th;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"20\">V</a>"+MessagesCdmBase.GT+" :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>,<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>"+MessagesCdmBase.GT+"{\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">2i</span></span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"63\">public (</a><a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"73\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(#T,#U)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"60\">super</a>(<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">16i</span></span>,<span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">20i</span></span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"73\">i</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"133\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int,int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"160\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(#V)\" href=\"#"+ExportCst.PREF_REF+"63\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"160\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter(#T)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"109\">getter</a>(<span class=\"f\">$id(<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"ExTwo.html#"+ExportCst.PREF_REF+"23\">T</a>)</span>,<span class=\"f\">25</span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"229\">getter2</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"239\">v</a>){\n" +
                "  return <span class=\"f\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"f\">(<span class=\"f\"><span class=\"f\">(int)<span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>+<span class=\"f\">(int)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"239\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"288\">getter3</a>(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a> <a name=\""+ExportCst.PREF_REF+"298\">v</a>){\n" +
                "  return <span class=\"n\">(<a href=\"#"+ExportCst.PREF_REF+"20\">V</a>)<span class=\"n\">(<span class=\"n\"><span class=\"n\">(int)<span class=\"n\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"50\">inst</a></span></span>*<span class=\"n\">(int)<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"298\">v</a></span></span></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">T</a>,<a name=\""+ExportCst.PREF_REF+"25\">U</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"60\">package (</a><a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"71\">i</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"75\">j</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"71\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"75\">j</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"109\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"23\">T</a> <a name=\""+ExportCst.PREF_REF+"118\">t</a>) $intern ( <a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>: <a title=\"pkg.Ex.getter2(#V)\" href=\"Ex.html#"+ExportCst.PREF_REF+"229\">getter2</a> (<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>); <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>: <a title=\"pkg.ExTwo.getter(#T)\" href=\"#"+ExportCst.PREF_REF+"109\">getter</a> (<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"23\">T</a>)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"40\">sec</a></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"204\">getter</a>(<a href=\"#"+ExportCst.PREF_REF+"25\">U</a> <a name=\""+ExportCst.PREF_REF+"213\">u</a>) $intern ( <a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>: <a title=\"pkg.Ex.getter3(#V)\" href=\"Ex.html#"+ExportCst.PREF_REF+"288\">getter3</a> (<a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>,<a href=\"Ex.html#"+ExportCst.PREF_REF+"20\">V</a>); <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>: <a title=\"pkg.ExTwo.getter(#U)\" href=\"#"+ExportCst.PREF_REF+"204\">getter</a> (<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a href=\"#"+ExportCst.PREF_REF+"25\">U</a>)){\n" +
                "  return <span class=\"n\"><a title=\"pkg.ExTwo.th\" href=\"#"+ExportCst.PREF_REF+"55\">th</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }

    @Test
    public void coverage697Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex :pkg.ExTwo{\n");
        xml_.append(" public int inst=2i;\n");
        xml_.append(" public (int i){\n");
        xml_.append("  super(16i);\n");
        xml_.append("  inst=i;\n");
        xml_.append("  inst+=getter();\n");
        xml_.append(" }\n");
        xml_.append(" public static int getter(){\n");
        xml_.append("  ExTwo e = new Ex(9);\n");
        xml_.append("  return e.getter();\n");
        xml_.append(" }\n");
        xml_.append(" public int getter(){\n");
        xml_.append("  return inst;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo {\n");
        xml_.append(" public int sec;\n");
        xml_.append(" package (int i){\n");
        xml_.append("  sec=i;\n");
        xml_.append(" }\n");
        xml_.append(" public int getter() $intern ( Ex: getter (ExTwo); ExTwo: getter (ExTwo)){\n");
        xml_.append("  return sec;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/ExTwo", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("getter");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> :<a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>{\n" +
                " public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"44\">inst</a></span>=<span class=\"f\">2i</span></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"54\">public (</a>int <a name=\""+ExportCst.PREF_REF+"66\">i</a>){\n" +
                "  <span class=\"f\"><a title=\"pkg.ExTwo.pkg.ExTwo(int)\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"43\">super</a>(<span class=\"f\">16i</span>)</span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">i</a></span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>+=<span class=\"f\"><a title=\"pkg.Ex.getter()\" href=\"#"+ExportCst.PREF_REF+"203\">getter</a>()</span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"134\">getter</a>(){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"13\">ExTwo</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"152\">e</a> </span>=<span class=\"f\"> <a title=\"pkg.Ex.pkg.Ex(int)\" href=\"#"+ExportCst.PREF_REF+"54\">new</a> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>(<span class=\"f\">9</span>)</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"152\">e</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.getter()\" href=\"ExTwo.html#"+ExportCst.PREF_REF+"84\">getter</a>()</span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"203\">getter</a>(){\n" +
                "  return <span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"44\">inst</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a> {\n" +
                " public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"37\">sec</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"43\">package (</a>int <a name=\""+ExportCst.PREF_REF+"56\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"37\">sec</a></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"56\">i</a></span></span>;\n" +
                " }\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"84\">getter</a>() $intern ( <a title=\"pkg.Ex\" href=\"Ex.html#"+ExportCst.PREF_REF+"13\">Ex</a>: <a title=\"pkg.ExTwo.getter()\" href=\"#"+ExportCst.PREF_REF+"84\">getter</a> (<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>); <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>: <a title=\"pkg.ExTwo.getter()\" href=\"#"+ExportCst.PREF_REF+"84\">getter</a> (<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>)){\n" +
                "  return <span class=\"f\"><a title=\"pkg.ExTwo.sec\" href=\"#"+ExportCst.PREF_REF+"37\">sec</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.getValue(1));
    }
    @Test
    public void coverage698Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"221\">RecSuper</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"179\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"200\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"221\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"238\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"221\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"179\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"221\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"200\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"221\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"238\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage699Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper , Ex.RecSuper2 ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper , Ex.RecSuper2 ) Rec:RecSuper:RecSuper2 {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper2 {\n");
        xml_.append("  int field4;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"209\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"240\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"278\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> ) <a name=\""+ExportCst.PREF_REF+"209\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a>:<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"240\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"261\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"278\">field2</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"300\">RecSuper2</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"318\">field4</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage700Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().$lambda(Rec,new, $id, field, Ex.RecSuper.field2, interfaces, Ex.RecSuper);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">$lambda(<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"187\">Rec</a>,new, $id, <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"246\">field2</a>, interfaces, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"187\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"208\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"229\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"246\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage701Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().$lambda(Rec,new, $id, field, Ex.RecSuper.field2, interfaces, Ex.RecSuper , Ex.RecSuper2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper , Ex.RecSuper2 ) Rec:RecSuper:RecSuper2 {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper2 {\n");
        xml_.append("  int field4;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">$lambda(<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"217\">Rec</a>,new, $id, <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"248\">field</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"269\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"286\">field2</a>, interfaces, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"269\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"308\">RecSuper2</a>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"269\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"308\">RecSuper2</a> ) <a name=\""+ExportCst.PREF_REF+"217\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"269\">RecSuper</a>:<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"308\">RecSuper2</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"248\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"269\">RecSuper</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"286\">field2</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"308\">RecSuper2</a> {\n" +
                "  int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"326\">field4</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage702Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper , Ex.Rec ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"230\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"188\">Rec</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"188\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"209\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"230\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"247\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"230\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"188\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"230\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"209\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"230\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"247\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage703Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper , Other ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("interface pkg.Other {\n");
        xml_.append(" int field;\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a> , <a title=\"pkg.Other\" href=\"#"+ExportCst.PREF_REF+"269\">Other</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"187\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"208\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"246\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"187\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"229\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"208\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"229\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"246\">field2</a></span>;\n" +
                " }\n" +
                "}\n" +
                "interface <a name=\""+ExportCst.PREF_REF+"269\">pkg.Other</a> {\n" +
                " int <span class=\"n\"><a name=\""+ExportCst.PREF_REF+"286\">field</a></span>;\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage704Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper2 , Ex.RecSuper ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper , Ex.RecSuper2 ) Rec:RecSuper:RecSuper2 {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper2:RecSuper {\n");
        xml_.append("  int field4;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"209\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"240\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"278\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> ) <a name=\""+ExportCst.PREF_REF+"209\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a>:<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"300\">RecSuper2</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"240\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"261\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"278\">field2</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"300\">RecSuper2</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"261\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"327\">field4</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage705Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper2 ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper , Ex.RecSuper2 ) Rec:RecSuper:RecSuper2 {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper2:RecSuper {\n");
        xml_.append("  int field4;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"286\">RecSuper2</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"195\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"226\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"247\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"264\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"247\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"286\">RecSuper2</a> ) <a name=\""+ExportCst.PREF_REF+"195\">Rec</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"247\">RecSuper</a>:<a title=\"pkg.Ex..RecSuper2\" href=\"#"+ExportCst.PREF_REF+"286\">RecSuper2</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"226\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"247\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"264\">field2</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"286\">RecSuper2</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"247\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"313\">field4</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage706Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth (){\n");
        xml_.append("  new Ex().new interfaces( Ex.RecSuper , Ex.RecSuperCl ) Rec( field:1, Ex.RecSuper.field2:2);\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" @class interfaces( Ex.RecSuper ) Rec:RecSuperCl:RecSuper {\n");
        xml_.append("  int field;\n");
        xml_.append(" }\n");
        xml_.append(" interface RecSuper {\n");
        xml_.append("  int field2;\n");
        xml_.append(" }\n");
        xml_.append(" class RecSuperCl{\n");
        xml_.append("  int fieldCl;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a> (){\n" +
                "  <span class=\"f\"><span class=\"f\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>.<span class=\"f\">new interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"248\">RecSuper</a> , <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuperCl\" href=\"#"+ExportCst.PREF_REF+"283\">RecSuperCl</a> ) <a title=\"pkg.Ex..Rec\" href=\"#"+ExportCst.PREF_REF+"195\">Rec</a>(<span class=\"f\"> <a title=\"pkg.Ex..Rec.field\" href=\"#"+ExportCst.PREF_REF+"227\">field</a>:<span class=\"f\">1</span></span>,<span class=\"f\"> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"248\">RecSuper</a>.<a title=\"pkg.Ex..RecSuper.field2\" href=\"#"+ExportCst.PREF_REF+"265\">field2</a>:<span class=\"f\">2</span></span>)</span></span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " @class interfaces( <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>.<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"248\">RecSuper</a> ) <a name=\""+ExportCst.PREF_REF+"195\">Rec</a>:<a title=\"pkg.Ex..RecSuperCl\" href=\"#"+ExportCst.PREF_REF+"283\">RecSuperCl</a>:<a title=\"pkg.Ex..RecSuper\" href=\"#"+ExportCst.PREF_REF+"248\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"227\">field</a></span>;\n" +
                " }\n" +
                " interface <a name=\""+ExportCst.PREF_REF+"248\">RecSuper</a> {\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"265\">field2</a></span>;\n" +
                " }\n" +
                " class <a name=\""+ExportCst.PREF_REF+"283\">RecSuperCl</a>{\n" +
                "  int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"301\">fieldCl</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage707Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("static pkg.ExTwo.*;\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append(" int infoIntOne()2i;\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append(" int infoIntTwo()4i;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append("\n");
        xml_.append(" public int this(int p){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int p, @MyAnnot(infoIntOne=((int x:int)->x).call(1))@MyAnnotTwo(infoIntTwo=3i) int value){\n");
        xml_.append("  (switch(p){default;return 0;});\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Annotation[] arr = class(Ex).getDeclaredMethods()[1i].getDeclaredSwitchMethods()[0i].getAnnotationsSupp();\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">static pkg.ExTwo.*</span>;\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"38\">pkg.MyAnnot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"57\">infoIntOne</a>()<span class=\"n2\">2i</span>;\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"93\">pkg.MyAnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"115\">infoIntTwo</a>()<span class=\"n2\">4i</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Ex</a> {\n" +
                "\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"168\">this</a>(int <a name=\""+ExportCst.PREF_REF+"177\">p</a>){\n" +
                "  return <span class=\"n\">0i</span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"210\">this</a>(int <a name=\""+ExportCst.PREF_REF+"219\">p</a>, <span class=\"n2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"38\">MyAnnot</a>(<span class=\"n2\"><a title=\"pkg.MyAnnot.infoIntOne()\" href=\"#"+ExportCst.PREF_REF+"57\">infoIntOne</a>=<span class=\"n2\"><span class=\"n2\">(<span class=\"n2\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"248\">x</a>:int)<a name=\""+ExportCst.PREF_REF+"254\">-"+MessagesCdmBase.GT+"</a><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"248\">x</a></span></span></span>)</span>.<span class=\"n2\"><b>call</b>(<span class=\"n2\">1</span>)</span></span></span>)</span><span class=\"n2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"93\">MyAnnotTwo</a>(<span class=\"n2\"><a title=\"pkg.MyAnnotTwo.infoIntTwo()\" href=\"#"+ExportCst.PREF_REF+"115\">infoIntTwo</a>=<span class=\"n2\">3i</span></span>)</span> int value){\n" +
                "  <span class=\"n\">(<span class=\"n\"><span class=\"n\"><a title=\"0/1\">switch</a></span>(<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"219\">p</a></span>)<span class=\"t\">{<span class=\"n\"><a title=\"0/1\">default</a></span>;return <span class=\"n\">0</span>;}</span></span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"362\">exmeth</a>(){\n" +
                "  Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"387\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"146\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">1i</span>]</span></span>.<span class=\"f\">getDeclaredSwitchMethods()</span></span><span class=\"f\">[<span class=\"f\">0i</span>]</span></span>.<span class=\"f\">getAnnotationsSupp()</span></span></span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage708Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("static pkg.ExTwo.*;\n");
        xml_.append("public annotation pkg.MyAnnot {\n");
        xml_.append(" int infoIntOne()2i;\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.MyAnnotTwo {\n");
        xml_.append(" int infoIntTwo()4i;\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append("\n");
        xml_.append(" public int this(int p){\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int p, @MyAnnot(infoIntOne=((int x:int)->x).call(1))@MyAnnotTwo(infoIntTwo=3i) int value){\n");
        xml_.append("  (switch(p){default;return 0;});\n");
        xml_.append(" }\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  Annotation[] arr = class(Ex).getDeclaredMethods()[1i].getAnnotationsSupp();\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\"><span class=\"i\">static pkg.ExTwo.*</span>;\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"38\">pkg.MyAnnot</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"57\">infoIntOne</a>()<span class=\"f2\">2i</span>;\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"93\">pkg.MyAnnotTwo</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"115\">infoIntTwo</a>()<span class=\"f2\">4i</span>;\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"146\">pkg.Ex</a> {\n" +
                "\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"168\">this</a>(int <a name=\""+ExportCst.PREF_REF+"177\">p</a>){\n" +
                "  return <span class=\"n\">0i</span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"210\">this</a>(int <a name=\""+ExportCst.PREF_REF+"219\">p</a>, <span class=\"f2\">@<a title=\"pkg.MyAnnot\" href=\"#"+ExportCst.PREF_REF+"38\">MyAnnot</a>(<span class=\"f2\"><a title=\"pkg.MyAnnot.infoIntOne()\" href=\"#"+ExportCst.PREF_REF+"57\">infoIntOne</a>=<span class=\"f2\"><span class=\"f2\">(<span class=\"f2\"><span class=\"t\">(int <a name=\""+ExportCst.PREF_REF+"248\">x</a>:int)<a name=\""+ExportCst.PREF_REF+"254\">-"+MessagesCdmBase.GT+"</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"248\">x</a></span></span></span>)</span>.<span class=\"f2\"><b>call</b>(<span class=\"f2\">1</span>)</span></span></span>)</span><span class=\"f2\">@<a title=\"pkg.MyAnnotTwo\" href=\"#"+ExportCst.PREF_REF+"93\">MyAnnotTwo</a>(<span class=\"f2\"><a title=\"pkg.MyAnnotTwo.infoIntTwo()\" href=\"#"+ExportCst.PREF_REF+"115\">infoIntTwo</a>=<span class=\"f2\">3i</span></span>)</span> int value){\n" +
                "  <span class=\"n\">(<span class=\"n\"><span class=\"n\"><a title=\"0/1\">switch</a></span>(<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"219\">p</a></span>)<span class=\"t\">{<span class=\"n\"><a title=\"0/1\">default</a></span>;return <span class=\"n\">0</span>;}</span></span>)</span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"362\">exmeth</a>(){\n" +
                "  Annotation[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"387\">arr</a> </span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"> class(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"146\">Ex</a>)</span>.<span class=\"f\">getDeclaredMethods()</span></span><span class=\"f\">[<span class=\"f\">1i</span>]</span></span>.<span class=\"f\">getAnnotationsSupp()</span></span></span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage709Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[new ExCont(v:0)] = 5;\n");
        xml_.append("  (e[$id(Ex,ExCont,[]=,Ex,ExCont),new ExCont(v:0)])++;\n");
        xml_.append("  return e[new ExCont(v:0)];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public @class pkg.ExCont {public int v;}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(ExCont p)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p.v];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(ExCont p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[p.v] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"240\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"240\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"346\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"223\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[]=(pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"346\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"292\">[</a><span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"240\">Ex</a>,<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a>,[]=,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"240\">Ex</a>,<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a>)</span>,<span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"223\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"292\">]</a></span></span>)</span>+<a title=\"pkg.Ex.[]=(pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"346\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"292\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"223\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont)\" href=\"#"+ExportCst.PREF_REF+"292\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public @class <a name=\""+ExportCst.PREF_REF+"200\">pkg.ExCont</a> {public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"223\">v</a></span>;}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"240\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"263\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"292\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a> <a name=\""+ExportCst.PREF_REF+"304\">p</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"263\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"304\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"223\">v</a></span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"346\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"200\">ExCont</a> <a name=\""+ExportCst.PREF_REF+"358\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"263\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"358\">p</a></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"223\">v</a></span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage710Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[new ExCont(v:0)] = 5;\n");
        xml_.append("  (e[$id(Ex,ExCont...,[]=,Ex,ExCont...),new ExCont(v:0)])++;\n");
        xml_.append("  return e[new ExCont(v:0)];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public @class pkg.ExCont {public int v;}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(ExCont... p)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p[0].v];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(ExCont... p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[p[0].v] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"246\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"246\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"358\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"229\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"358\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"298\">[</a><span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"246\">Ex</a>,<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>...,[]=,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"246\">Ex</a>,<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>...)</span>,<span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"229\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"298\">]</a></span></span>)</span>+<a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"358\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"298\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"229\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"298\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public @class <a name=\""+ExportCst.PREF_REF+"206\">pkg.ExCont</a> {public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"229\">v</a></span>;}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"246\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"269\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"298\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>... <a name=\""+ExportCst.PREF_REF+"313\">p</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"269\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"313\">p</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"229\">v</a></span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"358\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"206\">ExCont</a>... <a name=\""+ExportCst.PREF_REF+"373\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"269\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"373\">p</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"229\">v</a></span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage711Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[q:0,p:1] = 5;\n");
        xml_.append("  e[q:1,p:0]++;\n");
        xml_.append("  return e[q:1,p:0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(int p, int q)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p-q+1];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int q,int p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[q-p+1] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"144\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"144\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"256\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"265\">q</a>:<span class=\"f\">0</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"271\">p</a>:<span class=\"f\">1</span></span><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"256\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"196\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"212\">q</a><a href=\"#"+ExportCst.PREF_REF+"265\">:</a><span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">p</a><a href=\"#"+ExportCst.PREF_REF+"271\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"196\">]</a></span></span>+<a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"256\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"196\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"212\">q</a>:<span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">p</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"196\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"144\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"167\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"196\">this</a>(int <a name=\""+ExportCst.PREF_REF+"205\">p</a>, int <a name=\""+ExportCst.PREF_REF+"212\">q</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"167\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">p</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"212\">q</a></span></span>+<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"256\">this</a>(int <a name=\""+ExportCst.PREF_REF+"265\">q</a>,int <a name=\""+ExportCst.PREF_REF+"271\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"167\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"265\">q</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"271\">p</a></span></span>+<span class=\"f\">1</span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage712Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[q:0,p:1] = 5;\n");
        xml_.append("  e[$id(Ex,int,int,[]=,Ex,int,int),q:1,p:0]++;\n");
        xml_.append("  return e[q:1,p:0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(int p, int q)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p-q+1];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int q,int p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[q-p+1] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"175\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"175\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"287\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"296\">q</a>:<span class=\"f\">0</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"302\">p</a>:<span class=\"f\">1</span></span><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"287\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"227\">[</a><span class=\"f\">$id(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"175\">Ex</a>,int,int,[]=,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"175\">Ex</a>,int,int)</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"243\">q</a><a href=\"#"+ExportCst.PREF_REF+"296\">:</a><span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"236\">p</a><a href=\"#"+ExportCst.PREF_REF+"302\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"227\">]</a></span></span>+<a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"287\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"227\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"243\">q</a>:<span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"236\">p</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"227\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"175\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"198\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"227\">this</a>(int <a name=\""+ExportCst.PREF_REF+"236\">p</a>, int <a name=\""+ExportCst.PREF_REF+"243\">q</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"198\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"236\">p</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"243\">q</a></span></span>+<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"287\">this</a>(int <a name=\""+ExportCst.PREF_REF+"296\">q</a>,int <a name=\""+ExportCst.PREF_REF+"302\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"198\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"296\">q</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"302\">p</a></span></span>+<span class=\"f\">1</span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage713Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[q:0,p:1] = 5;\n");
        xml_.append("  e[$id([]=,Ex,int,int),q:1,p:0]++;\n");
        xml_.append("  return e[q:1,p:0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(int p, int q)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p-q+1];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int q,int p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[q-p+1] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"164\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"164\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"276\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"285\">q</a>:<span class=\"f\">0</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"291\">p</a>:<span class=\"f\">1</span></span><a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"276\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"216\">[</a><span class=\"f\">$id([]=,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"164\">Ex</a>,int,int)</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"232\">q</a><a href=\"#"+ExportCst.PREF_REF+"285\">:</a><span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"225\">p</a><a href=\"#"+ExportCst.PREF_REF+"291\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"216\">]</a></span></span>+<a title=\"pkg.Ex.[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"276\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"216\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"232\">q</a>:<span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"225\">p</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"216\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"164\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"187\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"216\">this</a>(int <a name=\""+ExportCst.PREF_REF+"225\">p</a>, int <a name=\""+ExportCst.PREF_REF+"232\">q</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"187\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"225\">p</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"232\">q</a></span></span>+<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"276\">this</a>(int <a name=\""+ExportCst.PREF_REF+"285\">q</a>,int <a name=\""+ExportCst.PREF_REF+"291\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"187\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"285\">q</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"291\">p</a></span></span>+<span class=\"f\">1</span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage714Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[q:0,p:1] = 5;\n");
        xml_.append("  e[$id([]=,~,Ex,int,int),q:1,p:0]++;\n");
        xml_.append("  return e[q:1,p:0];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(int p, int q)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p-q+1];\n");
        xml_.append(" }\n");
        xml_.append(" public that void this(int q,int p, int value)\n");
        xml_.append(" {\n");
        xml_.append("  inst[q-p+1] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"166\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"166\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.~[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"283\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"292\">q</a>:<span class=\"f\">0</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"298\">p</a>:<span class=\"f\">1</span></span><a title=\"pkg.Ex.~[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"283\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"218\">[</a><span class=\"f\">$id([]=,~,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"166\">Ex</a>,int,int)</span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"234\">q</a><a href=\"#"+ExportCst.PREF_REF+"292\">:</a><span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"227\">p</a><a href=\"#"+ExportCst.PREF_REF+"298\">:</a><span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"218\">]</a></span></span>+<a title=\"pkg.Ex.~[]=(int,int)\" href=\"#"+ExportCst.PREF_REF+"283\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"218\">[</a><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"234\">q</a>:<span class=\"f\">1</span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"227\">p</a>:<span class=\"f\">0</span></span><a title=\"pkg.Ex.[](int,int)\" href=\"#"+ExportCst.PREF_REF+"218\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"166\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"189\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"218\">this</a>(int <a name=\""+ExportCst.PREF_REF+"227\">p</a>, int <a name=\""+ExportCst.PREF_REF+"234\">q</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"189\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"227\">p</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"234\">q</a></span></span>+<span class=\"f\">1</span></span>]</span></span>;\n" +
                " }\n" +
                " public that void <a name=\""+ExportCst.PREF_REF+"283\">this</a>(int <a name=\""+ExportCst.PREF_REF+"292\">q</a>,int <a name=\""+ExportCst.PREF_REF+"298\">p</a>, int value)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"189\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"292\">q</a></span>-<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"298\">p</a></span></span>+<span class=\"f\">1</span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage715Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Apply {\n");
        xml_.append(" public static int test(){\n");
        xml_.append("  Ex e = new Ex();\n");
        xml_.append("  e[new ExCont(v:0)] = 5;\n");
        xml_.append("  (e[$id([]=,Ex,ExCont...),new ExCont(v:0)])++;\n");
        xml_.append("  return e[new ExCont(v:0)];\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public @class pkg.ExCont {public int v;}\n");
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public int[] inst=new int[2];\n");
        xml_.append(" public int this(ExCont... p)\n");
        xml_.append(" {\n");
        xml_.append("  return inst[p[0].v];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(ExCont... p)\n");
        xml_.append(" {\n");
        xml_.append("  inst[p[0].v] = value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("test");
        calculateNormal("pkg.Apply", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Apply</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">test</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"233\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">e</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"233\">Ex</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"345\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"216\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"345\">]</a> </span></span>=<span class=\"f\"> 5</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\">(<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"285\">[</a><span class=\"f\">$id([]=,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"233\">Ex</a>,<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>...)</span>,<span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"216\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"285\">]</a></span></span>)</span>+<a title=\"pkg.Ex.[]=(pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"345\">+</a></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"57\">e</a></span><span class=\"f\"><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"285\">[</a><span class=\"f\">new <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>(<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"216\">v</a>:<span class=\"f\">0</span></span>)</span><a title=\"pkg.Ex.[](pkg.ExCont...)\" href=\"#"+ExportCst.PREF_REF+"285\">]</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public @class <a name=\""+ExportCst.PREF_REF+"193\">pkg.ExCont</a> {public int <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"216\">v</a></span>;}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"233\">pkg.Ex</a> {\n" +
                " public int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"256\">inst</a></span>=<span class=\"f\">new int[<span class=\"f\">2</span>]</span></span>;\n" +
                " public int <a name=\""+ExportCst.PREF_REF+"285\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>... <a name=\""+ExportCst.PREF_REF+"300\">p</a>)\n" +
                " {\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"256\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"300\">p</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"216\">v</a></span></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"345\">this</a>(<a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"193\">ExCont</a>... <a name=\""+ExportCst.PREF_REF+"360\">p</a>)\n" +
                " {\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.Ex.inst\" href=\"#"+ExportCst.PREF_REF+"256\">inst</a></span><span class=\"f\">[<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"360\">p</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span>.<span class=\"f\"><a title=\"pkg.ExCont.v\" href=\"#"+ExportCst.PREF_REF+"216\">v</a></span></span>] </span></span>=<span class=\"f\"> <b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage716Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int m(){\n");
        xml_.append("  m((Ext a:Ext)->{\n");
        xml_.append("  enum Intern{\n");
        xml_.append("   PLUS_ONE((Ext b:Ext) -> {return b;}){\n");
        xml_.append("    PLUS_ONE(Fct<Ext,Ext> p){\n");
        xml_.append("     super(p);\n");
        xml_.append("    }\n");
        xml_.append("   },\n");
        xml_.append("   MULT_TWO((Ext b:Ext) -> {return b;});\n");
        xml_.append("   Fct<Ext,Ext> fct;\n");
        xml_.append("   Intern(Fct<Ext,Ext> p){\n");
        xml_.append("    fct = p;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return a;\n");
        xml_.append("  }\n");
        xml_.append("  ,new Ext());\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append(" static Ext m(Fct<Ext,Ext> fct,Ext a){\n");
        xml_.append("  return fct.call(a);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">class <a name=\""+ExportCst.PREF_REF+"6\">pkg.Ext</a> {\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"28\">m</a>(){\n" +
                "  <span class=\"f\"><a title=\"pkg.Ext.static m($core.Fct"+MessagesCdmBase.LT+"pkg.Ext,pkg.Ext"+MessagesCdmBase.GT+",pkg.Ext)\" href=\"#"+ExportCst.PREF_REF+"334\">m</a>(<span class=\"f\"><span class=\"t\">(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <a name=\""+ExportCst.PREF_REF+"42\">a</a>:<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>)<a name=\""+ExportCst.PREF_REF+"48\">-"+MessagesCdmBase.GT+"</a>{\n" +
                "  enum <a name=\""+ExportCst.PREF_REF+"59\">Intern</a>{\n" +
                "   <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"70\" title=\"pkg.Ext..Intern+1-PLUS_ONE.pkg.Ext..Intern+1-PLUS_ONE($core.Fct"+MessagesCdmBase.LT+"pkg.Ext,pkg.Ext"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"112\">PLUS_ONE</a>(<span class=\"g\"><span class=\"t\">(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <a name=\""+ExportCst.PREF_REF+"84\">b</a>:<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>) <a name=\""+ExportCst.PREF_REF+"91\">-"+MessagesCdmBase.GT+"</a> {return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"84\">b</a></span>;}</span></span>)</span>{\n" +
                "    <a name=\""+ExportCst.PREF_REF+"112\">PLUS_ONE(</a>Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>,<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"134\">p</a>){\n" +
                "     <span class=\"g\"><a title=\"pkg.Ext..Intern+1.pkg.Ext..Intern+1($core.Fct"+MessagesCdmBase.LT+"pkg.Ext,pkg.Ext"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"230\">super</a>(<span class=\"g\"><a href=\"#"+ExportCst.PREF_REF+"134\">p</a></span>)</span>;\n" +
                "    }\n" +
                "   },\n" +
                "   <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"168\" title=\"pkg.Ext..Intern+1.pkg.Ext..Intern+1($core.Fct"+MessagesCdmBase.LT+"pkg.Ext,pkg.Ext"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"230\">MULT_TWO</a>(<span class=\"g\"><span class=\"t\">(<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <a name=\""+ExportCst.PREF_REF+"182\">b</a>:<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>) <a name=\""+ExportCst.PREF_REF+"189\">-"+MessagesCdmBase.GT+"</a> {return <span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"182\">b</a></span>;}</span></span>)</span>;\n" +
                "   Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>,<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.GT+" <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"222\">fct</a></span>;\n" +
                "   <a name=\""+ExportCst.PREF_REF+"230\">Intern(</a>Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>,<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"250\">p</a>){\n" +
                "    <span class=\"g\"><span class=\"g\"><a title=\"pkg.Ext..Intern+1.fct\" href=\"#"+ExportCst.PREF_REF+"222\">fct</a> </span>=<span class=\"g\"> <a href=\"#"+ExportCst.PREF_REF+"250\">p</a></span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"42\">a</a></span>;\n" +
                "  }</span>\n" +
                "  </span>,<span class=\"f\">new <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>()</span>)</span>;\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                " static <a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <a name=\""+ExportCst.PREF_REF+"334\">m</a>(Fct"+MessagesCdmBase.LT+"<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>,<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"349\">fct</a>,<a title=\"pkg.Ext\" href=\"#"+ExportCst.PREF_REF+"6\">Ext</a> <a name=\""+ExportCst.PREF_REF+"357\">a</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"349\">fct</a></span>.<span class=\"f\"><b>call</b>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"357\">a</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage717Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" enum MyEnum{ONE(\n");
        xml_.append("  switch[Ex](10) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return new Ex();\n");
        xml_.append("   default;\n");
        xml_.append("    return new Ex();\n");
        xml_.append("  }\n");
        xml_.append(" );MyEnum(Ex t){}}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " enum <a name=\""+ExportCst.PREF_REF+"28\">MyEnum</a>{<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"35\" title=\"pkg.Ex..MyEnum.pkg.Ex..MyEnum(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"132\">ONE</a>(\n" +
                "  <span class=\"g\"><span class=\"p\"><a title=\"1/2\">switch</a></span>[<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>](<span class=\"g\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    return <span class=\"g\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return <span class=\"n\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "  }</span></span>\n" +
                " )</span>;<a name=\""+ExportCst.PREF_REF+"132\">MyEnum(</a><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"142\">t</a>){}}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"167\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage718Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" enum MyEnum{ONE(\n");
        xml_.append("  switch[Ex:@Annot:@Annot](10) {\n");
        xml_.append("   case 10;\n");
        xml_.append("    return new Ex();\n");
        xml_.append("   default;\n");
        xml_.append("    return new Ex();\n");
        xml_.append("  }\n");
        xml_.append(" );MyEnum(Ex t){}}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " enum <a name=\""+ExportCst.PREF_REF+"28\">MyEnum</a>{<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"35\" title=\"pkg.Ex..MyEnum.pkg.Ex..MyEnum(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"146\">ONE</a>(\n" +
                "  <span class=\"g\"><span class=\"p\"><a title=\"1/2\">switch</a></span>[<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>:<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"226\">Annot</a></span>:<span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"226\">Annot</a></span>](<span class=\"g\">10</span>) <span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> 10;\n" +
                "    return <span class=\"g\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return <span class=\"n\">new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>;\n" +
                "  }</span></span>\n" +
                " )</span>;<a name=\""+ExportCst.PREF_REF+"146\">MyEnum(</a><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"156\">t</a>){}}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"181\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"226\">pkg.Annot</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage719Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" enum MyEnum{ONE(\n");
        xml_.append("  new @Annot Ex(){}\n");
        xml_.append(" );MyEnum(Ex t){}}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " enum <a name=\""+ExportCst.PREF_REF+"28\">MyEnum</a>{<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"35\" title=\"pkg.Ex..MyEnum.pkg.Ex..MyEnum(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"63\">ONE</a>(\n" +
                "  <span class=\"g\">new <span class=\"n2\">@<a title=\"pkg.Annot\" href=\"#"+ExportCst.PREF_REF+"143\">Annot</a></span> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"57\">{</a>}</span></span>\n" +
                " )</span>;<a name=\""+ExportCst.PREF_REF+"63\">MyEnum(</a><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"73\">t</a>){}}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"98\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"143\">pkg.Annot</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage720Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" enum MyEnum{ONE(\n");
        xml_.append("  new @Annot Ex()  \n");
        xml_.append(" );MyEnum(Ex t){}}\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  return 0;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public annotation pkg.Annot {\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " enum <a name=\""+ExportCst.PREF_REF+"28\">MyEnum</a>{<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"35\" title=\"pkg.Ex..MyEnum.pkg.Ex..MyEnum(pkg.Ex)\" href=\"#"+ExportCst.PREF_REF+"63\">ONE</a>(\n" +
                "  <span class=\"g\">new @Annot <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()</span>  \n" +
                " )</span>;<a name=\""+ExportCst.PREF_REF+"63\">MyEnum(</a><a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"73\">t</a>){}}\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"98\">exmeth</a>(){\n" +
                "  return <span class=\"f\">0</span>;\n" +
                " }\n" +
                "}\n" +
                "public annotation <a name=\""+ExportCst.PREF_REF+"143\">pkg.Annot</a> {\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage721Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a<=4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&&,Ex<int>)$(ExTwo,Ex<S>,ExTwo<S>)explicit(Ex,Ex<T>)((Ex<int>)one,two);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnly(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"false\">"+MessagesCdmBase.LT+"=</a><span class=\"f\">4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+",<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+")<a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\">explicit</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>,<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+")(<span class=\"n\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage722Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a<=4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&&,Ex<int>)((Ex<int>)one,two);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"false\">"+MessagesCdmBase.LT+"=</a><span class=\"f\">4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\"> </a><a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\"> </a>)(<span class=\"n\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage723Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a> 4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=5i;\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=3i;\n");
        xml_.append("  operator(&&&,Ex<int>)(b:two,a:(Ex<int>)one);\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"142\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"157\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"176\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"142\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"188\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"188\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span><a title=\"true\">"+MessagesCdmBase.GT+"</a><span class=\"f\"> 4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"226\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"249\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"260\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"277\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"277\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"345\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"367\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"407\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"157\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"pkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"226\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\"> </a><a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"176\"> </a>)(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"260\">b</a>:<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"407\">two</a></span></span>,<span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"249\">a</a>:<span class=\"f\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"135\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"367\">one</a></span></span></span>)</span>;\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage724Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   return 1i/0i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e:e == new Ex(){}.v()){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e){\n");
        xml_.append("   return 2i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public Object v(){\n");
        xml_.append("  throw null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "  }\n" +
                "  <span class=\"n\"><a title=\"0/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"96\">e</a>:<span class=\"n\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"96\">e</a> </span>==<span class=\"n\"><span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"111\">{</a>}</span></span>.<span class=\"n\"><a title=\"pkg.Ex.v()\" href=\"#"+ExportCst.PREF_REF+"193\">v</a>()</span></span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"153\">e</a>){\n" +
                "   return <span class=\"f\">2i</span>;\n" +
                "  }\n" +
                " }\n" +
                " public Object <a name=\""+ExportCst.PREF_REF+"193\">v</a>(){\n" +
                "  throw <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage725Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   return 1i/0i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e:e == new Ex(){}.v()){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e){\n");
        xml_.append("   return 2i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public Object v(){\n");
        xml_.append("  return null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "  }\n" +
                "  <span class=\"n\"><a title=\"0/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"96\">e</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"96\">e</a> </span><a title=\"false\">==</a><span class=\"f\"><span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"111\">{</a>}</span></span>.<span class=\"f\"><a title=\"pkg.Ex.v()\" href=\"#"+ExportCst.PREF_REF+"193\">v</a>()</span></span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"153\">e</a>){\n" +
                "   return <span class=\"f\">2i</span>;\n" +
                "  }\n" +
                " }\n" +
                " public Object <a name=\""+ExportCst.PREF_REF+"193\">v</a>(){\n" +
                "  return <span class=\"f\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage726Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw 1;\n");
        xml_.append("  }\n");
        xml_.append("  catch(1,3){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public Object v(){\n");
        xml_.append("  throw null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  <span class=\"p\"><a title=\"1/2\n" +
                "0\">catch</a></span>(1,3){\n" +
                "   return <span class=\"f\">1i</span>;\n" +
                "  }\n" +
                " }\n" +
                " public Object <a name=\""+ExportCst.PREF_REF+"126\">v</a>(){\n" +
                "  throw <span class=\"n\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage727Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw 1;\n");
        xml_.append("  }\n");
        xml_.append("  catch(2,3){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(1){\n");
        xml_.append("   return 2i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public Object v(){\n");
        xml_.append("  throw null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">1</span>;\n" +
                "  }\n" +
                "  <span class=\"n\"><a title=\"0/2\">catch</a></span>(2,3){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(1){\n" +
                "   return <span class=\"f\">2i</span>;\n" +
                "  }\n" +
                " }\n" +
                " public Object <a name=\""+ExportCst.PREF_REF+"156\">v</a>(){\n" +
                "  throw <span class=\"n\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage728Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw 3;\n");
        xml_.append("  }\n");
        xml_.append("  catch(1,3){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append(" public Object v(){\n");
        xml_.append("  throw null;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">3</span>;\n" +
                "  }\n" +
                "  <span class=\"p\"><a title=\"1/2\n" +
                "1\">catch</a></span>(1,3){\n" +
                "   return <span class=\"f\">1i</span>;\n" +
                "  }\n" +
                " }\n" +
                " public Object <a name=\""+ExportCst.PREF_REF+"126\">v</a>(){\n" +
                "  throw <span class=\"n\">null</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage729Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  for (int i:new int[]{1,3}){\n");
        xml_.append("   try{\n");
        xml_.append("    throw i;\n");
        xml_.append("   }\n");
        xml_.append("   catch(1,3){\n");
        xml_.append("    continue;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"64\">i</a></span>:<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">3</span>}</span>){\n" +
                "   try{\n" +
                "    throw <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">i</a></span>;\n" +
                "   }\n" +
                "   <span class=\"f\"><a title=\"2/2\">catch</a></span>(1,3){\n" +
                "    continue;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage730Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw null;\n");
        xml_.append("  }\n");
        xml_.append("  catch(:e){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">null</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(:<a name=\""+ExportCst.PREF_REF+"88\">e</a>){\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage731Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw null;\n");
        xml_.append("  }\n");
        xml_.append("  catch(: e){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">null</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(: <a name=\""+ExportCst.PREF_REF+"89\">e</a>){\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage732Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw null;\n");
        xml_.append("  }\n");
        xml_.append("  catch( :e){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">null</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>( :<a name=\""+ExportCst.PREF_REF+"89\">e</a>){\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage733Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   throw null;\n");
        xml_.append("  }\n");
        xml_.append("  catch( : e){\n");
        xml_.append("   return 1;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   throw <span class=\"f\">null</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>( : <a name=\""+ExportCst.PREF_REF+"90\">e</a>){\n" +
                "   return <span class=\"f\">1</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage734Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"8\";\n");
        xml_.append("  switch(8){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    t=\"10\";\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">8</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"102\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">i</a></span><a title=\"true\">==</a><span class=\"f\">8</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage735Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t=switch(8){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    return\"10\";\n");
        xml_.append("   default i;\n");
        xml_.append("    return\"8\";\n");
        xml_.append("  };\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">8</span>)<span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"90\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">i</a></span><a title=\"true\">==</a><span class=\"f\">8</span></span>;\n" +
                "    return<span class=\"f\"><span class=\"s\">\"10\"</span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span> <a title=\"int\" name=\""+ExportCst.PREF_REF+"125\">i</a>;\n" +
                "    return<span class=\"n\"><span class=\"s\">\"8\"</span></span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage736Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t=switch(9){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    return\"10\";\n");
        xml_.append("   default i;\n");
        xml_.append("    return i+\"8\";\n");
        xml_.append("  };\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">9</span>)<span class=\"t\">{\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"90\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">i</a></span><a title=\"false\">==</a><span class=\"f\">8</span></span>;\n" +
                "    return<span class=\"n\"><span class=\"s\">\"10\"</span></span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"int\" name=\""+ExportCst.PREF_REF+"125\">i</a>;\n" +
                "    return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"125\">i</a></span>+<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage737Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t=\"\";\n");
        xml_.append("  for (int i:{8,9}){\n");
        xml_.append("   t+=switch(i){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    return\"10\";\n");
        xml_.append("   default i;\n");
        xml_.append("    return i+\"8\";\n");
        xml_.append("   };\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"82\">i</a></span>:<span class=\"f\">{<span class=\"f\">8</span>,<span class=\"f\">9</span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span><i>+</i>=<span class=\"f\"><span class=\"f\"><a title=\"2/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"82\">i</a></span>)<span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"121\">i</a>:<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"121\">i</a></span>==<span class=\"f\">8</span></span>;\n" +
                "    return<span class=\"f\"><span class=\"s\">\"10\"</span></span>;\n" +
                "   <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"int\" name=\""+ExportCst.PREF_REF+"156\">i</a>;\n" +
                "    return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"156\">i</a></span>+<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "   }</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage738Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  for (int i:new int[]{1,3}){\n");
        xml_.append("   try{\n");
        xml_.append("    throw \"\"+i;\n");
        xml_.append("   }\n");
        xml_.append("   catch(\"1\",\"3\"){\n");
        xml_.append("    continue;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"64\">i</a></span>:<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">3</span>}</span>){\n" +
                "   try{\n" +
                "    throw <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">i</a></span></span>;\n" +
                "   }\n" +
                "   <span class=\"f\"><a title=\"2/2\">catch</a></span>(<span class=\"s\">\"1\"</span>,<span class=\"s\">\"3\"</span>){\n" +
                "    continue;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }


    @Test
    public void coverage739Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {ONE,TWO,THREE,FOUR,FIVE,SIX;\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  int o = 0;\n");
        xml_.append("  for (Ex i:{ONE,TWO,THREE,FOUR,FIVE,SIX}){\n");
        xml_.append("   switch(i){\n");
        xml_.append("    case ONE,TWO;\n");
        xml_.append("     o+= 1;\n");
        xml_.append("    case var j:j.ordinal()%2==0;\n");
        xml_.append("     o+= 2;\n");
        xml_.append("    default j;\n");
        xml_.append("     o+= 3;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"20\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"24\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">THREE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FOUR</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"39\">FIVE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">SIX</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"68\">catching</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">o</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <a name=\""+ExportCst.PREF_REF+"103\">i</a></span>:<span class=\"f\">{<span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.TWO\" href=\"#"+ExportCst.PREF_REF+"24\">TWO</a></span>,<span class=\"f\"><a title=\"pkg.Ex.THREE\" href=\"#"+ExportCst.PREF_REF+"28\">THREE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.FOUR\" href=\"#"+ExportCst.PREF_REF+"34\">FOUR</a></span>,<span class=\"f\"><a title=\"pkg.Ex.FIVE\" href=\"#"+ExportCst.PREF_REF+"39\">FIVE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.SIX\" href=\"#"+ExportCst.PREF_REF+"44\">SIX</a></span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"4/4\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">i</a></span>){\n" +
                "    <span class=\"f\"><a title=\"2/2\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a>,<a title=\"pkg.Ex.TWO\" href=\"#"+ExportCst.PREF_REF+"24\">TWO</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>+=<span class=\"f\"> 1</span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"pkg.Ex\">var</b> <a name=\""+ExportCst.PREF_REF+"194\">j</a>:<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"194\">j</a></span>.<span class=\"f\">ordinal()</span></span>%<span class=\"f\">2</span></span>==<span class=\"f\">0</span></span>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>+=<span class=\"f\"> 2</span></span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"pkg.Ex\" name=\""+ExportCst.PREF_REF+"238\">j</a>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>+=<span class=\"f\"> 3</span></span>;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }


    @Test
    public void coverage740Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {ONE,TWO,THREE,FOUR,FIVE,SIX;\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  int o = 0;\n");
        xml_.append("  for (Ex i:{ONE,TWO,THREE,FOUR,FIVE,SIX}){\n");
        xml_.append("   o+=(int)switch(i){\n");
        xml_.append("    case ONE,TWO;\n");
        xml_.append("     return 1;\n");
        xml_.append("    case var j:j.ordinal()%2==0;\n");
        xml_.append("     return 2;\n");
        xml_.append("    default j;\n");
        xml_.append("     return 3;\n");
        xml_.append("   };\n");
        xml_.append("  }\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"20\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"24\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"28\">THREE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"34\">FOUR</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"39\">FIVE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"44\">SIX</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"68\">catching</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"86\">o</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"f\">for (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <a name=\""+ExportCst.PREF_REF+"103\">i</a></span>:<span class=\"f\">{<span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.TWO\" href=\"#"+ExportCst.PREF_REF+"24\">TWO</a></span>,<span class=\"f\"><a title=\"pkg.Ex.THREE\" href=\"#"+ExportCst.PREF_REF+"28\">THREE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.FOUR\" href=\"#"+ExportCst.PREF_REF+"34\">FOUR</a></span>,<span class=\"f\"><a title=\"pkg.Ex.FIVE\" href=\"#"+ExportCst.PREF_REF+"39\">FIVE</a></span>,<span class=\"f\"><a title=\"pkg.Ex.SIX\" href=\"#"+ExportCst.PREF_REF+"44\">SIX</a></span>}</span>){\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>+=<span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a title=\"4/4\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"103\">i</a></span>)<span class=\"t\">{\n" +
                "    <span class=\"f\"><a title=\"2/2\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a>,<a title=\"pkg.Ex.TWO\" href=\"#"+ExportCst.PREF_REF+"24\">TWO</a>;\n" +
                "     return <span class=\"f\">1</span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"pkg.Ex\">var</b> <a name=\""+ExportCst.PREF_REF+"205\">j</a>:<span class=\"f\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"205\">j</a></span>.<span class=\"f\">ordinal()</span></span>%<span class=\"f\">2</span></span>==<span class=\"f\">0</span></span>;\n" +
                "     return <span class=\"f\">2</span>;\n" +
                "    <span class=\"f\"><a title=\"1/1\">default</a></span> <a title=\"pkg.Ex\" name=\""+ExportCst.PREF_REF+"252\">j</a>;\n" +
                "     return <span class=\"f\">3</span>;\n" +
                "   }</span></span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"86\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage741Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {\n");
        xml_.append(" ONE,TWO,THREE;\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"\";\n");
        xml_.append("  switch((Object)1){\n");
        xml_.append("   case String w: w == \"_\";\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case Ex w: w == \"_\";\n");
        xml_.append("    t=w+\" plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case int v: v == v();\n");
        xml_.append("    t=v+\"plus\";\n");
        xml_.append("    break;\n");
        xml_.append("   case ONE;\n");
        xml_.append("    t=\"1\";\n");
        xml_.append("  }\n");
        xml_.append("  return \"\"+t;\n");
        xml_.append(" }\n");
        xml_.append(" public static int v(){\n");
        xml_.append("  return 1;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEn(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"22\">ONE</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"26\">TWO</a></span>,<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"30\">THREE</a></span>;\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"59\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/5\">switch</a></span>(<span class=\"f\">(Object)<span class=\"f\">1</span></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"125\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a> </span>==<span class=\"n\"> <span class=\"s\">\"_\"</span></span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"125\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <a name=\""+ExportCst.PREF_REF+"177\">w</a>: <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"177\">w</a> </span>==<span class=\"n\"> <span class=\"s\">\"_\"</span></span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"177\">w</a></span>+<span class=\"n\"><span class=\"s\">\" plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> int <a name=\""+ExportCst.PREF_REF+"230\">v</a>: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"230\">v</a> </span><a title=\"true\">==</a><span class=\"f\"> <a title=\"pkg.Ex.static v()\" href=\"#"+ExportCst.PREF_REF+"335\">v</a>()</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"230\">v</a></span>+<span class=\"f\"><span class=\"s\">\"plus\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"22\">ONE</a>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span>=<span class=\"n\"><span class=\"s\">\"1\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">t</a></span></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"335\">v</a>(){\n" +
                "  return <span class=\"f\">1</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage742Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  try{\n");
        xml_.append("   return 1i/0i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e:e == \"ew Ex(){}.v(\"){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  catch(Object e){\n");
        xml_.append("   return 2i;\n");
        xml_.append("  }\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  try{\n" +
                "   return <span class=\"n\"><span class=\"n\">1i</span>/<span class=\"n\">0i</span></span>;\n" +
                "  }\n" +
                "  <span class=\"n\"><a title=\"0/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"96\">e</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"96\">e</a> </span><a title=\"false\">==</a><span class=\"f\"> <span class=\"s\">\"ew Ex(){}.v(\"</span></span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  <span class=\"f\"><a title=\"1/1\">catch</a></span>(Object <a name=\""+ExportCst.PREF_REF+"153\">e</a>){\n" +
                "   return <span class=\"f\">2i</span>;\n" +
                "  }\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage743Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"10\";\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case \"10\" ?: t == \"10\";\n");
        xml_.append("    t=\"12\";\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <span class=\"s\">\"10\"</span> ?: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a> </span><a title=\"true\">==</a><span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"12\"</span></span></span>;\n" +
                "    break;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage744Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {ONE;\n");
        xml_.append(" public static Ex exmeth(){\n");
        xml_.append("  Ex t;\n");
        xml_.append("  t=ONE;\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case ONE ?: t == \"10\";\n");
        xml_.append("    t=null;\n");
        xml_.append("    break;\n");
        xml_.append("   case ONE ?:;\n");
        xml_.append("    t=ONE;\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"20\">ONE</a></span>;\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <a name=\""+ExportCst.PREF_REF+"43\">exmeth</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"12\">Ex</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/3\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>){\n" +
                "   <span class=\"n\"><a title=\"0/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a> ?: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a> </span><a title=\"false\">==</a><span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"n\">null</span></span>;\n" +
                "    break;\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a> ?:;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>=<span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"58\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage745Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=\"10\";\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case String u ?: u == \"10\";\n");
        xml_.append("    t=u+\"12\";\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  return (String)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"104\">u</a> ?: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"104\">u</a> </span><a title=\"true\">==</a><span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"104\">u</a></span>+<span class=\"f\"><span class=\"s\">\"12\"</span></span></span></span>;\n" +
                "    break;\n" +
                "  }\n" +
                "  return <span class=\"f\">(String)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage746Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"10\";\n");
        xml_.append("  for(String u:{\"10\",\"11\"}){\n");
        xml_.append("   switch(t){\n");
        xml_.append("    case \"10\" ?: u == \"10\";\n");
        xml_.append("     t=\"10\";\n");
        xml_.append("     break;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  <span class=\"f\">for(String <a name=\""+ExportCst.PREF_REF+"89\">u</a></span>:<span class=\"f\">{<span class=\"f\"><span class=\"s\">\"10\"</span></span>,<span class=\"f\"><span class=\"s\">\"11\"</span></span>}</span>){\n" +
                "   <span class=\"f\"><a title=\"2/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "    <span class=\"f\"><a title=\"1/1\">case</a></span> <span class=\"s\">\"10\"</span> ?: <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"89\">u</a> </span>==<span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "     <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "     break;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage747Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  for (int i:new int[]{1,3}){\n");
        xml_.append("   try{\n");
        xml_.append("    throw \"\"+i;\n");
        xml_.append("   }\n");
        xml_.append("   catch( \"1\", \"3\" ?: i%2 == Integer.parseInt(\"1\")){\n");
        xml_.append("    continue;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"64\">i</a></span>:<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">3</span>}</span>){\n" +
                "   try{\n" +
                "    throw <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">i</a></span></span>;\n" +
                "   }\n" +
                "   <span class=\"f\"><a title=\"2/2\">catch</a></span>( <span class=\"s\">\"1\"</span>, <span class=\"s\">\"3\"</span> ?: <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">i</a></span>%<span class=\"f\">2 </span></span><a title=\"true\">==</a><span class=\"f\"><span class=\"f\"> Integer</span>.<span class=\"f\">parseInt(<span class=\"f\"><span class=\"s\">\"1\"</span></span>)</span></span></span>){\n" +
                "    continue;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage748Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {ONE;\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  for (int i:new int[]{1,3}){\n");
        xml_.append("   try{\n");
        xml_.append("    throw ONE;\n");
        xml_.append("   }\n");
        xml_.append("   catch( ONE ?: i%2 == Integer.parseInt(\"1\")){\n");
        xml_.append("    continue;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {<span class=\"g\"><a name=\""+ExportCst.PREF_REF+"20\">ONE</a></span>;\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"67\">i</a></span>:<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">3</span>}</span>){\n" +
                "   try{\n" +
                "    throw <span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a></span>;\n" +
                "   }\n" +
                "   <span class=\"f\"><a title=\"1/1\">catch</a></span>( <a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"20\">ONE</a> ?: <span class=\"p\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"67\">i</a></span>%<span class=\"f\">2 </span></span><a title=\"true\">==</a><span class=\"f\"><span class=\"f\"> Integer</span>.<span class=\"f\">parseInt(<span class=\"f\"><span class=\"s\">\"1\"</span></span>)</span></span></span>){\n" +
                "    continue;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage749Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  for (int i:new int[]{1,3}){\n");
        xml_.append("   try{\n");
        xml_.append("    throw \"\"+i;\n");
        xml_.append("   }\n");
        xml_.append("   catch( String j ?: Integer.parseInt(j)%2 == Integer.parseInt(\"1\")){\n");
        xml_.append("    continue;\n");
        xml_.append("   }\n");
        xml_.append("  }\n");
        xml_.append("  return 1i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">catching</a>(){\n" +
                "  <span class=\"f\">for (int <a name=\""+ExportCst.PREF_REF+"64\">i</a></span>:<span class=\"f\">new int[]{<span class=\"f\">1</span>,<span class=\"f\">3</span>}</span>){\n" +
                "   try{\n" +
                "    throw <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"64\">i</a></span></span>;\n" +
                "   }\n" +
                "   <span class=\"f\"><a title=\"1/1\">catch</a></span>( String <a name=\""+ExportCst.PREF_REF+"129\">j</a> ?: <span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\">Integer</span>.<span class=\"f\">parseInt(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"129\">j</a></span>)</span></span>%<span class=\"f\">2 </span></span><a title=\"true\">==</a><span class=\"f\"><span class=\"f\"> Integer</span>.<span class=\"f\">parseInt(<span class=\"f\"><span class=\"s\">\"1\"</span></span>)</span></span></span>){\n" +
                "    continue;\n" +
                "   }\n" +
                "  }\n" +
                "  return <span class=\"f\">1i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage750Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"8\";\n");
        xml_.append("  switch(8){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    t=\"10\";\n");
        xml_.append("   default:;\n");
        xml_.append("    t=\"11\";\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">8</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"102\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">i</a></span><a title=\"true\">==</a><span class=\"f\">8</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>:;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"n\"><span class=\"s\">\"11\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage751Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t;\n");
        xml_.append("  t=\"8\";\n");
        xml_.append("  switch(8){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    t=\"10\";\n");
        xml_.append("   default;\n");
        xml_.append("    t=\"11\";\n");
        xml_.append("  }\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"8\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">8</span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"102\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"102\">i</a></span><a title=\"true\">==</a><span class=\"f\">8</span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    <span class=\"n\"><span class=\"n\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"n\"><span class=\"s\">\"11\"</span></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage752Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String catching(){\n");
        xml_.append("  String t=switch(8){\n");
        xml_.append("   case var i:i==8;\n");
        xml_.append("    return\"10\";\n");
        xml_.append("   default;\n");
        xml_.append("    return\"11\";\n");
        xml_.append("  };\n");
        xml_.append("  return t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">catching</a>(){\n" +
                "  String <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"65\">t</a></span>=<span class=\"f\"><span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\">8</span>)<span class=\"t\">{\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> <b title=\"int\">var</b> <a name=\""+ExportCst.PREF_REF+"90\">i</a>:<span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"90\">i</a></span><a title=\"true\">==</a><span class=\"f\">8</span></span>;\n" +
                "    return<span class=\"f\"><span class=\"s\">\"10\"</span></span>;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>;\n" +
                "    return<span class=\"n\"><span class=\"s\">\"11\"</span></span>;\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"65\">t</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage753Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=\"10\";\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case String u ?: u == \"10\";\n");
        xml_.append("    t=u+\"12\";\n");
        xml_.append("    break;\n");
        xml_.append("   default:;\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  return (String)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> String <a name=\""+ExportCst.PREF_REF+"104\">u</a> ?: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"104\">u</a> </span><a title=\"true\">==</a><span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"104\">u</a></span>+<span class=\"f\"><span class=\"s\">\"12\"</span></span></span></span>;\n" +
                "    break;\n" +
                "   <span class=\"n\"><a title=\"0/1\">default</a></span>:;\n" +
                "    break;\n" +
                "  }\n" +
                "  return <span class=\"f\">(String)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage754Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  Object t;\n");
        xml_.append("  t=\"10\";\n");
        xml_.append("  switch(t){\n");
        xml_.append("   case String :?: t == \"10\";\n");
        xml_.append("    t=\"12\";\n");
        xml_.append("    break;\n");
        xml_.append("  }\n");
        xml_.append("  return (String)t;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  Object <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"63\">t</a></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"10\"</span></span></span>;\n" +
                "  <span class=\"p\"><a title=\"1/2\">switch</a></span>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>){\n" +
                "   <span class=\"f\"><a title=\"1/1\">case</a></span> String :?: <span class=\"p\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a> </span><a title=\"true\">==</a><span class=\"f\"> <span class=\"s\">\"10\"</span></span></span>;\n" +
                "    <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span>=<span class=\"f\"><span class=\"s\">\"12\"</span></span></span>;\n" +
                "    break;\n" +
                "  }\n" +
                "  return <span class=\"f\">(String)<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"63\">t</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

    @Test
    public void coverage755Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public enum pkg.Ex {\n");
        xml_.append(" ONE;\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  return static($core.Enums).name(ONE);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public enum <a name=\""+ExportCst.PREF_REF+"12\">pkg.Ex</a> {\n" +
                " <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"22\">ONE</a></span>;\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"49\">exmeth</a>(){\n" +
                "  return <span class=\"f\"><span class=\"f\">static($core.Enums)</span>.<span class=\"f\">name(<span class=\"f\"><a title=\"pkg.Ex.ONE\" href=\"#"+ExportCst.PREF_REF+"22\">ONE</a></span>)</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage756Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static int exmeth(){\n");
        xml_.append("  int s = 1;\n");
        xml_.append("  int sum = 0;\n");
        xml_.append("  for (int j:{0,1}){\n");
        xml_.append("   int[] t = s == j ?{4i}:{6i};\n");
        xml_.append("   sum += t[0];\n");
        xml_.append("   break;\n");
        xml_.append("  }\n");
        xml_.append("  return sum;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_, true);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"41\">exmeth</a>(){\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"57\">s</a> </span>=<span class=\"f\"> 1</span></span>;\n" +
                "  int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"70\">sum</a> </span>=<span class=\"f\"> 0</span></span>;\n" +
                "  <span class=\"p\">for (int <a name=\""+ExportCst.PREF_REF+"90\">j</a></span>:<span class=\"f\">{<span class=\"f\">0</span>,<span class=\"f\">1</span>}</span>)<a name=\""+ExportCst.PREF_REF+"98\"> </a>{\n" +
                "   int[] <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"109\">t</a> </span>=<span class=\"f\"><span class=\"p\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"57\">s</a> </span><a title=\"false\">==</a><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"90\">j</a> </span></span>?<span class=\"n\">{<span class=\"n\">4i</span>}</span>:<span class=\"f\">{<span class=\"f\">6i</span>}</span></span></span>;\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a> </span>+=<span class=\"f\"><span class=\"f\"> <a href=\"#"+ExportCst.PREF_REF+"109\">t</a></span><span class=\"f\">[<span class=\"f\">0</span>]</span></span></span>;\n" +
                "   break<a href=\"#"+ExportCst.PREF_REF+"98\"> </a>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"70\">sum</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage757Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  var b=false;\n");
        xml_.append("  return \"\"+b;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_, true);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">b</a></span>=<span class=\"f\">false</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"60\">b</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage758Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  var b=true;\n");
        xml_.append("  return \"\"+b;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_, true);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  <b title=\"boolean\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">b</a></span>=<span class=\"f\">true</span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><span class=\"s\">\"\"</span></span>+<span class=\"p\"><a href=\"#"+ExportCst.PREF_REF+"60\">b</a></span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage759Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  for(boolean b:{true,false}){\n");
        xml_.append("   Ex c=b;\n");
        xml_.append("  }\n");
        xml_.append("  return \"\";\n");
        xml_.append(" }\n");
        xml_.append(" public static Ex $(boolean b){\n");
        xml_.append("  return new();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_, true);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  <span class=\"f\">for(boolean <a name=\""+ExportCst.PREF_REF+"68\">b</a></span>:<span class=\"f\">{<span class=\"f\">true</span>,<span class=\"f\">false</span>}</span>)<a name=\""+ExportCst.PREF_REF+"83\"> </a>{\n" +
                "   <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"91\">c</a></span>=<span class=\"f\"><a title=\"pkg.Ex.static $(pkg.Ex,boolean)\" href=\"#"+ExportCst.PREF_REF+"134\"> </a><a href=\"#"+ExportCst.PREF_REF+"68\">b</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><span class=\"s\">\"\"</span></span>;\n" +
                " }\n" +
                " public static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"13\">Ex</a> <a name=\""+ExportCst.PREF_REF+"134\">$</a>(boolean <a name=\""+ExportCst.PREF_REF+"144\">b</a>){\n" +
                "  return <span class=\"f\">new()</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage760Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.Ex {\n");
        xml_.append(" public static String exmeth(){\n");
        xml_.append("  var s=\"\";\n");
        xml_.append("  for(boolean b:{true,false}){\n");
        xml_.append("   s+=b;\n");
        xml_.append("  }\n");
        xml_.append("  return s;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_, true);
        MethodId id_ = getMethodId("exmeth");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.Ex</a> {\n" +
                " public static String <a name=\""+ExportCst.PREF_REF+"44\">exmeth</a>(){\n" +
                "  <b title=\"$core.String\">var</b> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"60\">s</a></span>=<span class=\"f\"><span class=\"s\">\"\"</span></span></span>;\n" +
                "  <span class=\"f\">for(boolean <a name=\""+ExportCst.PREF_REF+"80\">b</a></span>:<span class=\"f\">{<span class=\"f\">true</span>,<span class=\"f\">false</span>}</span>)<a name=\""+ExportCst.PREF_REF+"95\"> </a>{\n" +
                "   <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">s</a></span>+=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"80\">b</a></span></span>;\n" +
                "  }\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"60\">s</a></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverage761Test() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("public class pkg.ExTwo<S> {\n");
        xml_.append(" public S a;\n");
        xml_.append(" static Ex<S> $(ExTwo<S> a){\n");
        xml_.append("  Ex<S> o = new Ex<>();\n");
        xml_.append("  o.a=a.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.ExCont<S> {\n");
        xml_.append(" public S[] a;\n");
        xml_.append(" public ExCont(S... a){\n");
        xml_.append("  this.a=a;\n");
        xml_.append(" }\n");
        xml_.append(" public S this(int i){\n");
        xml_.append("  return a[i];\n");
        xml_.append(" }\n");
        xml_.append(" public void this(int i){\n");
        xml_.append("  a[i]=value;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        xml_.append("public class pkg.Ex<T> {\n");
        xml_.append(" public T a;\n");
        xml_.append(" static boolean false(Ex<T> a){\n");
        xml_.append("  return (int)a.a> 4;\n");
        xml_.append(" }\n");
        xml_.append(" operator&& ExTwo<int> (Ex<int> a, Ex<int> b){\n");
        xml_.append("  ExTwo<int> o = new ExTwo<>();\n");
        xml_.append("  o.a=a.a+b.a;\n");
        xml_.append("  return o;\n");
        xml_.append(" }\n");
        xml_.append(" public static int catching(){\n");
        xml_.append("  Ex<int> one = new Ex<>();\n");
        xml_.append("  one.a=3i;\n");
        xml_.append("  ExCont<Ex<int>> c = new ExCont<>(one);\n");
        xml_.append("  Ex<int> two = new Ex<>();\n");
        xml_.append("  two.a=5i;\n");
        xml_.append("  operator(&&,Ex<int>)=((Ex<int>)c[0],two);\n");
        xml_.append("  if (c[0].a != 8i){\n");
        xml_.append("   return 1i;\n");
        xml_.append("  }\n");
        xml_.append("  return 0i;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        StringMap<String> files_ = new StringMap<String>();
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnReadOnlyImpl(files_);
        MethodId id_ = getMethodId("catching");
        calculateNormal("pkg.Ex", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">public class <a name=\""+ExportCst.PREF_REF+"13\">pkg.ExTwo</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"23\">S</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"38\">a</a></span>;\n" +
                " static <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"55\">$</a>(<a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"66\">a</a>){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"23\">S</a>"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"78\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"66\">a</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"78\">o</a></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"135\">pkg.ExCont</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"146\">S</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"146\">S</a>[] <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"163\">a</a></span>;\n" +
                " <a name=\""+ExportCst.PREF_REF+"167\">public ExCont(</a><a href=\"#"+ExportCst.PREF_REF+"146\">S</a>... <a name=\""+ExportCst.PREF_REF+"186\">a</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\">this</span>.<span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"163\">a</a></span></span>=<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"186\">a</a></span></span>;\n" +
                " }\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"146\">S</a> <a name=\""+ExportCst.PREF_REF+"215\">this</a>(int <a name=\""+ExportCst.PREF_REF+"224\">i</a>){\n" +
                "  return <span class=\"f\"><span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"163\">a</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"224\">i</a></span>]</span></span>;\n" +
                " }\n" +
                " public void <a name=\""+ExportCst.PREF_REF+"259\">this</a>(int <a name=\""+ExportCst.PREF_REF+"268\">i</a>){\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a title=\"pkg.ExCont.a\" href=\"#"+ExportCst.PREF_REF+"163\">a</a></span><span class=\"f\">[<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"268\">i</a></span>]</span></span>=<span class=\"f\"><b>value</b></span></span>;\n" +
                " }\n" +
                "}\n" +
                "public class <a name=\""+ExportCst.PREF_REF+"304\">pkg.Ex</a>"+MessagesCdmBase.LT+"<a name=\""+ExportCst.PREF_REF+"311\">T</a>"+MessagesCdmBase.GT+" {\n" +
                " public <a href=\"#"+ExportCst.PREF_REF+"311\">T</a> <span class=\"f\"><a name=\""+ExportCst.PREF_REF+"326\">a</a></span>;\n" +
                " static boolean <a name=\""+ExportCst.PREF_REF+"345\">false</a>(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"<a href=\"#"+ExportCst.PREF_REF+"311\">T</a>"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"357\">a</a>){\n" +
                "  return <span class=\"p\"><span class=\"f\">(int)<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"357\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span></span><a title=\"false\">"+MessagesCdmBase.GT+"</a><span class=\"f\"> 4</span></span>;\n" +
                " }\n" +
                " operator<a name=\""+ExportCst.PREF_REF+"395\">"+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"</a> <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" (<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"418\">a</a>, <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <a name=\""+ExportCst.PREF_REF+"429\">b</a>){\n" +
                "  <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"446\">o</a> </span>=<span class=\"f\"> new <a title=\"pkg.ExTwo\" href=\"#"+ExportCst.PREF_REF+"13\">ExTwo</a><a title=\"pkg.ExTwo"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"446\">o</a></span>.<span class=\"f\"><a title=\"pkg.ExTwo.a\" href=\"#"+ExportCst.PREF_REF+"38\">a</a></span></span>=<span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"418\">a</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span>+<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"429\">b</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span></span></span>;\n" +
                "  return <span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"446\">o</a></span>;\n" +
                " }\n" +
                " public static int <a name=\""+ExportCst.PREF_REF+"514\">catching</a>(){\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"536\">one</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"536\">one</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span>=<span class=\"f\">3i</span></span>;\n" +
                "  <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"135\">ExCont</a>"+MessagesCdmBase.LT+"<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"584\">c</a> </span>=<span class=\"f\"> <a title=\"pkg.ExCont.pkg.ExCont(#S...)\" href=\"#"+ExportCst.PREF_REF+"167\">new</a> <a title=\"pkg.ExCont\" href=\"#"+ExportCst.PREF_REF+"135\">ExCont</a><a title=\"pkg.ExCont"+MessagesCdmBase.LT+"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+""+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>(<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"536\">one</a></span>)</span></span>;\n" +
                "  <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+" <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"617\">two</a> </span>=<span class=\"f\"> new <a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a><a title=\"pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+"\">"+MessagesCdmBase.LT+""+MessagesCdmBase.GT+"</a>()</span></span>;\n" +
                "  <span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"617\">two</a></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a></span></span>=<span class=\"f\">5i</span></span>;\n" +
                "  <span class=\"f\"><a title=\"true\n" +
                "\n" +
                "pkg.Ex.static "+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+"(pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+",pkg.Ex"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"395\">operator</a>("+MessagesCdmBase.AMP+""+MessagesCdmBase.AMP+",<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<a title=\"pkg.ExTwo.static $(pkg.Ex"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+",pkg.ExTwo"+MessagesCdmBase.LT+"#S"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"55\"> </a><a title=\"pkg.Ex.static false(boolean,pkg.Ex"+MessagesCdmBase.LT+"#T"+MessagesCdmBase.GT+")\" href=\"#"+ExportCst.PREF_REF+"345\"> </a><a title=\"pkg.ExCont.[]=(int)\" href=\"#"+ExportCst.PREF_REF+"259\">=</a>(<span class=\"p\">(<a title=\"pkg.Ex\" href=\"#"+ExportCst.PREF_REF+"304\">Ex</a>"+MessagesCdmBase.LT+"int"+MessagesCdmBase.GT+")<span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"584\">c</a></span><span class=\"f\"><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"215\">[</a><span class=\"f\">0</span><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"215\">]</a></span></span></span>,<span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"617\">two</a></span>)</span>;\n" +
                "  <span class=\"p\">if</span> (<span class=\"p\"><span class=\"f\"><span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"584\">c</a></span><span class=\"f\"><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"215\">[</a><span class=\"f\">0</span><a title=\"pkg.ExCont.[](int)\" href=\"#"+ExportCst.PREF_REF+"215\">]</a></span></span>.<span class=\"f\"><a title=\"pkg.Ex.a\" href=\"#"+ExportCst.PREF_REF+"326\">a</a> </span></span><a title=\"false\">!=</a><span class=\"f\"> 8i</span></span>){\n" +
                "   return <span class=\"n\">1i</span>;\n" +
                "  }\n" +
                "  return <span class=\"f\">0i</span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }
    @Test
    public void coverageComment17Test() {
        StringMap<String> files_ = new StringMap<String>();
        StringBuilder xml_;
        xml_ = new StringBuilder();
        xml_.append("interface pkg.Int {\n");
        xml_.append(" int field();\n");
        xml_.append("}\n");
        xml_.append("class pkg.Ext {\n");
        xml_.append(" static int extField;\n");
        xml_.append(" static int m(){\n");
        xml_.append("  Int l = new Int(){\n");
        xml_.append("   public int field=++extField;\n");
        xml_.append("   public int field(){\n");
        xml_.append("    return\\*comment*\\field;\n");
        xml_.append("   }\n");
        xml_.append("  };\n");
        xml_.append("  return l.field();\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        files_.put("src/pkg/Ex", xml_.toString());
        ContextEl cont_ = covEnCom(files_);
        MethodId id_ = getMethodId("m");
        calculateNormal("pkg.Ext", id_, cont_);
        StringMap<String> filesExp_ = export(cont_);
        assertEq("<html><head><link href=\"../../css/style.css\" rel=\"stylesheet\" type=\"text/css\"/></head><body><pre><span class=\"t\">interface <a name=\""+ExportCst.PREF_REF+"10\">pkg.Int</a> {\n" +
                " int <a name=\""+ExportCst.PREF_REF+"25\">field</a>();\n" +
                "}\n" +
                "class <a name=\""+ExportCst.PREF_REF+"42\">pkg.Ext</a> {\n" +
                " static int <span class=\"g\"><a name=\""+ExportCst.PREF_REF+"64\">extField</a></span>;\n" +
                " static int <a name=\""+ExportCst.PREF_REF+"86\">m</a>(){\n" +
                "  <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a> <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"97\">l</a> </span>=<span class=\"f\"> new <a title=\"pkg.Int\" href=\"#"+ExportCst.PREF_REF+"10\">Int</a>()<span class=\"t\"><a name=\""+ExportCst.PREF_REF+"110\">{</a>\n" +
                "   public int <span class=\"f\"><span class=\"f\"><a name=\""+ExportCst.PREF_REF+"126\">field</a></span>=<span class=\"f\">++<span class=\"f\"><a title=\"pkg.Ext.extField\" href=\"#"+ExportCst.PREF_REF+"64\">extField</a></span></span></span>;\n" +
                "   public int <a name=\""+ExportCst.PREF_REF+"158\">field</a>(){\n" +
                "    return<span class=\"c\">\\*comment*\\</span><span class=\"f\"><a title=\"pkg.Ext..Int*1.field\" href=\"#"+ExportCst.PREF_REF+"126\">field</a></span>;\n" +
                "   }\n" +
                "  }</span></span></span>;\n" +
                "  return <span class=\"f\"><span class=\"f\"><a href=\"#"+ExportCst.PREF_REF+"97\">l</a></span>.<span class=\"f\"><a title=\"pkg.Int.field()\" href=\"#"+ExportCst.PREF_REF+"25\">field</a>()</span></span>;\n" +
                " }\n" +
                "}\n" +
                "</span></pre></body></html>", filesExp_.firstValue());
    }

}
