package code.expressionlanguage.options;

import code.expressionlanguage.stds.LgNames;
import code.util.StringMap;

public final class KeyWordsMap {

    private StringMap<KeyWords> keyWords = new StringMap<KeyWords>();
    private StringMap<LgNames> stds = new StringMap<LgNames>();
    public KeyWordsMap() {
        initKeyWords();
    }
    private void initKeyWords() {
        KeyWords en_ = new KeyWords();
        KeyWords fr_ = new KeyWords();
        en_.setKeyWordAbstract("abstract");
        fr_.setKeyWordAbstract("abstrait");
        en_.setKeyWordAnnotation("annotation");
        fr_.setKeyWordAnnotation("annotation");
        en_.setKeyWordBool("bool");
        fr_.setKeyWordBool("bool");
        en_.setKeyWordBreak("break");
        fr_.setKeyWordBreak("sortir");
        en_.setKeyWordCase("case");
        fr_.setKeyWordCase("cas");
        en_.setKeyWordCast("$");
        fr_.setKeyWordCast("$");
        en_.setKeyWordExplicit("explicit");
        fr_.setKeyWordExplicit("explicite");
        en_.setKeyWordCatch("catch");
        fr_.setKeyWordCatch("capture");
        en_.setKeyWordClass("class");
        fr_.setKeyWordClass("classe");
        en_.setKeyWordClasschoice("classchoice");
        fr_.setKeyWordClasschoice("choixclasse");
        en_.setKeyWordContinue("continue");
        fr_.setKeyWordContinue("iterer");
        en_.setKeyWordDefault("default");
        fr_.setKeyWordDefault("autrement");
        en_.setKeyWordDefaultValue("defaultValue");
        fr_.setKeyWordDefaultValue("valDefaut");
        en_.setKeyWordDo("do");
        fr_.setKeyWordDo("faire");
        en_.setKeyWordElse("else");
        fr_.setKeyWordElse("sinon");
        en_.setKeyWordElseif("elseif");
        fr_.setKeyWordElseif("sinonsi");
        en_.setKeyWordEnum("enum");
        fr_.setKeyWordEnum("enum");
        en_.setKeyWordEscBound("b");
        fr_.setKeyWordEscBound("b");
        en_.setKeyWordEscFeed("r");
        fr_.setKeyWordEscFeed("r");
        en_.setKeyWordEscForm("f");
        fr_.setKeyWordEscForm("f");
        en_.setKeyWordEscLine("n");
        fr_.setKeyWordEscLine("n");
        en_.setKeyWordEscTab("t");
        fr_.setKeyWordEscTab("t");
        en_.setKeyWordEscUnicode("u");
        fr_.setKeyWordEscUnicode("u");
        en_.setKeyWordFalse("false");
        fr_.setKeyWordFalse("faux");
        en_.setKeyWordFinal("final");
        fr_.setKeyWordFinal("final");
        en_.setKeyWordFinally("finally");
        fr_.setKeyWordFinally("finallement");
        en_.setKeyWordFirstopt("$firstopt");
        fr_.setKeyWordFirstopt("$premieropt");
        en_.setKeyWordFor("for");
        fr_.setKeyWordFor("pour");
        en_.setKeyWordForeach("foreach");
        fr_.setKeyWordForeach("pourchaque");
        en_.setKeyWordId("$id");
        fr_.setKeyWordId("$id");
        en_.setKeyWordIf("if");
        fr_.setKeyWordIf("si");
        en_.setKeyWordInstanceof("instanceof");
        fr_.setKeyWordInstanceof("instancede");
        en_.setKeyWordInterface("interface");
        fr_.setKeyWordInterface("interface");
        en_.setKeyWordInterfaces("interfaces");
        fr_.setKeyWordInterfaces("interfaces");
        en_.setKeyWordIntern("$intern");
        fr_.setKeyWordIntern("$interne");
        en_.setKeyWordIter("iter");
        fr_.setKeyWordIter("iter");
        en_.setKeyWordLambda("$lambda");
        fr_.setKeyWordLambda("$lambda");
        en_.setKeyWordNbBin("b");
        fr_.setKeyWordNbBin("b");
        en_.setKeyWordNbExpBin("p");
        fr_.setKeyWordNbExpBin("p");
        en_.setKeyWordNbExpDec("e");
        fr_.setKeyWordNbExpDec("e");
        en_.setKeyWordNbHex("x");
        fr_.setKeyWordNbHex("x");
        en_.setKeyWordNbHexEnd("x");
        fr_.setKeyWordNbHexEnd("x");
        en_.setKeyWordNbSufByte("Y");
        fr_.setKeyWordNbSufByte("O");
        en_.setKeyWordNbSufBytePrim("y");
        fr_.setKeyWordNbSufBytePrim("o");
        en_.setKeyWordNbSufShort("S");
        fr_.setKeyWordNbSufShort("O2");
        en_.setKeyWordNbSufShortPrim("s");
        fr_.setKeyWordNbSufShortPrim("o2");
        en_.setKeyWordNbSufCharacter("C");
        fr_.setKeyWordNbSufCharacter("C");
        en_.setKeyWordNbSufCharacterPrim("c");
        fr_.setKeyWordNbSufCharacterPrim("c");
        en_.setKeyWordNbSufInteger("I");
        fr_.setKeyWordNbSufInteger("O4");
        en_.setKeyWordNbSufIntegerPrim("i");
        fr_.setKeyWordNbSufIntegerPrim("o4");
        en_.setKeyWordNbSufLong("L");
        fr_.setKeyWordNbSufLong("O8");
        en_.setKeyWordNbSufLongPrim("l");
        fr_.setKeyWordNbSufLongPrim("o8");
        en_.setKeyWordNbSufFloat("F");
        fr_.setKeyWordNbSufFloat("F");
        en_.setKeyWordNbSufFloatPrim("f");
        fr_.setKeyWordNbSufFloatPrim("f");
        en_.setKeyWordNbSufDouble("D");
        fr_.setKeyWordNbSufDouble("D");
        en_.setKeyWordNbSufDoublePrim("d");
        fr_.setKeyWordNbSufDoublePrim("d");
        en_.setKeyWordNew("new");
        fr_.setKeyWordNew("nouveau");
        en_.setKeyWordNormal("normal");
        fr_.setKeyWordNormal("normal");
        en_.setKeyWordNull("null");
        fr_.setKeyWordNull("nul");
        en_.setKeyWordOperator("operator");
        fr_.setKeyWordOperator("operateur");
        en_.setKeyWordToString("$toString");
        fr_.setKeyWordToString("$chaine");
        en_.setKeyWordPackage("package");
        fr_.setKeyWordPackage("paquetage");
        en_.setKeyWordPrivate("private");
        fr_.setKeyWordPrivate("prive");
        en_.setKeyWordProtected("protected");
        fr_.setKeyWordProtected("protege");
        en_.setKeyWordPublic("public");
        fr_.setKeyWordPublic("public");
        en_.setKeyWordReturn("return");
        fr_.setKeyWordReturn("retour");
        en_.setKeyWordStatic("static");
        fr_.setKeyWordStatic("static");
        en_.setKeyWordStaticCall("staticCall");
        fr_.setKeyWordStaticCall("staticCall");
        en_.setKeyWordSuper("super");
        fr_.setKeyWordSuper("super");
        en_.setKeyWordSuperaccess("superaccess");
        fr_.setKeyWordSuperaccess("superacces");
        en_.setKeyWordSwitch("switch");
        fr_.setKeyWordSwitch("selon");
        en_.setKeyWordThat("that");
        fr_.setKeyWordThat("cela");
        en_.setKeyWordThis("this");
        fr_.setKeyWordThis("ceci");
        en_.setKeyWordThisaccess("thisaccess");
        fr_.setKeyWordThisaccess("cetacces");
        en_.setKeyWordThrow("throw");
        fr_.setKeyWordThrow("lancer");
        en_.setKeyWordTrue("true");
        fr_.setKeyWordTrue("vrai");
        en_.setKeyWordTry("try");
        fr_.setKeyWordTry("essai");
        en_.setKeyWordValueOf("$valueOf");
        fr_.setKeyWordValueOf("$valeurDe");
        en_.setKeyWordValues("$values");
        fr_.setKeyWordValues("$valeurs");
        en_.setKeyWordValue("value");
        fr_.setKeyWordValue("valeur");
        en_.setKeyWordVar("var");
        fr_.setKeyWordVar("var");
        en_.setKeyWordVararg("$vararg");
        fr_.setKeyWordVararg("$vararg");
        en_.setKeyWordWhile("while");
        fr_.setKeyWordWhile("tantque");
        en_.setKeyWordParent("$parent");
        fr_.setKeyWordParent("$parent");
        keyWords.put("en", en_);
        keyWords.put("fr", fr_);
    }
    public void initEnStds(LgNames _lgNames) {
        _lgNames.getContent().setDefaultPkg("$core");
        _lgNames.getContent().getCoreNames().setAliasObject("$core.Object");
        _lgNames.getContent().getCoreNames().setAliasVoid("void");
        _lgNames.getContent().getCharSeq().setAliasCharSequence("$core.CharSequence");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceCompareTo("compareTo");
        _lgNames.getContent().getCharSeq().setAliasStringCompare("compare");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceEquals("equals");
        _lgNames.getContent().getNbAlias().setAliasCompareTo("compareTo");
        _lgNames.getContent().getNbAlias().setAliasCompare("compare");
        _lgNames.getContent().getNbAlias().setAliasEquals("equals");
        _lgNames.getContent().getNbAlias().setAliasToStringMethod("toString");
        _lgNames.getContent().getNbAlias().setAliasSignum("sgn");
        _lgNames.getContent().getNbAlias().setAliasToBinString("bin");
        _lgNames.getContent().getNbAlias().setAliasToOctString("oct");
        _lgNames.getContent().getNbAlias().setAliasToHexString("hex");
        _lgNames.getContent().getNbAlias().setAliasValueOfMethod("valueOf");
        _lgNames.getContent().getNbAlias().setAliasMaxValueField("MAX_VALUE");
        _lgNames.getContent().getNbAlias().setAliasMinValueField("MIN_VALUE");
        _lgNames.getContent().getNbAlias().setAliasPlusInfinityField("PLUS_INFINITY");
        _lgNames.getContent().getNbAlias().setAliasMinusInfinityField("MINUS_INFINITY");
        _lgNames.getContent().getNbAlias().setAliasNanField("NAN");
        _lgNames.getContent().getPredefTypes().setAliasIteratorType("$core.Iterator");
        _lgNames.getContent().getPredefTypes().setAliasIterator("iterator");
        _lgNames.getContent().getPredefTypes().setAliasIterable("$core.Iterable");
        _lgNames.getContent().getPredefTypes().setAliasEnumParam("$core.Enum");
        _lgNames.getContent().getPredefTypes().setAliasEnumType("$core.$en");
        _lgNames.getContent().getCoreNames().setAliasEnums("$core.Enums");
        _lgNames.getContent().getCharSeq().setAliasReplacement("$core.Replacement");
        _lgNames.getContent().getCoreNames().setAliasStore("$core.BadStore");
        _lgNames.getContent().getCoreNames().setAliasNullPe("$core.NullObject");
        _lgNames.getContent().getCoreNames().setAliasBadIndex("$core.BadIndexException");
        _lgNames.getContent().getCoreNames().setAliasBadArgNumber("$core.BadArgNumber");
        _lgNames.getContent().getCoreNames().setAliasAbstractTypeErr("$core.AbstractTypeErr");
        _lgNames.getContent().getCoreNames().setAliasIllegalType("$core.IllegalType");
        _lgNames.getContent().getCoreNames().setAliasNonInvokable("$core.NonInvokable");
        _lgNames.getContent().getCoreNames().setAliasIllegalArg("$core.IllegalArgument");
        _lgNames.getContent().getCoreNames().setAliasBadSize("$core.NegativeSize");
        _lgNames.getContent().getCoreNames().setAliasError("$core.Error");
        _lgNames.getContent().getCoreNames().setAliasErrorCurrentStack("current");
        _lgNames.getContent().getCoreNames().setAliasErrorToString("toString");
        _lgNames.getContent().getCoreNames().setAliasGetMessage("getMessage");
        _lgNames.getContent().getCoreNames().setAliasCastType("$core.BadCast");
        _lgNames.getContent().getCoreNames().setAliasDivisionZero("$core.DivideZero");
        _lgNames.getContent().getMathRef().setAliasMath("$core.Math");
        _lgNames.getContent().getMathRef().setAliasAbs("abs");
        _lgNames.getContent().getMathRef().setAliasMax("max");
        _lgNames.getContent().getMathRef().setAliasMin("min");
        _lgNames.getContent().getMathRef().setAliasMod("mod");
        _lgNames.getContent().getMathRef().setAliasQuot("quot");
        _lgNames.getContent().getCoreNames().setAliasSof("$core.StackOverFlow");
        _lgNames.getContent().getCoreNames().setAliasNbFormat("$core.BadFormat");
        _lgNames.getContent().getCoreNames().setAliasBadEncode("$core.BadEncode");
        _lgNames.getContent().getPrimTypes().setAliasPrimBoolean("boolean");
        _lgNames.getContent().getPrimTypes().setAliasPrimByte("byte");
        _lgNames.getContent().getPrimTypes().setAliasPrimShort("short");
        _lgNames.getContent().getPrimTypes().setAliasPrimChar("char");
        _lgNames.getContent().getPrimTypes().setAliasPrimInteger("int");
        _lgNames.getContent().getPrimTypes().setAliasPrimLong("long");
        _lgNames.getContent().getPrimTypes().setAliasPrimFloat("float");
        _lgNames.getContent().getPrimTypes().setAliasPrimDouble("double");
        _lgNames.getContent().getNbAlias().setAliasBoolean("$core.Boolean");
        _lgNames.getContent().getNbAlias().setAliasByte("$core.Byte");
        _lgNames.getContent().getNbAlias().setAliasShort("$core.Short");
        _lgNames.getContent().getNbAlias().setAliasCharacter("$core.Character");
        _lgNames.getContent().getNbAlias().setAliasInteger("$core.Integer");
        _lgNames.getContent().getNbAlias().setAliasLong("$core.Long");
        _lgNames.getContent().getNbAlias().setAliasFloat("$core.Float");
        _lgNames.getContent().getNbAlias().setAliasDouble("$core.Double");
        _lgNames.getContent().getNbAlias().setAliasNumber("$core.Number");
        _lgNames.getContent().getNbAlias().setAliasParseBoolean("parseBoolean");
        _lgNames.getContent().getNbAlias().setAliasParseByte("parseByte");
        _lgNames.getContent().getNbAlias().setAliasParseShort("parseShort");
        _lgNames.getContent().getNbAlias().setAliasParseInt("parseInt");
        _lgNames.getContent().getNbAlias().setAliasParseLong("parseLong");
        _lgNames.getContent().getNbAlias().setAliasParseFloat("parseFloat");
        _lgNames.getContent().getNbAlias().setAliasParseDouble("parseDouble");
        _lgNames.getContent().getNbAlias().setAliasParseByteOrNull("parseByteOrNull");
        _lgNames.getContent().getNbAlias().setAliasParseShortOrNull("parseShortOrNull");
        _lgNames.getContent().getNbAlias().setAliasParseIntOrNull("parseIntOrNull");
        _lgNames.getContent().getNbAlias().setAliasParseLongOrNull("parseLongOrNull");
        _lgNames.getContent().getNbAlias().setAliasParseFloatOrNull("parseFloatOrNull");
        _lgNames.getContent().getNbAlias().setAliasParseDoubleOrNull("parseDoubleOrNull");
        _lgNames.getContent().getNbAlias().setAliasBooleanValue("booleanValue");
        _lgNames.getContent().getNbAlias().setAliasByteValue("byteValue");
        _lgNames.getContent().getNbAlias().setAliasShortValue("shortValue");
        _lgNames.getContent().getNbAlias().setAliasCharValue("charValue");
        _lgNames.getContent().getNbAlias().setAliasIntValue("intValue");
        _lgNames.getContent().getNbAlias().setAliasLongValue("longValue");
        _lgNames.getContent().getNbAlias().setAliasFloatValue("floatValue");
        _lgNames.getContent().getNbAlias().setAliasDoubleValue("doubleValue");
        _lgNames.getContent().getNbAlias().setAliasDigit("digit");
        _lgNames.getContent().getNbAlias().setAliasIsDigit("isDigit");
        _lgNames.getContent().getNbAlias().setAliasIsLetter("isLetter");
        _lgNames.getContent().getNbAlias().setAliasIsLetterOrDigit("isLetterOrDigit");
        _lgNames.getContent().getNbAlias().setAliasIsWordChar("isWordChar");
        _lgNames.getContent().getNbAlias().setAliasIsLowerCase("isLowerCase");
        _lgNames.getContent().getNbAlias().setAliasIsUpperCase("isUpperCase");
        _lgNames.getContent().getNbAlias().setAliasIsWhitespace("isWhitespace");
        _lgNames.getContent().getNbAlias().setAliasIsSpace("isSpace");
        _lgNames.getContent().getNbAlias().setAliasIsInfinite("isInfinite");
        _lgNames.getContent().getNbAlias().setAliasIsNan("isNan");
        _lgNames.getContent().getNbAlias().setAliasForDigit("forDigit");
        _lgNames.getContent().getNbAlias().setAliasGetDirectionality("getDirectionality");
        _lgNames.getContent().getReflect().setAliasGetType("getType");
        _lgNames.getContent().getNbAlias().setAliasGetCharType("getType");
        _lgNames.getContent().getCharSeq().setAliasString("$core.String");
        _lgNames.getContent().getCharSeq().setAliasStringValueOf("valueOf");
        _lgNames.getContent().getCharSeq().setAliasLength("length");
        _lgNames.getContent().getCharSeq().setAliasCharAt("charAt");
        _lgNames.getContent().getCharSeq().setAliasToCharArray("toCharArray");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceToString("toString");
        _lgNames.getContent().getCharSeq().setAliasSplit("split");
        _lgNames.getContent().getCharSeq().setAliasSplitChars("splitChars");
        _lgNames.getContent().getCharSeq().setAliasSplitStrings("splitStrings");
        _lgNames.getContent().getCharSeq().setAliasReplace("replace");
        _lgNames.getContent().getCharSeq().setAliasReplaceString("replace");
        _lgNames.getContent().getCharSeq().setAliasReplaceMultiple("replaceMultiple");
        _lgNames.getContent().getCharSeq().setAliasEqualsIgnoreCase("equalsIgnoreCase");
        _lgNames.getContent().getCharSeq().setAliasCompareToIgnoreCase("compareToIgnoreCase");
        _lgNames.getContent().getCharSeq().setAliasContains("contains");
        _lgNames.getContent().getCharSeq().setAliasEndsWith("endsWith");
        _lgNames.getContent().getCharSeq().setAliasStartsWith("startsWith");
        _lgNames.getContent().getCharSeq().setAliasIndexOf("indexOf");
        _lgNames.getContent().getCharSeq().setAliasFormat("format");
        _lgNames.getContent().getCharSeq().setAliasGetBytes("getBytes");
        _lgNames.getContent().getCharSeq().setAliasIsEmpty("isEmpty");
        _lgNames.getContent().getCharSeq().setAliasLastIndexOf("lastIndexOf");
        _lgNames.getContent().getCharSeq().setAliasRegionMatches("regionMatches");
        _lgNames.getContent().getCharSeq().setAliasSubstring("substring");
        _lgNames.getContent().getCharSeq().setAliasSubSequence("subSequence");
        _lgNames.getContent().getCharSeq().setAliasToLowerCase("toLowerCase");
        _lgNames.getContent().getCharSeq().setAliasToUpperCase("toUpperCase");
        _lgNames.getContent().getNbAlias().setAliasToLowerCaseChar("toLowerCase");
        _lgNames.getContent().getNbAlias().setAliasToUpperCaseChar("toUpperCase");
        _lgNames.getContent().getCharSeq().setAliasTrim("trim");
        _lgNames.getContent().getCharSeq().setAliasStringBuilder("$core.StringBuilder");
        _lgNames.getContent().getCharSeq().setAliasAppend("append");
        _lgNames.getContent().getCharSeq().setAliasCapacity("capacity");
        _lgNames.getContent().getCharSeq().setAliasClear("clear");
        _lgNames.getContent().getCharSeq().setAliasDelete("delete");
        _lgNames.getContent().getCharSeq().setAliasDeleteCharAt("deleteCharAt");
        _lgNames.getContent().getCharSeq().setAliasEnsureCapacity("ensureCapacity");
        _lgNames.getContent().getCharSeq().setAliasInsert("insert");
        _lgNames.getContent().getCharSeq().setAliasReverse("reverse");
        _lgNames.getContent().getCharSeq().setAliasSetCharAt("setCharAt");
        _lgNames.getContent().getCharSeq().setAliasSetLength("setLength");
        _lgNames.getContent().getCharSeq().setAliasSame("same");
        _lgNames.getContent().getCharSeq().setAliasTrimToSize("trimToSize");
        _lgNames.getContent().getCoreNames().setAliasErrorInitClass("$core.DefErrorClass");
        _lgNames.getContent().getCoreNames().setAliasClone("clone");
        _lgNames.getContent().getCoreNames().setAliasReadResources("readContent");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesIndex("index");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesNames("readNames");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesNamesLength("nbNames");
        _lgNames.getContent().getCoreNames().setAliasResources("$core.Resources");
        _lgNames.getContent().getCoreNames().setAliasArrayLength("length");
        _lgNames.getContent().getPredefTypes().setAliasEnumValues("values");
        _lgNames.getContent().getReflect().setAliasInvokeTarget("$core.InvokeTarget");
        _lgNames.getContent().getCoreNames().setAliasGetCause("getCause");
        _lgNames.getContent().getReflect().setAliasClassNotFoundError("$core.ClassNotFound");
        _lgNames.getContent().getReflect().setAliasGetVariableOwner("getVariableOwner");
        _lgNames.getContent().getReflect().setAliasGetGenericVariableOwner("getGenericVariableOwner");
        _lgNames.getContent().getReflect().setAliasGetString("getString");
        _lgNames.getContent().getReflect().setAliasClassType("$core.Class");
        _lgNames.getContent().getStackElt().setAliasStackTraceElement("$core.Stack");
        _lgNames.getContent().getStackElt().setAliasCurrentStack("current");
        _lgNames.getContent().getStackElt().setAliasCurrentFullStack("currentFull");
        _lgNames.getContent().getStackElt().setAliasStackTraceElementToString("toString");
        _lgNames.getContent().getReflect().setAliasFct("$core.Fct");
        _lgNames.getContent().getReflect().setAliasCall("call");
        _lgNames.getContent().getReflect().setAliasMetaInfo("metaInfo");
        _lgNames.getContent().getReflect().setAliasInstance("instance");
        _lgNames.getContent().getReflect().setAliasAnnotationType("$core.Annotation");
        _lgNames.getContent().getReflect().setAliasAnnotated("$core.Annotated");
        _lgNames.getContent().getReflect().setAliasGetDefaultValue("getDefaultValue");
        _lgNames.getContent().getReflect().setAliasGetAnnotations("getAnnotations");
        _lgNames.getContent().getReflect().setAliasGetAnnotationsParameters("getAnnotationsParameters");
        _lgNames.getContent().getReflect().setAliasGetDeclaredConstructors("getDeclaredConstructors");
        _lgNames.getContent().getReflect().setAliasGetDeclaredFields("getDeclaredFields");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousTypes("getDeclaredAnonymousTypes");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambda("getDeclaredAnonymousLambda");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambdaLocalVars("getDeclaredAnonymousLambdaLocVars");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambdaLoopVars("getDeclaredAnonymousLambdaLoopVars");
        _lgNames.getContent().getReflect().setAliasGetDeclaredBlocks("getDeclaredBlocks");
        _lgNames.getContent().getReflect().setAliasGetDeclaredLocalTypes("getDeclaredLocalTypes");
        _lgNames.getContent().getReflect().setAliasGetDeclaredMethods("getDeclaredMethods");
        _lgNames.getContent().getReflect().setAliasGetDeclaredExplicits("getDeclaredExplicits");
        _lgNames.getContent().getReflect().setAliasGetDeclaredImplicits("getDeclaredImplicits");
        _lgNames.getContent().getReflect().setAliasGetDeclaredTrueOperators("getDeclaredTrueOperators");
        _lgNames.getContent().getReflect().setAliasGetDeclaredFalseOperators("getDeclaredFalseOperators");
        _lgNames.getContent().getReflect().setAliasGetDeclaredStaticMethods("getDeclaredStaticMethods");
        _lgNames.getContent().getReflect().setAliasMakeGeneric("makeGeneric");
        _lgNames.getContent().getReflect().setAliasGetAllClasses("getAllClasses");
        _lgNames.getContent().getReflect().setAliasGetOperators("getOperators");
        _lgNames.getContent().getReflect().setAliasConstructor("$core.Constructor");
        _lgNames.getContent().getReflect().setAliasField("$core.Field");
        _lgNames.getContent().getReflect().setAliasMethod("$core.Method");
        _lgNames.getContent().getReflect().setAliasInvoke("invoke");
        _lgNames.getContent().getReflect().setAliasInvokeDirect("invokeDirect");
        _lgNames.getContent().getReflect().setAliasNewInstance("newInstance");
        _lgNames.getContent().getReflect().setAliasIsAbstract("isAbstract");
        _lgNames.getContent().getReflect().setAliasGetFileName("getFileName");
        _lgNames.getContent().getReflect().setAliasGetName("getName");
        _lgNames.getContent().getReflect().setAliasGetPrettyName("getPrettyName");
        _lgNames.getContent().getReflect().setAliasGetPrettySingleName("getPrettySingleName");
        _lgNames.getContent().getReflect().setAliasGetField("get");
        _lgNames.getContent().getReflect().setAliasSetField("set");
        _lgNames.getContent().getReflect().setAliasGetClass("getClass");
        _lgNames.getContent().getReflect().setAliasGetEnclosingType("getEnclosingType");
        _lgNames.getContent().getReflect().setAliasGetDeclaredClasses("getDeclaredClasses");
        _lgNames.getContent().getReflect().setAliasForName("forName");
        _lgNames.getContent().getCoreNames().setAliasObjectsUtil("$core.ObjectsUtil");
        _lgNames.getContent().getCoreNames().setAliasStringUtil("$core.StringUtil");
        _lgNames.getContent().getCoreNames().setAliasStringUtilValueOf("valueOf");
        _lgNames.getContent().getCoreNames().setAliasSameRef("eq");
        _lgNames.getContent().getCoreNames().setAliasGetParent("getParent");
        _lgNames.getContent().getCoreNames().setAliasSetParent("setParent");
        _lgNames.getContent().getPredefTypes().setAliasNext("next");
        _lgNames.getContent().getPredefTypes().setAliasHasNext("hasNext");
        _lgNames.getContent().getPredefTypes().setAliasIterableTable("$core.IterableTable");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTable("iteratorTable");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableType("$core.IteratorTable");
        _lgNames.getContent().getPredefTypes().setAliasHasNextPair("hasNextPair");
        _lgNames.getContent().getPredefTypes().setAliasNextPair("nextPair");
        _lgNames.getContent().getPredefTypes().setAliasPairType("$core.Pair");
        _lgNames.getContent().getPredefTypes().setAliasGetFirst("getFirst");
        _lgNames.getContent().getPredefTypes().setAliasGetSecond("getSecond");
        _lgNames.getContent().getCoreNames().setAliasName("name");
        _lgNames.getContent().getCoreNames().setAliasOrdinal("ordinal");
        _lgNames.getContent().getPredefTypes().setAliasEnumName("name");
        _lgNames.getContent().getPredefTypes().setAliasEnumOrdinal("ordinal");
        _lgNames.getContent().getPredefTypes().setAliasEnumPredValueOf("valueOf");
        _lgNames.getContent().getPredefTypes().setAliasIterableVar("T");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTypeVar("T");
        _lgNames.getContent().getPredefTypes().setAliasIterableTableVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasIterableTableVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableTypeVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableTypeVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasPairTypeVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasPairTypeVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasEnumParamVar("T");
        _lgNames.getContent().getPredefTypes().setAliasSeedGenerator("$core.Generator");
        _lgNames.getContent().getPredefTypes().setAliasSeedDoubleGenerator("$core.DoubleGenerator");
        _lgNames.getContent().getPredefTypes().setAliasSeedGet("get");
        _lgNames.getContent().getCharSeq().setAliasGetOldString("getOldString");
        _lgNames.getContent().getCharSeq().setAliasGetNewString("getNewString");
        _lgNames.getContent().getReflect().setAliasGetSuperClass("getSuperClass");
        _lgNames.getContent().getReflect().setAliasGetGenericSuperClass("getGenericSuperClass");
        _lgNames.getContent().getReflect().setAliasGetInterfaces("getInterfaces");
        _lgNames.getContent().getReflect().setAliasGetGenericInterfaces("getGenericInterfaces");
        _lgNames.getContent().getReflect().setAliasGetLowerBounds("getLowerBounds");
        _lgNames.getContent().getReflect().setAliasGetUpperBounds("getUpperBounds");
        _lgNames.getContent().getReflect().setAliasGetComponentType("getComponentType");
        _lgNames.getContent().getReflect().setAliasMakeArray("makeArray");
        _lgNames.getContent().getReflect().setAliasGetParameterTypes("getParameterTypes");
        _lgNames.getContent().getReflect().setAliasGetTypeParameters("getTypeParameters");
        _lgNames.getContent().getReflect().setAliasGetParameterNames("getGenericParameterTypes");
        _lgNames.getContent().getReflect().setAliasGetGenericReturnType("getGenericReturnType");
        _lgNames.getContent().getReflect().setAliasGetReturnType("getReturnType");
        _lgNames.getContent().getReflect().setAliasGetActualTypeArguments("getActualTypeArguments");
        _lgNames.getContent().getReflect().setAliasGetType("getType");
        _lgNames.getContent().getReflect().setAliasGetGenericType("getGenericType");
        _lgNames.getContent().getReflect().setAliasIsFinal("isFinal");
        _lgNames.getContent().getReflect().setAliasIsTypeVariable("isTypeVariable");
        _lgNames.getContent().getReflect().setAliasIsVariable("isVariable");
        _lgNames.getContent().getReflect().setAliasIsStatic("isStatic");
        _lgNames.getContent().getReflect().setAliasIsStaticCall("isStaticCall");
        _lgNames.getContent().getReflect().setAliasIsInstanceMethod("isInstanceMethod");
        _lgNames.getContent().getReflect().setAliasIsVarargs("isVarargs");
        _lgNames.getContent().getReflect().setAliasIsNormal("isNormal");
        _lgNames.getContent().getReflect().setAliasIsPublic("isPublic");
        _lgNames.getContent().getReflect().setAliasIsProtected("isProtected");
        _lgNames.getContent().getReflect().setAliasIsPackage("isPackage");
        _lgNames.getContent().getReflect().setAliasIsPrivate("isPrivate");
        _lgNames.getContent().getReflect().setAliasIsClass("isClass");
        _lgNames.getContent().getReflect().setAliasIsSpecialClass("isSpeClass");
        _lgNames.getContent().getReflect().setAliasIsSpecialMuClass("isSpeMuClass");
        _lgNames.getContent().getReflect().setAliasIsWildCard("isWildCard");
        _lgNames.getContent().getReflect().setAliasIsRefType("isRefType");
        _lgNames.getContent().getReflect().setAliasIsInterface("isInterface");
        _lgNames.getContent().getReflect().setAliasIsEnum("isEnum");
        _lgNames.getContent().getReflect().setAliasIsPrimitive("isPrimitive");
        _lgNames.getContent().getReflect().setAliasIsArray("isArray");
        _lgNames.getContent().getReflect().setAliasIsAnnotation("isAnnotation");
        _lgNames.getContent().getReflect().setAliasMakeWildCard("makeWildCard");
        _lgNames.getContent().getReflect().setAliasMakeRef("makeRefType");
        _lgNames.getContent().getReflect().setAliasIsInstance("isInstance");
        _lgNames.getContent().getReflect().setAliasIsAssignableFrom("isAssignableFrom");
        _lgNames.getContent().getReflect().setAliasInit("init");
        _lgNames.getContent().getReflect().setAliasDefaultInstance("defaultInstance");
        _lgNames.getContent().getReflect().setAliasEnumValueOf("enumValueOf");
        _lgNames.getContent().getReflect().setAliasGetEnumConstants("getEnumConstants");
        _lgNames.getContent().getReflect().setAliasGetGenericBounds("getGenericBounds");
        _lgNames.getContent().getReflect().setAliasGetBounds("getBounds");
        _lgNames.getContent().getReflect().setAliasArrayNewInstance("newArrayInstance");
        _lgNames.getContent().getReflect().setAliasArrayGet("get");
        _lgNames.getContent().getReflect().setAliasArraySet("set");
        _lgNames.getContent().getReflect().setAliasArrayGetLength("getLength");
        _lgNames.getContent().getReflect().setAliasGetDeclaringClass("getDeclaringClass");
        _lgNames.getContent().getMathRef().setAliasBinQuot("binQuot");
        _lgNames.getContent().getMathRef().setAliasBinMod("binMod");
        _lgNames.getContent().getMathRef().setAliasPlus("plus");
        _lgNames.getContent().getMathRef().setAliasMinus("minus");
        _lgNames.getContent().getMathRef().setAliasMult("mult");
        _lgNames.getContent().getMathRef().setAliasAnd("and");
        _lgNames.getContent().getMathRef().setAliasOr("or");
        _lgNames.getContent().getMathRef().setAliasXor("xor");
        _lgNames.getContent().getMathRef().setAliasNegBin("negBin");
        _lgNames.getContent().getMathRef().setAliasNeg("neg");
        _lgNames.getContent().getMathRef().setAliasLt("lt");
        _lgNames.getContent().getMathRef().setAliasGt("gt");
        _lgNames.getContent().getMathRef().setAliasLe("le");
        _lgNames.getContent().getMathRef().setAliasGe("ge");
        _lgNames.getContent().getMathRef().setAliasShiftLeft("shiftLeft");
        _lgNames.getContent().getMathRef().setAliasShiftRight("shiftRight");
        _lgNames.getContent().getMathRef().setAliasBitShiftLeft("bitShiftLeft");
        _lgNames.getContent().getMathRef().setAliasBitShiftRight("bitShiftRight");
        _lgNames.getContent().getMathRef().setAliasRotateLeft("rotateLeft");
        _lgNames.getContent().getMathRef().setAliasRotateRight("rotateRight");
        _lgNames.getContent().getMathRef().setAliasRandom("random");
        _lgNames.getContent().getMathRef().setAliasSeed("seed");
        _lgNames.getDisplayedStrings().setFalseString("false");
        _lgNames.getDisplayedStrings().setTrueString("true");
        _lgNames.getDisplayedStrings().setNullString("");
        _lgNames.getDisplayedStrings().setNotNullCoverString("not null");
        _lgNames.getDisplayedStrings().setNullCoverString("null");
        _lgNames.getDisplayedStrings().setStaticCallString("staticCall");
        _lgNames.getDisplayedStrings().setStaticString("static");
        _lgNames.getDisplayedStrings().setInfinity("Infinity");
        _lgNames.getDisplayedStrings().setNan("Nan");
        _lgNames.getDisplayedStrings().setExponent("E");
        _lgNames.getPredefTypes().getParams().setAliasSeedGenerator0Get0("a");
        stds.put("en", _lgNames);
    }
    public void initFrStds(LgNames _lgNames) {
        _lgNames.getContent().setDefaultPkg("$coeur");
        _lgNames.getContent().getCoreNames().setAliasObject("$coeur.Objet");
        _lgNames.getContent().getCoreNames().setAliasVoid("vide");
        _lgNames.getContent().getCharSeq().setAliasCharSequence("$coeur.SequenceCaractere");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceCompareTo("comparer");
        _lgNames.getContent().getCharSeq().setAliasStringCompare("compare");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceEquals("egal");
        _lgNames.getContent().getNbAlias().setAliasCompareTo("comparer");
        _lgNames.getContent().getNbAlias().setAliasCompare("compare");
        _lgNames.getContent().getNbAlias().setAliasEquals("egal");
        _lgNames.getContent().getNbAlias().setAliasToStringMethod("chaine");
        _lgNames.getContent().getNbAlias().setAliasSignum("sgn");
        _lgNames.getContent().getNbAlias().setAliasToBinString("bin");
        _lgNames.getContent().getNbAlias().setAliasToOctString("oct");
        _lgNames.getContent().getNbAlias().setAliasToHexString("hex");
        _lgNames.getContent().getNbAlias().setAliasValueOfMethod("valeurDe");
        _lgNames.getContent().getNbAlias().setAliasMaxValueField("MAX_VALEUR");
        _lgNames.getContent().getNbAlias().setAliasMinValueField("MIN_VALEUR");
        _lgNames.getContent().getNbAlias().setAliasPlusInfinityField("PLUS_INFINI");
        _lgNames.getContent().getNbAlias().setAliasMinusInfinityField("MOINS_INFINI");
        _lgNames.getContent().getNbAlias().setAliasNanField("PUN");
        _lgNames.getContent().getPredefTypes().setAliasIteratorType("$coeur.Iterateur");
        _lgNames.getContent().getPredefTypes().setAliasIterator("iterateur");
        _lgNames.getContent().getPredefTypes().setAliasIterable("$coeur.Iterable");
        _lgNames.getContent().getPredefTypes().setAliasEnumParam("$coeur.Enum");
        _lgNames.getContent().getPredefTypes().setAliasEnumType("$coeur.$en");
        _lgNames.getContent().getCoreNames().setAliasEnums("$coeur.Enums");
        _lgNames.getContent().getCharSeq().setAliasReplacement("$coeur.Remplacement");
        _lgNames.getContent().getCoreNames().setAliasStore("$coeur.MauvaisStockage");
        _lgNames.getContent().getCoreNames().setAliasNullPe("$coeur.ObjetNul");
        _lgNames.getContent().getCoreNames().setAliasBadEncode("$coeur.MauvaisEncodage");
        _lgNames.getContent().getCoreNames().setAliasBadIndex("$coeur.MauvaisIndice");
        _lgNames.getContent().getCoreNames().setAliasBadArgNumber("$coeur.MauvaisNombreArgs");
        _lgNames.getContent().getCoreNames().setAliasAbstractTypeErr("$coeur.TypeAbstraitErreur");
        _lgNames.getContent().getCoreNames().setAliasIllegalType("$coeur.IllegalType");
        _lgNames.getContent().getCoreNames().setAliasNonInvokable("$coeur.NonInvokable");
        _lgNames.getContent().getCoreNames().setAliasIllegalArg("$coeur.IllegalArgument");
        _lgNames.getContent().getCoreNames().setAliasBadSize("$coeur.TailleNegative");
        _lgNames.getContent().getCoreNames().setAliasError("$coeur.Erreur");
        _lgNames.getContent().getCoreNames().setAliasErrorCurrentStack("courante");
        _lgNames.getContent().getCoreNames().setAliasErrorToString("chaine");
        _lgNames.getContent().getCoreNames().setAliasGetMessage("valMessage");
        _lgNames.getContent().getCoreNames().setAliasCastType("$coeur.MauvaisTranstype");
        _lgNames.getContent().getCoreNames().setAliasDivisionZero("$coeur.DivisionZero");
        _lgNames.getContent().getMathRef().setAliasMath("$coeur.Math");
        _lgNames.getContent().getMathRef().setAliasAbs("abs");
        _lgNames.getContent().getMathRef().setAliasMax("max");
        _lgNames.getContent().getMathRef().setAliasMin("min");
        _lgNames.getContent().getMathRef().setAliasMod("mod");
        _lgNames.getContent().getMathRef().setAliasQuot("quot");
        _lgNames.getContent().getCoreNames().setAliasSof("$coeur.PileTropGrande");
        _lgNames.getContent().getCoreNames().setAliasNbFormat("$coeur.MauvaisFormat");
        _lgNames.getContent().getPrimTypes().setAliasPrimBoolean("booleen");
        _lgNames.getContent().getPrimTypes().setAliasPrimByte("entier1");
        _lgNames.getContent().getPrimTypes().setAliasPrimShort("entier2");
        _lgNames.getContent().getPrimTypes().setAliasPrimChar("caractere");
        _lgNames.getContent().getPrimTypes().setAliasPrimInteger("entier4");
        _lgNames.getContent().getPrimTypes().setAliasPrimLong("entier8");
        _lgNames.getContent().getPrimTypes().setAliasPrimFloat("flottant");
        _lgNames.getContent().getPrimTypes().setAliasPrimDouble("double");
        _lgNames.getContent().getNbAlias().setAliasBoolean("$coeur.Booleen");
        _lgNames.getContent().getNbAlias().setAliasByte("$coeur.Entier1");
        _lgNames.getContent().getNbAlias().setAliasShort("$coeur.Entier2");
        _lgNames.getContent().getNbAlias().setAliasCharacter("$coeur.Caractere");
        _lgNames.getContent().getNbAlias().setAliasInteger("$coeur.Entier4");
        _lgNames.getContent().getNbAlias().setAliasLong("$coeur.Entier8");
        _lgNames.getContent().getNbAlias().setAliasFloat("$coeur.Flottant");
        _lgNames.getContent().getNbAlias().setAliasDouble("$coeur.Double");
        _lgNames.getContent().getNbAlias().setAliasNumber("$coeur.Nombre");
        _lgNames.getContent().getNbAlias().setAliasParseBoolean("parseBooleen");
        _lgNames.getContent().getNbAlias().setAliasParseByte("parseEntier1");
        _lgNames.getContent().getNbAlias().setAliasParseShort("parseEntier2");
        _lgNames.getContent().getNbAlias().setAliasParseInt("parseEntier4");
        _lgNames.getContent().getNbAlias().setAliasParseLong("parseEntier8");
        _lgNames.getContent().getNbAlias().setAliasParseFloat("parseFlottant");
        _lgNames.getContent().getNbAlias().setAliasParseDouble("parseDouble");
        _lgNames.getContent().getNbAlias().setAliasParseByteOrNull("parseEntier1OuNul");
        _lgNames.getContent().getNbAlias().setAliasParseShortOrNull("parseEntier2OuNul");
        _lgNames.getContent().getNbAlias().setAliasParseIntOrNull("parseEntier4OuNul");
        _lgNames.getContent().getNbAlias().setAliasParseLongOrNull("parseEntier8OuNul");
        _lgNames.getContent().getNbAlias().setAliasParseFloatOrNull("parseFlottantOuNul");
        _lgNames.getContent().getNbAlias().setAliasParseDoubleOrNull("parseDoubleOuNul");
        _lgNames.getContent().getNbAlias().setAliasBooleanValue("booleenValue");
        _lgNames.getContent().getNbAlias().setAliasByteValue("valEntier1");
        _lgNames.getContent().getNbAlias().setAliasShortValue("valEntier2");
        _lgNames.getContent().getNbAlias().setAliasCharValue("valCaractere");
        _lgNames.getContent().getNbAlias().setAliasIntValue("valEntier4");
        _lgNames.getContent().getNbAlias().setAliasLongValue("valEntier8");
        _lgNames.getContent().getNbAlias().setAliasFloatValue("valFlottant");
        _lgNames.getContent().getNbAlias().setAliasDoubleValue("valDouble");
        _lgNames.getContent().getNbAlias().setAliasDigit("chiffre");
        _lgNames.getContent().getNbAlias().setAliasIsDigit("estChiffre");
        _lgNames.getContent().getNbAlias().setAliasIsLetter("estLettre");
        _lgNames.getContent().getNbAlias().setAliasIsLetterOrDigit("estLettreOuChiffre");
        _lgNames.getContent().getNbAlias().setAliasIsWordChar("estCaractereMot");
        _lgNames.getContent().getNbAlias().setAliasIsLowerCase("estMinuscule");
        _lgNames.getContent().getNbAlias().setAliasIsUpperCase("estMajuscule");
        _lgNames.getContent().getNbAlias().setAliasIsWhitespace("estEspaceBlanc");
        _lgNames.getContent().getNbAlias().setAliasIsSpace("estEspace");
        _lgNames.getContent().getNbAlias().setAliasIsInfinite("estInfini");
        _lgNames.getContent().getNbAlias().setAliasIsNan("estNbIndefini");
        _lgNames.getContent().getNbAlias().setAliasForDigit("convertir");
        _lgNames.getContent().getNbAlias().setAliasGetDirectionality("valDirection");
        _lgNames.getContent().getNbAlias().setAliasGetCharType("valType");
        _lgNames.getContent().getReflect().setAliasGetType("valType");
        _lgNames.getContent().getCharSeq().setAliasString("$coeur.Chaine");
        _lgNames.getContent().getCharSeq().setAliasStringValueOf("valeurDe");
        _lgNames.getContent().getCharSeq().setAliasLength("longueur");
        _lgNames.getContent().getCharSeq().setAliasCharAt("car");
        _lgNames.getContent().getCharSeq().setAliasToCharArray("versTableauCaracter");
        _lgNames.getContent().getCharSeq().setAliasCharSequenceToString("chaine");
        _lgNames.getContent().getCharSeq().setAliasSplit("separer");
        _lgNames.getContent().getCharSeq().setAliasSplitChars("separerCaracteres");
        _lgNames.getContent().getCharSeq().setAliasSplitStrings("separerChaines");
        _lgNames.getContent().getCharSeq().setAliasReplace("remplacer");
        _lgNames.getContent().getCharSeq().setAliasReplaceString("remplacer");
        _lgNames.getContent().getCharSeq().setAliasReplaceMultiple("remplacerMultiple");
        _lgNames.getContent().getCharSeq().setAliasEqualsIgnoreCase("egalIgnorantCasse");
        _lgNames.getContent().getCharSeq().setAliasCompareToIgnoreCase("compareIgnorantCasse");
        _lgNames.getContent().getCharSeq().setAliasContains("contient");
        _lgNames.getContent().getCharSeq().setAliasEndsWith("terminePar");
        _lgNames.getContent().getCharSeq().setAliasStartsWith("commencePar");
        _lgNames.getContent().getCharSeq().setAliasIndexOf("indiceDe");
        _lgNames.getContent().getCharSeq().setAliasFormat("formatter");
        _lgNames.getContent().getCharSeq().setAliasGetBytes("valOctets");
        _lgNames.getContent().getCharSeq().setAliasIsEmpty("estVide");
        _lgNames.getContent().getCharSeq().setAliasLastIndexOf("dernierIndiceDe");
        _lgNames.getContent().getCharSeq().setAliasRegionMatches("correspondRegions");
        _lgNames.getContent().getCharSeq().setAliasSubstring("sousChaine");
        _lgNames.getContent().getCharSeq().setAliasSubSequence("sousSequence");
        _lgNames.getContent().getCharSeq().setAliasToLowerCase("versMinuscule");
        _lgNames.getContent().getCharSeq().setAliasToUpperCase("versMajuscule");
        _lgNames.getContent().getNbAlias().setAliasToLowerCaseChar("versMinuscule");
        _lgNames.getContent().getNbAlias().setAliasToUpperCaseChar("versMajuscule");
        _lgNames.getContent().getCharSeq().setAliasTrim("trimmer");
        _lgNames.getContent().getCharSeq().setAliasStringBuilder("$coeur.ConstructeurChaine");
        _lgNames.getContent().getCharSeq().setAliasAppend("ajouter");
        _lgNames.getContent().getCharSeq().setAliasCapacity("capacite");
        _lgNames.getContent().getCharSeq().setAliasClear("vider");
        _lgNames.getContent().getCharSeq().setAliasDelete("supprimer");
        _lgNames.getContent().getCharSeq().setAliasDeleteCharAt("supprimerCaractere");
        _lgNames.getContent().getCharSeq().setAliasEnsureCapacity("assurerCapacite");
        _lgNames.getContent().getCharSeq().setAliasInsert("inserer");
        _lgNames.getContent().getCharSeq().setAliasReverse("inverser");
        _lgNames.getContent().getCharSeq().setAliasSetCharAt("majCaractere");
        _lgNames.getContent().getCharSeq().setAliasSetLength("majLongueur");
        _lgNames.getContent().getCharSeq().setAliasSame("meme");
        _lgNames.getContent().getCharSeq().setAliasTrimToSize("trimmerTaille");
        _lgNames.getContent().getCoreNames().setAliasErrorInitClass("$coeur.ErrorDefClasse");
        _lgNames.getContent().getCoreNames().setAliasClone("clone");
        _lgNames.getContent().getCoreNames().setAliasReadResources("lireContenu");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesIndex("indice");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesNames("lireNoms");
        _lgNames.getContent().getCoreNames().setAliasReadResourcesNamesLength("nbNoms");
        _lgNames.getContent().getCoreNames().setAliasResources("$coeur.Ressources");
        _lgNames.getContent().getCoreNames().setAliasArrayLength("longueur");
        _lgNames.getContent().getPredefTypes().setAliasEnumValues("valeurs");
        _lgNames.getContent().getReflect().setAliasInvokeTarget("$coeur.InvoqueCible");
        _lgNames.getContent().getCoreNames().setAliasGetCause("valCause");
        _lgNames.getContent().getReflect().setAliasClassNotFoundError("$coeur.ClasseNonTrouve");
        _lgNames.getContent().getReflect().setAliasGetVariableOwner("valVariablePoss");
        _lgNames.getContent().getReflect().setAliasGetGenericVariableOwner("valGeneVariablePoss");
        _lgNames.getContent().getReflect().setAliasGetString("valChaine");
        _lgNames.getContent().getReflect().setAliasClassType("$coeur.Classe");
        _lgNames.getContent().getStackElt().setAliasStackTraceElement("$coeur.Pile");
        _lgNames.getContent().getStackElt().setAliasCurrentStack("courante");
        _lgNames.getContent().getStackElt().setAliasCurrentFullStack("couranteComplete");
        _lgNames.getContent().getStackElt().setAliasStackTraceElementToString("chaine");
        _lgNames.getContent().getReflect().setAliasFct("$coeur.Fct");
        _lgNames.getContent().getReflect().setAliasCall("appeler");
        _lgNames.getContent().getReflect().setAliasMetaInfo("metaInfo");
        _lgNames.getContent().getReflect().setAliasInstance("instance");
        _lgNames.getContent().getReflect().setAliasAnnotationType("$coeur.Annotation");
        _lgNames.getContent().getReflect().setAliasAnnotated("$coeur.Annote");
        _lgNames.getContent().getReflect().setAliasGetDefaultValue("valDefValeur");
        _lgNames.getContent().getReflect().setAliasGetAnnotations("valAnnotations");
        _lgNames.getContent().getReflect().setAliasGetAnnotationsParameters("valAnnotationsParametrees");
        _lgNames.getContent().getReflect().setAliasGetDeclaredConstructors("valConstructeursDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredFields("valChampsDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousTypes("valTypesAnonymesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambda("valLambdaAnonymesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambdaLocalVars("valLocalVarsLambdaAnonymesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredAnonymousLambdaLoopVars("valBoucleVarsLambdaAnonymesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredBlocks("valBlocsDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredLocalTypes("valLocalTypesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredMethods("valMethodsDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredExplicits("valExplicitesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredImplicits("valImplicitesDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredTrueOperators("valOperateursVraiDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredFalseOperators("valOperateursFauxDeclares");
        _lgNames.getContent().getReflect().setAliasGetDeclaredStaticMethods("valMethodsStaticDeclares");
        _lgNames.getContent().getReflect().setAliasMakeGeneric("rendreGeneric");
        _lgNames.getContent().getReflect().setAliasGetAllClasses("valClasses");
        _lgNames.getContent().getReflect().setAliasGetOperators("valOperateurs");
        _lgNames.getContent().getReflect().setAliasConstructor("$coeur.Constructeur");
        _lgNames.getContent().getReflect().setAliasField("$coeur.Champ");
        _lgNames.getContent().getReflect().setAliasMethod("$coeur.Methode");
        _lgNames.getContent().getReflect().setAliasInvoke("invoque");
        _lgNames.getContent().getReflect().setAliasInvokeDirect("invoqueDirect");
        _lgNames.getContent().getReflect().setAliasNewInstance("nouvelleInstance");
        _lgNames.getContent().getReflect().setAliasIsAbstract("estAbstrait");
        _lgNames.getContent().getReflect().setAliasGetFileName("valNomFichier");
        _lgNames.getContent().getReflect().setAliasGetName("valNom");
        _lgNames.getContent().getReflect().setAliasGetPrettyName("valJoliNom");
        _lgNames.getContent().getReflect().setAliasGetPrettySingleName("valJoliSimpleNom");
        _lgNames.getContent().getReflect().setAliasGetField("obtenir");
        _lgNames.getContent().getReflect().setAliasSetField("maj");
        _lgNames.getContent().getReflect().setAliasGetClass("valClasse");
        _lgNames.getContent().getReflect().setAliasGetEnclosingType("valTypeContenant");
        _lgNames.getContent().getReflect().setAliasGetDeclaredClasses("valClassesDeclarees");
        _lgNames.getContent().getReflect().setAliasForName("parNom");
        _lgNames.getContent().getCoreNames().setAliasObjectsUtil("$coeur.ObjetsUtil");
        _lgNames.getContent().getCoreNames().setAliasStringUtil("$coeur.ChaineUtil");
        _lgNames.getContent().getCoreNames().setAliasStringUtilValueOf("valeurDe");
        _lgNames.getContent().getCoreNames().setAliasSameRef("eq");
        _lgNames.getContent().getCoreNames().setAliasGetParent("valParent");
        _lgNames.getContent().getCoreNames().setAliasSetParent("majParent");
        _lgNames.getContent().getPredefTypes().setAliasNext("suivant");
        _lgNames.getContent().getPredefTypes().setAliasHasNext("aSuivant");
        _lgNames.getContent().getPredefTypes().setAliasIterableTable("$coeur.IterableTable");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTable("iterateurTable");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableType("$coeur.IterateurTable");
        _lgNames.getContent().getPredefTypes().setAliasHasNextPair("aSuivantPair");
        _lgNames.getContent().getPredefTypes().setAliasNextPair("suivantPair");
        _lgNames.getContent().getPredefTypes().setAliasPairType("$coeur.Pair");
        _lgNames.getContent().getPredefTypes().setAliasGetFirst("valPremier");
        _lgNames.getContent().getPredefTypes().setAliasGetSecond("valDeuxieme");
        _lgNames.getContent().getCoreNames().setAliasName("nom");
        _lgNames.getContent().getCoreNames().setAliasOrdinal("ordinal");
        _lgNames.getContent().getPredefTypes().setAliasEnumName("nom");
        _lgNames.getContent().getPredefTypes().setAliasEnumOrdinal("ordinal");
        _lgNames.getContent().getPredefTypes().setAliasEnumPredValueOf("valeurDe");
        _lgNames.getContent().getPredefTypes().setAliasIterableVar("T");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTypeVar("T");
        _lgNames.getContent().getPredefTypes().setAliasIterableTableVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasIterableTableVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableTypeVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasIteratorTableTypeVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasPairTypeVarFirst("T");
        _lgNames.getContent().getPredefTypes().setAliasPairTypeVarSecond("U");
        _lgNames.getContent().getPredefTypes().setAliasEnumParamVar("T");
        _lgNames.getContent().getPredefTypes().setAliasSeedGenerator("$coeur.Generateur");
        _lgNames.getContent().getPredefTypes().setAliasSeedDoubleGenerator("$coeur.GenerateurDec");
        _lgNames.getContent().getPredefTypes().setAliasSeedGet("val");
        _lgNames.getContent().getCharSeq().setAliasGetOldString("valChaineAvant");
        _lgNames.getContent().getCharSeq().setAliasGetNewString("valChaineApres");
        _lgNames.getContent().getReflect().setAliasGetSuperClass("valSuperClasse");
        _lgNames.getContent().getReflect().setAliasGetGenericSuperClass("valGeneSuperClasse");
        _lgNames.getContent().getReflect().setAliasGetInterfaces("valInterfaces");
        _lgNames.getContent().getReflect().setAliasGetGenericInterfaces("valGeneInterfaces");
        _lgNames.getContent().getReflect().setAliasGetLowerBounds("valSousTypesContraintes");
        _lgNames.getContent().getReflect().setAliasGetUpperBounds("valSuperTypesContraintes");
        _lgNames.getContent().getReflect().setAliasGetComponentType("valTypeComposent");
        _lgNames.getContent().getReflect().setAliasMakeArray("rendreTableau");
        _lgNames.getContent().getReflect().setAliasGetParameterTypes("valTypesDeParametres");
        _lgNames.getContent().getReflect().setAliasGetTypeParameters("valTypesParametres");
        _lgNames.getContent().getReflect().setAliasGetParameterNames("valGeneTypesParametres");
        _lgNames.getContent().getReflect().setAliasGetGenericReturnType("valGeneTypeRetour");
        _lgNames.getContent().getReflect().setAliasGetReturnType("valTypeRetour");
        _lgNames.getContent().getReflect().setAliasGetActualTypeArguments("valCourantArgTypes");
        _lgNames.getContent().getReflect().setAliasGetType("valType");
        _lgNames.getContent().getReflect().setAliasGetGenericType("valGeneType");
        _lgNames.getContent().getReflect().setAliasIsFinal("estFinal");
        _lgNames.getContent().getReflect().setAliasIsTypeVariable("estTypeVariable");
        _lgNames.getContent().getReflect().setAliasIsVariable("estVariable");
        _lgNames.getContent().getReflect().setAliasIsStatic("estStatic");
        _lgNames.getContent().getReflect().setAliasIsStaticCall("estStaticAppel");
        _lgNames.getContent().getReflect().setAliasIsInstanceMethod("estMethInstance");
        _lgNames.getContent().getReflect().setAliasIsVarargs("estVarargs");
        _lgNames.getContent().getReflect().setAliasIsNormal("estNormal");
        _lgNames.getContent().getReflect().setAliasIsPublic("estPublic");
        _lgNames.getContent().getReflect().setAliasIsProtected("estProtege");
        _lgNames.getContent().getReflect().setAliasIsPackage("estPaquetage");
        _lgNames.getContent().getReflect().setAliasIsPrivate("estPrive");
        _lgNames.getContent().getReflect().setAliasIsClass("estClasse");
        _lgNames.getContent().getReflect().setAliasIsSpecialClass("estClasseSpe");
        _lgNames.getContent().getReflect().setAliasIsSpecialMuClass("estClasseSpeMu");
        _lgNames.getContent().getReflect().setAliasIsWildCard("estSynthetique");
        _lgNames.getContent().getReflect().setAliasIsRefType("estTypeRef");
        _lgNames.getContent().getReflect().setAliasIsInterface("estInterface");
        _lgNames.getContent().getReflect().setAliasIsEnum("estEnum");
        _lgNames.getContent().getReflect().setAliasIsPrimitive("estPrimitif");
        _lgNames.getContent().getReflect().setAliasIsArray("estTableau");
        _lgNames.getContent().getReflect().setAliasIsAnnotation("estAnnotation");
        _lgNames.getContent().getReflect().setAliasMakeWildCard("rendreSynthetique");
        _lgNames.getContent().getReflect().setAliasMakeRef("rendreTypeRef");
        _lgNames.getContent().getReflect().setAliasIsInstance("estInstance");
        _lgNames.getContent().getReflect().setAliasIsAssignableFrom("estAssignableDe");
        _lgNames.getContent().getReflect().setAliasInit("init");
        _lgNames.getContent().getReflect().setAliasDefaultInstance("instanceParDefaut");
        _lgNames.getContent().getReflect().setAliasEnumValueOf("enumValeurDe");
        _lgNames.getContent().getReflect().setAliasGetEnumConstants("valEnumConst");
        _lgNames.getContent().getReflect().setAliasGetGenericBounds("valGeneContraintes");
        _lgNames.getContent().getReflect().setAliasGetBounds("valContraintes");
        _lgNames.getContent().getReflect().setAliasArrayNewInstance("nouvelleInstanceTableau");
        _lgNames.getContent().getReflect().setAliasArrayGet("obtenir");
        _lgNames.getContent().getReflect().setAliasArraySet("maj");
        _lgNames.getContent().getReflect().setAliasArrayGetLength("valLongeur");
        _lgNames.getContent().getReflect().setAliasGetDeclaringClass("valClasseDeclarante");
        _lgNames.getContent().getMathRef().setAliasBinQuot("binQuot");
        _lgNames.getContent().getMathRef().setAliasBinMod("binMod");
        _lgNames.getContent().getMathRef().setAliasPlus("plus");
        _lgNames.getContent().getMathRef().setAliasMinus("moins");
        _lgNames.getContent().getMathRef().setAliasMult("mult");
        _lgNames.getContent().getMathRef().setAliasAnd("et");
        _lgNames.getContent().getMathRef().setAliasOr("ou");
        _lgNames.getContent().getMathRef().setAliasXor("ouExc");
        _lgNames.getContent().getMathRef().setAliasNegBin("negBin");
        _lgNames.getContent().getMathRef().setAliasNeg("neg");
        _lgNames.getContent().getMathRef().setAliasLt("pq");
        _lgNames.getContent().getMathRef().setAliasGt("gq");
        _lgNames.getContent().getMathRef().setAliasLe("pqe");
        _lgNames.getContent().getMathRef().setAliasGe("gqe");
        _lgNames.getContent().getMathRef().setAliasShiftLeft("glisserGauche");
        _lgNames.getContent().getMathRef().setAliasShiftRight("glisserDroite");
        _lgNames.getContent().getMathRef().setAliasBitShiftLeft("binGlisserGauche");
        _lgNames.getContent().getMathRef().setAliasBitShiftRight("binGlisserDroite");
        _lgNames.getContent().getMathRef().setAliasRotateLeft("rotGauche");
        _lgNames.getContent().getMathRef().setAliasRotateRight("rotDroite");
        _lgNames.getContent().getMathRef().setAliasRandom("alea");
        _lgNames.getContent().getMathRef().setAliasSeed("graine");
        _lgNames.getDisplayedStrings().setFalseString("faux");
        _lgNames.getDisplayedStrings().setTrueString("vrai");
        _lgNames.getDisplayedStrings().setNullString("");
        _lgNames.getDisplayedStrings().setNotNullCoverString("non nul");
        _lgNames.getDisplayedStrings().setNullCoverString("nul");
        _lgNames.getDisplayedStrings().setStaticCallString("staticAppel");
        _lgNames.getDisplayedStrings().setStaticString("static");
        _lgNames.getDisplayedStrings().setInfinity("Infini");
        _lgNames.getDisplayedStrings().setNan("Pun");
        _lgNames.getDisplayedStrings().setExponent("E");
        _lgNames.getPredefTypes().getParams().setAliasSeedGenerator0Get0("a");
        stds.put("fr", _lgNames);
    }
    public KeyWords getKeyWords(String _lg) {
        return keyWords.getVal(_lg);
    }
}
