package code.formathtml;

import code.expressionlanguage.ContextEl;
import code.expressionlanguage.common.ClassField;
import code.expressionlanguage.exec.InitPhase;
import code.expressionlanguage.exec.calls.util.CallingState;
import code.expressionlanguage.exec.calls.util.CustomFoundExc;
import code.expressionlanguage.structs.*;
import code.formathtml.exec.RendStackCall;
import code.formathtml.structs.BeanInfo;
import code.formathtml.util.BeanCustLgNames;
import code.formathtml.util.DefNodeContainer;
import code.formathtml.util.NodeContainer;
import code.formathtml.util.NodeInformations;
import code.sml.Document;
import code.sml.DocumentBuilder;
import code.util.LongMap;
import code.util.LongTreeMap;
import code.util.StringList;
import code.util.StringMap;
import org.junit.Test;

public final class RenderNavigationTest extends CommonRender {
    private static final String CUST_ITER_PATH = "pkg/CustIter";
    private static final String CUST_ITER_TABLE_PATH = "pkg/CustIterTable";
    private static final String CUST_LIST_PATH = "pkg/CustList";
    private static final String CUST_PAIR_PATH = "pkg/CustPair";
    private static final String CUST_TABLE_PATH = "pkg/CustTable";
    @Test
    public void noBeanTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html><body><a c:command=\"page2.html\"/></body></html>";
        String htmlTwo_ = "<html><body>Next</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        files_.put("page2.html", htmlTwo_);
        DualNavigationContext a_ = getDualNavigationContext(locale_, folder_, relative_, files_);
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"page2.html\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body>Next</body></html>", nav_.getHtmlText());
    }
    @Test
    public void noCustBeanTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"page2.html\"/></body></html>";
        String htmlTwo_ = "<html><body>Next</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        StringMap<String> files_ = new StringMap<String>();
        files_.put("page1.html", html_);
        files_.put("page2.html", htmlTwo_);
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        Navigation nav_ = getStdNavigation(locale_, folder_, relative_, filesSec_, files_, "session", "pkg.BeanOne");
//        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
//        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"page2.html\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
    }
    @Test
    public void emptyLinkTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html><body><a c:command=\"page3.html\"/></body></html>";
        String htmlTwo_ = "<html><body>Next</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        files_.put("page2.html", htmlTwo_);
        DualNavigationContext a_ = getDualNavigationContext(locale_, folder_, relative_, files_);
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"page3.html\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("",nav_.getReferenceScroll());
        assertEq("<html><body><a c:command=\"page3.html\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
    }

    private static void processRendAnchorRequest(DualNavigationContext _nav, ContextEl _ctx) {
        Navigation navigation = _nav.getNavigation();
        BeanCustLgNames _advStandards = _nav.getDualAnalyzedContext().getStds();
        RendStackCall _rendStack = new RendStackCall(InitPhase.NOTHING, _ctx);
        _advStandards.processRendAnchorRequest(DocumentBuilder.getFirstElementByAttribute(navigation.getDocument(), navigation.getSession().getRendKeyWords().getAttrNa(), Long.toString(_nav.getDualAnalyzedContext().getStds().getCustPage().getUrl())), navigation, _ctx, _rendStack);
    }

    private static void processRendAnchorRequest2(DualNavigationContext _nav, ContextEl _ctx) {
        Document doc_ = DocumentBuilder.newXmlDocument();
        doc_.appendChild(doc_.createElement(""));
        Navigation navigation = _nav.getNavigation();
        BeanCustLgNames _advStandards = _nav.getDualAnalyzedContext().getStds();
        RendStackCall _rendStack = new RendStackCall(InitPhase.NOTHING, _ctx);
        _advStandards.processRendAnchorRequest(DocumentBuilder.getFirstElementByAttribute(doc_, navigation.getSession().getRendKeyWords().getAttrNa(), Long.toString(_nav.getDualAnalyzedContext().getStds().getCustPage().getUrl())), navigation, _ctx, _rendStack);
    }

    private static Struct processRendAnchorRequestExc(DualNavigationContext _nav, ContextEl _ctx) {
        RendStackCall rendStackCall_ = new RendStackCall(InitPhase.NOTHING, _ctx);
        Navigation navigation = _nav.getNavigation();
        BeanCustLgNames _advStandards = _nav.getDualAnalyzedContext().getStds();
        _advStandards.processRendAnchorRequest(DocumentBuilder.getFirstElementByAttribute(navigation.getDocument(), navigation.getSession().getRendKeyWords().getAttrNa(), Long.toString(_nav.getDualAnalyzedContext().getStds().getCustPage().getUrl())), navigation, _ctx, rendStackCall_);
        return getException(rendStackCall_);
    }

    @Test
    public void beanInitTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"page2.html\"/></body></html>";
        String htmlTwo_ = "<html><body>Next</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" {");
        file_.append("  $int i = 1/0;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        files_.put("page2.html", htmlTwo_);
        assertNotNull(getException(getStdNavigation2(locale_, folder_, relative_, filesSec_, files_, "session", "pkg.BeanOne")));
    }
    @Test
    public void validatorInitTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" {");
        file_.append("  $int i = 1/0;");
        file_.append(" }");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNotNull(getException(rendStackCall_));
    }
    @Test
    public void titleTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html><head><title>MyTitle</title></head><body>Content</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        Navigation nav_ = getStdNavigation3(locale_, folder_, relative_, content_, html_, filesSec_);
//        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
//        assertEq("", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><head><title>MyTitle</title></head><body>Content</body></html>", nav_.getHtmlText());
        assertEq("MyTitle",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
    }

    @Test
    public void anchorFailTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({4})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public Inner click($int p){");
        file_.append("  $return $new Inner();");
        file_.append(" }");
        file_.append(" $public $static $class Inner{");
        file_.append("  $public String $toString(){");
        file_.append("   $return \"\"+1/0;");
        file_.append("  }");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendAnchorRequestExc(a_,ctx_));
    }

    @Test
    public void anchorFail2Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({4})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public Inner click($int p){");
        file_.append("  $return $new Inner();");
        file_.append(" }");
        file_.append(" $public $static $class Inner{");
        file_.append("  $public String $toString(){");
        file_.append("   $return \"\";");
        file_.append("  }");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest2(a_,ctx_);
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>",a_.getNavigation().getHtmlText());
    }
    @Test
    public void anchor1Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({4})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body>Next</body></html>", nav_.getHtmlText());
    }

    @Test
    public void anchor2Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({1})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page3.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body>After</body></html>", nav_.getHtmlText());
    }
    @Test
    public void anchor3Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({1})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val3\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
    }
    @Test
    public void anchor4Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({1})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val3\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
    }

    @Test
    public void anchor5Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({1})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page4.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
    }
    @Test
    public void anchor6Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({4})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_two'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanTwo:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanTwo");
        addBeanInfo(nav_1, i_, "bean_two");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(locale_, folder_, relative_, content_, html_, htmlTwo_, htmlThree_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_two", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body>Next</body></html>", nav_.getHtmlText());
    }
    @Test
    public void anchor7Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({4})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body><a name='sampleName'>Next</a></body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String click($int p){");
        file_.append("  $return $bool(p>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int)","val1", "page2.html#sampleName","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("sampleName", nav_.getReferenceScroll());
        assertEq("<html><body><a name=\"sampleName\">Next</a></body></html>", nav_.getHtmlText());
    }
    @Test
    public void anchor8Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><a c:command=\"$click({par1},{par2})\"/></body></html>";
        String htmlTwo_ = "<html c:bean='bean_one'><body>Next</body></html>";
        String htmlThree_ = "<html c:bean='bean_one'><body>After</body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne<T>:code.bean.Bean{");
        file_.append(" $public $int par1 = 1;");
        file_.append(" $public $int par2 = 3;");
        file_.append(" $public T click($int p, $int q){");
        file_.append("  $return (T)$bool(p+q>2,\"val1\",\"val2\");");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = buildNav();

        setFirst("page1.html", a_.getNavigation().getSession());
        setup(folder_, relative_, a_.getDualAnalyzedContext().getContext());
        setNavigation(a_.getNavigation().getSession());
        initNav(a_.getNavigation().getSession().getNavigation());
        lg(a_.getNavigation().getSession().getNavigation(),"pkg.BeanOne.click($int,$int)","val1", "page2.html","val2", "page3.html");
        Navigation nav_1 = a_.getNavigation();

        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page1.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page2.html");
        a_.getDualAnalyzedContext().getContext().getRenderFiles().add("page3.html");
        BeanInfo i_ = new BeanInfo();
        i_.setScope("session");
        i_.setClassName("pkg.BeanOne<java.lang.String>");
        addBeanInfo(nav_1, i_, "bean_one");
        StringMap<String> filesThree_ = getStringStringMap(folder_, locale_, relative_, content_, html_, htmlTwo_);
        filesThree_.put("page3.html", htmlThree_);
        ContextEl ctx_ = ana(filesSec_,filesThree_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, nav_1, a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><a c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.click($int,$int)\" href=\"\" n-a=\"0\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendAnchorRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body>Next</body></html>", nav_.getHtmlText());
    }
    @Test
    public void form0Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(-1);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
    }
    @Test
    public void form1Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("ONE", ((StringStruct) choice_).getInstance());
    }

    @Test
    public void form2Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select multiple='' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public pkg.CustList<String> choice=$new pkg.CustList<>();");
        file_.append(" {");
        file_.append("  choice.add(\"TWO\");");
        file_.append(" }");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(CustList<String>)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public CustList<String> conv(String[] a){");
        file_.append("  CustList<String> o = $new CustList<>();");
        file_.append("  $foreach(String e:a){");
        file_.append("   o.add(e);");
        file_.append("  }");
        file_.append("  $return o;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select multiple=\"multiple\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(1, ((NumberStruct)getStruct(choice_,new ClassField("pkg.CustList","length"))).intStruct());
        Struct array_ = getStruct(choice_,new ClassField("pkg.CustList", "list"));
        assertEq(1, ((ArrayStruct)array_).getInstance().length);
        assertEq("TWO", ((StringStruct) ((ArrayStruct)array_).getInstance()[0]).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select multiple=\"multiple\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(1, ((NumberStruct)getStruct(choice_,new ClassField("pkg.CustList","length"))).intStruct());
        array_ = getStruct(choice_,new ClassField("pkg.CustList", "list"));
        assertEq(1, ((ArrayStruct)array_).getInstance().length);
        assertEq("ONE", ((StringStruct) ((ArrayStruct)array_).getInstance()[0]).getInstance());
    }

    @Test
    public void form3Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(4, ((NumberStruct) choice_).intStruct());

    }

    @Test
    public void form4Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=-1;");
        file_.append("  indexTwo=-1;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(-1, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(-1, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(false);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(false);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(-1, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(-1, ((NumberStruct) choice_).intStruct());

    }

    @Test
    public void form5Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\" c:convertValue='conv'/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\" c:convertValue='conv'/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append(" $public $int conv(String s){");
        file_.append("  $return Integer.parseInt(s);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(4, ((NumberStruct) choice_).intStruct());

    }
    @Test
    public void form6Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("ONE", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form7Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select default=\"\" name=\"choice\" map=\"$new pkg.CustTable&lt;java.lang.String,java.lang.Integer&gt;()\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertSame(NullStruct.NULL_VALUE,choice_);
    }

    @Test
    public void form8Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\" c:convertValue='conv'/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\" c:convertValue='conv'/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append(" $public $int conv(String s){");
        file_.append("  $return Integer.parseInt(s)/0;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));

    }

    @Test
    public void form9Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\" c:convertValue='conv'/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\" c:convertValue='conv'/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append(" $public Integer conv(String s){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));

    }
    @Test
    public void form10Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><textarea name=\"choice\" c:varValue=\"choice\" c:convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public $int conv(String a){");
        file_.append("  $return Integer.parseInt(a);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><textarea n-i=\"0\" name=\"bean_one.choice\">2</textarea></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("1");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><textarea n-i=\"0\" name=\"bean_one.choice\">1</textarea></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(1, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form11Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("ONE", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form12Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,one'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form13Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage(\"Description one\");");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\">Description one</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form14Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc {0}";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,three'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  mess.setArgs(\"an arg\");");
        file_.append("  $var form = mess.format();");
        file_.append("  $var args = mess.getArgs();");
        file_.append("  $ObjectsUtil.getParent(mess);");
        file_.append("  $var mess2 = Message.newStandardMessage();");
        file_.append("  mess2.setArgs((String)$null);");
        file_.append("  mess2.getArgs();");
        file_.append("  $boolean eq = mess == 0;");
        file_.append("  $boolean eq2 = mess == mess2;");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,three\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,three\">desc an arg</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form15Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><textarea c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><span c:for='myId' c:valueMessage='msg_example,one'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><textarea id=\"myId\" c:validator=\"valRef\" n-i=\"0\" name=\"bean_one.choice\">TWO</textarea><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><textarea id=\"myId\" c:validator=\"valRef\" n-i=\"0\" name=\"bean_one.choice\">ONE</textarea><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form16Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='text' c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><input type='checkbox' c:validator='valRef' id='myId2' name='choiceBool' c:varValue='choiceBool'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"TWO\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"1\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"ONE\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"1\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\">Description two</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceBool"));
        assertTrue(BooleanStruct.isFalse(choice_));
    }
    @Test
    public void form17Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='text' c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><input type='checkbox' c:validator='valRef' id='myId2' name='choiceBool' c:varValue='choiceBool'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $boolean choiceBool=$true;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"TWO\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"1\" checked=\"checked\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("on");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"ONE\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"1\" checked=\"checked\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\">Description two</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceBool"));
        assertTrue(BooleanStruct.isTrue(choice_));
    }
    @Test
    public void form18Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input c:validator='valRef' c:groupId='myId' type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA(folder_, relative_, "pkg.BeanOne", "session");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(false);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(false);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        ni_.setValue(values_);
        nc_ = containers_.getVal(2L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input c:validator=\"valRef\" c:groupId=\"myId\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\" checked=\"checked\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form19Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='text' c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><input type='text' name='textField' c:varValue='textField'/><input type='checkbox' c:validator='valRef' id='myId2' name='choiceBool' c:varValue='choiceBool'/><textarea name='textArea' c:varValue='textArea'/><c:select default=\"\" map=\"combo\" name='choice' varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public String textArea=\"text\";");
        file_.append(" $public String textField=\"text\";");
        file_.append(" $public $boolean choiceBool=$true;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"TWO\"/><input type=\"text\" name=\"bean_one.textField\" n-i=\"1\" value=\"text\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"2\" checked=\"checked\"/><textarea n-i=\"3\" name=\"bean_one.textArea\">text</textarea><select name=\"bean_one.choice\" n-i=\"4\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("tf");
        ni_.setValue(values_);
        nc_ = containers_.getVal(2L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("on");
        ni_.setValue(values_);
        nc_ = containers_.getVal(3L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ta");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"ONE\"/><input type=\"text\" name=\"bean_one.textField\" n-i=\"1\" value=\"tf\"/><input type=\"checkbox\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceBool\" n-i=\"2\" checked=\"checked\"/><textarea n-i=\"3\" name=\"bean_one.textArea\">ta</textarea><select name=\"bean_one.choice\" n-i=\"4\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\">Description two</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceBool"));
        assertTrue(BooleanStruct.isTrue(choice_));
    }
    @Test
    public void form20Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='text' c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><span c:for='myId' c:valueMessage='msg_example,one'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $int i = 1/0;");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"TWO\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"text\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"TWO\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form21Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,one'>NOT DELETE</span></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">NOT DELETE</span></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form22Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,one'> </span></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"> </span></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form23Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span>NOT DELETE</span></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span>NOT DELETE</span></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span>NOT DELETE</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form24Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='{1/0}'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("", nav_.getHtmlText());
    }
    @Test
    public void form25Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name='choice' c:varValue='choice'/><input type='range' c:validator='valRef' id='myId2' name='choiceSec' c:varValue='choiceSec'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $int choiceSec=4;");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"choiceSec\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choiceSec=($int)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  getForms().put(\"choiceSec\",choiceSec);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("8");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"6\"/><input type=\"range\" c:validator=\"valRef\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"8\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\">Description two</span></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form26Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number'  id='myId' name='choice' c:varValue='choice'/><input type='range' id='myId2' name='choiceSec' c:varValue='choiceSec'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $int choiceSec=4;");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"choiceSec\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choiceSec=($int)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  getForms().put(\"choiceSec\",choiceSec);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("8");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"6\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"8\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(8, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form27Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String getScope(){");
        file_.append("  $var forms = getForms();");
        file_.append("  $if (forms == $null || forms.isEmpty()){");
        file_.append("   $return $super.getScope();");
        file_.append("  }");
        file_.append("  $return $super.getScope()+1/0;");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form28Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public code.formathtml.nat.StringMapObject getForms(){");
        file_.append("  $var forms = $super.getForms();");
        file_.append("  $if (forms == $null || forms.isEmpty()){");
        file_.append("   $return forms;");
        file_.append("  }");
        file_.append("  $int i = 1/0;");
        file_.append("  $return forms;");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form29Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public $void setForms(code.formathtml.nat.StringMapObject p){");
        file_.append("  $var forms = $super.getForms();");
        file_.append("  $if (forms == $null || forms.isEmpty()){");
        file_.append("   $super.setForms(p);");
        file_.append("   $return;");
        file_.append("  }");
        file_.append("  $int i = 1/0;");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form30Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   $int i = 1/0;");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getNavigationContext(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form31Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public $void setForms(code.formathtml.nat.StringMapObject p){");
        file_.append("  $if (p == $null || p.size() != 1){");
        file_.append("   $super.setForms(p);");
        file_.append("   $return;");
        file_.append("  }");
        file_.append("  $int i = 1/0;");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContext(folder_, relative_, "request", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }

    @Test
    public void form32Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo);");
        file_.append("  $int i = 1/0;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
    }

    @Test
    public void form33Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate({2},{4})\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><c:for var=\"n\" list=\"numbersTwo\"><input type=\"radio\" name=\"indexTwo\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"indexTwo\");");
        file_.append("  $if (ch != $null){");
        file_.append("   indexTwo=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate($int p,$int q){");
        file_.append("  getForms().put(\"index\",index+p*q);");
        file_.append("  getForms().put(\"indexTwo\",indexTwo+p*q);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate($int,$int)\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(4L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("4");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate($int,$int)\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"3\" value=\"2\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"4\" value=\"4\"/><input type=\"radio\" name=\"bean_one.indexTwo\" n-i=\"5\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(14, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "indexTwo"));
        assertEq(12, ((NumberStruct) choice_).intStruct());

    }

    @Test
    public void form34Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $double index;");
        file_.append(" $public $double[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2d,4d,6d};");
        file_.append("  index=4d;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($double)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).doubleStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6, ((NumberStruct) choice_).doubleStruct());

    }

    @Test
    public void form35Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $double index;");
        file_.append(" $public $double[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2d,4d,6d};");
        file_.append("  index=4d;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($double)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).doubleStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6/");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).doubleStruct());

    }

    @Test
    public void form36Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  index=4;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).doubleStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6/");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).doubleStruct());

    }

    @Test
    public void form37Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><c:set className='pkg.BeanOne' value='b'/><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"b.index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int index;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  index=4;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("", nav_.getHtmlText());
    }

    @Test
    public void form38Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public Integer index;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append("  $enums.name(MyEnum.ONE);");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $enum pkg.MyEnum{");
        file_.append("ONE");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertSame(NullStruct.NULL_VALUE, choice_);
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6, ((NumberStruct) choice_).doubleStruct());

    }

    @Test
    public void form39Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form action=\"\" c:command=\"page1.html\" name=\"myform\"><input type=\"text\" name=\"textField\" c:varValue=\"textField\"/><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String textField=\"txt\";");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"text\" name=\"bean_one.textField\" n-i=\"0\" value=\"txt\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "textField"));
        assertEq("txt", ((StringStruct)choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("after");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"text\" name=\"bean_one.textField\" n-i=\"0\" value=\"after\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "textField"));
        assertEq("after", ((StringStruct)choice_).getInstance());

    }

    @Test
    public void form40Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form action=\"\" c:command=\"page1.html\" name=\"myform\"><input type=\"text\" name=\"textField\" c:varValue=\"textField\"/><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public String textField=\"txt\";");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"text\" name=\"bean_one.textField\" n-i=\"0\" value=\"txt\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "textField"));
        assertEq("txt", ((StringStruct)choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"text\" name=\"bean_one.textField\" n-i=\"0\" value=\"\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "textField"));
        assertSame(NullStruct.NULL_VALUE, choice_);

    }

    @Test
    public void form41Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form action=\"\" c:command=\"page1.html\" name=\"myform\"><input type=\"checkbox\" name=\"boolField\" c:varValue=\"boolField\"/><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $boolean boolField;");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"checkbox\" name=\"bean_one.boolField\" n-i=\"0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "boolField"));
        assertTrue(BooleanStruct.isFalse(choice_));
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("on");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"checkbox\" name=\"bean_one.boolField\" n-i=\"0\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "boolField"));
        assertTrue(BooleanStruct.isTrue(choice_));
    }

    @Test
    public void form42Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form action=\"\" c:command=\"page1.html\" name=\"myform\"><input type=\"checkbox\" name=\"boolField\" c:varValue=\"boolField\"/><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $boolean boolField=$true;");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"checkbox\" name=\"bean_one.boolField\" n-i=\"0\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "boolField"));
        assertTrue(BooleanStruct.isTrue(choice_));
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("off");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form action=\"\" c:command=\"page1.html\" name=\"myform\" n-f=\"0\"><input type=\"checkbox\" name=\"bean_one.boolField\" n-i=\"0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "boolField"));
        assertTrue(BooleanStruct.isFalse(choice_));
    }

    @Test
    public void form43Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public Integer index;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertSame(NullStruct.NULL_VALUE, choice_);
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertSame(NullStruct.NULL_VALUE, choice_);

    }

    @Test
    public void form44Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input c:className='$char' type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $char index;");
        file_.append(" $public $char[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={'2','4','6'};");
        file_.append("  index='4';");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($char)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq('4', ((CharStruct) choice_).getChar());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input c:className=\"$char\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq('6', ((CharStruct) choice_).getChar());

    }

    @Test
    public void form45Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public Integer index;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertSame(NullStruct.NULL_VALUE, choice_);
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\"/><input type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertSame(NullStruct.NULL_VALUE, choice_);

    }

    @Test
    public void form46Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number'  id='myId' name='choice' c:varValue='choice'/><input type='range' id='myId2' name='choiceSec' c:varValue='choiceSec'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $int choiceSec=4;");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"choiceSec\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choiceSec=($int)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  getForms().put(\"choiceSec\",choiceSec);");
        file_.append(" }");
        file_.append(" $public String getScope(){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("8");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"6\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"8\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(8, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form47Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public Object getDataBase(){");
        file_.append("  $int u = 1/0;");
        file_.append("  $return $super.getDataBase();");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getNavigationContext(folder_, relative_, "request", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form48Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"page2.html\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int f;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String getScope(){");
        file_.append("  $int u = 1/(f++-1);");
        file_.append("  $return $super.getScope();");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, getStringStringMap(folder_, locale_, relative_, content_, html_, html_), a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall_.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        //        checkNoExc(session_);
//        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }

    @Test
    public void form49Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number'  id='myId' name='choice' c:varValue='choice'/><input type='range' id='myId2' name='choiceSec' c:varValue='choiceSec'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $int choiceSec=4;");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"choiceSec\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choiceSec=($int)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  getForms().put(\"choiceSec\",choiceSec);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("8");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"6\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"8\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(6, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(8, ((NumberStruct) choice_).intStruct());
    }

    @Test
    public void form50Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"page2.html\"><input type='number'  id='myId' name='choice' c:varValue='choice'/><input type='range' id='myId2' name='choiceSec' c:varValue='choiceSec'/><span c:for='myId' c:valueMessage='msg_example,one'/><span c:for='myId2' c:valueMessage='msg_example,two'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int choice=2;");
        file_.append(" $public $int choiceSec=4;");
        file_.append(" $public $boolean choiceBool;");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=($int)ch;");
        file_.append("  }");
        file_.append("  ch = getForms().getVal(\"choiceSec\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choiceSec=($int)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  getForms().put(\"choiceSec\",choiceSec);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext1(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"page2.html\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());
        
        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        nc_ = containers_.getVal(1L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("8");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page2.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"page2.html\" action=\"\" n-f=\"0\"><input type=\"number\" id=\"myId\" name=\"bean_one.choice\" n-i=\"0\" value=\"2\"/><input type=\"range\" id=\"myId2\" name=\"bean_one.choiceSec\" n-i=\"1\" value=\"4\"/><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/><span c:for=\"myId2\" c:valueMessage=\"msg_example,two\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq(2, ((NumberStruct) choice_).intStruct());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choiceSec"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
    }
    @Test
    public void form51Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"page2.html\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int f;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public $void setScope(String s){");
        file_.append("  $int u = 1/0;");
        file_.append("  $super.setScope(s);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, getStringStringMap(folder_, locale_, relative_, content_, html_, html_), a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall_.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
//        AnalyzedTestNavigation session_ = a_;
//        Navigation nav_ = session_.getNav();
//        checkNoExc(session_);
//        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form52Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"page2.html\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $static $int f;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" {");
        file_.append("  $int u = 1/(f++-1);");
        file_.append(" }");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, getStringStringMap(folder_, locale_, relative_, content_, html_, html_), a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall_.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        //        checkNoExc(session_);
//        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }
    @Test
    public void form53Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"page2.html\"></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $static $int f;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public $void setLanguage(String s){");
        file_.append("  $int u=1/0;");
        file_.append("  $super.setLanguage(s);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext(folder_, relative_, "page", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, getStringStringMap(folder_, locale_, relative_, content_, html_, html_), a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        assertNull(rendStackCall_.getStackCall().getCallingState());
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        //        checkNoExc(session_);
//        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        assertNotNull(processRendFormRequestExc(a_,ctx_));
    }

    @Test
    public void form54Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select validator='valRef' id='myId' default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/><span c:for='myId' c:valueMessage='msg_example,one'/></form><span c:for='myId' c:valueMessage='msg_example,one'/></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $var mess = Message.newStandardMessage();");
        file_.append("  $return mess;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></form><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select id=\"myId\" c:validator=\"valRef\" name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\" selected=\"selected\">1</option><option value=\"TWO\">2</option></select><span c:for=\"myId\" c:valueMessage=\"msg_example,one\">Description one</span></form><span c:for=\"myId\" c:valueMessage=\"msg_example,one\"/></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
    }
    @Test
    public void form55Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><c:select default=\"\" name=\"choice\" map=\"combo\" varValue=\"choice\" convertValue='conv'/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  $if (ch != $null){");
        file_.append("   choice=(String)ch;");
        file_.append("  }");
        file_.append("  numbers={2,4,6};");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public MyInt validate(){");
        file_.append("  getForms().put(\"choice\",choice);");
        file_.append("  $return $new MyInt(2);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.MyInt{");
        file_.append(" $public $int index;");
        file_.append(" $public MyInt(){}");
        file_.append(" $public MyInt($int p){");
        file_.append("  index = p;");
        file_.append(" }");
        file_.append(" $public String $toString()\n");
        file_.append(" {\n");
        file_.append("  $return \"\"+index/0;\n");
        file_.append(" }\n");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getDualNavigationContext2(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><select name=\"bean_one.choice\" n-i=\"0\"><option value=\"ONE\">1</option><option value=\"TWO\" selected=\"selected\">2</option></select></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "choice"));
        assertEq("TWO", ((StringStruct) choice_).getInstance());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("ONE");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
    }

    @Test
    public void form56Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"numbers[0]\" c:varValue=\"numbers[0]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.numbers[0]\" n-i=\"0\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.numbers[0]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form57Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[0]\" c:varValue=\"$this[0]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append(" $public $int $this($int i){");
        file_.append("  $return numbers[i];");
        file_.append(" }");
        file_.append(" $public $void $this($int i){");
        file_.append("  numbers[i]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[0]\" n-i=\"0\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[0]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[1,-1]\" c:varValue=\"$this[1,-1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i+j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i+j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[1,-1]\" n-i=\"0\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[1,-1]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[i:1,j:-1]\" c:varValue=\"$this[i:1,j:-1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i+j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i+j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58__Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' name=\"$this[i:1,j:-1]\" c:varValue=\"$this[i:1,j:-1]\"/><input type='number' c:validator='valRef' name=\"$this[j:-1,i:1]\" c:varValue=\"$this[j:-1,i:1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i+j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i+j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"2\"/><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[j:-1,i:1]\" n-i=\"1\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"9\"/><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[j:-1,i:1]\" n-i=\"1\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58___Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' name=\"$this[i:1,j:-1]\" c:varValue=\"$this[i:1,j:-1]\"/><input type='number' c:validator='valRef' name=\"$this[j:1,i:-1]\" c:varValue=\"$this[j:1,i:-1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public pkg.CustTable<String,Integer> combo=$new pkg.CustTable<>();");
        file_.append(" {");
        file_.append("  combo.add(\"ONE\",1);");
        file_.append("  combo.add(\"TWO\",2);");
        file_.append(" }");
        file_.append(" $public String choice=\"TWO\";");
        file_.append(" $public $int index;");
        file_.append(" $public $int indexTwo;");
        file_.append(" $public $int[] numbers;");
        file_.append(" $public $int[] numbersTwo;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={2,4,6};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0]=($int)ch;");
        file_.append("  }");
        file_.append("  numbersTwo={2,4,6};");
        file_.append("  index=4;");
        file_.append("  indexTwo=6;");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0]);");
        file_.append(" }");
        file_.append(" $public String conv(String a){");
        file_.append("  $return a;");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i+j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i+j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"2\"/><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[j:1,i:-1]\" n-i=\"1\" value=\"2\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(2, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[i:1,j:-1]\" n-i=\"0\" value=\"9\"/><input type=\"number\" c:validator=\"valRef\" name=\"bean_one.$this[j:1,i:-1]\" n-i=\"1\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58____Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[i:0,j:1]\" c:varValue=\"$this[i:0,j:1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i][j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i][j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i:0,j:1]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i:0,j:1]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_____Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[j:1,i:0]\" c:varValue=\"$this[j:1,i:0]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($int i, $int j){");
        file_.append("  $return numbers[i][j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i, $int j){");
        file_.append("  numbers[i][j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[j:1,i:0]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[j:1,i:0]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58______Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><c:set className='$var' value='i=0,j=1'/><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[$that(i),$that(j)]\" c:varValue=\"$this[$that(i),$that(j)]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($that $int i,$that $int j){");
        file_.append("  $return numbers[i][j];");
        file_.append(" }");
        file_.append(" $public $void $this($that $int i,$that $int j){");
        file_.append("  numbers[i][j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$that(i),$that(j)]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$that(i),$that(j)]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_0Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><c:set className='$var' value='i=0,j=1'/><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[$that(i),j]\" c:varValue=\"$this[$that(i),j]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($that $int i, $int j){");
        file_.append("  $return numbers[i][j];");
        file_.append(" }");
        file_.append(" $public $void $this($that $int i, $int j){");
        file_.append("  numbers[i][j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$that(i),j]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$that(i),j]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_1Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><c:set className='$var' value='i=0,j=1'/><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[i,$that(j)]\" c:varValue=\"$this[i,$that(j)]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($int i,$that $int j){");
        file_.append("  $return numbers[i][j];");
        file_.append(" }");
        file_.append(" $public $void $this($int i,$that $int j){");
        file_.append("  numbers[i][j]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i,$that(j)]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[i,$that(j)]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_2Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[0,1]\" c:varValue=\"$this[0,1]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($int... i){");
        file_.append("  $return numbers[i[0]][i[1]];");
        file_.append(" }");
        file_.append(" $public $void $this($int... i){");
        file_.append("  numbers[i[0]][i[1]]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[0,1]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[0,1]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form58_3Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description two\nthree=desc &lt;{0}&gt;";
        String html_ = "<html c:bean='bean_one'><body><form c:command=\"$validate()\"><input type='number' c:validator='valRef' id='myId' name=\"$this[$id(pkg.BeanOne,$int...)]\" c:varValue=\"$this[$id(pkg.BeanOne,$int...)]\"/></form></body></html>";
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class [code.bean.Message;] pkg.MyVal:code.bean.Validator{");
        file_.append(" $public Message validate(Object n,Object o,Object b,Object[] f,String c,String fd){");
        file_.append("  $return $null;");
        file_.append(" }");
        file_.append("}");
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $int[][] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  $var ch = getForms().getVal(\"choice\");");
        file_.append("  numbers={{2,4,6},{8,10,12}};");
        file_.append("  $if (ch != $null){");
        file_.append("   numbers[0][1]=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"choice\",numbers[0][1]);");
        file_.append(" }");
        file_.append(" $public $int $this($int... i){");
        file_.append("  $return numbers[0][1];");
        file_.append(" }");
        file_.append(" $public $void $this($int... i){");
        file_.append("  numbers[0][1]=$value;");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        filesSec_.put(CUST_ITER_PATH, getCustomIterator());
        filesSec_.put(CUST_LIST_PATH, getCustomList());
        filesSec_.put(CUST_ITER_TABLE_PATH, getCustomIteratorTable());
        filesSec_.put(CUST_TABLE_PATH, getCustomTable());
        filesSec_.put(CUST_PAIR_PATH, getCustomPair());
        DualNavigationContext a_ = getContextVal(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_,getStringStringMap(folder_, locale_, relative_, content_, html_),a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$id(pkg.BeanOne,$int...)]\" n-i=\"0\" value=\"4\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).get(0);
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(4, ((NumberStruct) choice_).longStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("9");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input type=\"number\" c:validator=\"valRef\" id=\"myId\" name=\"bean_one.$this[$id(pkg.BeanOne,$int...)]\" n-i=\"0\" value=\"9\"/></form></body></html>", nav_.getHtmlText());
        choice_ = ((ArrayStruct) getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "numbers"))).getInstance()[0];
        choice_ = ((ArrayStruct)choice_).get(1);
        assertEq(9, ((NumberStruct) choice_).longStruct());
    }
    @Test
    public void form59Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input c:className='$double' type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $double index;");
        file_.append(" $public $double[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2.0,4.0,6.0};");
        file_.append("  index=4.0;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($double)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\" checked=\"checked\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4.0, ((DoubleStruct) choice_).doubleStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("6");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\" checked=\"checked\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(6.0, ((DoubleStruct) choice_).doubleStruct());

    }

    @Test
    public void form60Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate()\"><c:for var=\"n\" list=\"numbers\"><input c:className='$double' type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $double index;");
        file_.append(" $public $double[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2.0,4.0,6.0};");
        file_.append("  index=4.0;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($double)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate(){");
        file_.append("  getForms().put(\"index\",index);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate()\" action=\"\" n-f=\"0\"><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2.0\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4.0\" checked=\"checked\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6.0\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4.0, ((DoubleStruct) choice_).doubleStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("a");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());

    }

    @Test
    public void form61Test() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean=\"bean_one\"><body><form c:command=\"$validate({index})\"><c:for var=\"n\" list=\"numbers\"><input c:className='$double' type=\"radio\" name=\"index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $long index=4;");
        file_.append(" $public $long[] numbers;");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($long)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $void validate($long p){");
        file_.append("  getForms().put(\"index\",p);");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        DualNavigationContext a_ = getA_(folder_, relative_, "session", "pkg.BeanOne");
        ContextEl ctx_ = ana(filesSec_, files_,a_);
        RendStackCall rendStackCall_ = initializeRendSession(ctx_, a_.getNavigation(), a_);
        Navigation nav_ = a_.getNavigation();
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
        assertEq("bean_one", a_.getDualAnalyzedContext().getStds().getCurrentBeanName());
        assertEq("<html><body><form c:command=\"$bean_one\" c:sgn=\"pkg.BeanOne.validate($long)\" action=\"\" n-f=\"0\"><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"0\" value=\"2\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"1\" value=\"4\" checked=\"checked\"/><input c:className=\"$double\" type=\"radio\" name=\"bean_one.index\" n-i=\"2\" value=\"6\"/><input type=\"submit\" value=\"OK\"/></form></body></html>", nav_.getHtmlText());
        assertEq("",nav_.getTitle());
        assertEq("",nav_.getReferenceScroll());

        Struct choice_ = getStruct(a_.getDualAnalyzedContext().getStds().getBuiltBeans().getVal("bean_one"),new ClassField("pkg.BeanOne", "index"));
        assertEq(4, ((NumberStruct) choice_).intStruct());
        DefHtmlPage htmlPage_ = (DefHtmlPage)a_.getDualAnalyzedContext().getStds().getCustPage();
        LongMap<LongTreeMap<DefNodeContainer>> containersMap_;
        containersMap_ = htmlPage_.getContainers();
        LongTreeMap< DefNodeContainer> containers_ = containersMap_.getVal(0L);
        NodeContainer nc_;
        NodeInformations ni_;
        StringList values_;
        nc_ = containers_.getVal(0L);
        nc_.setEnabled(true);
        ni_ = nc_.getNodeInformation();
        values_ = new StringList();
        values_.add("a");
        ni_.setValue(values_);
        a_.getDualAnalyzedContext().getStds().getCustPage().setUrl(0);
        processRendFormRequest(a_,ctx_);
        assertEq("page1.html", a_.getDualAnalyzedContext().getStds().getCurrentUrl());
    }

    private static void processRendFormRequest(DualNavigationContext _nav, ContextEl _ctx) {
        _nav.getDualAnalyzedContext().getStds().processRendFormRequest(_nav.getNavigation(), _ctx, new RendStackCall(InitPhase.NOTHING, _ctx), DocumentBuilder.getFirstElementByAttribute(_nav.getNavigation().getDocument(), _nav.getNavigation().getSession().getRendKeyWords().getAttrNf(), Long.toString(_nav.getDualAnalyzedContext().getStds().getCustPage().getUrl())));
    }

    private static Struct processRendFormRequestExc(DualNavigationContext _nav, ContextEl _ctx) {
        RendStackCall rendStackCall_ = new RendStackCall(InitPhase.NOTHING, _ctx);
        _nav.getDualAnalyzedContext().getStds().processRendFormRequest(_nav.getNavigation(), _ctx, rendStackCall_, DocumentBuilder.getFirstElementByAttribute(_nav.getNavigation().getDocument(), _nav.getNavigation().getSession().getRendKeyWords().getAttrNf(), Long.toString(_nav.getDualAnalyzedContext().getStds().getCustPage().getUrl())));
        return getException(rendStackCall_);
    }

    @Test
    public void form1FailTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html><body><form c:command=\"$pkg.BeanOne.validate\"><c:for var=\"n\" list=\"pkg.BeanOne.numbers\"><input type=\"radio\" name=\"pkg.BeanOne.index\" c:varValue=\"n\"/></c:for><input type=\"submit\" value=\"OK\"/></form></body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
        file_.append(" $public $static $int index=4;");
        file_.append(" $public $static $int[] numbers={2,4,6};");
        file_.append(" $public $void beforeDisplaying(){");
        file_.append("  numbers={2,4,6};");
        file_.append("  index=4;");
        file_.append("  $var ch = getForms().getVal(\"index\");");
        file_.append("  $if (ch != $null){");
        file_.append("   index=($int)ch;");
        file_.append("  }");
        file_.append(" }");
        file_.append(" $public $static $void validate(){");
        file_.append(" }");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        assertTrue(getStdNavigation7(locale_, folder_, relative_, files_, filesSec_, "page1.html"));

    }
//    @Test
//    public void form2FailTest() {
//        String locale_ = "en";
//        String folder_ = "messages";
//        String relative_ = "sample/file";
//        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
//        String html_ = "<html><body>Content</body></html>";
//        StringMap<String> files_ = new StringMap<String>();
//        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
//        files_.put("page1.html", html_);
//        StringMap<String> filesSec_ = new StringMap<String>();
//        StringBuilder file_ = new StringBuilder();
//        file_.append("$public $class pkg.BeanOne:code.bean.Bean{");
//        file_.append(" $public $int index=4;");
//        file_.append(" $public $int[] numbers={2,4,6};");
//        file_.append(" $public $void beforeDisplaying(){");
//        file_.append("  numbers={2,4,6};");
//        file_.append("  index=4;");
//        file_.append("  $var ch = getForms().getVal(\"index\");");
//        file_.append("  $if (ch != $null){");
//        file_.append("   index=($int)ch;");
//        file_.append("  }");
//        file_.append(" }");
//        file_.append(" $public $void validate(){");
//        file_.append(" }");
//        file_.append("}");
//        filesSec_.put("my_file",file_.toString());
//        assertTrue(getStdNavigation7(locale_, folder_, relative_, files_, filesSec_, "page.html"));
//
//    }
    @Test
    public void form3FailTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html c:bean='bean_one'><body>Content</body></html>";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        StringMap<String> filesSec_ = new StringMap<String>();
        StringBuilder file_ = new StringBuilder();
        file_.append("$public $abstract $class pkg.BeanOne:code.bean.Bean{");
        file_.append("}");
        filesSec_.put("my_file",file_.toString());
        assertTrue(getStdNavigation6(locale_, folder_, relative_, files_, filesSec_));

    }
    @Test
    public void form4FailTest() {
        String locale_ = "en";
        String folder_ = "messages";
        String relative_ = "sample/file";
        String content_ = "one=Description one\ntwo=Description <a href=\"\">two</a>\nthree=desc &lt;{0}&gt;\nfour=''asp''";
        String html_ = "<html><body>Content";
        StringMap<String> files_ = new StringMap<String>();
        files_.put(EquallableRenderUtil.formatFile(folder_,locale_,relative_), content_);
        files_.put("page1.html", html_);
        assertTrue(initSessionFail(locale_, folder_, relative_, files_, new StringMap<String>(), "page", "pkg.BeanOne"));
    }

    private static void initNav(StringMap<StringMap<String>> _nav) {
//        StringMap<StringMap<String>> sub_ = new StringMap<StringMap<String>>();
//        _nav.addEntry("bean_one", sub_);
    }
    private static void lg(StringMap<StringMap<String>> _nav, String _d, String _key1, String _value1, String _key2, String _value2) {
        StringMap<String> v_ = new StringMap<String>();
        v_.addEntry(_key1,_value1);
        v_.addEntry(_key2,_value2);
        _nav.put(_d, v_);
    }
    protected static Struct getException(RendStackCall _cont) {
        CallingState str_ = _cont.getStackCall().getCallingState();
        return ((CustomFoundExc) str_).getStruct();
    }
    private static String getCustomPair() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustPair<U,V> :$pair<U,V>{\n");
        xml_.append(" $private U first;\n");
        xml_.append(" $private V second;\n");
        xml_.append(" $public CustPair(){\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair(U f,V s){\n");
        xml_.append("  first = f;\n");
        xml_.append("  second = s;\n");
        xml_.append(" }\n");
        xml_.append(" $public U getFirst(){\n");
        xml_.append("  $return first;\n");
        xml_.append(" }\n");
        xml_.append(" $public V getSecond(){\n");
        xml_.append("  $return second;\n");
        xml_.append(" }\n");
        xml_.append(" $public $void setFirst(U f){\n");
        xml_.append("  first = f;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomTable() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustTable<U,V> :$iterableTable<U,V>{\n");
        xml_.append(" $private CustList<CustPair<U,V>> list;\n");
        xml_.append(" $public (){\n");
        xml_.append("  list=$new CustList<CustPair<U,V>>();\n");
        xml_.append(" }\n");
        xml_.append(" $public $void add(U f,V s){\n");
        xml_.append("  list.add($new CustPair<U,V>(f,s));\n");
        xml_.append(" }\n");
        xml_.append(" $public $void add(CustPair<U,V> p){\n");
        xml_.append("  list.add(p);\n");
        xml_.append(" }\n");
        xml_.append(" $public $int size(){\n");
        xml_.append("  $return list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair<U,V> get($int index){\n");
        xml_.append("  $return list.get(index);\n");
        xml_.append(" }\n");
        xml_.append(" $public $iteratorTable<U,V> iteratorTable(){\n");
        xml_.append("  $return $new CustIterTable<U,V>($this);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomIteratorTable() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustIterTable<U,V> :$iteratorTable<U,V>{\n");
        xml_.append(" $private CustTable<U,V> list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $private $int index;\n");
        xml_.append(" $public CustIterTable(CustTable<U,V> i){\n");
        xml_.append("  list=i;\n");
        xml_.append("  length=list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public CustPair<U,V> nextPair(){\n");
        xml_.append("  CustPair<U,V> out=list.get(index);\n");
        xml_.append("  index++;\n");
        xml_.append("  $return out;\n");
        xml_.append(" }\n");
        xml_.append(" $public $boolean hasNextPair(){\n");
        xml_.append("  $return index<length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomList() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustList<U> :$iterable<U>{\n");
        xml_.append(" $private U[] list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $public (){\n");
        xml_.append("  list=$new U[0i];\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void add(U elt){\n");
        xml_.append("  add(length,elt);\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void add($int index,U elt){\n");
        xml_.append("  U[] newlist=$new U[length+1i];\n");
        xml_.append("  $iter($int i=0i;index;1i){\n");
        xml_.append("   newlist[i]=list[i];\n");
        xml_.append("  }\n");
        xml_.append("  newlist[index]=elt;\n");
        xml_.append("  $iter($int i=index+1i;length+1i;1i){\n");
        xml_.append("   newlist[i]=list[i-1i];\n");
        xml_.append("  }\n");
        xml_.append("  length++;\n");
        xml_.append("  list=newlist;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $int size(){\n");
        xml_.append("  $return length;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal U get($int index){\n");
        xml_.append("  $return list[index];\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void set($int index,U elt){\n");
        xml_.append("  list[index]=elt;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $void remove($int index){\n");
        xml_.append("  $iter($int i=index;length-1i;1i){\n");
        xml_.append("   list[i]=list[i+1i];\n");
        xml_.append("  }\n");
        xml_.append("  list[length-1i]=$null;\n");
        xml_.append("  length--;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $iterator<U> iterator(){\n");
        xml_.append("  $return $new pkg.CustIter<U>($this);\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }
    private static String getCustomIterator() {
        StringBuilder xml_ = new StringBuilder();
        xml_.append("$public $class pkg.CustIter<T> :$iterator<T>{\n");
        xml_.append(" $private pkg.CustList<T> list;\n");
        xml_.append(" $private $int length;\n");
        xml_.append(" $private $int index;\n");
        xml_.append(" $public (pkg.CustList<T> i){\n");
        xml_.append("  list=i;\n");
        xml_.append("  length=list.size();\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal T next(){\n");
        xml_.append("  T out=list.get(index);\n");
        xml_.append("  index++;\n");
        xml_.append("  $return out;\n");
        xml_.append(" }\n");
        xml_.append(" $public $normal $boolean hasNext(){\n");
        xml_.append("  $return index<length;\n");
        xml_.append(" }\n");
        xml_.append("}\n");
        return xml_.toString();
    }


}
