package aiki.map;

import aiki.db.EquallablePkUtil;
import aiki.game.fight.InitializationDataBase;
import aiki.map.util.PlaceInterConnects;
import aiki.util.*;
import org.junit.Test;

import aiki.map.buildings.Building;
import aiki.map.buildings.Gym;
import aiki.map.buildings.PokemonCenter;
import aiki.map.characters.CharacterInRoadCave;
import aiki.map.characters.DealerItem;
import aiki.map.characters.DualFight;
import aiki.map.characters.GymTrainer;
import aiki.map.enums.Direction;
import aiki.map.levels.AreaApparition;
import aiki.map.levels.Block;
import aiki.map.levels.LevelCave;
import aiki.map.levels.LevelIndoorGym;
import aiki.map.levels.LevelIndoorPokemonCenter;
import aiki.map.levels.LevelLeague;
import aiki.map.levels.LevelOutdoor;
import aiki.map.levels.LevelRoad;
import aiki.map.levels.Link;
import aiki.map.levels.enums.EnvironmentType;
import aiki.map.places.Cave;
import aiki.map.places.City;
import aiki.map.places.League;
import aiki.map.places.Place;
import aiki.map.places.Road;
import aiki.map.pokemon.WildPk;
import aiki.map.util.PlaceInterConnect;
import code.util.CustList;
import code.util.EqList;
import code.util.*;
import code.util.ObjectMap;
import code.util.StringList;

public class DataMapInitializeAccessibilityTest extends EquallablePkUtil {

    private static final String LINK = "link";
    private static final String VOIE = "voie";

    private static City city() {
        City c_ = new City();
        c_.setSavedlinks(new PlaceInterConnects());
        c_.setLinksWithCaves(new PointsLink());
        LevelOutdoor city_ = new LevelOutdoor();
        city_.setBlocks(new PointsBlock());
        Block block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)6), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.NOTHING, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)6), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)6), block_);
        c_.setLevel(city_);
        c_.setBuildings(new PointsBuilding());
        Gym gym_ = new Gym();
        gym_.setExitCity(new Point((short)1,(short)0));
        gym_.setLevel(new LevelIndoorGym());
        gym_.getLevel().setBlocks(new PointsBlock());
        block_ = new Block((short)6,(short)6, EnvironmentType.BUILDING, VOIE);
        gym_.getLevel().getBlocks().put(new Point((short)0,(short)0), block_);
        gym_.getIndoor().setGymLeaderCoords(new Point((short)1,(short)1));
        gym_.getIndoor().setGymTrainers(new PointsGymTrainer());
        c_.getBuildings().put(new Point((short)4,(short)5), gym_);
        return c_;
    }

    private static City cityPkCenter() {
        City c_ = new City();
        c_.setSavedlinks(new PlaceInterConnects());
        c_.setLinksWithCaves(new PointsLink());
        LevelOutdoor city_ = new LevelOutdoor();
        city_.setBlocks(new PointsBlock());
        Block block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)0,(short)6), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.NOTHING, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)3,(short)6), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)3), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        city_.getBlocks().put(new Point((short)6,(short)6), block_);
        c_.setLevel(city_);
        c_.setBuildings(new PointsBuilding());
        PokemonCenter pkCenter_ = new PokemonCenter();
        pkCenter_.setExitCity(new Point((short)1,(short)1));
        LevelIndoorPokemonCenter lIndoor_ = new LevelIndoorPokemonCenter();
        lIndoor_.setBlocks(new PointsBlock());
        block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        lIndoor_.getBlocks().put(new Point((short)0,(short)0), block_);
        pkCenter_.setLevel(lIndoor_);
        c_.getBuildings().put(new Point((short)4,(short)5), pkCenter_);
        return c_;
    }

    private static Road hroad() {
        Road road_ = new Road();
        road_.setSavedlinks(new PlaceInterConnects());
        road_.setLinksWithCaves(new PointsLink());
        LevelRoad level_ = new LevelRoad();
        level_.setCharacters(new PointsCharacterInRoadCave());
        level_.setDualFights(new PointsDualFight());
        level_.setBlocks(new PointsBlock());
        level_.setLegendaryPks(new PointsWildPk());
        level_.setItems(new PointsString());
        level_.setHm(new PointsShort());
        level_.setTm(new PointsShort());
        level_.setWildPokemonAreas(new CustList<AreaApparition>());
        Block block_ = new Block((short)6,(short)3, EnvironmentType.ROAD, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)0), block_);
        road_.setLevel(level_);
        return road_;
    }
    private static Road vroad() {
        Road road_ = new Road();
        road_.setSavedlinks(new PlaceInterConnects());
        road_.setLinksWithCaves(new PointsLink());
        LevelRoad level_ = new LevelRoad();
        level_.setCharacters(new PointsCharacterInRoadCave());
        level_.setDualFights(new PointsDualFight());
        level_.setBlocks(new PointsBlock());
        level_.setLegendaryPks(new PointsWildPk());
        level_.setItems(new PointsString());
        level_.setHm(new PointsShort());
        level_.setTm(new PointsShort());
        level_.setWildPokemonAreas(new CustList<AreaApparition>());
        Block block_ = new Block((short)3,(short)6, EnvironmentType.ROAD, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)0), block_);
        road_.setLevel(level_);
        return road_;
    }

    private static Road vroadBlocked() {
        Road road_ = new Road();
        road_.setSavedlinks(new PlaceInterConnects());
        road_.setLinksWithCaves(new PointsLink());
        LevelRoad level_ = new LevelRoad();
        level_.setCharacters(new PointsCharacterInRoadCave());
        level_.setDualFights(new PointsDualFight());
        level_.setBlocks(new PointsBlock());
        level_.setLegendaryPks(new PointsWildPk());
        level_.setItems(new PointsString());
        level_.setHm(new PointsShort());
        level_.setTm(new PointsShort());
        level_.setWildPokemonAreas(new CustList<AreaApparition>());
        Block block_ = new Block((short)3,(short)3, EnvironmentType.ROAD, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.NOTHING, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)3), block_);
        road_.setLevel(level_);
        return road_;
    }

    private static Cave cave() {
        Cave cave_ = new Cave();
        cave_.setLevels(new CustList<LevelCave>());
        cave_.setLinksWithOtherPlaces(new LevelPoints());
        return cave_;
    }
    private static LevelCave levelCaveOne() {
        LevelCave levelCave_;
        levelCave_ = new LevelCave();
        levelCave_.setBlocks(new PointsBlock());
        levelCave_.setCharacters(new PointsCharacterInRoadCave());
        levelCave_.setDualFights(new PointsDualFight());
        levelCave_.setLinksOtherLevels(new PointsLink());
        levelCave_.setLegendaryPks(new PointsWildPk());
        levelCave_.setItems(new PointsString());
        levelCave_.setHm(new PointsShort());
        levelCave_.setTm(new PointsShort());
        levelCave_.setWildPokemonAreas(new CustList<AreaApparition>());
        Block block_ = new Block((short)3,(short)6, EnvironmentType.ROCK, VOIE);
        levelCave_.getBlocks().put(new Point((short)0,(short)0), block_);
        return levelCave_;
    }
    private static LevelCave levelCaveTwo() {
        LevelCave levelCave_;
        levelCave_ = new LevelCave();
        levelCave_.setBlocks(new PointsBlock());
        levelCave_.setCharacters(new PointsCharacterInRoadCave());
        levelCave_.setDualFights(new PointsDualFight());
        levelCave_.setLinksOtherLevels(new PointsLink());
        levelCave_.setLegendaryPks(new PointsWildPk());
        levelCave_.setItems(new PointsString());
        levelCave_.setHm(new PointsShort());
        levelCave_.setTm(new PointsShort());
        levelCave_.setWildPokemonAreas(new CustList<AreaApparition>());
        Block block_ = new Block((short)3,(short)3, EnvironmentType.ROCK, VOIE);
        levelCave_.getBlocks().put(new Point((short)0,(short)0), block_);
        block_ = new Block((short)3,(short)3, EnvironmentType.NOTHING, VOIE);
        levelCave_.getBlocks().put(new Point((short)0,(short)3), block_);
        return levelCave_;
    }
    private static League league(Coords _access) {
        League league_ = new League();
        league_.setAccessCoords(_access);
        league_.setRooms(new CustList<LevelLeague>());
        LevelLeague level_ = new LevelLeague();
        level_.setBlocks(new PointsBlock());
        Block block_ = new Block((short)5,(short)5, EnvironmentType.ROAD, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)0), block_);
        level_.setAccessPoint(new Point((short)2,(short)0));
        level_.setNextLevelTarget(new Point((short)2,(short)4));
        level_.setTrainerCoords(new Point((short)2,(short)2));
        league_.getRooms().add(level_);
        level_ = new LevelLeague();
        level_.setBlocks(new PointsBlock());
        block_ = new Block((short)5,(short)5, EnvironmentType.ROAD, VOIE);
        level_.getBlocks().put(new Point((short)0,(short)0), block_);
        level_.setAccessPoint(new Point((short)2,(short)0));
        level_.setNextLevelTarget(new Point());
        level_.setTrainerCoords(new Point((short)2,(short)2));
        league_.getRooms().add(level_);
        league_.setBegin(new Point((short)2,(short)4));
        return league_;
    }
    private static Coords coords(int _pl, int _level, int _x,int _y) {
        Coords c_ = new Coords();
        c_.setNumberPlace((short) _pl);
        c_.setLevel(new LevelPoint());
        c_.getLevel().setLevelIndex((byte) _level);
        c_.getLevel().setPoint(new Point((short)_x,(short)_y));
        return c_;
    }
    private static Coords coords(int _pl,int _xi,int _yi,int _x,int _y) {
        Coords c_ = new Coords();
        c_.setNumberPlace((short) _pl);
        c_.setInsideBuilding(new Point((short)_xi,(short)_yi));
        c_.setLevel(new LevelPoint());
        c_.getLevel().setLevelIndex((byte) 0);
        c_.getLevel().setPoint(new Point((short)_x,(short)_y));
        return c_;
    }
    private static LevelPoint levelPoint(int _l,int _x, int _y) {
        LevelPoint lPoint_ = new LevelPoint();
        lPoint_.setLevelIndex((byte) _l);
        lPoint_.setPoint(point(_x, _y));
        return lPoint_;
    }
    private static Point point(int _x, int _y) {
        return new Point((short) _x,(short) _y);
    }
    private static DealerItem dealerItem() {
        DealerItem d_ = new DealerItem();
        d_.setImageMiniFileName("");
        d_.setItems(new StringList());
        d_.setTechnicalMoves(new Shorts());
        return d_;
    }
    private static DataMap initCondition() {
        City cityOne_ = city();
        City cityTwo_ = city();
        City cityThree_ = city();
        City cityFour_ = city();
        City cityFive_ = city();
        Road roadOne_ = vroad();
        Road roadTwo_ = hroad();
        Road roadThree_ = vroad();
        Road roadFour_ = hroad();
        Road roadFive_ = hroad();
        Road roadSix_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(cityOne_, dataMap_);
        addRoad(roadOne_, dataMap_);
        addCity(cityTwo_, dataMap_);
        addRoad(roadTwo_, dataMap_);
        addCity(cityThree_, dataMap_);
        addRoad(roadThree_, dataMap_);
        addCity(cityFour_, dataMap_);
        addRoad(roadFour_, dataMap_);
        addRoad(roadFive_, dataMap_);
        Coords coordsAccessLeague_ = new Coords();
        coordsAccessLeague_.setNumberPlace((short) 8);
        coordsAccessLeague_.setLevel(new LevelPoint());
        coordsAccessLeague_.getLevel().setLevelIndex((byte) 0);
        coordsAccessLeague_.getLevel().setPoint(new Point((short)5,(short)1));
        addLeague(dataMap_, coordsAccessLeague_);
        addRoad(roadSix_, dataMap_);
        addCity(cityFive_, dataMap_);
        dataMap_.join((short)0, (short)1, new Point((short)4,(short)0), new Point((short)1,(short)5), Direction.UP);
        dataMap_.join((short)1, (short)2, new Point((short)1,(short)0), new Point((short)4,(short)8), Direction.UP);
        dataMap_.join((short)2, (short)3, new Point((short)8,(short)4), new Point((short)0,(short)1), Direction.RIGHT);
        dataMap_.join((short)3, (short)4, new Point((short)5,(short)1), new Point((short)0,(short)4), Direction.RIGHT);
        dataMap_.join((short)4, (short)5, new Point((short)4,(short)8), new Point((short)1,(short)0), Direction.DOWN);
        dataMap_.join((short)5, (short)6, new Point((short)1,(short)5), new Point((short)4,(short)0), Direction.DOWN);
        dataMap_.join((short)6, (short)7, new Point((short)0,(short)4), new Point((short)5,(short)1), Direction.LEFT);
        dataMap_.join((short)7, (short)0, new Point((short)0,(short)1), new Point((short)8,(short)4), Direction.LEFT);
        dataMap_.join((short)8, (short)5, new Point((short)0,(short)1), new Point((short)2,(short)4), Direction.LEFT);
        dataMap_.join((short)10, (short)0, new Point((short)5,(short)1), new Point((short)0,(short)5), Direction.RIGHT);
        dataMap_.join((short)10, (short)11, new Point((short)0,(short)1), new Point((short)8,(short)4), Direction.LEFT);
        Condition leaders_ = new Condition();
        leaders_.add(coords(0,4,5,1,1));
        leaders_.add(coords(2,4,5,1,1));
        leaders_.add(coords(4,4,5,1,1));
        leaders_.add(coords(6,4,5,1,1));
        dataMap_.getAccessCondition().put(coordsAccessLeague_, leaders_);
        Coords coordsBlock_ = new Coords();
        coordsBlock_.setNumberPlace((short) 7);
        coordsBlock_.setLevel(new LevelPoint());
        coordsBlock_.getLevel().setLevelIndex((byte) 0);
        coordsBlock_.getLevel().setPoint(new Point((short)3,(short)0));
        dataMap_.getAccessCondition().put(coordsBlock_, new Condition(leaders_));
        coordsBlock_ = new Coords();
        coordsBlock_.setNumberPlace((short) 7);
        coordsBlock_.setLevel(new LevelPoint());
        coordsBlock_.getLevel().setLevelIndex((byte) 0);
        coordsBlock_.getLevel().setPoint(new Point((short)3,(short)1));
        dataMap_.getAccessCondition().put(coordsBlock_, new Condition(leaders_));
        coordsBlock_ = new Coords();
        coordsBlock_.setNumberPlace((short) 7);
        coordsBlock_.setLevel(new LevelPoint());
        coordsBlock_.getLevel().setLevelIndex((byte) 0);
        coordsBlock_.getLevel().setPoint(new Point((short)3,(short)2));
        dataMap_.getAccessCondition().put(coordsBlock_, new Condition(leaders_));
        leaders_ = new Condition();
        leaders_.add(coords(0,4,5,1,1));
        Coords coords_;
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)2,(short)0));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)2,(short)1));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)2,(short)2));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        leaders_ = new Condition();
        leaders_.add(coords(2,4,5,1,1));
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)3,(short)0));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)3,(short)1));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 3);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)3,(short)2));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        leaders_ = new Condition();
        leaders_.add(coords(4,4,5,1,1));
        coords_ = new Coords();
        coords_.setNumberPlace((short) 5);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)0,(short)1));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 5);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)1,(short)1));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 5);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)2,(short)1));
        dataMap_.getAccessCondition().put(coords_, leaders_);
        Condition leagues_ = new Condition();
        leagues_.add(coords(9,0,2,4));
        coords_ = new Coords();
        coords_.setNumberPlace((short) 10);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)5,(short)0));
        dataMap_.getAccessCondition().put(coords_, leagues_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 10);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)5,(short)1));
        dataMap_.getAccessCondition().put(coords_, leagues_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 10);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)5,(short)2));
        dataMap_.getAccessCondition().put(coords_, leagues_);
        coords_ = new Coords();
        coords_.setNumberPlace((short) 0);
        coords_.setLevel(new LevelPoint());
        coords_.getLevel().setLevelIndex((byte) 0);
        coords_.getLevel().setPoint(new Point((short)0,(short)0));
        dataMap_.setBegin(coords_);
        return dataMap_;
    }
    @Test
    public void initCondition1Test() {
        DataMap dataMap_ = initCondition();
        Condition cond_ = dataMap_.initCondition(coords(0,0, 0, 0), new Condition(coords(2,4,5,1,1)));
        assertEq(1, cond_.size());
        assertTrue(cond_.containsObj(coords(2,4,5,1,1)));
    }

    @Test
    public void initCondition2Test() {
        DataMap dataMap_ = initCondition();
        Condition cond_ = dataMap_.initCondition(coords(10, 0, 5, 2), new Condition(coords(2,4,5,1,1)));
        assertEq(2, cond_.size());
        assertTrue(cond_.containsObj(coords(2,4,5,1,1)));
//        assertTrue(cond_.containsObj(coords(9,0,2,2)));
        assertTrue(cond_.containsObj(coords(9,0,2,4)));
    }

    @Test
    public void getNext1Test() {
        City city_ = city();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 1, 0), coords(0, 0, 4, 8), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 7), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 7)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 7)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 8)).size());
    }

    private static void addCave(Place _cave, DataMap _dataMap) {
        _dataMap.getPlaces().add(_cave);
    }

    private static void addCity(Place _city, DataMap _dataMap) {
        _dataMap.getPlaces().add(_city);
    }

    @Test
    public void getNext2Test() {
        City city_ = city();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 1, 0), coords(0, 0, 4, 8), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 8), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 7)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 0)).size());
    }

    @Test
    public void getNext3Test() {
        Road road_ = vroad();
        road_.getLevelRoad().getCharacters().put(point(2,4), dealerItem());
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 1, 0), coords(0, 0, 1, 5), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 1, 4), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 4)).size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 3)).size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 5)).size());
    }

    @Test
    public void getNext4Test() {
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 3, 6), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 2, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 7)).size());
    }

    @Test
    public void getNext5Test() {
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 6), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 6)).size());
        assertEq(0, next_.getVal(coords(0, 4, 5, 1, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 7)).size());
    }

    @Test
    public void getNext6Test() {
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 4, 5, 1, 0), new Condition());
        assertEq(0, next_.size());
    }

    @Test
    public void getNext7Test() {
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 8), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 7)).size());
    }

    @Test
    public void getNext8Test() {
        City city_ = city();
        Road road_ = vroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        addRoad(road_, dataMap_);
        dataMap_.join((short)1, (short)0, new Point((short)1,(short)0), new Point((short)4,(short)8), Direction.UP);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 8), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 8)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 7)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 0)).size());
    }

    @Test
    public void getNext9Test() {
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCave(cave_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 1, 1), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 2)).size());
    }

    @Test
    public void getNext10Test() {
        City city_ = city();
        Cave cave_ = cave();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(levelCaveOne());
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 1, 0), coords(0, 0, 4, 8), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 1, 0), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 8)).size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 0)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 1)).size());
    }

    @Test
    public void getNext11Test() {
        City city_ = city();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        level_ = levelCaveOne();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 1, 0), coords(0, 0, 4, 8), LINK, LINK);
        InitializationDataBase.joinLevelCave(dataMap_, (short) 1, levelPoint(0, 1, 3), levelPoint(1, 1, 3), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 1, 3), new Condition());
        assertEq(5, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 3)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 2)).size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 3)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 4)).size());
        assertEq(0, next_.getVal(coords(1, 1, 1, 3)).size());
    }

    @Test
    public void getNext12Test() {
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        level_.getCharacters().put(point(1, 2), dealerItem());
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCave(cave_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 1, 1), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 2, 1)).size());
    }

    @Test
    public void getNext13Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 1), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 2)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 1)).size());
    }

    @Test
    public void getNext14Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 5, 1), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 0)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 2)).size());
//        assertEq(0, next_.getVal(coords(1, 0, 2, 2)).size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 4)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 1)).size());
    }

    @Test
    public void getNext15Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 2, 4), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 3)).size());
        assertEq(0, next_.getVal(coords(1, 0, 3, 4)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 4)).size());
    }

    private static void addLeague(DataMap _dataMap, Coords _coordsAccessLeague) {
        _dataMap.getPlaces().add(league(_coordsAccessLeague));
    }

    @Test
    public void getNext16Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 2, 3), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 4)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 3)).size());
        assertEq(0, next_.getVal(coords(1, 0, 3, 3)).size());
    }

    @Test
    public void getNext17Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 2, 0), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 1)).size());
        assertEq(0, next_.getVal(coords(1, 0, 3, 0)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 0)).size());
        assertEq(0, next_.getVal(coords(1, 1, 2, 4)).size());
    }

    @Test
    public void getNext18Test() {
        Road road_ = hroad();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 5, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.setBegin(coords(0, 0, 0, 1));
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 1, 2, 0), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 1, 2, 1)).size());
        assertEq(0, next_.getVal(coords(1, 1, 3, 0)).size());
        assertEq(0, next_.getVal(coords(1, 1, 1, 0)).size());
    }

    @Test
    public void getNext19Test() {
        City city_ = cityPkCenter();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(city_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 4, 6), new Condition());
        assertEq(4, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 3, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 5, 6)).size());
        assertEq(0, next_.getVal(coords(0, 0, 4, 7)).size());
        assertEq(0, next_.getVal(coords(0, 4, 5, 1, 1)).size());
    }

    @Test
    public void getNext20Test() {
        Road road_ = vroadBlocked();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 1, 2), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, next_.getVal(coords(0, 0, 2, 2)).size());
    }

    @Test
    public void getNext21Test() {
        Road roadOne_ = vroadBlocked();
        Road roadTwo_ = vroadBlocked();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addRoad(roadTwo_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 5), point(1, 0), Direction.DOWN);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 1, 0), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 0)).size());
    }

    @Test
    public void getNext22Test() {
        Road roadOne_ = vroadBlocked();
        Road roadTwo_ = vroadBlocked();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        roadTwo_.getPointsWithCitiesAndOtherRoads().put(new PlaceInterConnect(point(1, 0), Direction.UP), coords(0, 0, 5, 5));
        addRoad(roadTwo_, dataMap_);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 1, 0), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 0)).size());
    }

    @Test
    public void getNext23Test() {
        Road roadOne_ = vroadBlocked();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveOne();
        level_.getCharacters().put(point(1, 2), dealerItem());
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 0, 0), coords(0, 0, 0, 3), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(0, 0, 0, 2), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, next_.getVal(coords(0, 0, 0, 3)).size());
    }

    @Test
    public void getNext24Test() {
        Road roadOne_ = vroadBlocked();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveTwo();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 0, 3), coords(0, 0, 0, 0), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 0, 2), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 2)).size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 1)).size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 3)).size());
    }

    @Test
    public void getNext25Test() {
        Road roadOne_ = vroadBlocked();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveTwo();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 0, 3), coords(0, 0, 0, 0), LINK, LINK);
        ObjectMap<Coords,Condition> next_ = dataMap_.getNext(coords(1, 0, 1, 2), new Condition());
        assertEq(3, next_.size());
        assertEq(0, next_.getVal(coords(1, 0, 2, 2)).size());
        assertEq(0, next_.getVal(coords(1, 0, 0, 2)).size());
        assertEq(0, next_.getVal(coords(1, 0, 1, 1)).size());
    }

    @Test
    public void validConditions1Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,4,5,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        assertTrue(dataMap_.validConditions(new Condition(coords(0, 0, 0, 3),coords(0, 0, 1, 3),coords(0, 0, 2, 3)),visited_));
    }

    @Test
    public void validConditions2Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 0, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 1, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 2, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 6, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 7, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 8, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,4,5,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        assertTrue(dataMap_.validConditions(new Condition(coords(0, 0, 0, 3),coords(0, 0, 1, 3),coords(0, 0, 2, 3),coords(1, 0, 0, 5),coords(1, 0, 1, 5),coords(1, 0, 2, 5),coords(1, 0, 6, 5),coords(1, 0, 7, 5),coords(1, 0, 8, 5)),visited_));
    }

    @Test
    public void validConditions3Test() {
        Road road_ = vroad();
        road_.getLevelRoad().getDualFights().put(point(2,2),new DualFight());
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(0, 0, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 0, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 1, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 2, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 6, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 7, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 8, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,4,5,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        assertTrue(!dataMap_.validConditions(new Condition(coords(0, 0, 0, 3),coords(0, 0, 1, 3),coords(0, 0, 2, 3),coords(1, 0, 0, 5),coords(1, 0, 1, 5),coords(1, 0, 2, 5),coords(1, 0, 6, 5),coords(1, 0, 7, 5),coords(1, 0, 8, 5)),visited_));
    }

    @Test
    public void leaders1Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords,Condition> visited_;
        visited_ = new ObjectMap<Coords,Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,4,5,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        ObjectMap<Coords,Coords> leaders_ = dataMap_.leaders(visited_.getKeys());
        assertEq(1, leaders_.size());
        assertEq(coords(1, 4, 5, 1, 0), leaders_.getVal(coords(1, 4, 5, 1, 1)));
    }

    private static void addRoad(Place _road, DataMap _dataMap) {
        _dataMap.getPlaces().add(_road);
    }

    @Test
    public void leaders2Test() {
        Road road_ = vroad();
        road_.getLevelRoad().getDualFights().put(point(2,2),new DualFight());
        City city_ = cityPkCenter();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(0, 0, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(0, 0, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(0, 0, 2, 2)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords,Condition> visited_;
        visited_ = new ObjectMap<Coords,Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,4,5,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        ObjectMap<Coords,Coords> leaders_ = dataMap_.leaders(visited_.getKeys());
        assertEq(1, leaders_.size());
        assertEq(coords(0, 0, 2, 2), leaders_.getVal(coords(0, 0, 2, 2)));
    }

    @Test
    public void leaders3Test() {
        Road road_ = vroad();
        City city_ = cityPkCenter();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 0, 1);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(2, 1, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(2, 1, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(2, 1, 2, 2)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords,Condition> visited_;
        visited_ = new ObjectMap<Coords,Condition>();
        Coords coords_;
        coords_ = coords(0,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(0,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,0,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,1,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,2,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,3,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,4,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,5,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,6,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,7,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,5);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,6);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,7);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(1,0,8,8);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,3,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,3,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,4,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,0,4,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,0,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,0,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,0,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,0,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,0,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,1,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,1,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,1,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,1,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,1,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,2,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,2,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,2,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,2,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,3,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,3,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,3,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,3,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,3,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,4,0);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,4,1);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,4,2);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,4,3);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        coords_ = coords(2,1,4,4);
        visited_.put(coords_,dataMap_.initCondition(coords_, new Condition()));
        ObjectMap<Coords,Coords> leaders_ = dataMap_.leaders(visited_.getKeys());
        assertEq(1, leaders_.size());
//        assertTrue(leaders_.containsObj(coords(2, 1, 2, 2)));
        assertEq(coords(0, 0, 0, 1), leaders_.getVal(coords(2, 0, 2, 4)));
    }

    @Test
    public void possibleNeighbours1Test() {
        Road road_ = vroadBlocked();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        ObjectMap<Coords, Condition> visitedCond_;
        visitedCond_ = new ObjectMap<Coords, Condition>();
        visitedCond_.put(coords(0, 0, 0, 0), new Condition());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.possibleNeighbours(visited_, visitedCond_);
        assertEq(9, allTiles_.size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 2)).size());
    }

    @Test
    public void possibleNeighbours2Test() {
        Road road_ = vroadBlocked();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        visited_.put(coords(0, 0, 1, 0), new Condition());
        visited_.put(coords(0, 0, 2, 0), new Condition());
        ObjectMap<Coords, Condition> visitedCond_;
        visitedCond_ = new ObjectMap<Coords, Condition>();
        visitedCond_.put(coords(0, 0, 1, 0), new Condition());
        visitedCond_.put(coords(0, 0, 2, 0), new Condition());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.possibleNeighbours(visited_, visitedCond_);
        assertEq(8, allTiles_.size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 2)).size());
    }

    @Test
    public void possibleNeighbours3Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        ObjectMap<Coords, Condition> visited_;
        visited_ = new ObjectMap<Coords, Condition>();
        visited_.put(coords(0, 0, 0, 0), new Condition());
        ObjectMap<Coords, Condition> visitedCond_;
        visitedCond_ = new ObjectMap<Coords, Condition>();
        visitedCond_.put(coords(0, 0, 0, 0), new Condition());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.possibleNeighbours(visited_, visitedCond_);
        assertEq(85, allTiles_.size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, allTiles_.getVal(coords(0, 0, 2, 2)).size());
        assertEq(1, allTiles_.getVal(coords(0, 0, 0, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 0, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 1, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 1, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 2, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 2, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0, allTiles_.getVal(coords(1,0,0,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,0,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,1,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,2,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,3,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,4,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,5,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,6,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,7,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,0)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,1)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,2)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,3)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,4)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,5)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,6)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,7)).size());
        assertEq(0, allTiles_.getVal(coords(1,0,8,8)).size());
        assertEq(0, allTiles_.getVal(coords(1,4,5,1,0)).size());
        assertTrue(dataMap_.validConditions(new Condition(coords(0, 0, 0, 3),coords(0, 0, 1, 3),coords(0, 0, 2, 3)),allTiles_));
        visitedCond_ = new ObjectMap<Coords, Condition>();
        visitedCond_.put(coords(0, 0, 0, 3), allTiles_.getVal(coords(0, 0, 0, 3)));
        visitedCond_.put(coords(0, 0, 1, 3), allTiles_.getVal(coords(0, 0, 1, 3)));
        visitedCond_.put(coords(0, 0, 2, 3), allTiles_.getVal(coords(0, 0, 2, 3)));
        allTiles_ = dataMap_.possibleNeighbours(allTiles_, visitedCond_);
        assertEq(9, allTiles_.size());
        assertEq(1, allTiles_.getVal(coords(0, 0, 0, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 0, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 1, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 1, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 2, 3)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 2, 3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 0, 4)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 0, 4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 1, 4)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 1, 4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 2, 4)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 2, 4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 0, 5)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 0, 5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 1, 5)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 1, 5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1, allTiles_.getVal(coords(0, 0, 2, 5)).size());
        assertTrue(allTiles_.getVal(coords(0, 0, 2, 5)).containsObj(coords(1, 4, 5, 1, 1)));
    }

    @Test
    public void initializeAccessibility1Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 2, 0);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
//        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new List<Coords>(coords(2, 1, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coordsAccessLeague_, new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.getAccessibility();
        assertEq(139,allTiles_.size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(0,0,1,0)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,1,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,1,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1,allTiles_.getVal(coords(0,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(0,allTiles_.getVal(coords(0,0,2,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,2,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(1,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,4,5,1,0)).size());
        assertEq(1,allTiles_.getVal(coords(2,0,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,4)).containsObj(coords(1,4,5,1,1)));
    }

    @Test
    public void initializeAccessibility2Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 2, 0);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 2), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 2), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 2), new Condition(coords(1, 4, 5, 1, 1)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new List<Coords>(coords(2, 1, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coordsAccessLeague_, new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.getAccessibility();
        assertEq(139,allTiles_.size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,1)).size());
        assertEq(1,allTiles_.getVal(coords(0,0,0,2)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,2)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(0,0,1,0)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,1,1)).size());
        assertEq(1,allTiles_.getVal(coords(0,0,1,2)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,2)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1,allTiles_.getVal(coords(0,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(0,allTiles_.getVal(coords(0,0,2,1)).size());
        assertEq(1,allTiles_.getVal(coords(0,0,2,2)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,2)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(1,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,4,5,1,0)).size());
        assertEq(1,allTiles_.getVal(coords(2,0,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,4)).containsObj(coords(1,4,5,1,1)));
    }

    @Test
    public void initializeAccessibility3Test() {
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(cityPkCenter(), dataMap_);
        addRoad(vroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addCity(city(), dataMap_);
        addCity(city(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addCity(city(), dataMap_);
        addCity(city(), dataMap_);
        addRoad(vroad(), dataMap_);
        addCity(cityPkCenter(), dataMap_);

        dataMap_.join((byte) 0,(byte) 1, point(4, 0), point(1, 5), Direction.UP);
        dataMap_.join((byte) 1,(byte) 3, point(1, 0), point(3, 2), Direction.UP);

        dataMap_.join((byte) 2,(byte) 3, point(5, 0), point(0, 0), Direction.RIGHT);
        dataMap_.join((byte) 3,(byte) 4, point(5, 0), point(0, 0), Direction.RIGHT);

        dataMap_.join((byte) 5,(byte) 2, point(8, 4), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 7,(byte) 5, point(5, 1), point(0, 4), Direction.RIGHT);
        dataMap_.join((byte) 9,(byte) 7, point(8, 4), point(0, 1), Direction.RIGHT);

        dataMap_.join((byte) 4,(byte) 6, point(5, 1), point(0, 4), Direction.RIGHT);
        dataMap_.join((byte) 6,(byte) 8, point(8, 4), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 8,(byte) 10, point(5, 1), point(0, 4), Direction.RIGHT);

        dataMap_.join((byte) 3,(byte) 11, point(3, 0), point(0, 5), Direction.UP);
        dataMap_.join((byte) 11,(byte) 12, point(0, 0), point(4, 8), Direction.UP);

        dataMap_.getAccessCondition().put(coords(7, 0, 3, 0), new Condition(coords(5, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(7, 0, 3, 1), new Condition(coords(5, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(7, 0, 3, 2), new Condition(coords(5, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 0), new Condition(coords(6, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 1), new Condition(coords(6, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 2), new Condition(coords(6, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 0, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 1, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 2, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        assertEq(564, dataMap_.getAccessibility().size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 7)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 6)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 3)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 5)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 3)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 6)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 7)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 6)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 7)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 6)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 6, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 8, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 7, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 0)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 8, 7)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 4)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 6)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 5)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 4)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 6, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 6)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 7)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 0)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 5)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 5)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 1)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 1)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 7)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(6, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 7, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 3)).containsObj(coords(5, 4, 5, 1, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 0)).size());
    }

    @Test
    public void initializeAccessibility4Test() {
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(cityPkCenter(), dataMap_);
        addRoad(vroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addCity(city(), dataMap_);
        addCity(city(), dataMap_);
        addRoad(vroad(), dataMap_);
        addCity(cityPkCenter(), dataMap_);
        Road roadFive_ = (Road) dataMap_.getPlace((short) 5);
        roadFive_.getLevelRoad().getDualFights().put(point(2, 1), new DualFight());
        Road roadSix_ = (Road) dataMap_.getPlace((short) 6);
        roadSix_.getLevelRoad().getDualFights().put(point(2, 1), new DualFight());

        dataMap_.join((byte) 0,(byte) 1, point(4, 0), point(1, 5), Direction.UP);
        dataMap_.join((byte) 1,(byte) 3, point(1, 0), point(3, 2), Direction.UP);

        dataMap_.join((byte) 2,(byte) 3, point(5, 0), point(0, 0), Direction.RIGHT);
        dataMap_.join((byte) 3,(byte) 4, point(5, 0), point(0, 0), Direction.RIGHT);

        dataMap_.join((byte) 5,(byte) 2, point(5, 1), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 7,(byte) 5, point(5, 1), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 9,(byte) 7, point(8, 4), point(0, 1), Direction.RIGHT);

        dataMap_.join((byte) 4,(byte) 6, point(5, 1), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 6,(byte) 8, point(5, 1), point(0, 1), Direction.RIGHT);
        dataMap_.join((byte) 8,(byte) 10, point(5, 1), point(0, 4), Direction.RIGHT);

        dataMap_.join((byte) 3,(byte) 11, point(3, 0), point(0, 5), Direction.UP);
        dataMap_.join((byte) 11,(byte) 12, point(0, 0), point(4, 8), Direction.UP);

        dataMap_.getAccessCondition().put(coords(7, 0, 3, 0), new Condition(coords(5, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(7, 0, 3, 1), new Condition(coords(5, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(7, 0, 3, 2), new Condition(coords(5, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 0), new Condition(coords(6, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 1), new Condition(coords(6, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(8, 0, 3, 2), new Condition(coords(6, 0, 2, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 0, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 1, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(11, 0, 2, 3), new Condition(coords(9, 4, 5, 1, 1),coords(10, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        assertEq(454, dataMap_.getAccessibility().size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 5)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 8)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 5)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 6, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 4, 5, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 4, 5, 1, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 7)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 5)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 4, 5, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 4, 5, 1, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 7)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 3, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 4, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 2, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 2, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 3, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 2, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 4, 5, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 8, 5)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 1, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 1, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 5, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 0, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 2, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 4)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 3, 6)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 5, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 4)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 5)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 4, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 4, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 0, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 0)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 3)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 2, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 4, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 8, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 3, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 3, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 8, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 5)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 1, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 5, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 4, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 8)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 4, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 4, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 3, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 3, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 5)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(2, 0, 3, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 0, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 5, 7)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 6, 3)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 0, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(11, 0, 1, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 3, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 3, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(4, 0, 2, 1)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 4, 5, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 4, 5, 1, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 4, 5, 1, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 4, 5, 1, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 4, 5, 1, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 2)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 3, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 8, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 8, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 4, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 4, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 2, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 2, 5)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 5, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 5, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(8, 0, 5, 0)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(8, 0, 5, 0)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 7, 4)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(8, 0, 0, 0)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 3)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 1, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 0, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 7, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 4)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 6, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 7)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 7)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 2, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 2, 8)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 1, 2)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 1)).containsObj(coords(6, 0, 2, 1)));
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 0, 2)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 6)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(7, 0, 1, 1)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(7, 0, 1, 1)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 2, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 6)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 5, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 7, 6)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 3, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 6, 4)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 6, 4)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(6, 0, 0, 0)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 0, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 0, 5)).containsObj(coords(5, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 1)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(10, 0, 7, 8)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(10, 0, 7, 8)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(7, 0, 5, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(5, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 8)).size());
        assertEq(4, dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(9, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(10, 4, 5, 1, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(5, 0, 2, 1)));
        assertTrue(dataMap_.getAccessibility().getVal(coords(12, 0, 4, 6)).containsObj(coords(6, 0, 2, 1)));
        assertEq(0, dataMap_.getAccessibility().getVal(coords(3, 0, 4, 2)).size());
        assertEq(1, dataMap_.getAccessibility().getVal(coords(9, 0, 1, 5)).size());
        assertTrue(dataMap_.getAccessibility().getVal(coords(9, 0, 1, 5)).containsObj(coords(5, 0, 2, 1)));
    }

    private static void initPlaces(DataMap _dataMap) {
        _dataMap.setPlaces(new CustList<Place>());
    }

    @Test
    public void initializeAccessibility5Test() {
        Road roadOne_ = vroadBlocked();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveTwo();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 0, 3), coords(0, 0, 0, 0), LINK, LINK);
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        assertEq(19, dataMap_.getAccessibility().size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 2)).size());
    }

    @Test
    public void initializeAccessibility6Test() {
        Road roadOne_ = vroadBlocked();
        Cave cave_ = cave();
        LevelCave level_ = levelCaveTwo();
        CustList<LevelCave> levels_ = new CustList<LevelCave>();
        levels_.add(level_);
        cave_.setLevels(levels_);
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(roadOne_, dataMap_);
        addCave(cave_, dataMap_);
        InitializationDataBase.joinCavePlace(dataMap_, coords(1, 0, 0, 3), coords(0, 0, 0, 0), LINK, LINK);
        dataMap_.getAccessCondition().put(coords(1, 0, 0, 4), new Condition());
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        assertEq(19, dataMap_.getAccessibility().size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(0, 0, 2, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 3)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 0, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 1, 2)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 0)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 1)).size());
        assertEq(0, dataMap_.getAccessibility().getVal(coords(1, 0, 2, 2)).size());
    }

    @Test
    public void initializeAccessibility7Test() {
        Road road_ = vroad();
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        Coords coordsAccessLeague_ = coords(0, 0, 2, 0);
        addLeague(dataMap_, coordsAccessLeague_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
//        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new List<Coords>(coords(2, 1, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new List<Coords>(coords(2, 1, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(2, 0, 2, 4)));
        dataMap_.getAccessCondition().put(coordsAccessLeague_, new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 0), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(!dataMap_.isError());
        ObjectMap<Coords,Condition> allTiles_ = dataMap_.getAccessibility();
        assertEq(139,allTiles_.size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,0,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,0,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,0,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1,allTiles_.getVal(coords(0,0,1,0)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,0)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(0,0,1,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,1,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,1,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,1,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(1,allTiles_.getVal(coords(0,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,0)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(0,0,2,1)).size());
        assertEq(0,allTiles_.getVal(coords(0,0,2,2)).size());
        assertEq(2,allTiles_.getVal(coords(0,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,3)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,4)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(2,allTiles_.getVal(coords(0,0,2,5)).size());
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(2, 0, 2, 4)));
        assertTrue(allTiles_.getVal(coords(0,0,2,5)).containsObj(coords(1, 4, 5, 1, 1)));
        assertEq(0,allTiles_.getVal(coords(1,0,0,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,0,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,1,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,2,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,3,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,4,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,5,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,6,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,7,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,0)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,1)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,2)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,3)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,4)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,5)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,6)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,7)).size());
        assertEq(0,allTiles_.getVal(coords(1,0,8,8)).size());
        assertEq(0,allTiles_.getVal(coords(1,4,5,1,0)).size());
        assertEq(1,allTiles_.getVal(coords(2,0,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,0,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,0,4,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,0,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,0,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,1,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,1,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,2,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,2,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,3,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,3,4)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,0)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,0)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,1)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,1)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,2)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,2)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,3)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,3)).containsObj(coords(1,4,5,1,1)));
        assertEq(1,allTiles_.getVal(coords(2,1,4,4)).size());
        assertTrue(allTiles_.getVal(coords(2,1,4,4)).containsObj(coords(1,4,5,1,1)));
    }

    @Test
    public void initializeAccessibility1FailTest() {
        Road road_ = vroad();
        road_.getLevelRoad().getDualFights().put(point(2,2),new DualFight());
        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addRoad(road_, dataMap_);
        addCity(city_, dataMap_);
        dataMap_.join((byte) 0,(byte) 1, point(1, 0), point(4, 8), Direction.UP);
        dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new Condition(coords(0, 0, 2, 2)));
        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 0, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 1, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 2, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 6, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 7, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(1, 0, 8, 5), new Condition(coords(1, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(dataMap_.isError());
    }

    /**not error if there is a choice*/
    @Test
    public void initializeAccessibility2FailTest() {
//        Road road_ = vroad();
//        City city_ = city();
        DataMap dataMap_ = new DataMap();
        dataMap_.setAccessCondition(new CoordsLists());
        initPlaces(dataMap_);
        addCity(cityPkCenter(), dataMap_);
        addRoad(vroad(), dataMap_);
        addCity(city(), dataMap_);
        addRoad(hroad(), dataMap_);
        addCity(city(), dataMap_);
        addRoad(vroad(), dataMap_);
        addRoad(hroad(), dataMap_);
        addCity(cityPkCenter(), dataMap_);
        //Road road_ = vroad();
        //road_.getLevelRoad().getDualFights().put(point(2,2),new DualFight());
        dataMap_.join((byte) 0,(byte) 1, point(4, 0), point(1, 5), Direction.UP);
        dataMap_.join((byte) 0,(byte) 3, point(8, 4), point(1, 0), Direction.RIGHT);
        dataMap_.join((byte) 2,(byte) 1, point(4, 8), point(1, 0), Direction.DOWN);
        dataMap_.join((byte) 2,(byte) 6, point(8, 4), point(1, 0), Direction.RIGHT);
        dataMap_.join((byte) 4,(byte) 3, point(0, 4), point(1, 5), Direction.LEFT);
        dataMap_.join((byte) 4,(byte) 5, point(4, 0), point(1, 5), Direction.UP);
        dataMap_.join((byte) 7,(byte) 6, point(0, 4), point(1, 5), Direction.LEFT);
        dataMap_.join((byte) 7,(byte) 5, point(8, 4), point(1, 0), Direction.DOWN);
        //dataMap_.join((byte) 2,(byte) 1, point(1, 0), point(8, 4), Direction.DOWN);
        //dataMap_.getAccessCondition().put(coords(0, 0, 0, 3), new List<Coords>(coords(0, 0, 2, 2)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 1, 3), new List<Coords>(coords(2, 4, 5, 1, 1)));
//        dataMap_.getAccessCondition().put(coords(0, 0, 2, 3), new List<Coords>(coords(2, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(5, 0, 0, 3), new Condition(coords(4, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(5, 0, 1, 3), new Condition(coords(4, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(5, 0, 2, 3), new Condition(coords(4, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(6, 0, 3, 0), new Condition(coords(2, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(6, 0, 3, 1), new Condition(coords(2, 4, 5, 1, 1)));
        dataMap_.getAccessCondition().put(coords(6, 0, 3, 2), new Condition(coords(2, 4, 5, 1, 1)));
//        dataMap_.getAccessCondition().put(coords(1, 0, 6, 5), new List<Coords>(coords(2, 4, 5, 1, 1)));
//        dataMap_.getAccessCondition().put(coords(1, 0, 7, 5), new List<Coords>(coords(2, 4, 5, 1, 1)));
//        dataMap_.getAccessCondition().put(coords(1, 0, 8, 5), new List<Coords>(coords(2, 4, 5, 1, 1)));
        dataMap_.setBegin(coords(0, 0, 0, 0));
        dataMap_.initializeAccessibility();
        assertTrue(dataMap_.isError());
    }

}
