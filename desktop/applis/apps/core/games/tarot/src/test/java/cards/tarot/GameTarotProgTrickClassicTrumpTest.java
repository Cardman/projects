package cards.tarot;

import cards.consts.PossibleTrickWinner;
import cards.tarot.enumerations.*;
import code.util.CustList;
import code.util.IdList;
import org.junit.Test;

public final class GameTarotProgTrickClassicTrumpTest extends CommonGameTarot {
    @Test
    public void underTrumpFoeTest() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_2);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 3, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.FOE_TEAM, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.underTrumpFoe());
    }
    @Test
    public void underTrumpPartners1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.TEAM, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.underTrumpPartners());
    }
    @Test
    public void underTrumpPartners2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_6);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7,CardTarot.TRUMP_3));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        g_.getDeclaresHandfuls().get(1).add(Handfuls.FOUR);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_21);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_20);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_19);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_18);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_17);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_16);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_15);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_14);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_13);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_12);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_11);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_10);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_9);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_7);
        g_.getHandfuls().get(1).ajouter(CardTarot.TRUMP_3);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.TEAM, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.underTrumpPartners());
    }
    @Test
    public void underTrumpPartners3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_1);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_21);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_9,CardTarot.HEART_8,CardTarot.HEART_7));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_6,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_1,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.TEAM, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_20, gbt_.underTrumpPartners());
    }
    @Test
    public void underTrumpPartners4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_2);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_21);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_9,CardTarot.HEART_8,CardTarot.HEART_7));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_6,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_2,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.TEAM, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.underTrumpPartners());
    }
    @Test
    public void underTrump1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.underTrump());
    }
    @Test
    public void underTrump2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.underTrump());
    }
    @Test
    public void underTrump3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_1);
        t_.ajouter(CardTarot.DIAMOND_2);
        t_.ajouter(CardTarot.TRUMP_11);
        t_.ajouter(CardTarot.TRUMP_2);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_1);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_3);
        t_.ajouter(CardTarot.HEART_4);
        t_.ajouter(CardTarot.HEART_KING);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_4);
        pr_.ajouter(CardTarot.TRUMP_12);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_10,CardTarot.TRUMP_9));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5));
        deal_.getDeal().add(create(CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.underTrump());
    }
    @Test
    public void underTrump4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_1);
        t_.ajouter(CardTarot.DIAMOND_2);
        t_.ajouter(CardTarot.TRUMP_11);
        t_.ajouter(CardTarot.TRUMP_2);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_1);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_3);
        t_.ajouter(CardTarot.HEART_4);
        t_.ajouter(CardTarot.HEART_KING);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_4);
        pr_.ajouter(CardTarot.TRUMP_12);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_10,CardTarot.TRUMP_9));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5));
        deal_.getDeal().add(create(CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.underTrump());
    }
    @Test
    public void underTrump5Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.underTrump());
    }
    @Test
    public void underTrump6Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.WHITE, gbt_.underTrump());
    }
    @Test
    public void trumpFirstRound1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_4);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_4);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound5Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_1);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound6Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_1);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound7Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound8Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound9Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_QUEEN);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound10Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.TRUMP_2);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound11Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.TRUMP_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_5);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound12Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.TRUMP_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_5);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_9,CardTarot.HEART_8,CardTarot.HEART_7));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_6,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2));
        deal_.getDeal().add(create(CardTarot.SPADE_2,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_21, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound13Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_1);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_5);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_9,CardTarot.HEART_8));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_1,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_4));
        deal_.getDeal().add(create(CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_21, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound14Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        r_.getMiseres().add(Miseres.TRUMP);
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_1);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_5);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_9,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_1,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_4));
        deal_.getDeal().add(create(CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        g_.getDeclaresMiseres().get(3).add(Miseres.TRUMP);
        g_.getDeclaresMiseres().get(4).add(Miseres.TRUMP);
        g_.getDeclaresMiseres().get(0).add(Miseres.TRUMP);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_20, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound15Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound16Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound17Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound18Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.DIAMOND_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_10);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_10,CardTarot.SPADE_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.DIAMOND_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_5, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound19Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.DIAMOND_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.HEART_3);
        curHand_.ajouter(CardTarot.HEART_8);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_6);
        curHand_.ajouter(CardTarot.CLUB_5);
        curHand_.ajouter(CardTarot.CLUB_4);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.CLUB_2);
        curHand_.ajouter(CardTarot.CLUB_3);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_10);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.HEART_8,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_10,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1,CardTarot.DIAMOND_QUEEN));
        deal_.getDeal().add(create(CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.DIAMOND_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound20Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD_WITHOUT);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound21Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.DIAMOND_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_10);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_1);
        t_.ajouter(CardTarot.DIAMOND_2);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_4);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_6);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.SPADE_7);
        pr_.ajouter(CardTarot.SPADE_8);
        pr_.ajouter(CardTarot.SPADE_6);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_10,CardTarot.SPADE_9));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.DIAMOND_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound22Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.DIAMOND_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_KING);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_10);
        t_.ajouter(CardTarot.DIAMOND_3);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_1);
        t_.ajouter(CardTarot.DIAMOND_2);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.SPADE_3);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_6);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.SPADE_7);
        pr_.ajouter(CardTarot.SPADE_8);
        pr_.ajouter(CardTarot.SPADE_6);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_10,CardTarot.SPADE_9,CardTarot.SPADE_5));
        deal_.getDeal().add(create(CardTarot.TRUMP_2,CardTarot.SPADE_4,CardTarot.SPADE_2,CardTarot.SPADE_1,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.DIAMOND_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpFirstRound23Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KING);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.trumpFirstRound());
    }
    @Test
    public void trumpNoAce1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_KNIGHT);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_1);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.DIAMOND_JACK);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_10);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_1);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.DIAMOND_JACK);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.SPADE_2);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_3);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_JACK);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.SPADE_3,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_JACK);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce5Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.TRUMP_3);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_3);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_JACK);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_4, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce6Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_3);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_JACK);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce7Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce8Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_10);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce9Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_3);
        pr_.ajouter(CardTarot.DIAMOND_10);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_1));
        deal_.getDeal().add(create(CardTarot.SPADE_2,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_4, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce10Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_10);
        pr_.ajouter(CardTarot.TRUMP_3);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.EXCUSE, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce11Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_5);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.DIAMOND_JACK);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_8));
        deal_.getDeal().add(create(CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_12, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce12Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.CLUB_2);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_16,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_16, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce13Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_4,CardTarot.TRUMP_2));
        deal_.getDeal().add(create(CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_21, gbt_.trumpNoAce());
    }
    @Test
    public void trumpNoAce14Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_2,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.WHITE, gbt_.trumpNoAce());
    }
    @Test
    public void defaultTrump1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_21, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.DIAMOND_6);
        t_.ajouter(CardTarot.TRUMP_15);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        pr_.ajouter(CardTarot.DIAMOND_7);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_2,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.DIAMOND_6);
        t_.ajouter(CardTarot.TRUMP_15);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        pr_.ajouter(CardTarot.DIAMOND_7);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_2,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        r_.getMiseres().add(Miseres.TRUMP);
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.DIAMOND_6);
        t_.ajouter(CardTarot.TRUMP_15);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        pr_.ajouter(CardTarot.DIAMOND_7);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_2,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        g_.getDeclaresMiseres().get(3).add(Miseres.TRUMP);
        g_.getDeclaresMiseres().get(4).add(Miseres.TRUMP);
        g_.getDeclaresMiseres().get(1).add(Miseres.TRUMP);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_2, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump5Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.SPADE_2);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5));
        deal_.getDeal().add(create(CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump6Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_20, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump7Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_4);
        last_.ajouter(CardTarot.SPADE_3);
        last_.ajouter(CardTarot.SPADE_2);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        r_.setDealing(DealingTarot.DEAL_1_VS_3);
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_16);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_7);
        curHand_.ajouter(CardTarot.TRUMP_6);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_4);
        t_.ajouter(CardTarot.SPADE_3);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_4);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.CLUB_KING,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, -1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic4(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_20, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump8Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_4);
        last_.ajouter(CardTarot.SPADE_3);
        last_.ajouter(CardTarot.SPADE_2);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        r_.setDealing(DealingTarot.DEAL_1_VS_3);
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_6);
        curHand_.ajouter(CardTarot.TRUMP_7);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_4);
        t_.ajouter(CardTarot.SPADE_3);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KNIGHT);
        t_.ajouter(CardTarot.DIAMOND_JACK);
        t_.ajouter(CardTarot.DIAMOND_10);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_4);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_5,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.CLUB_KING,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8));
        deal_.getDeal().add(create(CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, -1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic4(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_20, gbt_.defaultTrump());
    }
    @Test
    public void defaultTrump9Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_4);
        last_.ajouter(CardTarot.SPADE_3);
        last_.ajouter(CardTarot.SPADE_2);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        r_.setDealing(DealingTarot.DEAL_1_VS_3);
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_8);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_6);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_7);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_4);
        t_.ajouter(CardTarot.SPADE_3);
        t_.ajouter(CardTarot.SPADE_2);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.DIAMOND_6);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.SPADE_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2));
        deal_.getDeal().add(create(CardTarot.DIAMOND_1,CardTarot.CLUB_KING,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, -1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic4(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(PossibleTrickWinner.UNKNOWN, GameTarotTrickHypothesis.equipeQuiVaFairePli(infoTr_));
        assertSame(CardTarot.TRUMP_1, gbt_.defaultTrump());
    }
    @Test
    public void coupeClassique1Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_2);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.DIAMOND_6,CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 3, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.TRUMP_2, gbt_.coupeClassique());
    }
    @Test
    public void coupeClassique2Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 2, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.TRUMP_1, gbt_.coupeClassique());
    }
    @Test
    public void coupeClassique3Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.SPADE_8);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.TRUMP_11);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_7,CardTarot.SPADE_6));
        deal_.getDeal().add(create(CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.DIAMOND_3,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.TRUMP_1, gbt_.coupeClassique());
    }
    @Test
    public void coupeClassique4Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.HEART_KING);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.HEART_5);
        curHand_.ajouter(CardTarot.HEART_4);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_15);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_5);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_KING);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        pr_.ajouter(CardTarot.DIAMOND_1);
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.HEART_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_15,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.HEART_5,CardTarot.HEART_4,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_KING,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.TRUMP_1,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_10,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_3,CardTarot.HEART_2,CardTarot.HEART_1,CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7));
        deal_.getDeal().add(create(CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_KING,CardTarot.DIAMOND_QUEEN,CardTarot.DIAMOND_KNIGHT,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6));
        deal_.getDeal().add(create(CardTarot.DIAMOND_5,CardTarot.DIAMOND_4,CardTarot.CLUB_QUEEN,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.HEART_KING));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 1, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassic(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.TRUMP_5, gbt_.coupeClassique());
    }
    @Test
    public void coupeClassique5Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.HEART_QUEEN);
        curHand_.ajouter(CardTarot.HEART_9);
        curHand_.ajouter(CardTarot.EXCUSE);
        curHand_.ajouter(CardTarot.SPADE_KNIGHT);
        curHand_.ajouter(CardTarot.SPADE_JACK);
        curHand_.ajouter(CardTarot.SPADE_9);
        curHand_.ajouter(CardTarot.TRUMP_2);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.CLUB_QUEEN);
        curHand_.ajouter(CardTarot.CLUB_1);
        curHand_.ajouter(CardTarot.TRUMP_4);
        curHand_.ajouter(CardTarot.TRUMP_8);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_KNIGHT);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_KING);
        t_.ajouter(CardTarot.TRUMP_5);
        t_.ajouter(CardTarot.DIAMOND_1);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.DIAMOND_JACK);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_2);
        pr_.ajouter(CardTarot.DIAMOND_3);
        pr_.ajouter(CardTarot.DIAMOND_10);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_15,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.EXCUSE,CardTarot.TRUMP_12,CardTarot.TRUMP_9,CardTarot.TRUMP_8,CardTarot.TRUMP_4,CardTarot.TRUMP_2,CardTarot.HEART_QUEEN,CardTarot.HEART_9,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.CLUB_QUEEN,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_KING,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4,CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_5));
        deal_.getDeal().add(create(CardTarot.TRUMP_7,CardTarot.TRUMP_6,CardTarot.TRUMP_3,CardTarot.TRUMP_1,CardTarot.HEART_KING,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_8,CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3));
        deal_.getDeal().add(create(CardTarot.DIAMOND_4,CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.EXCUSE, gbt_.coupeClassique());
    }
    @Test
    public void coupeClassique6Test() {
        HandTarot last_ = new HandTarot();
        last_.ajouter(CardTarot.SPADE_QUEEN);
        last_.ajouter(CardTarot.SPADE_10);
        last_.ajouter(CardTarot.SPADE_1);
        RulesTarot r_ = new RulesTarot();
        HandTarot curHand_ = new HandTarot();
        curHand_.ajouter(CardTarot.TRUMP_10);
        curHand_.ajouter(CardTarot.TRUMP_11);
        curHand_.ajouter(CardTarot.TRUMP_21);
        curHand_.ajouter(CardTarot.TRUMP_9);
        curHand_.ajouter(CardTarot.TRUMP_13);
        curHand_.ajouter(CardTarot.TRUMP_14);
        curHand_.ajouter(CardTarot.TRUMP_20);
        curHand_.ajouter(CardTarot.TRUMP_12);
        curHand_.ajouter(CardTarot.TRUMP_19);
        curHand_.ajouter(CardTarot.TRUMP_18);
        curHand_.ajouter(CardTarot.TRUMP_17);
        curHand_.ajouter(CardTarot.TRUMP_1);
        curHand_.ajouter(CardTarot.TRUMP_16);
        int d_ = 2;
        IdList<BidTarot> bids_ = new IdList<BidTarot>();
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.FOLD);
        bids_.add(BidTarot.GUARD);
        bids_.add(BidTarot.FOLD);
        CustList<TrickTarot> trs_ = new CustList<TrickTarot>();
        TrickTarot t_ = new TrickTarot(getTaker(r_,d_,bids_));
        t_.ajouter(CardTarot.SPADE_QUEEN);
        t_.ajouter(CardTarot.SPADE_10);
        t_.ajouter(CardTarot.SPADE_1);
        trs_.add(t_);
        t_ = new TrickTarot(r_.getDealing().getId().getNextPlayer(d_));
        t_.ajouter(CardTarot.DIAMOND_4);
        t_.ajouter(CardTarot.DIAMOND_QUEEN);
        t_.ajouter(CardTarot.DIAMOND_5);
        t_.ajouter(CardTarot.TRUMP_15);
        t_.ajouter(CardTarot.TRUMP_7);
        trs_.add(t_);
        t_ = new TrickTarot(t_.getRamasseur());
        t_.ajouter(CardTarot.HEART_5);
        t_.ajouter(CardTarot.HEART_8);
        t_.ajouter(CardTarot.HEART_10);
        t_.ajouter(CardTarot.HEART_2);
        t_.ajouter(CardTarot.HEART_1);
        trs_.add(t_);
        TrickTarot pr_ = new TrickTarot(t_.getRamasseur());
        pr_.ajouter(CardTarot.DIAMOND_KING);
        pr_.ajouter(CardTarot.DIAMOND_KNIGHT);
        pr_.ajouter(CardTarot.EXCUSE);
        HandTarot calledCards_ = new HandTarot();
        calledCards_.ajouter(CardTarot.CLUB_KING);
        DealTarot deal_ = new DealTarot(new CustList<HandTarot>(),d_);
        deal_.getDeal().add(create(CardTarot.TRUMP_8,CardTarot.TRUMP_6,CardTarot.TRUMP_5,CardTarot.TRUMP_4,CardTarot.TRUMP_3,CardTarot.TRUMP_2,CardTarot.HEART_KING,CardTarot.HEART_QUEEN,CardTarot.HEART_KNIGHT,CardTarot.HEART_JACK,CardTarot.HEART_9,CardTarot.CLUB_KING));
        deal_.getDeal().add(create(CardTarot.TRUMP_21,CardTarot.TRUMP_20,CardTarot.TRUMP_19,CardTarot.TRUMP_18,CardTarot.TRUMP_17,CardTarot.TRUMP_16,CardTarot.TRUMP_14,CardTarot.TRUMP_13,CardTarot.TRUMP_12,CardTarot.TRUMP_11,CardTarot.TRUMP_10,CardTarot.TRUMP_9,CardTarot.TRUMP_1));
        deal_.getDeal().add(create(CardTarot.HEART_7,CardTarot.HEART_6,CardTarot.HEART_4,CardTarot.HEART_3,CardTarot.SPADE_KING,CardTarot.SPADE_KNIGHT,CardTarot.SPADE_JACK,CardTarot.SPADE_9,CardTarot.SPADE_8,CardTarot.SPADE_7,CardTarot.SPADE_6,CardTarot.SPADE_5,CardTarot.SPADE_4));
        deal_.getDeal().add(create(CardTarot.SPADE_3,CardTarot.SPADE_2,CardTarot.DIAMOND_JACK,CardTarot.DIAMOND_10,CardTarot.DIAMOND_9,CardTarot.DIAMOND_8,CardTarot.DIAMOND_7,CardTarot.DIAMOND_6,CardTarot.DIAMOND_3,CardTarot.DIAMOND_2,CardTarot.DIAMOND_1,CardTarot.CLUB_QUEEN));
        deal_.getDeal().add(create(CardTarot.CLUB_KNIGHT,CardTarot.CLUB_JACK,CardTarot.CLUB_10,CardTarot.CLUB_9,CardTarot.CLUB_8,CardTarot.CLUB_7,CardTarot.CLUB_6,CardTarot.CLUB_5,CardTarot.CLUB_4,CardTarot.CLUB_3,CardTarot.CLUB_2,CardTarot.CLUB_1));
        deal_.getDeal().add(create(CardTarot.SPADE_QUEEN,CardTarot.SPADE_10,CardTarot.SPADE_1));
        GameTarot g_ = newGameTarotWithourDecl(r_, trs_, pr_, d_, bids_, calledCards_, 0, deal_);
        GameTarotProgTrickClassic gbt_ = gameTarotProgTrickClassicOnePlayer(g_, calledCards_, curHand_);
        TarotInfoPliEnCours infoTr_ = gbt_.initInformations();
        assertSame(CardTarot.TRUMP_21, gbt_.coupeClassique());
    }

    private GameTarotProgTrickClassic gameTarotProgTrickClassicOnePlayer(GameTarot _g, HandTarot _calledCards, HandTarot _curHand) {
        GameTarotTeamsRelation team_ = _g.getTeamsRelation(_g.buildConfidence());
        faireConfiance(_g,0, team_);
        GameTarotTrickInfo info_ = newGameTarotTrickInfo(_g,team_);
        return newGameTarotProgTrickClassicDeal(_g, info_, team_, _calledCards, _curHand);
    }

    private GameTarotProgTrickClassic gameTarotProgTrickClassic(GameTarot _g, HandTarot _calledCards, HandTarot _curHand) {
        GameTarotTeamsRelation team_ = _g.getTeamsRelation(_g.buildConfidence());
        GameTarotTrickInfo info_ = newGameTarotTrickInfo(_g,team_);
        return newGameTarotProgTrickClassicDeal(_g,info_,team_, _calledCards, _curHand);
    }

    private GameTarotProgTrickClassic gameTarotProgTrickClassic4(GameTarot _g, HandTarot _calledCards, HandTarot _curHand) {
        GameTarotTeamsRelation team_ = _g.getTeamsRelation(_g.buildConfidence());
        GameTarotTrickInfo info_ = newGameTarotTrickInfo4(_g,team_);
        return newGameTarotProgTrickClassicDeal(_g,info_,team_, _calledCards, _curHand);
    }
}
