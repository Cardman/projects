package code.scripts.messages.cards;
import code.util.*;
public final class MessagesPresidentPresident{
private MessagesPresidentPresident(){}
public static StringMap<String> ms(){
StringMap<String> m = new StringMap<String>();
m.addEntry("resources_cards/const_enum/en/president.txt",en());
m.addEntry("resources_cards/const_enum/fr/president.txt",fr());
return m;
}
static String en(){
String f="cards.president.enumerations.CardPresident.HEART_KING:Heart King\n";
f+="cards.president.enumerations.CardPresident.HEART_QUEEN:Heart Queen\n";
f+="cards.president.enumerations.CardPresident.HEART_JACK:Heart Jack\n";
f+="cards.president.enumerations.CardPresident.HEART_10:Heart 10\n";
f+="cards.president.enumerations.CardPresident.HEART_9:Heart 9\n";
f+="cards.president.enumerations.CardPresident.HEART_8:Heart 8\n";
f+="cards.president.enumerations.CardPresident.HEART_7:Heart 7\n";
f+="cards.president.enumerations.CardPresident.HEART_6:Heart 6\n";
f+="cards.president.enumerations.CardPresident.HEART_5:Heart 5\n";
f+="cards.president.enumerations.CardPresident.HEART_4:Heart 4\n";
f+="cards.president.enumerations.CardPresident.HEART_3:Heart 3\n";
f+="cards.president.enumerations.CardPresident.HEART_2:Heart 2\n";
f+="cards.president.enumerations.CardPresident.HEART_1:Heart Ace\n";
f+="cards.president.enumerations.CardPresident.SPADE_KING:Spade King\n";
f+="cards.president.enumerations.CardPresident.SPADE_QUEEN:Spade Queen\n";
f+="cards.president.enumerations.CardPresident.SPADE_JACK:Spade Jack\n";
f+="cards.president.enumerations.CardPresident.SPADE_10:Spade 10\n";
f+="cards.president.enumerations.CardPresident.SPADE_9:Spade 9\n";
f+="cards.president.enumerations.CardPresident.SPADE_8:Spade 8\n";
f+="cards.president.enumerations.CardPresident.SPADE_7:Spade 7\n";
f+="cards.president.enumerations.CardPresident.SPADE_6:Spade 6\n";
f+="cards.president.enumerations.CardPresident.SPADE_5:Spade 5\n";
f+="cards.president.enumerations.CardPresident.SPADE_4:Spade 4\n";
f+="cards.president.enumerations.CardPresident.SPADE_3:Spade 3\n";
f+="cards.president.enumerations.CardPresident.SPADE_2:Spade 2\n";
f+="cards.president.enumerations.CardPresident.SPADE_1:Spade Ace\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_KING:Diamond King\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_QUEEN:Diamond Queen\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_JACK:Diamond Jack\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_10:Diamond 10\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_9:Diamond 9\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_8:Diamond 8\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_7:Diamond 7\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_6:Diamond 6\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_5:Diamond 5\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_4:Diamond 4\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_3:Diamond 3\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_2:Diamond 2\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_1:Diamond Ace\n";
f+="cards.president.enumerations.CardPresident.CLUB_KING:Club King\n";
f+="cards.president.enumerations.CardPresident.CLUB_QUEEN:Club Queen\n";
f+="cards.president.enumerations.CardPresident.CLUB_JACK:Club Jack\n";
f+="cards.president.enumerations.CardPresident.CLUB_10:Club 10\n";
f+="cards.president.enumerations.CardPresident.CLUB_9:Club 9\n";
f+="cards.president.enumerations.CardPresident.CLUB_8:Club 8\n";
f+="cards.president.enumerations.CardPresident.CLUB_7:Club 7\n";
f+="cards.president.enumerations.CardPresident.CLUB_6:Club 6\n";
f+="cards.president.enumerations.CardPresident.CLUB_5:Club 5\n";
f+="cards.president.enumerations.CardPresident.CLUB_4:Club 4\n";
f+="cards.president.enumerations.CardPresident.CLUB_3:Club 3\n";
f+="cards.president.enumerations.CardPresident.CLUB_2:Club 2\n";
f+="cards.president.enumerations.CardPresident.CLUB_1:Club Ace\n";
f+="cards.president.enumerations.EqualtyPlaying.FORBIDDEN:No possible equality\n";
f+="cards.president.enumerations.EqualtyPlaying.NO_SKIP:Possible equality which does not skip the \"able\" next player\n";
f+="cards.president.enumerations.EqualtyPlaying.SKIP_ALWAYS_NEXT:Skip the \"able\" next player\n";
f+="cards.president.enumerations.EqualtyPlaying.SKIP_DIFF_NEXT_STOP:The \"able\" next player has to pass or equal\n";
f+="cards.president.enumerations.Playing.CAN_PLAY:Can play\n";
f+="cards.president.enumerations.Playing.SKIPPED:Skipped\n";
f+="cards.president.enumerations.Playing.PASS:Pass\n";
f+="cards.president.enumerations.Playing.FINISH:Finish\n";
f+="cards.president.enumerations.Playing.DO_NOT_EQUAL:Does not equal\n";
f+="cards.president.enumerations.Playing.HAS_TO_EQUAL:Has to equal\n";
return f;
}
static String fr(){
String f="cards.president.enumerations.CardPresident.HEART_KING:Roi de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_QUEEN:Dame de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_JACK:Valet de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_10:10 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_9:9 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_8:8 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_7:7 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_6:6 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_5:5 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_4:4 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_3:3 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_2:2 de coeur\n";
f+="cards.president.enumerations.CardPresident.HEART_1:As de coeur\n";
f+="cards.president.enumerations.CardPresident.SPADE_KING:Roi de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_QUEEN:Dame de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_JACK:Valet de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_10:10 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_9:9 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_8:8 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_7:7 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_6:6 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_5:5 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_4:4 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_3:3 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_2:2 de pique\n";
f+="cards.president.enumerations.CardPresident.SPADE_1:As de pique\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_KING:Roi de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_QUEEN:Dame de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_JACK:Valet de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_10:10 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_9:9 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_8:8 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_7:7 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_6:6 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_5:5 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_4:4 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_3:3 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_2:2 de carreau\n";
f+="cards.president.enumerations.CardPresident.DIAMOND_1:As de carreau\n";
f+="cards.president.enumerations.CardPresident.CLUB_KING:Roi de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_QUEEN:Dame de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_JACK:Valet de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_10:10 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_9:9 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_8:8 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_7:7 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_6:6 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_5:5 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_4:4 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_3:3 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_2:2 de tr&egrave;fle\n";
f+="cards.president.enumerations.CardPresident.CLUB_1:As de tr&egrave;fle\n";
f+="cards.president.enumerations.EqualtyPlaying.FORBIDDEN:Aucune &eacute;galit&eacute; possible\n";
f+="cards.president.enumerations.EqualtyPlaying.NO_SKIP:&Eacute;galit&eacute; possible qui ne saute pas le joueur \"apte\" suivant\n";
f+="cards.president.enumerations.EqualtyPlaying.SKIP_ALWAYS_NEXT:Saute le joueur \"apte\" suivant\n";
f+="cards.president.enumerations.EqualtyPlaying.SKIP_DIFF_NEXT_STOP:Le joueur \"apte\" suivant doit passer ou &eacute;galer\n";
f+="cards.president.enumerations.Playing.CAN_PLAY:Peut jouer\n";
f+="cards.president.enumerations.Playing.SKIPPED:Saut&eacute;\n";
f+="cards.president.enumerations.Playing.PASS:Passe\n";
f+="cards.president.enumerations.Playing.FINISH:Fini\n";
f+="cards.president.enumerations.Playing.DO_NOT_EQUAL:N'&eacute;gale pas\n";
f+="cards.president.enumerations.Playing.HAS_TO_EQUAL:Doit &eacute;galer\n";
return f;
}
}
