package code.scripts.messages.gui;

import code.util.StringMap;
public final class MessCdmBaseGr{
//private static final String CODE_0_1_1="resources_lg/aliases/en/keywords.properties";
//private static final String CODE_0_1_2="resources_lg/aliases/en/messages.properties";
//private static final String CODE_0_1_3="resources_lg/aliases/en/types.properties";
//private static final String CODE_0_1_4="resources_lg/aliases/fr/keywords.properties";
//private static final String CODE_0_1_5="resources_lg/aliases/fr/messages.properties";
//private static final String CODE_0_1_6="resources_lg/aliases/fr/types.properties";
private static final String CODE_0_1_9="resources_lg/tests/run.txt";
private static final String CODE_0_11_0="\n";
private static final String CODE_0_11_1="{public} {abstract} {final} {class} {Execute}'{'\n";
private static final String CODE_0_11_2="    {public} {static} {Table}<{Method},{Result}> {tests}({InfoTest} {info})'{'\n";
private static final String CODE_0_11_3="        {Table}<{Class},{List}<{ExecutedTest}>> {out} = {new} {Table}<>();\n";
private static final String CODE_0_11_4="        {var} {t} = {cast}({int})0;\n";
private static final String CODE_0_11_5="        {for} ({var} {c}: {static}({Class}).{getAllClasses}())'{'\n";
private static final String CODE_0_11_6="            {List}<{Method}> {bs} = {new} {List}<>();\n";
private static final String CODE_0_11_7="            {List}<{Method}> {as} = {new} {List}<>();\n";
private static final String CODE_0_11_8="            {List}<{ExecutedTest}> {tts} = {new} {List}<>();\n";
private static final String CODE_0_11_9="            {for} ({var} {m}: ({c}).{getDeclaredMethods}())'{'\n";
private static final String CODE_0_11_10="                {var} {e} = {new} {ExecutedTest}();\n";
private static final String CODE_0_11_11="                {var} {a} = ({m}).{getAnnotations}({class}({Test}));\n";
private static final String CODE_0_11_11_0="                {var} {r} = ({m}).{getAnnotations}({class}({Args}));\n";
private static final String CODE_0_11_12="                {if} ({static}({ObjectsUtil}).{eq}(({a}).{length}, 1) && (({cast}({Test}){a}[0]).{exception}() == {cast}({Object}) {null} || !{class}({Difference}).{isAssignableFrom}(({cast}({Test}){a}[0]).{exception}())))'{'\n";
private static final String CODE_0_11_13="                    ({e}).{test} = {m};\n";
private static final String CODE_0_11_14="                    ({e}).{annotations} = {a};\n";
private static final String CODE_0_11_14_0="                    ({e}).{argsAnnot} = {r};\n";
private static final String CODE_0_11_15="                    ({e}).{before} = {bs};\n";
private static final String CODE_0_11_16="                    ({e}).{after} = {as};\n";
private static final String CODE_0_11_17="                    {var} {aParam} = ({m}).{getAnnotations}({class}({Parameters}));\n";
private static final String CODE_0_11_18="                    {if} ({static}({ObjectsUtil}).{eq}(({aParam}).{length}, 1))'{'\n";
private static final String CODE_0_11_19="                        {var} {paramAnn} = {cast}({Parameters}){aParam}[0];\n";
private static final String CODE_0_11_20="                        {var} {loc} = ({paramAnn}).{methodParam}();\n";
private static final String CODE_0_11_21="                        {var} {locType} = ({paramAnn}).{location}();\n";
private static final String CODE_0_11_22="                        {if} ({static}({ObjectsUtil}).{eq}({locType},{null}))'{'\n";
private static final String CODE_0_11_23="                            {locType} = {c};\n";
private static final String CODE_0_11_24="                        '}'\n";
private static final String CODE_0_11_25="                        {for} ({var} {p}: ({locType}).{getDeclaredMethods}())'{'\n";
private static final String CODE_0_11_26="                            {if} (!{static}({ObjectsUtil}).{eq}(({p}).{getMethodName}(), {loc}))'{'\n";
private static final String CODE_0_11_27="                                {continue};\n";
private static final String CODE_0_11_28="                            '}'\n";
private static final String CODE_0_11_29="                            {if} (!({p}).{isStatic}())'{'\n";
private static final String CODE_0_11_30="                                {continue};\n";
private static final String CODE_0_11_31="                            '}'\n";
private static final String CODE_0_11_32="                            {if} (!{static}({ObjectsUtil}).{eq}(({p}).{getParameterTypes}().{length},0))'{'\n";
private static final String CODE_0_11_33="                                {continue};\n";
private static final String CODE_0_11_34="                            '}'\n";
private static final String CODE_0_11_35="                            ({e}).{method} = {p};\n";
private static final String CODE_0_11_36="                            {break};\n";
private static final String CODE_0_11_37="                        '}'\n";
private static final String CODE_0_11_38="                    '}'\n";
private static final String CODE_0_11_39="                    {t} = {static}({Math}).{plus}({t},1);\n";
private static final String CODE_0_11_40="                    ({tts}).{add}({e});\n";
private static final String CODE_0_11_41="                '}'\n";
private static final String CODE_0_11_42="                {if} ({static}({Math}).{gt}(({m}).{getAnnotations}({class}({Before})).{length},0))'{'\n";
private static final String CODE_0_11_43="                    ({bs}).{add}({m});\n";
private static final String CODE_0_11_44="                '}'\n";
private static final String CODE_0_11_45="                {if} ({static}({Math}).{gt}(({m}).{getAnnotations}({class}({After})).{length},0))'{'\n";
private static final String CODE_0_11_46="                    ({as}).{add}({m});\n";
private static final String CODE_0_11_47="                '}'\n";
private static final String CODE_0_11_48="            '}'\n";
private static final String CODE_0_11_49="            {if} ({static}({Math}).{gt}(({tts}).{sizeLi}(),0))'{'\n";
private static final String CODE_0_11_50="                ({out}).{addTa}({c},{tts});\n";
private static final String CODE_0_11_51="            '}'\n";
private static final String CODE_0_11_52="        '}'\n";
private static final String CODE_0_11_53="        ({info}).{count} = {t};\n";
private static final String CODE_0_11_53_0="        {ExecutorService} {tt0} = {new}({info}.{nbThreads});\n";
private static final String CODE_0_11_53_1="         {List}<{Future}> {tts0} = {new} {List}<>();\n";
private static final String CODE_0_11_54="        {Table}<{Method},{Result}> {results} = {new} {Table}<>();\n";
private static final String CODE_0_11_55="        {for} ({var} {c}, {var} {l}: {out})'{'\n";
private static final String CODE_0_11_56="            {for} ({var} {e}: {l})'{'\n";
private static final String CODE_0_11_57="                {var} {tt} = ({e}).{test};\n";
private static final String CODE_0_11_58_0="                    {try} '{'\n";
private static final String CODE_0_11_58_1="                        {static}({Thread}).{args}(({cast}({Args}){e}.{argsAnnot}[0]).{argsValue}());\n";
private static final String CODE_0_11_58_2="                    '}' {catch} ({Object} {o})'{'\n";
private static final String CODE_0_11_58_3="                        {static}({Thread}).{args}({new} {String}[0]);\n";
private static final String CODE_0_11_58_4="                    '}' {catch} '{'\n";
private static final String CODE_0_11_58_5="                        {static}({Thread}).{args}({new} {String}[0]);\n";
private static final String CODE_0_11_58_6="                    '}'\n";
private static final String CODE_0_11_59="                {if} (!{static}({ObjectsUtil}).{eq}(({e}).{method},{null}))'{'\n";
private static final String CODE_0_11_60="                    {Object} {arr} = {null};\n";
private static final String CODE_0_11_61="                    {Object} {exc} = {null};\n";
private static final String CODE_0_11_62="                    {try} '{'\n";
private static final String CODE_0_11_63="                        {arr} = ({e}).{method}.{invoke}({null});\n";
private static final String CODE_0_11_64="                    '}' {catch} ({InvokeTarget} {o})'{'\n";
private static final String CODE_0_11_65="                        {exc} = ({o}).{getCause}();\n";
private static final String CODE_0_11_66="                    '}'\n";
private static final String CODE_0_11_67="                    {if} ({arr} {instanceof} {Object}[][])'{'\n";
private static final String CODE_0_11_68="                        {for} ({var} {p}: {cast}({Object}[][]){arr})'{'\n";
private static final String CODE_0_11_69="                            {var} {params} = {new} {StringBuilder}();\n";
private static final String CODE_0_11_70="                            {var} {nbParams} = ({p}).{length};\n";
private static final String CODE_0_11_71="                            {for} ({var} {i} = 0; {static}({Math}).{lt}({i}, {static}({Math}).{minus}({nbParams},1)); {i}={static}({Math}).{plus}({i},1))'{'\n";
private static final String CODE_0_11_72="                                ({params}).{append}({convert}({p}[{i}])).{append}(\",\");\n";
private static final String CODE_0_11_73="                            '}'\n";
private static final String CODE_0_11_74="                            {if} ({static}({Math}).{gt}({nbParams},0))'{'\n";
private static final String CODE_0_11_75="                                ({params}).{append}({convert}({p}[{static}({Math}).{minus}({nbParams},1)]));\n";
private static final String CODE_0_11_76="                            '}'\n";
private static final String CODE_0_11_77="                            ({info}).{currentParams} = ({params}).{toString}();\n";
private static final String CODE_0_11_78="                            {Result} {res} = {new}();\n";
private static final String CODE_0_11_78_0="                            {res}.{container} = {c};\n";
private static final String CODE_0_11_78_1="                            {res}.{executed} = {e};\n";
private static final String CODE_0_11_78_2="                            {res}.{resultArgs} = {p};\n";
private static final String CODE_0_11_79="                            ({res}).{pf} = ({params}).{toString}();\n";
private static final String CODE_0_11_80="                            ({results}).{addTa}({tt},{res});\n";
private static final String CODE_0_11_81="                        '}'\n";
private static final String CODE_0_11_82="                    '}' {else} '{'\n";
private static final String CODE_0_11_82_0="                            {var} {res} = {setupError}({e},{exc},-1);\n";
private static final String CODE_0_11_82_1="                            {res}.{container} = {c};\n";
private static final String CODE_0_11_82_2="                            {res}.{executed} = {e};\n";
private static final String CODE_0_11_82_3="                            {res}.{resultArgs} = {null};\n";
private static final String CODE_0_11_83="                        ({results}).{addTa}({tt},{res});\n";
private static final String CODE_0_11_84="                    '}'\n";
private static final String CODE_0_11_85="                '}' {else} '{'\n";
private static final String CODE_0_11_85_0="                            {Result} {res} = {new}();\n";
private static final String CODE_0_11_85_1="                            {res}.{container} = {c};\n";
private static final String CODE_0_11_85_2="                            {res}.{executed} = {e};\n";
private static final String CODE_0_11_86="                    ({results}).{addTa}({tt},{res});\n";
private static final String CODE_0_11_87="                '}'\n";
private static final String CODE_0_11_90="        '}'\n        '}'{info}.{calls}={results}.{sizeTa}();\n";
private static final String CODE_0_11_55_0="        {for} ({var} {c}, {var} {l}: {results})'{'\n";
private static final String CODE_0_11_56_0="                {Runnable} {tt1} = () -> '{'\n";
private static final String CODE_0_11_58="                ({info}).{currentMethod} = {l}.{executed}.{test};\n";
private static final String CODE_0_11_88_0="                {info}.{currentParams} = {l}.{pf};\n";
private static final String CODE_0_11_88="                {info}.{done}.{incrGet}();\n";
private static final String CODE_0_11_86_0="                 {if} ({static}({ObjectsUtil}).{eq}({l}.{resultArgs},{null})) '{'\n";
private static final String CODE_0_11_86_1="                  {return};\n";
private static final String CODE_0_11_86_2="                 '}'\n";
private static final String CODE_0_11_86_3="                 {var} {res} = {execute}({l}.{executed},{l}.{container},{l}.{resultArgs});\n";
private static final String CODE_0_11_86_4="                 {l}.{time} = {res}.{time};\n";
private static final String CODE_0_11_86_5="                 {l}.{success} = {res}.{success};\n";
private static final String CODE_0_11_86_6="                 {l}.{failMessage} = {res}.{failMessage};\n";
private static final String CODE_0_11_87_0="                '}';\n";
//private static final String CODE_0_11_87_1="                {tt0}.{exSerEx}({tt1});\n";
private static final String CODE_0_11_87_1="                {tts0}.{add}({tt0}.{exSerEx}({tt1}));\n";
private static final String CODE_0_11_89="            '}'\n";
private static final String CODE_0_11_90_1="        {for} ({var} {c}: {tts0})'{'\n";
private static final String CODE_0_11_90_2="         {c}.{wait}();\n";
private static final String CODE_0_11_90_3="        '}'\n";
private static final String CODE_0_11_90_0="        {tt0}.{shutdown}();\n";
private static final String CODE_0_11_91="        {static}({Thread}).{joinOthers}();\n";
private static final String CODE_0_11_92="        {return} {results};\n";
private static final String CODE_0_11_93="    '}'\n";
private static final String CODE_0_11_94="    {private} {static} {Result} {execute}({ExecutedTest} {r1},{Class} {r2},{Object}[] {r3})'{'\n";
private static final String CODE_0_11_95="        {var} {processEx} = {false};\n";
private static final String CODE_0_11_96="        {var} {stTime} = {static}({Thread}).{instant}();\n";
private static final String CODE_0_11_97="        {long} {diff} = -1;\n";
private static final String CODE_0_11_98="        {try} '{'\n";
private static final String CODE_0_11_99="            {var} {ctor} = ({r2}).{getDeclaredConstructors}({false})[0];\n";
private static final String CODE_0_11_100="            {processEx} = {true};\n";
private static final String CODE_0_11_101="            {var} {classTest} = ({ctor}).{newInstance}();\n";
private static final String CODE_0_11_102="            {for} ({var} {b}: ({r1}).{before})'{'\n";
private static final String CODE_0_11_103="                ({b}).{invoke}({classTest});\n";
private static final String CODE_0_11_104="            '}'\n";
private static final String CODE_0_11_105="            {stTime} = {static}({Thread}).{instant}();\n";
private static final String CODE_0_11_106="            ({r1}).{test}.{invoke}({classTest}, {r3});\n";
private static final String CODE_0_11_107="            {diff} = {static}({Thread}).{instant}()-{stTime};\n";
private static final String CODE_0_11_108="            {for} ({var} {b}: ({r1}).{after})'{'\n";
private static final String CODE_0_11_109="                ({b}).{invoke}({classTest});\n";
private static final String CODE_0_11_110="            '}'\n";
private static final String CODE_0_11_111="            {return} {setupNoException}({r1},{diff});\n";
private static final String CODE_0_11_112="        '}' {catch} ({InvokeTarget} {o})'{'\n";
private static final String CODE_0_11_113="            {diff} = {diff} == -1 ? {static}({Thread}).{instant}()-{stTime} : {diff};\n";
private static final String CODE_0_11_114="            {return} {setupError}({r1},{o},{processEx},{diff});\n";
private static final String CODE_0_11_115="        '}' {catch} ({Object} {o})'{'\n";
private static final String CODE_0_11_116="            {diff} = {diff} == -1 ? {static}({Thread}).{instant}()-{stTime} : {diff};\n";
private static final String CODE_0_11_117="            {return} {setupError}({r1},{o},{diff});\n";
private static final String CODE_0_11_118="        '}' {catch} '{'\n";
private static final String CODE_0_11_119="            {diff} = {diff} == -1 ? {static}({Thread}).{instant}()-{stTime} : {diff};\n";
private static final String CODE_0_11_120="            {return} {setupError}({r1},{null},{diff});\n";
private static final String CODE_0_11_121="        '}'\n";
private static final String CODE_0_11_122="    '}'\n";
private static final String CODE_0_11_123="    {private} {static} {String} {convert}({Object} {co})'{'\n";
private static final String CODE_0_11_124="        {try} '{'\n";
private static final String CODE_0_11_125="            {return} {static}({StringUtil}).{valueOf}({co});\n";
private static final String CODE_0_11_126="        '}' {catch} ({Object} {e})'{'\n";
private static final String CODE_0_11_127="            {return} {static}({Class}).{getClass}({co}).{getClassName}();\n";
private static final String CODE_0_11_128="        '}' {catch} '{'\n";
private static final String CODE_0_11_129="            {return} {static}({Class}).{getClass}({co}).{getClassName}();\n";
private static final String CODE_0_11_130="        '}'\n";
private static final String CODE_0_11_131="    '}'\n";
private static final String CODE_0_11_132="    {private} {static} {Result} {setupNoException}({ExecutedTest} {et1},{long} {tps1})'{'\n";
private static final String CODE_0_11_133="        {var} {res} = {new} {Result}();\n";
private static final String CODE_0_11_134="        {res}.{time} = {tps1}/1000000;\n";
private static final String CODE_0_11_135="        {var} {tt} = {cast}({Test})({et1}).{annotations}[0];\n";
private static final String CODE_0_11_136="        {if} (({tt}).{nullException}())'{'\n";
private static final String CODE_0_11_137="            ({res}).{success} = {false};\n";
private static final String CODE_0_11_138="            ({res}).{failMessage} = {new} {StringBuilder}(\"!=\").{append}({static}({StringUtil}).{valueOf}({null})).{toString}();\n";
private static final String CODE_0_11_139="        '}' {else} {if} (!{static}({ObjectsUtil}).{eq}(({tt}).{exception}(),{null}))'{'\n";
private static final String CODE_0_11_140="            ({res}).{success} = {false};\n";
private static final String CODE_0_11_141="            ({res}).{failMessage} = {new} {StringBuilder}(\"!=\").{append}(({tt}).{exception}().{getClassName}()).{toString}();\n";
private static final String CODE_0_11_142="        '}'\n";
private static final String CODE_0_11_143="        {return} {res};\n";
private static final String CODE_0_11_144="    '}'\n";
private static final String CODE_0_11_145="    {private} {static} {Result} {setupError}({ExecutedTest} {et2}, {InvokeTarget} {et3}, {boolean} {et4}, {long} {tps2})'{'\n";
private static final String CODE_0_11_146="        {var} {res} = {new} {Result}();\n";
private static final String CODE_0_11_147="        {res}.{time} = {tps2}/1000000;\n";
private static final String CODE_0_11_148="        {var} {ex} = ({et3}).{getCause}();\n";
private static final String CODE_0_11_149="        {if} ({et4}) '{'\n";
private static final String CODE_0_11_150="            {var} {tt} = {cast}({Test})({et2}).{annotations}[0];\n";
private static final String CODE_0_11_151="            {if} (({tt}).{nullException}())'{'\n";
private static final String CODE_0_11_152="                {if} (!{static}({ObjectsUtil}).{eq}({ex},{null}))'{'\n";
private static final String CODE_0_11_153="                    ({res}).{success} = {false};\n";
private static final String CODE_0_11_154="                    ({res}).{failMessage} = {static}({StringUtil}).{valueOf}({ex});\n";
private static final String CODE_0_11_155="                '}'\n";
private static final String CODE_0_11_156="            '}' {else} {if} (!{static}({ObjectsUtil}).{eq}(({tt}).{exception}(),{null})) '{'\n";
private static final String CODE_0_11_157="                {if} (!({tt}).{exception}().{isAssignableFrom}({static}({Class}).{getClass}({ex})))'{'\n";
private static final String CODE_0_11_158="                    ({res}).{success} = {false};\n";
private static final String CODE_0_11_159="                    ({res}).{failMessage} = {static}({StringUtil}).{valueOf}({ex});\n";
private static final String CODE_0_11_160="                '}'\n";
private static final String CODE_0_11_161="            '}' {else} '{'\n";
private static final String CODE_0_11_162="                ({res}).{success} = {false};\n";
private static final String CODE_0_11_163="                ({res}).{failMessage} = {static}({StringUtil}).{valueOf}({ex});\n";
private static final String CODE_0_11_164="            '}'\n";
private static final String CODE_0_11_165="        '}' {else} '{'\n";
private static final String CODE_0_11_166="            ({res}).{success} = {false};\n";
private static final String CODE_0_11_167="            ({res}).{failMessage} = {static}({StringUtil}).{valueOf}({ex});\n";
private static final String CODE_0_11_168="        '}'\n";
private static final String CODE_0_11_169="        {return} {res};\n";
private static final String CODE_0_11_170="    '}'\n";
private static final String CODE_0_11_171="    {private} {static} {Result} {setupError}({ExecutedTest} {et}, {Object} {er}, {long} {tps3})'{'\n";
private static final String CODE_0_11_172="        {var} {res} = {new} {Result}();\n";
private static final String CODE_0_11_173="        {res}.{time} = {tps3}/1000000;\n";
private static final String CODE_0_11_174="        ({res}).{success} = {false};\n";
private static final String CODE_0_11_175="        ({res}).{failMessage} = {static}({StringUtil}).{valueOf}({er});\n";
private static final String CODE_0_11_176="        {return} {res};\n";
private static final String CODE_0_11_177="    '}'\n";
private static final String CODE_0_11_178="'}'\n";
private MessCdmBaseGr(){}
public static StringMap<String> ms(){
StringMap<String> m = new StringMap<String>();
//m.addEntry(CODE_0_1_1,resourcesLgAliasesEnKeywords());
//m.addEntry(CODE_0_1_2,resourcesLgAliasesEnMessages());
//m.addEntry(CODE_0_1_3,resourcesLgAliasesEnTypes());
//m.addEntry(CODE_0_1_4,resourcesLgAliasesFrKeywords());
//m.addEntry(CODE_0_1_5,resourcesLgAliasesFrMessages());
//m.addEntry(CODE_0_1_6,resourcesLgAliasesFrTypes());
m.addEntry(CODE_0_1_9,resourcesLgTestsRun());
return m;
}
static String resourcesLgTestsRun(){
String f=CODE_0_11_0;
f+=CODE_0_11_1;
f+=CODE_0_11_2;
f+=CODE_0_11_3;
f+=CODE_0_11_4;
f+=CODE_0_11_5;
f+=CODE_0_11_6;
f+=CODE_0_11_7;
f+=CODE_0_11_8;
f+=CODE_0_11_9;
f+=CODE_0_11_10;
f+=CODE_0_11_11;
f+=CODE_0_11_11_0;
f+=CODE_0_11_12;
f+=CODE_0_11_13;
f+=CODE_0_11_14;
f+=CODE_0_11_14_0;
f+=CODE_0_11_15;
f+=CODE_0_11_16;
f+=CODE_0_11_17;
f+=CODE_0_11_18;
f+=CODE_0_11_19;
f+=CODE_0_11_20;
f+=CODE_0_11_21;
f+=CODE_0_11_22;
f+=CODE_0_11_23;
f+=CODE_0_11_24;
f+=CODE_0_11_25;
f+=CODE_0_11_26;
f+=CODE_0_11_27;
f+=CODE_0_11_28;
f+=CODE_0_11_29;
f+=CODE_0_11_30;
f+=CODE_0_11_31;
f+=CODE_0_11_32;
f+=CODE_0_11_33;
f+=CODE_0_11_34;
f+=CODE_0_11_35;
f+=CODE_0_11_36;
f+=CODE_0_11_37;
f+=CODE_0_11_38;
f+=CODE_0_11_39;
f+=CODE_0_11_40;
f+=CODE_0_11_41;
f+=CODE_0_11_42;
f+=CODE_0_11_43;
f+=CODE_0_11_44;
f+=CODE_0_11_45;
f+=CODE_0_11_46;
f+=CODE_0_11_47;
f+=CODE_0_11_48;
f+=CODE_0_11_49;
f+=CODE_0_11_50;
f+=CODE_0_11_51;
f+=CODE_0_11_52;
f+=CODE_0_11_53;
f+=CODE_0_11_53_0;
f+=CODE_0_11_53_1;
f+=CODE_0_11_54;
f+=CODE_0_11_55;
f+=CODE_0_11_56;
f+=CODE_0_11_57;
f+=CODE_0_11_58_0;
f+=CODE_0_11_58_1;
f+=CODE_0_11_58_2;
f+=CODE_0_11_58_3;
f+=CODE_0_11_58_4;
f+=CODE_0_11_58_5;
f+=CODE_0_11_58_6;
f+=CODE_0_11_59;
f+=CODE_0_11_60;
f+=CODE_0_11_61;
f+=CODE_0_11_62;
f+=CODE_0_11_63;
f+=CODE_0_11_64;
f+=CODE_0_11_65;
f+=CODE_0_11_66;
f+=CODE_0_11_67;
f+=CODE_0_11_68;
f+=CODE_0_11_69;
f+=CODE_0_11_70;
f+=CODE_0_11_71;
f+=CODE_0_11_72;
f+=CODE_0_11_73;
f+=CODE_0_11_74;
f+=CODE_0_11_75;
f+=CODE_0_11_76;
f+=CODE_0_11_77;
f+=CODE_0_11_78;
f+=CODE_0_11_78_0;
f+=CODE_0_11_78_1;
f+=CODE_0_11_78_2;
f+=CODE_0_11_79;
f+=CODE_0_11_80;
f+=CODE_0_11_81;
f+=CODE_0_11_82;
f+=CODE_0_11_82_0;
f+=CODE_0_11_82_1;
f+=CODE_0_11_82_2;
f+=CODE_0_11_82_3;
f+=CODE_0_11_83;
f+=CODE_0_11_84;
f+=CODE_0_11_85;
f+=CODE_0_11_85_0;
f+=CODE_0_11_85_1;
f+=CODE_0_11_85_2;
f+=CODE_0_11_86;
f+=CODE_0_11_87;
f+=CODE_0_11_90;
f+=CODE_0_11_55_0;
f+=CODE_0_11_56_0;
f+=CODE_0_11_58;
f+=CODE_0_11_88_0;
f+=CODE_0_11_86_0;
f+=CODE_0_11_88;
f+=CODE_0_11_86_1;
f+=CODE_0_11_86_2;
f+=CODE_0_11_86_3;
f+=CODE_0_11_86_4;
f+=CODE_0_11_86_5;
f+=CODE_0_11_86_6;
f+=CODE_0_11_88;
f+=CODE_0_11_87_0;
f+=CODE_0_11_87_1;
f+=CODE_0_11_89;
f+=CODE_0_11_90_1;
f+=CODE_0_11_90_2;
f+=CODE_0_11_90_3;
f+=CODE_0_11_90_0;
f+=CODE_0_11_91;
f+=CODE_0_11_92;
f+=CODE_0_11_93;
f+=CODE_0_11_94;
f+=CODE_0_11_95;
f+=CODE_0_11_96;
f+=CODE_0_11_97;
f+=CODE_0_11_98;
f+=CODE_0_11_99;
f+=CODE_0_11_100;
f+=CODE_0_11_101;
f+=CODE_0_11_102;
f+=CODE_0_11_103;
f+=CODE_0_11_104;
f+=CODE_0_11_105;
f+=CODE_0_11_106;
f+=CODE_0_11_107;
f+=CODE_0_11_108;
f+=CODE_0_11_109;
f+=CODE_0_11_110;
f+=CODE_0_11_111;
f+=CODE_0_11_112;
f+=CODE_0_11_113;
f+=CODE_0_11_114;
f+=CODE_0_11_115;
f+=CODE_0_11_116;
f+=CODE_0_11_117;
f+=CODE_0_11_118;
f+=CODE_0_11_119;
f+=CODE_0_11_120;
f+=CODE_0_11_121;
f+=CODE_0_11_122;
f+=CODE_0_11_123;
f+=CODE_0_11_124;
f+=CODE_0_11_125;
f+=CODE_0_11_126;
f+=CODE_0_11_127;
f+=CODE_0_11_128;
f+=CODE_0_11_129;
f+=CODE_0_11_130;
f+=CODE_0_11_131;
f+=CODE_0_11_132;
f+=CODE_0_11_133;
f+=CODE_0_11_134;
f+=CODE_0_11_135;
f+=CODE_0_11_136;
f+=CODE_0_11_137;
f+=CODE_0_11_138;
f+=CODE_0_11_139;
f+=CODE_0_11_140;
f+=CODE_0_11_141;
f+=CODE_0_11_142;
f+=CODE_0_11_143;
f+=CODE_0_11_144;
f+=CODE_0_11_145;
f+=CODE_0_11_146;
f+=CODE_0_11_147;
f+=CODE_0_11_148;
f+=CODE_0_11_149;
f+=CODE_0_11_150;
f+=CODE_0_11_151;
f+=CODE_0_11_152;
f+=CODE_0_11_153;
f+=CODE_0_11_154;
f+=CODE_0_11_155;
f+=CODE_0_11_156;
f+=CODE_0_11_157;
f+=CODE_0_11_158;
f+=CODE_0_11_159;
f+=CODE_0_11_160;
f+=CODE_0_11_161;
f+=CODE_0_11_162;
f+=CODE_0_11_163;
f+=CODE_0_11_164;
f+=CODE_0_11_165;
f+=CODE_0_11_166;
f+=CODE_0_11_167;
f+=CODE_0_11_168;
f+=CODE_0_11_169;
f+=CODE_0_11_170;
f+=CODE_0_11_171;
f+=CODE_0_11_172;
f+=CODE_0_11_173;
f+=CODE_0_11_174;
f+=CODE_0_11_175;
f+=CODE_0_11_176;
f+=CODE_0_11_177;
f+=CODE_0_11_178;
return f;
}
}
