package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataComboCombo{
private PageDataComboCombo(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","eff_combo"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/abilities.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_combo,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"ul");
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("list","moves"));
attrs1_.add(at("var","m"));
attrs1_.add(at("className","java.lang.String"));
at(elt3_,attrs1_);
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"a");
CustList<Attr> attrs2_=al(2);
attrs2_.add(at("c:command","$clickMove({index},{([m])})"));
attrs2_.add(at("href",""));
at(elt5_,attrs2_);
Text txt0_=tx(_doc,"{m}");
ad(elt5_,txt0_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","endRound"));
at(elt6_,attrs3_);
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_effendround,rank"));
at(elt7_,attrs4_);
Element elt8_=el(_doc,"param");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","endRoundRank"));
at(elt8_,attrs5_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
Element elt9_=el(_doc,"a");
CustList<Attr> attrs6_=al(2);
attrs6_.add(at("c:command","web/html/endround/endround.html"));
attrs6_.add(at("href",""));
at(elt9_,attrs6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_combo,endRound"));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
ad(elt6_,elt9_);
Element elt11_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","!reasonsEndRound.isEmpty()"));
at(elt11_,attrs8_);
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_effendround,reasons"));
at(elt12_,attrs9_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"ul");
Element elt14_=el(_doc,"c:for");
CustList<Attr> attrs10_=al(3);
attrs10_.add(at("list","reasonsEndRound"));
attrs10_.add(at("var","r"));
attrs10_.add(at("className","java.lang.String"));
at(elt14_,attrs10_);
Element elt15_=el(_doc,"li");
Text txt1_=tx(_doc,"{r}");
ad(elt15_,txt1_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc,"br");
ad(elt11_,elt16_);
Element elt17_=el(_doc,"ul");
Element elt18_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(5);
attrs11_.add(at("key","c"));
attrs11_.add(at("map","mapVarsFailEndRound"));
attrs11_.add(at("value","r"));
attrs11_.add(at("keyClassName","java.lang.String"));
attrs11_.add(at("varClassName","java.lang.String"));
at(elt18_,attrs11_);
Element elt19_=el(_doc,"li");
Text txt2_=tx(_doc,"{c} :");
ad(elt19_,txt2_);
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(2);
attrs12_.add(at("quoted",""));
attrs12_.add(at("value","msg_status,formula"));
at(elt20_,attrs12_);
Element elt21_=el(_doc,"param");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","r"));
at(elt21_,attrs13_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt11_,elt17_);
Element elt22_=el(_doc,"br");
ad(elt11_,elt22_);
ad(elt6_,elt11_);
ad(elt0_,elt6_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","!multEvtRateSecEff.isZero()"));
at(elt23_,attrs14_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_combo,rate_sec_eff"));
at(elt24_,attrs15_);
Element elt25_=el(_doc,"param");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","multEvtRateSecEff"));
at(elt25_,attrs16_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt0_,elt23_);
Element elt26_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","!multStatisticFoe.isEmpty()"));
at(elt26_,attrs17_);
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_combo,mult_stat_foe"));
at(elt27_,attrs18_);
ad(elt26_,elt27_);
Element elt28_=el(_doc,"table");
Element elt29_=el(_doc,"thead");
Element elt30_=el(_doc,"tr");
Element elt31_=el(_doc,"th");
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_combo,statistic"));
at(elt32_,attrs19_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
Element elt33_=el(_doc,"th");
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_combo,rate"));
at(elt34_,attrs20_);
ad(elt33_,elt34_);
ad(elt30_,elt33_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
Element elt35_=el(_doc,"tbody");
Element elt36_=el(_doc,"c:for");
CustList<Attr> attrs21_=al(5);
attrs21_.add(at("key","s"));
attrs21_.add(at("map","multStatisticFoe"));
attrs21_.add(at("value","b"));
attrs21_.add(at("keyClassName","java.lang.Object"));
attrs21_.add(at("varClassName","r"));
at(elt36_,attrs21_);
Element elt37_=el(_doc,"tr");
Element elt38_=el(_doc,"td");
Text txt3_=tx(_doc,"{getTrStatistic(([s]))}");
ad(elt38_,txt3_);
ad(elt37_,elt38_);
Element elt39_=el(_doc,"td");
Text txt4_=tx(_doc,"{b}");
ad(elt39_,txt4_);
ad(elt37_,elt39_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt28_,elt35_);
ad(elt26_,elt28_);
Element elt40_=el(_doc,"br");
ad(elt26_,elt40_);
ad(elt0_,elt26_);
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_combo,rank_increment_nb_round"));
at(elt41_,attrs22_);
Element elt42_=el(_doc,"param");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","rankIncrementNbRound"));
at(elt42_,attrs23_);
ad(elt41_,elt42_);
ad(elt0_,elt41_);
Element elt43_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_combo,law_repeat"));
at(elt43_,attrs24_);
ad(elt0_,elt43_);
Element elt44_=el(_doc,"table");
Element elt45_=el(_doc,"thead");
Element elt46_=el(_doc,"tr");
Element elt47_=el(_doc,"th");
Element elt48_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_combo,law_repeat_key"));
at(elt48_,attrs25_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
Element elt49_=el(_doc,"th");
Element elt50_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg_combo,law_repeat_value"));
at(elt50_,attrs26_);
ad(elt49_,elt50_);
ad(elt46_,elt49_);
ad(elt45_,elt46_);
ad(elt44_,elt45_);
Element elt51_=el(_doc,"tbody");
Element elt52_=el(_doc,"c:for");
CustList<Attr> attrs27_=al(5);
attrs27_.add(at("key","s"));
attrs27_.add(at("map","repeatedRoundsLaw"));
attrs27_.add(at("value","b"));
attrs27_.add(at("keyClassName","li"));
attrs27_.add(at("varClassName","r"));
at(elt52_,attrs27_);
Element elt53_=el(_doc,"tr");
Element elt54_=el(_doc,"td");
Text txt5_=tx(_doc,"{s}");
ad(elt54_,txt5_);
ad(elt53_,elt54_);
Element elt55_=el(_doc,"td");
Text txt6_=tx(_doc,"{b}");
ad(elt55_,txt6_);
ad(elt53_,elt55_);
ad(elt52_,elt53_);
ad(elt51_,elt52_);
ad(elt44_,elt51_);
ad(elt0_,elt44_);
Element elt56_=el(_doc,"br");
ad(elt0_,elt56_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
