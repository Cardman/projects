package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataItemsItemforbattle{
private PageDataItemsItemforbattle(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","itemforbattle"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"title");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_item,title"));
at(elt3_,attrs1_);
Element elt4_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","displayName"));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt5_=el(_doc,"link");
CustList<Attr> attrs3_=al(3);
attrs3_.add(at("href","web/css/items.css"));
attrs3_.add(at("rel","stylesheet"));
attrs3_.add(at("type","text/css"));
at(elt5_,attrs3_);
ad(elt1_,elt5_);
ad(elt0_,elt1_);
Element elt6_=el(_doc,"body");
build0(elt6_,_doc);
build1(elt6_,_doc);
ad(elt0_,elt6_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"c:import");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("page","{itemBean}"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:package");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("name","aiki.beans.items"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"c:class");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("name","ItemBean"));
at(elt2_,attrs2_);
Element elt3_=el(_doc,"c:field");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("prepare","$intern.name=name"));
at(elt3_,attrs3_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","endRound"));
at(elt1_,attrs0_);
Element elt2_=el(_doc,"p");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_effendround,rank"));
at(elt3_,attrs1_);
Element elt4_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","endRoundRank"));
at(elt4_,attrs2_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"a");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("c:command","web/html/endround/endround.html"));
attrs3_.add(at("href",""));
at(elt5_,attrs3_);
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_itemforbattle,endRound"));
at(elt6_,attrs4_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("condition","!reasonsEndRound.isEmpty()"));
at(elt7_,attrs5_);
Element elt8_=el(_doc,"p");
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_effendround,reasons"));
at(elt9_,attrs6_);
ad(elt8_,elt9_);
Element elt10_=el(_doc,"ul");
Element elt11_=el(_doc,"c:for");
CustList<Attr> attrs7_=al(3);
attrs7_.add(at("list","reasonsEndRound"));
attrs7_.add(at("var","r"));
attrs7_.add(at("className","java.lang.String"));
at(elt11_,attrs7_);
Element elt12_=el(_doc,"li");
Text txt0_=tx(_doc,"{r}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt8_,elt10_);
Element elt13_=el(_doc,"br");
ad(elt8_,elt13_);
Element elt14_=el(_doc,"ul");
Element elt15_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(5);
attrs8_.add(at("key","c"));
attrs8_.add(at("map","mapVarsFailEndRound"));
attrs8_.add(at("value","r"));
attrs8_.add(at("keyClassName","java.lang.String"));
attrs8_.add(at("varClassName","java.lang.String"));
at(elt15_,attrs8_);
Element elt16_=el(_doc,"li");
Text txt1_=tx(_doc,"{c} : {r}");
ad(elt16_,txt1_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt8_,elt14_);
ad(elt7_,elt8_);
Element elt17_=el(_doc,"br");
ad(elt7_,elt17_);
ad(elt1_,elt7_);
ad(elt0_,elt1_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","sending"));
at(elt18_,attrs9_);
Element elt19_=el(_doc,"c:import");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("page","{effectSendBean}"));
at(elt19_,attrs10_);
Element elt20_=el(_doc,"c:package");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("name","aiki.beans.effects"));
at(elt20_,attrs11_);
Element elt21_=el(_doc,"c:class");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("name","EffectWhileSendingBean"));
at(elt21_,attrs12_);
Element elt22_=el(_doc,"c:field");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("prepare","$intern.effect=getEffectSending()"));
at(elt22_,attrs13_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt0_,elt18_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","cancelImmuType"));
at(elt23_,attrs14_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_itemforbattle,cancel_immu_type_time"));
at(elt24_,attrs15_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_itemforbattle,cancel_immu_type"));
at(elt25_,attrs16_);
ad(elt23_,elt25_);
ad(elt0_,elt23_);
Element elt26_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","againstEvo"));
at(elt26_,attrs17_);
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_itemforbattle,against_evo"));
at(elt27_,attrs18_);
ad(elt26_,elt27_);
ad(elt0_,elt26_);
Element elt28_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","attackLast"));
at(elt28_,attrs19_);
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_itemforbattle,attack_last_time"));
at(elt29_,attrs20_);
ad(elt28_,elt29_);
Element elt30_=el(_doc,"c:message");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","msg_itemforbattle,attack_last"));
at(elt30_,attrs21_);
ad(elt28_,elt30_);
ad(elt0_,elt28_);
Element elt31_=el(_doc,"c:if");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("condition","boostExp"));
at(elt31_,attrs22_);
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","msg_itemforbattle,boost_exp"));
at(elt32_,attrs23_);
ad(elt31_,elt32_);
ad(elt0_,elt31_);
Element elt33_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","repellingWildPk"));
at(elt33_,attrs24_);
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_itemforbattle,repel"));
at(elt34_,attrs25_);
ad(elt33_,elt34_);
ad(elt0_,elt33_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("condition","immuLowStatis"));
at(elt35_,attrs26_);
Element elt36_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_itemforbattle,immu_low_statis_time"));
at(elt36_,attrs27_);
ad(elt35_,elt36_);
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","msg_itemforbattle,immu_low_statis"));
at(elt37_,attrs28_);
ad(elt35_,elt37_);
ad(elt0_,elt35_);
Element elt38_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","attacksSoon"));
at(elt38_,attrs29_);
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","msg_itemforbattle,attack_soon_time"));
at(elt39_,attrs30_);
ad(elt38_,elt39_);
Element elt40_=el(_doc,"c:message");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("value","msg_itemforbattle,attack_soon"));
at(elt40_,attrs31_);
ad(elt38_,elt40_);
ad(elt0_,elt38_);
Element elt41_=el(_doc,"c:if");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("condition","!protectAgainstKo.isZero()"));
at(elt41_,attrs32_);
Element elt42_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_itemforbattle,protect_ko_time"));
at(elt42_,attrs33_);
ad(elt41_,elt42_);
Element elt43_=el(_doc,"c:message");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("value","msg_itemforbattle,protect_ko"));
at(elt43_,attrs34_);
Element elt44_=el(_doc,"param");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("value","protectAgainstKo"));
at(elt44_,attrs35_);
ad(elt43_,elt44_);
ad(elt41_,elt43_);
ad(elt0_,elt41_);
Element elt45_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","!protectAgainstKoIfFullHp.isZero()"));
at(elt45_,attrs36_);
Element elt46_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_itemforbattle,protect_ko_all_time"));
at(elt46_,attrs37_);
ad(elt45_,elt46_);
Element elt47_=el(_doc,"c:message");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("value","msg_itemforbattle,protect_ko_all"));
at(elt47_,attrs38_);
Element elt48_=el(_doc,"param");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","protectAgainstKoIfFullHp"));
at(elt48_,attrs39_);
ad(elt47_,elt48_);
ad(elt45_,elt47_);
ad(elt0_,elt45_);
Element elt49_=el(_doc,"c:if");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("condition","!drainedHpByDamageRate.isZero()"));
at(elt49_,attrs40_);
Element elt50_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg_itemforbattle,drained_hp_time"));
at(elt50_,attrs41_);
ad(elt49_,elt50_);
Element elt51_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_itemforbattle,drained_hp"));
at(elt51_,attrs42_);
Element elt52_=el(_doc,"param");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("value","drainedHpByDamageRate"));
at(elt52_,attrs43_);
ad(elt51_,elt52_);
ad(elt49_,elt51_);
ad(elt0_,elt49_);
Element elt53_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","!multTrappingDamage.isZero()"));
at(elt53_,attrs44_);
Element elt54_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("value","msg_itemforbattle,mult_trapping"));
at(elt54_,attrs45_);
Element elt55_=el(_doc,"param");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("value","multTrappingDamage"));
at(elt55_,attrs46_);
ad(elt54_,elt55_);
ad(elt53_,elt54_);
ad(elt0_,elt53_);
Element elt56_=el(_doc,"c:if");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("condition","!multWinningMoney.isZero()"));
at(elt56_,attrs47_);
Element elt57_=el(_doc,"c:message");
CustList<Attr> attrs48_=al(1);
attrs48_.add(at("value","msg_itemforbattle,mult_win_money"));
at(elt57_,attrs48_);
Element elt58_=el(_doc,"param");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("value","multWinningMoney"));
at(elt58_,attrs49_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
ad(elt0_,elt56_);
Element elt59_=el(_doc,"c:if");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("condition","!multWinningHappiness.isZero()"));
at(elt59_,attrs50_);
Element elt60_=el(_doc,"c:message");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("value","msg_itemforbattle,mult_win_happiness"));
at(elt60_,attrs51_);
Element elt61_=el(_doc,"param");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","multWinningHappiness"));
at(elt61_,attrs52_);
ad(elt60_,elt61_);
ad(elt59_,elt60_);
ad(elt0_,elt59_);
Element elt62_=el(_doc,"c:if");
CustList<Attr> attrs53_=al(1);
attrs53_.add(at("condition","!multWinningEv.isZero()"));
at(elt62_,attrs53_);
Element elt63_=el(_doc,"c:message");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("value","msg_itemforbattle,mult_win_ev"));
at(elt63_,attrs54_);
Element elt64_=el(_doc,"param");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("value","multWinningEv"));
at(elt64_,attrs55_);
ad(elt63_,elt64_);
ad(elt62_,elt63_);
ad(elt0_,elt62_);
Element elt65_=el(_doc,"c:if");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("condition","!multWinningExp.isZero()"));
at(elt65_,attrs56_);
Element elt66_=el(_doc,"c:message");
CustList<Attr> attrs57_=al(1);
attrs57_.add(at("value","msg_itemforbattle,mult_win_exp"));
at(elt66_,attrs57_);
Element elt67_=el(_doc,"param");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("value","multWinningExp"));
at(elt67_,attrs58_);
ad(elt66_,elt67_);
ad(elt65_,elt66_);
ad(elt0_,elt65_);
Element elt68_=el(_doc,"c:if");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("condition","!multDrainedHp.isZero()"));
at(elt68_,attrs59_);
Element elt69_=el(_doc,"c:message");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("value","msg_itemforbattle,mult_drained_hp_time"));
at(elt69_,attrs60_);
ad(elt68_,elt69_);
Element elt70_=el(_doc,"c:message");
CustList<Attr> attrs61_=al(1);
attrs61_.add(at("value","msg_itemforbattle,mult_drained_hp"));
at(elt70_,attrs61_);
Element elt71_=el(_doc,"param");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("value","multDrainedHp"));
at(elt71_,attrs62_);
ad(elt70_,elt71_);
ad(elt68_,elt70_);
ad(elt0_,elt68_);
Element elt72_=el(_doc,"c:if");
CustList<Attr> attrs63_=al(1);
attrs63_.add(at("condition","!damageRecoil.isZero()"));
at(elt72_,attrs63_);
Element elt73_=el(_doc,"c:message");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("value","msg_itemforbattle,damage_recoil_time"));
at(elt73_,attrs64_);
ad(elt72_,elt73_);
Element elt74_=el(_doc,"c:message");
CustList<Attr> attrs65_=al(1);
attrs65_.add(at("value","msg_itemforbattle,damage_recoil"));
at(elt74_,attrs65_);
Element elt75_=el(_doc,"param");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("value","damageRecoil"));
at(elt75_,attrs66_);
ad(elt74_,elt75_);
ad(elt72_,elt74_);
ad(elt0_,elt72_);
Element elt76_=el(_doc,"c:if");
CustList<Attr> attrs67_=al(1);
attrs67_.add(at("condition","!multPower.isEmpty()"));
at(elt76_,attrs67_);
Element elt77_=el(_doc,"c:message");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("value","msg_itemforbattle,mult_power"));
at(elt77_,attrs68_);
Element elt78_=el(_doc,"param");
CustList<Attr> attrs69_=al(1);
attrs69_.add(at("value","multPower"));
at(elt78_,attrs69_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt0_,elt76_);
Element elt79_=el(_doc,"c:if");
CustList<Attr> attrs70_=al(1);
attrs70_.add(at("condition","!multDamage.isEmpty()"));
at(elt79_,attrs70_);
Element elt80_=el(_doc,"c:message");
CustList<Attr> attrs71_=al(1);
attrs71_.add(at("value","msg_itemforbattle,mult_damage"));
at(elt80_,attrs71_);
Element elt81_=el(_doc,"param");
CustList<Attr> attrs72_=al(1);
attrs72_.add(at("value","multDamage"));
at(elt81_,attrs72_);
ad(elt80_,elt81_);
ad(elt79_,elt80_);
ad(elt0_,elt79_);
Element elt82_=el(_doc,"c:if");
CustList<Attr> attrs73_=al(1);
attrs73_.add(at("condition","!multStatRank.isEmpty()"));
at(elt82_,attrs73_);
Element elt83_=el(_doc,"c:message");
CustList<Attr> attrs74_=al(1);
attrs74_.add(at("value","msg_itemforbattle,mult_stat_rank"));
at(elt83_,attrs74_);
ad(elt82_,elt83_);
Element elt84_=el(_doc,"table");
Element elt85_=el(_doc,"thead");
Element elt86_=el(_doc,"tr");
Element elt87_=el(_doc,"th");
Element elt88_=el(_doc,"c:message");
CustList<Attr> attrs75_=al(1);
attrs75_.add(at("value","msg_itemforbattle,mult_stat_rank_key"));
at(elt88_,attrs75_);
ad(elt87_,elt88_);
ad(elt86_,elt87_);
Element elt89_=el(_doc,"th");
Element elt90_=el(_doc,"c:message");
CustList<Attr> attrs76_=al(1);
attrs76_.add(at("value","msg_itemforbattle,mult_stat_rank_boost"));
at(elt90_,attrs76_);
ad(elt89_,elt90_);
ad(elt86_,elt89_);
ad(elt85_,elt86_);
ad(elt84_,elt85_);
Element elt91_=el(_doc,"tbody");
Element elt92_=el(_doc,"c:for");
CustList<Attr> attrs77_=al(5);
attrs77_.add(at("key","s"));
attrs77_.add(at("map","multStatRank"));
attrs77_.add(at("value","r"));
attrs77_.add(at("keyClassName","java.lang.Object"));
attrs77_.add(at("varClassName","java.lang.Byte"));
at(elt92_,attrs77_);
Element elt93_=el(_doc,"tr");
Element elt94_=el(_doc,"td");
Text txt2_=tx(_doc,"{getTrMultStatRank(([s]))}");
ad(elt94_,txt2_);
ad(elt93_,elt94_);
Element elt95_=el(_doc,"td");
Text txt3_=tx(_doc,"{r}");
ad(elt95_,txt3_);
ad(elt93_,elt95_);
ad(elt92_,elt93_);
ad(elt91_,elt92_);
ad(elt84_,elt91_);
ad(elt82_,elt84_);
Element elt96_=el(_doc,"br");
ad(elt82_,elt96_);
ad(elt0_,elt82_);
Element elt97_=el(_doc,"c:if");
CustList<Attr> attrs78_=al(1);
attrs78_.add(at("condition","!multStatPokemonRank.isEmpty()"));
at(elt97_,attrs78_);
Element elt98_=el(_doc,"c:message");
CustList<Attr> attrs79_=al(1);
attrs79_.add(at("value","msg_itemforbattle,mult_stat_pokemon_rank"));
at(elt98_,attrs79_);
ad(elt97_,elt98_);
Element elt99_=el(_doc,"table");
Element elt100_=el(_doc,"thead");
Element elt101_=el(_doc,"tr");
Element elt102_=el(_doc,"th");
Element elt103_=el(_doc,"c:message");
CustList<Attr> attrs80_=al(1);
attrs80_.add(at("value","msg_itemforbattle,mult_stat_pokemon_rank_stat"));
at(elt103_,attrs80_);
ad(elt102_,elt103_);
ad(elt101_,elt102_);
Element elt104_=el(_doc,"th");
Element elt105_=el(_doc,"c:message");
CustList<Attr> attrs81_=al(1);
attrs81_.add(at("value","msg_itemforbattle,mult_stat_pokemon_rank_name"));
at(elt105_,attrs81_);
ad(elt104_,elt105_);
ad(elt101_,elt104_);
Element elt106_=el(_doc,"th");
Element elt107_=el(_doc,"c:message");
CustList<Attr> attrs82_=al(1);
attrs82_.add(at("value","msg_itemforbattle,mult_stat_pokemon_rank_var"));
at(elt107_,attrs82_);
ad(elt106_,elt107_);
ad(elt101_,elt106_);
ad(elt100_,elt101_);
ad(elt99_,elt100_);
Element elt108_=el(_doc,"tbody");
Element elt109_=el(_doc,"c:for");
CustList<Attr> attrs83_=al(5);
attrs83_.add(at("key","s"));
attrs83_.add(at("map","multStatPokemonRank"));
attrs83_.add(at("value","r"));
attrs83_.add(at("keyClassName","java.lang.Object"));
attrs83_.add(at("varClassName","java.lang.Byte"));
at(elt109_,attrs83_);
Element elt110_=el(_doc,"tr");
Element elt111_=el(_doc,"td");
Text txt4_=tx(_doc,"{getTrMultStatPkRank(([s]))}");
ad(elt111_,txt4_);
ad(elt110_,elt111_);
Element elt112_=el(_doc,"td");
Element elt113_=el(_doc,"a");
CustList<Attr> attrs84_=al(2);
attrs84_.add(at("c:command","$clickMultStatPk({([s])})"));
attrs84_.add(at("href",""));
at(elt113_,attrs84_);
Text txt5_=tx(_doc,"{getTrMultStatPk(([s]))}");
ad(elt113_,txt5_);
ad(elt112_,elt113_);
ad(elt110_,elt112_);
Element elt114_=el(_doc,"td");
Text txt6_=tx(_doc,"{r}");
ad(elt114_,txt6_);
ad(elt110_,elt114_);
ad(elt109_,elt110_);
ad(elt108_,elt109_);
ad(elt99_,elt108_);
ad(elt97_,elt99_);
Element elt115_=el(_doc,"br");
ad(elt97_,elt115_);
ad(elt0_,elt97_);
Element elt116_=el(_doc,"c:if");
CustList<Attr> attrs85_=al(1);
attrs85_.add(at("condition","!boostStatisSuperEff.isEmpty()"));
at(elt116_,attrs85_);
Element elt117_=el(_doc,"c:message");
CustList<Attr> attrs86_=al(1);
attrs86_.add(at("value","msg_itemforbattle,boost_super_eff"));
at(elt117_,attrs86_);
ad(elt116_,elt117_);
Element elt118_=el(_doc,"table");
Element elt119_=el(_doc,"thead");
Element elt120_=el(_doc,"tr");
Element elt121_=el(_doc,"th");
Element elt122_=el(_doc,"c:message");
CustList<Attr> attrs87_=al(1);
attrs87_.add(at("value","msg_itemforbattle,boost_super_eff_stat"));
at(elt122_,attrs87_);
ad(elt121_,elt122_);
ad(elt120_,elt121_);
Element elt123_=el(_doc,"th");
Element elt124_=el(_doc,"c:message");
CustList<Attr> attrs88_=al(1);
attrs88_.add(at("value","msg_itemforbattle,boost_super_eff_boost"));
at(elt124_,attrs88_);
ad(elt123_,elt124_);
ad(elt120_,elt123_);
ad(elt119_,elt120_);
ad(elt118_,elt119_);
Element elt125_=el(_doc,"tbody");
Element elt126_=el(_doc,"c:for");
CustList<Attr> attrs89_=al(5);
attrs89_.add(at("key","s"));
attrs89_.add(at("map","boostStatisSuperEff"));
attrs89_.add(at("value","r"));
attrs89_.add(at("keyClassName","java.lang.Object"));
attrs89_.add(at("varClassName","java.lang.Byte"));
at(elt126_,attrs89_);
Element elt127_=el(_doc,"tr");
Element elt128_=el(_doc,"td");
Text txt7_=tx(_doc,"{getTrMultStatisSuperEff(([s]))}");
ad(elt128_,txt7_);
ad(elt127_,elt128_);
Element elt129_=el(_doc,"td");
Text txt8_=tx(_doc,"{r}");
ad(elt129_,txt8_);
ad(elt127_,elt129_);
ad(elt126_,elt127_);
ad(elt125_,elt126_);
ad(elt118_,elt125_);
ad(elt116_,elt118_);
Element elt130_=el(_doc,"br");
ad(elt116_,elt130_);
ad(elt0_,elt116_);
Element elt131_=el(_doc,"c:if");
CustList<Attr> attrs90_=al(1);
attrs90_.add(at("condition","!boostStatisTypes.isEmpty()"));
at(elt131_,attrs90_);
Element elt132_=el(_doc,"c:message");
CustList<Attr> attrs91_=al(1);
attrs91_.add(at("value","msg_itemforbattle,boost_types"));
at(elt132_,attrs91_);
ad(elt131_,elt132_);
Element elt133_=el(_doc,"c:for");
CustList<Attr> attrs92_=al(5);
attrs92_.add(at("key","t"));
attrs92_.add(at("map","boostStatisTypes"));
attrs92_.add(at("value","m"));
attrs92_.add(at("keyClassName","java.lang.Object"));
attrs92_.add(at("varClassName","lse"));
at(elt133_,attrs92_);
Element elt134_=el(_doc,"h3");
Text txt9_=tx(_doc,"{getTrMultStatisTypes(([t]))}");
ad(elt134_,txt9_);
ad(elt133_,elt134_);
Element elt135_=el(_doc,"br");
ad(elt133_,elt135_);
Element elt136_=el(_doc,"table");
Element elt137_=el(_doc,"thead");
Element elt138_=el(_doc,"tr");
Element elt139_=el(_doc,"th");
Element elt140_=el(_doc,"c:message");
CustList<Attr> attrs93_=al(1);
attrs93_.add(at("value","msg_itemforbattle,boost_types_stat"));
at(elt140_,attrs93_);
ad(elt139_,elt140_);
ad(elt138_,elt139_);
Element elt141_=el(_doc,"th");
Element elt142_=el(_doc,"c:message");
CustList<Attr> attrs94_=al(1);
attrs94_.add(at("value","msg_itemforbattle,boost_types_boost"));
at(elt142_,attrs94_);
ad(elt141_,elt142_);
ad(elt138_,elt141_);
ad(elt137_,elt138_);
ad(elt136_,elt137_);
Element elt143_=el(_doc,"tbody");
Element elt144_=el(_doc,"c:for");
CustList<Attr> attrs95_=al(5);
attrs95_.add(at("key","s"));
attrs95_.add(at("map","m"));
attrs95_.add(at("value","r"));
attrs95_.add(at("keyClassName","java.lang.Object"));
attrs95_.add(at("varClassName","java.lang.Byte"));
at(elt144_,attrs95_);
Element elt145_=el(_doc,"tr");
Element elt146_=el(_doc,"td");
Text txt10_=tx(_doc,"{getTrMultStatisTypesStat(([t]),([s]))}");
ad(elt146_,txt10_);
ad(elt145_,elt146_);
Element elt147_=el(_doc,"td");
Text txt11_=tx(_doc,"{r}");
ad(elt147_,txt11_);
ad(elt145_,elt147_);
ad(elt144_,elt145_);
ad(elt143_,elt144_);
ad(elt136_,elt143_);
ad(elt133_,elt136_);
Element elt148_=el(_doc,"br");
ad(elt133_,elt148_);
ad(elt131_,elt133_);
Element elt149_=el(_doc,"br");
ad(elt131_,elt149_);
ad(elt0_,elt131_);
Element elt150_=el(_doc,"c:if");
CustList<Attr> attrs96_=al(1);
attrs96_.add(at("condition","!multStat.isEmpty()"));
at(elt150_,attrs96_);
Element elt151_=el(_doc,"c:message");
CustList<Attr> attrs97_=al(1);
attrs97_.add(at("value","msg_itemforbattle,mult_stat"));
at(elt151_,attrs97_);
ad(elt150_,elt151_);
Element elt152_=el(_doc,"table");
Element elt153_=el(_doc,"thead");
Element elt154_=el(_doc,"tr");
Element elt155_=el(_doc,"th");
Element elt156_=el(_doc,"c:message");
CustList<Attr> attrs98_=al(1);
attrs98_.add(at("value","msg_itemforbattle,mult_stat_key"));
at(elt156_,attrs98_);
ad(elt155_,elt156_);
ad(elt154_,elt155_);
Element elt157_=el(_doc,"th");
Element elt158_=el(_doc,"c:message");
CustList<Attr> attrs99_=al(1);
attrs99_.add(at("value","msg_itemforbattle,mult_stat_rate"));
at(elt158_,attrs99_);
ad(elt157_,elt158_);
ad(elt154_,elt157_);
ad(elt153_,elt154_);
ad(elt152_,elt153_);
Element elt159_=el(_doc,"tbody");
Element elt160_=el(_doc,"c:for");
CustList<Attr> attrs100_=al(5);
attrs100_.add(at("key","s"));
attrs100_.add(at("map","multStat"));
attrs100_.add(at("value","r"));
attrs100_.add(at("keyClassName","java.lang.Object"));
attrs100_.add(at("varClassName","java.lang.String"));
at(elt160_,attrs100_);
Element elt161_=el(_doc,"tr");
Element elt162_=el(_doc,"td");
Text txt12_=tx(_doc,"{getTrMultStat(([s]))}");
ad(elt162_,txt12_);
ad(elt161_,elt162_);
Element elt163_=el(_doc,"td");
Text txt13_=tx(_doc,"{r}");
ad(elt163_,txt13_);
ad(elt161_,elt163_);
ad(elt160_,elt161_);
ad(elt159_,elt160_);
ad(elt152_,elt159_);
ad(elt150_,elt152_);
Element elt164_=el(_doc,"br");
ad(elt150_,elt164_);
ad(elt0_,elt150_);
Element elt165_=el(_doc,"c:if");
CustList<Attr> attrs101_=al(1);
attrs101_.add(at("condition","!failStatus.isEmpty()"));
at(elt165_,attrs101_);
Element elt166_=el(_doc,"c:message");
CustList<Attr> attrs102_=al(1);
attrs102_.add(at("value","msg_itemforbattle,fail"));
at(elt166_,attrs102_);
ad(elt165_,elt166_);
Element elt167_=el(_doc,"table");
Element elt168_=el(_doc,"thead");
Element elt169_=el(_doc,"tr");
Element elt170_=el(_doc,"th");
Element elt171_=el(_doc,"c:message");
CustList<Attr> attrs103_=al(1);
attrs103_.add(at("value","msg_itemforbattle,fail_status"));
at(elt171_,attrs103_);
ad(elt170_,elt171_);
ad(elt169_,elt170_);
Element elt172_=el(_doc,"th");
Element elt173_=el(_doc,"c:message");
CustList<Attr> attrs104_=al(1);
attrs104_.add(at("value","msg_itemforbattle,fail_reason"));
at(elt173_,attrs104_);
ad(elt172_,elt173_);
ad(elt169_,elt172_);
ad(elt168_,elt169_);
ad(elt167_,elt168_);
Element elt174_=el(_doc,"tbody");
Element elt175_=el(_doc,"c:for");
CustList<Attr> attrs105_=al(5);
attrs105_.add(at("key","s"));
attrs105_.add(at("map","failStatus"));
attrs105_.add(at("value","r"));
attrs105_.add(at("keyClassName","java.lang.Object"));
attrs105_.add(at("varClassName","java.lang.String"));
at(elt175_,attrs105_);
Element elt176_=el(_doc,"tr");
Element elt177_=el(_doc,"td");
Element elt178_=el(_doc,"a");
CustList<Attr> attrs106_=al(2);
attrs106_.add(at("c:command","$clickFailStatus({([s])})"));
attrs106_.add(at("href",""));
at(elt178_,attrs106_);
Text txt14_=tx(_doc,"{getTrFailStatus(([s]))}");
ad(elt178_,txt14_);
ad(elt177_,elt178_);
ad(elt176_,elt177_);
Element elt179_=el(_doc,"td");
Text txt15_=tx(_doc,"{r}");
ad(elt179_,txt15_);
ad(elt176_,elt179_);
ad(elt175_,elt176_);
ad(elt174_,elt175_);
ad(elt167_,elt174_);
ad(elt165_,elt167_);
Element elt180_=el(_doc,"br");
ad(elt165_,elt180_);
ad(elt0_,elt165_);
Element elt181_=el(_doc,"c:if");
CustList<Attr> attrs107_=al(1);
attrs107_.add(at("condition","!mapVars.isEmpty()"));
at(elt181_,attrs107_);
Element elt182_=el(_doc,"ul");
Element elt183_=el(_doc,"c:for");
CustList<Attr> attrs108_=al(5);
attrs108_.add(at("key","k"));
attrs108_.add(at("map","mapVars"));
attrs108_.add(at("value","v"));
attrs108_.add(at("keyClassName","java.lang.String"));
attrs108_.add(at("varClassName","java.lang.String"));
at(elt183_,attrs108_);
Element elt184_=el(_doc,"li");
Text txt16_=tx(_doc,"{k} :");
ad(elt184_,txt16_);
Element elt185_=el(_doc,"c:message");
CustList<Attr> attrs109_=al(2);
attrs109_.add(at("quoted",""));
attrs109_.add(at("value","msg_itemforbattle,formula"));
at(elt185_,attrs109_);
Element elt186_=el(_doc,"param");
CustList<Attr> attrs110_=al(1);
attrs110_.add(at("value","v"));
at(elt186_,attrs110_);
ad(elt185_,elt186_);
ad(elt184_,elt185_);
ad(elt183_,elt184_);
ad(elt182_,elt183_);
ad(elt181_,elt182_);
Element elt187_=el(_doc,"br");
ad(elt181_,elt187_);
ad(elt0_,elt181_);
Element elt188_=el(_doc,"c:if");
CustList<Attr> attrs111_=al(1);
attrs111_.add(at("condition","!typesPk.isEmpty()"));
at(elt188_,attrs111_);
Element elt189_=el(_doc,"c:if");
CustList<Attr> attrs112_=al(1);
attrs112_.add(at("condition","!typesPkAbilities.isEmpty()"));
at(elt189_,attrs112_);
Element elt190_=el(_doc,"c:message");
CustList<Attr> attrs113_=al(1);
attrs113_.add(at("value","msg_itemforbattle,types_pk"));
at(elt190_,attrs113_);
ad(elt189_,elt190_);
Element elt191_=el(_doc,"ul");
Element elt192_=el(_doc,"c:for");
CustList<Attr> attrs114_=al(2);
attrs114_.add(at("list","typesPkAbilities"));
attrs114_.add(at("var","a"));
at(elt192_,attrs114_);
Element elt193_=el(_doc,"li");
Element elt194_=el(_doc,"a");
CustList<Attr> attrs115_=al(2);
attrs115_.add(at("c:command","$clickTypesPkAbility({([a])})"));
attrs115_.add(at("href",""));
at(elt194_,attrs115_);
Text txt17_=tx(_doc,"{getTrTypesPkAbility(([a]))}");
ad(elt194_,txt17_);
ad(elt193_,elt194_);
ad(elt192_,elt193_);
ad(elt191_,elt192_);
ad(elt189_,elt191_);
Element elt195_=el(_doc,"br");
ad(elt189_,elt195_);
Element elt196_=el(_doc,"c:message");
CustList<Attr> attrs116_=al(1);
attrs116_.add(at("value","msg_itemforbattle,types_pk_2"));
at(elt196_,attrs116_);
ad(elt189_,elt196_);
Element elt197_=el(_doc,"ul");
Element elt198_=el(_doc,"c:for");
CustList<Attr> attrs117_=al(2);
attrs117_.add(at("list","typesPk"));
attrs117_.add(at("var","t"));
at(elt198_,attrs117_);
Element elt199_=el(_doc,"li");
Text txt18_=tx(_doc,"{getTrTypesPk(([t]))}");
ad(elt199_,txt18_);
ad(elt198_,elt199_);
ad(elt197_,elt198_);
ad(elt189_,elt197_);
Element elt200_=el(_doc,"br");
ad(elt189_,elt200_);
ad(elt188_,elt189_);
ad(elt0_,elt188_);
Element elt201_=el(_doc,"c:if");
CustList<Attr> attrs118_=al(1);
attrs118_.add(at("condition","!immuStatus.isEmpty()"));
at(elt201_,attrs118_);
Element elt202_=el(_doc,"c:message");
CustList<Attr> attrs119_=al(1);
attrs119_.add(at("value","msg_itemforbattle,immu_status_time"));
at(elt202_,attrs119_);
ad(elt201_,elt202_);
Element elt203_=el(_doc,"c:message");
CustList<Attr> attrs120_=al(1);
attrs120_.add(at("value","msg_itemforbattle,immu_status"));
at(elt203_,attrs120_);
ad(elt201_,elt203_);
Element elt204_=el(_doc,"ul");
Element elt205_=el(_doc,"c:for");
CustList<Attr> attrs121_=al(2);
attrs121_.add(at("list","immuStatus"));
attrs121_.add(at("var","s"));
at(elt205_,attrs121_);
Element elt206_=el(_doc,"li");
Element elt207_=el(_doc,"a");
CustList<Attr> attrs122_=al(2);
attrs122_.add(at("c:command","$clickImmuStatus({([s])})"));
attrs122_.add(at("href",""));
at(elt207_,attrs122_);
Text txt19_=tx(_doc,"{getTrImmuStatus(([s]))}");
ad(elt207_,txt19_);
ad(elt206_,elt207_);
ad(elt205_,elt206_);
ad(elt204_,elt205_);
ad(elt201_,elt204_);
Element elt208_=el(_doc,"br");
ad(elt201_,elt208_);
ad(elt0_,elt201_);
Element elt209_=el(_doc,"c:if");
CustList<Attr> attrs123_=al(1);
attrs123_.add(at("condition","!immuTypes.isEmpty()"));
at(elt209_,attrs123_);
Element elt210_=el(_doc,"c:message");
CustList<Attr> attrs124_=al(1);
attrs124_.add(at("value","msg_itemforbattle,immu_types_time"));
at(elt210_,attrs124_);
ad(elt209_,elt210_);
Element elt211_=el(_doc,"c:message");
CustList<Attr> attrs125_=al(1);
attrs125_.add(at("value","msg_itemforbattle,immu_types"));
at(elt211_,attrs125_);
ad(elt209_,elt211_);
Element elt212_=el(_doc,"ul");
Element elt213_=el(_doc,"c:for");
CustList<Attr> attrs126_=al(2);
attrs126_.add(at("list","immuTypes"));
attrs126_.add(at("var","s"));
at(elt213_,attrs126_);
Element elt214_=el(_doc,"li");
Text txt20_=tx(_doc,"{getTrImmuTypes(([s]))}");
ad(elt214_,txt20_);
ad(elt213_,elt214_);
ad(elt212_,elt213_);
ad(elt209_,elt212_);
Element elt215_=el(_doc,"br");
ad(elt209_,elt215_);
ad(elt0_,elt209_);
Element elt216_=el(_doc,"c:if");
CustList<Attr> attrs127_=al(1);
attrs127_.add(at("condition","!synchroStatus.isEmpty()"));
at(elt216_,attrs127_);
Element elt217_=el(_doc,"c:message");
CustList<Attr> attrs128_=al(1);
attrs128_.add(at("value","msg_itemforbattle,synchro_status"));
at(elt217_,attrs128_);
ad(elt216_,elt217_);
Element elt218_=el(_doc,"ul");
Element elt219_=el(_doc,"c:for");
CustList<Attr> attrs129_=al(2);
attrs129_.add(at("list","synchroStatus"));
attrs129_.add(at("var","s"));
at(elt219_,attrs129_);
Element elt220_=el(_doc,"li");
Element elt221_=el(_doc,"a");
CustList<Attr> attrs130_=al(2);
attrs130_.add(at("c:command","$clickSynchroStatus({([s])})"));
attrs130_.add(at("href",""));
at(elt221_,attrs130_);
Text txt21_=tx(_doc,"{getTrSynchroStatus(([s]))}");
ad(elt221_,txt21_);
ad(elt220_,elt221_);
ad(elt219_,elt220_);
ad(elt218_,elt219_);
ad(elt216_,elt218_);
Element elt222_=el(_doc,"br");
ad(elt216_,elt222_);
ad(elt0_,elt216_);
Element elt223_=el(_doc,"c:if");
CustList<Attr> attrs131_=al(1);
attrs131_.add(at("condition","!winEvFight.isEmpty()"));
at(elt223_,attrs131_);
Element elt224_=el(_doc,"c:message");
CustList<Attr> attrs132_=al(1);
attrs132_.add(at("value","msg_itemforbattle,win_ev"));
at(elt224_,attrs132_);
ad(elt223_,elt224_);
Element elt225_=el(_doc,"table");
Element elt226_=el(_doc,"thead");
Element elt227_=el(_doc,"tr");
Element elt228_=el(_doc,"th");
Element elt229_=el(_doc,"c:message");
CustList<Attr> attrs133_=al(1);
attrs133_.add(at("value","msg_itemforbattle,win_ev_stat"));
at(elt229_,attrs133_);
ad(elt228_,elt229_);
ad(elt227_,elt228_);
Element elt230_=el(_doc,"th");
Element elt231_=el(_doc,"c:message");
CustList<Attr> attrs134_=al(1);
attrs134_.add(at("value","msg_itemforbattle,win_ev_value"));
at(elt231_,attrs134_);
ad(elt230_,elt231_);
ad(elt227_,elt230_);
ad(elt226_,elt227_);
ad(elt225_,elt226_);
Element elt232_=el(_doc,"tbody");
Element elt233_=el(_doc,"c:for");
CustList<Attr> attrs135_=al(5);
attrs135_.add(at("key","s"));
attrs135_.add(at("map","winEvFight"));
attrs135_.add(at("value","r"));
attrs135_.add(at("keyClassName","java.lang.Object"));
attrs135_.add(at("varClassName","java.lang.Short"));
at(elt233_,attrs135_);
Element elt234_=el(_doc,"tr");
Element elt235_=el(_doc,"td");
Text txt22_=tx(_doc,"{getTrWinEvFight(([s]))}");
ad(elt235_,txt22_);
ad(elt234_,elt235_);
Element elt236_=el(_doc,"td");
Text txt23_=tx(_doc,"{r}");
ad(elt236_,txt23_);
ad(elt234_,elt236_);
ad(elt233_,elt234_);
ad(elt232_,elt233_);
ad(elt225_,elt232_);
ad(elt223_,elt225_);
Element elt237_=el(_doc,"br");
ad(elt223_,elt237_);
ad(elt0_,elt223_);
Element elt238_=el(_doc,"c:if");
CustList<Attr> attrs136_=al(1);
attrs136_.add(at("condition","!increasingMaxNbRoundTrap.isEmpty()"));
at(elt238_,attrs136_);
Element elt239_=el(_doc,"c:message");
CustList<Attr> attrs137_=al(1);
attrs137_.add(at("value","msg_itemforbattle,increasing_trap_time"));
at(elt239_,attrs137_);
ad(elt238_,elt239_);
Element elt240_=el(_doc,"c:message");
CustList<Attr> attrs138_=al(1);
attrs138_.add(at("value","msg_itemforbattle,increasing_trap"));
at(elt240_,attrs138_);
ad(elt238_,elt240_);
Element elt241_=el(_doc,"table");
Element elt242_=el(_doc,"thead");
Element elt243_=el(_doc,"tr");
Element elt244_=el(_doc,"th");
Element elt245_=el(_doc,"c:message");
CustList<Attr> attrs139_=al(1);
attrs139_.add(at("value","msg_itemforbattle,increasing_trap_move"));
at(elt245_,attrs139_);
ad(elt244_,elt245_);
ad(elt243_,elt244_);
Element elt246_=el(_doc,"th");
Element elt247_=el(_doc,"c:message");
CustList<Attr> attrs140_=al(1);
attrs140_.add(at("value","msg_itemforbattle,increasing_trap_nb"));
at(elt247_,attrs140_);
ad(elt246_,elt247_);
ad(elt243_,elt246_);
ad(elt242_,elt243_);
ad(elt241_,elt242_);
Element elt248_=el(_doc,"tbody");
Element elt249_=el(_doc,"c:for");
CustList<Attr> attrs141_=al(5);
attrs141_.add(at("key","s"));
attrs141_.add(at("map","increasingMaxNbRoundTrap"));
attrs141_.add(at("value","r"));
attrs141_.add(at("keyClassName","java.lang.Object"));
attrs141_.add(at("varClassName","java.lang.Short"));
at(elt249_,attrs141_);
Element elt250_=el(_doc,"tr");
Element elt251_=el(_doc,"td");
Element elt252_=el(_doc,"a");
CustList<Attr> attrs142_=al(1);
attrs142_.add(at("c:command","$clickTrapMove({([s])})"));
at(elt252_,attrs142_);
Text txt24_=tx(_doc,"{getTrTrapMove(([s]))}");
ad(elt252_,txt24_);
ad(elt251_,elt252_);
ad(elt250_,elt251_);
Element elt253_=el(_doc,"td");
Text txt25_=tx(_doc,"{r}");
ad(elt253_,txt25_);
ad(elt250_,elt253_);
ad(elt249_,elt250_);
ad(elt248_,elt249_);
ad(elt241_,elt248_);
ad(elt238_,elt241_);
Element elt254_=el(_doc,"br");
ad(elt238_,elt254_);
ad(elt0_,elt238_);
Element elt255_=el(_doc,"c:if");
CustList<Attr> attrs143_=al(1);
attrs143_.add(at("condition","!increasingMaxNbRoundGlobalMove.isEmpty()"));
at(elt255_,attrs143_);
Element elt256_=el(_doc,"c:message");
CustList<Attr> attrs144_=al(1);
attrs144_.add(at("value","msg_itemforbattle,increasing_global_time"));
at(elt256_,attrs144_);
ad(elt255_,elt256_);
Element elt257_=el(_doc,"c:message");
CustList<Attr> attrs145_=al(1);
attrs145_.add(at("value","msg_itemforbattle,increasing_global"));
at(elt257_,attrs145_);
ad(elt255_,elt257_);
Element elt258_=el(_doc,"table");
Element elt259_=el(_doc,"thead");
Element elt260_=el(_doc,"tr");
Element elt261_=el(_doc,"th");
Element elt262_=el(_doc,"c:message");
CustList<Attr> attrs146_=al(1);
attrs146_.add(at("value","msg_itemforbattle,increasing_global_move"));
at(elt262_,attrs146_);
ad(elt261_,elt262_);
ad(elt260_,elt261_);
Element elt263_=el(_doc,"th");
Element elt264_=el(_doc,"c:message");
CustList<Attr> attrs147_=al(1);
attrs147_.add(at("value","msg_itemforbattle,increasing_global_nb"));
at(elt264_,attrs147_);
ad(elt263_,elt264_);
ad(elt260_,elt263_);
ad(elt259_,elt260_);
ad(elt258_,elt259_);
Element elt265_=el(_doc,"tbody");
Element elt266_=el(_doc,"c:for");
CustList<Attr> attrs148_=al(5);
attrs148_.add(at("key","s"));
attrs148_.add(at("map","increasingMaxNbRoundGlobalMove"));
attrs148_.add(at("value","r"));
attrs148_.add(at("keyClassName","java.lang.Object"));
attrs148_.add(at("varClassName","java.lang.Short"));
at(elt266_,attrs148_);
Element elt267_=el(_doc,"tr");
Element elt268_=el(_doc,"td");
Element elt269_=el(_doc,"a");
CustList<Attr> attrs149_=al(1);
attrs149_.add(at("c:command","$clickGlobalMove({([s])})"));
at(elt269_,attrs149_);
Text txt26_=tx(_doc,"{getTrGlobalMove(([s]))}");
ad(elt269_,txt26_);
ad(elt268_,elt269_);
ad(elt267_,elt268_);
Element elt270_=el(_doc,"td");
Text txt27_=tx(_doc,"{r}");
ad(elt270_,txt27_);
ad(elt267_,elt270_);
ad(elt266_,elt267_);
ad(elt265_,elt266_);
ad(elt258_,elt265_);
ad(elt255_,elt258_);
Element elt271_=el(_doc,"br");
ad(elt255_,elt271_);
ad(elt0_,elt255_);
Element elt272_=el(_doc,"c:if");
CustList<Attr> attrs150_=al(1);
attrs150_.add(at("condition","!increasingMaxNbRoundTeamMove.isEmpty()"));
at(elt272_,attrs150_);
Element elt273_=el(_doc,"c:message");
CustList<Attr> attrs151_=al(1);
attrs151_.add(at("value","msg_itemforbattle,increasing_team_time"));
at(elt273_,attrs151_);
ad(elt272_,elt273_);
Element elt274_=el(_doc,"c:message");
CustList<Attr> attrs152_=al(1);
attrs152_.add(at("value","msg_itemforbattle,increasing_team"));
at(elt274_,attrs152_);
ad(elt272_,elt274_);
Element elt275_=el(_doc,"table");
Element elt276_=el(_doc,"thead");
Element elt277_=el(_doc,"tr");
Element elt278_=el(_doc,"th");
Element elt279_=el(_doc,"c:message");
CustList<Attr> attrs153_=al(1);
attrs153_.add(at("value","msg_itemforbattle,increasing_team_move"));
at(elt279_,attrs153_);
ad(elt278_,elt279_);
ad(elt277_,elt278_);
Element elt280_=el(_doc,"th");
Element elt281_=el(_doc,"c:message");
CustList<Attr> attrs154_=al(1);
attrs154_.add(at("value","msg_itemforbattle,increasing_team_nb"));
at(elt281_,attrs154_);
ad(elt280_,elt281_);
ad(elt277_,elt280_);
ad(elt276_,elt277_);
ad(elt275_,elt276_);
Element elt282_=el(_doc,"tbody");
Element elt283_=el(_doc,"c:for");
CustList<Attr> attrs155_=al(5);
attrs155_.add(at("key","s"));
attrs155_.add(at("map","increasingMaxNbRoundTeamMove"));
attrs155_.add(at("value","r"));
attrs155_.add(at("keyClassName","java.lang.Object"));
attrs155_.add(at("varClassName","java.lang.Short"));
at(elt283_,attrs155_);
Element elt284_=el(_doc,"tr");
Element elt285_=el(_doc,"td");
Element elt286_=el(_doc,"a");
CustList<Attr> attrs156_=al(1);
attrs156_.add(at("c:command","$clickTeamMove({([s])})"));
at(elt286_,attrs156_);
Text txt28_=tx(_doc,"{getTrTeamMove(([s]))}");
ad(elt286_,txt28_);
ad(elt285_,elt286_);
ad(elt284_,elt285_);
Element elt287_=el(_doc,"td");
Text txt29_=tx(_doc,"{r}");
ad(elt287_,txt29_);
ad(elt284_,elt287_);
ad(elt283_,elt284_);
ad(elt282_,elt283_);
ad(elt275_,elt282_);
ad(elt272_,elt275_);
Element elt288_=el(_doc,"br");
ad(elt272_,elt288_);
ad(elt0_,elt272_);
Element elt289_=el(_doc,"c:if");
CustList<Attr> attrs157_=al(1);
attrs157_.add(at("condition","!immuMoves.isEmpty()"));
at(elt289_,attrs157_);
Element elt290_=el(_doc,"c:message");
CustList<Attr> attrs158_=al(1);
attrs158_.add(at("value","msg_itemforbattle,immu_moves"));
at(elt290_,attrs158_);
ad(elt289_,elt290_);
Element elt291_=el(_doc,"ul");
Element elt292_=el(_doc,"c:for");
CustList<Attr> attrs159_=al(2);
attrs159_.add(at("list","immuMoves"));
attrs159_.add(at("var","m"));
at(elt292_,attrs159_);
Element elt293_=el(_doc,"li");
Element elt294_=el(_doc,"a");
CustList<Attr> attrs160_=al(2);
attrs160_.add(at("c:command","$clickImmuMove({([m])})"));
attrs160_.add(at("href",""));
at(elt294_,attrs160_);
Text txt30_=tx(_doc,"{getTrImmuMove(([m]))}");
ad(elt294_,txt30_);
ad(elt293_,elt294_);
ad(elt292_,elt293_);
ad(elt291_,elt292_);
ad(elt289_,elt291_);
Element elt295_=el(_doc,"br");
ad(elt289_,elt295_);
ad(elt0_,elt289_);
Element elt296_=el(_doc,"c:if");
CustList<Attr> attrs161_=al(1);
attrs161_.add(at("condition","!immuWeather.isEmpty()"));
at(elt296_,attrs161_);
Element elt297_=el(_doc,"c:message");
CustList<Attr> attrs162_=al(1);
attrs162_.add(at("value","msg_itemforbattle,immu_weathers"));
at(elt297_,attrs162_);
ad(elt296_,elt297_);
Element elt298_=el(_doc,"ul");
Element elt299_=el(_doc,"c:for");
CustList<Attr> attrs163_=al(2);
attrs163_.add(at("list","immuWeather"));
attrs163_.add(at("var","m"));
at(elt299_,attrs163_);
Element elt300_=el(_doc,"li");
Element elt301_=el(_doc,"a");
CustList<Attr> attrs164_=al(2);
attrs164_.add(at("c:command","$clickWeather({([m])})"));
attrs164_.add(at("href",""));
at(elt301_,attrs164_);
Text txt31_=tx(_doc,"{getTrWeather(([m]))}");
ad(elt301_,txt31_);
ad(elt300_,elt301_);
ad(elt299_,elt300_);
ad(elt298_,elt299_);
ad(elt296_,elt298_);
Element elt302_=el(_doc,"br");
ad(elt296_,elt302_);
ad(elt0_,elt296_);
Element elt303_=el(_doc,"c:if");
CustList<Attr> attrs165_=al(1);
attrs165_.add(at("condition","!rateForAttackFirst().isZero()"));
at(elt303_,attrs165_);
Element elt304_=el(_doc,"c:if");
CustList<Attr> attrs166_=al(1);
attrs166_.add(at("condition","determinated()"));
at(elt304_,attrs166_);
Element elt305_=el(_doc,"c:message");
CustList<Attr> attrs167_=al(1);
attrs167_.add(at("value","msg_itemforbattle,attack_first"));
at(elt305_,attrs167_);
ad(elt304_,elt305_);
ad(elt303_,elt304_);
Element elt306_=el(_doc,"c:if");
CustList<Attr> attrs168_=al(1);
attrs168_.add(at("condition","!determinated()"));
at(elt306_,attrs168_);
Element elt307_=el(_doc,"c:message");
CustList<Attr> attrs169_=al(1);
attrs169_.add(at("value","msg_itemforbattle,attack_first_random"));
at(elt307_,attrs169_);
Element elt308_=el(_doc,"param");
CustList<Attr> attrs170_=al(1);
attrs170_.add(at("value","rateForAttackFirst()"));
at(elt308_,attrs170_);
ad(elt307_,elt308_);
ad(elt306_,elt307_);
ad(elt303_,elt306_);
Element elt309_=el(_doc,"br");
ad(elt303_,elt309_);
ad(elt0_,elt303_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
