package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataMovesEffectsEffdamage{
private PageDataMovesEffectsEffdamage(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","eff_damage"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/moves.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_effdamage,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:import");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("page","{effectBean}"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:package");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("name","aiki.beans.moves.effects"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:class");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("name","EffectBean"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:field");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("prepare","$intern.index=index"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:field");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("prepare","$intern.move=move"));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","hitsLaw.isEmpty()"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_effdamage,hit_law_const"));
at(elt8_,attrs7_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","nbHits"));
at(elt9_,attrs8_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
Element elt10_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!hitsLaw.isEmpty()"));
at(elt10_,attrs9_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_effdamage,hit_law"));
at(elt11_,attrs10_);
ad(elt10_,elt11_);
Element elt12_=el(_doc,"table");
Element elt13_=el(_doc,"thead");
Element elt14_=el(_doc,"tr");
Element elt15_=el(_doc,"th");
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_effdamage,event_nb_hits"));
at(elt16_,attrs11_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
Element elt17_=el(_doc,"th");
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_effdamage,rate_event"));
at(elt18_,attrs12_);
ad(elt17_,elt18_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt19_=el(_doc,"tbody");
Element elt20_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(5);
attrs13_.add(at("key","c"));
attrs13_.add(at("map","hitsLaw"));
attrs13_.add(at("value","r"));
attrs13_.add(at("keyClassName","java.lang.Long"));
attrs13_.add(at("varClassName","r"));
at(elt20_,attrs13_);
Element elt21_=el(_doc,"tr");
Element elt22_=el(_doc,"td");
Text txt0_=tx(_doc,"{c}");
ad(elt22_,txt0_);
ad(elt21_,elt22_);
Element elt23_=el(_doc,"td");
Text txt1_=tx(_doc,"{r}");
ad(elt23_,txt1_);
ad(elt21_,elt23_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt12_,elt19_);
ad(elt10_,elt12_);
Element elt24_=el(_doc,"br");
ad(elt10_,elt24_);
ad(elt0_,elt10_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","constDamage"));
at(elt25_,attrs14_);
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_effdamage,const_damage"));
at(elt26_,attrs15_);
Element elt27_=el(_doc,"param");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","power"));
at(elt27_,attrs16_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt0_,elt25_);
Element elt28_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","!constDamage"));
at(elt28_,attrs17_);
Element elt29_=el(_doc,"c:if");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("condition","hasLawForDamage()"));
at(elt29_,attrs18_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","hasDeterminatedLawForDamage()"));
at(elt30_,attrs19_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_effdamage,damag_law_const"));
at(elt31_,attrs20_);
Element elt32_=el(_doc,"param");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","power"));
at(elt32_,attrs21_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
Element elt33_=el(_doc,"c:if");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("condition","!hasDeterminatedLawForDamage()"));
at(elt33_,attrs22_);
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","msg_effdamage,damag_law"));
at(elt34_,attrs23_);
ad(elt33_,elt34_);
Element elt35_=el(_doc,"table");
Element elt36_=el(_doc,"thead");
Element elt37_=el(_doc,"tr");
Element elt38_=el(_doc,"th");
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_effdamage,event"));
at(elt39_,attrs24_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
Element elt40_=el(_doc,"th");
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_effdamage,rate_event"));
at(elt41_,attrs25_);
ad(elt40_,elt41_);
ad(elt37_,elt40_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
Element elt42_=el(_doc,"tbody");
Element elt43_=el(_doc,"c:for");
CustList<Attr> attrs26_=al(5);
attrs26_.add(at("key","c"));
attrs26_.add(at("map","damageLaw"));
attrs26_.add(at("value","r"));
attrs26_.add(at("keyClassName","java.lang.String"));
attrs26_.add(at("varClassName","r"));
at(elt43_,attrs26_);
Element elt44_=el(_doc,"tr");
Element elt45_=el(_doc,"td");
Text txt2_=tx(_doc,"{c}");
ad(elt45_,txt2_);
ad(elt44_,elt45_);
Element elt46_=el(_doc,"td");
Text txt3_=tx(_doc,"{r}");
ad(elt46_,txt3_);
ad(elt44_,elt46_);
ad(elt43_,elt44_);
ad(elt42_,elt43_);
ad(elt35_,elt42_);
ad(elt33_,elt35_);
Element elt47_=el(_doc,"br");
ad(elt33_,elt47_);
ad(elt29_,elt33_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("condition","!mapVarsDamage.isEmpty()"));
at(elt48_,attrs27_);
Element elt49_=el(_doc,"ul");
Element elt50_=el(_doc,"c:for");
CustList<Attr> attrs28_=al(5);
attrs28_.add(at("key","k"));
attrs28_.add(at("map","mapVarsDamage"));
attrs28_.add(at("value","v"));
attrs28_.add(at("keyClassName","java.lang.String"));
attrs28_.add(at("varClassName","java.lang.String"));
at(elt50_,attrs28_);
Element elt51_=el(_doc,"li");
Text txt4_=tx(_doc,"{k} :");
ad(elt51_,txt4_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(2);
attrs29_.add(at("quoted",""));
attrs29_.add(at("value","msg_effdamage,formula"));
at(elt52_,attrs29_);
Element elt53_=el(_doc,"param");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","v"));
at(elt53_,attrs30_);
ad(elt52_,elt53_);
ad(elt51_,elt52_);
ad(elt50_,elt51_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
Element elt54_=el(_doc,"br");
ad(elt48_,elt54_);
ad(elt29_,elt48_);
ad(elt28_,elt29_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","counterDamageCat()"));
at(elt55_,attrs31_);
Element elt56_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_effdamage,damage_mult_counter"));
at(elt56_,attrs32_);
ad(elt55_,elt56_);
Element elt57_=el(_doc,"table");
Element elt58_=el(_doc,"thead");
Element elt59_=el(_doc,"tr");
Element elt60_=el(_doc,"th");
Element elt61_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_effdamage,category"));
at(elt61_,attrs33_);
ad(elt60_,elt61_);
ad(elt59_,elt60_);
Element elt62_=el(_doc,"th");
Element elt63_=el(_doc,"c:message");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("value","msg_effdamage,rate"));
at(elt63_,attrs34_);
ad(elt62_,elt63_);
ad(elt59_,elt62_);
ad(elt58_,elt59_);
ad(elt57_,elt58_);
Element elt64_=el(_doc,"tbody");
Element elt65_=el(_doc,"c:for");
CustList<Attr> attrs35_=al(5);
attrs35_.add(at("key","c"));
attrs35_.add(at("map","multDamageAgainst"));
attrs35_.add(at("value","r"));
attrs35_.add(at("keyClassName","java.lang.String"));
attrs35_.add(at("varClassName","r"));
at(elt65_,attrs35_);
Element elt66_=el(_doc,"tr");
Element elt67_=el(_doc,"td");
Text txt5_=tx(_doc,"{c}");
ad(elt67_,txt5_);
ad(elt66_,elt67_);
Element elt68_=el(_doc,"td");
Text txt6_=tx(_doc,"{r}");
ad(elt68_,txt6_);
ad(elt66_,elt68_);
ad(elt65_,elt66_);
ad(elt64_,elt65_);
ad(elt57_,elt64_);
ad(elt55_,elt57_);
Element elt69_=el(_doc,"br");
ad(elt55_,elt69_);
ad(elt28_,elt55_);
Element elt70_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","constPower()"));
at(elt70_,attrs36_);
Element elt71_=el(_doc,"c:if");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("condition","hasConstPower()"));
at(elt71_,attrs37_);
Element elt72_=el(_doc,"c:message");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("value","msg_effdamage,const_power"));
at(elt72_,attrs38_);
Element elt73_=el(_doc,"param");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","power"));
at(elt73_,attrs39_);
ad(elt72_,elt73_);
ad(elt71_,elt72_);
ad(elt70_,elt71_);
Element elt74_=el(_doc,"c:if");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("condition","!hasConstPower()"));
at(elt74_,attrs40_);
Element elt75_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg_effdamage,var_power"));
at(elt75_,attrs41_);
Element elt76_=el(_doc,"param");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","power"));
at(elt76_,attrs42_);
ad(elt75_,elt76_);
ad(elt74_,elt75_);
ad(elt70_,elt74_);
Element elt77_=el(_doc,"c:if");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("condition","!mapVarsDamage.isEmpty()"));
at(elt77_,attrs43_);
Element elt78_=el(_doc,"ul");
Element elt79_=el(_doc,"c:for");
CustList<Attr> attrs44_=al(5);
attrs44_.add(at("key","k"));
attrs44_.add(at("map","mapVarsDamage"));
attrs44_.add(at("value","v"));
attrs44_.add(at("keyClassName","java.lang.String"));
attrs44_.add(at("varClassName","java.lang.String"));
at(elt79_,attrs44_);
Element elt80_=el(_doc,"li");
Text txt7_=tx(_doc,"{k} :");
ad(elt80_,txt7_);
Element elt81_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(2);
attrs45_.add(at("quoted",""));
attrs45_.add(at("value","msg_effdamage,formula"));
at(elt81_,attrs45_);
Element elt82_=el(_doc,"param");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("value","v"));
at(elt82_,attrs46_);
ad(elt81_,elt82_);
ad(elt80_,elt81_);
ad(elt79_,elt80_);
ad(elt78_,elt79_);
ad(elt77_,elt78_);
Element elt83_=el(_doc,"br");
ad(elt77_,elt83_);
ad(elt70_,elt77_);
Element elt84_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_effdamage,ch_rate"));
at(elt84_,attrs47_);
Element elt85_=el(_doc,"param");
CustList<Attr> attrs48_=al(1);
attrs48_.add(at("value","chRate"));
at(elt85_,attrs48_);
ad(elt84_,elt85_);
ad(elt70_,elt84_);
Element elt86_=el(_doc,"c:message");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("value","msg_effdamage,ch_law"));
at(elt86_,attrs49_);
ad(elt70_,elt86_);
Element elt87_=el(_doc,"table");
Element elt88_=el(_doc,"thead");
Element elt89_=el(_doc,"tr");
Element elt90_=el(_doc,"th");
Element elt91_=el(_doc,"c:message");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("value","msg_effdamage,event_rate"));
at(elt91_,attrs50_);
ad(elt90_,elt91_);
ad(elt89_,elt90_);
Element elt92_=el(_doc,"th");
Element elt93_=el(_doc,"c:message");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("value","msg_effdamage,rate"));
at(elt93_,attrs51_);
ad(elt92_,elt93_);
ad(elt89_,elt92_);
ad(elt88_,elt89_);
ad(elt87_,elt88_);
Element elt94_=el(_doc,"tbody");
Element elt95_=el(_doc,"c:for");
CustList<Attr> attrs52_=al(5);
attrs52_.add(at("key","c"));
attrs52_.add(at("map","chLaw"));
attrs52_.add(at("value","r"));
attrs52_.add(at("keyClassName","r"));
attrs52_.add(at("varClassName","r"));
at(elt95_,attrs52_);
Element elt96_=el(_doc,"tr");
Element elt97_=el(_doc,"td");
Text txt8_=tx(_doc,"{c}");
ad(elt97_,txt8_);
ad(elt96_,elt97_);
Element elt98_=el(_doc,"td");
Text txt9_=tx(_doc,"{r}");
ad(elt98_,txt9_);
ad(elt96_,elt98_);
ad(elt95_,elt96_);
ad(elt94_,elt95_);
ad(elt87_,elt94_);
ad(elt70_,elt87_);
Element elt99_=el(_doc,"br");
ad(elt70_,elt99_);
Element elt100_=el(_doc,"c:if");
CustList<Attr> attrs53_=al(1);
attrs53_.add(at("condition","userAttack"));
at(elt100_,attrs53_);
Element elt101_=el(_doc,"c:message");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("value","msg_effdamage,attack_user"));
at(elt101_,attrs54_);
Element elt102_=el(_doc,"param");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("value","statisAtt"));
at(elt102_,attrs55_);
ad(elt101_,elt102_);
ad(elt100_,elt101_);
ad(elt70_,elt100_);
Element elt103_=el(_doc,"c:if");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("condition","!userAttack"));
at(elt103_,attrs56_);
Element elt104_=el(_doc,"c:message");
CustList<Attr> attrs57_=al(1);
attrs57_.add(at("value","msg_effdamage,attack_target"));
at(elt104_,attrs57_);
Element elt105_=el(_doc,"param");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("value","statisAtt"));
at(elt105_,attrs58_);
ad(elt104_,elt105_);
ad(elt103_,elt104_);
ad(elt70_,elt103_);
Element elt106_=el(_doc,"c:if");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("condition","targetDefense"));
at(elt106_,attrs59_);
Element elt107_=el(_doc,"c:message");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("value","msg_effdamage,defense_target"));
at(elt107_,attrs60_);
Element elt108_=el(_doc,"param");
CustList<Attr> attrs61_=al(1);
attrs61_.add(at("value","statisDef"));
at(elt108_,attrs61_);
ad(elt107_,elt108_);
ad(elt106_,elt107_);
ad(elt70_,elt106_);
Element elt109_=el(_doc,"c:if");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("condition","!targetDefense"));
at(elt109_,attrs62_);
Element elt110_=el(_doc,"c:message");
CustList<Attr> attrs63_=al(1);
attrs63_.add(at("value","msg_effdamage,defense_user"));
at(elt110_,attrs63_);
Element elt111_=el(_doc,"param");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("value","statisDef"));
at(elt111_,attrs64_);
ad(elt110_,elt111_);
ad(elt109_,elt110_);
ad(elt70_,elt109_);
Element elt112_=el(_doc,"c:if");
CustList<Attr> attrs65_=al(1);
attrs65_.add(at("condition","!ignVarStatTargetPos.isEmpty()"));
at(elt112_,attrs65_);
Element elt113_=el(_doc,"c:message");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("value","msg_effdamage,ign_pos_stat"));
at(elt113_,attrs66_);
ad(elt112_,elt113_);
Element elt114_=el(_doc,"ul");
Element elt115_=el(_doc,"c:for");
CustList<Attr> attrs67_=al(2);
attrs67_.add(at("list","ignVarStatTargetPos"));
attrs67_.add(at("var","s"));
at(elt115_,attrs67_);
Element elt116_=el(_doc,"li");
Text txt10_=tx(_doc,"{getTranslatedStatisTarget(([s]))}");
ad(elt116_,txt10_);
ad(elt115_,elt116_);
ad(elt114_,elt115_);
ad(elt112_,elt114_);
Element elt117_=el(_doc,"br");
ad(elt112_,elt117_);
ad(elt70_,elt112_);
Element elt118_=el(_doc,"c:if");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("condition","!ignVarStatUserNeg.isEmpty()"));
at(elt118_,attrs68_);
Element elt119_=el(_doc,"c:message");
CustList<Attr> attrs69_=al(1);
attrs69_.add(at("value","msg_effdamage,ign_neg_stat"));
at(elt119_,attrs69_);
ad(elt118_,elt119_);
Element elt120_=el(_doc,"ul");
Element elt121_=el(_doc,"c:for");
CustList<Attr> attrs70_=al(2);
attrs70_.add(at("list","ignVarStatUserNeg"));
attrs70_.add(at("var","s"));
at(elt121_,attrs70_);
Element elt122_=el(_doc,"li");
Text txt11_=tx(_doc,"{getTranslatedStatisUser(([s]))}");
ad(elt122_,txt11_);
ad(elt121_,elt122_);
ad(elt120_,elt121_);
ad(elt118_,elt120_);
Element elt123_=el(_doc,"br");
ad(elt118_,elt123_);
ad(elt70_,elt118_);
Element elt124_=el(_doc,"c:if");
CustList<Attr> attrs71_=al(1);
attrs71_.add(at("condition","randMax"));
at(elt124_,attrs71_);
Element elt125_=el(_doc,"c:message");
CustList<Attr> attrs72_=al(1);
attrs72_.add(at("value","msg_effdamage,rand_max"));
at(elt125_,attrs72_);
ad(elt124_,elt125_);
ad(elt70_,elt124_);
ad(elt28_,elt70_);
ad(elt0_,elt28_);
Element elt126_=el(_doc,"hr");
ad(elt0_,elt126_);
Element elt127_=el(_doc,"c:if");
CustList<Attr> attrs73_=al(1);
attrs73_.add(at("condition","!boostStatisOnceKoFoe.isEmpty()"));
at(elt127_,attrs73_);
Element elt128_=el(_doc,"c:message");
CustList<Attr> attrs74_=al(1);
attrs74_.add(at("value","msg_effdamage,boost_statis_once_ko_foe"));
at(elt128_,attrs74_);
ad(elt127_,elt128_);
Element elt129_=el(_doc,"table");
Element elt130_=el(_doc,"thead");
Element elt131_=el(_doc,"tr");
Element elt132_=el(_doc,"th");
Element elt133_=el(_doc,"c:message");
CustList<Attr> attrs75_=al(1);
attrs75_.add(at("value","msg_effdamage,statistic"));
at(elt133_,attrs75_);
ad(elt132_,elt133_);
ad(elt131_,elt132_);
Element elt134_=el(_doc,"th");
Element elt135_=el(_doc,"c:message");
CustList<Attr> attrs76_=al(1);
attrs76_.add(at("value","msg_effdamage,boost"));
at(elt135_,attrs76_);
ad(elt134_,elt135_);
ad(elt131_,elt134_);
ad(elt130_,elt131_);
ad(elt129_,elt130_);
Element elt136_=el(_doc,"tbody");
Element elt137_=el(_doc,"c:for");
CustList<Attr> attrs77_=al(5);
attrs77_.add(at("key","c"));
attrs77_.add(at("map","boostStatisOnceKoFoe"));
attrs77_.add(at("value","r"));
attrs77_.add(at("keyClassName","java.lang.Object"));
attrs77_.add(at("varClassName","java.lang.Byte"));
at(elt137_,attrs77_);
Element elt138_=el(_doc,"tr");
Element elt139_=el(_doc,"td");
Text txt12_=tx(_doc,"{getTranslatedStatisKo(([c]))}");
ad(elt139_,txt12_);
ad(elt138_,elt139_);
Element elt140_=el(_doc,"td");
Text txt13_=tx(_doc,"{r}");
ad(elt140_,txt13_);
ad(elt138_,elt140_);
ad(elt137_,elt138_);
ad(elt136_,elt137_);
ad(elt129_,elt136_);
ad(elt127_,elt129_);
Element elt141_=el(_doc,"br");
ad(elt127_,elt141_);
ad(elt0_,elt127_);
Element elt142_=el(_doc,"c:if");
CustList<Attr> attrs78_=al(1);
attrs78_.add(at("condition","summingUserTeamOkFighter"));
at(elt142_,attrs78_);
Element elt143_=el(_doc,"c:message");
CustList<Attr> attrs79_=al(1);
attrs79_.add(at("value","msg_effdamage,summing_team"));
at(elt143_,attrs79_);
ad(elt142_,elt143_);
ad(elt0_,elt142_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
