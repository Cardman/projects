package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataMovesEffectsEffstatis{
private PageDataMovesEffectsEffstatis(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","eff_statis"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/moves.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_effstatis,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:import");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("page","{effectBean}"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:package");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("name","aiki.beans.moves.effects"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:class");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("name","EffectBean"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:field");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("prepare","$intern.index=index"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:field");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("prepare","$intern.move=move"));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!randomStatis()"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","isAlwaysEnabled()"));
at(elt8_,attrs7_);
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_effstatis,always_enabled"));
at(elt9_,attrs8_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
Element elt10_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!isAlwaysEnabled()"));
at(elt10_,attrs9_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_effstatis,rate_enabled"));
at(elt11_,attrs10_);
Element elt12_=el(_doc,"param");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","evtRate"));
at(elt12_,attrs11_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"param");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","evtRatePerCent"));
at(elt13_,attrs12_);
ad(elt11_,elt13_);
ad(elt10_,elt11_);
ad(elt7_,elt10_);
ad(elt0_,elt7_);
Element elt14_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","notEmptyVarBoost()"));
at(elt14_,attrs13_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","randomStatis()"));
at(elt15_,attrs14_);
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_effstatis,var_statis_rank"));
at(elt16_,attrs15_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"table");
Element elt18_=el(_doc,"thead");
Element elt19_=el(_doc,"tr");
Element elt20_=el(_doc,"th");
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_effstatis,statistic"));
at(elt21_,attrs16_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
Element elt22_=el(_doc,"th");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_effstatis,boost"));
at(elt23_,attrs17_);
ad(elt22_,elt23_);
ad(elt19_,elt22_);
Element elt24_=el(_doc,"th");
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_effstatis,fail"));
at(elt25_,attrs18_);
ad(elt24_,elt25_);
ad(elt19_,elt24_);
Element elt26_=el(_doc,"th");
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_effstatis,rate_event"));
at(elt27_,attrs19_);
ad(elt26_,elt27_);
ad(elt19_,elt26_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
Element elt28_=el(_doc,"tbody");
Element elt29_=el(_doc,"c:for");
CustList<Attr> attrs20_=al(5);
attrs20_.add(at("key","c"));
attrs20_.add(at("map","statisVarRank"));
attrs20_.add(at("value","r"));
attrs20_.add(at("keyClassName","java.lang.String"));
attrs20_.add(at("varClassName","java.lang.Byte"));
at(elt29_,attrs20_);
Element elt30_=el(_doc,"tr");
Element elt31_=el(_doc,"td");
Text txt0_=tx(_doc,"{c}");
ad(elt31_,txt0_);
ad(elt30_,elt31_);
Element elt32_=el(_doc,"td");
Text txt1_=tx(_doc,"{r}");
ad(elt32_,txt1_);
ad(elt30_,elt32_);
Element elt33_=el(_doc,"td");
Text txt2_=tx(_doc,"{getFail(([c]))}");
ad(elt33_,txt2_);
ad(elt30_,elt33_);
Element elt34_=el(_doc,"td");
Text txt3_=tx(_doc,"{getRate(([c]))}");
ad(elt34_,txt3_);
ad(elt30_,elt34_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt17_,elt28_);
ad(elt15_,elt17_);
ad(elt14_,elt15_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","!randomStatis()"));
at(elt35_,attrs21_);
Element elt36_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_effstatis,var_statis_rank"));
at(elt36_,attrs22_);
ad(elt35_,elt36_);
Element elt37_=el(_doc,"table");
Element elt38_=el(_doc,"thead");
Element elt39_=el(_doc,"tr");
Element elt40_=el(_doc,"th");
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","msg_effstatis,statistic"));
at(elt41_,attrs23_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
Element elt42_=el(_doc,"th");
Element elt43_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_effstatis,boost"));
at(elt43_,attrs24_);
ad(elt42_,elt43_);
ad(elt39_,elt42_);
Element elt44_=el(_doc,"th");
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_effstatis,fail"));
at(elt45_,attrs25_);
ad(elt44_,elt45_);
ad(elt39_,elt44_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
Element elt46_=el(_doc,"tbody");
Element elt47_=el(_doc,"c:for");
CustList<Attr> attrs26_=al(5);
attrs26_.add(at("key","c"));
attrs26_.add(at("map","statisVarRank"));
attrs26_.add(at("value","r"));
attrs26_.add(at("keyClassName","java.lang.String"));
attrs26_.add(at("varClassName","java.lang.Byte"));
at(elt47_,attrs26_);
Element elt48_=el(_doc,"tr");
Element elt49_=el(_doc,"td");
Text txt4_=tx(_doc,"{c}");
ad(elt49_,txt4_);
ad(elt48_,elt49_);
Element elt50_=el(_doc,"td");
Text txt5_=tx(_doc,"{r}");
ad(elt50_,txt5_);
ad(elt48_,elt50_);
Element elt51_=el(_doc,"td");
Text txt6_=tx(_doc,"{getFail(([c]))}");
ad(elt51_,txt6_);
ad(elt48_,elt51_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
ad(elt37_,elt46_);
ad(elt35_,elt37_);
ad(elt14_,elt35_);
Element elt52_=el(_doc,"br");
ad(elt14_,elt52_);
Element elt53_=el(_doc,"c:if");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("condition","!mapVarsStatistics.isEmpty()"));
at(elt53_,attrs27_);
Element elt54_=el(_doc,"ul");
Element elt55_=el(_doc,"c:for");
CustList<Attr> attrs28_=al(5);
attrs28_.add(at("key","k"));
attrs28_.add(at("map","mapVarsStatistics"));
attrs28_.add(at("value","v"));
attrs28_.add(at("keyClassName","java.lang.String"));
attrs28_.add(at("varClassName","java.lang.String"));
at(elt55_,attrs28_);
Element elt56_=el(_doc,"li");
Text txt7_=tx(_doc,"{k} :");
ad(elt56_,txt7_);
Element elt57_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(2);
attrs29_.add(at("quoted",""));
attrs29_.add(at("value","msg_effstatis,formula"));
at(elt57_,attrs29_);
Element elt58_=el(_doc,"param");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","v"));
at(elt58_,attrs30_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt53_,elt54_);
ad(elt14_,elt53_);
ad(elt0_,elt14_);
Element elt59_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","!swapBoostStatis.isEmpty()"));
at(elt59_,attrs31_);
Element elt60_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_effstatis,swap_boost"));
at(elt60_,attrs32_);
ad(elt59_,elt60_);
Element elt61_=el(_doc,"table");
Element elt62_=el(_doc,"thead");
Element elt63_=el(_doc,"tr");
Element elt64_=el(_doc,"th");
Element elt65_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_effstatis,statistic"));
at(elt65_,attrs33_);
ad(elt64_,elt65_);
ad(elt63_,elt64_);
Element elt66_=el(_doc,"th");
Element elt67_=el(_doc,"c:message");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("value","msg_effstatis,fail"));
at(elt67_,attrs34_);
ad(elt66_,elt67_);
ad(elt63_,elt66_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
Element elt68_=el(_doc,"tbody");
Element elt69_=el(_doc,"c:for");
CustList<Attr> attrs35_=al(3);
attrs35_.add(at("list","swapBoostStatis"));
attrs35_.add(at("var","c"));
attrs35_.add(at("className","java.lang.String"));
at(elt69_,attrs35_);
Element elt70_=el(_doc,"tr");
Element elt71_=el(_doc,"td");
Text txt8_=tx(_doc,"{c}");
ad(elt71_,txt8_);
ad(elt70_,elt71_);
Element elt72_=el(_doc,"td");
Text txt9_=tx(_doc,"{getSwapFail(([c]))}");
ad(elt72_,txt9_);
ad(elt70_,elt72_);
ad(elt69_,elt70_);
ad(elt68_,elt69_);
ad(elt61_,elt68_);
ad(elt59_,elt61_);
Element elt73_=el(_doc,"br");
ad(elt59_,elt73_);
Element elt74_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","!mapVarsStatistics.isEmpty()"));
at(elt74_,attrs36_);
Element elt75_=el(_doc,"ul");
Element elt76_=el(_doc,"c:for");
CustList<Attr> attrs37_=al(5);
attrs37_.add(at("key","k"));
attrs37_.add(at("map","mapVarsStatistics"));
attrs37_.add(at("value","v"));
attrs37_.add(at("keyClassName","java.lang.String"));
attrs37_.add(at("varClassName","java.lang.String"));
at(elt76_,attrs37_);
Element elt77_=el(_doc,"li");
Text txt10_=tx(_doc,"{k} :");
ad(elt77_,txt10_);
Element elt78_=el(_doc,"c:message");
CustList<Attr> attrs38_=al(2);
attrs38_.add(at("quoted",""));
attrs38_.add(at("value","msg_effstatis,formula"));
at(elt78_,attrs38_);
Element elt79_=el(_doc,"param");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","v"));
at(elt79_,attrs39_);
ad(elt78_,elt79_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt74_,elt75_);
ad(elt59_,elt74_);
ad(elt0_,elt59_);
Element elt80_=el(_doc,"c:if");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("condition","!cancelLowStat.isEmpty()"));
at(elt80_,attrs40_);
Element elt81_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg_effstatis,cancel_low_stat"));
at(elt81_,attrs41_);
Element elt82_=el(_doc,"param");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","defaultBoost"));
at(elt82_,attrs42_);
ad(elt81_,elt82_);
ad(elt80_,elt81_);
Element elt83_=el(_doc,"ul");
Element elt84_=el(_doc,"c:for");
CustList<Attr> attrs43_=al(3);
attrs43_.add(at("list","cancelLowStat"));
attrs43_.add(at("var","s"));
attrs43_.add(at("className","java.lang.String"));
at(elt84_,attrs43_);
Element elt85_=el(_doc,"li");
Text txt11_=tx(_doc,"{s}");
ad(elt85_,txt11_);
ad(elt84_,elt85_);
ad(elt83_,elt84_);
ad(elt80_,elt83_);
Element elt86_=el(_doc,"br");
ad(elt80_,elt86_);
ad(elt0_,elt80_);
Element elt87_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","!cancelChgtStat.isEmpty()"));
at(elt87_,attrs44_);
Element elt88_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("value","msg_effstatis,cancel_chgt_stat"));
at(elt88_,attrs45_);
Element elt89_=el(_doc,"param");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("value","defaultBoost"));
at(elt89_,attrs46_);
ad(elt88_,elt89_);
ad(elt87_,elt88_);
Element elt90_=el(_doc,"ul");
Element elt91_=el(_doc,"c:for");
CustList<Attr> attrs47_=al(3);
attrs47_.add(at("list","cancelChgtStat"));
attrs47_.add(at("var","s"));
attrs47_.add(at("className","java.lang.String"));
at(elt91_,attrs47_);
Element elt92_=el(_doc,"li");
Text txt12_=tx(_doc,"{s}");
ad(elt92_,txt12_);
ad(elt91_,elt92_);
ad(elt90_,elt91_);
ad(elt87_,elt90_);
Element elt93_=el(_doc,"br");
ad(elt87_,elt93_);
ad(elt0_,elt87_);
Element elt94_=el(_doc,"c:if");
CustList<Attr> attrs48_=al(1);
attrs48_.add(at("condition","!copyBoost.isEmpty()"));
at(elt94_,attrs48_);
Element elt95_=el(_doc,"c:message");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("value","msg_effstatis,copy_boost"));
at(elt95_,attrs49_);
Element elt96_=el(_doc,"param");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("value","defaultBoost"));
at(elt96_,attrs50_);
ad(elt95_,elt96_);
ad(elt94_,elt95_);
Element elt97_=el(_doc,"ul");
Element elt98_=el(_doc,"c:for");
CustList<Attr> attrs51_=al(3);
attrs51_.add(at("list","copyBoost"));
attrs51_.add(at("var","s"));
attrs51_.add(at("className","java.lang.String"));
at(elt98_,attrs51_);
Element elt99_=el(_doc,"li");
Text txt13_=tx(_doc,"{s}");
ad(elt99_,txt13_);
ad(elt98_,elt99_);
ad(elt97_,elt98_);
ad(elt94_,elt97_);
Element elt100_=el(_doc,"br");
ad(elt94_,elt100_);
ad(elt0_,elt94_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
