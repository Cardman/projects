package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataMovesEffectsEffstatus{
private PageDataMovesEffectsEffstatus(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","eff_status"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/moves.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_effstatus,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:import");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("page","{effectBean}"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:package");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("name","aiki.beans.moves.effects"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:class");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("name","EffectBean"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:field");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("prepare","$intern.index=index"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:field");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("prepare","$intern.move=move"));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!lawStatus.isEmpty()"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_effstatus,law_status"));
at(elt8_,attrs7_);
ad(elt7_,elt8_);
Element elt9_=el(_doc,"table");
Element elt10_=el(_doc,"thead");
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"th");
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_effstatus,status"));
at(elt13_,attrs8_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
Element elt14_=el(_doc,"th");
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_effstatus,fail"));
at(elt15_,attrs9_);
ad(elt14_,elt15_);
ad(elt11_,elt14_);
Element elt16_=el(_doc,"th");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_effstatus,rate_event"));
at(elt17_,attrs10_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
Element elt18_=el(_doc,"tbody");
Element elt19_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(5);
attrs11_.add(at("key","c"));
attrs11_.add(at("map","lawStatus"));
attrs11_.add(at("value","r"));
attrs11_.add(at("keyClassName","java.lang.Object"));
attrs11_.add(at("varClassName","r"));
at(elt19_,attrs11_);
Element elt20_=el(_doc,"tr");
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("condition","isStatus(([c]))"));
at(elt21_,attrs12_);
Element elt22_=el(_doc,"td");
Element elt23_=el(_doc,"a");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("c:command","$clickLink({index},{([c])})"));
attrs13_.add(at("href",""));
at(elt23_,attrs13_);
Text txt0_=tx(_doc,"{getTrLink(([c]))}");
ad(elt23_,txt0_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","!isStatus(([c]))"));
at(elt24_,attrs14_);
Element elt25_=el(_doc,"td");
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_effstatus,other_status"));
at(elt26_,attrs15_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt20_,elt24_);
Element elt27_=el(_doc,"td");
Text txt1_=tx(_doc,"{getFail(([c]))}");
ad(elt27_,txt1_);
ad(elt20_,elt27_);
Element elt28_=el(_doc,"td");
Text txt2_=tx(_doc,"{r}");
ad(elt28_,txt2_);
ad(elt20_,elt28_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt9_,elt18_);
ad(elt7_,elt9_);
Element elt29_=el(_doc,"br");
ad(elt7_,elt29_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","!mapVarsStatus.isEmpty()"));
at(elt30_,attrs16_);
Element elt31_=el(_doc,"ul");
Element elt32_=el(_doc,"c:for");
CustList<Attr> attrs17_=al(5);
attrs17_.add(at("key","k"));
attrs17_.add(at("map","mapVarsStatus"));
attrs17_.add(at("value","v"));
attrs17_.add(at("keyClassName","java.lang.String"));
attrs17_.add(at("varClassName","java.lang.String"));
at(elt32_,attrs17_);
Element elt33_=el(_doc,"li");
Text txt3_=tx(_doc,"{k} :");
ad(elt33_,txt3_);
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(2);
attrs18_.add(at("quoted",""));
attrs18_.add(at("value","msg_effstatus,formula"));
at(elt34_,attrs18_);
Element elt35_=el(_doc,"param");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","v"));
at(elt35_,attrs19_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt7_,elt30_);
Element elt36_=el(_doc,"br");
ad(elt7_,elt36_);
ad(elt0_,elt7_);
Element elt37_=el(_doc,"c:if");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("condition","!deletedStatus.isEmpty()"));
at(elt37_,attrs20_);
Element elt38_=el(_doc,"c:message");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","msg_effstatus,deleted_status"));
at(elt38_,attrs21_);
ad(elt37_,elt38_);
Element elt39_=el(_doc,"ul");
Element elt40_=el(_doc,"c:for");
CustList<Attr> attrs22_=al(2);
attrs22_.add(at("list","deletedStatus"));
attrs22_.add(at("var","s"));
at(elt40_,attrs22_);
Element elt41_=el(_doc,"li");
Element elt42_=el(_doc,"a");
CustList<Attr> attrs23_=al(2);
attrs23_.add(at("c:command","$clickLinkDeleted({index},{([s])})"));
attrs23_.add(at("href",""));
at(elt42_,attrs23_);
Text txt4_=tx(_doc,"{getTrLinkDeleted(([s]))}");
ad(elt42_,txt4_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt37_,elt39_);
Element elt43_=el(_doc,"br");
ad(elt37_,elt43_);
ad(elt0_,elt37_);
Element elt44_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","koUserHealSubst"));
at(elt44_,attrs24_);
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_effstatus,ko_user"));
at(elt45_,attrs25_);
ad(elt44_,elt45_);
ad(elt0_,elt44_);
Element elt46_=el(_doc,"c:if");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("condition","statusFromUser"));
at(elt46_,attrs26_);
Element elt47_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_effstatus,forward"));
at(elt47_,attrs27_);
ad(elt46_,elt47_);
ad(elt0_,elt46_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
