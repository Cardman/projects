package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataMovesEffectsEffteamwhilesendingfoe{
private PageDataMovesEffectsEffteamwhilesendingfoe(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","eff_teamwhilesendingfoe"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/moves.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_effteamwhilesendingfoe,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:import");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("page","{effectBean}"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:package");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("name","aiki.beans.moves.effects"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:class");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("name","EffectBean"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:field");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("prepare","$intern.index=index"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:field");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("prepare","$intern.move=move"));
at(elt6_,attrs5_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!damageRateAgainstFoe.isEmpty()"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_effteamwhilesendingfoe,damage_rate_against_foe"));
at(elt8_,attrs7_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","damageRateAgainstFoe"));
at(elt9_,attrs8_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
Element elt10_=el(_doc,"ul");
Element elt11_=el(_doc,"c:for");
CustList<Attr> attrs9_=al(5);
attrs9_.add(at("key","k"));
attrs9_.add(at("map","mapVarsDamageSentFoe"));
attrs9_.add(at("value","v"));
attrs9_.add(at("keyClassName","java.lang.String"));
attrs9_.add(at("varClassName","java.lang.String"));
at(elt11_,attrs9_);
Element elt12_=el(_doc,"li");
Text txt0_=tx(_doc,"{k} :");
ad(elt12_,txt0_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(2);
attrs10_.add(at("quoted",""));
attrs10_.add(at("value","msg_effteamwhilesendingfoe,formula"));
at(elt13_,attrs10_);
Element elt14_=el(_doc,"param");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","v"));
at(elt14_,attrs11_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt7_,elt10_);
Element elt15_=el(_doc,"br");
ad(elt7_,elt15_);
ad(elt0_,elt7_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("condition","!statistics.isEmpty()"));
at(elt16_,attrs12_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","msg_effteamwhilesendingfoe,statistics"));
at(elt17_,attrs13_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"table");
Element elt19_=el(_doc,"thead");
Element elt20_=el(_doc,"tr");
Element elt21_=el(_doc,"th");
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_effteamwhilesendingfoe,statistic"));
at(elt22_,attrs14_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
Element elt23_=el(_doc,"th");
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_effteamwhilesendingfoe,boost"));
at(elt24_,attrs15_);
ad(elt23_,elt24_);
ad(elt20_,elt23_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
Element elt25_=el(_doc,"tbody");
Element elt26_=el(_doc,"c:for");
CustList<Attr> attrs16_=al(5);
attrs16_.add(at("key","s"));
attrs16_.add(at("map","statistics"));
attrs16_.add(at("value","b"));
attrs16_.add(at("keyClassName","java.lang.Object"));
attrs16_.add(at("varClassName","java.lang.Byte"));
at(elt26_,attrs16_);
Element elt27_=el(_doc,"tr");
Element elt28_=el(_doc,"td");
Text txt1_=tx(_doc,"{getTranslatedStatistic(([s]))}");
ad(elt28_,txt1_);
ad(elt27_,elt28_);
Element elt29_=el(_doc,"td");
Text txt2_=tx(_doc,"{b}");
ad(elt29_,txt2_);
ad(elt27_,elt29_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt18_,elt25_);
ad(elt16_,elt18_);
Element elt30_=el(_doc,"br");
ad(elt16_,elt30_);
ad(elt0_,elt16_);
Element elt31_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","!statusByNbUses.isEmpty()"));
at(elt31_,attrs17_);
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_effteamwhilesendingfoe,status_if_nb"));
at(elt32_,attrs18_);
ad(elt31_,elt32_);
Element elt33_=el(_doc,"table");
Element elt34_=el(_doc,"thead");
Element elt35_=el(_doc,"tr");
Element elt36_=el(_doc,"th");
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_effteamwhilesendingfoe,nb_uses"));
at(elt37_,attrs19_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
Element elt38_=el(_doc,"th");
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_effteamwhilesendingfoe,status"));
at(elt39_,attrs20_);
ad(elt38_,elt39_);
ad(elt35_,elt38_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
Element elt40_=el(_doc,"tbody");
Element elt41_=el(_doc,"c:for");
CustList<Attr> attrs21_=al(5);
attrs21_.add(at("key","s"));
attrs21_.add(at("map","statusByNbUses"));
attrs21_.add(at("value","b"));
attrs21_.add(at("keyClassName","java.lang.Short"));
attrs21_.add(at("varClassName","java.lang.Object"));
at(elt41_,attrs21_);
Element elt42_=el(_doc,"tr");
Element elt43_=el(_doc,"td");
Text txt3_=tx(_doc,"{s}");
ad(elt43_,txt3_);
ad(elt42_,elt43_);
Element elt44_=el(_doc,"td");
Element elt45_=el(_doc,"a");
CustList<Attr> attrs22_=al(2);
attrs22_.add(at("c:command","$clickStatus({index},{([s])})"));
attrs22_.add(at("href",""));
at(elt45_,attrs22_);
Text txt4_=tx(_doc,"{getTranslatedStatus(([s]))}");
ad(elt45_,txt4_);
ad(elt44_,elt45_);
ad(elt42_,elt44_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt33_,elt40_);
ad(elt31_,elt33_);
Element elt46_=el(_doc,"br");
ad(elt31_,elt46_);
ad(elt0_,elt31_);
Element elt47_=el(_doc,"c:if");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("condition","!reasonsSending.isEmpty()"));
at(elt47_,attrs23_);
Element elt48_=el(_doc,"p");
Element elt49_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_effteamwhilesendingfoe,reasons_sending"));
at(elt49_,attrs24_);
ad(elt48_,elt49_);
Element elt50_=el(_doc,"ul");
Element elt51_=el(_doc,"c:for");
CustList<Attr> attrs25_=al(3);
attrs25_.add(at("list","reasonsSending"));
attrs25_.add(at("var","r"));
attrs25_.add(at("className","java.lang.String"));
at(elt51_,attrs25_);
Element elt52_=el(_doc,"li");
Text txt5_=tx(_doc,"{r}");
ad(elt52_,txt5_);
ad(elt51_,elt52_);
ad(elt50_,elt51_);
ad(elt48_,elt50_);
Element elt53_=el(_doc,"br");
ad(elt48_,elt53_);
Element elt54_=el(_doc,"ul");
Element elt55_=el(_doc,"c:for");
CustList<Attr> attrs26_=al(5);
attrs26_.add(at("key","c"));
attrs26_.add(at("map","mapVarsFailSending"));
attrs26_.add(at("value","r"));
attrs26_.add(at("keyClassName","java.lang.String"));
attrs26_.add(at("varClassName","java.lang.String"));
at(elt55_,attrs26_);
Element elt56_=el(_doc,"li");
Text txt6_=tx(_doc,"{c} :");
ad(elt56_,txt6_);
Element elt57_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(2);
attrs27_.add(at("quoted",""));
attrs27_.add(at("value","msg_effteamwhilesendingfoe,formula"));
at(elt57_,attrs27_);
Element elt58_=el(_doc,"param");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","r"));
at(elt58_,attrs28_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt48_,elt54_);
ad(elt47_,elt48_);
ad(elt0_,elt47_);
Element elt59_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","!deletedByFoeTypes.isEmpty()"));
at(elt59_,attrs29_);
Element elt60_=el(_doc,"c:message");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","msg_effteamwhilesendingfoe,delete_status_if_types"));
at(elt60_,attrs30_);
ad(elt59_,elt60_);
Element elt61_=el(_doc,"ul");
Element elt62_=el(_doc,"c:for");
CustList<Attr> attrs31_=al(2);
attrs31_.add(at("list","deletedByFoeTypes"));
attrs31_.add(at("var","t"));
at(elt62_,attrs31_);
Element elt63_=el(_doc,"li");
Text txt7_=tx(_doc,"{getTranslatedType(([t]))}");
ad(elt63_,txt7_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt59_,elt61_);
Element elt64_=el(_doc,"br");
ad(elt59_,elt64_);
ad(elt0_,elt59_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
