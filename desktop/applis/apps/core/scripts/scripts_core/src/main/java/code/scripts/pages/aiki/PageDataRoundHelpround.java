package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataRoundHelpround{
private PageDataRoundHelpround(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","help_fight"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"title");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,title"));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc,"link");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("href","web/css/pokedex.css"));
attrs2_.add(at("rel","stylesheet"));
attrs2_.add(at("type","text/css"));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc,"body");
build0(elt5_,_doc);
build1(elt5_,_doc);
build2(elt5_,_doc);
build3(elt5_,_doc);
build4(elt5_,_doc);
build5(elt5_,_doc);
build6(elt5_,_doc);
build7(elt5_,_doc);
build8(elt5_,_doc);
build9(elt5_,_doc);
build10(elt5_,_doc);
build11(elt5_,_doc);
build12(elt5_,_doc);
build13(elt5_,_doc);
build14(elt5_,_doc);
build15(elt5_,_doc);
build16(elt5_,_doc);
build17(elt5_,_doc);
build18(elt5_,_doc);
build19(elt5_,_doc);
build20(elt5_,_doc);
build21(elt5_,_doc);
build22(elt5_,_doc);
ad(elt0_,elt5_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("c:command","web/html/index.html"));
attrs0_.add(at("href",""));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,index"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("name","begin"));
at(elt1_,attrs0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,goal_title"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,goal"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,goal_uses"));
at(elt4_,attrs3_);
ad(_body,elt4_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,goal_uses_1"));
at(elt5_,attrs4_);
ad(_body,elt5_);
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,goal_uses_2"));
at(elt6_,attrs5_);
ad(_body,elt6_);
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,goal_uses_3"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"param");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","defaultBoostValue"));
at(elt8_,attrs7_);
ad(elt7_,elt8_);
ad(_body,elt7_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,rules"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,rules_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,rules_2"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","!privatingMoves.isEmpty()"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,rules_3"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"ul");
Element elt7_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(2);
attrs5_.add(at("list","privatingMoves"));
attrs5_.add(at("var","a"));
at(elt7_,attrs5_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"a");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("c:command","$clickPrivatingMoves({([a])})"));
at(elt9_,attrs6_);
Text txt0_=tx(_doc,"{getTrPrivatingMoves(([a]))}");
ad(elt9_,txt0_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(_body,elt4_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,rules_4"));
at(elt10_,attrs7_);
ad(_body,elt10_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,rules_5"));
at(elt11_,attrs8_);
ad(_body,elt11_);
Element elt12_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!movesHealingSubstitute.isEmpty()"));
at(elt12_,attrs9_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_helpround,rules_6"));
at(elt13_,attrs10_);
ad(elt12_,elt13_);
Element elt14_=el(_doc,"ul");
Element elt15_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(2);
attrs11_.add(at("list","movesHealingSubstitute"));
attrs11_.add(at("var","a"));
at(elt15_,attrs11_);
Element elt16_=el(_doc,"li");
Element elt17_=el(_doc,"a");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("c:command","$clickMovesHealingSubstitute({([a])})"));
at(elt17_,attrs12_);
Text txt1_=tx(_doc,"{getTrMovesHealingSubstitute(([a]))}");
ad(elt17_,txt1_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt12_,elt14_);
ad(_body,elt12_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","msg_helpround,rules_7"));
at(elt18_,attrs13_);
ad(_body,elt18_);
Element elt19_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,rules_8"));
at(elt19_,attrs14_);
ad(_body,elt19_);
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,rules_8_1"));
at(elt20_,attrs15_);
ad(_body,elt20_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_helpround,rules_9"));
at(elt21_,attrs16_);
ad(_body,elt21_);
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,rules_10"));
at(elt22_,attrs17_);
Element elt23_=el(_doc,"param");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","getTrDefaultMove()"));
at(elt23_,attrs18_);
ad(elt22_,elt23_);
ad(_body,elt22_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,begin"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,begin_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,begin_0_1"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","!abilitiesSentBeginWeather.isEmpty()"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,begin_1"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"ul");
Element elt7_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(2);
attrs5_.add(at("list","abilitiesSentBeginWeather"));
attrs5_.add(at("var","a"));
at(elt7_,attrs5_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"a");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("c:command","$clickAbilitiesSentBegin({([a])})"));
at(elt9_,attrs6_);
Text txt0_=tx(_doc,"{getTrAbilitiesSentBegin(([a]))}");
ad(elt9_,txt0_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(_body,elt4_);
Element elt10_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","!itemsSentBeginWeather.isEmpty()"));
at(elt10_,attrs7_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,begin_1_1"));
at(elt11_,attrs8_);
ad(elt10_,elt11_);
Element elt12_=el(_doc,"ul");
Element elt13_=el(_doc,"c:for");
CustList<Attr> attrs9_=al(2);
attrs9_.add(at("list","itemsSentBeginWeather"));
attrs9_.add(at("var","a"));
at(elt13_,attrs9_);
Element elt14_=el(_doc,"li");
Element elt15_=el(_doc,"a");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("c:command","$clickItemsSentBegin({([a])})"));
at(elt15_,attrs10_);
Text txt1_=tx(_doc,"{getTrItemsSentBegin(([a]))}");
ad(elt15_,txt1_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt10_,elt12_);
ad(_body,elt10_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","!itemsSentBeginOther.isEmpty()"));
at(elt16_,attrs11_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,begin_1_2"));
at(elt17_,attrs12_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"ul");
Element elt19_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("list","itemsSentBeginOther"));
attrs13_.add(at("var","a"));
at(elt19_,attrs13_);
Element elt20_=el(_doc,"li");
Element elt21_=el(_doc,"a");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("c:command","$clickItemsSentBeginOth({([a])})"));
at(elt21_,attrs14_);
Text txt2_=tx(_doc,"{getTrItemsSentBeginOth(([a]))}");
ad(elt21_,txt2_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt16_,elt18_);
ad(_body,elt16_);
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,begin_1_3"));
at(elt22_,attrs15_);
ad(_body,elt22_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","!abilitiesSentBeginWeather.isEmpty()"));
at(elt23_,attrs16_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,begin_2"));
at(elt24_,attrs17_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,"ul");
Element elt26_=el(_doc,"c:for");
CustList<Attr> attrs18_=al(2);
attrs18_.add(at("list","abilitiesSentBeginWeather"));
attrs18_.add(at("var","a"));
at(elt26_,attrs18_);
Element elt27_=el(_doc,"li");
Element elt28_=el(_doc,"a");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("c:command","$clickAbilitiesSentBegin({([a])})"));
at(elt28_,attrs19_);
Text txt3_=tx(_doc,"{getTrAbilitiesSentBegin(([a]))}");
ad(elt28_,txt3_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt23_,elt25_);
ad(_body,elt23_);
Element elt29_=el(_doc,"c:if");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("condition","!itemsSentBeginWeather.isEmpty()"));
at(elt29_,attrs20_);
Element elt30_=el(_doc,"c:message");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","msg_helpround,begin_2_1"));
at(elt30_,attrs21_);
ad(elt29_,elt30_);
Element elt31_=el(_doc,"ul");
Element elt32_=el(_doc,"c:for");
CustList<Attr> attrs22_=al(2);
attrs22_.add(at("list","itemsSentBeginWeather"));
attrs22_.add(at("var","a"));
at(elt32_,attrs22_);
Element elt33_=el(_doc,"li");
Element elt34_=el(_doc,"a");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("c:command","$clickItemsSentBegin({([a])})"));
at(elt34_,attrs23_);
Text txt4_=tx(_doc,"{getTrItemsSentBegin(([a]))}");
ad(elt34_,txt4_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt29_,elt31_);
ad(_body,elt29_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","!itemsSentBeginOther.isEmpty()"));
at(elt35_,attrs24_);
Element elt36_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_helpround,begin_2_2"));
at(elt36_,attrs25_);
ad(elt35_,elt36_);
Element elt37_=el(_doc,"ul");
Element elt38_=el(_doc,"c:for");
CustList<Attr> attrs26_=al(2);
attrs26_.add(at("list","itemsSentBeginOther"));
attrs26_.add(at("var","a"));
at(elt38_,attrs26_);
Element elt39_=el(_doc,"li");
Element elt40_=el(_doc,"a");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("c:command","$clickItemsSentBeginOth({([a])})"));
at(elt40_,attrs27_);
Text txt5_=tx(_doc,"{getTrItemsSentBeginOth(([a]))}");
ad(elt40_,txt5_);
ad(elt39_,elt40_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
ad(elt35_,elt37_);
ad(_body,elt35_);
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","msg_helpround,begin_2_3"));
at(elt41_,attrs28_);
ad(_body,elt41_);
Element elt42_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","msg_helpround,begin_2_4"));
at(elt42_,attrs29_);
ad(_body,elt42_);
Element elt43_=el(_doc,"c:if");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("condition","!changingTypesAbilities.isEmpty()"));
at(elt43_,attrs30_);
Element elt44_=el(_doc,"c:message");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("value","msg_helpround,begin_3"));
at(elt44_,attrs31_);
ad(elt43_,elt44_);
Element elt45_=el(_doc,"ul");
Element elt46_=el(_doc,"c:for");
CustList<Attr> attrs32_=al(2);
attrs32_.add(at("list","changingTypesAbilities"));
attrs32_.add(at("var","a"));
at(elt46_,attrs32_);
Element elt47_=el(_doc,"li");
Element elt48_=el(_doc,"a");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("c:command","$clickChangingTypesAbilities({([a])})"));
at(elt48_,attrs33_);
Text txt6_=tx(_doc,"{getTrChangingTypesAbilities(([a]))}");
ad(elt48_,txt6_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
ad(elt45_,elt46_);
ad(elt43_,elt45_);
ad(_body,elt43_);
Element elt49_=el(_doc,"c:if");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("condition","!copyAbilities.isEmpty()"));
at(elt49_,attrs34_);
Element elt50_=el(_doc,"c:message");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("value","msg_helpround,begin_4"));
at(elt50_,attrs35_);
ad(elt49_,elt50_);
Element elt51_=el(_doc,"ul");
Element elt52_=el(_doc,"c:for");
CustList<Attr> attrs36_=al(2);
attrs36_.add(at("list","copyAbilities"));
attrs36_.add(at("var","a"));
at(elt52_,attrs36_);
Element elt53_=el(_doc,"li");
Element elt54_=el(_doc,"a");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("c:command","$clickCopyAbilities({([a])})"));
at(elt54_,attrs37_);
Text txt7_=tx(_doc,"{getTrCopyAbilities(([a]))}");
ad(elt54_,txt7_);
ad(elt53_,elt54_);
ad(elt52_,elt53_);
ad(elt51_,elt52_);
ad(elt49_,elt51_);
ad(_body,elt49_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("condition","!abilitiesSentStatis.isEmpty()"));
at(elt55_,attrs38_);
Element elt56_=el(_doc,"c:message");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","msg_helpround,begin_4"));
at(elt56_,attrs39_);
ad(elt55_,elt56_);
Element elt57_=el(_doc,"ul");
Element elt58_=el(_doc,"c:for");
CustList<Attr> attrs40_=al(2);
attrs40_.add(at("list","abilitiesSentStatis"));
attrs40_.add(at("var","a"));
at(elt58_,attrs40_);
Element elt59_=el(_doc,"li");
Element elt60_=el(_doc,"a");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("c:command","$clickAbilitiesSentStatis({([a])})"));
at(elt60_,attrs41_);
Text txt8_=tx(_doc,"{getTrAbilitiesSentStatis(([a]))}");
ad(elt60_,txt8_);
ad(elt59_,elt60_);
ad(elt58_,elt59_);
ad(elt57_,elt58_);
ad(elt55_,elt57_);
ad(_body,elt55_);
Element elt61_=el(_doc,"c:if");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("condition","!changingTypesAbilities.isEmpty()"));
at(elt61_,attrs42_);
Element elt62_=el(_doc,"c:message");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("value","msg_helpround,begin_5"));
at(elt62_,attrs43_);
ad(elt61_,elt62_);
Element elt63_=el(_doc,"ul");
Element elt64_=el(_doc,"c:for");
CustList<Attr> attrs44_=al(2);
attrs44_.add(at("list","changingTypesAbilities"));
attrs44_.add(at("var","a"));
at(elt64_,attrs44_);
Element elt65_=el(_doc,"li");
Element elt66_=el(_doc,"a");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("c:command","$clickChangingTypesAbilities({([a])})"));
at(elt66_,attrs45_);
Text txt9_=tx(_doc,"{getTrChangingTypesAbilities(([a]))}");
ad(elt66_,txt9_);
ad(elt65_,elt66_);
ad(elt64_,elt65_);
ad(elt63_,elt64_);
ad(elt61_,elt63_);
ad(_body,elt61_);
Element elt67_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","!copyAbilities.isEmpty()"));
at(elt67_,attrs46_);
Element elt68_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,begin_6"));
at(elt68_,attrs47_);
ad(elt67_,elt68_);
Element elt69_=el(_doc,"ul");
Element elt70_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","copyAbilities"));
attrs48_.add(at("var","a"));
at(elt70_,attrs48_);
Element elt71_=el(_doc,"li");
Element elt72_=el(_doc,"a");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("c:command","$clickCopyAbilities({([a])})"));
at(elt72_,attrs49_);
Text txt10_=tx(_doc,"{getTrCopyAbilities(([a]))}");
ad(elt72_,txt10_);
ad(elt71_,elt72_);
ad(elt70_,elt71_);
ad(elt69_,elt70_);
ad(elt67_,elt69_);
ad(_body,elt67_);
Element elt73_=el(_doc,"c:if");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("condition","!abilitiesSentStatis.isEmpty()"));
at(elt73_,attrs50_);
Element elt74_=el(_doc,"c:message");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("value","msg_helpround,begin_6"));
at(elt74_,attrs51_);
ad(elt73_,elt74_);
Element elt75_=el(_doc,"ul");
Element elt76_=el(_doc,"c:for");
CustList<Attr> attrs52_=al(2);
attrs52_.add(at("list","abilitiesSentStatis"));
attrs52_.add(at("var","a"));
at(elt76_,attrs52_);
Element elt77_=el(_doc,"li");
Element elt78_=el(_doc,"a");
CustList<Attr> attrs53_=al(1);
attrs53_.add(at("c:command","$clickAbilitiesSentStatis({([a])})"));
at(elt78_,attrs53_);
Text txt11_=tx(_doc,"{getTrAbilitiesSentStatis(([a]))}");
ad(elt78_,txt11_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt73_,elt75_);
ad(_body,elt73_);
}
static void build4(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,intro_round"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!substitutingMoves.isEmpty()"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,intro_round_next_1"));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("list","substitutingMoves"));
attrs4_.add(at("var","a"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickSubstitutingMoves({([a])})"));
at(elt8_,attrs5_);
Text txt0_=tx(_doc,"{getTrSubstitutingMoves(([a]))}");
ad(elt8_,txt0_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt3_,elt5_);
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,intro_round_next_2"));
at(elt9_,attrs6_);
ad(elt3_,elt9_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,intro_round_next_3"));
at(elt10_,attrs7_);
ad(elt3_,elt10_);
ad(_body,elt3_);
Element elt11_=el(_doc,"h2");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,first_events"));
at(elt12_,attrs8_);
ad(elt11_,elt12_);
ad(_body,elt11_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_helpround,first_events_0"));
at(elt13_,attrs9_);
ad(_body,elt13_);
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_helpround,first_events_1"));
at(elt14_,attrs10_);
ad(_body,elt14_);
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_helpround,first_events_2"));
at(elt15_,attrs11_);
ad(_body,elt15_);
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,first_events_3"));
at(elt16_,attrs12_);
ad(_body,elt16_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","msg_helpround,first_events_4"));
at(elt17_,attrs13_);
ad(_body,elt17_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,first_events_5"));
at(elt18_,attrs14_);
ad(_body,elt18_);
Element elt19_=el(_doc,"h2");
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,events_round"));
at(elt20_,attrs15_);
ad(elt19_,elt20_);
ad(_body,elt19_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_helpround,events_round_1"));
at(elt21_,attrs16_);
ad(_body,elt21_);
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,events_round_2"));
at(elt22_,attrs17_);
ad(_body,elt22_);
Element elt23_=el(_doc,"ol");
Element elt24_=el(_doc,"li");
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_helpround,events_round_3"));
at(elt25_,attrs18_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
Element elt26_=el(_doc,"li");
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_helpround,events_round_4"));
at(elt27_,attrs19_);
ad(elt26_,elt27_);
ad(elt23_,elt26_);
Element elt28_=el(_doc,"li");
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_helpround,events_round_5"));
at(elt29_,attrs20_);
ad(elt28_,elt29_);
ad(elt23_,elt28_);
ad(_body,elt23_);
Element elt30_=el(_doc,"h3");
Text txt1_=tx(_doc,"1.");
ad(elt30_,txt1_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","msg_helpround,events_round_3_0"));
at(elt31_,attrs21_);
ad(elt30_,elt31_);
ad(_body,elt30_);
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,events_round_3_1"));
at(elt32_,attrs22_);
ad(_body,elt32_);
Element elt33_=el(_doc,"h3");
Text txt2_=tx(_doc,"2.");
ad(elt33_,txt2_);
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","msg_helpround,events_round_4_0"));
at(elt34_,attrs23_);
ad(elt33_,elt34_);
ad(_body,elt33_);
Element elt35_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_helpround,events_round_4_1"));
at(elt35_,attrs24_);
ad(_body,elt35_);
Element elt36_=el(_doc,"h3");
Text txt3_=tx(_doc,"3.");
ad(elt36_,txt3_);
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_helpround,events_round_5_0"));
at(elt37_,attrs25_);
ad(elt36_,elt37_);
ad(_body,elt36_);
Element elt38_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg_helpround,events_round_5_1"));
at(elt38_,attrs26_);
ad(_body,elt38_);
Element elt39_=el(_doc,"ol");
Element elt40_=el(_doc,"li");
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_helpround,events_round_5_2"));
at(elt41_,attrs27_);
ad(elt40_,elt41_);
Element elt42_=el(_doc,"c:if");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("condition","!abilitiesPrio.isEmpty()"));
at(elt42_,attrs28_);
Element elt43_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","msg_helpround,events_round_5_3"));
at(elt43_,attrs29_);
ad(elt42_,elt43_);
Element elt44_=el(_doc,"ul");
Element elt45_=el(_doc,"c:for");
CustList<Attr> attrs30_=al(2);
attrs30_.add(at("list","abilitiesPrio"));
attrs30_.add(at("var","a"));
at(elt45_,attrs30_);
Element elt46_=el(_doc,"li");
Element elt47_=el(_doc,"a");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("c:command","$clickAbilitiesPrio({([a])})"));
at(elt47_,attrs31_);
Text txt4_=tx(_doc,"{getTrAbilitiesPrio(([a]))}");
ad(elt47_,txt4_);
ad(elt46_,elt47_);
ad(elt45_,elt46_);
ad(elt44_,elt45_);
ad(elt42_,elt44_);
ad(elt40_,elt42_);
ad(elt39_,elt40_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("condition","!slowAbilities.isEmpty()"));
at(elt48_,attrs32_);
Element elt49_=el(_doc,"li");
Element elt50_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_helpround,events_round_5_4"));
at(elt50_,attrs33_);
ad(elt49_,elt50_);
Element elt51_=el(_doc,"ul");
Element elt52_=el(_doc,"c:for");
CustList<Attr> attrs34_=al(2);
attrs34_.add(at("list","slowAbilities"));
attrs34_.add(at("var","a"));
at(elt52_,attrs34_);
Element elt53_=el(_doc,"li");
Element elt54_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickSlowAbilities({([a])})"));
at(elt54_,attrs35_);
Text txt5_=tx(_doc,"{getTrSlowAbilities(([a]))}");
ad(elt54_,txt5_);
ad(elt53_,elt54_);
ad(elt52_,elt53_);
ad(elt51_,elt52_);
ad(elt49_,elt51_);
ad(elt48_,elt49_);
ad(elt39_,elt48_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","!slowItems.isEmpty()"));
at(elt55_,attrs36_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_helpround,events_round_5_5"));
at(elt57_,attrs37_);
ad(elt56_,elt57_);
Element elt58_=el(_doc,"ul");
Element elt59_=el(_doc,"c:for");
CustList<Attr> attrs38_=al(2);
attrs38_.add(at("list","slowItems"));
attrs38_.add(at("var","a"));
at(elt59_,attrs38_);
Element elt60_=el(_doc,"li");
Element elt61_=el(_doc,"a");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("c:command","$clickSlowItems({([a])})"));
at(elt61_,attrs39_);
Text txt6_=tx(_doc,"{getTrSlowItems(([a]))}");
ad(elt61_,txt6_);
ad(elt60_,elt61_);
ad(elt59_,elt60_);
ad(elt58_,elt59_);
ad(elt56_,elt58_);
ad(elt55_,elt56_);
ad(elt39_,elt55_);
Element elt62_=el(_doc,"c:if");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("condition","!reverseSpeedMoves.isEmpty()"));
at(elt62_,attrs40_);
Element elt63_=el(_doc,"li");
Element elt64_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg_helpround,events_round_5_6"));
at(elt64_,attrs41_);
ad(elt63_,elt64_);
Element elt65_=el(_doc,"ul");
Element elt66_=el(_doc,"c:for");
CustList<Attr> attrs42_=al(2);
attrs42_.add(at("list","reverseSpeedMoves"));
attrs42_.add(at("var","a"));
at(elt66_,attrs42_);
Element elt67_=el(_doc,"li");
Element elt68_=el(_doc,"a");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("c:command","$clickReverseSpeedMoves({([a])})"));
at(elt68_,attrs43_);
Text txt7_=tx(_doc,"{getTrReverseSpeedMoves(([a]))}");
ad(elt68_,txt7_);
ad(elt67_,elt68_);
ad(elt66_,elt67_);
ad(elt65_,elt66_);
ad(elt63_,elt65_);
ad(elt62_,elt63_);
ad(elt39_,elt62_);
Element elt69_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","reverseSpeedMoves.isEmpty()"));
at(elt69_,attrs44_);
Element elt70_=el(_doc,"li");
Element elt71_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("value","msg_helpround,events_round_5_6_1"));
at(elt71_,attrs45_);
ad(elt70_,elt71_);
ad(elt69_,elt70_);
ad(elt39_,elt69_);
Element elt72_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","!berrySpeed.isEmpty()"));
at(elt72_,attrs46_);
Element elt73_=el(_doc,"li");
Element elt74_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,events_round_5_7"));
at(elt74_,attrs47_);
ad(elt73_,elt74_);
Element elt75_=el(_doc,"ul");
Element elt76_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","berrySpeed"));
attrs48_.add(at("var","a"));
at(elt76_,attrs48_);
Element elt77_=el(_doc,"li");
Element elt78_=el(_doc,"a");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("c:command","$clickBerrySpeed({([a])})"));
at(elt78_,attrs49_);
Text txt8_=tx(_doc,"{getTrBerrySpeed(([a]))}");
ad(elt78_,txt8_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt73_,elt75_);
ad(elt72_,elt73_);
ad(elt39_,elt72_);
Element elt79_=el(_doc,"c:if");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("condition","!itemSpeed.isEmpty()"));
at(elt79_,attrs50_);
Element elt80_=el(_doc,"li");
Element elt81_=el(_doc,"c:message");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("value","msg_helpround,events_round_5_8"));
at(elt81_,attrs51_);
ad(elt80_,elt81_);
Element elt82_=el(_doc,"ul");
Element elt83_=el(_doc,"c:for");
CustList<Attr> attrs52_=al(2);
attrs52_.add(at("list","itemSpeed"));
attrs52_.add(at("var","a"));
at(elt83_,attrs52_);
Element elt84_=el(_doc,"li");
Element elt85_=el(_doc,"a");
CustList<Attr> attrs53_=al(1);
attrs53_.add(at("c:command","$clickItemSpeed({([a])})"));
at(elt85_,attrs53_);
Text txt9_=tx(_doc,"{getTrItemSpeed(([a]))}");
ad(elt85_,txt9_);
ad(elt84_,elt85_);
ad(elt83_,elt84_);
ad(elt82_,elt83_);
ad(elt80_,elt82_);
ad(elt79_,elt80_);
ad(elt39_,elt79_);
ad(_body,elt39_);
Element elt86_=el(_doc,"h2");
Element elt87_=el(_doc,"c:message");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("value","msg_helpround,round_process_heal"));
at(elt87_,attrs54_);
ad(elt86_,elt87_);
ad(_body,elt86_);
Element elt88_=el(_doc,"c:message");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("value","msg_helpround,round_process_heal_1"));
at(elt88_,attrs55_);
ad(_body,elt88_);
Element elt89_=el(_doc,"h2");
Element elt90_=el(_doc,"c:message");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("value","msg_helpround,round_process_switch"));
at(elt90_,attrs56_);
ad(elt89_,elt90_);
ad(_body,elt89_);
Element elt91_=el(_doc,"c:if");
CustList<Attr> attrs57_=al(1);
attrs57_.add(at("condition","!abilitiesSwitch.isEmpty()"));
at(elt91_,attrs57_);
Element elt92_=el(_doc,"c:message");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("value","msg_helpround,round_process_switch_1"));
at(elt92_,attrs58_);
ad(elt91_,elt92_);
Element elt93_=el(_doc,"ul");
Element elt94_=el(_doc,"c:for");
CustList<Attr> attrs59_=al(2);
attrs59_.add(at("list","abilitiesSwitch"));
attrs59_.add(at("var","a"));
at(elt94_,attrs59_);
Element elt95_=el(_doc,"li");
Element elt96_=el(_doc,"a");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("c:command","$clickAbilitiesSwitch({([a])})"));
at(elt96_,attrs60_);
Text txt10_=tx(_doc,"{getTrAbilitiesSwitch(([a]))}");
ad(elt96_,txt10_);
ad(elt95_,elt96_);
ad(elt94_,elt95_);
ad(elt93_,elt94_);
ad(elt91_,elt93_);
ad(_body,elt91_);
Element elt97_=el(_doc,"c:if");
CustList<Attr> attrs61_=al(1);
attrs61_.add(at("condition","!deletedStatusSwitch.isEmpty()"));
at(elt97_,attrs61_);
Element elt98_=el(_doc,"c:message");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("value","msg_helpround,round_process_switch_2"));
at(elt98_,attrs62_);
ad(elt97_,elt98_);
Element elt99_=el(_doc,"ul");
Element elt100_=el(_doc,"c:for");
CustList<Attr> attrs63_=al(2);
attrs63_.add(at("list","deletedStatusSwitch"));
attrs63_.add(at("var","a"));
at(elt100_,attrs63_);
Element elt101_=el(_doc,"li");
Element elt102_=el(_doc,"a");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("c:command","$clickDeletedStatusSwitch({([a])})"));
at(elt102_,attrs64_);
Text txt11_=tx(_doc,"{getTrDeletedStatusSwitch(([a]))}");
ad(elt102_,txt11_);
ad(elt101_,elt102_);
ad(elt100_,elt101_);
ad(elt99_,elt100_);
ad(elt97_,elt99_);
ad(_body,elt97_);
Element elt103_=el(_doc,"h3");
Element elt104_=el(_doc,"c:message");
CustList<Attr> attrs65_=al(1);
attrs65_.add(at("value","msg_helpround,round_process_switch_3"));
at(elt104_,attrs65_);
ad(elt103_,elt104_);
ad(_body,elt103_);
Element elt105_=el(_doc,"c:message");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("value","msg_helpround,round_process_switch_3_0"));
at(elt105_,attrs66_);
ad(_body,elt105_);
Element elt106_=el(_doc,"c:if");
CustList<Attr> attrs67_=al(1);
attrs67_.add(at("condition","!entryHazard.isEmpty()"));
at(elt106_,attrs67_);
Element elt107_=el(_doc,"c:message");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("value","msg_helpround,round_process_switch_3_1"));
at(elt107_,attrs68_);
ad(elt106_,elt107_);
Element elt108_=el(_doc,"ul");
Element elt109_=el(_doc,"c:for");
CustList<Attr> attrs69_=al(2);
attrs69_.add(at("list","entryHazard"));
attrs69_.add(at("var","a"));
at(elt109_,attrs69_);
Element elt110_=el(_doc,"li");
Element elt111_=el(_doc,"a");
CustList<Attr> attrs70_=al(1);
attrs70_.add(at("c:command","$clickEntryHazard({([a])})"));
at(elt111_,attrs70_);
Text txt12_=tx(_doc,"{getTrEntryHazard(([a]))}");
ad(elt111_,txt12_);
ad(elt110_,elt111_);
ad(elt109_,elt110_);
ad(elt108_,elt109_);
ad(elt106_,elt108_);
ad(_body,elt106_);
Element elt112_=el(_doc,"c:message");
CustList<Attr> attrs71_=al(1);
attrs71_.add(at("value","msg_helpround,round_process_switch_3_2"));
at(elt112_,attrs71_);
ad(_body,elt112_);
Element elt113_=el(_doc,"h2");
Element elt114_=el(_doc,"c:message");
CustList<Attr> attrs72_=al(1);
attrs72_.add(at("value","msg_helpround,round_process_move"));
at(elt114_,attrs72_);
ad(elt113_,elt114_);
ad(_body,elt113_);
Element elt115_=el(_doc,"c:if");
CustList<Attr> attrs73_=al(1);
attrs73_.add(at("condition","!beginRoundStatus.isEmpty()"));
at(elt115_,attrs73_);
Element elt116_=el(_doc,"h3");
Element elt117_=el(_doc,"c:message");
CustList<Attr> attrs74_=al(1);
attrs74_.add(at("value","msg_helpround,round_process_move_status"));
at(elt117_,attrs74_);
ad(elt116_,elt117_);
ad(elt115_,elt116_);
Element elt118_=el(_doc,"c:message");
CustList<Attr> attrs75_=al(1);
attrs75_.add(at("value","msg_helpround,round_process_move_1"));
at(elt118_,attrs75_);
ad(elt115_,elt118_);
Element elt119_=el(_doc,"ul");
Element elt120_=el(_doc,"c:for");
CustList<Attr> attrs76_=al(2);
attrs76_.add(at("list","beginRoundStatus"));
attrs76_.add(at("var","a"));
at(elt120_,attrs76_);
Element elt121_=el(_doc,"li");
Element elt122_=el(_doc,"a");
CustList<Attr> attrs77_=al(1);
attrs77_.add(at("c:command","$clickBeginRoundStatus({([a])})"));
at(elt122_,attrs77_);
Text txt13_=tx(_doc,"{getTrBeginRoundStatus(([a]))}");
ad(elt122_,txt13_);
ad(elt121_,elt122_);
ad(elt120_,elt121_);
ad(elt119_,elt120_);
ad(elt115_,elt119_);
Element elt123_=el(_doc,"c:if");
CustList<Attr> attrs78_=al(1);
attrs78_.add(at("condition","!deleteStatusMove.isEmpty()"));
at(elt123_,attrs78_);
Element elt124_=el(_doc,"c:message");
CustList<Attr> attrs79_=al(1);
attrs79_.add(at("value","msg_helpround,round_process_move_2"));
at(elt124_,attrs79_);
ad(elt123_,elt124_);
Element elt125_=el(_doc,"ul");
Element elt126_=el(_doc,"c:for");
CustList<Attr> attrs80_=al(2);
attrs80_.add(at("list","deleteStatusMove"));
attrs80_.add(at("var","a"));
at(elt126_,attrs80_);
Element elt127_=el(_doc,"li");
Element elt128_=el(_doc,"a");
CustList<Attr> attrs81_=al(1);
attrs81_.add(at("c:command","$clickDeleteStatusMove({([a])})"));
at(elt128_,attrs81_);
Text txt14_=tx(_doc,"{getTrDeleteStatusMove(([a]))}");
ad(elt128_,txt14_);
ad(elt127_,elt128_);
ad(elt126_,elt127_);
ad(elt125_,elt126_);
ad(elt123_,elt125_);
ad(elt115_,elt123_);
Element elt129_=el(_doc,"c:message");
CustList<Attr> attrs82_=al(1);
attrs82_.add(at("value","msg_helpround,round_process_move_3"));
at(elt129_,attrs82_);
ad(elt115_,elt129_);
Element elt130_=el(_doc,"c:if");
CustList<Attr> attrs83_=al(1);
attrs83_.add(at("condition","!immuStatusAbility.isEmpty()"));
at(elt130_,attrs83_);
Element elt131_=el(_doc,"c:message");
CustList<Attr> attrs84_=al(1);
attrs84_.add(at("value","msg_helpround,round_process_move_4"));
at(elt131_,attrs84_);
ad(elt130_,elt131_);
Element elt132_=el(_doc,"ul");
Element elt133_=el(_doc,"c:for");
CustList<Attr> attrs85_=al(2);
attrs85_.add(at("list","immuStatusAbility"));
attrs85_.add(at("var","a"));
at(elt133_,attrs85_);
Element elt134_=el(_doc,"li");
Element elt135_=el(_doc,"a");
CustList<Attr> attrs86_=al(1);
attrs86_.add(at("c:command","$clickImmuStatusAbility({([a])})"));
at(elt135_,attrs86_);
Text txt15_=tx(_doc,"{getTrImmuStatusAbility(([a]))}");
ad(elt135_,txt15_);
ad(elt134_,elt135_);
ad(elt133_,elt134_);
ad(elt132_,elt133_);
ad(elt130_,elt132_);
ad(elt115_,elt130_);
Element elt136_=el(_doc,"c:if");
CustList<Attr> attrs87_=al(1);
attrs87_.add(at("condition","hasLawForAttackAny()"));
at(elt136_,attrs87_);
Element elt137_=el(_doc,"c:message");
CustList<Attr> attrs88_=al(1);
attrs88_.add(at("value","msg_helpround,round_process_move_5"));
at(elt137_,attrs88_);
ad(elt136_,elt137_);
Element elt138_=el(_doc,"ul");
Element elt139_=el(_doc,"c:for");
CustList<Attr> attrs89_=al(2);
attrs89_.add(at("list","beginRoundStatus"));
attrs89_.add(at("var","a"));
at(elt139_,attrs89_);
Element elt140_=el(_doc,"c:if");
CustList<Attr> attrs90_=al(1);
attrs90_.add(at("condition","hasLawForAttack(([a]))"));
at(elt140_,attrs90_);
Element elt141_=el(_doc,"li");
Element elt142_=el(_doc,"a");
CustList<Attr> attrs91_=al(1);
attrs91_.add(at("c:command","$clickBeginRoundStatus({([a])})"));
at(elt142_,attrs91_);
Text txt16_=tx(_doc,"{getTrBeginRoundStatus(([a]))}");
ad(elt142_,txt16_);
ad(elt141_,elt142_);
ad(elt140_,elt141_);
ad(elt139_,elt140_);
ad(elt138_,elt139_);
ad(elt136_,elt138_);
ad(elt115_,elt136_);
Element elt143_=el(_doc,"c:if");
CustList<Attr> attrs92_=al(1);
attrs92_.add(at("condition","hasLawForHealAny()"));
at(elt143_,attrs92_);
Element elt144_=el(_doc,"c:message");
CustList<Attr> attrs93_=al(1);
attrs93_.add(at("value","msg_helpround,round_process_move_5_1"));
at(elt144_,attrs93_);
ad(elt143_,elt144_);
Element elt145_=el(_doc,"ul");
Element elt146_=el(_doc,"c:for");
CustList<Attr> attrs94_=al(2);
attrs94_.add(at("list","beginRoundStatus"));
attrs94_.add(at("var","a"));
at(elt146_,attrs94_);
Element elt147_=el(_doc,"c:if");
CustList<Attr> attrs95_=al(1);
attrs95_.add(at("condition","hasLawForHeal(([a]))"));
at(elt147_,attrs95_);
Element elt148_=el(_doc,"li");
Element elt149_=el(_doc,"a");
CustList<Attr> attrs96_=al(1);
attrs96_.add(at("c:command","$clickBeginRoundStatus({([a])})"));
at(elt149_,attrs96_);
Text txt17_=tx(_doc,"{getTrBeginRoundStatus(([a]))}");
ad(elt149_,txt17_);
ad(elt148_,elt149_);
ad(elt147_,elt148_);
ad(elt146_,elt147_);
ad(elt145_,elt146_);
ad(elt143_,elt145_);
ad(elt115_,elt143_);
Element elt150_=el(_doc,"c:if");
CustList<Attr> attrs97_=al(1);
attrs97_.add(at("condition","!autoDamage.isEmpty()"));
at(elt150_,attrs97_);
Element elt151_=el(_doc,"c:message");
CustList<Attr> attrs98_=al(1);
attrs98_.add(at("value","msg_helpround,round_process_move_6"));
at(elt151_,attrs98_);
ad(elt150_,elt151_);
Element elt152_=el(_doc,"c:message");
CustList<Attr> attrs99_=al(1);
attrs99_.add(at("value","msg_helpround,round_process_move_6_1"));
at(elt152_,attrs99_);
ad(elt150_,elt152_);
Element elt153_=el(_doc,"table");
Element elt154_=el(_doc,"thead");
Element elt155_=el(_doc,"tr");
Element elt156_=el(_doc,"th");
Element elt157_=el(_doc,"c:message");
CustList<Attr> attrs100_=al(1);
attrs100_.add(at("value","msg_helpround,round_process_move_6_1_key"));
at(elt157_,attrs100_);
ad(elt156_,elt157_);
ad(elt155_,elt156_);
Element elt158_=el(_doc,"th");
Element elt159_=el(_doc,"c:message");
CustList<Attr> attrs101_=al(1);
attrs101_.add(at("value","msg_helpround,round_process_move_6_1_value"));
at(elt159_,attrs101_);
ad(elt158_,elt159_);
ad(elt155_,elt158_);
ad(elt154_,elt155_);
ad(elt153_,elt154_);
Element elt160_=el(_doc,"tbody");
Element elt161_=el(_doc,"c:for");
CustList<Attr> attrs102_=al(2);
attrs102_.add(at("list","autoDamage"));
attrs102_.add(at("var","a"));
at(elt161_,attrs102_);
Element elt162_=el(_doc,"tr");
Element elt163_=el(_doc,"td");
Element elt164_=el(_doc,"a");
CustList<Attr> attrs103_=al(1);
attrs103_.add(at("c:command","$clickAutoDamage({([a])})"));
at(elt164_,attrs103_);
Text txt18_=tx(_doc,"{getTrAutoDamage(([a]))}");
ad(elt164_,txt18_);
ad(elt163_,elt164_);
ad(elt162_,elt163_);
Element elt165_=el(_doc,"td");
Text txt19_=tx(_doc,"{getFomula(([a]))}");
ad(elt165_,txt19_);
ad(elt162_,elt165_);
ad(elt161_,elt162_);
ad(elt160_,elt161_);
ad(elt153_,elt160_);
ad(elt150_,elt153_);
Element elt166_=el(_doc,"c:if");
CustList<Attr> attrs104_=al(1);
attrs104_.add(at("condition","!mapAutoDamage.isEmpty()"));
at(elt166_,attrs104_);
Element elt167_=el(_doc,"ul");
Element elt168_=el(_doc,"c:for");
CustList<Attr> attrs105_=al(5);
attrs105_.add(at("key","c"));
attrs105_.add(at("map","mapAutoDamage"));
attrs105_.add(at("value","r"));
attrs105_.add(at("keyClassName","java.lang.String"));
attrs105_.add(at("varClassName","java.lang.String"));
at(elt168_,attrs105_);
Element elt169_=el(_doc,"li");
Text txt20_=tx(_doc,"{c} :");
ad(elt169_,txt20_);
Element elt170_=el(_doc,"c:message");
CustList<Attr> attrs106_=al(2);
attrs106_.add(at("quoted",""));
attrs106_.add(at("value","msg_helpround,formula"));
at(elt170_,attrs106_);
Element elt171_=el(_doc,"param");
CustList<Attr> attrs107_=al(1);
attrs107_.add(at("value","r"));
at(elt171_,attrs107_);
ad(elt170_,elt171_);
ad(elt169_,elt170_);
ad(elt168_,elt169_);
ad(elt167_,elt168_);
ad(elt166_,elt167_);
ad(elt150_,elt166_);
Element elt172_=el(_doc,"c:message");
CustList<Attr> attrs108_=al(1);
attrs108_.add(at("value","msg_helpround,round_process_move_6_2"));
at(elt172_,attrs108_);
ad(elt150_,elt172_);
ad(elt115_,elt150_);
Element elt173_=el(_doc,"c:message");
CustList<Attr> attrs109_=al(1);
attrs109_.add(at("value","msg_helpround,round_process_move_status_end"));
at(elt173_,attrs109_);
ad(elt115_,elt173_);
ad(_body,elt115_);
Element elt174_=el(_doc,"h3");
Element elt175_=el(_doc,"c:message");
CustList<Attr> attrs110_=al(1);
attrs110_.add(at("value","msg_helpround,round_process_move_prep"));
at(elt175_,attrs110_);
ad(elt174_,elt175_);
ad(_body,elt174_);
Element elt176_=el(_doc,"c:message");
CustList<Attr> attrs111_=al(1);
attrs111_.add(at("value","msg_helpround,round_process_move_before"));
at(elt176_,attrs111_);
ad(_body,elt176_);
Element elt177_=el(_doc,"c:if");
CustList<Attr> attrs112_=al(1);
attrs112_.add(at("condition","!prepaRoundMoves.isEmpty()"));
at(elt177_,attrs112_);
Element elt178_=el(_doc,"c:message");
CustList<Attr> attrs113_=al(1);
attrs113_.add(at("value","msg_helpround,round_process_move_before_1"));
at(elt178_,attrs113_);
ad(elt177_,elt178_);
Element elt179_=el(_doc,"c:message");
CustList<Attr> attrs114_=al(1);
attrs114_.add(at("value","msg_helpround,round_process_move_before_2"));
at(elt179_,attrs114_);
ad(elt177_,elt179_);
Element elt180_=el(_doc,"ul");
Element elt181_=el(_doc,"c:for");
CustList<Attr> attrs115_=al(2);
attrs115_.add(at("list","prepaRoundMoves"));
attrs115_.add(at("var","a"));
at(elt181_,attrs115_);
Element elt182_=el(_doc,"li");
Element elt183_=el(_doc,"a");
CustList<Attr> attrs116_=al(1);
attrs116_.add(at("c:command","$clickPrepaRoundMoves({([a])})"));
at(elt183_,attrs116_);
Text txt21_=tx(_doc,"{getTrPrepaRoundMoves(([a]))}");
ad(elt183_,txt21_);
ad(elt182_,elt183_);
ad(elt181_,elt182_);
ad(elt180_,elt181_);
ad(elt177_,elt180_);
Element elt184_=el(_doc,"c:if");
CustList<Attr> attrs117_=al(1);
attrs117_.add(at("condition","!speedPreparingItems.isEmpty()"));
at(elt184_,attrs117_);
Element elt185_=el(_doc,"c:message");
CustList<Attr> attrs118_=al(1);
attrs118_.add(at("value","msg_helpround,round_process_move_before_2_1"));
at(elt185_,attrs118_);
ad(elt184_,elt185_);
Element elt186_=el(_doc,"ul");
Element elt187_=el(_doc,"c:for");
CustList<Attr> attrs119_=al(2);
attrs119_.add(at("list","speedPreparingItems"));
attrs119_.add(at("var","a"));
at(elt187_,attrs119_);
Element elt188_=el(_doc,"li");
Element elt189_=el(_doc,"a");
CustList<Attr> attrs120_=al(1);
attrs120_.add(at("c:command","$clickSpeedPreparingItems({([a])})"));
at(elt189_,attrs120_);
Text txt22_=tx(_doc,"{getTrSpeedPreparingItems(([a]))}");
ad(elt189_,txt22_);
ad(elt188_,elt189_);
ad(elt187_,elt188_);
ad(elt186_,elt187_);
ad(elt184_,elt186_);
ad(elt177_,elt184_);
Element elt190_=el(_doc,"c:if");
CustList<Attr> attrs121_=al(1);
attrs121_.add(at("condition","!disappearingRoundMoves.isEmpty()"));
at(elt190_,attrs121_);
Element elt191_=el(_doc,"c:message");
CustList<Attr> attrs122_=al(1);
attrs122_.add(at("value","msg_helpround,round_process_move_before_3"));
at(elt191_,attrs122_);
ad(elt190_,elt191_);
Element elt192_=el(_doc,"ul");
Element elt193_=el(_doc,"c:for");
CustList<Attr> attrs123_=al(2);
attrs123_.add(at("list","prepaRoundMoves"));
attrs123_.add(at("var","a"));
at(elt193_,attrs123_);
Element elt194_=el(_doc,"c:if");
CustList<Attr> attrs124_=al(1);
attrs124_.add(at("condition","isDisappearingUser(([a]))"));
at(elt194_,attrs124_);
Element elt195_=el(_doc,"li");
Element elt196_=el(_doc,"a");
CustList<Attr> attrs125_=al(1);
attrs125_.add(at("c:command","$clickPrepaRoundMoves({([a])})"));
at(elt196_,attrs125_);
Text txt23_=tx(_doc,"{getTrPrepaRoundMoves(([a]))}");
ad(elt196_,txt23_);
ad(elt195_,elt196_);
ad(elt194_,elt195_);
ad(elt193_,elt194_);
ad(elt192_,elt193_);
ad(elt190_,elt192_);
ad(elt177_,elt190_);
ad(_body,elt177_);
Element elt197_=el(_doc,"c:if");
CustList<Attr> attrs126_=al(1);
attrs126_.add(at("condition","!rechargeMoves.isEmpty()"));
at(elt197_,attrs126_);
Element elt198_=el(_doc,"c:message");
CustList<Attr> attrs127_=al(1);
attrs127_.add(at("value","msg_helpround,round_process_move_before_4"));
at(elt198_,attrs127_);
ad(elt197_,elt198_);
Element elt199_=el(_doc,"ul");
Element elt200_=el(_doc,"c:for");
CustList<Attr> attrs128_=al(2);
attrs128_.add(at("list","rechargeMoves"));
attrs128_.add(at("var","a"));
at(elt200_,attrs128_);
Element elt201_=el(_doc,"li");
Element elt202_=el(_doc,"a");
CustList<Attr> attrs129_=al(1);
attrs129_.add(at("c:command","$clickPrepaRoundMoves({([a])})"));
at(elt202_,attrs129_);
Text txt24_=tx(_doc,"{getTrRechargeMoves(([a]))}");
ad(elt202_,txt24_);
ad(elt201_,elt202_);
ad(elt200_,elt201_);
ad(elt199_,elt200_);
ad(elt197_,elt199_);
Element elt203_=el(_doc,"c:if");
CustList<Attr> attrs130_=al(1);
attrs130_.add(at("condition","!immuRecharging.isEmpty()"));
at(elt203_,attrs130_);
Element elt204_=el(_doc,"c:message");
CustList<Attr> attrs131_=al(1);
attrs131_.add(at("value","msg_helpround,round_process_move_before_5"));
at(elt204_,attrs131_);
ad(elt203_,elt204_);
Element elt205_=el(_doc,"ul");
Element elt206_=el(_doc,"c:for");
CustList<Attr> attrs132_=al(2);
attrs132_.add(at("list","immuRecharging"));
attrs132_.add(at("var","a"));
at(elt206_,attrs132_);
Element elt207_=el(_doc,"li");
Element elt208_=el(_doc,"a");
CustList<Attr> attrs133_=al(1);
attrs133_.add(at("c:command","$clickImmuRecharging({([a])})"));
at(elt208_,attrs133_);
Text txt25_=tx(_doc,"{getTrImmuRecharging(([a]))}");
ad(elt208_,txt25_);
ad(elt207_,elt208_);
ad(elt206_,elt207_);
ad(elt205_,elt206_);
ad(elt203_,elt205_);
ad(elt197_,elt203_);
ad(_body,elt197_);
Element elt209_=el(_doc,"c:if");
CustList<Attr> attrs134_=al(1);
attrs134_.add(at("condition","!movesInvoking.isEmpty()"));
at(elt209_,attrs134_);
Element elt210_=el(_doc,"h3");
Element elt211_=el(_doc,"c:message");
CustList<Attr> attrs135_=al(1);
attrs135_.add(at("value","msg_helpround,round_process_move_invoke"));
at(elt211_,attrs135_);
ad(elt210_,elt211_);
ad(elt209_,elt210_);
Element elt212_=el(_doc,"c:message");
CustList<Attr> attrs136_=al(1);
attrs136_.add(at("value","msg_helpround,round_process_move_invoke_moves"));
at(elt212_,attrs136_);
ad(elt209_,elt212_);
Element elt213_=el(_doc,"ul");
Element elt214_=el(_doc,"c:for");
CustList<Attr> attrs137_=al(2);
attrs137_.add(at("list","movesInvoking"));
attrs137_.add(at("var","a"));
at(elt214_,attrs137_);
Element elt215_=el(_doc,"li");
Element elt216_=el(_doc,"a");
CustList<Attr> attrs138_=al(1);
attrs138_.add(at("c:command","$clickMovesInvoking({([a])})"));
at(elt216_,attrs138_);
Text txt26_=tx(_doc,"{getTrMovesInvoking(([a]))}");
ad(elt216_,txt26_);
ad(elt215_,elt216_);
ad(elt214_,elt215_);
ad(elt213_,elt214_);
ad(elt209_,elt213_);
Element elt217_=el(_doc,"c:message");
CustList<Attr> attrs139_=al(1);
attrs139_.add(at("value","msg_helpround,round_process_move_invoke_process"));
at(elt217_,attrs139_);
ad(elt209_,elt217_);
Element elt218_=el(_doc,"c:message");
CustList<Attr> attrs140_=al(1);
attrs140_.add(at("value","msg_helpround,round_process_move_invoke_process_fail"));
at(elt218_,attrs140_);
ad(elt209_,elt218_);
ad(_body,elt209_);
Element elt219_=el(_doc,"h3");
Element elt220_=el(_doc,"c:message");
CustList<Attr> attrs141_=al(1);
attrs141_.add(at("value","msg_helpround,round_process_move_prep_final"));
at(elt220_,attrs141_);
ad(elt219_,elt220_);
ad(_body,elt219_);
Element elt221_=el(_doc,"c:message");
CustList<Attr> attrs142_=al(1);
attrs142_.add(at("value","msg_helpround,round_process_move_prep_final_1"));
at(elt221_,attrs142_);
ad(_body,elt221_);
Element elt222_=el(_doc,"c:message");
CustList<Attr> attrs143_=al(1);
attrs143_.add(at("value","msg_helpround,round_process_move_prep_final_2"));
at(elt222_,attrs143_);
ad(_body,elt222_);
Element elt223_=el(_doc,"c:message");
CustList<Attr> attrs144_=al(1);
attrs144_.add(at("value","msg_helpround,round_process_move_prep_final_3"));
at(elt223_,attrs144_);
ad(_body,elt223_);
Element elt224_=el(_doc,"c:if");
CustList<Attr> attrs145_=al(1);
attrs145_.add(at("condition","!movesHealingSubstitute.isEmpty()"));
at(elt224_,attrs145_);
Element elt225_=el(_doc,"c:message");
CustList<Attr> attrs146_=al(1);
attrs146_.add(at("value","msg_helpround,round_process_move_prep_final_4"));
at(elt225_,attrs146_);
ad(elt224_,elt225_);
Element elt226_=el(_doc,"ul");
Element elt227_=el(_doc,"c:for");
CustList<Attr> attrs147_=al(2);
attrs147_.add(at("list","movesHealingSubstitute"));
attrs147_.add(at("var","a"));
at(elt227_,attrs147_);
Element elt228_=el(_doc,"li");
Element elt229_=el(_doc,"a");
CustList<Attr> attrs148_=al(1);
attrs148_.add(at("c:command","$clickMovesHealingSubstitute({([a])})"));
at(elt229_,attrs148_);
Text txt27_=tx(_doc,"{getTrMovesHealingSubstitute(([a]))}");
ad(elt229_,txt27_);
ad(elt228_,elt229_);
ad(elt227_,elt228_);
ad(elt226_,elt227_);
ad(elt224_,elt226_);
ad(_body,elt224_);
Element elt230_=el(_doc,"c:if");
CustList<Attr> attrs149_=al(1);
attrs149_.add(at("condition","!copyMoveTypesAb.isEmpty()"));
at(elt230_,attrs149_);
Element elt231_=el(_doc,"c:message");
CustList<Attr> attrs150_=al(1);
attrs150_.add(at("value","msg_helpround,round_process_move_prep_final_5"));
at(elt231_,attrs150_);
ad(elt230_,elt231_);
Element elt232_=el(_doc,"ul");
Element elt233_=el(_doc,"c:for");
CustList<Attr> attrs151_=al(2);
attrs151_.add(at("list","copyMoveTypesAb"));
attrs151_.add(at("var","a"));
at(elt233_,attrs151_);
Element elt234_=el(_doc,"li");
Element elt235_=el(_doc,"a");
CustList<Attr> attrs152_=al(1);
attrs152_.add(at("c:command","$clickCopyMoveTypesAb({([a])})"));
at(elt235_,attrs152_);
Text txt28_=tx(_doc,"{getTrCopyMoveTypesAb(([a]))}");
ad(elt235_,txt28_);
ad(elt234_,elt235_);
ad(elt233_,elt234_);
ad(elt232_,elt233_);
ad(elt230_,elt232_);
ad(_body,elt230_);
Element elt236_=el(_doc,"c:if");
CustList<Attr> attrs153_=al(1);
attrs153_.add(at("condition","!movesThieving.isEmpty()"));
at(elt236_,attrs153_);
Element elt237_=el(_doc,"c:message");
CustList<Attr> attrs154_=al(1);
attrs154_.add(at("value","msg_helpround,round_process_move_prep_final_6"));
at(elt237_,attrs154_);
ad(elt236_,elt237_);
Element elt238_=el(_doc,"ul");
Element elt239_=el(_doc,"c:for");
CustList<Attr> attrs155_=al(2);
attrs155_.add(at("list","movesThieving"));
attrs155_.add(at("var","a"));
at(elt239_,attrs155_);
Element elt240_=el(_doc,"li");
Element elt241_=el(_doc,"a");
CustList<Attr> attrs156_=al(1);
attrs156_.add(at("c:command","$clickMovesThieving({([a])})"));
at(elt241_,attrs156_);
Text txt29_=tx(_doc,"{getTrMovesThieving(([a]))}");
ad(elt241_,txt29_);
ad(elt240_,elt241_);
ad(elt239_,elt240_);
ad(elt238_,elt239_);
ad(elt236_,elt238_);
ad(_body,elt236_);
Element elt242_=el(_doc,"h3");
Element elt243_=el(_doc,"c:message");
CustList<Attr> attrs157_=al(1);
attrs157_.add(at("value","msg_helpround,round_process_move_final"));
at(elt243_,attrs157_);
ad(elt242_,elt243_);
ad(_body,elt242_);
Element elt244_=el(_doc,"c:message");
CustList<Attr> attrs158_=al(1);
attrs158_.add(at("value","msg_helpround,round_process_move_final_1"));
at(elt244_,attrs158_);
ad(_body,elt244_);
Element elt245_=el(_doc,"br");
ad(_body,elt245_);
Element elt246_=el(_doc,"c:message");
CustList<Attr> attrs159_=al(1);
attrs159_.add(at("value","msg_helpround,round_process_move_final_2"));
at(elt246_,attrs159_);
ad(_body,elt246_);
Element elt247_=el(_doc,"c:if");
CustList<Attr> attrs160_=al(1);
attrs160_.add(at("condition","!movesSecEffItems.isEmpty()"));
at(elt247_,attrs160_);
Element elt248_=el(_doc,"c:message");
CustList<Attr> attrs161_=al(1);
attrs161_.add(at("value","msg_helpround,round_process_move_final_3"));
at(elt248_,attrs161_);
ad(elt247_,elt248_);
Element elt249_=el(_doc,"ul");
Element elt250_=el(_doc,"c:for");
CustList<Attr> attrs162_=al(2);
attrs162_.add(at("list","movesSecEffItems"));
attrs162_.add(at("var","a"));
at(elt250_,attrs162_);
Element elt251_=el(_doc,"li");
Element elt252_=el(_doc,"a");
CustList<Attr> attrs163_=al(1);
attrs163_.add(at("c:command","$clickMovesSecEffItems({([a])})"));
at(elt252_,attrs163_);
Text txt30_=tx(_doc,"{getTrMovesSecEffItems(([a]))}");
ad(elt252_,txt30_);
ad(elt251_,elt252_);
ad(elt250_,elt251_);
ad(elt249_,elt250_);
ad(elt247_,elt249_);
ad(_body,elt247_);
Element elt253_=el(_doc,"c:message");
CustList<Attr> attrs164_=al(1);
attrs164_.add(at("value","msg_helpround,round_process_move_final_4"));
at(elt253_,attrs164_);
ad(_body,elt253_);
Element elt254_=el(_doc,"c:if");
CustList<Attr> attrs165_=al(1);
attrs165_.add(at("condition","!movesAttracting.isEmpty()"));
at(elt254_,attrs165_);
Element elt255_=el(_doc,"c:message");
CustList<Attr> attrs166_=al(1);
attrs166_.add(at("value","msg_helpround,round_process_move_final_5"));
at(elt255_,attrs166_);
ad(elt254_,elt255_);
Element elt256_=el(_doc,"ul");
Element elt257_=el(_doc,"c:for");
CustList<Attr> attrs167_=al(2);
attrs167_.add(at("list","movesAttracting"));
attrs167_.add(at("var","a"));
at(elt257_,attrs167_);
Element elt258_=el(_doc,"li");
Element elt259_=el(_doc,"a");
CustList<Attr> attrs168_=al(1);
attrs168_.add(at("c:command","$clickMovesAttracting({([a])})"));
at(elt259_,attrs168_);
Text txt31_=tx(_doc,"{getTrMovesAttracting(([a]))}");
ad(elt259_,txt31_);
ad(elt258_,elt259_);
ad(elt257_,elt258_);
ad(elt256_,elt257_);
ad(elt254_,elt256_);
ad(_body,elt254_);
Element elt260_=el(_doc,"c:if");
CustList<Attr> attrs169_=al(1);
attrs169_.add(at("condition","movesAttracting.isEmpty()"));
at(elt260_,attrs169_);
Element elt261_=el(_doc,"c:message");
CustList<Attr> attrs170_=al(1);
attrs170_.add(at("value","msg_helpround,round_process_move_final_5_1"));
at(elt261_,attrs170_);
ad(elt260_,elt261_);
ad(_body,elt260_);
Element elt262_=el(_doc,"c:if");
CustList<Attr> attrs171_=al(1);
attrs171_.add(at("condition","!beginRoundStatusFoe.isEmpty()"));
at(elt262_,attrs171_);
Element elt263_=el(_doc,"c:message");
CustList<Attr> attrs172_=al(1);
attrs172_.add(at("value","msg_helpround,round_process_move_final_6"));
at(elt263_,attrs172_);
ad(elt262_,elt263_);
Element elt264_=el(_doc,"ul");
Element elt265_=el(_doc,"c:for");
CustList<Attr> attrs173_=al(2);
attrs173_.add(at("list","beginRoundStatusFoe"));
attrs173_.add(at("var","a"));
at(elt265_,attrs173_);
Element elt266_=el(_doc,"li");
Element elt267_=el(_doc,"a");
CustList<Attr> attrs174_=al(1);
attrs174_.add(at("c:command","$clickBeginRoundStatusFoe({([a])})"));
at(elt267_,attrs174_);
Text txt32_=tx(_doc,"{getTrBeginRoundStatusFoe(([a]))}");
ad(elt267_,txt32_);
ad(elt266_,elt267_);
ad(elt265_,elt266_);
ad(elt264_,elt265_);
ad(elt262_,elt264_);
Element elt268_=el(_doc,"c:message");
CustList<Attr> attrs175_=al(1);
attrs175_.add(at("value","msg_helpround,round_process_move_final_7"));
at(elt268_,attrs175_);
ad(elt262_,elt268_);
ad(_body,elt262_);
Element elt269_=el(_doc,"c:if");
CustList<Attr> attrs176_=al(1);
attrs176_.add(at("condition","!pressureAbilities.isEmpty()"));
at(elt269_,attrs176_);
Element elt270_=el(_doc,"c:message");
CustList<Attr> attrs177_=al(1);
attrs177_.add(at("value","msg_helpround,round_process_move_final_8"));
at(elt270_,attrs177_);
ad(elt269_,elt270_);
Element elt271_=el(_doc,"ul");
Element elt272_=el(_doc,"c:for");
CustList<Attr> attrs178_=al(2);
attrs178_.add(at("list","pressureAbilities"));
attrs178_.add(at("var","a"));
at(elt272_,attrs178_);
Element elt273_=el(_doc,"li");
Element elt274_=el(_doc,"a");
CustList<Attr> attrs179_=al(1);
attrs179_.add(at("c:command","$clickPressureAbilities({([a])})"));
at(elt274_,attrs179_);
Text txt33_=tx(_doc,"{getTrPressureAbilities(([a]))}");
ad(elt274_,txt33_);
ad(elt273_,elt274_);
ad(elt272_,elt273_);
ad(elt271_,elt272_);
ad(elt269_,elt271_);
ad(_body,elt269_);
Element elt275_=el(_doc,"c:message");
CustList<Attr> attrs180_=al(1);
attrs180_.add(at("value","msg_helpround,round_process_move_final_9"));
at(elt275_,attrs180_);
ad(_body,elt275_);
Element elt276_=el(_doc,"c:message");
CustList<Attr> attrs181_=al(1);
attrs181_.add(at("value","msg_helpround,round_process_move_final_10_1"));
at(elt276_,attrs181_);
ad(_body,elt276_);
Element elt277_=el(_doc,"c:message");
CustList<Attr> attrs182_=al(1);
attrs182_.add(at("value","msg_helpround,round_process_move_final_10"));
at(elt277_,attrs182_);
ad(_body,elt277_);
Element elt278_=el(_doc,"ol");
Element elt279_=el(_doc,"li");
Element elt280_=el(_doc,"c:message");
CustList<Attr> attrs183_=al(1);
attrs183_.add(at("value","msg_helpround,round_process_move_final_succ_1"));
at(elt280_,attrs183_);
ad(elt279_,elt280_);
ad(elt278_,elt279_);
Element elt281_=el(_doc,"li");
Element elt282_=el(_doc,"c:message");
CustList<Attr> attrs184_=al(1);
attrs184_.add(at("value","msg_helpround,round_process_move_final_succ_2"));
at(elt282_,attrs184_);
ad(elt281_,elt282_);
ad(elt278_,elt281_);
Element elt283_=el(_doc,"li");
Element elt284_=el(_doc,"c:message");
CustList<Attr> attrs185_=al(1);
attrs185_.add(at("value","msg_helpround,round_process_move_final_succ_3"));
at(elt284_,attrs185_);
ad(elt283_,elt284_);
ad(elt278_,elt283_);
ad(_body,elt278_);
Element elt285_=el(_doc,"c:if");
CustList<Attr> attrs186_=al(1);
attrs186_.add(at("condition","!protectAbilities.isEmpty()"));
at(elt285_,attrs186_);
Element elt286_=el(_doc,"c:message");
CustList<Attr> attrs187_=al(1);
attrs187_.add(at("value","msg_helpround,round_process_move_final_11"));
at(elt286_,attrs187_);
ad(elt285_,elt286_);
Element elt287_=el(_doc,"ul");
Element elt288_=el(_doc,"c:for");
CustList<Attr> attrs188_=al(2);
attrs188_.add(at("list","protectAbilities"));
attrs188_.add(at("var","a"));
at(elt288_,attrs188_);
Element elt289_=el(_doc,"li");
Element elt290_=el(_doc,"a");
CustList<Attr> attrs189_=al(1);
attrs189_.add(at("c:command","$clickProtectAbilities({([a])})"));
at(elt290_,attrs189_);
Text txt34_=tx(_doc,"{getTrProtectAbilities(([a]))}");
ad(elt290_,txt34_);
ad(elt289_,elt290_);
ad(elt288_,elt289_);
ad(elt287_,elt288_);
ad(elt285_,elt287_);
ad(_body,elt285_);
Element elt291_=el(_doc,"c:if");
CustList<Attr> attrs190_=al(1);
attrs190_.add(at("condition","!protectItems.isEmpty()"));
at(elt291_,attrs190_);
Element elt292_=el(_doc,"c:message");
CustList<Attr> attrs191_=al(1);
attrs191_.add(at("value","msg_helpround,round_process_move_final_11_1"));
at(elt292_,attrs191_);
ad(elt291_,elt292_);
Element elt293_=el(_doc,"ul");
Element elt294_=el(_doc,"c:for");
CustList<Attr> attrs192_=al(2);
attrs192_.add(at("list","protectItems"));
attrs192_.add(at("var","a"));
at(elt294_,attrs192_);
Element elt295_=el(_doc,"li");
Element elt296_=el(_doc,"a");
CustList<Attr> attrs193_=al(1);
attrs193_.add(at("c:command","$clickProtectItems({([a])})"));
at(elt296_,attrs193_);
Text txt35_=tx(_doc,"{getTrProtectItems(([a]))}");
ad(elt296_,txt35_);
ad(elt295_,elt296_);
ad(elt294_,elt295_);
ad(elt293_,elt294_);
ad(elt291_,elt293_);
ad(_body,elt291_);
Element elt297_=el(_doc,"c:if");
CustList<Attr> attrs194_=al(1);
attrs194_.add(at("condition","!protectMoves.isEmpty()"));
at(elt297_,attrs194_);
Element elt298_=el(_doc,"c:message");
CustList<Attr> attrs195_=al(1);
attrs195_.add(at("value","msg_helpround,round_process_move_final_11_2"));
at(elt298_,attrs195_);
ad(elt297_,elt298_);
Element elt299_=el(_doc,"ul");
Element elt300_=el(_doc,"c:for");
CustList<Attr> attrs196_=al(2);
attrs196_.add(at("list","protectMoves"));
attrs196_.add(at("var","a"));
at(elt300_,attrs196_);
Element elt301_=el(_doc,"li");
Element elt302_=el(_doc,"a");
CustList<Attr> attrs197_=al(1);
attrs197_.add(at("c:command","$clickProtectMoves({([a])})"));
at(elt302_,attrs197_);
Text txt36_=tx(_doc,"{getTrProtectMoves(([a]))}");
ad(elt302_,txt36_);
ad(elt301_,elt302_);
ad(elt300_,elt301_);
ad(elt299_,elt300_);
ad(elt297_,elt299_);
ad(_body,elt297_);
Element elt303_=el(_doc,"c:if");
CustList<Attr> attrs198_=al(1);
attrs198_.add(at("condition","!effMoves.isEmpty()"));
at(elt303_,attrs198_);
Element elt304_=el(_doc,"c:message");
CustList<Attr> attrs199_=al(1);
attrs199_.add(at("value","msg_helpround,round_process_move_final_12"));
at(elt304_,attrs199_);
ad(elt303_,elt304_);
Element elt305_=el(_doc,"ul");
Element elt306_=el(_doc,"c:for");
CustList<Attr> attrs200_=al(2);
attrs200_.add(at("list","effMoves"));
attrs200_.add(at("var","a"));
at(elt306_,attrs200_);
Element elt307_=el(_doc,"li");
Element elt308_=el(_doc,"a");
CustList<Attr> attrs201_=al(1);
attrs201_.add(at("c:command","$clickEffMoves({([a])})"));
at(elt308_,attrs201_);
Text txt37_=tx(_doc,"{getTrEffMoves(([a]))}");
ad(elt308_,txt37_);
ad(elt307_,elt308_);
ad(elt306_,elt307_);
ad(elt305_,elt306_);
ad(elt303_,elt305_);
ad(_body,elt303_);
Element elt309_=el(_doc,"c:message");
CustList<Attr> attrs202_=al(1);
attrs202_.add(at("value","msg_helpround,round_process_move_final_13"));
at(elt309_,attrs202_);
ad(_body,elt309_);
Element elt310_=el(_doc,"c:message");
CustList<Attr> attrs203_=al(1);
attrs203_.add(at("value","msg_helpround,round_process_move_final_14"));
at(elt310_,attrs203_);
ad(_body,elt310_);
Element elt311_=el(_doc,"c:if");
CustList<Attr> attrs204_=al(1);
attrs204_.add(at("condition","!movesMirror.isEmpty()"));
at(elt311_,attrs204_);
Element elt312_=el(_doc,"c:message");
CustList<Attr> attrs205_=al(1);
attrs205_.add(at("value","msg_helpround,round_process_move_final_15"));
at(elt312_,attrs205_);
ad(elt311_,elt312_);
Element elt313_=el(_doc,"ul");
Element elt314_=el(_doc,"c:for");
CustList<Attr> attrs206_=al(2);
attrs206_.add(at("list","movesMirror"));
attrs206_.add(at("var","a"));
at(elt314_,attrs206_);
Element elt315_=el(_doc,"li");
Element elt316_=el(_doc,"a");
CustList<Attr> attrs207_=al(1);
attrs207_.add(at("c:command","$clickMovesMirror({([a])})"));
at(elt316_,attrs207_);
Text txt38_=tx(_doc,"{getTrMovesMirror(([a]))}");
ad(elt316_,txt38_);
ad(elt315_,elt316_);
ad(elt314_,elt315_);
ad(elt313_,elt314_);
ad(elt311_,elt313_);
Element elt317_=el(_doc,"c:message");
CustList<Attr> attrs208_=al(1);
attrs208_.add(at("value","msg_helpround,round_process_move_final_16"));
at(elt317_,attrs208_);
ad(elt311_,elt317_);
ad(_body,elt311_);
Element elt318_=el(_doc,"c:message");
CustList<Attr> attrs209_=al(1);
attrs209_.add(at("value","msg_helpround,round_process_move_final_16_1"));
at(elt318_,attrs209_);
ad(_body,elt318_);
Element elt319_=el(_doc,"ol");
Element elt320_=el(_doc,"li");
Element elt321_=el(_doc,"c:message");
CustList<Attr> attrs210_=al(1);
attrs210_.add(at("value","msg_helpround,round_process_move_final_16_1_1"));
at(elt321_,attrs210_);
ad(elt320_,elt321_);
Element elt322_=el(_doc,"ol");
Element elt323_=el(_doc,"c:if");
CustList<Attr> attrs211_=al(1);
attrs211_.add(at("condition","!abilitiesPartStatis.isEmpty()"));
at(elt323_,attrs211_);
Element elt324_=el(_doc,"li");
Element elt325_=el(_doc,"c:message");
CustList<Attr> attrs212_=al(1);
attrs212_.add(at("value","msg_helpround,round_process_move_final_16_1_1_1"));
at(elt325_,attrs212_);
ad(elt324_,elt325_);
Element elt326_=el(_doc,"ul");
Element elt327_=el(_doc,"c:for");
CustList<Attr> attrs213_=al(2);
attrs213_.add(at("list","abilitiesPartStatis"));
attrs213_.add(at("var","a"));
at(elt327_,attrs213_);
Element elt328_=el(_doc,"li");
Element elt329_=el(_doc,"a");
CustList<Attr> attrs214_=al(1);
attrs214_.add(at("c:command","$clickAbilitiesPartStatis({([a])})"));
at(elt329_,attrs214_);
Text txt39_=tx(_doc,"{getTrAbilitiesPartStatis(([a]))}");
ad(elt329_,txt39_);
ad(elt328_,elt329_);
ad(elt327_,elt328_);
ad(elt326_,elt327_);
ad(elt324_,elt326_);
ad(elt323_,elt324_);
ad(elt322_,elt323_);
Element elt330_=el(_doc,"c:if");
CustList<Attr> attrs215_=al(1);
attrs215_.add(at("condition","immuStatisTeamMoveAny()"));
at(elt330_,attrs215_);
Element elt331_=el(_doc,"li");
Element elt332_=el(_doc,"c:message");
CustList<Attr> attrs216_=al(1);
attrs216_.add(at("value","msg_helpround,round_process_move_final_16_1_1_2"));
at(elt332_,attrs216_);
ad(elt331_,elt332_);
Element elt333_=el(_doc,"ul");
Element elt334_=el(_doc,"c:for");
CustList<Attr> attrs217_=al(2);
attrs217_.add(at("list","movesTeam"));
attrs217_.add(at("var","a"));
at(elt334_,attrs217_);
Element elt335_=el(_doc,"c:if");
CustList<Attr> attrs218_=al(1);
attrs218_.add(at("condition","immuStatisTeamMove(([a]))"));
at(elt335_,attrs218_);
Element elt336_=el(_doc,"li");
Element elt337_=el(_doc,"a");
CustList<Attr> attrs219_=al(1);
attrs219_.add(at("c:command","$clickMovesTeam({([a])})"));
at(elt337_,attrs219_);
Text txt40_=tx(_doc,"{getTrMovesTeam(([a]))}");
ad(elt337_,txt40_);
ad(elt336_,elt337_);
ad(elt335_,elt336_);
ad(elt334_,elt335_);
ad(elt333_,elt334_);
ad(elt331_,elt333_);
ad(elt330_,elt331_);
ad(elt322_,elt330_);
Element elt338_=el(_doc,"c:if");
CustList<Attr> attrs220_=al(1);
attrs220_.add(at("condition","!abilitiesFighterStatisVar.isEmpty()"));
at(elt338_,attrs220_);
Element elt339_=el(_doc,"li");
Element elt340_=el(_doc,"c:message");
CustList<Attr> attrs221_=al(1);
attrs221_.add(at("value","msg_helpround,round_process_move_final_16_1_1_3"));
at(elt340_,attrs221_);
ad(elt339_,elt340_);
Element elt341_=el(_doc,"ul");
Element elt342_=el(_doc,"c:for");
CustList<Attr> attrs222_=al(2);
attrs222_.add(at("list","abilitiesFighterStatisVar"));
attrs222_.add(at("var","a"));
at(elt342_,attrs222_);
Element elt343_=el(_doc,"li");
Element elt344_=el(_doc,"a");
CustList<Attr> attrs223_=al(1);
attrs223_.add(at("c:command","$clickAbilitiesFighterStatisVar({([a])})"));
at(elt344_,attrs223_);
Text txt41_=tx(_doc,"{getTrAbilitiesFighterStatisVar(([a]))}");
ad(elt344_,txt41_);
ad(elt343_,elt344_);
ad(elt342_,elt343_);
ad(elt341_,elt342_);
ad(elt339_,elt341_);
ad(elt338_,elt339_);
ad(elt322_,elt338_);
ad(elt320_,elt322_);
ad(elt319_,elt320_);
Element elt345_=el(_doc,"li");
Element elt346_=el(_doc,"c:message");
CustList<Attr> attrs224_=al(1);
attrs224_.add(at("value","msg_helpround,round_process_move_final_16_1_2"));
at(elt346_,attrs224_);
ad(elt345_,elt346_);
Element elt347_=el(_doc,"c:if");
CustList<Attr> attrs225_=al(1);
attrs225_.add(at("condition","!abilitiesRateStatis.isEmpty()"));
at(elt347_,attrs225_);
Element elt348_=el(_doc,"br");
ad(elt347_,elt348_);
Element elt349_=el(_doc,"c:message");
CustList<Attr> attrs226_=al(1);
attrs226_.add(at("value","msg_helpround,round_process_move_final_16_1_2_1"));
at(elt349_,attrs226_);
ad(elt347_,elt349_);
Element elt350_=el(_doc,"ul");
Element elt351_=el(_doc,"c:for");
CustList<Attr> attrs227_=al(2);
attrs227_.add(at("list","abilitiesRateStatis"));
attrs227_.add(at("var","a"));
at(elt351_,attrs227_);
Element elt352_=el(_doc,"li");
Element elt353_=el(_doc,"a");
CustList<Attr> attrs228_=al(1);
attrs228_.add(at("c:command","$clickAbilitiesRateStatis({([a])})"));
at(elt353_,attrs228_);
Text txt42_=tx(_doc,"{getTrAbilitiesRateStatis(([a]))}");
ad(elt353_,txt42_);
ad(elt352_,elt353_);
ad(elt351_,elt352_);
ad(elt350_,elt351_);
ad(elt347_,elt350_);
ad(elt345_,elt347_);
Element elt354_=el(_doc,"c:if");
CustList<Attr> attrs229_=al(1);
attrs229_.add(at("condition","!comboEvtStat.isEmpty()"));
at(elt354_,attrs229_);
Element elt355_=el(_doc,"br");
ad(elt354_,elt355_);
Element elt356_=el(_doc,"c:message");
CustList<Attr> attrs230_=al(1);
attrs230_.add(at("value","msg_helpround,round_process_move_final_16_1_2_2"));
at(elt356_,attrs230_);
ad(elt354_,elt356_);
Element elt357_=el(_doc,"ul");
Element elt358_=el(_doc,"c:for");
CustList<Attr> attrs231_=al(2);
attrs231_.add(at("list","comboEvtStat"));
attrs231_.add(at("var","a"));
at(elt358_,attrs231_);
Element elt359_=el(_doc,"li");
Element elt360_=el(_doc,"a");
CustList<Attr> attrs232_=al(1);
attrs232_.add(at("c:command","$clickComboEvtStat({([a])})"));
at(elt360_,attrs232_);
Text txt43_=tx(_doc,"{getTrComboEvtStat(([a]))}");
ad(elt360_,txt43_);
ad(elt359_,elt360_);
ad(elt358_,elt359_);
ad(elt357_,elt358_);
ad(elt354_,elt357_);
ad(elt345_,elt354_);
ad(elt319_,elt345_);
Element elt361_=el(_doc,"c:if");
CustList<Attr> attrs233_=al(1);
attrs233_.add(at("condition","!abilitiesFighterStatis.isEmpty()"));
at(elt361_,attrs233_);
Element elt362_=el(_doc,"li");
Element elt363_=el(_doc,"c:message");
CustList<Attr> attrs234_=al(1);
attrs234_.add(at("value","msg_helpround,round_process_move_final_16_1_3"));
at(elt363_,attrs234_);
ad(elt362_,elt363_);
Element elt364_=el(_doc,"ul");
Element elt365_=el(_doc,"c:for");
CustList<Attr> attrs235_=al(2);
attrs235_.add(at("list","abilitiesFighterStatis"));
attrs235_.add(at("var","a"));
at(elt365_,attrs235_);
Element elt366_=el(_doc,"li");
Element elt367_=el(_doc,"a");
CustList<Attr> attrs236_=al(1);
attrs236_.add(at("c:command","$clickAbilitiesFighterStatis({([a])})"));
at(elt367_,attrs236_);
Text txt44_=tx(_doc,"{getTrAbilitiesFighterStatis(([a]))}");
ad(elt367_,txt44_);
ad(elt366_,elt367_);
ad(elt365_,elt366_);
ad(elt364_,elt365_);
ad(elt362_,elt364_);
ad(elt361_,elt362_);
ad(elt319_,elt361_);
Element elt368_=el(_doc,"c:if");
CustList<Attr> attrs237_=al(1);
attrs237_.add(at("condition","!itemsFighterStatis.isEmpty()"));
at(elt368_,attrs237_);
Element elt369_=el(_doc,"li");
Element elt370_=el(_doc,"c:message");
CustList<Attr> attrs238_=al(1);
attrs238_.add(at("value","msg_helpround,round_process_move_final_16_1_4"));
at(elt370_,attrs238_);
ad(elt369_,elt370_);
Element elt371_=el(_doc,"ul");
Element elt372_=el(_doc,"c:for");
CustList<Attr> attrs239_=al(2);
attrs239_.add(at("list","itemsFighterStatis"));
attrs239_.add(at("var","a"));
at(elt372_,attrs239_);
Element elt373_=el(_doc,"li");
Element elt374_=el(_doc,"a");
CustList<Attr> attrs240_=al(1);
attrs240_.add(at("c:command","$clickItemsFighterStatis({([a])})"));
at(elt374_,attrs240_);
Text txt45_=tx(_doc,"{getTrItemsFighterStatis(([a]))}");
ad(elt374_,txt45_);
ad(elt373_,elt374_);
ad(elt372_,elt373_);
ad(elt371_,elt372_);
ad(elt369_,elt371_);
ad(elt368_,elt369_);
ad(elt319_,elt368_);
ad(_body,elt319_);
Element elt375_=el(_doc,"c:message");
CustList<Attr> attrs241_=al(1);
attrs241_.add(at("value","msg_helpround,round_process_move_final_16_2"));
at(elt375_,attrs241_);
ad(_body,elt375_);
Element elt376_=el(_doc,"ol");
Element elt377_=el(_doc,"c:if");
CustList<Attr> attrs242_=al(1);
attrs242_.add(at("condition","!successfulStatus.isEmpty()"));
at(elt377_,attrs242_);
Element elt378_=el(_doc,"li");
Element elt379_=el(_doc,"c:message");
CustList<Attr> attrs243_=al(1);
attrs243_.add(at("value","msg_helpround,round_process_move_final_16_2_1"));
at(elt379_,attrs243_);
ad(elt378_,elt379_);
Element elt380_=el(_doc,"ul");
Element elt381_=el(_doc,"c:for");
CustList<Attr> attrs244_=al(2);
attrs244_.add(at("list","successfulStatus"));
attrs244_.add(at("var","a"));
at(elt381_,attrs244_);
Element elt382_=el(_doc,"li");
Element elt383_=el(_doc,"a");
CustList<Attr> attrs245_=al(1);
attrs245_.add(at("c:command","$clickSuccessfulStatus({([a])})"));
at(elt383_,attrs245_);
Text txt46_=tx(_doc,"{getTrSuccessfulStatus(([a]))}");
ad(elt383_,txt46_);
ad(elt382_,elt383_);
ad(elt381_,elt382_);
ad(elt380_,elt381_);
ad(elt378_,elt380_);
ad(elt377_,elt378_);
ad(elt376_,elt377_);
Element elt384_=el(_doc,"c:if");
CustList<Attr> attrs246_=al(1);
attrs246_.add(at("condition","!globalMovesStatus.isEmpty()"));
at(elt384_,attrs246_);
Element elt385_=el(_doc,"li");
Element elt386_=el(_doc,"c:message");
CustList<Attr> attrs247_=al(1);
attrs247_.add(at("value","msg_helpround,round_process_move_final_16_2_2"));
at(elt386_,attrs247_);
ad(elt385_,elt386_);
Element elt387_=el(_doc,"ul");
Element elt388_=el(_doc,"c:for");
CustList<Attr> attrs248_=al(2);
attrs248_.add(at("list","globalMovesStatus"));
attrs248_.add(at("var","a"));
at(elt388_,attrs248_);
Element elt389_=el(_doc,"li");
Element elt390_=el(_doc,"a");
CustList<Attr> attrs249_=al(1);
attrs249_.add(at("c:command","$clickGlobalMovesStatus({([a])})"));
at(elt390_,attrs249_);
Text txt47_=tx(_doc,"{getTrGlobalMovesStatus(([a]))}");
ad(elt390_,txt47_);
ad(elt389_,elt390_);
ad(elt388_,elt389_);
ad(elt387_,elt388_);
ad(elt385_,elt387_);
ad(elt384_,elt385_);
ad(elt376_,elt384_);
Element elt391_=el(_doc,"c:if");
CustList<Attr> attrs250_=al(1);
attrs250_.add(at("condition","!abilitiesPartStatus.isEmpty()"));
at(elt391_,attrs250_);
Element elt392_=el(_doc,"li");
Element elt393_=el(_doc,"c:message");
CustList<Attr> attrs251_=al(1);
attrs251_.add(at("value","msg_helpround,round_process_move_final_16_2_3"));
at(elt393_,attrs251_);
ad(elt392_,elt393_);
Element elt394_=el(_doc,"ul");
Element elt395_=el(_doc,"c:for");
CustList<Attr> attrs252_=al(2);
attrs252_.add(at("list","abilitiesPartStatus"));
attrs252_.add(at("var","a"));
at(elt395_,attrs252_);
Element elt396_=el(_doc,"li");
Element elt397_=el(_doc,"a");
CustList<Attr> attrs253_=al(1);
attrs253_.add(at("c:command","$clickAbilitiesPartStatus({([a])})"));
at(elt397_,attrs253_);
Text txt48_=tx(_doc,"{getTrAbilitiesPartStatus(([a]))}");
ad(elt397_,txt48_);
ad(elt396_,elt397_);
ad(elt395_,elt396_);
ad(elt394_,elt395_);
ad(elt392_,elt394_);
ad(elt391_,elt392_);
ad(elt376_,elt391_);
Element elt398_=el(_doc,"c:if");
CustList<Attr> attrs254_=al(1);
attrs254_.add(at("condition","immuStatusTeamMoveAny()"));
at(elt398_,attrs254_);
Element elt399_=el(_doc,"li");
Element elt400_=el(_doc,"c:message");
CustList<Attr> attrs255_=al(1);
attrs255_.add(at("value","msg_helpround,round_process_move_final_16_2_4"));
at(elt400_,attrs255_);
ad(elt399_,elt400_);
Element elt401_=el(_doc,"ul");
Element elt402_=el(_doc,"c:for");
CustList<Attr> attrs256_=al(2);
attrs256_.add(at("list","movesTeam"));
attrs256_.add(at("var","a"));
at(elt402_,attrs256_);
Element elt403_=el(_doc,"c:if");
CustList<Attr> attrs257_=al(1);
attrs257_.add(at("condition","immuStatusTeamMove(([a]))"));
at(elt403_,attrs257_);
Element elt404_=el(_doc,"li");
Element elt405_=el(_doc,"a");
CustList<Attr> attrs258_=al(1);
attrs258_.add(at("c:command","$clickMovesTeam({([a])})"));
at(elt405_,attrs258_);
Text txt49_=tx(_doc,"{getTrMovesTeam(([a]))}");
ad(elt405_,txt49_);
ad(elt404_,elt405_);
ad(elt403_,elt404_);
ad(elt402_,elt403_);
ad(elt401_,elt402_);
ad(elt399_,elt401_);
ad(elt398_,elt399_);
ad(elt376_,elt398_);
Element elt406_=el(_doc,"c:if");
CustList<Attr> attrs259_=al(1);
attrs259_.add(at("condition","!abilitiesFighterStatus.isEmpty()"));
at(elt406_,attrs259_);
Element elt407_=el(_doc,"li");
Element elt408_=el(_doc,"c:message");
CustList<Attr> attrs260_=al(1);
attrs260_.add(at("value","msg_helpround,round_process_move_final_16_2_5"));
at(elt408_,attrs260_);
ad(elt407_,elt408_);
Element elt409_=el(_doc,"ul");
Element elt410_=el(_doc,"c:for");
CustList<Attr> attrs261_=al(2);
attrs261_.add(at("list","abilitiesFighterStatus"));
attrs261_.add(at("var","a"));
at(elt410_,attrs261_);
Element elt411_=el(_doc,"li");
Element elt412_=el(_doc,"a");
CustList<Attr> attrs262_=al(1);
attrs262_.add(at("c:command","$clickAbilitiesFighterStatus({([a])})"));
at(elt412_,attrs262_);
Text txt50_=tx(_doc,"{getTrAbilitiesFighterStatus(([a]))}");
ad(elt412_,txt50_);
ad(elt411_,elt412_);
ad(elt410_,elt411_);
ad(elt409_,elt410_);
ad(elt407_,elt409_);
ad(elt406_,elt407_);
ad(elt376_,elt406_);
Element elt413_=el(_doc,"c:if");
CustList<Attr> attrs263_=al(1);
attrs263_.add(at("condition","!itemsFighterStatus.isEmpty()"));
at(elt413_,attrs263_);
Element elt414_=el(_doc,"li");
Element elt415_=el(_doc,"c:message");
CustList<Attr> attrs264_=al(1);
attrs264_.add(at("value","msg_helpround,round_process_move_final_16_2_6"));
at(elt415_,attrs264_);
ad(elt414_,elt415_);
Element elt416_=el(_doc,"ul");
Element elt417_=el(_doc,"c:for");
CustList<Attr> attrs265_=al(2);
attrs265_.add(at("list","itemsFighterStatus"));
attrs265_.add(at("var","a"));
at(elt417_,attrs265_);
Element elt418_=el(_doc,"li");
Element elt419_=el(_doc,"a");
CustList<Attr> attrs266_=al(1);
attrs266_.add(at("c:command","$clickItemsFighterStatus({([a])})"));
at(elt419_,attrs266_);
Text txt51_=tx(_doc,"{getTrItemsFighterStatus(([a]))}");
ad(elt419_,txt51_);
ad(elt418_,elt419_);
ad(elt417_,elt418_);
ad(elt416_,elt417_);
ad(elt414_,elt416_);
ad(elt413_,elt414_);
ad(elt376_,elt413_);
Element elt420_=el(_doc,"li");
Element elt421_=el(_doc,"c:message");
CustList<Attr> attrs267_=al(1);
attrs267_.add(at("value","msg_helpround,round_process_move_final_16_2_7"));
at(elt421_,attrs267_);
ad(elt420_,elt421_);
ad(elt376_,elt420_);
Element elt422_=el(_doc,"c:if");
CustList<Attr> attrs268_=al(1);
attrs268_.add(at("condition","!comboEvtStat.isEmpty()"));
at(elt422_,attrs268_);
Element elt423_=el(_doc,"li");
Element elt424_=el(_doc,"c:message");
CustList<Attr> attrs269_=al(1);
attrs269_.add(at("value","msg_helpround,round_process_move_final_16_2_8"));
at(elt424_,attrs269_);
ad(elt423_,elt424_);
Element elt425_=el(_doc,"ul");
Element elt426_=el(_doc,"c:for");
CustList<Attr> attrs270_=al(2);
attrs270_.add(at("list","comboEvtStat"));
attrs270_.add(at("var","a"));
at(elt426_,attrs270_);
Element elt427_=el(_doc,"li");
Element elt428_=el(_doc,"a");
CustList<Attr> attrs271_=al(1);
attrs271_.add(at("c:command","$clickComboEvtStat({([a])})"));
at(elt428_,attrs271_);
Text txt52_=tx(_doc,"{getTrComboEvtStat(([a]))}");
ad(elt428_,txt52_);
ad(elt427_,elt428_);
ad(elt426_,elt427_);
ad(elt425_,elt426_);
ad(elt423_,elt425_);
ad(elt422_,elt423_);
ad(elt376_,elt422_);
ad(_body,elt376_);
Element elt429_=el(_doc,"c:message");
CustList<Attr> attrs272_=al(1);
attrs272_.add(at("value","msg_helpround,round_process_move_final_17"));
at(elt429_,attrs272_);
ad(_body,elt429_);
Element elt430_=el(_doc,"ol");
Element elt431_=el(_doc,"li");
Element elt432_=el(_doc,"c:message");
CustList<Attr> attrs273_=al(1);
attrs273_.add(at("value","msg_helpround,round_process_move_final_18"));
at(elt432_,attrs273_);
ad(elt431_,elt432_);
ad(elt430_,elt431_);
Element elt433_=el(_doc,"li");
Element elt434_=el(_doc,"c:message");
CustList<Attr> attrs274_=al(1);
attrs274_.add(at("value","msg_helpround,round_process_move_final_19"));
at(elt434_,attrs274_);
ad(elt433_,elt434_);
ad(elt430_,elt433_);
Element elt435_=el(_doc,"li");
Element elt436_=el(_doc,"c:message");
CustList<Attr> attrs275_=al(1);
attrs275_.add(at("value","msg_helpround,round_process_move_final_20"));
at(elt436_,attrs275_);
ad(elt435_,elt436_);
ad(elt430_,elt435_);
Element elt437_=el(_doc,"li");
Element elt438_=el(_doc,"c:message");
CustList<Attr> attrs276_=al(1);
attrs276_.add(at("value","msg_helpround,round_process_move_final_20_0"));
at(elt438_,attrs276_);
ad(elt437_,elt438_);
Element elt439_=el(_doc,"c:for");
CustList<Attr> attrs277_=al(5);
attrs277_.add(at("key","d"));
attrs277_.add(at("map","lawsRates"));
attrs277_.add(at("value","l"));
attrs277_.add(at("keyClassName","java.lang.Object"));
attrs277_.add(at("varClassName","lse"));
at(elt439_,attrs277_);
Element elt440_=el(_doc,"ul");
Element elt441_=el(_doc,"li");
Text txt53_=tx(_doc,"{getTrLawRate(([d]))}");
ad(elt441_,txt53_);
Element elt442_=el(_doc,"br");
ad(elt441_,elt442_);
Element elt443_=el(_doc,"table");
Element elt444_=el(_doc,"thead");
Element elt445_=el(_doc,"tr");
Element elt446_=el(_doc,"th");
Element elt447_=el(_doc,"c:message");
CustList<Attr> attrs278_=al(1);
attrs278_.add(at("value","msg_helpround,round_process_move_final_20_1"));
at(elt447_,attrs278_);
ad(elt446_,elt447_);
ad(elt445_,elt446_);
Element elt448_=el(_doc,"th");
Element elt449_=el(_doc,"c:message");
CustList<Attr> attrs279_=al(1);
attrs279_.add(at("value","msg_helpround,round_process_move_final_20_2"));
at(elt449_,attrs279_);
ad(elt448_,elt449_);
ad(elt445_,elt448_);
ad(elt444_,elt445_);
ad(elt443_,elt444_);
Element elt450_=el(_doc,"tbody");
Element elt451_=el(_doc,"c:for");
CustList<Attr> attrs280_=al(5);
attrs280_.add(at("key","e"));
attrs280_.add(at("map","l"));
attrs280_.add(at("value","r"));
attrs280_.add(at("keyClassName","r"));
attrs280_.add(at("varClassName","r"));
at(elt451_,attrs280_);
Element elt452_=el(_doc,"tr");
Element elt453_=el(_doc,"td");
Text txt54_=tx(_doc,"{e}");
ad(elt453_,txt54_);
ad(elt452_,elt453_);
Element elt454_=el(_doc,"td");
Text txt55_=tx(_doc,"{r}");
ad(elt454_,txt55_);
ad(elt452_,elt454_);
ad(elt451_,elt452_);
ad(elt450_,elt451_);
ad(elt443_,elt450_);
ad(elt441_,elt443_);
ad(elt440_,elt441_);
ad(elt439_,elt440_);
ad(elt437_,elt439_);
ad(elt430_,elt437_);
Element elt455_=el(_doc,"li");
Element elt456_=el(_doc,"c:message");
CustList<Attr> attrs281_=al(1);
attrs281_.add(at("value","msg_helpround,round_process_move_final_21"));
at(elt456_,attrs281_);
ad(elt455_,elt456_);
ad(elt430_,elt455_);
Element elt457_=el(_doc,"c:if");
CustList<Attr> attrs282_=al(1);
attrs282_.add(at("condition","!movesProtAgainstKo.isEmpty()"));
at(elt457_,attrs282_);
Element elt458_=el(_doc,"li");
Element elt459_=el(_doc,"c:message");
CustList<Attr> attrs283_=al(1);
attrs283_.add(at("value","msg_helpround,round_process_move_final_22"));
at(elt459_,attrs283_);
ad(elt458_,elt459_);
Element elt460_=el(_doc,"ul");
Element elt461_=el(_doc,"c:for");
CustList<Attr> attrs284_=al(2);
attrs284_.add(at("list","movesProtAgainstKo"));
attrs284_.add(at("var","a"));
at(elt461_,attrs284_);
Element elt462_=el(_doc,"li");
Element elt463_=el(_doc,"a");
CustList<Attr> attrs285_=al(1);
attrs285_.add(at("c:command","$clickMovesProtAgainstKo({([a])})"));
at(elt463_,attrs285_);
Text txt56_=tx(_doc,"{getTrMovesProtAgainstKo(([a]))}");
ad(elt463_,txt56_);
ad(elt462_,elt463_);
ad(elt461_,elt462_);
ad(elt460_,elt461_);
ad(elt458_,elt460_);
Element elt464_=el(_doc,"c:message");
CustList<Attr> attrs286_=al(2);
attrs286_.add(at("quoted",""));
attrs286_.add(at("value","msg_helpround,round_process_move_final_22_1"));
at(elt464_,attrs286_);
Element elt465_=el(_doc,"param");
CustList<Attr> attrs287_=al(1);
attrs287_.add(at("value","minHpNotKo"));
at(elt465_,attrs287_);
ad(elt464_,elt465_);
ad(elt458_,elt464_);
ad(elt457_,elt458_);
ad(elt430_,elt457_);
Element elt466_=el(_doc,"c:if");
CustList<Attr> attrs288_=al(1);
attrs288_.add(at("condition","!itemsProtAgainstKo.isEmpty()"));
at(elt466_,attrs288_);
Element elt467_=el(_doc,"li");
Element elt468_=el(_doc,"c:message");
CustList<Attr> attrs289_=al(1);
attrs289_.add(at("value","msg_helpround,round_process_move_final_23"));
at(elt468_,attrs289_);
ad(elt467_,elt468_);
Element elt469_=el(_doc,"ul");
Element elt470_=el(_doc,"c:for");
CustList<Attr> attrs290_=al(2);
attrs290_.add(at("list","itemsProtAgainstKo"));
attrs290_.add(at("var","a"));
at(elt470_,attrs290_);
Element elt471_=el(_doc,"li");
Element elt472_=el(_doc,"a");
CustList<Attr> attrs291_=al(1);
attrs291_.add(at("c:command","$clickItemsProtAgainstKo({([a])})"));
at(elt472_,attrs291_);
Text txt57_=tx(_doc,"{getTrItemsProtAgainstKo(([a]))}");
ad(elt472_,txt57_);
ad(elt471_,elt472_);
ad(elt470_,elt471_);
ad(elt469_,elt470_);
ad(elt467_,elt469_);
Element elt473_=el(_doc,"c:message");
CustList<Attr> attrs292_=al(2);
attrs292_.add(at("quoted",""));
attrs292_.add(at("value","msg_helpround,round_process_move_final_23_1"));
at(elt473_,attrs292_);
Element elt474_=el(_doc,"param");
CustList<Attr> attrs293_=al(1);
attrs293_.add(at("value","minHpNotKo"));
at(elt474_,attrs293_);
ad(elt473_,elt474_);
ad(elt467_,elt473_);
ad(elt466_,elt467_);
ad(elt430_,elt466_);
Element elt475_=el(_doc,"c:if");
CustList<Attr> attrs294_=al(1);
attrs294_.add(at("condition","!movesCannotKo.isEmpty()"));
at(elt475_,attrs294_);
Element elt476_=el(_doc,"li");
Element elt477_=el(_doc,"c:message");
CustList<Attr> attrs295_=al(1);
attrs295_.add(at("value","msg_helpround,round_process_move_final_24"));
at(elt477_,attrs295_);
ad(elt476_,elt477_);
Element elt478_=el(_doc,"ul");
Element elt479_=el(_doc,"c:for");
CustList<Attr> attrs296_=al(2);
attrs296_.add(at("list","movesCannotKo"));
attrs296_.add(at("var","a"));
at(elt479_,attrs296_);
Element elt480_=el(_doc,"li");
Element elt481_=el(_doc,"a");
CustList<Attr> attrs297_=al(1);
attrs297_.add(at("c:command","$clickMovesCannotKo({([a])})"));
at(elt481_,attrs297_);
Text txt58_=tx(_doc,"{getTrMovesCannotKo(([a]))}");
ad(elt481_,txt58_);
ad(elt480_,elt481_);
ad(elt479_,elt480_);
ad(elt478_,elt479_);
ad(elt476_,elt478_);
Element elt482_=el(_doc,"c:message");
CustList<Attr> attrs298_=al(2);
attrs298_.add(at("quoted",""));
attrs298_.add(at("value","msg_helpround,round_process_move_final_24_1"));
at(elt482_,attrs298_);
Element elt483_=el(_doc,"param");
CustList<Attr> attrs299_=al(1);
attrs299_.add(at("value","minHpNotKo"));
at(elt483_,attrs299_);
ad(elt482_,elt483_);
ad(elt476_,elt482_);
ad(elt475_,elt476_);
ad(elt430_,elt475_);
Element elt484_=el(_doc,"c:if");
CustList<Attr> attrs300_=al(1);
attrs300_.add(at("condition","!itemsAbs.isEmpty()"));
at(elt484_,attrs300_);
Element elt485_=el(_doc,"li");
Element elt486_=el(_doc,"c:message");
CustList<Attr> attrs301_=al(1);
attrs301_.add(at("value","msg_helpround,round_process_move_final_25"));
at(elt486_,attrs301_);
ad(elt485_,elt486_);
Element elt487_=el(_doc,"ul");
Element elt488_=el(_doc,"c:for");
CustList<Attr> attrs302_=al(2);
attrs302_.add(at("list","itemsAbs"));
attrs302_.add(at("var","a"));
at(elt488_,attrs302_);
Element elt489_=el(_doc,"li");
Element elt490_=el(_doc,"a");
CustList<Attr> attrs303_=al(1);
attrs303_.add(at("c:command","$clickItemsAbs({([a])})"));
at(elt490_,attrs303_);
Text txt59_=tx(_doc,"{getTrItemsAbs(([a]))}");
ad(elt490_,txt59_);
ad(elt489_,elt490_);
ad(elt488_,elt489_);
ad(elt487_,elt488_);
ad(elt485_,elt487_);
ad(elt484_,elt485_);
ad(elt430_,elt484_);
Element elt491_=el(_doc,"c:if");
CustList<Attr> attrs304_=al(1);
attrs304_.add(at("condition","!abilitiesRevAbs.isEmpty()"));
at(elt491_,attrs304_);
Element elt492_=el(_doc,"li");
Element elt493_=el(_doc,"c:message");
CustList<Attr> attrs305_=al(1);
attrs305_.add(at("value","msg_helpround,round_process_move_final_26"));
at(elt493_,attrs305_);
ad(elt492_,elt493_);
Element elt494_=el(_doc,"ul");
Element elt495_=el(_doc,"c:for");
CustList<Attr> attrs306_=al(2);
attrs306_.add(at("list","abilitiesRevAbs"));
attrs306_.add(at("var","a"));
at(elt495_,attrs306_);
Element elt496_=el(_doc,"li");
Element elt497_=el(_doc,"a");
CustList<Attr> attrs307_=al(1);
attrs307_.add(at("c:command","$clickAbilitiesRevAbs({([a])})"));
at(elt497_,attrs307_);
Text txt60_=tx(_doc,"{getTrAbilitiesRevAbs(([a]))}");
ad(elt497_,txt60_);
ad(elt496_,elt497_);
ad(elt495_,elt496_);
ad(elt494_,elt495_);
ad(elt492_,elt494_);
ad(elt491_,elt492_);
ad(elt430_,elt491_);
Element elt498_=el(_doc,"c:if");
CustList<Attr> attrs308_=al(1);
attrs308_.add(at("condition","!abilitiesDamageStatis.isEmpty()"));
at(elt498_,attrs308_);
Element elt499_=el(_doc,"li");
Element elt500_=el(_doc,"c:message");
CustList<Attr> attrs309_=al(1);
attrs309_.add(at("value","msg_helpround,round_process_move_final_27"));
at(elt500_,attrs309_);
ad(elt499_,elt500_);
Element elt501_=el(_doc,"ul");
Element elt502_=el(_doc,"c:for");
CustList<Attr> attrs310_=al(2);
attrs310_.add(at("list","abilitiesDamageStatis"));
attrs310_.add(at("var","a"));
at(elt502_,attrs310_);
Element elt503_=el(_doc,"li");
Element elt504_=el(_doc,"a");
CustList<Attr> attrs311_=al(1);
attrs311_.add(at("c:command","$clickAbilitiesDamageStatis({([a])})"));
at(elt504_,attrs311_);
Text txt61_=tx(_doc,"{getTrAbilitiesDamageStatis(([a]))}");
ad(elt504_,txt61_);
ad(elt503_,elt504_);
ad(elt502_,elt503_);
ad(elt501_,elt502_);
ad(elt499_,elt501_);
ad(elt498_,elt499_);
ad(elt430_,elt498_);
Element elt505_=el(_doc,"c:if");
CustList<Attr> attrs312_=al(1);
attrs312_.add(at("condition","!abilitiesChangingTypesDamage.isEmpty()"));
at(elt505_,attrs312_);
Element elt506_=el(_doc,"li");
Element elt507_=el(_doc,"c:message");
CustList<Attr> attrs313_=al(1);
attrs313_.add(at("value","msg_helpround,round_process_move_final_28"));
at(elt507_,attrs313_);
ad(elt506_,elt507_);
Element elt508_=el(_doc,"ul");
Element elt509_=el(_doc,"c:for");
CustList<Attr> attrs314_=al(2);
attrs314_.add(at("list","abilitiesChangingTypesDamage"));
attrs314_.add(at("var","a"));
at(elt509_,attrs314_);
Element elt510_=el(_doc,"li");
Element elt511_=el(_doc,"a");
CustList<Attr> attrs315_=al(1);
attrs315_.add(at("c:command","$clickAbilitiesChangingTypesDamage({([a])})"));
at(elt511_,attrs315_);
Text txt62_=tx(_doc,"{getTrAbilitiesChangingTypesDamage(([a]))}");
ad(elt511_,txt62_);
ad(elt510_,elt511_);
ad(elt509_,elt510_);
ad(elt508_,elt509_);
ad(elt506_,elt508_);
ad(elt505_,elt506_);
ad(elt430_,elt505_);
Element elt512_=el(_doc,"c:if");
CustList<Attr> attrs316_=al(1);
attrs316_.add(at("condition","!abilitiesTakingItem.isEmpty()"));
at(elt512_,attrs316_);
Element elt513_=el(_doc,"li");
Element elt514_=el(_doc,"c:message");
CustList<Attr> attrs317_=al(1);
attrs317_.add(at("value","msg_helpround,round_process_move_final_29"));
at(elt514_,attrs317_);
ad(elt513_,elt514_);
Element elt515_=el(_doc,"ul");
Element elt516_=el(_doc,"c:for");
CustList<Attr> attrs318_=al(2);
attrs318_.add(at("list","abilitiesTakingItem"));
attrs318_.add(at("var","a"));
at(elt516_,attrs318_);
Element elt517_=el(_doc,"li");
Element elt518_=el(_doc,"a");
CustList<Attr> attrs319_=al(1);
attrs319_.add(at("c:command","$clickAbilitiesTakingItem({([a])})"));
at(elt518_,attrs319_);
Text txt63_=tx(_doc,"{getTrAbilitiesTakingItem(([a]))}");
ad(elt518_,txt63_);
ad(elt517_,elt518_);
ad(elt516_,elt517_);
ad(elt515_,elt516_);
ad(elt513_,elt515_);
ad(elt512_,elt513_);
ad(elt430_,elt512_);
Element elt519_=el(_doc,"c:if");
CustList<Attr> attrs320_=al(1);
attrs320_.add(at("condition","!abilitiesStatisVarUser.isEmpty()"));
at(elt519_,attrs320_);
Element elt520_=el(_doc,"li");
Element elt521_=el(_doc,"c:message");
CustList<Attr> attrs321_=al(1);
attrs321_.add(at("value","msg_helpround,round_process_move_final_30"));
at(elt521_,attrs321_);
ad(elt520_,elt521_);
Element elt522_=el(_doc,"ul");
Element elt523_=el(_doc,"c:for");
CustList<Attr> attrs322_=al(2);
attrs322_.add(at("list","abilitiesStatisVarUser"));
attrs322_.add(at("var","a"));
at(elt523_,attrs322_);
Element elt524_=el(_doc,"li");
Element elt525_=el(_doc,"a");
CustList<Attr> attrs323_=al(1);
attrs323_.add(at("c:command","$clickAbilitiesStatisVarUser({([a])})"));
at(elt525_,attrs323_);
Text txt64_=tx(_doc,"{getTrAbilitiesStatisVarUser(([a]))}");
ad(elt525_,txt64_);
ad(elt524_,elt525_);
ad(elt523_,elt524_);
ad(elt522_,elt523_);
ad(elt520_,elt522_);
ad(elt519_,elt520_);
ad(elt430_,elt519_);
Element elt526_=el(_doc,"c:if");
CustList<Attr> attrs324_=al(1);
attrs324_.add(at("condition","!abilitiesStatus.isEmpty()"));
at(elt526_,attrs324_);
Element elt527_=el(_doc,"li");
Element elt528_=el(_doc,"c:message");
CustList<Attr> attrs325_=al(1);
attrs325_.add(at("value","msg_helpround,round_process_move_final_31"));
at(elt528_,attrs325_);
ad(elt527_,elt528_);
Element elt529_=el(_doc,"ul");
Element elt530_=el(_doc,"c:for");
CustList<Attr> attrs326_=al(2);
attrs326_.add(at("list","abilitiesStatus"));
attrs326_.add(at("var","a"));
at(elt530_,attrs326_);
Element elt531_=el(_doc,"li");
Element elt532_=el(_doc,"a");
CustList<Attr> attrs327_=al(1);
attrs327_.add(at("c:command","$clickAbilitiesStatus({([a])})"));
at(elt532_,attrs327_);
Text txt65_=tx(_doc,"{getTrAbilitiesStatus(([a]))}");
ad(elt532_,txt65_);
ad(elt531_,elt532_);
ad(elt530_,elt531_);
ad(elt529_,elt530_);
ad(elt527_,elt529_);
ad(elt526_,elt527_);
ad(elt430_,elt526_);
Element elt533_=el(_doc,"c:if");
CustList<Attr> attrs328_=al(1);
attrs328_.add(at("condition","!abilitiesCopyAb.isEmpty()"));
at(elt533_,attrs328_);
Element elt534_=el(_doc,"li");
Element elt535_=el(_doc,"c:message");
CustList<Attr> attrs329_=al(1);
attrs329_.add(at("value","msg_helpround,round_process_move_final_32"));
at(elt535_,attrs329_);
ad(elt534_,elt535_);
Element elt536_=el(_doc,"ul");
Element elt537_=el(_doc,"c:for");
CustList<Attr> attrs330_=al(2);
attrs330_.add(at("list","abilitiesCopyAb"));
attrs330_.add(at("var","a"));
at(elt537_,attrs330_);
Element elt538_=el(_doc,"li");
Element elt539_=el(_doc,"a");
CustList<Attr> attrs331_=al(1);
attrs331_.add(at("c:command","$clickAbilitiesCopyAb({([a])})"));
at(elt539_,attrs331_);
Text txt66_=tx(_doc,"{getTrAbilitiesCopyAb(([a]))}");
ad(elt539_,txt66_);
ad(elt538_,elt539_);
ad(elt537_,elt538_);
ad(elt536_,elt537_);
ad(elt534_,elt536_);
ad(elt533_,elt534_);
ad(elt430_,elt533_);
Element elt540_=el(_doc,"c:if");
CustList<Attr> attrs332_=al(1);
attrs332_.add(at("condition","!recoilItems.isEmpty()"));
at(elt540_,attrs332_);
Element elt541_=el(_doc,"li");
Element elt542_=el(_doc,"c:message");
CustList<Attr> attrs333_=al(1);
attrs333_.add(at("value","msg_helpround,round_process_move_final_33"));
at(elt542_,attrs333_);
ad(elt541_,elt542_);
Element elt543_=el(_doc,"ul");
Element elt544_=el(_doc,"c:for");
CustList<Attr> attrs334_=al(2);
attrs334_.add(at("list","recoilItems"));
attrs334_.add(at("var","a"));
at(elt544_,attrs334_);
Element elt545_=el(_doc,"li");
Element elt546_=el(_doc,"a");
CustList<Attr> attrs335_=al(1);
attrs335_.add(at("c:command","$clickRecoilItems({([a])})"));
at(elt546_,attrs335_);
Text txt67_=tx(_doc,"{getTrRecoilItems(([a]))}");
ad(elt546_,txt67_);
ad(elt545_,elt546_);
ad(elt544_,elt545_);
ad(elt543_,elt544_);
ad(elt541_,elt543_);
ad(elt540_,elt541_);
ad(elt430_,elt540_);
Element elt547_=el(_doc,"c:if");
CustList<Attr> attrs336_=al(1);
attrs336_.add(at("condition","!recoilAbilities.isEmpty()"));
at(elt547_,attrs336_);
Element elt548_=el(_doc,"li");
Element elt549_=el(_doc,"c:message");
CustList<Attr> attrs337_=al(1);
attrs337_.add(at("value","msg_helpround,round_process_move_final_34"));
at(elt549_,attrs337_);
ad(elt548_,elt549_);
Element elt550_=el(_doc,"ul");
Element elt551_=el(_doc,"c:for");
CustList<Attr> attrs338_=al(2);
attrs338_.add(at("list","recoilAbilities"));
attrs338_.add(at("var","a"));
at(elt551_,attrs338_);
Element elt552_=el(_doc,"li");
Element elt553_=el(_doc,"a");
CustList<Attr> attrs339_=al(1);
attrs339_.add(at("c:command","$clickRecoilAbilities({([a])})"));
at(elt553_,attrs339_);
Text txt68_=tx(_doc,"{getTrRecoilAbilities(([a]))}");
ad(elt553_,txt68_);
ad(elt552_,elt553_);
ad(elt551_,elt552_);
ad(elt550_,elt551_);
ad(elt548_,elt550_);
ad(elt547_,elt548_);
ad(elt430_,elt547_);
Element elt554_=el(_doc,"c:if");
CustList<Attr> attrs340_=al(1);
attrs340_.add(at("condition","!abilitiesKoTarget.isEmpty()"));
at(elt554_,attrs340_);
Element elt555_=el(_doc,"li");
Element elt556_=el(_doc,"c:message");
CustList<Attr> attrs341_=al(1);
attrs341_.add(at("value","msg_helpround,round_process_move_final_35"));
at(elt556_,attrs341_);
ad(elt555_,elt556_);
Element elt557_=el(_doc,"ul");
Element elt558_=el(_doc,"c:for");
CustList<Attr> attrs342_=al(2);
attrs342_.add(at("list","abilitiesKoTarget"));
attrs342_.add(at("var","a"));
at(elt558_,attrs342_);
Element elt559_=el(_doc,"li");
Element elt560_=el(_doc,"a");
CustList<Attr> attrs343_=al(1);
attrs343_.add(at("c:command","$clickAbilitiesKoTarget({([a])})"));
at(elt560_,attrs343_);
Text txt69_=tx(_doc,"{getTrAbilitiesKoTarget(([a]))}");
ad(elt560_,txt69_);
ad(elt559_,elt560_);
ad(elt558_,elt559_);
ad(elt557_,elt558_);
ad(elt555_,elt557_);
ad(elt554_,elt555_);
ad(elt430_,elt554_);
Element elt561_=el(_doc,"c:if");
CustList<Attr> attrs344_=al(1);
attrs344_.add(at("condition","!movesKoTarget.isEmpty()"));
at(elt561_,attrs344_);
Element elt562_=el(_doc,"li");
Element elt563_=el(_doc,"c:message");
CustList<Attr> attrs345_=al(1);
attrs345_.add(at("value","msg_helpround,round_process_move_final_36"));
at(elt563_,attrs345_);
ad(elt562_,elt563_);
Element elt564_=el(_doc,"ul");
Element elt565_=el(_doc,"c:for");
CustList<Attr> attrs346_=al(2);
attrs346_.add(at("list","movesKoTarget"));
attrs346_.add(at("var","a"));
at(elt565_,attrs346_);
Element elt566_=el(_doc,"li");
Element elt567_=el(_doc,"a");
CustList<Attr> attrs347_=al(1);
attrs347_.add(at("c:command","$clickMovesKoTarget({([a])})"));
at(elt567_,attrs347_);
Text txt70_=tx(_doc,"{getTrMovesKoTarget(([a]))}");
ad(elt567_,txt70_);
ad(elt566_,elt567_);
ad(elt565_,elt566_);
ad(elt564_,elt565_);
ad(elt562_,elt564_);
ad(elt561_,elt562_);
ad(elt430_,elt561_);
Element elt568_=el(_doc,"c:if");
CustList<Attr> attrs348_=al(1);
attrs348_.add(at("condition","!berryUser.isEmpty()"));
at(elt568_,attrs348_);
Element elt569_=el(_doc,"li");
Element elt570_=el(_doc,"c:message");
CustList<Attr> attrs349_=al(1);
attrs349_.add(at("value","msg_helpround,round_process_move_final_37"));
at(elt570_,attrs349_);
ad(elt569_,elt570_);
Element elt571_=el(_doc,"ul");
Element elt572_=el(_doc,"c:for");
CustList<Attr> attrs350_=al(2);
attrs350_.add(at("list","berryUser"));
attrs350_.add(at("var","a"));
at(elt572_,attrs350_);
Element elt573_=el(_doc,"li");
Element elt574_=el(_doc,"a");
CustList<Attr> attrs351_=al(1);
attrs351_.add(at("c:command","$clickBerryUser({([a])})"));
at(elt574_,attrs351_);
Text txt71_=tx(_doc,"{getTrBerryUser(([a]))}");
ad(elt574_,txt71_);
ad(elt573_,elt574_);
ad(elt572_,elt573_);
ad(elt571_,elt572_);
ad(elt569_,elt571_);
ad(elt568_,elt569_);
ad(elt430_,elt568_);
Element elt575_=el(_doc,"c:if");
CustList<Attr> attrs352_=al(1);
attrs352_.add(at("condition","!berryTarget.isEmpty()"));
at(elt575_,attrs352_);
Element elt576_=el(_doc,"li");
Element elt577_=el(_doc,"c:message");
CustList<Attr> attrs353_=al(1);
attrs353_.add(at("value","msg_helpround,round_process_move_final_38"));
at(elt577_,attrs353_);
ad(elt576_,elt577_);
Element elt578_=el(_doc,"ul");
Element elt579_=el(_doc,"c:for");
CustList<Attr> attrs354_=al(2);
attrs354_.add(at("list","berryTarget"));
attrs354_.add(at("var","a"));
at(elt579_,attrs354_);
Element elt580_=el(_doc,"li");
Element elt581_=el(_doc,"a");
CustList<Attr> attrs355_=al(1);
attrs355_.add(at("c:command","$clickBerryTarget({([a])})"));
at(elt581_,attrs355_);
Text txt72_=tx(_doc,"{getTrBerryTarget(([a]))}");
ad(elt581_,txt72_);
ad(elt580_,elt581_);
ad(elt579_,elt580_);
ad(elt578_,elt579_);
ad(elt576_,elt578_);
ad(elt575_,elt576_);
ad(elt430_,elt575_);
ad(_body,elt430_);
Element elt582_=el(_doc,"c:message");
CustList<Attr> attrs356_=al(1);
attrs356_.add(at("value","msg_helpround,round_process_move_final_39"));
at(elt582_,attrs356_);
ad(_body,elt582_);
Element elt583_=el(_doc,"h3");
Element elt584_=el(_doc,"c:message");
CustList<Attr> attrs357_=al(1);
attrs357_.add(at("value","msg_helpround,round_process_move_end"));
at(elt584_,attrs357_);
ad(elt583_,elt584_);
ad(_body,elt583_);
Element elt585_=el(_doc,"c:message");
CustList<Attr> attrs358_=al(1);
attrs358_.add(at("value","msg_helpround,round_process_move_end_1"));
at(elt585_,attrs358_);
ad(_body,elt585_);
Element elt586_=el(_doc,"c:message");
CustList<Attr> attrs359_=al(1);
attrs359_.add(at("value","msg_helpround,round_process_move_end_1_1"));
at(elt586_,attrs359_);
ad(_body,elt586_);
Element elt587_=el(_doc,"c:if");
CustList<Attr> attrs360_=al(1);
attrs360_.add(at("condition","!abilitiesEndRound.isEmpty()"));
at(elt587_,attrs360_);
Element elt588_=el(_doc,"c:message");
CustList<Attr> attrs361_=al(1);
attrs361_.add(at("value","msg_helpround,round_process_move_end_2"));
at(elt588_,attrs361_);
ad(elt587_,elt588_);
Element elt589_=el(_doc,"ul");
Element elt590_=el(_doc,"c:for");
CustList<Attr> attrs362_=al(2);
attrs362_.add(at("list","abilitiesEndRound"));
attrs362_.add(at("var","a"));
at(elt590_,attrs362_);
Element elt591_=el(_doc,"li");
Element elt592_=el(_doc,"a");
CustList<Attr> attrs363_=al(1);
attrs363_.add(at("c:command","$clickAbilitiesEndRound({([a])})"));
at(elt592_,attrs363_);
Text txt73_=tx(_doc,"{getTrAbilitiesEndRound(([a]))}");
ad(elt592_,txt73_);
ad(elt591_,elt592_);
ad(elt590_,elt591_);
ad(elt589_,elt590_);
ad(elt587_,elt589_);
ad(_body,elt587_);
Element elt593_=el(_doc,"c:if");
CustList<Attr> attrs364_=al(1);
attrs364_.add(at("condition","!berryEndRound.isEmpty()"));
at(elt593_,attrs364_);
Element elt594_=el(_doc,"c:message");
CustList<Attr> attrs365_=al(1);
attrs365_.add(at("value","msg_helpround,round_process_move_end_3"));
at(elt594_,attrs365_);
ad(elt593_,elt594_);
Element elt595_=el(_doc,"ul");
Element elt596_=el(_doc,"c:for");
CustList<Attr> attrs366_=al(2);
attrs366_.add(at("list","berryEndRound"));
attrs366_.add(at("var","a"));
at(elt596_,attrs366_);
Element elt597_=el(_doc,"li");
Element elt598_=el(_doc,"a");
CustList<Attr> attrs367_=al(1);
attrs367_.add(at("c:command","$clickBerryEndRound({([a])})"));
at(elt598_,attrs367_);
Text txt74_=tx(_doc,"{getTrBerryEndRound(([a]))}");
ad(elt598_,txt74_);
ad(elt597_,elt598_);
ad(elt596_,elt597_);
ad(elt595_,elt596_);
ad(elt593_,elt595_);
ad(_body,elt593_);
Element elt599_=el(_doc,"c:if");
CustList<Attr> attrs368_=al(1);
attrs368_.add(at("condition","!substitutingMoves.isEmpty()"));
at(elt599_,attrs368_);
Element elt600_=el(_doc,"h2");
Element elt601_=el(_doc,"c:message");
CustList<Attr> attrs369_=al(1);
attrs369_.add(at("value","msg_helpround,events_after"));
at(elt601_,attrs369_);
ad(elt600_,elt601_);
ad(elt599_,elt600_);
Element elt602_=el(_doc,"c:message");
CustList<Attr> attrs370_=al(1);
attrs370_.add(at("value","msg_helpround,events_after_1"));
at(elt602_,attrs370_);
ad(elt599_,elt602_);
ad(_body,elt599_);
Element elt603_=el(_doc,"h2");
Element elt604_=el(_doc,"c:message");
CustList<Attr> attrs371_=al(1);
attrs371_.add(at("value","msg_helpround,events_between_user_round"));
at(elt604_,attrs371_);
ad(elt603_,elt604_);
ad(_body,elt603_);
Element elt605_=el(_doc,"c:if");
CustList<Attr> attrs372_=al(1);
attrs372_.add(at("condition","attackFirst()"));
at(elt605_,attrs372_);
Element elt606_=el(_doc,"c:message");
CustList<Attr> attrs373_=al(1);
attrs373_.add(at("value","msg_helpround,events_between_user_round_1"));
at(elt606_,attrs373_);
ad(elt605_,elt606_);
Element elt607_=el(_doc,"ul");
Element elt608_=el(_doc,"c:for");
CustList<Attr> attrs374_=al(2);
attrs374_.add(at("list","movesChangingAttOrder"));
attrs374_.add(at("var","a"));
at(elt608_,attrs374_);
Element elt609_=el(_doc,"c:if");
CustList<Attr> attrs375_=al(1);
attrs375_.add(at("condition","!attackLast(([a]))"));
at(elt609_,attrs375_);
Element elt610_=el(_doc,"li");
Element elt611_=el(_doc,"a");
CustList<Attr> attrs376_=al(1);
attrs376_.add(at("c:command","$clickMovesChangingAttOrder({([a])})"));
at(elt611_,attrs376_);
Text txt75_=tx(_doc,"{getTrMovesChangingAttOrder(([a]))}");
ad(elt611_,txt75_);
ad(elt610_,elt611_);
ad(elt609_,elt610_);
ad(elt608_,elt609_);
ad(elt607_,elt608_);
ad(elt605_,elt607_);
Element elt612_=el(_doc,"c:message");
CustList<Attr> attrs377_=al(1);
attrs377_.add(at("value","msg_helpround,events_between_user_round_2"));
at(elt612_,attrs377_);
ad(elt605_,elt612_);
ad(_body,elt605_);
Element elt613_=el(_doc,"c:if");
CustList<Attr> attrs378_=al(1);
attrs378_.add(at("condition","attackLastAny()"));
at(elt613_,attrs378_);
Element elt614_=el(_doc,"c:message");
CustList<Attr> attrs379_=al(1);
attrs379_.add(at("value","msg_helpround,events_between_user_round_3"));
at(elt614_,attrs379_);
ad(elt613_,elt614_);
Element elt615_=el(_doc,"ul");
Element elt616_=el(_doc,"c:for");
CustList<Attr> attrs380_=al(2);
attrs380_.add(at("list","movesChangingAttOrder"));
attrs380_.add(at("var","a"));
at(elt616_,attrs380_);
Element elt617_=el(_doc,"c:if");
CustList<Attr> attrs381_=al(1);
attrs381_.add(at("condition","attackLast(([a]))"));
at(elt617_,attrs381_);
Element elt618_=el(_doc,"li");
Element elt619_=el(_doc,"a");
CustList<Attr> attrs382_=al(1);
attrs382_.add(at("c:command","$clickMovesChangingAttOrder({([a])})"));
at(elt619_,attrs382_);
Text txt76_=tx(_doc,"{getTrMovesChangingAttOrder(([a]))}");
ad(elt619_,txt76_);
ad(elt618_,elt619_);
ad(elt617_,elt618_);
ad(elt616_,elt617_);
ad(elt615_,elt616_);
ad(elt613_,elt615_);
Element elt620_=el(_doc,"c:message");
CustList<Attr> attrs383_=al(1);
attrs383_.add(at("value","msg_helpround,events_between_user_round_4"));
at(elt620_,attrs383_);
ad(elt613_,elt620_);
ad(_body,elt613_);
}
static void build5(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,end_round"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,end_round_see"));
at(elt2_,attrs1_);
ad(_body,elt2_);
}
static void build6(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,win_exp"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,win_exp_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"ul");
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,win_exp_1_1"));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,"li");
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,win_exp_1_2"));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt3_,elt6_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,win_exp_1_3"));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt3_,elt8_);
ad(_body,elt3_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,win_exp_2"));
at(elt10_,attrs5_);
ad(_body,elt10_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,win_exp_2_0"));
at(elt11_,attrs6_);
ad(_body,elt11_);
Element elt12_=el(_doc,"table");
Element elt13_=el(_doc,"thead");
Element elt14_=el(_doc,"tr");
Element elt15_=el(_doc,"th");
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,win_exp_2_1"));
at(elt16_,attrs7_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
Element elt17_=el(_doc,"th");
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,win_exp_2_2"));
at(elt18_,attrs8_);
ad(elt17_,elt18_);
ad(elt14_,elt17_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
Element elt19_=el(_doc,"tbody");
Element elt20_=el(_doc,"c:for");
CustList<Attr> attrs9_=al(5);
attrs9_.add(at("key","d"));
attrs9_.add(at("map","rates"));
attrs9_.add(at("value","f"));
attrs9_.add(at("keyClassName","java.lang.Object"));
attrs9_.add(at("varClassName","java.lang.String"));
at(elt20_,attrs9_);
Element elt21_=el(_doc,"tr");
Element elt22_=el(_doc,"td");
Text txt0_=tx(_doc,"{getTrDifficulty(([d]))}");
ad(elt22_,txt0_);
ad(elt21_,elt22_);
Element elt23_=el(_doc,"td");
Text txt1_=tx(_doc,"{f}");
ad(elt23_,txt1_);
ad(elt21_,elt23_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt12_,elt19_);
ad(_body,elt12_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!varRates.isEmpty()"));
at(elt24_,attrs10_);
Element elt25_=el(_doc,"ul");
Element elt26_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(5);
attrs11_.add(at("key","c"));
attrs11_.add(at("map","varRates"));
attrs11_.add(at("value","r"));
attrs11_.add(at("keyClassName","java.lang.String"));
attrs11_.add(at("varClassName","java.lang.String"));
at(elt26_,attrs11_);
Element elt27_=el(_doc,"li");
Text txt2_=tx(_doc,"{c} :");
ad(elt27_,txt2_);
Element elt28_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(2);
attrs12_.add(at("quoted",""));
attrs12_.add(at("value","msg_helpround,formula"));
at(elt28_,attrs12_);
Element elt29_=el(_doc,"param");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","r"));
at(elt29_,attrs13_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(_body,elt24_);
Element elt30_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,win_exp_3"));
at(elt30_,attrs14_);
ad(_body,elt30_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,win_exp_4"));
at(elt31_,attrs15_);
Element elt32_=el(_doc,"param");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","wonHappinessPointsLevel"));
at(elt32_,attrs16_);
ad(elt31_,elt32_);
ad(_body,elt31_);
}
static void build7(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,end_round_prop"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,end_round_prop_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"ol");
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,end_round_prop_1_1"));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,"li");
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,end_round_prop_1_2"));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
ad(elt3_,elt6_);
ad(_body,elt3_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,end_round_prop_2"));
at(elt8_,attrs4_);
ad(_body,elt8_);
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,end_round_prop_2_1"));
at(elt9_,attrs5_);
ad(_body,elt9_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,end_round_prop_2_2"));
at(elt10_,attrs6_);
ad(_body,elt10_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,end_round_prop_3"));
at(elt11_,attrs7_);
Element elt12_=el(_doc,"param");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","happinessPoints"));
at(elt12_,attrs8_);
ad(elt11_,elt12_);
ad(_body,elt11_);
}
static void build8(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,end_round_substituting"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,end_round_substituting_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,end_round_substituting_2"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,end_round_substituting_3"));
at(elt4_,attrs3_);
ad(_body,elt4_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,end_round_substituting_4"));
at(elt5_,attrs4_);
ad(_body,elt5_);
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,end_round_substituting_5"));
at(elt6_,attrs5_);
ad(_body,elt6_);
}
static void build9(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_0"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_0_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_0_1_1"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"ul");
Element elt5_=el(_doc,"li");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,round_process_add_on_0_1_2"));
at(elt6_,attrs3_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,round_process_add_on_0_1_3"));
at(elt8_,attrs4_);
ad(elt7_,elt8_);
ad(elt4_,elt7_);
Element elt9_=el(_doc,"li");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,round_process_add_on_0_1_4"));
at(elt10_,attrs5_);
ad(elt9_,elt10_);
ad(elt4_,elt9_);
Element elt11_=el(_doc,"li");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,round_process_add_on_0_1_5"));
at(elt12_,attrs6_);
ad(elt11_,elt12_);
ad(elt4_,elt11_);
ad(_body,elt4_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_0_2"));
at(elt13_,attrs7_);
ad(_body,elt13_);
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,round_process_add_on_0_2_1"));
at(elt14_,attrs8_);
ad(_body,elt14_);
Element elt15_=el(_doc,"ul");
Element elt16_=el(_doc,"li");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_helpround,round_process_add_on_0_2_2"));
at(elt17_,attrs9_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
Element elt18_=el(_doc,"li");
Element elt19_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_helpround,round_process_add_on_0_2_3"));
at(elt19_,attrs10_);
ad(elt18_,elt19_);
ad(elt15_,elt18_);
Element elt20_=el(_doc,"li");
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_helpround,round_process_add_on_0_2_4"));
at(elt21_,attrs11_);
ad(elt20_,elt21_);
ad(elt15_,elt20_);
Element elt22_=el(_doc,"li");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_0_2_5"));
at(elt23_,attrs12_);
ad(elt22_,elt23_);
ad(elt15_,elt22_);
ad(_body,elt15_);
}
static void build10(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_1"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_1_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Text txt0_=tx(_doc,"{damgeFormula}");
ad(_body,txt0_);
Element elt3_=el(_doc,"br");
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!mapVar.isEmpty()"));
at(elt4_,attrs2_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","c"));
attrs3_.add(at("map","mapVar"));
attrs3_.add(at("value","r"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","java.lang.String"));
at(elt6_,attrs3_);
Element elt7_=el(_doc,"li");
Text txt1_=tx(_doc,"{c} :");
ad(elt7_,txt1_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("quoted",""));
attrs4_.add(at("value","msg_helpround,formula"));
at(elt8_,attrs4_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","r"));
at(elt9_,attrs5_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(_body,elt4_);
Element elt10_=el(_doc,"br");
ad(_body,elt10_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,round_process_add_on_1_0_0"));
at(elt11_,attrs6_);
Element elt12_=el(_doc,"param");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","strongMove"));
at(elt12_,attrs7_);
ad(elt11_,elt12_);
ad(_body,elt11_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","withConstDamageAny()"));
at(elt13_,attrs8_);
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_helpround,round_process_add_on_1_1"));
at(elt14_,attrs9_);
ad(elt13_,elt14_);
Element elt15_=el(_doc,"ul");
Element elt16_=el(_doc,"c:for");
CustList<Attr> attrs10_=al(2);
attrs10_.add(at("list","damagingMoves"));
attrs10_.add(at("var","a"));
at(elt16_,attrs10_);
Element elt17_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","withConstDamage(([a]))"));
at(elt17_,attrs11_);
Element elt18_=el(_doc,"li");
Element elt19_=el(_doc,"a");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("c:command","$clickDamagingMoves({([a])})"));
at(elt19_,attrs12_);
Text txt2_=tx(_doc,"{getTrDamagingMoves(([a]))}");
ad(elt19_,txt2_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
ad(_body,elt13_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","withRandDamageAny()"));
at(elt20_,attrs13_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,round_process_add_on_1_2"));
at(elt21_,attrs14_);
ad(elt20_,elt21_);
Element elt22_=el(_doc,"ul");
Element elt23_=el(_doc,"c:for");
CustList<Attr> attrs15_=al(2);
attrs15_.add(at("list","damagingMoves"));
attrs15_.add(at("var","a"));
at(elt23_,attrs15_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","withRandDamage(([a]))"));
at(elt24_,attrs16_);
Element elt25_=el(_doc,"li");
Element elt26_=el(_doc,"a");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("c:command","$clickDamagingMoves({([a])})"));
at(elt26_,attrs17_);
Text txt3_=tx(_doc,"{getTrDamagingMoves(([a]))}");
ad(elt26_,txt3_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt20_,elt22_);
ad(_body,elt20_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("condition","withMultDamageAny()"));
at(elt27_,attrs18_);
Element elt28_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_helpround,round_process_add_on_1_3"));
at(elt28_,attrs19_);
ad(elt27_,elt28_);
Element elt29_=el(_doc,"ul");
Element elt30_=el(_doc,"c:for");
CustList<Attr> attrs20_=al(2);
attrs20_.add(at("list","damagingMoves"));
attrs20_.add(at("var","a"));
at(elt30_,attrs20_);
Element elt31_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","withMultDamage(([a]))"));
at(elt31_,attrs21_);
Element elt32_=el(_doc,"li");
Element elt33_=el(_doc,"a");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("c:command","$clickDamagingMoves({([a])})"));
at(elt33_,attrs22_);
Text txt4_=tx(_doc,"{getTrDamagingMoves(([a]))}");
ad(elt33_,txt4_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt27_,elt29_);
ad(_body,elt27_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("condition","!itemsUserPower.isEmpty()"));
at(elt34_,attrs23_);
Element elt35_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_helpround,round_process_add_on_1_4"));
at(elt35_,attrs24_);
ad(elt34_,elt35_);
Element elt36_=el(_doc,"ul");
Element elt37_=el(_doc,"c:for");
CustList<Attr> attrs25_=al(2);
attrs25_.add(at("list","itemsUserPower"));
attrs25_.add(at("var","a"));
at(elt37_,attrs25_);
Element elt38_=el(_doc,"li");
Element elt39_=el(_doc,"a");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("c:command","$clickItemsUserPower({([a])})"));
at(elt39_,attrs26_);
Text txt5_=tx(_doc,"{getTrItemsUserPower(([a]))}");
ad(elt39_,txt5_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
ad(elt36_,elt37_);
ad(elt34_,elt36_);
ad(_body,elt34_);
Element elt40_=el(_doc,"c:if");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("condition","!movesUserPower.isEmpty()"));
at(elt40_,attrs27_);
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","msg_helpround,round_process_add_on_1_5"));
at(elt41_,attrs28_);
ad(elt40_,elt41_);
Element elt42_=el(_doc,"ul");
Element elt43_=el(_doc,"c:for");
CustList<Attr> attrs29_=al(2);
attrs29_.add(at("list","movesUserPower"));
attrs29_.add(at("var","a"));
at(elt43_,attrs29_);
Element elt44_=el(_doc,"li");
Element elt45_=el(_doc,"a");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("c:command","$clickMovesUserPower({([a])})"));
at(elt45_,attrs30_);
Text txt6_=tx(_doc,"{getTrMovesUserPower(([a]))}");
ad(elt45_,txt6_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
ad(elt42_,elt43_);
ad(elt40_,elt42_);
ad(_body,elt40_);
Element elt46_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","!movesTargetPower.isEmpty()"));
at(elt46_,attrs31_);
Element elt47_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_helpround,round_process_add_on_1_6"));
at(elt47_,attrs32_);
ad(elt46_,elt47_);
Element elt48_=el(_doc,"ul");
Element elt49_=el(_doc,"c:for");
CustList<Attr> attrs33_=al(2);
attrs33_.add(at("list","movesTargetPower"));
attrs33_.add(at("var","a"));
at(elt49_,attrs33_);
Element elt50_=el(_doc,"li");
Element elt51_=el(_doc,"a");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("c:command","$clickMovesTargetPower({([a])})"));
at(elt51_,attrs34_);
Text txt7_=tx(_doc,"{getTrMovesTargetPower(([a]))}");
ad(elt51_,txt7_);
ad(elt50_,elt51_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt46_,elt48_);
ad(_body,elt46_);
Element elt52_=el(_doc,"c:if");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("condition","!abilitiesUserPower.isEmpty()"));
at(elt52_,attrs35_);
Element elt53_=el(_doc,"c:message");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("value","msg_helpround,round_process_add_on_1_7"));
at(elt53_,attrs36_);
ad(elt52_,elt53_);
Element elt54_=el(_doc,"ul");
Element elt55_=el(_doc,"c:for");
CustList<Attr> attrs37_=al(2);
attrs37_.add(at("list","abilitiesUserPower"));
attrs37_.add(at("var","a"));
at(elt55_,attrs37_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"a");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("c:command","$clickAbilitiesUserPower({([a])})"));
at(elt57_,attrs38_);
Text txt8_=tx(_doc,"{getTrAbilitiesUserPower(([a]))}");
ad(elt57_,txt8_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt52_,elt54_);
ad(_body,elt52_);
Element elt58_=el(_doc,"c:if");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("condition","!movesUserAllyDamage.isEmpty()"));
at(elt58_,attrs39_);
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("value","msg_helpround,round_process_add_on_1_8"));
at(elt59_,attrs40_);
ad(elt58_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"c:for");
CustList<Attr> attrs41_=al(2);
attrs41_.add(at("list","movesUserAllyDamage"));
attrs41_.add(at("var","a"));
at(elt61_,attrs41_);
Element elt62_=el(_doc,"li");
Element elt63_=el(_doc,"a");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("c:command","$clickMovesUserAllyaDamage({([a])})"));
at(elt63_,attrs42_);
Text txt9_=tx(_doc,"{getTrMovesUserAllyDamage(([a]))}");
ad(elt63_,txt9_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt60_,elt61_);
ad(elt58_,elt60_);
ad(_body,elt58_);
Element elt64_=el(_doc,"c:if");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("condition","!abilitiesTargetDamage.isEmpty()"));
at(elt64_,attrs43_);
Element elt65_=el(_doc,"c:message");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("value","msg_helpround,round_process_add_on_1_10"));
at(elt65_,attrs44_);
ad(elt64_,elt65_);
Element elt66_=el(_doc,"ul");
Element elt67_=el(_doc,"c:for");
CustList<Attr> attrs45_=al(2);
attrs45_.add(at("list","abilitiesTargetDamage"));
attrs45_.add(at("var","a"));
at(elt67_,attrs45_);
Element elt68_=el(_doc,"li");
Element elt69_=el(_doc,"a");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("c:command","$clickAbilitiesTargetDamage({([a])})"));
at(elt69_,attrs46_);
Text txt10_=tx(_doc,"{getTrAbilitiesTargetDamage(([a]))}");
ad(elt69_,txt10_);
ad(elt68_,elt69_);
ad(elt67_,elt68_);
ad(elt66_,elt67_);
ad(elt64_,elt66_);
ad(_body,elt64_);
Element elt70_=el(_doc,"c:if");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("condition","!movesTargetTeamDamage.isEmpty()"));
at(elt70_,attrs47_);
Element elt71_=el(_doc,"c:message");
CustList<Attr> attrs48_=al(1);
attrs48_.add(at("value","msg_helpround,round_process_add_on_1_11"));
at(elt71_,attrs48_);
ad(elt70_,elt71_);
Element elt72_=el(_doc,"ul");
Element elt73_=el(_doc,"c:for");
CustList<Attr> attrs49_=al(2);
attrs49_.add(at("list","movesTargetTeamDamage"));
attrs49_.add(at("var","a"));
at(elt73_,attrs49_);
Element elt74_=el(_doc,"li");
Element elt75_=el(_doc,"a");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("c:command","$clickMovesTargetTeamDamage({([a])})"));
at(elt75_,attrs50_);
Text txt11_=tx(_doc,"{getTrMovesTargetTeamDamage(([a]))}");
ad(elt75_,txt11_);
ad(elt74_,elt75_);
ad(elt73_,elt74_);
ad(elt72_,elt73_);
ad(elt70_,elt72_);
Element elt76_=el(_doc,"c:if");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("condition","!abilitiesUserIgnTargetTeam.isEmpty()"));
at(elt76_,attrs51_);
Element elt77_=el(_doc,"c:message");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","msg_helpround,round_process_add_on_1_12"));
at(elt77_,attrs52_);
ad(elt76_,elt77_);
Element elt78_=el(_doc,"ul");
Element elt79_=el(_doc,"c:for");
CustList<Attr> attrs53_=al(2);
attrs53_.add(at("list","abilitiesUserIgnTargetTeam"));
attrs53_.add(at("var","a"));
at(elt79_,attrs53_);
Element elt80_=el(_doc,"li");
Element elt81_=el(_doc,"a");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("c:command","$clickAbilitiesUserIgnTargetTeam({([a])})"));
at(elt81_,attrs54_);
Text txt12_=tx(_doc,"{getTrAbilitiesUserIgnTargetTeam(([a]))}");
ad(elt81_,txt12_);
ad(elt80_,elt81_);
ad(elt79_,elt80_);
ad(elt78_,elt79_);
ad(elt76_,elt78_);
ad(elt70_,elt76_);
ad(_body,elt70_);
Element elt82_=el(_doc,"c:if");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("condition","!abilitiesGlobal.isEmpty()"));
at(elt82_,attrs55_);
Element elt83_=el(_doc,"c:message");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("value","msg_helpround,round_process_add_on_1_13"));
at(elt83_,attrs56_);
ad(elt82_,elt83_);
Element elt84_=el(_doc,"ul");
Element elt85_=el(_doc,"c:for");
CustList<Attr> attrs57_=al(2);
attrs57_.add(at("list","abilitiesGlobal"));
attrs57_.add(at("var","a"));
at(elt85_,attrs57_);
Element elt86_=el(_doc,"li");
Element elt87_=el(_doc,"a");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("c:command","$clickAbilitiesGlobal({([a])})"));
at(elt87_,attrs58_);
Text txt13_=tx(_doc,"{getTrAbilitiesGlobal(([a]))}");
ad(elt87_,txt13_);
ad(elt86_,elt87_);
ad(elt85_,elt86_);
ad(elt84_,elt85_);
ad(elt82_,elt84_);
ad(_body,elt82_);
Element elt88_=el(_doc,"c:if");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("condition","!movesGlobal.isEmpty()"));
at(elt88_,attrs59_);
Element elt89_=el(_doc,"c:message");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("value","msg_helpround,round_process_add_on_1_14"));
at(elt89_,attrs60_);
ad(elt88_,elt89_);
Element elt90_=el(_doc,"ul");
Element elt91_=el(_doc,"c:for");
CustList<Attr> attrs61_=al(2);
attrs61_.add(at("list","movesGlobal"));
attrs61_.add(at("var","a"));
at(elt91_,attrs61_);
Element elt92_=el(_doc,"li");
Element elt93_=el(_doc,"a");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("c:command","$clickMovesGlobal({([a])})"));
at(elt93_,attrs62_);
Text txt14_=tx(_doc,"{getTrMovesGlobal(([a]))}");
ad(elt93_,txt14_);
ad(elt92_,elt93_);
ad(elt91_,elt92_);
ad(elt90_,elt91_);
ad(elt88_,elt90_);
ad(_body,elt88_);
Element elt94_=el(_doc,"c:if");
CustList<Attr> attrs63_=al(1);
attrs63_.add(at("condition","!itemsUserDamage.isEmpty()"));
at(elt94_,attrs63_);
Element elt95_=el(_doc,"c:message");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("value","msg_helpround,round_process_add_on_1_15"));
at(elt95_,attrs64_);
ad(elt94_,elt95_);
Element elt96_=el(_doc,"ul");
Element elt97_=el(_doc,"c:for");
CustList<Attr> attrs65_=al(2);
attrs65_.add(at("list","itemsUserDamage"));
attrs65_.add(at("var","a"));
at(elt97_,attrs65_);
Element elt98_=el(_doc,"li");
Element elt99_=el(_doc,"a");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("c:command","$clickItemsUserDamage({([a])})"));
at(elt99_,attrs66_);
Text txt15_=tx(_doc,"{getTrItemsUserDamage(([a]))}");
ad(elt99_,txt15_);
ad(elt98_,elt99_);
ad(elt97_,elt98_);
ad(elt96_,elt97_);
ad(elt94_,elt96_);
ad(_body,elt94_);
Element elt100_=el(_doc,"c:if");
CustList<Attr> attrs67_=al(1);
attrs67_.add(at("condition","!abilitiesUserDamage.isEmpty()"));
at(elt100_,attrs67_);
Element elt101_=el(_doc,"c:message");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("value","msg_helpround,round_process_add_on_1_9"));
at(elt101_,attrs68_);
ad(elt100_,elt101_);
Element elt102_=el(_doc,"ul");
Element elt103_=el(_doc,"c:for");
CustList<Attr> attrs69_=al(2);
attrs69_.add(at("list","abilitiesUserDamage"));
attrs69_.add(at("var","a"));
at(elt103_,attrs69_);
Element elt104_=el(_doc,"li");
Element elt105_=el(_doc,"a");
CustList<Attr> attrs70_=al(1);
attrs70_.add(at("c:command","$clickAbilitiesUserDamage({([a])})"));
at(elt105_,attrs70_);
Text txt16_=tx(_doc,"{getTrAbilitiesUserDamage(([a]))}");
ad(elt105_,txt16_);
ad(elt104_,elt105_);
ad(elt103_,elt104_);
ad(elt102_,elt103_);
ad(elt100_,elt102_);
ad(_body,elt100_);
Element elt106_=el(_doc,"c:if");
CustList<Attr> attrs71_=al(1);
attrs71_.add(at("condition","!movesInvokDamage.isEmpty()"));
at(elt106_,attrs71_);
Element elt107_=el(_doc,"c:message");
CustList<Attr> attrs72_=al(1);
attrs72_.add(at("value","msg_helpround,round_process_add_on_1_19"));
at(elt107_,attrs72_);
ad(elt106_,elt107_);
Element elt108_=el(_doc,"ul");
Element elt109_=el(_doc,"c:for");
CustList<Attr> attrs73_=al(2);
attrs73_.add(at("list","movesInvokDamage"));
attrs73_.add(at("var","a"));
at(elt109_,attrs73_);
Element elt110_=el(_doc,"li");
Element elt111_=el(_doc,"a");
CustList<Attr> attrs74_=al(1);
attrs74_.add(at("c:command","$clickMovesInvokDamage({([a])})"));
at(elt111_,attrs74_);
Text txt17_=tx(_doc,"{getTrMovesInvokDamage(([a]))}");
ad(elt111_,txt17_);
ad(elt110_,elt111_);
ad(elt109_,elt110_);
ad(elt108_,elt109_);
ad(elt106_,elt108_);
ad(_body,elt106_);
Element elt112_=el(_doc,"c:if");
CustList<Attr> attrs75_=al(1);
attrs75_.add(at("condition","!itemsTargetDamage.isEmpty()"));
at(elt112_,attrs75_);
Element elt113_=el(_doc,"c:message");
CustList<Attr> attrs76_=al(1);
attrs76_.add(at("value","msg_helpround,round_process_add_on_1_16"));
at(elt113_,attrs76_);
ad(elt112_,elt113_);
Element elt114_=el(_doc,"ul");
Element elt115_=el(_doc,"c:for");
CustList<Attr> attrs77_=al(2);
attrs77_.add(at("list","itemsTargetDamage"));
attrs77_.add(at("var","a"));
at(elt115_,attrs77_);
Element elt116_=el(_doc,"li");
Element elt117_=el(_doc,"a");
CustList<Attr> attrs78_=al(1);
attrs78_.add(at("c:command","$clickItemsTargetDamage({([a])})"));
at(elt117_,attrs78_);
Text txt18_=tx(_doc,"{getTrItemsTargetDamage(([a]))}");
ad(elt117_,txt18_);
ad(elt116_,elt117_);
ad(elt115_,elt116_);
ad(elt114_,elt115_);
ad(elt112_,elt114_);
ad(_body,elt112_);
Element elt118_=el(_doc,"c:if");
CustList<Attr> attrs79_=al(1);
attrs79_.add(at("condition","!movesGlobalPrepaDamage.isEmpty()"));
at(elt118_,attrs79_);
Element elt119_=el(_doc,"c:message");
CustList<Attr> attrs80_=al(1);
attrs80_.add(at("value","msg_helpround,round_process_add_on_1_20"));
at(elt119_,attrs80_);
ad(elt118_,elt119_);
Element elt120_=el(_doc,"ul");
Element elt121_=el(_doc,"c:for");
CustList<Attr> attrs81_=al(2);
attrs81_.add(at("list","movesGlobalPrepaDamage"));
attrs81_.add(at("var","a"));
at(elt121_,attrs81_);
Element elt122_=el(_doc,"li");
Element elt123_=el(_doc,"a");
CustList<Attr> attrs82_=al(1);
attrs82_.add(at("c:command","$clickMovesGlobalPrepaDamage({([a])})"));
at(elt123_,attrs82_);
Text txt19_=tx(_doc,"{getTrMovesGlobalPrepaDamage(([a]))}");
ad(elt123_,txt19_);
ad(elt122_,elt123_);
ad(elt121_,elt122_);
ad(elt120_,elt121_);
ad(elt118_,elt120_);
ad(_body,elt118_);
Element elt124_=el(_doc,"c:if");
CustList<Attr> attrs83_=al(1);
attrs83_.add(at("condition","!statusDamage.isEmpty()"));
at(elt124_,attrs83_);
Element elt125_=el(_doc,"c:message");
CustList<Attr> attrs84_=al(1);
attrs84_.add(at("value","msg_helpround,round_process_add_on_1_18"));
at(elt125_,attrs84_);
ad(elt124_,elt125_);
Element elt126_=el(_doc,"ul");
Element elt127_=el(_doc,"c:for");
CustList<Attr> attrs85_=al(2);
attrs85_.add(at("list","statusDamage"));
attrs85_.add(at("var","a"));
at(elt127_,attrs85_);
Element elt128_=el(_doc,"li");
Element elt129_=el(_doc,"a");
CustList<Attr> attrs86_=al(1);
attrs86_.add(at("c:command","$clickStatusDamage({([a])})"));
at(elt129_,attrs86_);
Text txt20_=tx(_doc,"{getTrStatusDamage(([a]))}");
ad(elt129_,txt20_);
ad(elt128_,elt129_);
ad(elt127_,elt128_);
ad(elt126_,elt127_);
ad(elt124_,elt126_);
ad(_body,elt124_);
Element elt130_=el(_doc,"c:if");
CustList<Attr> attrs87_=al(1);
attrs87_.add(at("condition","!abilitiesUserTargetDamage.isEmpty()"));
at(elt130_,attrs87_);
Element elt131_=el(_doc,"c:message");
CustList<Attr> attrs88_=al(1);
attrs88_.add(at("value","msg_helpround,round_process_add_on_1_17"));
at(elt131_,attrs88_);
ad(elt130_,elt131_);
Element elt132_=el(_doc,"ul");
Element elt133_=el(_doc,"c:for");
CustList<Attr> attrs89_=al(2);
attrs89_.add(at("list","abilitiesUserTargetDamage"));
attrs89_.add(at("var","a"));
at(elt133_,attrs89_);
Element elt134_=el(_doc,"li");
Element elt135_=el(_doc,"a");
CustList<Attr> attrs90_=al(1);
attrs90_.add(at("c:command","$clickAbilitiesUserTargetDamage({([a])})"));
at(elt135_,attrs90_);
Text txt21_=tx(_doc,"{getTrAbilitiesUserTargetDamage(([a]))}");
ad(elt135_,txt21_);
ad(elt134_,elt135_);
ad(elt133_,elt134_);
ad(elt132_,elt133_);
ad(elt130_,elt132_);
ad(_body,elt130_);
Element elt136_=el(_doc,"c:message");
CustList<Attr> attrs91_=al(1);
attrs91_.add(at("value","msg_helpround,round_process_add_on_1_21"));
at(elt136_,attrs91_);
Element elt137_=el(_doc,"param");
CustList<Attr> attrs92_=al(1);
attrs92_.add(at("value","getStab()"));
at(elt137_,attrs92_);
ad(elt136_,elt137_);
ad(_body,elt136_);
Element elt138_=el(_doc,"c:if");
CustList<Attr> attrs93_=al(1);
attrs93_.add(at("condition","!abilitiesUserStabDamage.isEmpty()"));
at(elt138_,attrs93_);
Element elt139_=el(_doc,"c:message");
CustList<Attr> attrs94_=al(1);
attrs94_.add(at("value","msg_helpround,round_process_add_on_1_22"));
at(elt139_,attrs94_);
ad(elt138_,elt139_);
Element elt140_=el(_doc,"ul");
Element elt141_=el(_doc,"c:for");
CustList<Attr> attrs95_=al(2);
attrs95_.add(at("list","abilitiesUserStabDamage"));
attrs95_.add(at("var","a"));
at(elt141_,attrs95_);
Element elt142_=el(_doc,"li");
Element elt143_=el(_doc,"a");
CustList<Attr> attrs96_=al(1);
attrs96_.add(at("c:command","$clickAbilitiesUserStabDamage({([a])})"));
at(elt143_,attrs96_);
Text txt22_=tx(_doc,"{getTrAbilitiesUserStabDamage(([a]))}");
ad(elt143_,txt22_);
ad(elt142_,elt143_);
ad(elt141_,elt142_);
ad(elt140_,elt141_);
ad(elt138_,elt140_);
ad(_body,elt138_);
}
static void build11(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_2"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_2_7"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!movesTypesDefItem.isEmpty()"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,round_process_add_on_2_0"));
at(elt4_,attrs3_);
ad(elt3_,elt4_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("list","movesTypesDefItem"));
attrs4_.add(at("var","a"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickMovesTypesDefItem({([a])})"));
at(elt8_,attrs5_);
Text txt0_=tx(_doc,"{getTrMovesTypesDefItem(([a]))}");
ad(elt8_,txt0_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt3_,elt5_);
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,round_process_add_on_2_1"));
at(elt9_,attrs6_);
ad(elt3_,elt9_);
Element elt10_=el(_doc,"ul");
Element elt11_=el(_doc,"c:for");
CustList<Attr> attrs7_=al(2);
attrs7_.add(at("var","a"));
attrs7_.add(at("list","itemsTypesDef"));
at(elt11_,attrs7_);
Element elt12_=el(_doc,"li");
Element elt13_=el(_doc,"a");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("c:command","$clickItemsTypesDef({([a])})"));
at(elt13_,attrs8_);
Text txt1_=tx(_doc,"{getTrItemsTypesDef(([a]))}");
ad(elt13_,txt1_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt10_,elt11_);
ad(elt3_,elt10_);
ad(_body,elt3_);
Element elt14_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!movesTypesDefWeather.isEmpty()"));
at(elt14_,attrs9_);
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_helpround,round_process_add_on_2_2"));
at(elt15_,attrs10_);
ad(elt14_,elt15_);
Element elt16_=el(_doc,"ul");
Element elt17_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(2);
attrs11_.add(at("list","movesTypesDefWeather"));
attrs11_.add(at("var","a"));
at(elt17_,attrs11_);
Element elt18_=el(_doc,"li");
Element elt19_=el(_doc,"a");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("c:command","$clickMovesTypesDefWeather({([a])})"));
at(elt19_,attrs12_);
Text txt2_=tx(_doc,"{getTrMovesTypesDefWeather(([a]))}");
ad(elt19_,txt2_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt14_,elt16_);
ad(_body,elt14_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!abilitiesTypeDefMoves.isEmpty()"));
at(elt20_,attrs13_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,round_process_add_on_2_3"));
at(elt21_,attrs14_);
ad(elt20_,elt21_);
Element elt22_=el(_doc,"ul");
Element elt23_=el(_doc,"c:for");
CustList<Attr> attrs15_=al(2);
attrs15_.add(at("list","abilitiesTypeDefMoves"));
attrs15_.add(at("var","a"));
at(elt23_,attrs15_);
Element elt24_=el(_doc,"li");
Element elt25_=el(_doc,"a");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("c:command","$clickAbilitiesTypeDefMoves({([a])})"));
at(elt25_,attrs16_);
Text txt3_=tx(_doc,"{getTrAbilitiesTypeDefMoves(([a]))}");
ad(elt25_,txt3_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt20_,elt22_);
ad(_body,elt20_);
Element elt26_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","!abilitiesTypeDefMoves.isEmpty()"));
at(elt26_,attrs17_);
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_helpround,round_process_add_on_2_4"));
at(elt27_,attrs18_);
ad(elt26_,elt27_);
Element elt28_=el(_doc,"ul");
Element elt29_=el(_doc,"c:for");
CustList<Attr> attrs19_=al(2);
attrs19_.add(at("list","abilitiesTypeDefMoves"));
attrs19_.add(at("var","a"));
at(elt29_,attrs19_);
Element elt30_=el(_doc,"li");
Element elt31_=el(_doc,"a");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("c:command","$clickAbilitiesChangeTypeMoves({([a])})"));
at(elt31_,attrs20_);
Text txt4_=tx(_doc,"{getTrAbilitiesChangeTypeMoves(([a]))}");
ad(elt31_,txt4_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt26_,elt28_);
ad(_body,elt26_);
Element elt32_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","!movesTypeDefMoves.isEmpty()"));
at(elt32_,attrs21_);
Element elt33_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,round_process_add_on_2_5"));
at(elt33_,attrs22_);
ad(elt32_,elt33_);
Element elt34_=el(_doc,"ul");
Element elt35_=el(_doc,"c:for");
CustList<Attr> attrs23_=al(2);
attrs23_.add(at("list","movesTypeDefMoves"));
attrs23_.add(at("var","a"));
at(elt35_,attrs23_);
Element elt36_=el(_doc,"li");
Element elt37_=el(_doc,"a");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("c:command","$clickMovesTypeDefMoves({([a])})"));
at(elt37_,attrs24_);
Text txt5_=tx(_doc,"{getTrMovesTypeDefMoves(([a]))}");
ad(elt37_,txt5_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt32_,elt34_);
ad(_body,elt32_);
Element elt38_=el(_doc,"c:if");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("condition","!movesChangeTypeMoves.isEmpty()"));
at(elt38_,attrs25_);
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg_helpround,round_process_add_on_2_6"));
at(elt39_,attrs26_);
ad(elt38_,elt39_);
Element elt40_=el(_doc,"ul");
Element elt41_=el(_doc,"c:for");
CustList<Attr> attrs27_=al(2);
attrs27_.add(at("list","movesChangeTypeMoves"));
attrs27_.add(at("var","a"));
at(elt41_,attrs27_);
Element elt42_=el(_doc,"li");
Element elt43_=el(_doc,"a");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("c:command","$clickMovesTypeDefMoves({([a])})"));
at(elt43_,attrs28_);
Text txt6_=tx(_doc,"{getTrMovesChangeTypeMoves(([a]))}");
ad(elt43_,txt6_);
ad(elt42_,elt43_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt38_,elt40_);
ad(_body,elt38_);
}
static void build12(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_3"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_3_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"ul");
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!movesGlobalBreakImmu.isEmpty()"));
at(elt4_,attrs2_);
Element elt5_=el(_doc,"li");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,round_process_add_on_3_1_1"));
at(elt6_,attrs3_);
ad(elt5_,elt6_);
Element elt7_=el(_doc,"ul");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("list","movesGlobalBreakImmu"));
attrs4_.add(at("var","a"));
at(elt8_,attrs4_);
Element elt9_=el(_doc,"li");
Element elt10_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickMovesGlobalBreakImmu({([a])})"));
at(elt10_,attrs5_);
Text txt0_=tx(_doc,"{getTrMovesGlobalBreakImmu(([a]))}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt5_,elt7_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt11_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!movesUnprotectingTypes.isEmpty()"));
at(elt11_,attrs6_);
Element elt12_=el(_doc,"li");
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_3_1_2"));
at(elt13_,attrs7_);
ad(elt12_,elt13_);
Element elt14_=el(_doc,"ul");
Element elt15_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(2);
attrs8_.add(at("list","movesUnprotectingTypes"));
attrs8_.add(at("var","a"));
at(elt15_,attrs8_);
Element elt16_=el(_doc,"li");
Element elt17_=el(_doc,"a");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("c:command","$clickMovesUnprotectingTypes({([a])})"));
at(elt17_,attrs9_);
Text txt1_=tx(_doc,"{getTrMovesUnprotectingTypes(([a]))}");
ad(elt17_,txt1_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt12_,elt14_);
ad(elt11_,elt12_);
ad(elt3_,elt11_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!abilitiesBreakImmu.isEmpty()"));
at(elt18_,attrs10_);
Element elt19_=el(_doc,"li");
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_helpround,round_process_add_on_3_1_3"));
at(elt20_,attrs11_);
ad(elt19_,elt20_);
Element elt21_=el(_doc,"ul");
Element elt22_=el(_doc,"c:for");
CustList<Attr> attrs12_=al(2);
attrs12_.add(at("list","abilitiesBreakImmu"));
attrs12_.add(at("var","a"));
at(elt22_,attrs12_);
Element elt23_=el(_doc,"li");
Element elt24_=el(_doc,"a");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("c:command","$clickAbilitiesBreakImmu({([a])})"));
at(elt24_,attrs13_);
Text txt2_=tx(_doc,"{getTrAbilitiesBreakImmu(([a]))}");
ad(elt24_,txt2_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt19_,elt21_);
ad(elt18_,elt19_);
ad(elt3_,elt18_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","!abilitiesBreakImmu.isEmpty()"));
at(elt25_,attrs14_);
Element elt26_=el(_doc,"li");
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,round_process_add_on_3_1_4"));
at(elt27_,attrs15_);
ad(elt26_,elt27_);
Element elt28_=el(_doc,"ul");
Element elt29_=el(_doc,"c:for");
CustList<Attr> attrs16_=al(2);
attrs16_.add(at("list","itemsCancelImmu"));
attrs16_.add(at("var","a"));
at(elt29_,attrs16_);
Element elt30_=el(_doc,"li");
Element elt31_=el(_doc,"a");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("c:command","$clickItemsCancelImmu({([a])})"));
at(elt31_,attrs17_);
Text txt3_=tx(_doc,"{getTrItemsCancelImmu(([a]))}");
ad(elt31_,txt3_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt26_,elt28_);
ad(elt25_,elt26_);
ad(elt3_,elt25_);
ad(_body,elt3_);
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_helpround,round_process_add_on_3_2"));
at(elt32_,attrs18_);
ad(_body,elt32_);
Element elt33_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_helpround,round_process_add_on_3_3"));
at(elt33_,attrs19_);
ad(_body,elt33_);
Element elt34_=el(_doc,"table");
Element elt35_=el(_doc,"tr");
Element elt36_=el(_doc,"td");
ad(elt35_,elt36_);
Element elt37_=el(_doc,"c:for");
CustList<Attr> attrs20_=al(3);
attrs20_.add(at("list","types"));
attrs20_.add(at("var","u"));
attrs20_.add(at("className","java.lang.String"));
at(elt37_,attrs20_);
Element elt38_=el(_doc,"td");
Text txt4_=tx(_doc,"{u}");
ad(elt38_,txt4_);
ad(elt37_,elt38_);
ad(elt35_,elt37_);
ad(elt34_,elt35_);
Element elt39_=el(_doc,"c:for");
CustList<Attr> attrs21_=al(3);
attrs21_.add(at("list","types"));
attrs21_.add(at("var","t"));
attrs21_.add(at("className","java.lang.String"));
at(elt39_,attrs21_);
Element elt40_=el(_doc,"tr");
Element elt41_=el(_doc,"td");
Text txt5_=tx(_doc,"{t}");
ad(elt41_,txt5_);
ad(elt40_,elt41_);
Element elt42_=el(_doc,"c:for");
CustList<Attr> attrs22_=al(3);
attrs22_.add(at("list","types"));
attrs22_.add(at("var","u"));
attrs22_.add(at("className","java.lang.String"));
at(elt42_,attrs22_);
Element elt43_=el(_doc,"td");
Text txt6_=tx(_doc,"{getEfficiency(([t]),([u]))}");
ad(elt43_,txt6_);
ad(elt42_,elt43_);
ad(elt40_,elt42_);
ad(elt39_,elt40_);
ad(elt34_,elt39_);
ad(_body,elt34_);
Element elt44_=el(_doc,"br");
ad(_body,elt44_);
}
static void build13(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_5"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_5_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_5_2"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","!movesIgnLowAtt.isEmpty()"));
at(elt4_,attrs3_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,round_process_add_on_5_3"));
at(elt5_,attrs4_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"ul");
Element elt7_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(2);
attrs5_.add(at("list","movesIgnLowAtt"));
attrs5_.add(at("var","a"));
at(elt7_,attrs5_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"a");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("c:command","$clickMovesIgnLowAtt({([a])})"));
at(elt9_,attrs6_);
Text txt0_=tx(_doc,"{getTrMovesIgnLowAtt(([a]))}");
ad(elt9_,txt0_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(_body,elt4_);
Element elt10_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","movesIgnLowAtt.isEmpty()"));
at(elt10_,attrs7_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,round_process_add_on_5_3_1"));
at(elt11_,attrs8_);
ad(elt10_,elt11_);
ad(_body,elt10_);
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_helpround,round_process_add_on_5_4"));
at(elt12_,attrs9_);
ad(_body,elt12_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_helpround,round_process_add_on_5_5"));
at(elt13_,attrs10_);
ad(_body,elt13_);
Element elt14_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","!movesIgnIncDef.isEmpty()"));
at(elt14_,attrs11_);
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_5_6"));
at(elt15_,attrs12_);
ad(elt14_,elt15_);
Element elt16_=el(_doc,"ul");
Element elt17_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("list","movesIgnIncDef"));
attrs13_.add(at("var","a"));
at(elt17_,attrs13_);
Element elt18_=el(_doc,"li");
Element elt19_=el(_doc,"a");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("c:command","$clickMovesIgnIncDef({([a])})"));
at(elt19_,attrs14_);
Text txt1_=tx(_doc,"{getTrMovesIgnIncDef(([a]))}");
ad(elt19_,txt1_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt14_,elt16_);
ad(_body,elt14_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","movesIgnIncDef.isEmpty()"));
at(elt20_,attrs15_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_helpround,round_process_add_on_5_6_1"));
at(elt21_,attrs16_);
ad(elt20_,elt21_);
ad(_body,elt20_);
}
static void build14(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_6"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:if");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("condition","abilityBoostNormalAny()"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_6_1"));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
Element elt4_=el(_doc,"ul");
Element elt5_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("list","abilitiesBoostingStat"));
attrs3_.add(at("var","a"));
at(elt5_,attrs3_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","abilityBoostNormal(([a]))"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickAbilitiesBoostingStat({([a])})"));
at(elt8_,attrs5_);
Text txt0_=tx(_doc,"{getTrAbilitiesBoostingStat(([a]))}");
ad(elt8_,txt0_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt2_,elt4_);
ad(_body,elt2_);
Element elt9_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","itemBoostNormalAny()"));
at(elt9_,attrs6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_6_2"));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"ul");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(2);
attrs8_.add(at("list","itemsBoostingStat"));
attrs8_.add(at("var","a"));
at(elt12_,attrs8_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","itemBoostNormal(([a]))"));
at(elt13_,attrs9_);
Element elt14_=el(_doc,"li");
Element elt15_=el(_doc,"a");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("c:command","$clickItemsBoostingStat({([a])})"));
at(elt15_,attrs10_);
Text txt1_=tx(_doc,"{getTrItemsBoostingStat(([a]))}");
ad(elt15_,txt1_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
ad(_body,elt9_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","itemMultNormalAny()"));
at(elt16_,attrs11_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_6_3"));
at(elt17_,attrs12_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"ul");
Element elt19_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("list","itemsMultStat"));
attrs13_.add(at("var","a"));
at(elt19_,attrs13_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","itemMultNormal(([a]))"));
at(elt20_,attrs14_);
Element elt21_=el(_doc,"li");
Element elt22_=el(_doc,"a");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("c:command","$clickItemsMultStat({([a])})"));
at(elt22_,attrs15_);
Text txt2_=tx(_doc,"{getTrItemsMultStat(([a]))}");
ad(elt22_,txt2_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt16_,elt18_);
ad(_body,elt16_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","abilityMultNormalAny()"));
at(elt23_,attrs16_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,round_process_add_on_6_4"));
at(elt24_,attrs17_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,"ul");
Element elt26_=el(_doc,"c:for");
CustList<Attr> attrs18_=al(2);
attrs18_.add(at("list","abilitiesMultStat"));
attrs18_.add(at("var","a"));
at(elt26_,attrs18_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","abilityMultNormal(([a]))"));
at(elt27_,attrs19_);
Element elt28_=el(_doc,"li");
Element elt29_=el(_doc,"a");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("c:command","$clickAbilitiesMultStat({([a])})"));
at(elt29_,attrs20_);
Text txt3_=tx(_doc,"{getTrAbilitiesMultStat(([a]))}");
ad(elt29_,txt3_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt23_,elt25_);
ad(_body,elt23_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","moveGlobalMultNormalAny()"));
at(elt30_,attrs21_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,round_process_add_on_6_5"));
at(elt31_,attrs22_);
ad(elt30_,elt31_);
Element elt32_=el(_doc,"ul");
Element elt33_=el(_doc,"c:for");
CustList<Attr> attrs23_=al(2);
attrs23_.add(at("list","movesGlobalMultStat"));
attrs23_.add(at("var","a"));
at(elt33_,attrs23_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","moveGlobalMultNormal(([a]))"));
at(elt34_,attrs24_);
Element elt35_=el(_doc,"li");
Element elt36_=el(_doc,"a");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("c:command","$clickMovesGlobalMultStat({([a])})"));
at(elt36_,attrs25_);
Text txt4_=tx(_doc,"{getTrMovesGlobalMultStat(([a]))}");
ad(elt36_,txt4_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt30_,elt32_);
ad(_body,elt30_);
Element elt37_=el(_doc,"c:if");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("condition","moveTeamMultNormalAny()"));
at(elt37_,attrs26_);
Element elt38_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_helpround,round_process_add_on_6_6"));
at(elt38_,attrs27_);
ad(elt37_,elt38_);
Element elt39_=el(_doc,"ul");
Element elt40_=el(_doc,"c:for");
CustList<Attr> attrs28_=al(2);
attrs28_.add(at("list","movesTeamMultStat"));
attrs28_.add(at("var","a"));
at(elt40_,attrs28_);
Element elt41_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","moveTeamMultNormal(([a]))"));
at(elt41_,attrs29_);
Element elt42_=el(_doc,"li");
Element elt43_=el(_doc,"a");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("c:command","$clickMovesTeamMultStat({([a])})"));
at(elt43_,attrs30_);
Text txt5_=tx(_doc,"{getTrMovesTeamMultStat(([a]))}");
ad(elt43_,txt5_);
ad(elt42_,elt43_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt37_,elt39_);
ad(_body,elt37_);
Element elt44_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","abilityAllyMultNormalAny()"));
at(elt44_,attrs31_);
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_helpround,round_process_add_on_6_7"));
at(elt45_,attrs32_);
ad(elt44_,elt45_);
Element elt46_=el(_doc,"ul");
Element elt47_=el(_doc,"c:for");
CustList<Attr> attrs33_=al(2);
attrs33_.add(at("list","abilitiesAllyMultStat"));
attrs33_.add(at("var","a"));
at(elt47_,attrs33_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("condition","abilityAllyMultNormal(([a]))"));
at(elt48_,attrs34_);
Element elt49_=el(_doc,"li");
Element elt50_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickAbilitiesAllyMultStat({([a])})"));
at(elt50_,attrs35_);
Text txt6_=tx(_doc,"{getTrAbilitiesAllyMultStat(([a]))}");
ad(elt50_,txt6_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
ad(elt44_,elt46_);
ad(_body,elt44_);
Element elt51_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","moveFoeTeamMultNormalAny()"));
at(elt51_,attrs36_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_helpround,round_process_add_on_6_8"));
at(elt52_,attrs37_);
ad(elt51_,elt52_);
Element elt53_=el(_doc,"ul");
Element elt54_=el(_doc,"c:for");
CustList<Attr> attrs38_=al(2);
attrs38_.add(at("list","movesFoeTeamMultStat"));
attrs38_.add(at("var","a"));
at(elt54_,attrs38_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("condition","moveFoeTeamMultNormal(([a]))"));
at(elt55_,attrs39_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"a");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("c:command","$clickMovesFoeTeamMultStat({([a])})"));
at(elt57_,attrs40_);
Text txt7_=tx(_doc,"{getTrMovesFoeTeamMultStat(([a]))}");
ad(elt57_,txt7_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt53_,elt54_);
ad(elt51_,elt53_);
ad(_body,elt51_);
Element elt58_=el(_doc,"c:if");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("condition","statusMultNormalAny()"));
at(elt58_,attrs41_);
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_helpround,round_process_add_on_6_9"));
at(elt59_,attrs42_);
ad(elt58_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"c:for");
CustList<Attr> attrs43_=al(2);
attrs43_.add(at("list","statusMultStat"));
attrs43_.add(at("var","a"));
at(elt61_,attrs43_);
Element elt62_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","statusMultNormal(([a]))"));
at(elt62_,attrs44_);
Element elt63_=el(_doc,"li");
Element elt64_=el(_doc,"a");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("c:command","$clickStatusMultStat({([a])})"));
at(elt64_,attrs45_);
Text txt8_=tx(_doc,"{getTrStatusMultStat(([a]))}");
ad(elt64_,txt8_);
ad(elt63_,elt64_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt60_,elt61_);
ad(elt58_,elt60_);
Element elt65_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","abilityImmuMultNormalAny()"));
at(elt65_,attrs46_);
Element elt66_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,round_process_add_on_6_10"));
at(elt66_,attrs47_);
ad(elt65_,elt66_);
Element elt67_=el(_doc,"ul");
Element elt68_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","abilitiesImmuMultStat"));
attrs48_.add(at("var","a"));
at(elt68_,attrs48_);
Element elt69_=el(_doc,"c:if");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("condition","abilityImmuMultNormal(([a]))"));
at(elt69_,attrs49_);
Element elt70_=el(_doc,"li");
Element elt71_=el(_doc,"a");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("c:command","$clickAbilitiesImmuMultStat({([a])})"));
at(elt71_,attrs50_);
Text txt9_=tx(_doc,"{getTrAbilitiesImmuMultStat(([a]))}");
ad(elt71_,txt9_);
ad(elt70_,elt71_);
ad(elt69_,elt70_);
ad(elt68_,elt69_);
ad(elt67_,elt68_);
ad(elt65_,elt67_);
ad(elt58_,elt65_);
ad(_body,elt58_);
Element elt72_=el(_doc,"c:if");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("condition","comboMultNormalAny()"));
at(elt72_,attrs51_);
Element elt73_=el(_doc,"c:message");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","msg_helpround,round_process_add_on_6_11"));
at(elt73_,attrs52_);
ad(elt72_,elt73_);
Element elt74_=el(_doc,"ul");
Element elt75_=el(_doc,"c:for");
CustList<Attr> attrs53_=al(2);
attrs53_.add(at("list","comboMultStat"));
attrs53_.add(at("var","a"));
at(elt75_,attrs53_);
Element elt76_=el(_doc,"c:if");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("condition","comboMultNormal(([a]))"));
at(elt76_,attrs54_);
Element elt77_=el(_doc,"li");
Element elt78_=el(_doc,"a");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("c:command","$clickComboMultStat({([a])})"));
at(elt78_,attrs55_);
Text txt10_=tx(_doc,"{getTrComboMultStat(([a]))}");
ad(elt78_,txt10_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt74_,elt75_);
ad(elt72_,elt74_);
ad(_body,elt72_);
}
static void build15(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_7"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_7_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_7_2"));
at(elt3_,attrs2_);
ad(_body,elt3_);
Element elt4_=el(_doc,"ul");
Element elt5_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("list","abilitiesBreakProtectMoves"));
attrs3_.add(at("var","a"));
at(elt5_,attrs3_);
Element elt6_=el(_doc,"li");
Element elt7_=el(_doc,"a");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("c:command","$clickAbilitiesBreakProtectMoves({([a])})"));
at(elt7_,attrs4_);
Text txt0_=tx(_doc,"{getTrAbilitiesBreakProtectMoves(([a]))}");
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(_body,elt4_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,round_process_add_on_7_3"));
at(elt8_,attrs5_);
ad(_body,elt8_);
Element elt9_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!movesIgnAcc.isEmpty()"));
at(elt9_,attrs6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_7_4"));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"ul");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(2);
attrs8_.add(at("list","movesIgnAcc"));
attrs8_.add(at("var","a"));
at(elt12_,attrs8_);
Element elt13_=el(_doc,"li");
Element elt14_=el(_doc,"a");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("c:command","$clickMovesIgnAcc({([a])})"));
at(elt14_,attrs9_);
Text txt1_=tx(_doc,"{getTrMovesIgnAcc(([a]))}");
ad(elt14_,txt1_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
ad(_body,elt9_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","movesIgnAcc.isEmpty()"));
at(elt15_,attrs10_);
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_helpround,round_process_add_on_7_4_1"));
at(elt16_,attrs11_);
ad(elt15_,elt16_);
ad(_body,elt15_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_7_5"));
at(elt17_,attrs12_);
ad(_body,elt17_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!movesIgnEva.isEmpty()"));
at(elt18_,attrs13_);
Element elt19_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_helpround,round_process_add_on_7_6"));
at(elt19_,attrs14_);
ad(elt18_,elt19_);
Element elt20_=el(_doc,"ul");
Element elt21_=el(_doc,"c:for");
CustList<Attr> attrs15_=al(2);
attrs15_.add(at("list","movesIgnEva"));
attrs15_.add(at("var","a"));
at(elt21_,attrs15_);
Element elt22_=el(_doc,"li");
Element elt23_=el(_doc,"a");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("c:command","$clickMovesIgnEva({([a])})"));
at(elt23_,attrs16_);
Text txt2_=tx(_doc,"{getTrMovesIgnEva(([a]))}");
ad(elt23_,txt2_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt18_,elt20_);
ad(_body,elt18_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,round_process_add_on_7_8"));
at(elt24_,attrs17_);
ad(_body,elt24_);
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_helpround,round_process_add_on_7_10"));
at(elt25_,attrs18_);
ad(_body,elt25_);
Element elt26_=el(_doc,"ul");
Element elt27_=el(_doc,"c:for");
CustList<Attr> attrs19_=al(2);
attrs19_.add(at("list","movesGlobalAcc"));
attrs19_.add(at("var","a"));
at(elt27_,attrs19_);
Element elt28_=el(_doc,"li");
Element elt29_=el(_doc,"a");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("c:command","$clickMovesGlobalAcc({([a])})"));
at(elt29_,attrs20_);
Text txt3_=tx(_doc,"{getTrMovesGlobalAcc(([a]))}");
ad(elt29_,txt3_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(_body,elt26_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","abilityBoostAccuracyAny()"));
at(elt30_,attrs21_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,round_process_add_on_7_11"));
at(elt31_,attrs22_);
ad(elt30_,elt31_);
Element elt32_=el(_doc,"ul");
Element elt33_=el(_doc,"c:for");
CustList<Attr> attrs23_=al(2);
attrs23_.add(at("list","abilitiesBoostingStat"));
attrs23_.add(at("var","a"));
at(elt33_,attrs23_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","abilityBoostAccuracy(([a]))"));
at(elt34_,attrs24_);
Element elt35_=el(_doc,"li");
Element elt36_=el(_doc,"a");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("c:command","$clickAbilitiesBoostingStat({([a])})"));
at(elt36_,attrs25_);
Text txt4_=tx(_doc,"{getTrAbilitiesBoostingStat(([a]))}");
ad(elt36_,txt4_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt30_,elt32_);
ad(_body,elt30_);
Element elt37_=el(_doc,"c:if");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("condition","itemBoostAccuracyAny()"));
at(elt37_,attrs26_);
Element elt38_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_helpround,round_process_add_on_7_12"));
at(elt38_,attrs27_);
ad(elt37_,elt38_);
Element elt39_=el(_doc,"ul");
Element elt40_=el(_doc,"c:for");
CustList<Attr> attrs28_=al(2);
attrs28_.add(at("list","itemsBoostingStat"));
attrs28_.add(at("var","a"));
at(elt40_,attrs28_);
Element elt41_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","itemBoostAccuracy(([a]))"));
at(elt41_,attrs29_);
Element elt42_=el(_doc,"li");
Element elt43_=el(_doc,"a");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("c:command","$clickItemsBoostingStat({([a])})"));
at(elt43_,attrs30_);
Text txt5_=tx(_doc,"{getTrItemsBoostingStat(([a]))}");
ad(elt43_,txt5_);
ad(elt42_,elt43_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt37_,elt39_);
ad(_body,elt37_);
Element elt44_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","itemMultAccuracyAny()"));
at(elt44_,attrs31_);
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_helpround,round_process_add_on_7_13"));
at(elt45_,attrs32_);
ad(elt44_,elt45_);
Element elt46_=el(_doc,"ul");
Element elt47_=el(_doc,"c:for");
CustList<Attr> attrs33_=al(2);
attrs33_.add(at("list","itemsMultStat"));
attrs33_.add(at("var","a"));
at(elt47_,attrs33_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("condition","itemMultAccuracy(([a]))"));
at(elt48_,attrs34_);
Element elt49_=el(_doc,"li");
Element elt50_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickItemsMultStat({([a])})"));
at(elt50_,attrs35_);
Text txt6_=tx(_doc,"{getTrItemsMultStat(([a]))}");
ad(elt50_,txt6_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
ad(elt44_,elt46_);
ad(_body,elt44_);
Element elt51_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","abilityMultAccuracyAny()"));
at(elt51_,attrs36_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_helpround,round_process_add_on_7_14"));
at(elt52_,attrs37_);
ad(elt51_,elt52_);
Element elt53_=el(_doc,"ul");
Element elt54_=el(_doc,"c:for");
CustList<Attr> attrs38_=al(2);
attrs38_.add(at("list","abilitiesMultStat"));
attrs38_.add(at("var","a"));
at(elt54_,attrs38_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("condition","abilityMultAccuracy(([a]))"));
at(elt55_,attrs39_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"a");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("c:command","$clickAbilitiesMultStat({([a])})"));
at(elt57_,attrs40_);
Text txt7_=tx(_doc,"{getTrAbilitiesMultStat(([a]))}");
ad(elt57_,txt7_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt53_,elt54_);
ad(elt51_,elt53_);
ad(_body,elt51_);
Element elt58_=el(_doc,"c:if");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("condition","moveGlobalMultAccuracyAny()"));
at(elt58_,attrs41_);
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_helpround,round_process_add_on_7_15"));
at(elt59_,attrs42_);
ad(elt58_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"c:for");
CustList<Attr> attrs43_=al(2);
attrs43_.add(at("list","movesGlobalMultStat"));
attrs43_.add(at("var","a"));
at(elt61_,attrs43_);
Element elt62_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","moveGlobalMultAccuracy(([a]))"));
at(elt62_,attrs44_);
Element elt63_=el(_doc,"li");
Element elt64_=el(_doc,"a");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("c:command","$clickMovesGlobalMultStat({([a])})"));
at(elt64_,attrs45_);
Text txt8_=tx(_doc,"{getTrMovesGlobalMultStat(([a]))}");
ad(elt64_,txt8_);
ad(elt63_,elt64_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt60_,elt61_);
ad(elt58_,elt60_);
ad(_body,elt58_);
Element elt65_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","moveTeamMultAccuracyAny()"));
at(elt65_,attrs46_);
Element elt66_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,round_process_add_on_7_16"));
at(elt66_,attrs47_);
ad(elt65_,elt66_);
Element elt67_=el(_doc,"ul");
Element elt68_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","movesTeamMultStat"));
attrs48_.add(at("var","a"));
at(elt68_,attrs48_);
Element elt69_=el(_doc,"c:if");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("condition","moveTeamMultAccuracy(([a]))"));
at(elt69_,attrs49_);
Element elt70_=el(_doc,"li");
Element elt71_=el(_doc,"a");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("c:command","$clickMovesTeamMultStat({([a])})"));
at(elt71_,attrs50_);
Text txt9_=tx(_doc,"{getTrMovesTeamMultStat(([a]))}");
ad(elt71_,txt9_);
ad(elt70_,elt71_);
ad(elt69_,elt70_);
ad(elt68_,elt69_);
ad(elt67_,elt68_);
ad(elt65_,elt67_);
ad(_body,elt65_);
Element elt72_=el(_doc,"c:if");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("condition","abilityAllyMultAccuracyAny()"));
at(elt72_,attrs51_);
Element elt73_=el(_doc,"c:message");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","msg_helpround,round_process_add_on_7_17"));
at(elt73_,attrs52_);
ad(elt72_,elt73_);
Element elt74_=el(_doc,"ul");
Element elt75_=el(_doc,"c:for");
CustList<Attr> attrs53_=al(2);
attrs53_.add(at("list","abilitiesAllyMultStat"));
attrs53_.add(at("var","a"));
at(elt75_,attrs53_);
Element elt76_=el(_doc,"c:if");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("condition","abilityAllyMultAccuracy(([a]))"));
at(elt76_,attrs54_);
Element elt77_=el(_doc,"li");
Element elt78_=el(_doc,"a");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("c:command","$clickAbilitiesAllyMultStat({([a])})"));
at(elt78_,attrs55_);
Text txt10_=tx(_doc,"{getTrAbilitiesAllyMultStat(([a]))}");
ad(elt78_,txt10_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt74_,elt75_);
ad(elt72_,elt74_);
ad(_body,elt72_);
Element elt79_=el(_doc,"c:if");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("condition","moveFoeTeamMultAccuracyAny()"));
at(elt79_,attrs56_);
Element elt80_=el(_doc,"c:message");
CustList<Attr> attrs57_=al(1);
attrs57_.add(at("value","msg_helpround,round_process_add_on_7_18"));
at(elt80_,attrs57_);
ad(elt79_,elt80_);
Element elt81_=el(_doc,"ul");
Element elt82_=el(_doc,"c:for");
CustList<Attr> attrs58_=al(2);
attrs58_.add(at("list","movesFoeTeamMultStat"));
attrs58_.add(at("var","a"));
at(elt82_,attrs58_);
Element elt83_=el(_doc,"c:if");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("condition","moveFoeTeamMultAccuracy(([a]))"));
at(elt83_,attrs59_);
Element elt84_=el(_doc,"li");
Element elt85_=el(_doc,"a");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("c:command","$clickMovesFoeTeamMultStat({([a])})"));
at(elt85_,attrs60_);
Text txt11_=tx(_doc,"{getTrMovesFoeTeamMultStat(([a]))}");
ad(elt85_,txt11_);
ad(elt84_,elt85_);
ad(elt83_,elt84_);
ad(elt82_,elt83_);
ad(elt81_,elt82_);
ad(elt79_,elt81_);
ad(_body,elt79_);
Element elt86_=el(_doc,"c:if");
CustList<Attr> attrs61_=al(1);
attrs61_.add(at("condition","statusMultAccuracyAny()"));
at(elt86_,attrs61_);
Element elt87_=el(_doc,"c:message");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("value","msg_helpround,round_process_add_on_7_19"));
at(elt87_,attrs62_);
ad(elt86_,elt87_);
Element elt88_=el(_doc,"ul");
Element elt89_=el(_doc,"c:for");
CustList<Attr> attrs63_=al(2);
attrs63_.add(at("list","statusMultStat"));
attrs63_.add(at("var","a"));
at(elt89_,attrs63_);
Element elt90_=el(_doc,"c:if");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("condition","statusMultAccuracy(([a]))"));
at(elt90_,attrs64_);
Element elt91_=el(_doc,"li");
Element elt92_=el(_doc,"a");
CustList<Attr> attrs65_=al(1);
attrs65_.add(at("c:command","$clickStatusMultStat({([a])})"));
at(elt92_,attrs65_);
Text txt12_=tx(_doc,"{getTrStatusMultStat(([a]))}");
ad(elt92_,txt12_);
ad(elt91_,elt92_);
ad(elt90_,elt91_);
ad(elt89_,elt90_);
ad(elt88_,elt89_);
ad(elt86_,elt88_);
Element elt93_=el(_doc,"c:if");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("condition","abilityImmuMultAccuracyAny()"));
at(elt93_,attrs66_);
Element elt94_=el(_doc,"c:message");
CustList<Attr> attrs67_=al(1);
attrs67_.add(at("value","msg_helpround,round_process_add_on_7_20"));
at(elt94_,attrs67_);
ad(elt93_,elt94_);
Element elt95_=el(_doc,"ul");
Element elt96_=el(_doc,"c:for");
CustList<Attr> attrs68_=al(2);
attrs68_.add(at("list","abilitiesImmuMultStat"));
attrs68_.add(at("var","a"));
at(elt96_,attrs68_);
Element elt97_=el(_doc,"c:if");
CustList<Attr> attrs69_=al(1);
attrs69_.add(at("condition","abilityImmuMultAccuracy(([a]))"));
at(elt97_,attrs69_);
Element elt98_=el(_doc,"li");
Element elt99_=el(_doc,"a");
CustList<Attr> attrs70_=al(1);
attrs70_.add(at("c:command","$clickAbilitiesImmuMultStat({([a])})"));
at(elt99_,attrs70_);
Text txt13_=tx(_doc,"{getTrAbilitiesImmuMultStat(([a]))}");
ad(elt99_,txt13_);
ad(elt98_,elt99_);
ad(elt97_,elt98_);
ad(elt96_,elt97_);
ad(elt95_,elt96_);
ad(elt93_,elt95_);
ad(elt86_,elt93_);
ad(_body,elt86_);
Element elt100_=el(_doc,"c:if");
CustList<Attr> attrs71_=al(1);
attrs71_.add(at("condition","comboMultAccuracyAny()"));
at(elt100_,attrs71_);
Element elt101_=el(_doc,"c:message");
CustList<Attr> attrs72_=al(1);
attrs72_.add(at("value","msg_helpround,round_process_add_on_7_21"));
at(elt101_,attrs72_);
ad(elt100_,elt101_);
Element elt102_=el(_doc,"ul");
Element elt103_=el(_doc,"c:for");
CustList<Attr> attrs73_=al(2);
attrs73_.add(at("list","comboMultStat"));
attrs73_.add(at("var","a"));
at(elt103_,attrs73_);
Element elt104_=el(_doc,"c:if");
CustList<Attr> attrs74_=al(1);
attrs74_.add(at("condition","comboMultAccuracy(([a]))"));
at(elt104_,attrs74_);
Element elt105_=el(_doc,"li");
Element elt106_=el(_doc,"a");
CustList<Attr> attrs75_=al(1);
attrs75_.add(at("c:command","$clickComboMultStat({([a])})"));
at(elt106_,attrs75_);
Text txt14_=tx(_doc,"{getTrComboMultStat(([a]))}");
ad(elt106_,txt14_);
ad(elt105_,elt106_);
ad(elt104_,elt105_);
ad(elt103_,elt104_);
ad(elt102_,elt103_);
ad(elt100_,elt102_);
ad(_body,elt100_);
Element elt107_=el(_doc,"c:if");
CustList<Attr> attrs76_=al(1);
attrs76_.add(at("condition","abilityBoostEvasinessAny()"));
at(elt107_,attrs76_);
Element elt108_=el(_doc,"c:message");
CustList<Attr> attrs77_=al(1);
attrs77_.add(at("value","msg_helpround,round_process_add_on_7_22"));
at(elt108_,attrs77_);
ad(elt107_,elt108_);
Element elt109_=el(_doc,"ul");
Element elt110_=el(_doc,"c:for");
CustList<Attr> attrs78_=al(2);
attrs78_.add(at("list","abilitiesBoostingStat"));
attrs78_.add(at("var","a"));
at(elt110_,attrs78_);
Element elt111_=el(_doc,"c:if");
CustList<Attr> attrs79_=al(1);
attrs79_.add(at("condition","abilityBoostEvasiness(([a]))"));
at(elt111_,attrs79_);
Element elt112_=el(_doc,"li");
Element elt113_=el(_doc,"a");
CustList<Attr> attrs80_=al(1);
attrs80_.add(at("c:command","$clickAbilitiesBoostingStat({([a])})"));
at(elt113_,attrs80_);
Text txt15_=tx(_doc,"{getTrAbilitiesBoostingStat(([a]))}");
ad(elt113_,txt15_);
ad(elt112_,elt113_);
ad(elt111_,elt112_);
ad(elt110_,elt111_);
ad(elt109_,elt110_);
ad(elt107_,elt109_);
ad(_body,elt107_);
Element elt114_=el(_doc,"c:if");
CustList<Attr> attrs81_=al(1);
attrs81_.add(at("condition","itemBoostEvasinessAny()"));
at(elt114_,attrs81_);
Element elt115_=el(_doc,"c:message");
CustList<Attr> attrs82_=al(1);
attrs82_.add(at("value","msg_helpround,round_process_add_on_7_23"));
at(elt115_,attrs82_);
ad(elt114_,elt115_);
Element elt116_=el(_doc,"ul");
Element elt117_=el(_doc,"c:for");
CustList<Attr> attrs83_=al(2);
attrs83_.add(at("list","itemsBoostingStat"));
attrs83_.add(at("var","a"));
at(elt117_,attrs83_);
Element elt118_=el(_doc,"c:if");
CustList<Attr> attrs84_=al(1);
attrs84_.add(at("condition","itemBoostEvasiness(([a]))"));
at(elt118_,attrs84_);
Element elt119_=el(_doc,"li");
Element elt120_=el(_doc,"a");
CustList<Attr> attrs85_=al(1);
attrs85_.add(at("c:command","$clickItemsBoostingStat({([a])})"));
at(elt120_,attrs85_);
Text txt16_=tx(_doc,"{getTrItemsBoostingStat(([a]))}");
ad(elt120_,txt16_);
ad(elt119_,elt120_);
ad(elt118_,elt119_);
ad(elt117_,elt118_);
ad(elt116_,elt117_);
ad(elt114_,elt116_);
ad(_body,elt114_);
Element elt121_=el(_doc,"c:if");
CustList<Attr> attrs86_=al(1);
attrs86_.add(at("condition","itemMultEvasinessAny()"));
at(elt121_,attrs86_);
Element elt122_=el(_doc,"c:message");
CustList<Attr> attrs87_=al(1);
attrs87_.add(at("value","msg_helpround,round_process_add_on_7_24"));
at(elt122_,attrs87_);
ad(elt121_,elt122_);
Element elt123_=el(_doc,"ul");
Element elt124_=el(_doc,"c:for");
CustList<Attr> attrs88_=al(2);
attrs88_.add(at("list","itemsMultStat"));
attrs88_.add(at("var","a"));
at(elt124_,attrs88_);
Element elt125_=el(_doc,"c:if");
CustList<Attr> attrs89_=al(1);
attrs89_.add(at("condition","itemMultAccuracy(([a]))"));
at(elt125_,attrs89_);
Element elt126_=el(_doc,"li");
Element elt127_=el(_doc,"a");
CustList<Attr> attrs90_=al(1);
attrs90_.add(at("c:command","$clickItemsMultStat({([a])})"));
at(elt127_,attrs90_);
Text txt17_=tx(_doc,"{getTrItemsMultStat(([a]))}");
ad(elt127_,txt17_);
ad(elt126_,elt127_);
ad(elt125_,elt126_);
ad(elt124_,elt125_);
ad(elt123_,elt124_);
ad(elt121_,elt123_);
ad(_body,elt121_);
Element elt128_=el(_doc,"c:if");
CustList<Attr> attrs91_=al(1);
attrs91_.add(at("condition","abilityMultEvasinessAny()"));
at(elt128_,attrs91_);
Element elt129_=el(_doc,"c:message");
CustList<Attr> attrs92_=al(1);
attrs92_.add(at("value","msg_helpround,round_process_add_on_7_25"));
at(elt129_,attrs92_);
ad(elt128_,elt129_);
Element elt130_=el(_doc,"ul");
Element elt131_=el(_doc,"c:for");
CustList<Attr> attrs93_=al(2);
attrs93_.add(at("list","abilitiesMultStat"));
attrs93_.add(at("var","a"));
at(elt131_,attrs93_);
Element elt132_=el(_doc,"c:if");
CustList<Attr> attrs94_=al(1);
attrs94_.add(at("condition","abilityMultEvasiness(([a]))"));
at(elt132_,attrs94_);
Element elt133_=el(_doc,"li");
Element elt134_=el(_doc,"a");
CustList<Attr> attrs95_=al(1);
attrs95_.add(at("c:command","$clickAbilitiesMultStat({([a])})"));
at(elt134_,attrs95_);
Text txt18_=tx(_doc,"{getTrAbilitiesMultStat(([a]))}");
ad(elt134_,txt18_);
ad(elt133_,elt134_);
ad(elt132_,elt133_);
ad(elt131_,elt132_);
ad(elt130_,elt131_);
ad(elt128_,elt130_);
ad(_body,elt128_);
Element elt135_=el(_doc,"c:if");
CustList<Attr> attrs96_=al(1);
attrs96_.add(at("condition","moveGlobalMultEvasinessAny()"));
at(elt135_,attrs96_);
Element elt136_=el(_doc,"c:message");
CustList<Attr> attrs97_=al(1);
attrs97_.add(at("value","msg_helpround,round_process_add_on_7_26"));
at(elt136_,attrs97_);
ad(elt135_,elt136_);
Element elt137_=el(_doc,"ul");
Element elt138_=el(_doc,"c:for");
CustList<Attr> attrs98_=al(2);
attrs98_.add(at("list","movesGlobalMultStat"));
attrs98_.add(at("var","a"));
at(elt138_,attrs98_);
Element elt139_=el(_doc,"c:if");
CustList<Attr> attrs99_=al(1);
attrs99_.add(at("condition","moveGlobalMultEvasiness(([a]))"));
at(elt139_,attrs99_);
Element elt140_=el(_doc,"li");
Element elt141_=el(_doc,"a");
CustList<Attr> attrs100_=al(1);
attrs100_.add(at("c:command","$clickMovesGlobalMultStat({([a])})"));
at(elt141_,attrs100_);
Text txt19_=tx(_doc,"{getTrMovesGlobalMultStat(([a]))}");
ad(elt141_,txt19_);
ad(elt140_,elt141_);
ad(elt139_,elt140_);
ad(elt138_,elt139_);
ad(elt137_,elt138_);
ad(elt135_,elt137_);
ad(_body,elt135_);
Element elt142_=el(_doc,"c:if");
CustList<Attr> attrs101_=al(1);
attrs101_.add(at("condition","moveTeamMultEvasinessAny()"));
at(elt142_,attrs101_);
Element elt143_=el(_doc,"c:message");
CustList<Attr> attrs102_=al(1);
attrs102_.add(at("value","msg_helpround,round_process_add_on_7_27"));
at(elt143_,attrs102_);
ad(elt142_,elt143_);
Element elt144_=el(_doc,"ul");
Element elt145_=el(_doc,"c:for");
CustList<Attr> attrs103_=al(2);
attrs103_.add(at("list","movesTeamMultStat"));
attrs103_.add(at("var","a"));
at(elt145_,attrs103_);
Element elt146_=el(_doc,"c:if");
CustList<Attr> attrs104_=al(1);
attrs104_.add(at("condition","moveTeamMultEvasiness(([a]))"));
at(elt146_,attrs104_);
Element elt147_=el(_doc,"li");
Element elt148_=el(_doc,"a");
CustList<Attr> attrs105_=al(1);
attrs105_.add(at("c:command","$clickMovesTeamMultStat({([a])})"));
at(elt148_,attrs105_);
Text txt20_=tx(_doc,"{getTrMovesTeamMultStat(([a]))}");
ad(elt148_,txt20_);
ad(elt147_,elt148_);
ad(elt146_,elt147_);
ad(elt145_,elt146_);
ad(elt144_,elt145_);
ad(elt142_,elt144_);
ad(_body,elt142_);
Element elt149_=el(_doc,"c:if");
CustList<Attr> attrs106_=al(1);
attrs106_.add(at("condition","abilityAllyMultEvasinessAny()"));
at(elt149_,attrs106_);
Element elt150_=el(_doc,"c:message");
CustList<Attr> attrs107_=al(1);
attrs107_.add(at("value","msg_helpround,round_process_add_on_7_28"));
at(elt150_,attrs107_);
ad(elt149_,elt150_);
Element elt151_=el(_doc,"ul");
Element elt152_=el(_doc,"c:for");
CustList<Attr> attrs108_=al(2);
attrs108_.add(at("list","abilitiesAllyMultStat"));
attrs108_.add(at("var","a"));
at(elt152_,attrs108_);
Element elt153_=el(_doc,"c:if");
CustList<Attr> attrs109_=al(1);
attrs109_.add(at("condition","abilityAllyMultEvasiness(([a]))"));
at(elt153_,attrs109_);
Element elt154_=el(_doc,"li");
Element elt155_=el(_doc,"a");
CustList<Attr> attrs110_=al(1);
attrs110_.add(at("c:command","$clickAbilitiesAllyMultStat({([a])})"));
at(elt155_,attrs110_);
Text txt21_=tx(_doc,"{getTrAbilitiesAllyMultStat(([a]))}");
ad(elt155_,txt21_);
ad(elt154_,elt155_);
ad(elt153_,elt154_);
ad(elt152_,elt153_);
ad(elt151_,elt152_);
ad(elt149_,elt151_);
ad(_body,elt149_);
Element elt156_=el(_doc,"c:if");
CustList<Attr> attrs111_=al(1);
attrs111_.add(at("condition","moveFoeTeamMultEvasinessAny()"));
at(elt156_,attrs111_);
Element elt157_=el(_doc,"c:message");
CustList<Attr> attrs112_=al(1);
attrs112_.add(at("value","msg_helpround,round_process_add_on_7_29"));
at(elt157_,attrs112_);
ad(elt156_,elt157_);
Element elt158_=el(_doc,"ul");
Element elt159_=el(_doc,"c:for");
CustList<Attr> attrs113_=al(2);
attrs113_.add(at("list","movesFoeTeamMultStat"));
attrs113_.add(at("var","a"));
at(elt159_,attrs113_);
Element elt160_=el(_doc,"c:if");
CustList<Attr> attrs114_=al(1);
attrs114_.add(at("condition","moveFoeTeamMultEvasiness(([a]))"));
at(elt160_,attrs114_);
Element elt161_=el(_doc,"li");
Element elt162_=el(_doc,"a");
CustList<Attr> attrs115_=al(1);
attrs115_.add(at("c:command","$clickMovesFoeTeamMultStat({([a])})"));
at(elt162_,attrs115_);
Text txt22_=tx(_doc,"{getTrMovesFoeTeamMultStat(([a]))}");
ad(elt162_,txt22_);
ad(elt161_,elt162_);
ad(elt160_,elt161_);
ad(elt159_,elt160_);
ad(elt158_,elt159_);
ad(elt156_,elt158_);
ad(_body,elt156_);
Element elt163_=el(_doc,"c:if");
CustList<Attr> attrs116_=al(1);
attrs116_.add(at("condition","statusMultEvasinessAny()"));
at(elt163_,attrs116_);
Element elt164_=el(_doc,"c:message");
CustList<Attr> attrs117_=al(1);
attrs117_.add(at("value","msg_helpround,round_process_add_on_7_30"));
at(elt164_,attrs117_);
ad(elt163_,elt164_);
Element elt165_=el(_doc,"ul");
Element elt166_=el(_doc,"c:for");
CustList<Attr> attrs118_=al(2);
attrs118_.add(at("list","statusMultStat"));
attrs118_.add(at("var","a"));
at(elt166_,attrs118_);
Element elt167_=el(_doc,"c:if");
CustList<Attr> attrs119_=al(1);
attrs119_.add(at("condition","statusMultEvasiness(([a]))"));
at(elt167_,attrs119_);
Element elt168_=el(_doc,"li");
Element elt169_=el(_doc,"a");
CustList<Attr> attrs120_=al(1);
attrs120_.add(at("c:command","$clickStatusMultStat({([a])})"));
at(elt169_,attrs120_);
Text txt23_=tx(_doc,"{getTrStatusMultStat(([a]))}");
ad(elt169_,txt23_);
ad(elt168_,elt169_);
ad(elt167_,elt168_);
ad(elt166_,elt167_);
ad(elt165_,elt166_);
ad(elt163_,elt165_);
Element elt170_=el(_doc,"c:if");
CustList<Attr> attrs121_=al(1);
attrs121_.add(at("condition","abilityImmuMultEvasinessAny()"));
at(elt170_,attrs121_);
Element elt171_=el(_doc,"c:message");
CustList<Attr> attrs122_=al(1);
attrs122_.add(at("value","msg_helpround,round_process_add_on_7_31"));
at(elt171_,attrs122_);
ad(elt170_,elt171_);
Element elt172_=el(_doc,"ul");
Element elt173_=el(_doc,"c:for");
CustList<Attr> attrs123_=al(2);
attrs123_.add(at("list","abilitiesImmuMultStat"));
attrs123_.add(at("var","a"));
at(elt173_,attrs123_);
Element elt174_=el(_doc,"c:if");
CustList<Attr> attrs124_=al(1);
attrs124_.add(at("condition","abilityImmuMultEvasiness(([a]))"));
at(elt174_,attrs124_);
Element elt175_=el(_doc,"li");
Element elt176_=el(_doc,"a");
CustList<Attr> attrs125_=al(1);
attrs125_.add(at("c:command","$clickAbilitiesImmuMultStat({([a])})"));
at(elt176_,attrs125_);
Text txt24_=tx(_doc,"{getTrAbilitiesImmuMultStat(([a]))}");
ad(elt176_,txt24_);
ad(elt175_,elt176_);
ad(elt174_,elt175_);
ad(elt173_,elt174_);
ad(elt172_,elt173_);
ad(elt170_,elt172_);
ad(elt163_,elt170_);
ad(_body,elt163_);
Element elt177_=el(_doc,"c:if");
CustList<Attr> attrs126_=al(1);
attrs126_.add(at("condition","comboMultEvasinessAny()"));
at(elt177_,attrs126_);
Element elt178_=el(_doc,"c:message");
CustList<Attr> attrs127_=al(1);
attrs127_.add(at("value","msg_helpround,round_process_add_on_7_32"));
at(elt178_,attrs127_);
ad(elt177_,elt178_);
Element elt179_=el(_doc,"ul");
Element elt180_=el(_doc,"c:for");
CustList<Attr> attrs128_=al(2);
attrs128_.add(at("list","comboMultStat"));
attrs128_.add(at("var","a"));
at(elt180_,attrs128_);
Element elt181_=el(_doc,"c:if");
CustList<Attr> attrs129_=al(1);
attrs129_.add(at("condition","comboMultEvasiness(([a]))"));
at(elt181_,attrs129_);
Element elt182_=el(_doc,"li");
Element elt183_=el(_doc,"a");
CustList<Attr> attrs130_=al(1);
attrs130_.add(at("c:command","$clickComboMultStat({([a])})"));
at(elt183_,attrs130_);
Text txt25_=tx(_doc,"{getTrComboMultStat(([a]))}");
ad(elt183_,txt25_);
ad(elt182_,elt183_);
ad(elt181_,elt182_);
ad(elt180_,elt181_);
ad(elt179_,elt180_);
ad(elt177_,elt179_);
ad(_body,elt177_);
}
static void build16(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_8"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:if");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("condition","immuChTeamMoveAny()"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_8_1"));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
Element elt4_=el(_doc,"ul");
Element elt5_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("list","movesTeam"));
attrs3_.add(at("var","a"));
at(elt5_,attrs3_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","immuChTeamMove(([a]))"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickMovesTeam({([a])})"));
at(elt8_,attrs5_);
Text txt0_=tx(_doc,"{getTrMovesTeam(([a]))}");
ad(elt8_,txt0_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt2_,elt4_);
Element elt9_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!abilitiesUserIgnTargetTeam.isEmpty()"));
at(elt9_,attrs6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_8_2"));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"ul");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(2);
attrs8_.add(at("list","abilitiesUserIgnTargetTeam"));
attrs8_.add(at("var","a"));
at(elt12_,attrs8_);
Element elt13_=el(_doc,"li");
Element elt14_=el(_doc,"a");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("c:command","$clickAbilitiesUserIgnTargetTeam({([a])})"));
at(elt14_,attrs9_);
Text txt1_=tx(_doc,"{getTrAbilitiesUserIgnTargetTeam(([a]))}");
ad(elt14_,txt1_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
ad(elt2_,elt9_);
ad(_body,elt2_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!abilitiesImmuCh.isEmpty()"));
at(elt15_,attrs10_);
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_helpround,round_process_add_on_8_3"));
at(elt16_,attrs11_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"ul");
Element elt18_=el(_doc,"c:for");
CustList<Attr> attrs12_=al(2);
attrs12_.add(at("list","abilitiesImmuCh"));
attrs12_.add(at("var","a"));
at(elt18_,attrs12_);
Element elt19_=el(_doc,"li");
Element elt20_=el(_doc,"a");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("c:command","$clickAbilitiesImmuCh({([a])})"));
at(elt20_,attrs13_);
Text txt2_=tx(_doc,"{getTrAbilitiesImmuCh(([a]))}");
ad(elt20_,txt2_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
ad(_body,elt15_);
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","abilityBoostChAny()"));
at(elt21_,attrs14_);
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,round_process_add_on_8_5"));
at(elt22_,attrs15_);
ad(elt21_,elt22_);
Element elt23_=el(_doc,"ul");
Element elt24_=el(_doc,"c:for");
CustList<Attr> attrs16_=al(2);
attrs16_.add(at("list","abilitiesBoostingStat"));
attrs16_.add(at("var","a"));
at(elt24_,attrs16_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("condition","abilityBoostCh(([a]))"));
at(elt25_,attrs17_);
Element elt26_=el(_doc,"li");
Element elt27_=el(_doc,"a");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("c:command","$clickAbilitiesBoostingStat({([a])})"));
at(elt27_,attrs18_);
Text txt3_=tx(_doc,"{getTrAbilitiesBoostingStat(([a]))}");
ad(elt27_,txt3_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt21_,elt23_);
ad(_body,elt21_);
Element elt28_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","itemBoostChAny()"));
at(elt28_,attrs19_);
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg_helpround,round_process_add_on_8_4"));
at(elt29_,attrs20_);
ad(elt28_,elt29_);
Element elt30_=el(_doc,"ul");
Element elt31_=el(_doc,"c:for");
CustList<Attr> attrs21_=al(2);
attrs21_.add(at("list","itemsBoostingStat"));
attrs21_.add(at("var","a"));
at(elt31_,attrs21_);
Element elt32_=el(_doc,"c:if");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("condition","itemBoostCh(([a]))"));
at(elt32_,attrs22_);
Element elt33_=el(_doc,"li");
Element elt34_=el(_doc,"a");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("c:command","$clickItemsBoostingStat({([a])})"));
at(elt34_,attrs23_);
Text txt4_=tx(_doc,"{getTrItemsBoostingStat(([a]))}");
ad(elt34_,txt4_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt28_,elt30_);
ad(_body,elt28_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","!movesBoostCh.isEmpty()"));
at(elt35_,attrs24_);
Element elt36_=el(_doc,"c:message");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("value","msg_helpround,round_process_add_on_8_6"));
at(elt36_,attrs25_);
ad(elt35_,elt36_);
Element elt37_=el(_doc,"ul");
Element elt38_=el(_doc,"c:for");
CustList<Attr> attrs26_=al(2);
attrs26_.add(at("list","movesBoostCh"));
attrs26_.add(at("var","a"));
at(elt38_,attrs26_);
Element elt39_=el(_doc,"li");
Element elt40_=el(_doc,"a");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("c:command","$clickMovesBoostCh({([a])})"));
at(elt40_,attrs27_);
Text txt5_=tx(_doc,"{getTrMovesBoostCh(([a]))}");
ad(elt40_,txt5_);
ad(elt39_,elt40_);
ad(elt38_,elt39_);
ad(elt37_,elt38_);
ad(elt35_,elt37_);
ad(_body,elt35_);
Element elt41_=el(_doc,"c:if");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("condition","!abilitesMultEvtCh.isEmpty()"));
at(elt41_,attrs28_);
Element elt42_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","msg_helpround,round_process_add_on_8_7"));
at(elt42_,attrs29_);
ad(elt41_,elt42_);
Element elt43_=el(_doc,"ul");
Element elt44_=el(_doc,"c:for");
CustList<Attr> attrs30_=al(2);
attrs30_.add(at("list","abilitesMultEvtCh"));
attrs30_.add(at("var","a"));
at(elt44_,attrs30_);
Element elt45_=el(_doc,"li");
Element elt46_=el(_doc,"a");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("c:command","$clickAbilitiesMultEvtCh({([a])})"));
at(elt46_,attrs31_);
Text txt6_=tx(_doc,"{getTrAbilitiesMultEvtCh(([a]))}");
ad(elt46_,txt6_);
ad(elt45_,elt46_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
ad(elt41_,elt43_);
ad(_body,elt41_);
Element elt47_=el(_doc,"c:if");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("condition","!abilitesMultRateCh.isEmpty()"));
at(elt47_,attrs32_);
Element elt48_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_helpround,round_process_add_on_8_8"));
at(elt48_,attrs33_);
ad(elt47_,elt48_);
Element elt49_=el(_doc,"ul");
Element elt50_=el(_doc,"c:for");
CustList<Attr> attrs34_=al(2);
attrs34_.add(at("list","abilitesMultRateCh"));
attrs34_.add(at("var","a"));
at(elt50_,attrs34_);
Element elt51_=el(_doc,"li");
Element elt52_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickAbilitiesMultRateCh({([a])})"));
at(elt52_,attrs35_);
Text txt7_=tx(_doc,"{getTrAbilitiesMultRateCh(([a]))}");
ad(elt52_,txt7_);
ad(elt51_,elt52_);
ad(elt50_,elt51_);
ad(elt49_,elt50_);
ad(elt47_,elt49_);
ad(_body,elt47_);
}
static void build17(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_9"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:if");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("condition","abilityBoostSpeedAny()"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_9_1"));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
Element elt4_=el(_doc,"ul");
Element elt5_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("list","abilitiesBoostingStat"));
attrs3_.add(at("var","a"));
at(elt5_,attrs3_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","abilityBoostSpeed(([a]))"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"li");
Element elt8_=el(_doc,"a");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("c:command","$clickAbilitiesBoostingStat({([a])})"));
at(elt8_,attrs5_);
Text txt0_=tx(_doc,"{getTrAbilitiesBoostingStat(([a]))}");
ad(elt8_,txt0_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(elt2_,elt4_);
ad(_body,elt2_);
Element elt9_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","itemBoostSpeedAny()"));
at(elt9_,attrs6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_9_2"));
at(elt10_,attrs7_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"ul");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs8_=al(2);
attrs8_.add(at("list","itemsBoostingStat"));
attrs8_.add(at("var","a"));
at(elt12_,attrs8_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","itemBoostSpeed(([a]))"));
at(elt13_,attrs9_);
Element elt14_=el(_doc,"li");
Element elt15_=el(_doc,"a");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("c:command","$clickItemsBoostingStat({([a])})"));
at(elt15_,attrs10_);
Text txt1_=tx(_doc,"{getTrItemsBoostingStat(([a]))}");
ad(elt15_,txt1_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
ad(_body,elt9_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","itemMultSpeedAny()"));
at(elt16_,attrs11_);
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_9_3"));
at(elt17_,attrs12_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"ul");
Element elt19_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("list","itemsMultStat"));
attrs13_.add(at("var","a"));
at(elt19_,attrs13_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","itemMultSpeed(([a]))"));
at(elt20_,attrs14_);
Element elt21_=el(_doc,"li");
Element elt22_=el(_doc,"a");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("c:command","$clickItemsMultStat({([a])})"));
at(elt22_,attrs15_);
Text txt2_=tx(_doc,"{getTrItemsMultStat(([a]))}");
ad(elt22_,txt2_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt16_,elt18_);
ad(_body,elt16_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","abilityMultSpeedAny()"));
at(elt23_,attrs16_);
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_helpround,round_process_add_on_9_4"));
at(elt24_,attrs17_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,"ul");
Element elt26_=el(_doc,"c:for");
CustList<Attr> attrs18_=al(2);
attrs18_.add(at("list","abilitiesMultStat"));
attrs18_.add(at("var","a"));
at(elt26_,attrs18_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","abilityMultSpeed(([a]))"));
at(elt27_,attrs19_);
Element elt28_=el(_doc,"li");
Element elt29_=el(_doc,"a");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("c:command","$clickAbilitiesMultStat({([a])})"));
at(elt29_,attrs20_);
Text txt3_=tx(_doc,"{getTrAbilitiesMultStat(([a]))}");
ad(elt29_,txt3_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt23_,elt25_);
ad(_body,elt23_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","moveGlobalMultSpeedAny()"));
at(elt30_,attrs21_);
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,round_process_add_on_9_5"));
at(elt31_,attrs22_);
ad(elt30_,elt31_);
Element elt32_=el(_doc,"ul");
Element elt33_=el(_doc,"c:for");
CustList<Attr> attrs23_=al(2);
attrs23_.add(at("list","movesGlobalMultStat"));
attrs23_.add(at("var","a"));
at(elt33_,attrs23_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","moveGlobalMultSpeed(([a]))"));
at(elt34_,attrs24_);
Element elt35_=el(_doc,"li");
Element elt36_=el(_doc,"a");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("c:command","$clickMovesGlobalMultStat({([a])})"));
at(elt36_,attrs25_);
Text txt4_=tx(_doc,"{getTrMovesGlobalMultStat(([a]))}");
ad(elt36_,txt4_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt30_,elt32_);
ad(_body,elt30_);
Element elt37_=el(_doc,"c:if");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("condition","moveTeamMultSpeedAny()"));
at(elt37_,attrs26_);
Element elt38_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_helpround,round_process_add_on_9_6"));
at(elt38_,attrs27_);
ad(elt37_,elt38_);
Element elt39_=el(_doc,"ul");
Element elt40_=el(_doc,"c:for");
CustList<Attr> attrs28_=al(2);
attrs28_.add(at("list","movesTeamMultStat"));
attrs28_.add(at("var","a"));
at(elt40_,attrs28_);
Element elt41_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","moveTeamMultSpeed(([a]))"));
at(elt41_,attrs29_);
Element elt42_=el(_doc,"li");
Element elt43_=el(_doc,"a");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("c:command","$clickMovesTeamMultStat({([a])})"));
at(elt43_,attrs30_);
Text txt5_=tx(_doc,"{getTrMovesTeamMultStat(([a]))}");
ad(elt43_,txt5_);
ad(elt42_,elt43_);
ad(elt41_,elt42_);
ad(elt40_,elt41_);
ad(elt39_,elt40_);
ad(elt37_,elt39_);
ad(_body,elt37_);
Element elt44_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","abilityAllyMultSpeedAny()"));
at(elt44_,attrs31_);
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("value","msg_helpround,round_process_add_on_9_7"));
at(elt45_,attrs32_);
ad(elt44_,elt45_);
Element elt46_=el(_doc,"ul");
Element elt47_=el(_doc,"c:for");
CustList<Attr> attrs33_=al(2);
attrs33_.add(at("list","abilitiesAllyMultStat"));
attrs33_.add(at("var","a"));
at(elt47_,attrs33_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("condition","abilityAllyMultSpeed(([a]))"));
at(elt48_,attrs34_);
Element elt49_=el(_doc,"li");
Element elt50_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickAbilitiesAllyMultStat({([a])})"));
at(elt50_,attrs35_);
Text txt6_=tx(_doc,"{getTrAbilitiesAllyMultStat(([a]))}");
ad(elt50_,txt6_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt47_,elt48_);
ad(elt46_,elt47_);
ad(elt44_,elt46_);
ad(_body,elt44_);
Element elt51_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","moveFoeTeamMultSpeedAny()"));
at(elt51_,attrs36_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_helpround,round_process_add_on_9_8"));
at(elt52_,attrs37_);
ad(elt51_,elt52_);
Element elt53_=el(_doc,"ul");
Element elt54_=el(_doc,"c:for");
CustList<Attr> attrs38_=al(2);
attrs38_.add(at("list","movesFoeTeamMultStat"));
attrs38_.add(at("var","a"));
at(elt54_,attrs38_);
Element elt55_=el(_doc,"c:if");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("condition","moveFoeTeamMultSpeed(([a]))"));
at(elt55_,attrs39_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"a");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("c:command","$clickMovesFoeTeamMultStat({([a])})"));
at(elt57_,attrs40_);
Text txt7_=tx(_doc,"{getTrMovesFoeTeamMultStat(([a]))}");
ad(elt57_,txt7_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt53_,elt54_);
ad(elt51_,elt53_);
ad(_body,elt51_);
Element elt58_=el(_doc,"c:if");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("condition","statusMultSpeedAny()"));
at(elt58_,attrs41_);
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_helpround,round_process_add_on_9_9"));
at(elt59_,attrs42_);
ad(elt58_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"c:for");
CustList<Attr> attrs43_=al(2);
attrs43_.add(at("list","statusMultStat"));
attrs43_.add(at("var","a"));
at(elt61_,attrs43_);
Element elt62_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","statusMultSpeed(([a]))"));
at(elt62_,attrs44_);
Element elt63_=el(_doc,"li");
Element elt64_=el(_doc,"a");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("c:command","$clickStatusMultStat({([a])})"));
at(elt64_,attrs45_);
Text txt8_=tx(_doc,"{getTrStatusMultStat(([a]))}");
ad(elt64_,txt8_);
ad(elt63_,elt64_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt60_,elt61_);
ad(elt58_,elt60_);
Element elt65_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","abilityImmuMultSpeedAny()"));
at(elt65_,attrs46_);
Element elt66_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,round_process_add_on_9_10"));
at(elt66_,attrs47_);
ad(elt65_,elt66_);
Element elt67_=el(_doc,"ul");
Element elt68_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","abilitiesImmuMultStat"));
attrs48_.add(at("var","a"));
at(elt68_,attrs48_);
Element elt69_=el(_doc,"c:if");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("condition","abilityImmuMultSpeed(([a]))"));
at(elt69_,attrs49_);
Element elt70_=el(_doc,"li");
Element elt71_=el(_doc,"a");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("c:command","$clickAbilitiesImmuMultStat({([a])})"));
at(elt71_,attrs50_);
Text txt9_=tx(_doc,"{getTrAbilitiesImmuMultStat(([a]))}");
ad(elt71_,txt9_);
ad(elt70_,elt71_);
ad(elt69_,elt70_);
ad(elt68_,elt69_);
ad(elt67_,elt68_);
ad(elt65_,elt67_);
ad(elt58_,elt65_);
ad(_body,elt58_);
Element elt72_=el(_doc,"c:if");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("condition","comboMultSpeedAny()"));
at(elt72_,attrs51_);
Element elt73_=el(_doc,"c:message");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","msg_helpround,round_process_add_on_9_11"));
at(elt73_,attrs52_);
ad(elt72_,elt73_);
Element elt74_=el(_doc,"ul");
Element elt75_=el(_doc,"c:for");
CustList<Attr> attrs53_=al(2);
attrs53_.add(at("list","comboMultStat"));
attrs53_.add(at("var","a"));
at(elt75_,attrs53_);
Element elt76_=el(_doc,"c:if");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("condition","comboMultSpeed(([a]))"));
at(elt76_,attrs54_);
Element elt77_=el(_doc,"li");
Element elt78_=el(_doc,"a");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("c:command","$clickComboMultStat({([a])})"));
at(elt78_,attrs55_);
Text txt10_=tx(_doc,"{getTrComboMultStat(([a]))}");
ad(elt78_,txt10_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(elt75_,elt76_);
ad(elt74_,elt75_);
ad(elt72_,elt74_);
ad(_body,elt72_);
}
static void build18(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_10"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_10_1"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Text txt0_=tx(_doc,"{rateFormula}");
ad(_body,txt0_);
Element elt3_=el(_doc,"br");
ad(_body,elt3_);
Element elt4_=el(_doc,"table");
Element elt5_=el(_doc,"tbody");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","b"));
attrs2_.add(at("map","boosts"));
attrs2_.add(at("value","r"));
attrs2_.add(at("keyClassName","java.lang.Long"));
attrs2_.add(at("varClassName","r"));
at(elt6_,attrs2_);
Element elt7_=el(_doc,"tr");
Element elt8_=el(_doc,"td");
Text txt1_=tx(_doc,"{b}");
ad(elt8_,txt1_);
ad(elt7_,elt8_);
Element elt9_=el(_doc,"td");
Text txt2_=tx(_doc,"{r}");
ad(elt9_,txt2_);
ad(elt7_,elt9_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(_body,elt4_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_helpround,round_process_add_on_10_2"));
at(elt10_,attrs3_);
ad(_body,elt10_);
Text txt3_=tx(_doc,"{rateFormulaCh}");
ad(_body,txt3_);
Element elt11_=el(_doc,"br");
ad(_body,elt11_);
Element elt12_=el(_doc,"table");
Element elt13_=el(_doc,"tbody");
Element elt14_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(5);
attrs4_.add(at("key","b"));
attrs4_.add(at("map","boostsCh"));
attrs4_.add(at("value","r"));
attrs4_.add(at("keyClassName","java.lang.Long"));
attrs4_.add(at("varClassName","r"));
at(elt14_,attrs4_);
Element elt15_=el(_doc,"tr");
Element elt16_=el(_doc,"td");
Text txt4_=tx(_doc,"{b}");
ad(elt16_,txt4_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"td");
Text txt5_=tx(_doc,"{r}");
ad(elt17_,txt5_);
ad(elt15_,elt17_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(_body,elt12_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,round_process_add_on_10_3"));
at(elt18_,attrs5_);
ad(_body,elt18_);
Element elt19_=el(_doc,"br");
ad(_body,elt19_);
}
static void build19(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_4"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_4_0_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"ul");
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_helpround,round_process_add_on_4_0"));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Element elt6_=el(_doc,"ul");
Element elt7_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(2);
attrs3_.add(at("list","itemsCancelImmu"));
attrs3_.add(at("var","a"));
at(elt7_,attrs3_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"a");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("c:command","$clickItemsCancelImmu({([a])})"));
at(elt9_,attrs4_);
Text txt0_=tx(_doc,"{getTrItemsCancelImmu(([a]))}");
ad(elt9_,txt0_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_helpround,round_process_add_on_4_0_1"));
at(elt10_,attrs5_);
ad(elt4_,elt10_);
Element elt11_=el(_doc,"ul");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs6_=al(2);
attrs6_.add(at("list","movesProtectingTypes"));
attrs6_.add(at("var","a"));
at(elt12_,attrs6_);
Element elt13_=el(_doc,"li");
Element elt14_=el(_doc,"a");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("c:command","$clickMovesProtectingTypes({([a])})"));
at(elt14_,attrs7_);
Text txt1_=tx(_doc,"{getTrMovesProtectingTypes(([a]))}");
ad(elt14_,txt1_);
ad(elt13_,elt14_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt4_,elt11_);
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_helpround,round_process_add_on_4_0_2"));
at(elt15_,attrs8_);
ad(elt4_,elt15_);
ad(elt3_,elt4_);
Element elt16_=el(_doc,"li");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_helpround,round_process_add_on_4_1"));
at(elt17_,attrs9_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"ul");
Element elt19_=el(_doc,"c:for");
CustList<Attr> attrs10_=al(2);
attrs10_.add(at("list","itemsCancelImmu"));
attrs10_.add(at("var","a"));
at(elt19_,attrs10_);
Element elt20_=el(_doc,"li");
Element elt21_=el(_doc,"a");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("c:command","$clickItemsCancelImmu({([a])})"));
at(elt21_,attrs11_);
Text txt2_=tx(_doc,"{getTrItemsCancelImmu(([a]))}");
ad(elt21_,txt2_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt16_,elt18_);
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_helpround,round_process_add_on_4_1_1"));
at(elt22_,attrs12_);
ad(elt16_,elt22_);
Element elt23_=el(_doc,"ul");
Element elt24_=el(_doc,"c:for");
CustList<Attr> attrs13_=al(2);
attrs13_.add(at("list","movesUnprotectingTypes"));
attrs13_.add(at("var","a"));
at(elt24_,attrs13_);
Element elt25_=el(_doc,"li");
Element elt26_=el(_doc,"a");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("c:command","$clickMovesUnprotectingTypes({([a])})"));
at(elt26_,attrs14_);
Text txt3_=tx(_doc,"{getTrMovesUnprotectingTypes(([a]))}");
ad(elt26_,txt3_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt16_,elt23_);
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_helpround,round_process_add_on_4_1_2"));
at(elt27_,attrs15_);
ad(elt16_,elt27_);
Element elt28_=el(_doc,"ul");
Element elt29_=el(_doc,"c:for");
CustList<Attr> attrs16_=al(2);
attrs16_.add(at("list","movesProtectingTypes"));
attrs16_.add(at("var","a"));
at(elt29_,attrs16_);
Element elt30_=el(_doc,"li");
Element elt31_=el(_doc,"a");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("c:command","$clickMovesProtectingTypes({([a])})"));
at(elt31_,attrs17_);
Text txt4_=tx(_doc,"{getTrMovesProtectingTypes(([a]))}");
ad(elt31_,txt4_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt16_,elt28_);
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_helpround,round_process_add_on_4_1_3"));
at(elt32_,attrs18_);
ad(elt16_,elt32_);
ad(elt3_,elt16_);
Element elt33_=el(_doc,"li");
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_helpround,round_process_add_on_4_2"));
at(elt34_,attrs19_);
ad(elt33_,elt34_);
Element elt35_=el(_doc,"ul");
Element elt36_=el(_doc,"c:for");
CustList<Attr> attrs20_=al(2);
attrs20_.add(at("list","movesGlobalBreakImmu"));
attrs20_.add(at("var","a"));
at(elt36_,attrs20_);
Element elt37_=el(_doc,"li");
Element elt38_=el(_doc,"a");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("c:command","$clickMovesGlobalBreakImmu({([a])})"));
at(elt38_,attrs21_);
Text txt5_=tx(_doc,"{getTrMovesGlobalBreakImmu(([a]))}");
ad(elt38_,txt5_);
ad(elt37_,elt38_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt33_,elt35_);
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg_helpround,round_process_add_on_4_2_1"));
at(elt39_,attrs22_);
ad(elt33_,elt39_);
ad(elt3_,elt33_);
Element elt40_=el(_doc,"li");
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","msg_helpround,round_process_add_on_4_3"));
at(elt41_,attrs23_);
ad(elt40_,elt41_);
Element elt42_=el(_doc,"ul");
Element elt43_=el(_doc,"c:for");
CustList<Attr> attrs24_=al(2);
attrs24_.add(at("list","movesGlobalBreakImmuAb"));
attrs24_.add(at("var","a"));
at(elt43_,attrs24_);
Element elt44_=el(_doc,"li");
Element elt45_=el(_doc,"a");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("c:command","$clickMovesGlobalBreakImmuAb({([a])})"));
at(elt45_,attrs25_);
Text txt6_=tx(_doc,"{getTrMovesGlobalBreakImmuAb(([a]))}");
ad(elt45_,txt6_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
ad(elt42_,elt43_);
ad(elt40_,elt42_);
Element elt46_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg_helpround,round_process_add_on_4_3_1"));
at(elt46_,attrs26_);
ad(elt40_,elt46_);
Element elt47_=el(_doc,"ul");
Element elt48_=el(_doc,"c:for");
CustList<Attr> attrs27_=al(2);
attrs27_.add(at("list","abilitiesBreakable"));
attrs27_.add(at("var","a"));
at(elt48_,attrs27_);
Element elt49_=el(_doc,"li");
Element elt50_=el(_doc,"a");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("c:command","$clickAbilitiesBreakable({([a])})"));
at(elt50_,attrs28_);
Text txt7_=tx(_doc,"{getTrAbilitiesBreakable(([a]))}");
ad(elt50_,txt7_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt47_,elt48_);
ad(elt40_,elt47_);
Element elt51_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","msg_helpround,round_process_add_on_4_3_2"));
at(elt51_,attrs29_);
ad(elt40_,elt51_);
ad(elt3_,elt40_);
Element elt52_=el(_doc,"li");
Element elt53_=el(_doc,"c:message");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","msg_helpround,round_process_add_on_4_4"));
at(elt53_,attrs30_);
ad(elt52_,elt53_);
Element elt54_=el(_doc,"ul");
Element elt55_=el(_doc,"c:for");
CustList<Attr> attrs31_=al(2);
attrs31_.add(at("list","abilitiesImmuTypes"));
attrs31_.add(at("var","a"));
at(elt55_,attrs31_);
Element elt56_=el(_doc,"li");
Element elt57_=el(_doc,"a");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("c:command","$clickAbilitiesImmuTypes({([a])})"));
at(elt57_,attrs32_);
Text txt8_=tx(_doc,"{getTrAbilitiesImmuTypes(([a]))}");
ad(elt57_,txt8_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
ad(elt54_,elt55_);
ad(elt52_,elt54_);
ad(elt3_,elt52_);
Element elt58_=el(_doc,"li");
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_helpround,round_process_add_on_4_5"));
at(elt59_,attrs33_);
ad(elt58_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"c:for");
CustList<Attr> attrs34_=al(2);
attrs34_.add(at("list","itemsImmuTypes"));
attrs34_.add(at("var","a"));
at(elt61_,attrs34_);
Element elt62_=el(_doc,"li");
Element elt63_=el(_doc,"a");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("c:command","$clickItemsImmuTypes({([a])})"));
at(elt63_,attrs35_);
Text txt9_=tx(_doc,"{getTrItemsImmuTypes(([a]))}");
ad(elt63_,txt9_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
ad(elt60_,elt61_);
ad(elt58_,elt60_);
ad(elt3_,elt58_);
ad(_body,elt3_);
Element elt64_=el(_doc,"c:message");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("value","msg_helpround,round_process_add_on_4_6"));
at(elt64_,attrs36_);
ad(_body,elt64_);
Element elt65_=el(_doc,"ul");
Element elt66_=el(_doc,"c:for");
CustList<Attr> attrs37_=al(2);
attrs37_.add(at("list","abilitiesImmuAllies"));
attrs37_.add(at("var","a"));
at(elt66_,attrs37_);
Element elt67_=el(_doc,"li");
Element elt68_=el(_doc,"a");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("c:command","$clickAbilitiesImmuAllies({([a])})"));
at(elt68_,attrs38_);
Text txt10_=tx(_doc,"{getTrAbilitiesImmuAllies(([a]))}");
ad(elt68_,txt10_);
ad(elt67_,elt68_);
ad(elt66_,elt67_);
ad(elt65_,elt66_);
ad(_body,elt65_);
Element elt69_=el(_doc,"c:message");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","msg_helpround,round_process_add_on_4_6_1"));
at(elt69_,attrs39_);
ad(_body,elt69_);
Element elt70_=el(_doc,"c:message");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("value","msg_helpround,round_process_add_on_4_7"));
at(elt70_,attrs40_);
ad(_body,elt70_);
Element elt71_=el(_doc,"ul");
Element elt72_=el(_doc,"c:for");
CustList<Attr> attrs41_=al(2);
attrs41_.add(at("list","abilitiesImmuAlliesDam"));
attrs41_.add(at("var","a"));
at(elt72_,attrs41_);
Element elt73_=el(_doc,"li");
Element elt74_=el(_doc,"a");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("c:command","$clickAbilitiesImmuAlliesDam({([a])})"));
at(elt74_,attrs42_);
Text txt11_=tx(_doc,"{getTrAbilitiesImmuAlliesDam(([a]))}");
ad(elt74_,txt11_);
ad(elt73_,elt74_);
ad(elt72_,elt73_);
ad(elt71_,elt72_);
ad(_body,elt71_);
Element elt75_=el(_doc,"c:message");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("value","msg_helpround,round_process_add_on_4_8"));
at(elt75_,attrs43_);
ad(_body,elt75_);
Element elt76_=el(_doc,"ul");
Element elt77_=el(_doc,"c:for");
CustList<Attr> attrs44_=al(2);
attrs44_.add(at("list","itemsCancelImmu"));
attrs44_.add(at("var","a"));
at(elt77_,attrs44_);
Element elt78_=el(_doc,"li");
Element elt79_=el(_doc,"a");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("c:command","$clickItemsCancelImmu({([a])})"));
at(elt79_,attrs45_);
Text txt12_=tx(_doc,"{getTrItemsCancelImmu(([a]))}");
ad(elt79_,txt12_);
ad(elt78_,elt79_);
ad(elt77_,elt78_);
ad(elt76_,elt77_);
ad(_body,elt76_);
Element elt80_=el(_doc,"c:message");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("value","msg_helpround,round_process_add_on_4_8_1"));
at(elt80_,attrs46_);
ad(_body,elt80_);
Element elt81_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg_helpround,round_process_add_on_4_9"));
at(elt81_,attrs47_);
ad(_body,elt81_);
Element elt82_=el(_doc,"ul");
Element elt83_=el(_doc,"c:for");
CustList<Attr> attrs48_=al(2);
attrs48_.add(at("list","abilitiesImmu"));
attrs48_.add(at("var","a"));
at(elt83_,attrs48_);
Element elt84_=el(_doc,"li");
Element elt85_=el(_doc,"a");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("c:command","$clickAbilitiesImmu({([a])})"));
at(elt85_,attrs49_);
Text txt13_=tx(_doc,"{getTrAbilitiesImmu(([a]))}");
ad(elt85_,txt13_);
ad(elt84_,elt85_);
ad(elt83_,elt84_);
ad(elt82_,elt83_);
ad(_body,elt82_);
Element elt86_=el(_doc,"c:message");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("value","msg_helpround,round_process_add_on_4_10"));
at(elt86_,attrs50_);
ad(_body,elt86_);
Element elt87_=el(_doc,"ul");
Element elt88_=el(_doc,"c:for");
CustList<Attr> attrs51_=al(2);
attrs51_.add(at("list","itemsImmu"));
attrs51_.add(at("var","a"));
at(elt88_,attrs51_);
Element elt89_=el(_doc,"li");
Element elt90_=el(_doc,"a");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("c:command","$clickItemsImmu({([a])})"));
at(elt90_,attrs52_);
Text txt14_=tx(_doc,"{getTrItemsImmu(([a]))}");
ad(elt90_,txt14_);
ad(elt89_,elt90_);
ad(elt88_,elt89_);
ad(elt87_,elt88_);
ad(_body,elt87_);
Element elt91_=el(_doc,"c:message");
CustList<Attr> attrs53_=al(1);
attrs53_.add(at("value","msg_helpround,round_process_add_on_4_11"));
at(elt91_,attrs53_);
ad(_body,elt91_);
Element elt92_=el(_doc,"ul");
Element elt93_=el(_doc,"c:for");
CustList<Attr> attrs54_=al(2);
attrs54_.add(at("list","abilitiesImmuSecEffOther"));
attrs54_.add(at("var","a"));
at(elt93_,attrs54_);
Element elt94_=el(_doc,"li");
Element elt95_=el(_doc,"a");
CustList<Attr> attrs55_=al(1);
attrs55_.add(at("c:command","$clickAbilitiesImmuSecEffOther({([a])})"));
at(elt95_,attrs55_);
Text txt15_=tx(_doc,"{getTrAbilitiesImmuSecEffOther(([a]))}");
ad(elt95_,txt15_);
ad(elt94_,elt95_);
ad(elt93_,elt94_);
ad(elt92_,elt93_);
ad(_body,elt92_);
Element elt96_=el(_doc,"c:message");
CustList<Attr> attrs56_=al(1);
attrs56_.add(at("value","msg_helpround,round_process_add_on_4_11_1"));
at(elt96_,attrs56_);
ad(_body,elt96_);
Element elt97_=el(_doc,"ul");
Element elt98_=el(_doc,"c:for");
CustList<Attr> attrs57_=al(2);
attrs57_.add(at("list","abilitiesImmuSecEffOwner"));
attrs57_.add(at("var","a"));
at(elt98_,attrs57_);
Element elt99_=el(_doc,"li");
Element elt100_=el(_doc,"a");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("c:command","$clickAbilitiesImmuSecEffOwner({([a])})"));
at(elt100_,attrs58_);
Text txt16_=tx(_doc,"{getTrAbilitiesImmuSecEffOwner(([a]))}");
ad(elt100_,txt16_);
ad(elt99_,elt100_);
ad(elt98_,elt99_);
ad(elt97_,elt98_);
ad(_body,elt97_);
Element elt101_=el(_doc,"c:message");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("value","msg_helpround,round_process_add_on_4_12"));
at(elt101_,attrs59_);
ad(_body,elt101_);
Element elt102_=el(_doc,"ul");
Element elt103_=el(_doc,"c:for");
CustList<Attr> attrs60_=al(2);
attrs60_.add(at("list","abilitiesAchieveTarget"));
attrs60_.add(at("var","a"));
at(elt103_,attrs60_);
Element elt104_=el(_doc,"li");
Element elt105_=el(_doc,"a");
CustList<Attr> attrs61_=al(1);
attrs61_.add(at("c:command","$clickAbilitiesAchieveTarget({([a])})"));
at(elt105_,attrs61_);
Text txt17_=tx(_doc,"{getTrAbilitiesAchieveTarget(([a]))}");
ad(elt105_,txt17_);
ad(elt104_,elt105_);
ad(elt103_,elt104_);
ad(elt102_,elt103_);
ad(_body,elt102_);
Element elt106_=el(_doc,"c:message");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("value","msg_helpround,round_process_add_on_4_14"));
at(elt106_,attrs62_);
ad(_body,elt106_);
Element elt107_=el(_doc,"c:message");
CustList<Attr> attrs63_=al(1);
attrs63_.add(at("value","msg_helpround,round_process_add_on_4_15"));
at(elt107_,attrs63_);
ad(_body,elt107_);
Element elt108_=el(_doc,"ul");
Element elt109_=el(_doc,"c:for");
CustList<Attr> attrs64_=al(2);
attrs64_.add(at("list","abilitiesBreakProtectMoves"));
attrs64_.add(at("var","a"));
at(elt109_,attrs64_);
Element elt110_=el(_doc,"li");
Element elt111_=el(_doc,"a");
CustList<Attr> attrs65_=al(1);
attrs65_.add(at("c:command","$clickAbilitiesBreakProtectMoves({([a])})"));
at(elt111_,attrs65_);
Text txt18_=tx(_doc,"{getTrAbilitiesBreakProtectMoves(([a]))}");
ad(elt111_,txt18_);
ad(elt110_,elt111_);
ad(elt109_,elt110_);
ad(elt108_,elt109_);
ad(_body,elt108_);
Element elt112_=el(_doc,"c:message");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("value","msg_helpround,round_process_add_on_4_16"));
at(elt112_,attrs66_);
ad(_body,elt112_);
Element elt113_=el(_doc,"ul");
Element elt114_=el(_doc,"c:for");
CustList<Attr> attrs67_=al(2);
attrs67_.add(at("list","movesProtecting"));
attrs67_.add(at("var","a"));
at(elt114_,attrs67_);
Element elt115_=el(_doc,"li");
Element elt116_=el(_doc,"a");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("c:command","$clickMovesProtecting({([a])})"));
at(elt116_,attrs68_);
Text txt19_=tx(_doc,"{getTrMovesProtecting(([a]))}");
ad(elt116_,txt19_);
ad(elt115_,elt116_);
ad(elt114_,elt115_);
ad(elt113_,elt114_);
ad(_body,elt113_);
}
static void build20(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_12"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_12_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Text txt0_=tx(_doc,"{catchingFormula}");
ad(_body,txt0_);
Element elt3_=el(_doc,"br");
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!varCatchingFormula.isEmpty()"));
at(elt4_,attrs2_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","c"));
attrs3_.add(at("map","varCatchingFormula"));
attrs3_.add(at("value","r"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","java.lang.String"));
at(elt6_,attrs3_);
Element elt7_=el(_doc,"li");
Text txt1_=tx(_doc,"{c} :");
ad(elt7_,txt1_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("quoted",""));
attrs4_.add(at("value","msg_helpround,formula"));
at(elt8_,attrs4_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","r"));
at(elt9_,attrs5_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(_body,elt4_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_helpround,round_process_add_on_12_1"));
at(elt10_,attrs6_);
ad(_body,elt10_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,round_process_add_on_12_2"));
at(elt11_,attrs7_);
Element elt12_=el(_doc,"param");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","minHpNotKo"));
at(elt12_,attrs8_);
ad(elt11_,elt12_);
ad(_body,elt11_);
Element elt13_=el(_doc,"br");
ad(_body,elt13_);
}
static void build21(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_13"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_13_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Text txt0_=tx(_doc,"{fleeingFormula}");
ad(_body,txt0_);
Element elt3_=el(_doc,"br");
ad(_body,elt3_);
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","!varFleeingFormula.isEmpty()"));
at(elt4_,attrs2_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","c"));
attrs3_.add(at("map","varFleeingFormula"));
attrs3_.add(at("value","r"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","java.lang.String"));
at(elt6_,attrs3_);
Element elt7_=el(_doc,"li");
Text txt1_=tx(_doc,"{c} :");
ad(elt7_,txt1_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("quoted",""));
attrs4_.add(at("value","msg_helpround,formula"));
at(elt8_,attrs4_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","r"));
at(elt9_,attrs5_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt5_,elt6_);
ad(elt4_,elt5_);
ad(_body,elt4_);
Element elt10_=el(_doc,"br");
ad(_body,elt10_);
}
static void build22(Element _body,Document _doc){
Element elt0_=el(_doc,"h1");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_helpround,round_process_add_on_14"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_helpround,round_process_add_on_14_0"));
at(elt2_,attrs1_);
ad(_body,elt2_);
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(2);
attrs2_.add(at("list","statisticAnim"));
attrs2_.add(at("var","s"));
at(elt3_,attrs2_);
Text txt0_=tx(_doc,"{getTrStatistic(([s]))}");
ad(elt3_,txt0_);
Element elt4_=el(_doc,"br");
ad(elt3_,elt4_);
Element elt5_=el(_doc,"c:img");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("src","{getAnimStatistic(([s]))}"));
at(elt5_,attrs3_);
ad(elt3_,elt5_);
Element elt6_=el(_doc,"br");
ad(elt3_,elt6_);
ad(_body,elt3_);
Element elt7_=el(_doc,"br");
ad(_body,elt7_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_helpround,round_process_add_on_14_1"));
at(elt8_,attrs4_);
ad(_body,elt8_);
Element elt9_=el(_doc,"c:img");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("src","{getAnimAbsorb()}"));
at(elt9_,attrs5_);
ad(_body,elt9_);
Element elt10_=el(_doc,"br");
ad(_body,elt10_);
Element elt11_=el(_doc,"a");
CustList<Attr> attrs6_=al(2);
attrs6_.add(at("c:command","web/html/round/helpround.html#begin"));
attrs6_.add(at("href",""));
at(elt11_,attrs6_);
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_helpround,return_begin"));
at(elt12_,attrs7_);
ad(elt11_,elt12_);
ad(_body,elt11_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}

