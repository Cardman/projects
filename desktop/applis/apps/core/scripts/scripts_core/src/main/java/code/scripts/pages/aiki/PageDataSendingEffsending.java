package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageDataSendingEffsending{
private PageDataSendingEffsending(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","effsending"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web/css/moves.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"body");
build0(elt3_,_doc);
ad(elt0_,elt3_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"p");
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_eff_sending,effect"));
at(elt1_,attrs0_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:if");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("condition","disableWeather"));
at(elt2_,attrs1_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_eff_sending,disable_weather"));
at(elt3_,attrs2_);
ad(elt2_,elt3_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_eff_sending,disable_weather_2"));
at(elt4_,attrs3_);
ad(elt2_,elt4_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_eff_sending,disable_weather_3"));
at(elt5_,attrs4_);
ad(elt2_,elt5_);
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_eff_sending,disable_weather_4"));
at(elt6_,attrs5_);
ad(elt2_,elt6_);
ad(elt0_,elt2_);
Element elt7_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!enabledWeather.isEmpty()"));
at(elt7_,attrs6_);
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_eff_sending,weather"));
at(elt8_,attrs7_);
Element elt9_=el(_doc,"param");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","getTrWeather()"));
at(elt9_,attrs8_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
Element elt10_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","copyingAbility"));
at(elt10_,attrs9_);
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_eff_sending,copy_ab"));
at(elt11_,attrs10_);
ad(elt10_,elt11_);
ad(elt0_,elt10_);
Element elt12_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","plate"));
at(elt12_,attrs11_);
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_eff_sending,plate"));
at(elt13_,attrs12_);
ad(elt12_,elt13_);
ad(elt0_,elt12_);
Element elt14_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!multWeight.isZero()"));
at(elt14_,attrs13_);
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_eff_sending,weight"));
at(elt15_,attrs14_);
Element elt16_=el(_doc,"param");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","multWeight"));
at(elt16_,attrs15_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt0_,elt14_);
Element elt17_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","statistic"));
at(elt17_,attrs16_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_effstatis,effect"));
at(elt18_,attrs17_);
ad(elt17_,elt18_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("condition","!reasons.isEmpty()"));
at(elt19_,attrs18_);
Element elt20_=el(_doc,"p");
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("value","msg_eff,reasons"));
at(elt21_,attrs19_);
ad(elt20_,elt21_);
Element elt22_=el(_doc,"ul");
Element elt23_=el(_doc,"c:for");
CustList<Attr> attrs20_=al(3);
attrs20_.add(at("list","reasons"));
attrs20_.add(at("var","r"));
attrs20_.add(at("className","java.lang.String"));
at(elt23_,attrs20_);
Element elt24_=el(_doc,"li");
Text txt0_=tx(_doc,"{r}");
ad(elt24_,txt0_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt20_,elt22_);
Element elt25_=el(_doc,"br");
ad(elt20_,elt25_);
Element elt26_=el(_doc,"ul");
Element elt27_=el(_doc,"c:for");
CustList<Attr> attrs21_=al(5);
attrs21_.add(at("key","c"));
attrs21_.add(at("map","mapVarsFail"));
attrs21_.add(at("value","r"));
attrs21_.add(at("keyClassName","java.lang.String"));
attrs21_.add(at("varClassName","java.lang.String"));
at(elt27_,attrs21_);
Element elt28_=el(_doc,"li");
Text txt1_=tx(_doc,"{c} :");
ad(elt28_,txt1_);
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(2);
attrs22_.add(at("quoted",""));
attrs22_.add(at("value","msg_eff,formula"));
at(elt29_,attrs22_);
Element elt30_=el(_doc,"param");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("value","r"));
at(elt30_,attrs23_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt20_,elt26_);
ad(elt19_,elt20_);
ad(elt17_,elt19_);
Element elt31_=el(_doc,"c:if");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("condition","!randomStatis()"));
at(elt31_,attrs24_);
Element elt32_=el(_doc,"c:if");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("condition","isAlwaysEnabled()"));
at(elt32_,attrs25_);
Element elt33_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg_effstatis,always_enabled"));
at(elt33_,attrs26_);
ad(elt32_,elt33_);
ad(elt31_,elt32_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("condition","!isAlwaysEnabled()"));
at(elt34_,attrs27_);
Element elt35_=el(_doc,"c:message");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","msg_effstatis,rate_enabled"));
at(elt35_,attrs28_);
Element elt36_=el(_doc,"param");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","evtRate"));
at(elt36_,attrs29_);
ad(elt35_,elt36_);
Element elt37_=el(_doc,"param");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","evtRatePerCent"));
at(elt37_,attrs30_);
ad(elt35_,elt37_);
ad(elt34_,elt35_);
ad(elt31_,elt34_);
ad(elt17_,elt31_);
Element elt38_=el(_doc,"c:if");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("condition","notEmptyVarBoost()"));
at(elt38_,attrs31_);
Element elt39_=el(_doc,"c:if");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("condition","randomStatis()"));
at(elt39_,attrs32_);
Element elt40_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_effstatis,var_statis_rank"));
at(elt40_,attrs33_);
ad(elt39_,elt40_);
Element elt41_=el(_doc,"table");
Element elt42_=el(_doc,"thead");
Element elt43_=el(_doc,"tr");
Element elt44_=el(_doc,"th");
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("value","msg_effstatis,statistic"));
at(elt45_,attrs34_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
Element elt46_=el(_doc,"th");
Element elt47_=el(_doc,"c:message");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("value","msg_effstatis,boost"));
at(elt47_,attrs35_);
ad(elt46_,elt47_);
ad(elt43_,elt46_);
Element elt48_=el(_doc,"th");
Element elt49_=el(_doc,"c:message");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("value","msg_effstatis,fail"));
at(elt49_,attrs36_);
ad(elt48_,elt49_);
ad(elt43_,elt48_);
Element elt50_=el(_doc,"th");
Element elt51_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_effstatis,rate_event"));
at(elt51_,attrs37_);
ad(elt50_,elt51_);
ad(elt43_,elt50_);
ad(elt42_,elt43_);
ad(elt41_,elt42_);
Element elt52_=el(_doc,"tbody");
Element elt53_=el(_doc,"c:for");
CustList<Attr> attrs38_=al(5);
attrs38_.add(at("key","c"));
attrs38_.add(at("map","statisVarRank"));
attrs38_.add(at("value","r"));
attrs38_.add(at("keyClassName","java.lang.String"));
attrs38_.add(at("varClassName","java.lang.Byte"));
at(elt53_,attrs38_);
Element elt54_=el(_doc,"tr");
Element elt55_=el(_doc,"td");
Text txt2_=tx(_doc,"{c}");
ad(elt55_,txt2_);
ad(elt54_,elt55_);
Element elt56_=el(_doc,"td");
Text txt3_=tx(_doc,"{r}");
ad(elt56_,txt3_);
ad(elt54_,elt56_);
Element elt57_=el(_doc,"td");
Text txt4_=tx(_doc,"{getFail(([c]))}");
ad(elt57_,txt4_);
ad(elt54_,elt57_);
Element elt58_=el(_doc,"td");
Text txt5_=tx(_doc,"{getRate(([c]))}");
ad(elt58_,txt5_);
ad(elt54_,elt58_);
ad(elt53_,elt54_);
ad(elt52_,elt53_);
ad(elt41_,elt52_);
ad(elt39_,elt41_);
ad(elt38_,elt39_);
Element elt59_=el(_doc,"c:if");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("condition","!randomStatis()"));
at(elt59_,attrs39_);
Element elt60_=el(_doc,"c:message");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("value","msg_effstatis,var_statis_rank"));
at(elt60_,attrs40_);
ad(elt59_,elt60_);
Element elt61_=el(_doc,"table");
Element elt62_=el(_doc,"thead");
Element elt63_=el(_doc,"tr");
Element elt64_=el(_doc,"th");
Element elt65_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg_effstatis,statistic"));
at(elt65_,attrs41_);
ad(elt64_,elt65_);
ad(elt63_,elt64_);
Element elt66_=el(_doc,"th");
Element elt67_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_effstatis,boost"));
at(elt67_,attrs42_);
ad(elt66_,elt67_);
ad(elt63_,elt66_);
Element elt68_=el(_doc,"th");
Element elt69_=el(_doc,"c:message");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("value","msg_effstatis,fail"));
at(elt69_,attrs43_);
ad(elt68_,elt69_);
ad(elt63_,elt68_);
ad(elt62_,elt63_);
ad(elt61_,elt62_);
Element elt70_=el(_doc,"tbody");
Element elt71_=el(_doc,"c:for");
CustList<Attr> attrs44_=al(5);
attrs44_.add(at("key","c"));
attrs44_.add(at("map","statisVarRank"));
attrs44_.add(at("value","r"));
attrs44_.add(at("keyClassName","java.lang.String"));
attrs44_.add(at("varClassName","java.lang.Byte"));
at(elt71_,attrs44_);
Element elt72_=el(_doc,"tr");
Element elt73_=el(_doc,"td");
Text txt6_=tx(_doc,"{c}");
ad(elt73_,txt6_);
ad(elt72_,elt73_);
Element elt74_=el(_doc,"td");
Text txt7_=tx(_doc,"{r}");
ad(elt74_,txt7_);
ad(elt72_,elt74_);
Element elt75_=el(_doc,"td");
Text txt8_=tx(_doc,"{getFail(([c]))}");
ad(elt75_,txt8_);
ad(elt72_,elt75_);
ad(elt71_,elt72_);
ad(elt70_,elt71_);
ad(elt61_,elt70_);
ad(elt59_,elt61_);
ad(elt38_,elt59_);
Element elt76_=el(_doc,"br");
ad(elt38_,elt76_);
Element elt77_=el(_doc,"c:if");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("condition","!mapVarsStatistics.isEmpty()"));
at(elt77_,attrs45_);
Element elt78_=el(_doc,"ul");
Element elt79_=el(_doc,"c:for");
CustList<Attr> attrs46_=al(5);
attrs46_.add(at("key","k"));
attrs46_.add(at("map","mapVarsStatistics"));
attrs46_.add(at("value","v"));
attrs46_.add(at("keyClassName","java.lang.String"));
attrs46_.add(at("varClassName","java.lang.String"));
at(elt79_,attrs46_);
Element elt80_=el(_doc,"li");
Text txt9_=tx(_doc,"{k} :");
ad(elt80_,txt9_);
Element elt81_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(2);
attrs47_.add(at("quoted",""));
attrs47_.add(at("value","msg_effstatis,formula"));
at(elt81_,attrs47_);
Element elt82_=el(_doc,"param");
CustList<Attr> attrs48_=al(1);
attrs48_.add(at("value","v"));
at(elt82_,attrs48_);
ad(elt81_,elt82_);
ad(elt80_,elt81_);
ad(elt79_,elt80_);
ad(elt78_,elt79_);
ad(elt77_,elt78_);
ad(elt38_,elt77_);
ad(elt17_,elt38_);
Element elt83_=el(_doc,"c:if");
CustList<Attr> attrs49_=al(1);
attrs49_.add(at("condition","!swapBoostStatis.isEmpty()"));
at(elt83_,attrs49_);
Element elt84_=el(_doc,"c:message");
CustList<Attr> attrs50_=al(1);
attrs50_.add(at("value","msg_effstatis,swap_boost"));
at(elt84_,attrs50_);
ad(elt83_,elt84_);
Element elt85_=el(_doc,"table");
Element elt86_=el(_doc,"thead");
Element elt87_=el(_doc,"tr");
Element elt88_=el(_doc,"th");
Element elt89_=el(_doc,"c:message");
CustList<Attr> attrs51_=al(1);
attrs51_.add(at("value","msg_effstatis,statistic"));
at(elt89_,attrs51_);
ad(elt88_,elt89_);
ad(elt87_,elt88_);
Element elt90_=el(_doc,"th");
Element elt91_=el(_doc,"c:message");
CustList<Attr> attrs52_=al(1);
attrs52_.add(at("value","msg_effstatis,fail"));
at(elt91_,attrs52_);
ad(elt90_,elt91_);
ad(elt87_,elt90_);
ad(elt86_,elt87_);
ad(elt85_,elt86_);
Element elt92_=el(_doc,"tbody");
Element elt93_=el(_doc,"c:for");
CustList<Attr> attrs53_=al(3);
attrs53_.add(at("list","swapBoostStatis"));
attrs53_.add(at("var","c"));
attrs53_.add(at("className","java.lang.String"));
at(elt93_,attrs53_);
Element elt94_=el(_doc,"tr");
Element elt95_=el(_doc,"td");
Text txt10_=tx(_doc,"{c}");
ad(elt95_,txt10_);
ad(elt94_,elt95_);
Element elt96_=el(_doc,"td");
Text txt11_=tx(_doc,"{getSwapFail(([c]))}");
ad(elt96_,txt11_);
ad(elt94_,elt96_);
ad(elt93_,elt94_);
ad(elt92_,elt93_);
ad(elt85_,elt92_);
ad(elt83_,elt85_);
Element elt97_=el(_doc,"br");
ad(elt83_,elt97_);
Element elt98_=el(_doc,"c:if");
CustList<Attr> attrs54_=al(1);
attrs54_.add(at("condition","!mapVarsStatistics.isEmpty()"));
at(elt98_,attrs54_);
Element elt99_=el(_doc,"ul");
Element elt100_=el(_doc,"c:for");
CustList<Attr> attrs55_=al(5);
attrs55_.add(at("key","k"));
attrs55_.add(at("map","mapVarsStatistics"));
attrs55_.add(at("value","v"));
attrs55_.add(at("keyClassName","java.lang.String"));
attrs55_.add(at("varClassName","java.lang.String"));
at(elt100_,attrs55_);
Element elt101_=el(_doc,"li");
Text txt12_=tx(_doc,"{k} :");
ad(elt101_,txt12_);
Element elt102_=el(_doc,"c:message");
CustList<Attr> attrs56_=al(2);
attrs56_.add(at("quoted",""));
attrs56_.add(at("value","msg_effstatis,formula"));
at(elt102_,attrs56_);
Element elt103_=el(_doc,"param");
CustList<Attr> attrs57_=al(1);
attrs57_.add(at("value","v"));
at(elt103_,attrs57_);
ad(elt102_,elt103_);
ad(elt101_,elt102_);
ad(elt100_,elt101_);
ad(elt99_,elt100_);
ad(elt98_,elt99_);
ad(elt83_,elt98_);
ad(elt17_,elt83_);
Element elt104_=el(_doc,"c:if");
CustList<Attr> attrs58_=al(1);
attrs58_.add(at("condition","!cancelLowStat.isEmpty()"));
at(elt104_,attrs58_);
Element elt105_=el(_doc,"c:message");
CustList<Attr> attrs59_=al(1);
attrs59_.add(at("value","msg_effstatis,cancel_low_stat"));
at(elt105_,attrs59_);
Element elt106_=el(_doc,"param");
CustList<Attr> attrs60_=al(1);
attrs60_.add(at("value","defaultBoost"));
at(elt106_,attrs60_);
ad(elt105_,elt106_);
ad(elt104_,elt105_);
Element elt107_=el(_doc,"ul");
Element elt108_=el(_doc,"c:for");
CustList<Attr> attrs61_=al(3);
attrs61_.add(at("list","cancelLowStat"));
attrs61_.add(at("var","s"));
attrs61_.add(at("className","java.lang.String"));
at(elt108_,attrs61_);
Element elt109_=el(_doc,"li");
Text txt13_=tx(_doc,"{s}");
ad(elt109_,txt13_);
ad(elt108_,elt109_);
ad(elt107_,elt108_);
ad(elt104_,elt107_);
Element elt110_=el(_doc,"br");
ad(elt104_,elt110_);
ad(elt17_,elt104_);
Element elt111_=el(_doc,"c:if");
CustList<Attr> attrs62_=al(1);
attrs62_.add(at("condition","!cancelChgtStat.isEmpty()"));
at(elt111_,attrs62_);
Element elt112_=el(_doc,"c:message");
CustList<Attr> attrs63_=al(1);
attrs63_.add(at("value","msg_effstatis,cancel_chgt_stat"));
at(elt112_,attrs63_);
Element elt113_=el(_doc,"param");
CustList<Attr> attrs64_=al(1);
attrs64_.add(at("value","defaultBoost"));
at(elt113_,attrs64_);
ad(elt112_,elt113_);
ad(elt111_,elt112_);
Element elt114_=el(_doc,"ul");
Element elt115_=el(_doc,"c:for");
CustList<Attr> attrs65_=al(3);
attrs65_.add(at("list","cancelChgtStat"));
attrs65_.add(at("var","s"));
attrs65_.add(at("className","java.lang.String"));
at(elt115_,attrs65_);
Element elt116_=el(_doc,"li");
Text txt14_=tx(_doc,"{s}");
ad(elt116_,txt14_);
ad(elt115_,elt116_);
ad(elt114_,elt115_);
ad(elt111_,elt114_);
Element elt117_=el(_doc,"br");
ad(elt111_,elt117_);
ad(elt17_,elt111_);
Element elt118_=el(_doc,"c:if");
CustList<Attr> attrs66_=al(1);
attrs66_.add(at("condition","!copyBoost.isEmpty()"));
at(elt118_,attrs66_);
Element elt119_=el(_doc,"c:message");
CustList<Attr> attrs67_=al(1);
attrs67_.add(at("value","msg_effstatis,copy_boost"));
at(elt119_,attrs67_);
Element elt120_=el(_doc,"param");
CustList<Attr> attrs68_=al(1);
attrs68_.add(at("value","defaultBoost"));
at(elt120_,attrs68_);
ad(elt119_,elt120_);
ad(elt118_,elt119_);
Element elt121_=el(_doc,"ul");
Element elt122_=el(_doc,"c:for");
CustList<Attr> attrs69_=al(3);
attrs69_.add(at("list","copyBoost"));
attrs69_.add(at("var","s"));
attrs69_.add(at("className","java.lang.String"));
at(elt122_,attrs69_);
Element elt123_=el(_doc,"li");
Text txt15_=tx(_doc,"{s}");
ad(elt123_,txt15_);
ad(elt122_,elt123_);
ad(elt121_,elt122_);
ad(elt118_,elt121_);
Element elt124_=el(_doc,"br");
ad(elt118_,elt124_);
ad(elt17_,elt118_);
ad(elt0_,elt17_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
