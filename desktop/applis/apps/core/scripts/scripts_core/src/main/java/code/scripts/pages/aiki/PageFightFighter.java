package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageFightFighter{
private PageFightFighter(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","fighter"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"title");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,title"));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc,"link");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("href","web_fight/css/fight.css"));
attrs2_.add(at("rel","stylesheet"));
attrs2_.add(at("type","text/css"));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc,"body");
build0(elt5_,_doc);
build1(elt5_,_doc);
build2(elt5_,_doc);
build3(elt5_,_doc);
build4(elt5_,_doc);
build5(elt5_,_doc);
build6(elt5_,_doc);
build7(elt5_,_doc);
build8(elt5_,_doc);
build9(elt5_,_doc);
build10(elt5_,_doc);
build11(elt5_,_doc);
build12(elt5_,_doc);
build13(elt5_,_doc);
build14(elt5_,_doc);
build15(elt5_,_doc);
build16(elt5_,_doc);
build17(elt5_,_doc);
build18(elt5_,_doc);
build19(elt5_,_doc);
build20(elt5_,_doc);
build21(elt5_,_doc);
build22(elt5_,_doc);
build23(elt5_,_doc);
build24(elt5_,_doc);
build25(elt5_,_doc);
build26(elt5_,_doc);
build27(elt5_,_doc);
build28(elt5_,_doc);
build29(elt5_,_doc);
build30(elt5_,_doc);
build31(elt5_,_doc);
build32(elt5_,_doc);
build33(elt5_,_doc);
build34(elt5_,_doc);
build35(elt5_,_doc);
build36(elt5_,_doc);
build37(elt5_,_doc);
build38(elt5_,_doc);
build39(elt5_,_doc);
build40(elt5_,_doc);
build41(elt5_,_doc);
build42(elt5_,_doc);
build43(elt5_,_doc);
build44(elt5_,_doc);
build45(elt5_,_doc);
build46(elt5_,_doc);
build47(elt5_,_doc);
build48(elt5_,_doc);
build49(elt5_,_doc);
build50(elt5_,_doc);
build51(elt5_,_doc);
build52(elt5_,_doc);
build53(elt5_,_doc);
build54(elt5_,_doc);
build55(elt5_,_doc);
build56(elt5_,_doc);
build57(elt5_,_doc);
build58(elt5_,_doc);
build59(elt5_,_doc);
build60(elt5_,_doc);
build61(elt5_,_doc);
build62(elt5_,_doc);
build63(elt5_,_doc);
build64(elt5_,_doc);
build65(elt5_,_doc);
build66(elt5_,_doc);
build67(elt5_,_doc);
build68(elt5_,_doc);
build69(elt5_,_doc);
build70(elt5_,_doc);
build71(elt5_,_doc);
build72(elt5_,_doc);
build73(elt5_,_doc);
build74(elt5_,_doc);
build75(elt5_,_doc);
build76(elt5_,_doc);
build77(elt5_,_doc);
build78(elt5_,_doc);
build79(elt5_,_doc);
build80(elt5_,_doc);
ad(elt0_,elt5_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("c:command","web_fight/html/fight.html"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,fight"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"br");
ad(_body,elt2_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("c:command","web_fight/html/team.html"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,team"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"br");
ad(_body,elt2_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("c:command","web_fight/html/fighter.html"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,refresh"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"br");
ad(_body,elt2_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,name"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","name"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","changed"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,current_name"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","currentName"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,current_gender"));
at(elt3_,attrs3_);
Element elt4_=el(_doc,"param");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","currentGender"));
at(elt4_,attrs4_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(usedBallCatching)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,used_ball_catching"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","usedBallCatching"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","belongingToPlayer"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,belong_player"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!belongingToPlayer"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,belong_player_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isBackSubst()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,ground_place"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","groundPlaceSubst"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isBackSubst()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,ground_substit_back"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isBack()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,ground_substit"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","groundPlace"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isBack()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,ground_place_back"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nickname"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","nickname"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build13(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,happiness"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","happiness"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,level"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","level"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,won_exp_last_level"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","wonExpSinceLastLevel"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build16(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,necessary_pts"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","necessaryPointsNextLevel"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build17(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,gender"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","gender"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build18(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,weight"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","weight"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","weightStr"));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build19(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,height"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","height"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","heightStr"));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build20(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,remain_hp"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","remainingHp"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","remainingHpStr"));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc,"param");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","remainingHpStrPerCent"));
at(elt3_,attrs3_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build21(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,clone"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","clone"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","cloneStr"));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build22(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,ability"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","ability"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build23(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(currentAbility)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,current_ability"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","currentAbility"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build24(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isEmpty(currentAbility)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,current_ability_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build25(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","acted"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,acted"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build26(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!acted"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,acted_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build27(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(lastUsedItem)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_used_item"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","lastUsedItem"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build28(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isEmpty(lastUsedItem)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_used_item_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build29(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(item)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,item"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","item"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build30(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isEmpty(item)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,item_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build31(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(expItem)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,exp_item"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","expItem"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build32(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","isEmpty(expItem)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,exp_item_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build33(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","usingItem"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,using_item"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build34(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,types"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build35(Element _body,Document _doc){
Element elt0_=el(_doc,"ul");
Element elt1_=el(_doc,"c:for");
CustList<Attr> attrs0_=al(3);
attrs0_.add(at("list","types"));
attrs0_.add(at("var","t"));
attrs0_.add(at("className","java.lang.String"));
at(elt1_,attrs0_);
Element elt2_=el(_doc,"li");
Text txt0_=tx(_doc,"{t}");
ad(elt2_,txt0_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build36(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build37(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,moves_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,moves_value_one"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,moves_value_two"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","moves"));
attrs3_.add(at("value","s"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.game.UsesOfMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"td");
Text txt1_=tx(_doc,"{s.getCurrent()}");
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getMax()}");
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build38(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,current_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build39(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,current_moves_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,current_moves_value_one"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,current_moves_value_two"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","currentMoves"));
attrs3_.add(at("value","s"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.game.UsesOfMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"td");
Text txt1_=tx(_doc,"{s.getCurrent()}");
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getMax()}");
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build40(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nb_rounds"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","nbRounds"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build41(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,copied_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build42(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,copied_moves_old"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,copied_moves_new"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,copied_moves_pp"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","copiedMoves"));
attrs3_.add(at("value","s"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.game.fight.util.CopiedMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"td");
Text txt1_=tx(_doc,"{s.getMove()}");
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getPp()}");
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build43(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,statistics"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build44(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,statistics_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,statistics_base"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,statistics_ev"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,statistics_iv"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc,"th");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_fighter,statistics_boost"));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc,"tbody");
Element elt14_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(3);
attrs5_.add(at("className","aiki.beans.facade.fight.StatisticInfo"));
attrs5_.add(at("list","statistics"));
attrs5_.add(at("var","s"));
at(elt14_,attrs5_);
Element elt15_=el(_doc,"tr");
Element elt16_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getDisplayStatistic()}");
ad(elt16_,txt0_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","s.isBase()"));
at(elt17_,attrs6_);
Element elt18_=el(_doc,"td");
Text txt1_=tx(_doc,"{s.getStatisBase()}");
ad(elt18_,txt1_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","!s.isBase()"));
at(elt19_,attrs7_);
Element elt20_=el(_doc,"td");
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_fighter,statistics_no"));
at(elt21_,attrs8_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt15_,elt19_);
Element elt22_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","s.isBase()"));
at(elt22_,attrs9_);
Element elt23_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getEv()}");
ad(elt23_,txt2_);
ad(elt22_,elt23_);
ad(elt15_,elt22_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!s.isBase()"));
at(elt24_,attrs10_);
Element elt25_=el(_doc,"td");
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_fighter,statistics_no"));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt15_,elt24_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("condition","s.isBase()"));
at(elt27_,attrs12_);
Element elt28_=el(_doc,"td");
Text txt3_=tx(_doc,"{s.getIv()}");
ad(elt28_,txt3_);
ad(elt27_,elt28_);
ad(elt15_,elt27_);
Element elt29_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!s.isBase()"));
at(elt29_,attrs13_);
Element elt30_=el(_doc,"td");
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_fighter,statistics_no"));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt15_,elt29_);
Element elt32_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","s.isBoost()"));
at(elt32_,attrs15_);
Element elt33_=el(_doc,"td");
Text txt4_=tx(_doc,"{s.getStatisBoost()}");
ad(elt33_,txt4_);
ad(elt32_,elt33_);
ad(elt15_,elt32_);
Element elt34_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","!s.isBoost()"));
at(elt34_,attrs16_);
Element elt35_=el(_doc,"td");
Element elt36_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_fighter,statistics_no"));
at(elt36_,attrs17_);
ad(elt35_,elt36_);
ad(elt34_,elt35_);
ad(elt15_,elt34_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build45(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,damage_power_types"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build46(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,damage_power_types_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,damage_power_types_value_one"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,damage_power_types_value_two"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","damageRateByType"));
attrs3_.add(at("value","r"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.beans.facade.fight.MultPowerMoves"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"td");
Text txt1_=tx(_doc,"{r.getMultInflicted()}");
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc,"td");
Text txt2_=tx(_doc,"{r.getMultSuffering()}");
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build47(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!protectedAgainstMoveTypes.isEmpty()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,types_protected"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"ul");
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("list","protectedAgainstMoveTypes"));
attrs2_.add(at("var","t"));
attrs2_.add(at("className","java.lang.String"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"li");
Text txt0_=tx(_doc,"{t}");
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build48(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,suffering_damage"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build49(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,suffering_damage_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,suffering_damage_value_round"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,suffering_damage_value_using"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","c"));
attrs3_.add(at("map","damageSufferedCateg"));
attrs3_.add(at("value","r"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.beans.facade.fight.SufferedDamageCategory"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{c}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"td");
Text txt1_=tx(_doc,"{r.getRound()}");
ad(elt13_,txt1_);
ad(elt11_,elt13_);
Element elt14_=el(_doc,"td");
Text txt2_=tx(_doc,"{r.getUsing()}");
ad(elt14_,txt2_);
ad(elt11_,elt14_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build50(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,enbaled_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build51(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,enbaled_moves_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,enbaled_moves_enabled"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,enbaled_moves_nb_round"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","enabledMoves"));
attrs3_.add(at("value","a"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.game.fight.ActivityOfMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","a.isEnabled()"));
at(elt13_,attrs4_);
Element elt14_=el(_doc,"td");
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_fighter,enbaled_moves_enabled_y"));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!a.isEnabled()"));
at(elt16_,attrs6_);
Element elt17_=el(_doc,"td");
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_fighter,enbaled_moves_enabled_n"));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","a.isIncrementCount()"));
at(elt19_,attrs8_);
Element elt20_=el(_doc,"td");
Text txt1_=tx(_doc,"{a.getNbTurn()}");
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!a.isIncrementCount()"));
at(elt21_,attrs9_);
Element elt22_=el(_doc,"td");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_fighter,enbaled_moves_no"));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build52(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,enbaled_moves_ally"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build53(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,enbaled_moves_ally_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,enbaled_moves_ally_enabled"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc,"tbody");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","m"));
attrs2_.add(at("map","enabledMovesForAlly"));
attrs2_.add(at("value","a"));
attrs2_.add(at("keyClassName","java.lang.String"));
attrs2_.add(at("varClassName","java.lang.Boolean"));
at(elt8_,attrs2_);
Element elt9_=el(_doc,"tr");
Element elt10_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","a"));
at(elt11_,attrs3_);
Element elt12_=el(_doc,"td");
Element elt13_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_fighter,enbaled_moves_ally_enabled_y"));
at(elt13_,attrs4_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt9_,elt11_);
Element elt14_=el(_doc,"c:if");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("condition","!a"));
at(elt14_,attrs5_);
Element elt15_=el(_doc,"td");
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_fighter,enbaled_moves_ally_enabled_n"));
at(elt16_,attrs6_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt9_,elt14_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build54(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nb_uses"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build55(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nb_uses_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,nb_uses_value"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc,"tbody");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","m"));
attrs2_.add(at("map","nbUsesMoves"));
attrs2_.add(at("value","u"));
attrs2_.add(at("keyClassName","java.lang.String"));
attrs2_.add(at("varClassName","java.lang.Integer"));
at(elt8_,attrs2_);
Element elt9_=el(_doc,"tr");
Element elt10_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"td");
Text txt1_=tx(_doc,"{u}");
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build56(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nb_success_moves"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","nbRepeatingSuccessfulMoves"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build57(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","successfulMove"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,successful_move"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build58(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(lastSuccessfulMove)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_successful_move"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","lastSuccessfulMove"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build59(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(lastUsedMove)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_used_move"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","lastUsedMove"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build60(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(usedMoveLastRound)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,used_move_last_round"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","usedMoveLastRound"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build61(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!successfulMove"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,successful_move_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build62(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,nb_round_prepa"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"param");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","nbPrepaRound"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build63(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!alreadyInvokedMovesRound.isEmpty()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,invoked_moves"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"ul");
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("list","alreadyInvokedMovesRound"));
attrs2_.add(at("var","m"));
attrs2_.add(at("className","java.lang.String"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"li");
Text txt0_=tx(_doc,"{m}");
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build64(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!isEmpty(lastSufferedMove)"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_suffered_move"));
at(elt1_,attrs1_);
Element elt2_=el(_doc,"param");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","lastSufferedMove"));
at(elt2_,attrs2_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build65(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!lastSufferedMoveTypes.isEmpty()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,last_suffered_move_types"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"ul");
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("list","lastSufferedMoveTypes"));
attrs2_.add(at("var","m"));
attrs2_.add(at("className","java.lang.String"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"li");
Text txt0_=tx(_doc,"{m}");
ad(elt4_,txt0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static void build66(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","disappeared"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,disappeared"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build67(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!disappeared"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,disappeared_no"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build68(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","needingToRecharge"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,needing_recharge"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build69(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,status"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build70(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,status_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,status_value"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc,"tbody");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","s"));
attrs2_.add(at("map","status"));
attrs2_.add(at("value","r"));
attrs2_.add(at("keyClassName","java.lang.String"));
attrs2_.add(at("varClassName","java.lang.Short"));
at(elt8_,attrs2_);
Element elt9_=el(_doc,"tr");
Element elt10_=el(_doc,"td");
Text txt0_=tx(_doc,"{s}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"td");
Text txt1_=tx(_doc,"{r}");
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build71(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,status_rel"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build72(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,status_rel_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,status_rel_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,status_rel_key_three"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,status_rel_enabled"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc,"tbody");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(5);
attrs4_.add(at("key","s"));
attrs4_.add(at("keyClassName","aiki.game.fight.MoveTeamPosition"));
attrs4_.add(at("varClassName","java.lang.Object"));
attrs4_.add(at("map","statusRelat"));
attrs4_.add(at("value","e"));
at(elt12_,attrs4_);
Element elt13_=el(_doc,"tr");
Element elt14_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getMove()}");
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("condition","isFoeStatusRelatTeam(([s]))"));
at(elt15_,attrs5_);
Element elt16_=el(_doc,"td");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_fighter,status_rel_foe"));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","!isFoeStatusRelatTeam(([s]))"));
at(elt18_,attrs7_);
Element elt19_=el(_doc,"td");
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_fighter,status_rel_player"));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc,"td");
Text txt1_=tx(_doc,"{getStatusRelatTeam(([s]))}");
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","isEnabled(([s]))"));
at(elt22_,attrs9_);
Element elt23_=el(_doc,"td");
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_fighter,status_rel_enabled_y"));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt13_,elt22_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","!isEnabled(([s]))"));
at(elt25_,attrs11_);
Element elt26_=el(_doc,"td");
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_fighter,status_rel_enabled_n"));
at(elt27_,attrs12_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt13_,elt25_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
static void build73(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,private_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build74(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,private_moves_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,private_moves_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,private_moves_key_three"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,private_moves_mv"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc,"tbody");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(5);
attrs4_.add(at("key","s"));
attrs4_.add(at("keyClassName","aiki.game.fight.MoveTeamPosition"));
attrs4_.add(at("varClassName","java.lang.String"));
attrs4_.add(at("map","privateMoves"));
attrs4_.add(at("value","m"));
at(elt12_,attrs4_);
Element elt13_=el(_doc,"tr");
Element elt14_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getMove()}");
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("condition","isFoePrivateMovesTeam(([s]))"));
at(elt15_,attrs5_);
Element elt16_=el(_doc,"td");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_fighter,private_moves_foe"));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","!isFoePrivateMovesTeam(([s]))"));
at(elt18_,attrs7_);
Element elt19_=el(_doc,"td");
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_fighter,private_moves_player"));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc,"td");
Text txt1_=tx(_doc,"{getIncrPrivateMovesTeam(([s]))}");
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc,"td");
Text txt2_=tx(_doc,"{m}");
ad(elt22_,txt2_);
ad(elt13_,elt22_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
static void build75(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,trapping_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build76(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,trapping_moves_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,trapping_moves_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,trapping_moves_key_three"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,trapping_moves_enabled"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc,"th");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_fighter,trapping_moves_nb_round"));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc,"tbody");
Element elt14_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(5);
attrs5_.add(at("key","s"));
attrs5_.add(at("keyClassName","aiki.game.fight.MoveTeamPosition"));
attrs5_.add(at("map","trappingMoves"));
attrs5_.add(at("value","a"));
attrs5_.add(at("varClassName","aiki.game.fight.ActivityOfMove"));
at(elt14_,attrs5_);
Element elt15_=el(_doc,"tr");
Element elt16_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getMove()}");
ad(elt16_,txt0_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","isFoeTrappingMovesTeam(([s]))"));
at(elt17_,attrs6_);
Element elt18_=el(_doc,"td");
Element elt19_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_fighter,trapping_moves_foe"));
at(elt19_,attrs7_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","!isFoeTrappingMovesTeam(([s]))"));
at(elt20_,attrs8_);
Element elt21_=el(_doc,"td");
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_fighter,trapping_moves_player"));
at(elt22_,attrs9_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt15_,elt20_);
Element elt23_=el(_doc,"td");
Text txt1_=tx(_doc,"{getIncrTrappingMovesTeam(([s]))}");
ad(elt23_,txt1_);
ad(elt15_,elt23_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","a.isEnabled()"));
at(elt24_,attrs10_);
Element elt25_=el(_doc,"td");
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_fighter,trapping_moves_enabled_y"));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt15_,elt24_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("condition","!a.isEnabled()"));
at(elt27_,attrs12_);
Element elt28_=el(_doc,"td");
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","msg_fighter,trapping_moves_enabled_n"));
at(elt29_,attrs13_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt15_,elt27_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("condition","a.isIncrementCount()"));
at(elt30_,attrs14_);
Element elt31_=el(_doc,"td");
Text txt2_=tx(_doc,"{a.getNbTurn()}");
ad(elt31_,txt2_);
ad(elt30_,elt31_);
ad(elt15_,elt30_);
Element elt32_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","!a.isIncrementCount()"));
at(elt32_,attrs15_);
Element elt33_=el(_doc,"td");
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("value","msg_fighter,trapping_moves_no"));
at(elt34_,attrs16_);
ad(elt33_,elt34_);
ad(elt32_,elt33_);
ad(elt15_,elt32_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build77(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,tracking_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build78(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,tracking_moves_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,tracking_moves_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,tracking_moves_key_three"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,tracking_moves_v"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc,"th");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_fighter,tracking_moves_enabled"));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
Element elt13_=el(_doc,"th");
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_fighter,tracking_moves_nb_round"));
at(elt14_,attrs5_);
ad(elt13_,elt14_);
ad(elt2_,elt13_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt15_=el(_doc,"tbody");
Element elt16_=el(_doc,"c:for");
CustList<Attr> attrs6_=al(5);
attrs6_.add(at("key","s"));
attrs6_.add(at("keyClassName","aiki.game.fight.MoveTeamPosition"));
attrs6_.add(at("map","trackingMoves"));
attrs6_.add(at("value","a"));
attrs6_.add(at("varClassName","aiki.game.fight.util.AffectedMove"));
at(elt16_,attrs6_);
Element elt17_=el(_doc,"tr");
Element elt18_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getMove()}");
ad(elt18_,txt0_);
ad(elt17_,elt18_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","isFoeTrackingMovesTeam(([s]))"));
at(elt19_,attrs7_);
Element elt20_=el(_doc,"td");
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_fighter,tracking_moves_foe"));
at(elt21_,attrs8_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt17_,elt19_);
Element elt22_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!isFoeTrackingMovesTeam(([s]))"));
at(elt22_,attrs9_);
Element elt23_=el(_doc,"td");
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_fighter,tracking_moves_player"));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt17_,elt22_);
Element elt25_=el(_doc,"td");
Text txt1_=tx(_doc,"{getIncrTrackingMovesTeam(([s]))}");
ad(elt25_,txt1_);
ad(elt17_,elt25_);
Element elt26_=el(_doc,"td");
Text txt2_=tx(_doc,"{a.getMove()}");
ad(elt26_,txt2_);
ad(elt17_,elt26_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","a.getActivity().isEnabled()"));
at(elt27_,attrs11_);
Element elt28_=el(_doc,"td");
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_fighter,tracking_moves_enabled_y"));
at(elt29_,attrs12_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt17_,elt27_);
Element elt30_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!a.getActivity().isEnabled()"));
at(elt30_,attrs13_);
Element elt31_=el(_doc,"td");
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_fighter,tracking_moves_enabled_n"));
at(elt32_,attrs14_);
ad(elt31_,elt32_);
ad(elt30_,elt31_);
ad(elt17_,elt30_);
Element elt33_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","a.getActivity().isIncrementCount()"));
at(elt33_,attrs15_);
Element elt34_=el(_doc,"td");
Text txt3_=tx(_doc,"{a.getActivity().getNbTurn()}");
ad(elt34_,txt3_);
ad(elt33_,elt34_);
ad(elt17_,elt33_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","!a.getActivity().isIncrementCount()"));
at(elt35_,attrs16_);
Element elt36_=el(_doc,"td");
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_fighter,tracking_moves_no"));
at(elt37_,attrs17_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt17_,elt35_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build79(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,inc_accuracy"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build80(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_fighter,inc_accuracy_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_fighter,inc_accuracy_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_fighter,inc_accuracy_key_three"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_fighter,inc_accuracy_enabled"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt11_=el(_doc,"tbody");
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(5);
attrs4_.add(at("key","s"));
attrs4_.add(at("keyClassName","aiki.game.fight.MoveTeamPosition"));
attrs4_.add(at("map","incrUserAccuracy"));
attrs4_.add(at("value","a"));
attrs4_.add(at("varClassName","java.lang.Boolean"));
at(elt12_,attrs4_);
Element elt13_=el(_doc,"tr");
Element elt14_=el(_doc,"td");
Text txt0_=tx(_doc,"{s.getMove()}");
ad(elt14_,txt0_);
ad(elt13_,elt14_);
Element elt15_=el(_doc,"c:if");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("condition","isFoeIncrUserAccuracyTeam(([s]))"));
at(elt15_,attrs5_);
Element elt16_=el(_doc,"td");
Element elt17_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg_fighter,inc_accuracy_foe"));
at(elt17_,attrs6_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt18_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","!isFoeIncrUserAccuracyTeam(([s]))"));
at(elt18_,attrs7_);
Element elt19_=el(_doc,"td");
Element elt20_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_fighter,inc_accuracy_player"));
at(elt20_,attrs8_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt13_,elt18_);
Element elt21_=el(_doc,"td");
Text txt1_=tx(_doc,"{getIncrUserAccuracyTeam(([s]))}");
ad(elt21_,txt1_);
ad(elt13_,elt21_);
Element elt22_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","a"));
at(elt22_,attrs9_);
Element elt23_=el(_doc,"td");
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_fighter,inc_accuracy_enabled_y"));
at(elt24_,attrs10_);
ad(elt23_,elt24_);
ad(elt22_,elt23_);
ad(elt13_,elt22_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","!a"));
at(elt25_,attrs11_);
Element elt26_=el(_doc,"td");
Element elt27_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_fighter,inc_accuracy_enabled_n"));
at(elt27_,attrs12_);
ad(elt26_,elt27_);
ad(elt25_,elt26_);
ad(elt13_,elt25_);
ad(elt12_,elt13_);
ad(elt11_,elt12_);
ad(elt0_,elt11_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
