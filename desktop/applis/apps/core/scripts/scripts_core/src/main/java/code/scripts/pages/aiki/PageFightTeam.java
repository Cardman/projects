package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageFightTeam{
private PageFightTeam(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","team"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"link");
CustList<Attr> attrs1_=al(3);
attrs1_.add(at("href","web_fight/css/fight.css"));
attrs1_.add(at("rel","stylesheet"));
attrs1_.add(at("type","text/css"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
Element elt3_=el(_doc,"title");
Element elt4_=el(_doc,"c:if");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("condition","foeTeam"));
at(elt4_,attrs2_);
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_team,title_foe"));
at(elt5_,attrs3_);
ad(elt4_,elt5_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","!foeTeam"));
at(elt6_,attrs4_);
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_team,title_player"));
at(elt7_,attrs5_);
ad(elt6_,elt7_);
ad(elt3_,elt6_);
ad(elt1_,elt3_);
ad(elt0_,elt1_);
Element elt8_=el(_doc,"body");
build0(elt8_,_doc);
build1(elt8_,_doc);
build2(elt8_,_doc);
build3(elt8_,_doc);
build4(elt8_,_doc);
build5(elt8_,_doc);
build6(elt8_,_doc);
build7(elt8_,_doc);
build8(elt8_,_doc);
build9(elt8_,_doc);
build10(elt8_,_doc);
build11(elt8_,_doc);
build12(elt8_,_doc);
build13(elt8_,_doc);
build14(elt8_,_doc);
build15(elt8_,_doc);
ad(elt0_,elt8_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("c:command","web_fight/html/fight.html"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,fight"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"br");
ad(_body,elt2_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,"a");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("c:command","web_fight/html/team.html"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,refresh"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
ad(_body,elt0_);
Element elt2_=el(_doc,"br");
ad(_body,elt2_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,"ul");
Element elt1_=el(_doc,"c:for");
CustList<Attr> attrs0_=al(3);
attrs0_.add(at("list","getMembers()"));
attrs0_.add(at("var","f"));
attrs0_.add(at("className","java.lang.Byte"));
at(elt1_,attrs0_);
Element elt2_=el(_doc,"li");
Element elt3_=el(_doc,"a");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("c:command","$clickFighter({f})"));
at(elt3_,attrs1_);
Text txt0_=tx(_doc,"{getTrPokemonLink(([f]))}");
ad(elt3_,txt0_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,enbaled_moves_enabled"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_team,enbaled_moves_nb_round"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","enabledMoves"));
attrs3_.add(at("value","a"));
attrs3_.add(at("keyClassName","java.lang.String"));
attrs3_.add(at("varClassName","aiki.game.fight.ActivityOfMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","a.isEnabled()"));
at(elt13_,attrs4_);
Element elt14_=el(_doc,"td");
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_team,enbaled_moves_enabled_y"));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!a.isEnabled()"));
at(elt16_,attrs6_);
Element elt17_=el(_doc,"td");
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_team,enbaled_moves_enabled_n"));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","a.isIncrementCount()"));
at(elt19_,attrs8_);
Element elt20_=el(_doc,"td");
Text txt1_=tx(_doc,"{a.getNbTurn()}");
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!a.isIncrementCount()"));
at(elt21_,attrs9_);
Element elt22_=el(_doc,"td");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_team,enbaled_moves_no"));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build5(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_groups"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build6(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_groups_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,enbaled_moves_groups_enabled"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_team,enbaled_moves_groups_nb_round"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt9_=el(_doc,"tbody");
Element elt10_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(5);
attrs3_.add(at("key","m"));
attrs3_.add(at("map","enabledMovesByGroup"));
attrs3_.add(at("value","a"));
attrs3_.add(at("keyClassName","java.lang.Object"));
attrs3_.add(at("varClassName","aiki.game.fight.ActivityOfMove"));
at(elt10_,attrs3_);
Element elt11_=el(_doc,"tr");
Element elt12_=el(_doc,"td");
Text txt0_=tx(_doc,"{getKey(([m]))}");
ad(elt12_,txt0_);
ad(elt11_,elt12_);
Element elt13_=el(_doc,"c:if");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("condition","a.isEnabled()"));
at(elt13_,attrs4_);
Element elt14_=el(_doc,"td");
Element elt15_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_team,enbaled_moves_groups_enabled_y"));
at(elt15_,attrs5_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt11_,elt13_);
Element elt16_=el(_doc,"c:if");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("condition","!a.isEnabled()"));
at(elt16_,attrs6_);
Element elt17_=el(_doc,"td");
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_team,enbaled_moves_groups_enabled_n"));
at(elt18_,attrs7_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt11_,elt16_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","a.isIncrementCount()"));
at(elt19_,attrs8_);
Element elt20_=el(_doc,"td");
Text txt1_=tx(_doc,"{a.getNbTurn()}");
ad(elt20_,txt1_);
ad(elt19_,elt20_);
ad(elt11_,elt19_);
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!a.isIncrementCount()"));
at(elt21_,attrs9_);
Element elt22_=el(_doc,"td");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_team,enbaled_moves_groups_no"));
at(elt23_,attrs10_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt11_,elt21_);
ad(elt10_,elt11_);
ad(elt9_,elt10_);
ad(elt0_,elt9_);
ad(_body,elt0_);
}
static void build7(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_send"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build8(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_send_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,enbaled_moves_send_value"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc,"tbody");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","m"));
attrs2_.add(at("map","enabledMovesWhileSendingFoeUses"));
attrs2_.add(at("value","u"));
attrs2_.add(at("keyClassName","java.lang.String"));
attrs2_.add(at("varClassName","li"));
at(elt8_,attrs2_);
Element elt9_=el(_doc,"tr");
Element elt10_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"td");
Text txt1_=tx(_doc,"{u}");
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build9(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_uses"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build10(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,enbaled_moves_uses_key"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,enbaled_moves_uses_value"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt7_=el(_doc,"tbody");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","m"));
attrs2_.add(at("map","nbUsesMoves"));
attrs2_.add(at("value","u"));
attrs2_.add(at("keyClassName","java.lang.String"));
attrs2_.add(at("varClassName","java.lang.Integer"));
at(elt8_,attrs2_);
Element elt9_=el(_doc,"tr");
Element elt10_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt10_,txt0_);
ad(elt9_,elt10_);
Element elt11_=el(_doc,"td");
Text txt1_=tx(_doc,"{u}");
ad(elt11_,txt1_);
ad(elt9_,elt11_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt0_,elt7_);
ad(_body,elt0_);
}
static void build11(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,heal_after"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build12(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,heal_after_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,heal_after_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_team,heal_after_key_rd"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_team,heal_after_key_used_current"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc,"th");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_team,heal_after_key_used_last"));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt13_=el(_doc,"tbody");
Element elt14_=el(_doc,"c:for");
CustList<Attr> attrs5_=al(5);
attrs5_.add(at("key","m"));
attrs5_.add(at("map","healAfter"));
attrs5_.add(at("value","u"));
attrs5_.add(at("keyClassName","java.lang.String"));
attrs5_.add(at("varClassName","lse"));
at(elt14_,attrs5_);
Element elt15_=el(_doc,"c:for");
CustList<Attr> attrs6_=al(5);
attrs6_.add(at("key","p"));
attrs6_.add(at("map","u"));
attrs6_.add(at("value","s"));
attrs6_.add(at("keyClassName","java.lang.Byte"));
attrs6_.add(at("varClassName","aiki.game.fight.StacksOfUses"));
at(elt15_,attrs6_);
Element elt16_=el(_doc,"tr");
Element elt17_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt17_,txt0_);
ad(elt16_,elt17_);
Element elt18_=el(_doc,"td");
Text txt1_=tx(_doc,"{p}");
ad(elt18_,txt1_);
ad(elt16_,elt18_);
Element elt19_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getNbRounds()}");
ad(elt19_,txt2_);
ad(elt16_,elt19_);
Element elt20_=el(_doc,"c:if");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("condition","s.isFirstStacked()"));
at(elt20_,attrs7_);
Element elt21_=el(_doc,"td");
Element elt22_=el(_doc,"c:message");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("value","msg_team,heal_after_y"));
at(elt22_,attrs8_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt16_,elt20_);
Element elt23_=el(_doc,"c:if");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("condition","!s.isFirstStacked()"));
at(elt23_,attrs9_);
Element elt24_=el(_doc,"td");
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_team,heal_after_n"));
at(elt25_,attrs10_);
ad(elt24_,elt25_);
ad(elt23_,elt24_);
ad(elt16_,elt23_);
Element elt26_=el(_doc,"c:if");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("condition","s.isLastStacked()"));
at(elt26_,attrs11_);
Element elt27_=el(_doc,"td");
Element elt28_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg_team,heal_after_y"));
at(elt28_,attrs12_);
ad(elt27_,elt28_);
ad(elt26_,elt27_);
ad(elt16_,elt26_);
Element elt29_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","!s.isLastStacked()"));
at(elt29_,attrs13_);
Element elt30_=el(_doc,"td");
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_team,heal_after_n"));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt16_,elt29_);
ad(elt15_,elt16_);
ad(elt14_,elt15_);
ad(elt13_,elt14_);
ad(elt0_,elt13_);
ad(_body,elt0_);
}
static void build13(Element _body,Document _doc){
Element elt0_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,move_ant"));
at(elt0_,attrs0_);
ad(_body,elt0_);
}
static void build14(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
Element elt1_=el(_doc,"thead");
Element elt2_=el(_doc,"tr");
Element elt3_=el(_doc,"th");
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("value","msg_team,move_ant_key_one"));
at(elt4_,attrs0_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
Element elt5_=el(_doc,"th");
Element elt6_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,move_ant_key_two"));
at(elt6_,attrs1_);
ad(elt5_,elt6_);
ad(elt2_,elt5_);
Element elt7_=el(_doc,"th");
Element elt8_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg_team,move_ant_team"));
at(elt8_,attrs2_);
ad(elt7_,elt8_);
ad(elt2_,elt7_);
Element elt9_=el(_doc,"th");
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_team,move_ant_ground"));
at(elt10_,attrs3_);
ad(elt9_,elt10_);
ad(elt2_,elt9_);
Element elt11_=el(_doc,"th");
Element elt12_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg_team,move_ant_damage"));
at(elt12_,attrs4_);
ad(elt11_,elt12_);
ad(elt2_,elt11_);
Element elt13_=el(_doc,"th");
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_team,move_ant_nb_round"));
at(elt14_,attrs5_);
ad(elt13_,elt14_);
ad(elt2_,elt13_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt15_=el(_doc,"tbody");
Element elt16_=el(_doc,"c:for");
CustList<Attr> attrs6_=al(5);
attrs6_.add(at("key","m"));
attrs6_.add(at("map","movesAnticipation"));
attrs6_.add(at("value","u"));
attrs6_.add(at("keyClassName","java.lang.String"));
attrs6_.add(at("varClassName","lse"));
at(elt16_,attrs6_);
Element elt17_=el(_doc,"c:for");
CustList<Attr> attrs7_=al(5);
attrs7_.add(at("key","p"));
attrs7_.add(at("map","u"));
attrs7_.add(at("value","s"));
attrs7_.add(at("keyClassName","java.lang.Byte"));
attrs7_.add(at("varClassName","aiki.game.fight.Anticipation"));
at(elt17_,attrs7_);
Element elt18_=el(_doc,"tr");
Element elt19_=el(_doc,"td");
Text txt0_=tx(_doc,"{m}");
ad(elt19_,txt0_);
ad(elt18_,elt19_);
Element elt20_=el(_doc,"td");
Text txt1_=tx(_doc,"{p}");
ad(elt20_,txt1_);
ad(elt18_,elt20_);
Element elt21_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","isFoeMovesAnticipationTeam(([m]),([p]))"));
at(elt21_,attrs8_);
Element elt22_=el(_doc,"td");
Element elt23_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg_team,move_ant_foe"));
at(elt23_,attrs9_);
ad(elt22_,elt23_);
ad(elt21_,elt22_);
ad(elt18_,elt21_);
Element elt24_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!isFoeMovesAnticipationTeam(([m]),([p]))"));
at(elt24_,attrs10_);
Element elt25_=el(_doc,"td");
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs11_=al(1);
attrs11_.add(at("value","msg_team,move_ant_player"));
at(elt26_,attrs11_);
ad(elt25_,elt26_);
ad(elt24_,elt25_);
ad(elt18_,elt24_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("condition","!isBackMovesAnticipationTeam(([m]),([p]))"));
at(elt27_,attrs12_);
Element elt28_=el(_doc,"td");
Text txt2_=tx(_doc,"{s.getTargetPosition().getPosition()}");
ad(elt28_,txt2_);
ad(elt27_,elt28_);
ad(elt18_,elt27_);
Element elt29_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","isBackMovesAnticipationTeam(([m]),([p]))"));
at(elt29_,attrs13_);
Element elt30_=el(_doc,"td");
Element elt31_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg_team,move_ant_no"));
at(elt31_,attrs14_);
ad(elt30_,elt31_);
ad(elt29_,elt30_);
ad(elt18_,elt29_);
Element elt32_=el(_doc,"td");
Text txt3_=tx(_doc,"{s.getDamage()}");
ad(elt32_,txt3_);
ad(elt18_,elt32_);
Element elt33_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","s.isIncrementing()"));
at(elt33_,attrs15_);
Element elt34_=el(_doc,"td");
Text txt4_=tx(_doc,"{s.getNbRounds()}");
ad(elt34_,txt4_);
ad(elt33_,elt34_);
ad(elt18_,elt33_);
Element elt35_=el(_doc,"c:if");
CustList<Attr> attrs16_=al(1);
attrs16_.add(at("condition","!s.isIncrementing()"));
at(elt35_,attrs16_);
Element elt36_=el(_doc,"td");
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg_team,move_ant_no"));
at(elt37_,attrs17_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
ad(elt18_,elt35_);
ad(elt17_,elt18_);
ad(elt16_,elt17_);
ad(elt15_,elt16_);
ad(elt0_,elt15_);
ad(_body,elt0_);
}
static void build15(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","!playerFightersAgainstFoe.isEmpty()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_team,player_foe"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"ul");
Element elt3_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("key","p"));
attrs2_.add(at("map","playerFightersAgainstFoe"));
attrs2_.add(at("value","f"));
attrs2_.add(at("keyClassName","java.lang.Object"));
attrs2_.add(at("varClassName","ls"));
at(elt3_,attrs2_);
Element elt4_=el(_doc,"li");
Text txt0_=tx(_doc,"{getPlayerFigtherAgainstFoe(([p]))}:");
ad(elt4_,txt0_);
Element elt5_=el(_doc,"br");
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:if");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("condition","!f.isEmpty()"));
at(elt6_,attrs3_);
Element elt7_=el(_doc,"ul");
Element elt8_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(2);
attrs4_.add(at("list","f"));
attrs4_.add(at("var","c"));
at(elt8_,attrs4_);
Element elt9_=el(_doc,"li");
Text txt1_=tx(_doc,"{getFoeFigtherAgainstFoe(([p]),([c]))}");
ad(elt9_,txt1_);
ad(elt8_,elt9_);
ad(elt7_,elt8_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt2_,elt3_);
ad(elt0_,elt2_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
