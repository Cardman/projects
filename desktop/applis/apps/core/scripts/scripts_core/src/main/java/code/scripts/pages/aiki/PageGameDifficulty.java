package code.scripts.pages.aiki;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageGameDifficulty{
private PageGameDifficulty(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("xmlns:c","javahtml"));
attrs0_.add(at("c:bean","difficulty"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"title");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_difficulty,title"));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc,"link");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("href","web_game/css/difficulty.css"));
attrs2_.add(at("rel","stylesheet"));
attrs2_.add(at("type","text/css"));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc,"body");
build0(elt5_,_doc);
ad(elt0_,elt5_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"form");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("c:command","$change"));
attrs0_.add(at("name","changingDiff"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg_difficulty,win_pts"));
at(elt1_,attrs1_);
ad(elt0_,elt1_);
Element elt2_=el(_doc,"c:select");
CustList<Attr> attrs2_=al(5);
attrs2_.add(at("default",""));
attrs2_.add(at("map","winPointsFight"));
attrs2_.add(at("name","diffWinningExpPtsFight"));
attrs2_.add(at("update",""));
attrs2_.add(at("varValue","diffWinningExpPtsFight"));
at(elt2_,attrs2_);
ad(elt0_,elt2_);
Element elt3_=el(_doc,"br");
ad(elt0_,elt3_);
Element elt4_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg_difficulty,allow_catching_ko"));
at(elt4_,attrs3_);
ad(elt0_,elt4_);
Element elt5_=el(_doc,"input");
CustList<Attr> attrs4_=al(3);
attrs4_.add(at("c:varValue","allowCatchingKo"));
attrs4_.add(at("name","allowCatchingKo"));
attrs4_.add(at("type","checkbox"));
at(elt5_,attrs4_);
ad(elt0_,elt5_);
Element elt6_=el(_doc,"br");
ad(elt0_,elt6_);
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg_difficulty,allow_switch_places"));
at(elt7_,attrs5_);
ad(elt0_,elt7_);
Element elt8_=el(_doc,"input");
CustList<Attr> attrs6_=al(3);
attrs6_.add(at("c:varValue","allowedSwitchPlacesEndRound"));
attrs6_.add(at("name","allowedSwitchPlacesEndRound"));
attrs6_.add(at("type","checkbox"));
at(elt8_,attrs6_);
ad(elt0_,elt8_);
Element elt9_=el(_doc,"br");
ad(elt0_,elt9_);
Element elt10_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg_difficulty,win_trainer_exp"));
at(elt10_,attrs7_);
ad(elt0_,elt10_);
Element elt11_=el(_doc,"input");
CustList<Attr> attrs8_=al(5);
attrs8_.add(at("c:validator","rate_validator"));
attrs8_.add(at("c:varValue","winTrainerExp"));
attrs8_.add(at("id","winTrainerExpRate"));
attrs8_.add(at("name","winTrainerExp"));
attrs8_.add(at("type","text"));
at(elt11_,attrs8_);
ad(elt0_,elt11_);
Element elt12_=el(_doc,"span");
CustList<Attr> attrs9_=al(3);
attrs9_.add(at("c:for","winTrainerExpRate"));
attrs9_.add(at("class","errormessage"));
attrs9_.add(at("c:valueMessage","msg_difficulty,rate_issue"));
at(elt12_,attrs9_);
ad(elt0_,elt12_);
Element elt13_=el(_doc,"br");
ad(elt0_,elt13_);
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("value","msg_difficulty,winning_exp_pts_fight"));
at(elt14_,attrs10_);
ad(elt0_,elt14_);
Element elt15_=el(_doc,"input");
CustList<Attr> attrs11_=al(5);
attrs11_.add(at("c:validator","rate_validator"));
attrs11_.add(at("c:varValue","rateWinningExpPtsFight"));
attrs11_.add(at("id","winExpRateFight"));
attrs11_.add(at("name","rateWinningExpPtsFight"));
attrs11_.add(at("type","text"));
at(elt15_,attrs11_);
ad(elt0_,elt15_);
Element elt16_=el(_doc,"span");
CustList<Attr> attrs12_=al(3);
attrs12_.add(at("c:for","winExpRateFight"));
attrs12_.add(at("class","errormessage"));
attrs12_.add(at("c:valueMessage","msg_difficulty,rate_issue"));
at(elt16_,attrs12_);
ad(elt0_,elt16_);
Element elt17_=el(_doc,"br");
ad(elt0_,elt17_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("value","msg_difficulty,end_fight"));
at(elt18_,attrs13_);
ad(elt0_,elt18_);
Element elt19_=el(_doc,"input");
CustList<Attr> attrs14_=al(3);
attrs14_.add(at("c:varValue","endFightIfOneTeamKo"));
attrs14_.add(at("name","endFightIfOneTeamKo"));
attrs14_.add(at("type","checkbox"));
at(elt19_,attrs14_);
ad(elt0_,elt19_);
Element elt20_=el(_doc,"br");
ad(elt0_,elt20_);
Element elt21_=el(_doc,"c:message");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("value","msg_difficulty,iv_player"));
at(elt21_,attrs15_);
ad(elt0_,elt21_);
Element elt22_=el(_doc,"input");
CustList<Attr> attrs16_=al(5);
attrs16_.add(at("c:validator","short_validator"));
attrs16_.add(at("c:varValue","ivPlayer"));
attrs16_.add(at("id","ivPlayerId"));
attrs16_.add(at("name","ivPlayer"));
attrs16_.add(at("type","text"));
at(elt22_,attrs16_);
ad(elt0_,elt22_);
Element elt23_=el(_doc,"span");
CustList<Attr> attrs17_=al(3);
attrs17_.add(at("c:for","ivPlayerId"));
attrs17_.add(at("class","errormessage"));
attrs17_.add(at("c:valueMessage","msg_difficulty,short_issue"));
at(elt23_,attrs17_);
ad(elt0_,elt23_);
Element elt24_=el(_doc,"br");
ad(elt0_,elt24_);
Element elt25_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg_difficulty,iv_foe"));
at(elt25_,attrs18_);
ad(elt0_,elt25_);
Element elt26_=el(_doc,"input");
CustList<Attr> attrs19_=al(5);
attrs19_.add(at("c:validator","short_validator"));
attrs19_.add(at("c:varValue","ivFoe"));
attrs19_.add(at("id","ivFoeId"));
attrs19_.add(at("name","ivFoe"));
attrs19_.add(at("type","text"));
at(elt26_,attrs19_);
ad(elt0_,elt26_);
Element elt27_=el(_doc,"span");
CustList<Attr> attrs20_=al(3);
attrs20_.add(at("c:for","ivFoeId"));
attrs20_.add(at("class","errormessage"));
attrs20_.add(at("c:valueMessage","msg_difficulty,short_issue"));
at(elt27_,attrs20_);
ad(elt0_,elt27_);
Element elt28_=el(_doc,"br");
ad(elt0_,elt28_);
Element elt29_=el(_doc,"c:message");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("value","msg_difficulty,rate_win_money_base"));
at(elt29_,attrs21_);
ad(elt0_,elt29_);
Element elt30_=el(_doc,"input");
CustList<Attr> attrs22_=al(5);
attrs22_.add(at("c:validator","rate_validator"));
attrs22_.add(at("c:varValue","rateWinMoneyBase"));
attrs22_.add(at("id","rateWinMoneyBaseId"));
attrs22_.add(at("name","rateWinMoneyBase"));
attrs22_.add(at("type","text"));
at(elt30_,attrs22_);
ad(elt0_,elt30_);
Element elt31_=el(_doc,"span");
CustList<Attr> attrs23_=al(3);
attrs23_.add(at("c:for","rateWinMoneyBaseId"));
attrs23_.add(at("class","errormessage"));
attrs23_.add(at("c:valueMessage","msg_difficulty,rate_issue"));
at(elt31_,attrs23_);
ad(elt0_,elt31_);
Element elt32_=el(_doc,"br");
ad(elt0_,elt32_);
Element elt33_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg_difficulty,rate_win_money_loose"));
at(elt33_,attrs24_);
ad(elt0_,elt33_);
Element elt34_=el(_doc,"input");
CustList<Attr> attrs25_=al(5);
attrs25_.add(at("c:validator","rate_validator"));
attrs25_.add(at("c:varValue","rateLooseMoneyWin"));
attrs25_.add(at("id","rateLooseMoneyWinId"));
attrs25_.add(at("name","rateLooseMoneyWin"));
attrs25_.add(at("type","text"));
at(elt34_,attrs25_);
ad(elt0_,elt34_);
Element elt35_=el(_doc,"span");
CustList<Attr> attrs26_=al(3);
attrs26_.add(at("c:for","rateLooseMoneyWinId"));
attrs26_.add(at("class","errormessage"));
attrs26_.add(at("c:valueMessage","msg_difficulty,rate_issue"));
at(elt35_,attrs26_);
ad(elt0_,elt35_);
Element elt36_=el(_doc,"br");
ad(elt0_,elt36_);
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","msg_difficulty,restored_moves"));
at(elt37_,attrs27_);
ad(elt0_,elt37_);
Element elt38_=el(_doc,"input");
CustList<Attr> attrs28_=al(3);
attrs28_.add(at("c:varValue","restoredMovesEndFight"));
attrs28_.add(at("name","restoredMovesEndFight"));
attrs28_.add(at("type","checkbox"));
at(elt38_,attrs28_);
ad(elt0_,elt38_);
Element elt39_=el(_doc,"br");
ad(elt0_,elt39_);
Element elt40_=el(_doc,"c:message");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("value","msg_difficulty,closing"));
at(elt40_,attrs29_);
ad(elt0_,elt40_);
Element elt41_=el(_doc,"input");
CustList<Attr> attrs30_=al(3);
attrs30_.add(at("c:varValue","enabledClosing"));
attrs30_.add(at("name","enabledClosing"));
attrs30_.add(at("type","checkbox"));
at(elt41_,attrs30_);
ad(elt0_,elt41_);
Element elt42_=el(_doc,"br");
ad(elt0_,elt42_);
Element elt43_=el(_doc,"c:message");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("value","msg_difficulty,random_wild"));
at(elt43_,attrs31_);
ad(elt0_,elt43_);
Element elt44_=el(_doc,"input");
CustList<Attr> attrs32_=al(3);
attrs32_.add(at("c:varValue","randomWildFight"));
attrs32_.add(at("name","randomWildFight"));
attrs32_.add(at("type","checkbox"));
at(elt44_,attrs32_);
ad(elt0_,elt44_);
Element elt45_=el(_doc,"br");
ad(elt0_,elt45_);
Element elt46_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg_difficulty,flee"));
at(elt46_,attrs33_);
ad(elt0_,elt46_);
Element elt47_=el(_doc,"input");
CustList<Attr> attrs34_=al(3);
attrs34_.add(at("c:varValue","stillPossibleFlee"));
attrs34_.add(at("name","stillPossibleFlee"));
attrs34_.add(at("type","checkbox"));
at(elt47_,attrs34_);
ad(elt0_,elt47_);
Element elt48_=el(_doc,"br");
ad(elt0_,elt48_);
Element elt49_=el(_doc,"c:message");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("value","msg_difficulty,skip_learn"));
at(elt49_,attrs35_);
ad(elt0_,elt49_);
Element elt50_=el(_doc,"input");
CustList<Attr> attrs36_=al(3);
attrs36_.add(at("c:varValue","skipLearningMovesWhileNotGrowingLevel"));
attrs36_.add(at("name","skipLearningMovesWhileNotGrowingLevel"));
attrs36_.add(at("type","checkbox"));
at(elt50_,attrs36_);
ad(elt0_,elt50_);
Element elt51_=el(_doc,"br");
ad(elt0_,elt51_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg_difficulty,law_choice_player"));
at(elt52_,attrs37_);
ad(elt0_,elt52_);
Element elt53_=el(_doc,"c:select");
CustList<Attr> attrs38_=al(5);
attrs38_.add(at("default",""));
attrs38_.add(at("map","damageRates"));
attrs38_.add(at("name","damageRatePlayer"));
attrs38_.add(at("update",""));
attrs38_.add(at("varValue","damageRatePlayer"));
at(elt53_,attrs38_);
ad(elt0_,elt53_);
Element elt54_=el(_doc,"br");
ad(elt0_,elt54_);
Element elt55_=el(_doc,"table");
Element elt56_=el(_doc,"thead");
Element elt57_=el(_doc,"tr");
Element elt58_=el(_doc,"th");
Element elt59_=el(_doc,"c:message");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","msg_difficulty,rate_damage_ev"));
at(elt59_,attrs39_);
ad(elt58_,elt59_);
ad(elt57_,elt58_);
Element elt60_=el(_doc,"th");
Element elt61_=el(_doc,"c:message");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("value","msg_difficulty,rate_damage"));
at(elt61_,attrs40_);
ad(elt60_,elt61_);
ad(elt57_,elt60_);
ad(elt56_,elt57_);
ad(elt55_,elt56_);
Element elt62_=el(_doc,"tbody");
Element elt63_=el(_doc,"c:for");
CustList<Attr> attrs41_=al(5);
attrs41_.add(at("key","e"));
attrs41_.add(at("map","damageRatePlayerTable"));
attrs41_.add(at("value","r"));
attrs41_.add(at("keyClassName","r"));
attrs41_.add(at("varClassName","r"));
at(elt63_,attrs41_);
Element elt64_=el(_doc,"tr");
Element elt65_=el(_doc,"td");
Text txt0_=tx(_doc,"{e}");
ad(elt65_,txt0_);
ad(elt64_,elt65_);
Element elt66_=el(_doc,"td");
Text txt1_=tx(_doc,"{r}");
ad(elt66_,txt1_);
ad(elt64_,elt66_);
ad(elt63_,elt64_);
ad(elt62_,elt63_);
ad(elt55_,elt62_);
ad(elt0_,elt55_);
Element elt67_=el(_doc,"c:message");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("value","msg_difficulty,law_choice_foe"));
at(elt67_,attrs42_);
ad(elt0_,elt67_);
Element elt68_=el(_doc,"c:select");
CustList<Attr> attrs43_=al(5);
attrs43_.add(at("default",""));
attrs43_.add(at("map","damageRates"));
attrs43_.add(at("name","damageRateLawFoe"));
attrs43_.add(at("update",""));
attrs43_.add(at("varValue","damageRateLawFoe"));
at(elt68_,attrs43_);
ad(elt0_,elt68_);
Element elt69_=el(_doc,"br");
ad(elt0_,elt69_);
Element elt70_=el(_doc,"table");
Element elt71_=el(_doc,"thead");
Element elt72_=el(_doc,"tr");
Element elt73_=el(_doc,"th");
Element elt74_=el(_doc,"c:message");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("value","msg_difficulty,rate_damage_ev"));
at(elt74_,attrs44_);
ad(elt73_,elt74_);
ad(elt72_,elt73_);
Element elt75_=el(_doc,"th");
Element elt76_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("value","msg_difficulty,rate_damage"));
at(elt76_,attrs45_);
ad(elt75_,elt76_);
ad(elt72_,elt75_);
ad(elt71_,elt72_);
ad(elt70_,elt71_);
Element elt77_=el(_doc,"tbody");
Element elt78_=el(_doc,"c:for");
CustList<Attr> attrs46_=al(5);
attrs46_.add(at("key","e"));
attrs46_.add(at("map","damageRateFoeTable"));
attrs46_.add(at("value","r"));
attrs46_.add(at("keyClassName","r"));
attrs46_.add(at("varClassName","r"));
at(elt78_,attrs46_);
Element elt79_=el(_doc,"tr");
Element elt80_=el(_doc,"td");
Text txt2_=tx(_doc,"{e}");
ad(elt80_,txt2_);
ad(elt79_,elt80_);
Element elt81_=el(_doc,"td");
Text txt3_=tx(_doc,"{r}");
ad(elt81_,txt3_);
ad(elt79_,elt81_);
ad(elt78_,elt79_);
ad(elt77_,elt78_);
ad(elt70_,elt77_);
ad(elt0_,elt70_);
Element elt82_=el(_doc,"input");
CustList<Attr> attrs47_=al(2);
attrs47_.add(at("type","submit"));
attrs47_.add(at("value","ok"));
at(elt82_,attrs47_);
ad(elt0_,elt82_);
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
