package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class HelpCards131{
private HelpCards131(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
Element elt1_=el(_doc,"body");
Text txt0_=tx(_doc,"Le sous menu \"Entrainement\" contient les sous menus sur les jeux pour l''entra&#238;nement.");
ad(elt1_,txt0_);
Element elt2_=el(_doc,"br");
ad(elt1_,elt2_);
Element elt3_=el(_doc,"br");
ad(elt1_,elt3_);
Text txt1_=tx(_doc,"Pour chaque nombre de joueurs diff&#233;rents (trois, quatre ou cinq)");
ad(elt1_,txt1_);
Element elt4_=el(_doc,"br");
ad(elt1_,elt4_);
Text txt2_=tx(_doc,"Il existe trois modes d''entra&#238;nement au tarot:");
ad(elt1_,txt2_);
Element elt5_=el(_doc,"br");
ad(elt1_,elt5_);
Element elt6_=el(_doc,"ol");
Element elt7_=el(_doc,"li");
Text txt3_=tx(_doc,"Petit &#224; chasser");
ad(elt7_,txt3_);
ad(elt6_,elt7_);
Element elt8_=el(_doc,"li");
Text txt4_=tx(_doc,"Petit &#224; sauver");
ad(elt8_,txt4_);
ad(elt6_,elt8_);
Element elt9_=el(_doc,"li");
Text txt5_=tx(_doc,"Petit &#224; emmener au bout");
ad(elt9_,txt5_);
ad(elt6_,elt9_);
ad(elt1_,elt6_);
Element elt10_=el(_doc,"br");
ad(elt1_,elt10_);
Text txt6_=tx(_doc,"Ceci est programm&#233; par des tirages de Monte - Carlo,");
ad(elt1_,txt6_);
Element elt11_=el(_doc,"br");
ad(elt1_,elt11_);
Text txt7_=tx(_doc,"c''est - &#224; - dire des tirages de nombres al&#233;atoires.");
ad(elt1_,txt7_);
Element elt12_=el(_doc,"br");
ad(elt1_,elt12_);
Element elt13_=el(_doc,"br");
ad(elt1_,elt13_);
Text txt8_=tx(_doc,"On tire un nombre al&#233;atoire d''atouts suivant une loi bin&#244;miale conditionnelle;");
ad(elt1_,txt8_);
Element elt14_=el(_doc,"br");
ad(elt1_,elt14_);
Text txt9_=tx(_doc,"pour garder les &#233;v&#233;nements &#233;quiprobables.");
ad(elt1_,txt9_);
Element elt15_=el(_doc,"br");
ad(elt1_,elt15_);
Text txt10_=tx(_doc,"Les intervalles de nombres d''atouts &#224; tirer sont les suivants: (Le Petit ne fait pas partie des atouts tir&#233;s al&#233;atoirement.)");
ad(elt1_,txt10_);
Element elt16_=el(_doc,"br");
ad(elt1_,elt16_);
Element elt17_=el(_doc,"br");
ad(elt1_,elt17_);
Element elt18_=el(_doc,"ol");
Element elt19_=el(_doc,"li");
Text txt11_=tx(_doc,"A trois joueurs,");
ad(elt19_,txt11_);
Element elt20_=el(_doc,"br");
ad(elt19_,elt20_);
Element elt21_=el(_doc,"ol");
Element elt22_=el(_doc,"li");
Text txt12_=tx(_doc,"Petit &#224; chasser:");
ad(elt22_,txt12_);
Element elt23_=el(_doc,"br");
ad(elt22_,elt23_);
Text txt13_=tx(_doc,"&#160;Le minimum vaut quinze et le maximum vaut vingt et un.");
ad(elt22_,txt13_);
ad(elt21_,elt22_);
Element elt24_=el(_doc,"li");
Text txt14_=tx(_doc,"Petit &#224; sauver:");
ad(elt24_,txt14_);
Element elt25_=el(_doc,"br");
ad(elt24_,elt25_);
Text txt15_=tx(_doc,"&#160;Le minimum vaut un et le maximum vaut cinq.");
ad(elt24_,txt15_);
ad(elt21_,elt24_);
Element elt26_=el(_doc,"li");
Text txt16_=tx(_doc,"Petit &#224; emmener au bout:");
ad(elt26_,txt16_);
Element elt27_=el(_doc,"br");
ad(elt26_,elt27_);
Text txt17_=tx(_doc,"&#160;Le minimum vaut quatorze et le maximum vaut vingt et un.");
ad(elt26_,txt17_);
ad(elt21_,elt26_);
ad(elt19_,elt21_);
ad(elt18_,elt19_);
Element elt28_=el(_doc,"li");
Text txt18_=tx(_doc,"A quatre joueurs,");
ad(elt28_,txt18_);
Element elt29_=el(_doc,"br");
ad(elt28_,elt29_);
Element elt30_=el(_doc,"ol");
Element elt31_=el(_doc,"li");
Text txt19_=tx(_doc,"Petit &#224; chasser:");
ad(elt31_,txt19_);
Element elt32_=el(_doc,"br");
ad(elt31_,elt32_);
Text txt20_=tx(_doc,"&#160;Le minimum vaut treize et le maximum vaut dix - huit.");
ad(elt31_,txt20_);
ad(elt30_,elt31_);
Element elt33_=el(_doc,"li");
Text txt21_=tx(_doc,"Petit &#224; sauver:");
ad(elt33_,txt21_);
Element elt34_=el(_doc,"br");
ad(elt33_,elt34_);
Text txt22_=tx(_doc,"&#160;Le minimum vaut un et le maximum vaut quatre.");
ad(elt33_,txt22_);
ad(elt30_,elt33_);
Element elt35_=el(_doc,"li");
Text txt23_=tx(_doc,"Petit &#224; emmener au bout:");
ad(elt35_,txt23_);
Element elt36_=el(_doc,"br");
ad(elt35_,elt36_);
Text txt24_=tx(_doc,"&#160;Le minimum vaut douze et le maximum vaut dix - sept.");
ad(elt35_,txt24_);
ad(elt30_,elt35_);
ad(elt28_,elt30_);
ad(elt18_,elt28_);
Element elt37_=el(_doc,"li");
Text txt25_=tx(_doc,"A cinq joueurs, (avec un appel)");
ad(elt37_,txt25_);
Element elt38_=el(_doc,"br");
ad(elt37_,elt38_);
Element elt39_=el(_doc,"ol");
Element elt40_=el(_doc,"li");
Text txt26_=tx(_doc,"Petit &#224; chasser:");
ad(elt40_,txt26_);
Element elt41_=el(_doc,"br");
ad(elt40_,elt41_);
Text txt27_=tx(_doc,"&#160;Le minimum vaut dix et le maximum vaut quinze.");
ad(elt40_,txt27_);
ad(elt39_,elt40_);
Element elt42_=el(_doc,"li");
Text txt28_=tx(_doc,"Petit &#224; sauver:");
ad(elt42_,txt28_);
Element elt43_=el(_doc,"br");
ad(elt42_,elt43_);
Text txt29_=tx(_doc,"&#160;Le minimum vaut un et le maximum vaut trois.");
ad(elt42_,txt29_);
ad(elt39_,elt42_);
Element elt44_=el(_doc,"li");
Text txt30_=tx(_doc,"Petit &#224; emmener au bout:");
ad(elt44_,txt30_);
Element elt45_=el(_doc,"br");
ad(elt44_,elt45_);
Text txt31_=tx(_doc,"&#160;Le minimum vaut neuf et le maximum vaut quatorze.");
ad(elt44_,txt31_);
ad(elt39_,elt44_);
ad(elt37_,elt39_);
ad(elt18_,elt37_);
Element elt46_=el(_doc,"li");
Text txt32_=tx(_doc,"A cinq joueurs, (sans appel)");
ad(elt46_,txt32_);
Element elt47_=el(_doc,"br");
ad(elt46_,elt47_);
Element elt48_=el(_doc,"ol");
Element elt49_=el(_doc,"li");
Text txt33_=tx(_doc,"Petit &#224; chasser:");
ad(elt49_,txt33_);
Element elt50_=el(_doc,"br");
ad(elt49_,elt50_);
Text txt34_=tx(_doc,"&#160;Le minimum vaut dix et le maximum vaut quatorze.");
ad(elt49_,txt34_);
ad(elt48_,elt49_);
Element elt51_=el(_doc,"li");
Text txt35_=tx(_doc,"Petit &#224; sauver:");
ad(elt51_,txt35_);
Element elt52_=el(_doc,"br");
ad(elt51_,elt52_);
Text txt36_=tx(_doc,"&#160;Le minimum vaut un et le maximum vaut deux.");
ad(elt51_,txt36_);
ad(elt48_,elt51_);
Element elt53_=el(_doc,"li");
Text txt37_=tx(_doc,"Petit &#224; emmener au bout:");
ad(elt53_,txt37_);
Element elt54_=el(_doc,"br");
ad(elt53_,elt54_);
Text txt38_=tx(_doc,"&#160;Le minimum vaut neuf et le maximum vaut treize.");
ad(elt53_,txt38_);
ad(elt48_,elt53_);
ad(elt46_,elt48_);
ad(elt18_,elt46_);
Element elt55_=el(_doc,"li");
Text txt39_=tx(_doc,"A six joueurs");
ad(elt55_,txt39_);
Element elt56_=el(_doc,"br");
ad(elt55_,elt56_);
Element elt57_=el(_doc,"ol");
Element elt58_=el(_doc,"li");
Text txt40_=tx(_doc,"Petit &#224; chasser:");
ad(elt58_,txt40_);
Element elt59_=el(_doc,"br");
ad(elt58_,elt59_);
Text txt41_=tx(_doc,"&#160;Le minimum vaut neuf et le maximum vaut douze.");
ad(elt58_,txt41_);
ad(elt57_,elt58_);
Element elt60_=el(_doc,"li");
Text txt42_=tx(_doc,"Petit &#224; sauver:");
ad(elt60_,txt42_);
Element elt61_=el(_doc,"br");
ad(elt60_,elt61_);
Text txt43_=tx(_doc,"&#160;Le minimum vaut un et le maximum vaut trois.");
ad(elt60_,txt43_);
ad(elt57_,elt60_);
Element elt62_=el(_doc,"li");
Text txt44_=tx(_doc,"Petit &#224; emmener au bout:");
ad(elt62_,txt44_);
Element elt63_=el(_doc,"br");
ad(elt62_,elt63_);
Text txt45_=tx(_doc,"&#160;Le minimum vaut huit et le maximum vaut onze.");
ad(elt62_,txt45_);
ad(elt57_,elt62_);
ad(elt55_,elt57_);
ad(elt18_,elt55_);
ad(elt1_,elt18_);
Text txt46_=tx(_doc,"Dans tous les cas, une partie v&#233;rifiant les conditions ci - dessus, est jou&#233;e.");
ad(elt1_,txt46_);
Element elt64_=el(_doc,"br");
ad(elt1_,elt64_);
ad(elt0_,elt1_);
_doc.appendChild(elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
