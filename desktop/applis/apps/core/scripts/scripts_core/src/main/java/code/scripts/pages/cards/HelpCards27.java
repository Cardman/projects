package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class HelpCards27{
private HelpCards27(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
Element elt1_=el(_doc,"body");
Text txt0_=tx(_doc,"Here is the difference with playing by teams (Taker + possible called player versus Defense):");
ad(elt1_,txt0_);
Element elt2_=el(_doc,"br");
ad(elt1_,elt2_);
Element elt3_=el(_doc,"br");
ad(elt1_,elt3_);
Text txt1_=tx(_doc,"Possible dealing are the following one:");
ad(elt1_,txt1_);
Element elt4_=el(_doc,"br");
ad(elt1_,elt4_);
Element elt5_=el(_doc,"ul");
Element elt6_=el(_doc,"li");
Text txt2_=tx(_doc,"18 cards per player and 6 at the dog; cards are dealt 3 by 3; for 4 players.");
ad(elt6_,txt2_);
ad(elt5_,elt6_);
Element elt7_=el(_doc,"li");
Text txt3_=tx(_doc,"24 cards per player and 6 at the dog; cards are dealt 3 by 3; for 3 players.");
ad(elt7_,txt3_);
ad(elt5_,elt7_);
Element elt8_=el(_doc,"li");
Text txt4_=tx(_doc,"15 cards per player and 3 at the dog; cards are dealt 3 by 3; for 5 players.");
ad(elt8_,txt4_);
ad(elt5_,elt8_);
Element elt9_=el(_doc,"li");
Text txt5_=tx(_doc,"14 cards per player and 8 at the dog; cards are dealt 2 by 2; for 5 players.");
ad(elt9_,txt5_);
ad(elt5_,elt9_);
Element elt10_=el(_doc,"li");
Text txt6_=tx(_doc,"12 cards per player and 6 at the dog; cards are dealt 2 by 2; for 6 players.");
ad(elt10_,txt6_);
ad(elt5_,elt10_);
ad(elt1_,elt5_);
Element elt11_=el(_doc,"br");
ad(elt1_,elt11_);
Text txt7_=tx(_doc,"Playing discard can be done after all players have declared \"pass\".");
ad(elt1_,txt7_);
Element elt12_=el(_doc,"br");
ad(elt1_,elt12_);
Element elt13_=el(_doc,"br");
ad(elt1_,elt13_);
Text txt8_=tx(_doc,"In this case, the dog is hidden.");
ad(elt1_,txt8_);
Element elt14_=el(_doc,"br");
ad(elt1_,elt14_);
Element elt15_=el(_doc,"br");
ad(elt1_,elt15_);
Text txt9_=tx(_doc,"The goal is to loose the most cards as possible, so loose the Excuse at the last trick is great in this case.");
ad(elt1_,txt9_);
Element elt16_=el(_doc,"br");
ad(elt1_,elt16_);
Element elt17_=el(_doc,"br");
ad(elt1_,elt17_);
Text txt10_=tx(_doc,"There is neither declaring nor bonuses.");
ad(elt1_,txt10_);
Element elt18_=el(_doc,"br");
ad(elt1_,elt18_);
Element elt19_=el(_doc,"br");
ad(elt1_,elt19_);
Text txt11_=tx(_doc,"Else the deal progresses like game by teams (Same rules for playing cards.).");
ad(elt1_,txt11_);
Element elt20_=el(_doc,"br");
ad(elt1_,elt20_);
Element elt21_=el(_doc,"br");
ad(elt1_,elt21_);
Text txt12_=tx(_doc,"&#160;Limits values not to be achieved for a player are the following one:");
ad(elt1_,txt12_);
Element elt22_=el(_doc,"br");
ad(elt1_,elt22_);
Element elt23_=el(_doc,"br");
ad(elt1_,elt23_);
Element elt24_=el(_doc,"ul");
Element elt25_=el(_doc,"li");
Text txt13_=tx(_doc,"56 points without Oulder.");
ad(elt25_,txt13_);
ad(elt24_,elt25_);
Element elt26_=el(_doc,"li");
Text txt14_=tx(_doc,"51 points with 1 Oulder in the tricks of the player.");
ad(elt26_,txt14_);
ad(elt24_,elt26_);
Element elt27_=el(_doc,"li");
Text txt15_=tx(_doc,"41 points with 2 Oulders in the tricks of the player.");
ad(elt27_,txt15_);
ad(elt24_,elt27_);
Element elt28_=el(_doc,"li");
Text txt16_=tx(_doc,"36 points with 3 Oulders in the tricks of the player.");
ad(elt28_,txt16_);
ad(elt24_,elt28_);
ad(elt1_,elt24_);
Element elt29_=el(_doc,"br");
ad(elt1_,elt29_);
Text txt17_=tx(_doc,"&#160;At the end of deal, for sorting players, one processes in the following way:");
ad(elt1_,txt17_);
Element elt30_=el(_doc,"br");
ad(elt1_,elt30_);
Element elt31_=el(_doc,"br");
ad(elt1_,elt31_);
Text txt18_=tx(_doc,"Difference points of a player = limit value for the player - number of scored points in the tricks.");
ad(elt1_,txt18_);
Element elt32_=el(_doc,"br");
ad(elt1_,elt32_);
Element elt33_=el(_doc,"br");
ad(elt1_,elt33_);
Text txt19_=tx(_doc,"Players are sorted by their difference points, the player having the greatest difference is the best player.");
ad(elt1_,txt19_);
Element elt34_=el(_doc,"br");
ad(elt1_,elt34_);
Element elt35_=el(_doc,"br");
ad(elt1_,elt35_);
Text txt20_=tx(_doc,"If two players have same difference points and have won tricks:");
ad(elt1_,txt20_);
Element elt36_=el(_doc,"br");
ad(elt1_,elt36_);
Text txt21_=tx(_doc,"&#160;Then the players are sorted by number of Oudlers in the tricks, the number of Oudlers must be the lowest as possible for winning.");
ad(elt1_,txt21_);
Element elt37_=el(_doc,"br");
ad(elt1_,elt37_);
Element elt38_=el(_doc,"br");
ad(elt1_,elt38_);
Text txt22_=tx(_doc,"&#160;If besides, the number of Oudlers in the tricks of the two players is the same, then:");
ad(elt1_,txt22_);
Element elt39_=el(_doc,"br");
ad(elt1_,elt39_);
Element elt40_=el(_doc,"ol");
Element elt41_=el(_doc,"li");
Text txt23_=tx(_doc,"If this number is 0:");
ad(elt41_,txt23_);
Element elt42_=el(_doc,"br");
ad(elt41_,elt42_);
Text txt24_=tx(_doc,"&#160;&#160;&#160;Numbers of characters in the tricks of the two players is compared, the number of characters in the tricks of a player must be the lowest as possible for winning.");
ad(elt41_,txt24_);
Element elt43_=el(_doc,"br");
ad(elt41_,elt43_);
Text txt25_=tx(_doc,"&#160;&#160;&#160;If besides, the number of characters in the tricks of the two players is the same, then:");
ad(elt41_,txt25_);
Element elt44_=el(_doc,"br");
ad(elt41_,elt44_);
Text txt26_=tx(_doc,"&#160;&#160;&#160;&#160;Won characters by the two players are compared, by firstly comparing the greatest characters.");
ad(elt41_,txt26_);
Element elt45_=el(_doc,"br");
ad(elt41_,elt45_);
Text txt27_=tx(_doc,"&#160;&#160;&#160;&#160;Comparison is stopped, if there is a difference of strength of card.");
ad(elt41_,txt27_);
Element elt46_=el(_doc,"br");
ad(elt41_,elt46_);
Text txt28_=tx(_doc,"&#160;&#160;&#160;&#160;If the characters have the same strength two by two for the two players,");
ad(elt41_,txt28_);
Element elt47_=el(_doc,"br");
ad(elt41_,elt47_);
Text txt29_=tx(_doc,"&#160;&#160;&#160;&#160;&#160;the last player who has won a trick is before the other player.");
ad(elt41_,txt29_);
Element elt48_=el(_doc,"br");
ad(elt41_,elt48_);
ad(elt40_,elt41_);
Element elt49_=el(_doc,"li");
Text txt30_=tx(_doc,"If this number is 1:");
ad(elt49_,txt30_);
Element elt50_=el(_doc,"br");
ad(elt49_,elt50_);
Text txt31_=tx(_doc,"&#160;&#160;&#160;Sorting on Oudlers is based in the following way from the most winning to the most loosing: Small - Excuse - Trump 21.");
ad(elt49_,txt31_);
Element elt51_=el(_doc,"br");
ad(elt49_,elt51_);
Text txt32_=tx(_doc,"&#160;&#160;&#160;(Winning the Small is better than winning the Excuse,...)");
ad(elt49_,txt32_);
Element elt52_=el(_doc,"br");
ad(elt49_,elt52_);
ad(elt40_,elt49_);
ad(elt1_,elt40_);
Element elt53_=el(_doc,"br");
ad(elt1_,elt53_);
Text txt33_=tx(_doc,"If two players have same difference points but have not won any trick, there is dispute.");
ad(elt1_,txt33_);
Element elt54_=el(_doc,"br");
ad(elt1_,elt54_);
Element elt55_=el(_doc,"br");
ad(elt1_,elt55_);
Element elt56_=el(_doc,"ul");
Element elt57_=el(_doc,"li");
Text txt34_=tx(_doc,"3 players");
ad(elt57_,txt34_);
Element elt58_=el(_doc,"br");
ad(elt57_,elt58_);
Text txt35_=tx(_doc,"&#160;&#160;Rate is worth from the winner to the looser:");
ad(elt57_,txt35_);
Element elt59_=el(_doc,"br");
ad(elt57_,elt59_);
Element elt60_=el(_doc,"ul");
Element elt61_=el(_doc,"li");
Text txt36_=tx(_doc,"1, 0, -1; if there is no dispute.");
ad(elt61_,txt36_);
ad(elt60_,elt61_);
Element elt62_=el(_doc,"li");
Text txt37_=tx(_doc,"1, 1, -2; s''il y a litige.");
ad(elt62_,txt37_);
ad(elt60_,elt62_);
ad(elt57_,elt60_);
ad(elt56_,elt57_);
Element elt63_=el(_doc,"li");
Text txt38_=tx(_doc,"4 players");
ad(elt63_,txt38_);
Element elt64_=el(_doc,"br");
ad(elt63_,elt64_);
Text txt39_=tx(_doc,"&#160;&#160;Rate is worth from the winner to the looser:");
ad(elt63_,txt39_);
Element elt65_=el(_doc,"br");
ad(elt63_,elt65_);
Element elt66_=el(_doc,"ul");
Element elt67_=el(_doc,"li");
Text txt40_=tx(_doc,"2, 1, -1, -2; if there is no dispute.");
ad(elt67_,txt40_);
ad(elt66_,elt67_);
Element elt68_=el(_doc,"li");
Text txt41_=tx(_doc,"2, 2, -1, -3; if there is dispute between two players exactly.");
ad(elt68_,txt41_);
ad(elt66_,elt68_);
Element elt69_=el(_doc,"li");
Text txt42_=tx(_doc,"2, 2, 2, -6; if there is dispute between three players exactly.");
ad(elt69_,txt42_);
ad(elt66_,elt69_);
ad(elt63_,elt66_);
ad(elt56_,elt63_);
Element elt70_=el(_doc,"li");
Text txt43_=tx(_doc,"5 players");
ad(elt70_,txt43_);
Element elt71_=el(_doc,"br");
ad(elt70_,elt71_);
Text txt44_=tx(_doc,"&#160;&#160;Rate is worth from the winner to the looser:");
ad(elt70_,txt44_);
Element elt72_=el(_doc,"br");
ad(elt70_,elt72_);
Element elt73_=el(_doc,"ul");
Element elt74_=el(_doc,"li");
Text txt45_=tx(_doc,"2, 1, 0, -1, -2; if there is no dispute.");
ad(elt74_,txt45_);
ad(elt73_,elt74_);
Element elt75_=el(_doc,"li");
Text txt46_=tx(_doc,"2, 2, 0, -1, -3; if there is dispute between two players exactly.");
ad(elt75_,txt46_);
ad(elt73_,elt75_);
Element elt76_=el(_doc,"li");
Text txt47_=tx(_doc,"2, 2, 2, 0, -6; if there is dispute between three players exactly.");
ad(elt76_,txt47_);
ad(elt73_,elt76_);
Element elt77_=el(_doc,"li");
Text txt48_=tx(_doc,"2, 2, 2, 2, -8; if there is dispute between four players exactly.");
ad(elt77_,txt48_);
ad(elt73_,elt77_);
ad(elt70_,elt73_);
ad(elt56_,elt70_);
Element elt78_=el(_doc,"li");
Text txt49_=tx(_doc,"6 players");
ad(elt78_,txt49_);
Element elt79_=el(_doc,"br");
ad(elt78_,elt79_);
Text txt50_=tx(_doc,"&#160;&#160;Rate is worth from the winner to the looser:");
ad(elt78_,txt50_);
Element elt80_=el(_doc,"br");
ad(elt78_,elt80_);
Element elt81_=el(_doc,"ul");
Element elt82_=el(_doc,"li");
Text txt51_=tx(_doc,"3, 2, 1, -1, -2, -3; if there is no dispute.");
ad(elt82_,txt51_);
ad(elt81_,elt82_);
Element elt83_=el(_doc,"li");
Text txt52_=tx(_doc,"3, 3, 0, -1, -2, -3; if there is dispute between two players exactly.");
ad(elt83_,txt52_);
ad(elt81_,elt83_);
Element elt84_=el(_doc,"li");
Text txt53_=tx(_doc,"2, 2, 2, 0, -2, -4; if there is dispute between three players exactly.");
ad(elt84_,txt53_);
ad(elt81_,elt84_);
Element elt85_=el(_doc,"li");
Text txt54_=tx(_doc,"2, 2, 2, 2, 0, -8; if there is dispute between four players exactly.");
ad(elt85_,txt54_);
ad(elt81_,elt85_);
Element elt86_=el(_doc,"li");
Text txt55_=tx(_doc,"2, 2, 2, 2, 2, -10; if there is dispute between five players exactly.");
ad(elt86_,txt55_);
ad(elt81_,elt86_);
ad(elt78_,elt81_);
ad(elt56_,elt78_);
ad(elt1_,elt56_);
Text txt56_=tx(_doc,"Score of a player = 4 x Rate x (25 + Maximal difference points for players rounded to the greater integer + number of points in the dog rounded to the greater integer).");
ad(elt1_,txt56_);
Element elt89_=el(_doc,"br");
ad(elt1_,elt89_);
Element elt90_=el(_doc,"br");
ad(elt1_,elt90_);
Text txt57_=tx(_doc,"By teams of two players, rates are the following one:");
ad(elt1_,txt57_);
Element elt91_=el(_doc,"br");
ad(elt1_,elt91_);
Element elt92_=el(_doc,"br");
ad(elt1_,elt92_);
Element elt93_=el(_doc,"ul");
Element elt94_=el(_doc,"li");
Text txt58_=tx(_doc,"4 players");
ad(elt94_,txt58_);
Element elt95_=el(_doc,"br");
ad(elt94_,elt95_);
Text txt59_=tx(_doc,"&#160;&#160;Rate is worth from the winner team to the looser team:");
ad(elt94_,txt59_);
Element elt97_=el(_doc,"br");
ad(elt94_,elt97_);
Element elt98_=el(_doc,"ul");
Element elt99_=el(_doc,"li");
Text txt60_=tx(_doc,"1, -1");
ad(elt99_,txt60_);
ad(elt98_,elt99_);
ad(elt94_,elt98_);
ad(elt93_,elt94_);
Element elt100_=el(_doc,"li");
Text txt61_=tx(_doc,"6 players");
ad(elt100_,txt61_);
Element elt101_=el(_doc,"br");
ad(elt100_,elt101_);
Text txt62_=tx(_doc,"&#160;&#160;Rate is worth from the winner team to the looser team:");
ad(elt100_,txt62_);
Element elt103_=el(_doc,"br");
ad(elt100_,elt103_);
Element elt104_=el(_doc,"ul");
Element elt105_=el(_doc,"li");
Text txt63_=tx(_doc,"1, 0, -1; if there is no dispute.");
ad(elt105_,txt63_);
ad(elt104_,elt105_);
Element elt106_=el(_doc,"li");
Text txt64_=tx(_doc,"1, 1, -2; if there is dispute between two teams exactly.");
ad(elt106_,txt64_);
ad(elt104_,elt106_);
ad(elt100_,elt104_);
ad(elt93_,elt100_);
ad(elt1_,elt93_);
ad(elt0_,elt1_);
_doc.appendChild(elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
