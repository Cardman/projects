package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class HelpCards8{
private HelpCards8(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
Element elt1_=el(_doc,"body");
Text txt0_=tx(_doc,"Here is the differences between bids:");
ad(elt1_,txt0_);
Element elt2_=el(_doc,"br");
ad(elt1_,elt2_);
Element elt3_=el(_doc,"br");
ad(elt1_,elt3_);
Element elt4_=el(_doc,"ol");
Element elt5_=el(_doc,"li");
Text txt1_=tx(_doc,"Bidding at classic belote");
ad(elt5_,txt1_);
Element elt6_=el(_doc,"br");
ad(elt5_,elt6_);
Element elt7_=el(_doc,"ol");
Element elt8_=el(_doc,"li");
Text txt2_=tx(_doc,"At the first round, a player can bid one of the following bids:");
ad(elt8_,txt2_);
Element elt9_=el(_doc,"br");
ad(elt8_,elt9_);
Element elt10_=el(_doc,"ol");
Element elt11_=el(_doc,"li");
Text txt3_=tx(_doc,"Suit");
ad(elt11_,txt3_);
Element elt12_=el(_doc,"br");
ad(elt11_,elt12_);
Text txt4_=tx(_doc,"&#160;&#160;&#160;In this case, the trump suit will exist and will be the suit of the \"top\" card.");
ad(elt11_,txt4_);
ad(elt10_,elt11_);
Element elt13_=el(_doc,"li");
Text txt5_=tx(_doc,"No trump");
ad(elt13_,txt5_);
Element elt14_=el(_doc,"br");
ad(elt13_,elt14_);
Text txt6_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Ace-10-King-Queen-Jack-9-8-7.");
ad(elt13_,txt6_);
ad(elt10_,elt13_);
Element elt15_=el(_doc,"li");
Text txt7_=tx(_doc,"All trump");
ad(elt15_,txt7_);
Element elt16_=el(_doc,"br");
ad(elt15_,elt16_);
Text txt8_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Jack-9-Ace-10-King-Queen-8-7.");
ad(elt15_,txt8_);
ad(elt10_,elt15_);
ad(elt8_,elt10_);
ad(elt7_,elt8_);
Element elt17_=el(_doc,"li");
Text txt9_=tx(_doc,"At the second round, a player can bid one of the following bids:");
ad(elt17_,txt9_);
Element elt18_=el(_doc,"br");
ad(elt17_,elt18_);
Element elt19_=el(_doc,"ol");
Element elt20_=el(_doc,"li");
Text txt10_=tx(_doc,"Other suit");
ad(elt20_,txt10_);
Element elt21_=el(_doc,"br");
ad(elt20_,elt21_);
Text txt11_=tx(_doc,"&#160;&#160;&#160;In this case, the trump suit will exist and will be the suit declared by the player.");
ad(elt20_,txt11_);
Element elt22_=el(_doc,"br");
ad(elt20_,elt22_);
Text txt12_=tx(_doc,"&#160;&#160;&#160;In this same case, the player cannot declare the suit of the \"top\" card.");
ad(elt20_,txt12_);
ad(elt19_,elt20_);
Element elt23_=el(_doc,"li");
Text txt13_=tx(_doc,"No trump");
ad(elt23_,txt13_);
Element elt24_=el(_doc,"br");
ad(elt23_,elt24_);
Text txt14_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Ace-10-King-Queen-Jack-9-8-7.");
ad(elt23_,txt14_);
ad(elt19_,elt23_);
Element elt25_=el(_doc,"li");
Text txt15_=tx(_doc,"All trump");
ad(elt25_,txt15_);
Element elt26_=el(_doc,"br");
ad(elt25_,elt26_);
Text txt16_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Jack-9-Ace-10-King-Queen-8-7.");
ad(elt25_,txt16_);
ad(elt19_,elt25_);
ad(elt17_,elt19_);
ad(elt7_,elt17_);
ad(elt5_,elt7_);
ad(elt4_,elt5_);
Element elt27_=el(_doc,"li");
Text txt17_=tx(_doc,"Bidding at coinche");
ad(elt27_,txt17_);
Element elt28_=el(_doc,"br");
ad(elt27_,elt28_);
Element elt29_=el(_doc,"ol");
Element elt30_=el(_doc,"li");
Text txt18_=tx(_doc,"Suit");
ad(elt30_,txt18_);
Element elt31_=el(_doc,"br");
ad(elt30_,elt31_);
Text txt19_=tx(_doc,"&#160;&#160;&#160;In this case, the trump suit will exist and will be the last declared suit.");
ad(elt30_,txt19_);
ad(elt29_,elt30_);
Element elt32_=el(_doc,"li");
Text txt20_=tx(_doc,"No trump");
ad(elt32_,txt20_);
Element elt33_=el(_doc,"br");
ad(elt32_,elt33_);
Text txt21_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Ace-10-King-Queen-Jack-9-8-7.");
ad(elt32_,txt21_);
ad(elt29_,elt32_);
Element elt34_=el(_doc,"li");
Text txt22_=tx(_doc,"All trump");
ad(elt34_,txt22_);
Element elt35_=el(_doc,"br");
ad(elt34_,elt35_);
Text txt23_=tx(_doc,"&#160;&#160;&#160;In this case, the order of cards, for all suits, is Jack-9-Ace-10-King-Queen-8-7.");
ad(elt34_,txt23_);
ad(elt29_,elt34_);
Element elt36_=el(_doc,"li");
Text txt24_=tx(_doc,"Bids No trump and All trump are declared like suits.");
ad(elt36_,txt24_);
ad(elt29_,elt36_);
ad(elt27_,elt29_);
Element elt37_=el(_doc,"br");
ad(elt27_,elt37_);
Text txt25_=tx(_doc,"&#160;Belote rebelote is not allowed for bids \"no trump\" and \"all trump\".");
ad(elt27_,txt25_);
ad(elt4_,elt27_);
Element elt38_=el(_doc,"li");
Text txt26_=tx(_doc,"Play cards");
ad(elt38_,txt26_);
Element elt39_=el(_doc,"br");
ad(elt38_,elt39_);
Element elt40_=el(_doc,"ol");
Element elt41_=el(_doc,"li");
Text txt27_=tx(_doc,"If the declared bid is \"no trump\":");
ad(elt41_,txt27_);
Element elt42_=el(_doc,"br");
ad(elt41_,elt42_);
Element elt43_=el(_doc,"br");
ad(elt41_,elt43_);
Element elt44_=el(_doc,"ol");
Element elt45_=el(_doc,"li");
Text txt28_=tx(_doc,"If the player owns cards of the dominant suit,");
ad(elt45_,txt28_);
Element elt46_=el(_doc,"br");
ad(elt45_,elt46_);
Text txt29_=tx(_doc,"then the player must follow a card of the the dominant suit without playing a greater card.");
ad(elt45_,txt29_);
Element elt47_=el(_doc,"br");
ad(elt45_,elt47_);
ad(elt44_,elt45_);
Element elt48_=el(_doc,"li");
Text txt30_=tx(_doc,"Else the player can play any card.");
ad(elt48_,txt30_);
Element elt49_=el(_doc,"br");
ad(elt48_,elt49_);
ad(elt44_,elt48_);
ad(elt41_,elt44_);
ad(elt40_,elt41_);
Element elt50_=el(_doc,"li");
Text txt31_=tx(_doc,"If the declared bid is \"all trump\":");
ad(elt50_,txt31_);
Element elt51_=el(_doc,"br");
ad(elt50_,elt51_);
Element elt52_=el(_doc,"br");
ad(elt50_,elt52_);
Element elt53_=el(_doc,"ol");
Element elt54_=el(_doc,"li");
Text txt32_=tx(_doc,"If the player does not own any card of the dominant suit,");
ad(elt54_,txt32_);
Element elt55_=el(_doc,"br");
ad(elt54_,elt55_);
Text txt33_=tx(_doc,"then the player can play any card.");
ad(elt54_,txt33_);
ad(elt53_,elt54_);
Element elt56_=el(_doc,"li");
Text txt34_=tx(_doc,"Else, if the player can play a greater trump,");
ad(elt56_,txt34_);
Element elt57_=el(_doc,"br");
ad(elt56_,elt57_);
Text txt35_=tx(_doc,"then the player must play a greater trump.");
ad(elt56_,txt35_);
ad(elt53_,elt56_);
Element elt58_=el(_doc,"li");
Text txt36_=tx(_doc,"Else, the player follows a trump card.");
ad(elt58_,txt36_);
ad(elt53_,elt58_);
ad(elt50_,elt53_);
ad(elt40_,elt50_);
ad(elt38_,elt40_);
ad(elt4_,elt38_);
Element elt59_=el(_doc,"li");
Text txt37_=tx(_doc,"End of deal");
ad(elt59_,txt37_);
Element elt60_=el(_doc,"br");
ad(elt59_,elt60_);
Text txt38_=tx(_doc,"&#160;&#160;Value of cards:");
ad(elt59_,txt38_);
Element elt61_=el(_doc,"br");
ad(elt59_,elt61_);
Element elt62_=el(_doc,"ol");
Element elt63_=el(_doc,"li");
Text txt39_=tx(_doc,"If the declared bid is \"no trump\":");
ad(elt63_,txt39_);
Element elt64_=el(_doc,"br");
ad(elt63_,elt64_);
Element elt65_=el(_doc,"ul");
Element elt66_=el(_doc,"li");
Text txt40_=tx(_doc,"Ace: 19 points");
ad(elt66_,txt40_);
ad(elt65_,elt66_);
Element elt67_=el(_doc,"li");
Text txt41_=tx(_doc,"10: 10 points");
ad(elt67_,txt41_);
ad(elt65_,elt67_);
Element elt68_=el(_doc,"li");
Text txt42_=tx(_doc,"King: 4 points");
ad(elt68_,txt42_);
ad(elt65_,elt68_);
Element elt69_=el(_doc,"li");
Text txt43_=tx(_doc,"Queen: 3 points");
ad(elt69_,txt43_);
ad(elt65_,elt69_);
Element elt70_=el(_doc,"li");
Text txt44_=tx(_doc,"Jack: 2 points");
ad(elt70_,txt44_);
ad(elt65_,elt70_);
Element elt71_=el(_doc,"li");
Text txt45_=tx(_doc,"9, 8 et 7: 0 point");
ad(elt71_,txt45_);
ad(elt65_,elt71_);
ad(elt63_,elt65_);
ad(elt62_,elt63_);
Element elt72_=el(_doc,"li");
Text txt46_=tx(_doc,"If the declared bid is \"all trump\":");
ad(elt72_,txt46_);
Element elt73_=el(_doc,"br");
ad(elt72_,elt73_);
Element elt74_=el(_doc,"ul");
Element elt75_=el(_doc,"li");
Text txt47_=tx(_doc,"Jack: 14 points");
ad(elt75_,txt47_);
ad(elt74_,elt75_);
Element elt76_=el(_doc,"li");
Text txt48_=tx(_doc,"9: 9 points");
ad(elt76_,txt48_);
ad(elt74_,elt76_);
Element elt77_=el(_doc,"li");
Text txt49_=tx(_doc,"Ace: 6 points");
ad(elt77_,txt49_);
ad(elt74_,elt77_);
Element elt78_=el(_doc,"li");
Text txt50_=tx(_doc,"10: 4 points");
ad(elt78_,txt50_);
ad(elt74_,elt78_);
Element elt79_=el(_doc,"li");
Text txt51_=tx(_doc,"King: 3 points");
ad(elt79_,txt51_);
ad(elt74_,elt79_);
Element elt80_=el(_doc,"li");
Text txt52_=tx(_doc,"Queen: 2 points");
ad(elt80_,txt52_);
ad(elt74_,elt80_);
Element elt81_=el(_doc,"li");
Text txt53_=tx(_doc,"8 et 7: 0 point");
ad(elt81_,txt53_);
ad(elt74_,elt81_);
ad(elt72_,elt74_);
ad(elt62_,elt72_);
ad(elt59_,elt62_);
ad(elt4_,elt59_);
ad(elt1_,elt4_);
Element elt82_=el(_doc,"br");
ad(elt1_,elt82_);
Text txt54_=tx(_doc,"&#160;The calculation of scores while a bid is the same as the classic belote.");
ad(elt1_,txt54_);
Element elt83_=el(_doc,"br");
ad(elt1_,elt83_);
ad(elt0_,elt1_);
_doc.appendChild(elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
