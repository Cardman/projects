package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageBeloteResults extends PageCardsCommon{
private static final String C_1_1_0="results";
private static final String C_1_1_1="javahtml";
private static final String C_1_1_2="msg,results";
private static final String C_1_1_3="resources_cards/css/belote.css";
private static final String C_1_1_4="stylesheet";
private static final String C_1_1_5="text/css";
private static final String C_1_1_6="playGame()";
private static final String C_1_1_7="msg,calc_title";
private static final String C_1_1_8="msg,need";
private static final String C_1_1_9="{pointsDefenseTemporaire}";
private static final String C_1_1_10="msg,won_trick";
private static final String C_1_1_11="{pointsAttaqueTemporaire}";
private static final String C_1_1_12="msg,taker_title";
private static final String C_1_1_13="msg,taker";
private static final String C_1_1_14="{takerNickname}";
private static final String C_1_1_15="msg,taker_team";
private static final String C_1_1_16="calledPlayersList.isEmpty()";
private static final String C_1_1_17="msg,none";
private static final String C_1_1_18="!calledPlayersList.isEmpty()";
private static final String C_1_1_19="p";
private static final String C_1_1_20="calledPlayersList";
private static final String C_1_1_21="java.lang.String";
private static final String C_1_1_22="{p}";
private static final String C_1_1_23="msg,bid";
private static final String C_1_1_24="{bidString}";
private static final String C_1_1_25="msg,results_title";
private static final String C_1_1_26="msg,without_decl_att";
private static final String C_1_1_27="{pointsAttaqueSansPrime}";
private static final String C_1_1_28="msg,without_decl_def";
private static final String C_1_1_29="{pointsDefenseSansPrime}";
private static final String C_1_1_30="msg,with_decl_att";
private static final String C_1_1_31="{pointsAttaqueTemporaire}";
private static final String C_1_1_32="msg,with_decl_def";
private static final String C_1_1_33="{pointsDefenseTemporaire}";
private static final String C_1_1_34="msg,fin_att";
private static final String C_1_1_35="{pointsAttaqueDefinitif}";
private static final String C_1_1_36="msg,fin_def";
private static final String C_1_1_37="{pointsDefenseDefinitif}";
private static final String C_1_1_38="win()";
private static final String C_1_1_39="msg,win";
private static final String C_1_1_40="equality()";
private static final String C_1_1_41="msg,equality";
private static final String C_1_1_42="loose()";
private static final String C_1_1_43="msg,loose";
private static final String C_1_1_44="successfulBid()";
private static final String C_1_1_45="msg,successful";
private static final String C_1_1_46="bidString";
private static final String C_1_1_47="absoluteDiff()";
private static final String C_1_1_48="midBid()";
private static final String C_1_1_49="msg,mid";
private static final String C_1_1_50="bidString";
private static final String C_1_1_51="failedBid()";
private static final String C_1_1_52="msg,failed";
private static final String C_1_1_53="bidString";
private static final String C_1_1_54="absoluteDiff()";
private static final String C_1_1_55="slam()";
private static final String C_1_1_56="msg,slam";
private static final String C_1_1_57="!slam()";
private static final String C_1_1_58="msg,noSlam";
private static final String C_1_1_59="1";
private static final String C_1_1_60="msg,scores";
private static final String C_1_1_61="p";
private static final String C_1_1_62="getNicknames()";
private static final String C_1_1_63="java.lang.String";
private static final String C_1_1_64="{p}";
private static final String C_1_1_65="l";
private static final String C_1_1_66="linesDeal";
private static final String C_1_1_67="cards.belote.beans.LineDeal";
private static final String C_1_1_68="{l.number}";
private static final String C_1_1_69="s";
private static final String C_1_1_70="l.scores";
private static final String C_1_1_71="java.lang.Long";
private static final String C_1_1_72="{s}";
private PageBeloteResults(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,HTML);
CustList<Attr> attrs0_=al(2);
attrs0_.add(at(C_BEAN,C_1_1_0));
attrs0_.add(at(XMLNS_C,C_1_1_1));
at(elt0_,attrs0_);
Element elt1_=el(_doc,HEAD);
Element elt2_=el(_doc,TITLE);
Element elt3_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_1_1_2));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc,LINK);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(HREF,C_1_1_3));
attrs2_.add(at(REL,C_1_1_4));
attrs2_.add(at(TYPE,C_1_1_5));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc,BODY);
build0(elt5_,_doc);
build1(elt5_,_doc);
build2(elt5_,_doc);
build3(elt5_,_doc);
ad(elt0_,elt5_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,C_IF);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(CONDITION,C_1_1_6));
at(elt0_,attrs0_);
Element elt1_=el(_doc,H1);
Element elt2_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_1_1_7));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,UL);
Element elt4_=el(_doc,LI);
Element elt5_=el(_doc,C_MESSAGE);
CustList<Attr> attrs2_=al(1);
attrs2_.add(at(VALUE,C_1_1_8));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Text txt0_=tx(_doc,C_1_1_9);
ad(elt4_,txt0_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,LI);
Element elt7_=el(_doc,C_MESSAGE);
CustList<Attr> attrs3_=al(1);
attrs3_.add(at(VALUE,C_1_1_10));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
Text txt1_=tx(_doc,C_1_1_11);
ad(elt6_,txt1_);
ad(elt3_,elt6_);
ad(elt0_,elt3_);
Element elt8_=el(_doc,H1);
Element elt9_=el(_doc,C_MESSAGE);
CustList<Attr> attrs4_=al(1);
attrs4_.add(at(VALUE,C_1_1_12));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
ad(elt0_,elt8_);
Element elt10_=el(_doc,UL);
Element elt11_=el(_doc,LI);
Element elt12_=el(_doc,C_MESSAGE);
CustList<Attr> attrs5_=al(1);
attrs5_.add(at(VALUE,C_1_1_13));
at(elt12_,attrs5_);
ad(elt11_,elt12_);
Text txt2_=tx(_doc,C_1_1_14);
ad(elt11_,txt2_);
ad(elt10_,elt11_);
Element elt13_=el(_doc,LI);
Element elt14_=el(_doc,C_MESSAGE);
CustList<Attr> attrs6_=al(1);
attrs6_.add(at(VALUE,C_1_1_15));
at(elt14_,attrs6_);
ad(elt13_,elt14_);
Element elt15_=el(_doc,C_IF);
CustList<Attr> attrs7_=al(1);
attrs7_.add(at(CONDITION,C_1_1_16));
at(elt15_,attrs7_);
Element elt16_=el(_doc,C_MESSAGE);
CustList<Attr> attrs8_=al(1);
attrs8_.add(at(VALUE,C_1_1_17));
at(elt16_,attrs8_);
ad(elt15_,elt16_);
ad(elt13_,elt15_);
Element elt17_=el(_doc,C_IF);
CustList<Attr> attrs9_=al(1);
attrs9_.add(at(CONDITION,C_1_1_18));
at(elt17_,attrs9_);
Element elt18_=el(_doc,UL);
Element elt19_=el(_doc,C_FOR);
CustList<Attr> attrs10_=al(3);
attrs10_.add(at(VAR,C_1_1_19));
attrs10_.add(at(LIST,C_1_1_20));
attrs10_.add(at(CLASSNAME,C_1_1_21));
at(elt19_,attrs10_);
Element elt20_=el(_doc,LI);
Text txt3_=tx(_doc,C_1_1_22);
ad(elt20_,txt3_);
ad(elt19_,elt20_);
ad(elt18_,elt19_);
ad(elt17_,elt18_);
ad(elt13_,elt17_);
ad(elt10_,elt13_);
Element elt21_=el(_doc,LI);
Element elt22_=el(_doc,C_MESSAGE);
CustList<Attr> attrs11_=al(1);
attrs11_.add(at(VALUE,C_1_1_23));
at(elt22_,attrs11_);
ad(elt21_,elt22_);
Text txt4_=tx(_doc,C_1_1_24);
ad(elt21_,txt4_);
ad(elt10_,elt21_);
ad(elt0_,elt10_);
Element elt23_=el(_doc,H1);
Element elt24_=el(_doc,C_MESSAGE);
CustList<Attr> attrs12_=al(1);
attrs12_.add(at(VALUE,C_1_1_25));
at(elt24_,attrs12_);
ad(elt23_,elt24_);
ad(elt0_,elt23_);
Element elt25_=el(_doc,P);
Element elt26_=el(_doc,C_MESSAGE);
CustList<Attr> attrs13_=al(1);
attrs13_.add(at(VALUE,C_1_1_26));
at(elt26_,attrs13_);
ad(elt25_,elt26_);
Text txt5_=tx(_doc,C_1_1_27);
ad(elt25_,txt5_);
ad(elt0_,elt25_);
Element elt27_=el(_doc,BR);
ad(elt0_,elt27_);
Element elt28_=el(_doc,P);
Element elt29_=el(_doc,C_MESSAGE);
CustList<Attr> attrs14_=al(1);
attrs14_.add(at(VALUE,C_1_1_28));
at(elt29_,attrs14_);
ad(elt28_,elt29_);
Text txt6_=tx(_doc,C_1_1_29);
ad(elt28_,txt6_);
ad(elt0_,elt28_);
Element elt30_=el(_doc,BR);
ad(elt0_,elt30_);
Element elt31_=el(_doc,P);
Element elt32_=el(_doc,C_MESSAGE);
CustList<Attr> attrs15_=al(1);
attrs15_.add(at(VALUE,C_1_1_30));
at(elt32_,attrs15_);
ad(elt31_,elt32_);
Text txt7_=tx(_doc,C_1_1_31);
ad(elt31_,txt7_);
ad(elt0_,elt31_);
Element elt33_=el(_doc,BR);
ad(elt0_,elt33_);
Element elt34_=el(_doc,P);
Element elt35_=el(_doc,C_MESSAGE);
CustList<Attr> attrs16_=al(1);
attrs16_.add(at(VALUE,C_1_1_32));
at(elt35_,attrs16_);
ad(elt34_,elt35_);
Text txt8_=tx(_doc,C_1_1_33);
ad(elt34_,txt8_);
ad(elt0_,elt34_);
Element elt36_=el(_doc,BR);
ad(elt0_,elt36_);
Element elt37_=el(_doc,P);
Element elt38_=el(_doc,C_MESSAGE);
CustList<Attr> attrs17_=al(1);
attrs17_.add(at(VALUE,C_1_1_34));
at(elt38_,attrs17_);
ad(elt37_,elt38_);
Text txt9_=tx(_doc,C_1_1_35);
ad(elt37_,txt9_);
ad(elt0_,elt37_);
Element elt39_=el(_doc,BR);
ad(elt0_,elt39_);
Element elt40_=el(_doc,P);
Element elt41_=el(_doc,C_MESSAGE);
CustList<Attr> attrs18_=al(1);
attrs18_.add(at(VALUE,C_1_1_36));
at(elt41_,attrs18_);
ad(elt40_,elt41_);
Text txt10_=tx(_doc,C_1_1_37);
ad(elt40_,txt10_);
ad(elt0_,elt40_);
Element elt42_=el(_doc,BR);
ad(elt0_,elt42_);
Element elt43_=el(_doc,P);
Element elt44_=el(_doc,C_IF);
CustList<Attr> attrs19_=al(1);
attrs19_.add(at(CONDITION,C_1_1_38));
at(elt44_,attrs19_);
Element elt45_=el(_doc,C_MESSAGE);
CustList<Attr> attrs20_=al(1);
attrs20_.add(at(VALUE,C_1_1_39));
at(elt45_,attrs20_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
Element elt46_=el(_doc,C_IF);
CustList<Attr> attrs21_=al(1);
attrs21_.add(at(CONDITION,C_1_1_40));
at(elt46_,attrs21_);
Element elt47_=el(_doc,C_MESSAGE);
CustList<Attr> attrs22_=al(1);
attrs22_.add(at(VALUE,C_1_1_41));
at(elt47_,attrs22_);
ad(elt46_,elt47_);
ad(elt43_,elt46_);
Element elt48_=el(_doc,C_IF);
CustList<Attr> attrs23_=al(1);
attrs23_.add(at(CONDITION,C_1_1_42));
at(elt48_,attrs23_);
Element elt49_=el(_doc,C_MESSAGE);
CustList<Attr> attrs24_=al(1);
attrs24_.add(at(VALUE,C_1_1_43));
at(elt49_,attrs24_);
ad(elt48_,elt49_);
ad(elt43_,elt48_);
ad(elt0_,elt43_);
Element elt50_=el(_doc,BR);
ad(elt0_,elt50_);
Element elt51_=el(_doc,P);
Element elt52_=el(_doc,C_IF);
CustList<Attr> attrs25_=al(1);
attrs25_.add(at(CONDITION,C_1_1_44));
at(elt52_,attrs25_);
Element elt53_=el(_doc,C_MESSAGE);
CustList<Attr> attrs26_=al(1);
attrs26_.add(at(VALUE,C_1_1_45));
at(elt53_,attrs26_);
Element elt54_=el(_doc,PARAM);
CustList<Attr> attrs27_=al(1);
attrs27_.add(at(VALUE,C_1_1_46));
at(elt54_,attrs27_);
ad(elt53_,elt54_);
Element elt55_=el(_doc,PARAM);
CustList<Attr> attrs28_=al(1);
attrs28_.add(at(VALUE,C_1_1_47));
at(elt55_,attrs28_);
ad(elt53_,elt55_);
ad(elt52_,elt53_);
ad(elt51_,elt52_);
Element elt56_=el(_doc,C_IF);
CustList<Attr> attrs29_=al(1);
attrs29_.add(at(CONDITION,C_1_1_48));
at(elt56_,attrs29_);
Element elt57_=el(_doc,C_MESSAGE);
CustList<Attr> attrs30_=al(1);
attrs30_.add(at(VALUE,C_1_1_49));
at(elt57_,attrs30_);
Element elt58_=el(_doc,PARAM);
CustList<Attr> attrs31_=al(1);
attrs31_.add(at(VALUE,C_1_1_50));
at(elt58_,attrs31_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
ad(elt51_,elt56_);
Element elt59_=el(_doc,C_IF);
CustList<Attr> attrs32_=al(1);
attrs32_.add(at(CONDITION,C_1_1_51));
at(elt59_,attrs32_);
Element elt60_=el(_doc,C_MESSAGE);
CustList<Attr> attrs33_=al(1);
attrs33_.add(at(VALUE,C_1_1_52));
at(elt60_,attrs33_);
Element elt61_=el(_doc,PARAM);
CustList<Attr> attrs34_=al(1);
attrs34_.add(at(VALUE,C_1_1_53));
at(elt61_,attrs34_);
ad(elt60_,elt61_);
Element elt62_=el(_doc,PARAM);
CustList<Attr> attrs35_=al(1);
attrs35_.add(at(VALUE,C_1_1_54));
at(elt62_,attrs35_);
ad(elt60_,elt62_);
ad(elt59_,elt60_);
ad(elt51_,elt59_);
ad(elt0_,elt51_);
Element elt63_=el(_doc,BR);
ad(elt0_,elt63_);
Element elt64_=el(_doc,P);
Element elt65_=el(_doc,C_IF);
CustList<Attr> attrs36_=al(1);
attrs36_.add(at(CONDITION,C_1_1_55));
at(elt65_,attrs36_);
Element elt66_=el(_doc,C_MESSAGE);
CustList<Attr> attrs37_=al(1);
attrs37_.add(at(VALUE,C_1_1_56));
at(elt66_,attrs37_);
ad(elt65_,elt66_);
ad(elt64_,elt65_);
Element elt67_=el(_doc,C_IF);
CustList<Attr> attrs38_=al(1);
attrs38_.add(at(CONDITION,C_1_1_57));
at(elt67_,attrs38_);
Element elt68_=el(_doc,C_MESSAGE);
CustList<Attr> attrs39_=al(1);
attrs39_.add(at(VALUE,C_1_1_58));
at(elt68_,attrs39_);
ad(elt67_,elt68_);
ad(elt64_,elt67_);
ad(elt0_,elt64_);
Element elt69_=el(_doc,BR);
ad(elt0_,elt69_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,BR);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,TABLE);
CustList<Attr> attrs0_=al(1);
attrs0_.add(at(BORDER,C_1_1_59));
at(elt0_,attrs0_);
Element elt1_=el(_doc,CAPTION);
Element elt2_=el(_doc,C_MESSAGE);
CustList<Attr> attrs1_=al(1);
attrs1_.add(at(VALUE,C_1_1_60));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,THEAD);
Element elt4_=el(_doc,TR);
Element elt5_=el(_doc,TD);
ad(elt4_,elt5_);
Element elt6_=el(_doc,C_FOR);
CustList<Attr> attrs2_=al(3);
attrs2_.add(at(VAR,C_1_1_61));
attrs2_.add(at(LIST,C_1_1_62));
attrs2_.add(at(CLASSNAME,C_1_1_63));
at(elt6_,attrs2_);
Element elt7_=el(_doc,TD);
Text txt0_=tx(_doc,C_1_1_64);
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt8_=el(_doc,TBODY);
Element elt9_=el(_doc,C_FOR);
CustList<Attr> attrs3_=al(3);
attrs3_.add(at(VAR,C_1_1_65));
attrs3_.add(at(LIST,C_1_1_66));
attrs3_.add(at(CLASSNAME,C_1_1_67));
at(elt9_,attrs3_);
Element elt10_=el(_doc,TR);
Element elt11_=el(_doc,TD);
Text txt1_=tx(_doc,C_1_1_68);
ad(elt11_,txt1_);
ad(elt10_,elt11_);
Element elt12_=el(_doc,C_FOR);
CustList<Attr> attrs4_=al(3);
attrs4_.add(at(VAR,C_1_1_69));
attrs4_.add(at(LIST,C_1_1_70));
attrs4_.add(at(CLASSNAME,C_1_1_71));
at(elt12_,attrs4_);
Element elt13_=el(_doc,TD);
Text txt2_=tx(_doc,C_1_1_72);
ad(elt13_,txt2_);
ad(elt12_,elt13_);
ad(elt10_,elt12_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
ad(elt0_,elt8_);
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,BR);
ad(_body,elt0_);
}
}
