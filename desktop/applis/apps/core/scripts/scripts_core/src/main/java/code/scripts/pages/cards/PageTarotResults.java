package code.scripts.pages.cards;
import code.sml.*;
import code.util.*;
import code.util.ints.*;
final class PageTarotResults{
private PageTarotResults(){}
static Document build(){
FullDocument doc_ = DocumentBuilder.newXmlDocument(4);
build(doc_);
return doc_;
}
static void build(Document _doc){
Element elt0_=el(_doc,"html");
CustList<Attr> attrs0_=al(2);
attrs0_.add(at("c:bean","results"));
attrs0_.add(at("xmlns:c","javahtml"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"head");
Element elt2_=el(_doc,"title");
Element elt3_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg,results"));
at(elt3_,attrs1_);
ad(elt2_,elt3_);
ad(elt1_,elt2_);
Element elt4_=el(_doc,"link");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("href","resources_cards/css/tarot.css"));
attrs2_.add(at("rel","stylesheet"));
attrs2_.add(at("type","text/css"));
at(elt4_,attrs2_);
ad(elt1_,elt4_);
ad(elt0_,elt1_);
Element elt5_=el(_doc,"body");
build0(elt5_,_doc);
build1(elt5_,_doc);
build2(elt5_,_doc);
build3(elt5_,_doc);
build4(elt5_,_doc);
ad(elt0_,elt5_);
_doc.appendChild(elt0_);
}
static void build0(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","playClassicGame()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"h1");
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg,classic_points"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"ul");
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg,classic_oulders"));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Text txt0_=tx(_doc,"{numberOudlersTaker}");
ad(elt4_,txt0_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,"li");
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg,classic_need"));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
Text txt1_=tx(_doc,"{needlyScoresTaker}");
ad(elt6_,txt1_);
ad(elt3_,elt6_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg,classic_won"));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
Text txt2_=tx(_doc,"{scoreTaker}");
ad(elt8_,txt2_);
ad(elt3_,elt8_);
ad(elt0_,elt3_);
Element elt10_=el(_doc,"h1");
Element elt11_=el(_doc,"c:message");
CustList<Attr> attrs5_=al(1);
attrs5_.add(at("value","msg,classic_att"));
at(elt11_,attrs5_);
ad(elt10_,elt11_);
ad(elt0_,elt10_);
Element elt12_=el(_doc,"ul");
Element elt13_=el(_doc,"li");
Element elt14_=el(_doc,"c:message");
CustList<Attr> attrs6_=al(1);
attrs6_.add(at("value","msg,classic_taker"));
at(elt14_,attrs6_);
ad(elt13_,elt14_);
Text txt3_=tx(_doc,"{taker}");
ad(elt13_,txt3_);
ad(elt12_,elt13_);
Element elt15_=el(_doc,"li");
Element elt16_=el(_doc,"c:message");
CustList<Attr> attrs7_=al(1);
attrs7_.add(at("value","msg,classic_parts"));
at(elt16_,attrs7_);
ad(elt15_,elt16_);
Element elt17_=el(_doc,"c:if");
CustList<Attr> attrs8_=al(1);
attrs8_.add(at("condition","calledPlayers.isEmpty()"));
at(elt17_,attrs8_);
Element elt18_=el(_doc,"c:message");
CustList<Attr> attrs9_=al(1);
attrs9_.add(at("value","msg,classic_none_part"));
at(elt18_,attrs9_);
ad(elt17_,elt18_);
ad(elt15_,elt17_);
Element elt19_=el(_doc,"c:if");
CustList<Attr> attrs10_=al(1);
attrs10_.add(at("condition","!calledPlayers.isEmpty()"));
at(elt19_,attrs10_);
Element elt20_=el(_doc,"ul");
Element elt21_=el(_doc,"c:for");
CustList<Attr> attrs11_=al(3);
attrs11_.add(at("var","p"));
attrs11_.add(at("list","calledPlayers"));
attrs11_.add(at("className","java.lang.String"));
at(elt21_,attrs11_);
Element elt22_=el(_doc,"li");
Text txt4_=tx(_doc,"{p}");
ad(elt22_,txt4_);
ad(elt21_,elt22_);
ad(elt20_,elt21_);
ad(elt19_,elt20_);
ad(elt15_,elt19_);
ad(elt12_,elt15_);
Element elt23_=el(_doc,"li");
Element elt24_=el(_doc,"c:message");
CustList<Attr> attrs12_=al(1);
attrs12_.add(at("value","msg,classic_called"));
at(elt24_,attrs12_);
ad(elt23_,elt24_);
Element elt25_=el(_doc,"c:if");
CustList<Attr> attrs13_=al(1);
attrs13_.add(at("condition","calledCardsList.isEmpty()"));
at(elt25_,attrs13_);
Element elt26_=el(_doc,"c:message");
CustList<Attr> attrs14_=al(1);
attrs14_.add(at("value","msg,classic_none_called"));
at(elt26_,attrs14_);
ad(elt25_,elt26_);
ad(elt23_,elt25_);
Element elt27_=el(_doc,"c:if");
CustList<Attr> attrs15_=al(1);
attrs15_.add(at("condition","!calledCardsList.isEmpty()"));
at(elt27_,attrs15_);
Element elt28_=el(_doc,"ul");
Element elt29_=el(_doc,"c:for");
CustList<Attr> attrs16_=al(3);
attrs16_.add(at("var","c"));
attrs16_.add(at("list","calledCardsList"));
attrs16_.add(at("className","java.lang.String"));
at(elt29_,attrs16_);
Element elt30_=el(_doc,"li");
Text txt5_=tx(_doc,"{c}");
ad(elt30_,txt5_);
ad(elt29_,elt30_);
ad(elt28_,elt29_);
ad(elt27_,elt28_);
ad(elt23_,elt27_);
ad(elt12_,elt23_);
Element elt31_=el(_doc,"li");
Element elt32_=el(_doc,"c:message");
CustList<Attr> attrs17_=al(1);
attrs17_.add(at("value","msg,classic_bid_end"));
at(elt32_,attrs17_);
ad(elt31_,elt32_);
Text txt6_=tx(_doc,"{bidString()}");
ad(elt31_,txt6_);
ad(elt12_,elt31_);
ad(elt0_,elt12_);
Element elt33_=el(_doc,"h1");
Element elt34_=el(_doc,"c:message");
CustList<Attr> attrs18_=al(1);
attrs18_.add(at("value","msg,classic_res"));
at(elt34_,attrs18_);
ad(elt33_,elt34_);
ad(elt0_,elt33_);
Element elt35_=el(_doc,"p");
Element elt36_=el(_doc,"c:if");
CustList<Attr> attrs19_=al(1);
attrs19_.add(at("condition","win()"));
at(elt36_,attrs19_);
Element elt37_=el(_doc,"c:message");
CustList<Attr> attrs20_=al(1);
attrs20_.add(at("value","msg,win"));
at(elt37_,attrs20_);
ad(elt36_,elt37_);
ad(elt35_,elt36_);
Element elt38_=el(_doc,"c:if");
CustList<Attr> attrs21_=al(1);
attrs21_.add(at("condition","equality()"));
at(elt38_,attrs21_);
Element elt39_=el(_doc,"c:message");
CustList<Attr> attrs22_=al(1);
attrs22_.add(at("value","msg,equality"));
at(elt39_,attrs22_);
ad(elt38_,elt39_);
ad(elt35_,elt38_);
Element elt40_=el(_doc,"c:if");
CustList<Attr> attrs23_=al(1);
attrs23_.add(at("condition","loose()"));
at(elt40_,attrs23_);
Element elt41_=el(_doc,"c:message");
CustList<Attr> attrs24_=al(1);
attrs24_.add(at("value","msg,loose"));
at(elt41_,attrs24_);
ad(elt40_,elt41_);
ad(elt35_,elt40_);
ad(elt0_,elt35_);
Element elt42_=el(_doc,"br");
ad(elt0_,elt42_);
Element elt43_=el(_doc,"p");
Element elt44_=el(_doc,"c:if");
CustList<Attr> attrs25_=al(1);
attrs25_.add(at("condition","successfulBid()"));
at(elt44_,attrs25_);
Element elt45_=el(_doc,"c:message");
CustList<Attr> attrs26_=al(1);
attrs26_.add(at("value","msg,successful"));
at(elt45_,attrs26_);
Element elt46_=el(_doc,"param");
CustList<Attr> attrs27_=al(1);
attrs27_.add(at("value","bidString()"));
at(elt46_,attrs27_);
ad(elt45_,elt46_);
Element elt47_=el(_doc,"param");
CustList<Attr> attrs28_=al(1);
attrs28_.add(at("value","absoluteDiff()"));
at(elt47_,attrs28_);
ad(elt45_,elt47_);
ad(elt44_,elt45_);
ad(elt43_,elt44_);
Element elt48_=el(_doc,"c:if");
CustList<Attr> attrs29_=al(1);
attrs29_.add(at("condition","midBid()"));
at(elt48_,attrs29_);
Element elt49_=el(_doc,"c:message");
CustList<Attr> attrs30_=al(1);
attrs30_.add(at("value","msg,mid"));
at(elt49_,attrs30_);
Element elt50_=el(_doc,"param");
CustList<Attr> attrs31_=al(1);
attrs31_.add(at("value","bidString()"));
at(elt50_,attrs31_);
ad(elt49_,elt50_);
ad(elt48_,elt49_);
ad(elt43_,elt48_);
Element elt51_=el(_doc,"c:if");
CustList<Attr> attrs32_=al(1);
attrs32_.add(at("condition","failedBid()"));
at(elt51_,attrs32_);
Element elt52_=el(_doc,"c:message");
CustList<Attr> attrs33_=al(1);
attrs33_.add(at("value","msg,failed"));
at(elt52_,attrs33_);
Element elt53_=el(_doc,"param");
CustList<Attr> attrs34_=al(1);
attrs34_.add(at("value","bidString()"));
at(elt53_,attrs34_);
ad(elt52_,elt53_);
Element elt54_=el(_doc,"param");
CustList<Attr> attrs35_=al(1);
attrs35_.add(at("value","absoluteDiff()"));
at(elt54_,attrs35_);
ad(elt52_,elt54_);
ad(elt51_,elt52_);
ad(elt43_,elt51_);
ad(elt0_,elt43_);
Element elt55_=el(_doc,"br");
ad(elt0_,elt55_);
Element elt56_=el(_doc,"p");
Element elt57_=el(_doc,"c:if");
CustList<Attr> attrs36_=al(1);
attrs36_.add(at("condition","successfulDeclaredSlamAttack()"));
at(elt57_,attrs36_);
Element elt58_=el(_doc,"c:message");
CustList<Attr> attrs37_=al(1);
attrs37_.add(at("value","msg,successfulDeclaredSlam"));
at(elt58_,attrs37_);
ad(elt57_,elt58_);
ad(elt56_,elt57_);
Element elt59_=el(_doc,"c:if");
CustList<Attr> attrs38_=al(1);
attrs38_.add(at("condition","successfulNoDeclaredSlamAttack()"));
at(elt59_,attrs38_);
Element elt60_=el(_doc,"c:message");
CustList<Attr> attrs39_=al(1);
attrs39_.add(at("value","msg,successfulNoDeclaredSlam"));
at(elt60_,attrs39_);
ad(elt59_,elt60_);
ad(elt56_,elt59_);
Element elt61_=el(_doc,"c:if");
CustList<Attr> attrs40_=al(1);
attrs40_.add(at("condition","failedSlamAttack()"));
at(elt61_,attrs40_);
Element elt62_=el(_doc,"c:message");
CustList<Attr> attrs41_=al(1);
attrs41_.add(at("value","msg,failedDeclaredSlam"));
at(elt62_,attrs41_);
ad(elt61_,elt62_);
ad(elt56_,elt61_);
Element elt63_=el(_doc,"c:if");
CustList<Attr> attrs42_=al(1);
attrs42_.add(at("condition","noSlamAttack()"));
at(elt63_,attrs42_);
Element elt64_=el(_doc,"c:message");
CustList<Attr> attrs43_=al(1);
attrs43_.add(at("value","msg,noSlamAttack"));
at(elt64_,attrs43_);
ad(elt63_,elt64_);
ad(elt56_,elt63_);
Element elt65_=el(_doc,"c:if");
CustList<Attr> attrs44_=al(1);
attrs44_.add(at("condition","slamDefense()"));
at(elt65_,attrs44_);
Element elt66_=el(_doc,"c:message");
CustList<Attr> attrs45_=al(1);
attrs45_.add(at("value","msg,noSlamDefense"));
at(elt66_,attrs45_);
ad(elt65_,elt66_);
ad(elt56_,elt65_);
Element elt67_=el(_doc,"c:if");
CustList<Attr> attrs46_=al(1);
attrs46_.add(at("condition","noSlamDefense()"));
at(elt67_,attrs46_);
Element elt68_=el(_doc,"c:message");
CustList<Attr> attrs47_=al(1);
attrs47_.add(at("value","msg,noSlamDefense"));
at(elt68_,attrs47_);
ad(elt67_,elt68_);
ad(elt56_,elt67_);
ad(elt0_,elt56_);
Element elt69_=el(_doc,"br");
ad(elt0_,elt69_);
ad(_body,elt0_);
}
static void build1(Element _body,Document _doc){
Element elt0_=el(_doc,"c:if");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("condition","playVariantModeGame()"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"h1");
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg,variant_res"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"ul");
Element elt4_=el(_doc,"li");
Element elt5_=el(_doc,"c:message");
CustList<Attr> attrs2_=al(1);
attrs2_.add(at("value","msg,variant_res_1"));
at(elt5_,attrs2_);
ad(elt4_,elt5_);
Text txt0_=tx(_doc,"{maxDifference}");
ad(elt4_,txt0_);
ad(elt3_,elt4_);
Element elt6_=el(_doc,"li");
Element elt7_=el(_doc,"c:message");
CustList<Attr> attrs3_=al(1);
attrs3_.add(at("value","msg,variant_res_2"));
at(elt7_,attrs3_);
ad(elt6_,elt7_);
Text txt1_=tx(_doc,"{initialUserPosition}");
ad(elt6_,txt1_);
ad(elt3_,elt6_);
Element elt8_=el(_doc,"li");
Element elt9_=el(_doc,"c:message");
CustList<Attr> attrs4_=al(1);
attrs4_.add(at("value","msg,variant_res_3"));
at(elt9_,attrs4_);
ad(elt8_,elt9_);
Text txt2_=tx(_doc,"{finalUserPosition}");
ad(elt8_,txt2_);
ad(elt3_,elt8_);
ad(elt0_,elt3_);
ad(_body,elt0_);
}
static void build2(Element _body,Document _doc){
Element elt0_=el(_doc,"br");
ad(_body,elt0_);
}
static void build3(Element _body,Document _doc){
Element elt0_=el(_doc,"table");
CustList<Attr> attrs0_=al(1);
attrs0_.add(at("border","1"));
at(elt0_,attrs0_);
Element elt1_=el(_doc,"caption");
Element elt2_=el(_doc,"c:message");
CustList<Attr> attrs1_=al(1);
attrs1_.add(at("value","msg,variant_scores"));
at(elt2_,attrs1_);
ad(elt1_,elt2_);
ad(elt0_,elt1_);
Element elt3_=el(_doc,"thead");
Element elt4_=el(_doc,"tr");
Element elt5_=el(_doc,"td");
ad(elt4_,elt5_);
Element elt6_=el(_doc,"c:for");
CustList<Attr> attrs2_=al(3);
attrs2_.add(at("var","p"));
attrs2_.add(at("list","nicknames"));
attrs2_.add(at("className","java.lang.String"));
at(elt6_,attrs2_);
Element elt7_=el(_doc,"td");
Text txt0_=tx(_doc,"{p}");
ad(elt7_,txt0_);
ad(elt6_,elt7_);
ad(elt4_,elt6_);
ad(elt3_,elt4_);
ad(elt0_,elt3_);
Element elt8_=el(_doc,"tbody");
Element elt9_=el(_doc,"c:for");
CustList<Attr> attrs3_=al(3);
attrs3_.add(at("var","l"));
attrs3_.add(at("list","linesDeal"));
attrs3_.add(at("className","cards.tarot.beans.LineDeal"));
at(elt9_,attrs3_);
Element elt10_=el(_doc,"tr");
Element elt11_=el(_doc,"td");
Text txt1_=tx(_doc,"{l.number}");
ad(elt11_,txt1_);
ad(elt10_,elt11_);
Element elt12_=el(_doc,"c:for");
CustList<Attr> attrs4_=al(3);
attrs4_.add(at("var","s"));
attrs4_.add(at("list","l.scores"));
attrs4_.add(at("className","java.lang.Long"));
at(elt12_,attrs4_);
Element elt13_=el(_doc,"td");
Text txt2_=tx(_doc,"{s}");
ad(elt13_,txt2_);
ad(elt12_,elt13_);
ad(elt10_,elt12_);
ad(elt9_,elt10_);
ad(elt8_,elt9_);
ad(elt0_,elt8_);
ad(_body,elt0_);
}
static void build4(Element _body,Document _doc){
Element elt0_=el(_doc,"br");
ad(_body,elt0_);
}
static Attr at(String _name,String _value){
return CoreDocument.createAttribute(_name,_value);
}
static void at(Element _elt,CustList<Attr> _ls){
_elt.setAttributes(new NamedNodeMap(_ls));
}
static CustList<Attr> al(int _len){
return new CustList<Attr>(new CollCapacity(_len));
}
static Text tx(Document _doc,String _value){
return _doc.createEscapedTextNode(_value);
}
static Element el(Document _doc,String _value){
return _doc.createElement(_value);
}
static void ad(Element _elt,Node _value){
_elt.appendChild(_value);
}
}
