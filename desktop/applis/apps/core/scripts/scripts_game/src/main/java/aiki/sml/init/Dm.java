package aiki.sml.init;
import aiki.map.Condition;
import aiki.map.characters.enums.*;
import aiki.map.characters.*;
import aiki.map.places.*;
import aiki.map.DataMap;
import aiki.map.buildings.*;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.map.util.*;
import aiki.map.enums.*;
import aiki.util.*;
import aiki.fight.*;
import aiki.fight.effects.*;
import aiki.fight.moves.effects.*;
import aiki.fight.status.effects.*;
import aiki.fight.moves.enums.*;
import aiki.fight.status.*;
import aiki.fight.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
import aiki.map.pokemon.*;
import aiki.map.levels.*;
import aiki.map.levels.enums.*;
import aiki.map.pokemon.enums.*;
public final class Dm{
private Dm(){}
public static DataMap map(){
DataMap dataMap_ = Instances.newDataMap();
CustList<Place> custListPlace_=new CustList<Place>(new CollCapacity(12));
custListPlace_.add(Pl.p0());
custListPlace_.add(Pl.p1());
custListPlace_.add(Pl.p2());
custListPlace_.add(Pl.p3());
custListPlace_.add(Pl.p4());
custListPlace_.add(Pl.p5());
custListPlace_.add(Pl.p6());
custListPlace_.add(Pl.p7());
custListPlace_.add(Pl.p8());
custListPlace_.add(Pl.p9());
custListPlace_.add(Pl.p10());
custListPlace_.add(Pl.p11());
dataMap_.setPlaces(custListPlace_);
CoordsLists objectMapCoordsEqListCoords_=new CoordsLists(new CollCapacity(37));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)7)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)7)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)4,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)7,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)4)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)9)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)4)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)6,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)9,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)6,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)8)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)4)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)5)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)8)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)6)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)7,(short)7)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)8,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)5,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)8)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)4)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)5)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)6)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)7,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)9)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)6)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)7)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(3,0,new Point((short)6,(short)5)),new Condition(LvUt.newCoords(2,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)5,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)6)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)8,(short)9)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)8)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)9)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)8,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(1,0,new Point((short)9,(short)6)),new Condition(LvUt.newCoords(0,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(11,0,new Point((short)11,(short)5)),new Condition(LvUt.newCoords(10,0,new Point((short)4,(short)0))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(9,0,new Point((short)6,(short)7)),new Condition(LvUt.newCoords(9,0,new Point((short)9,(short)7))));
objectMapCoordsEqListCoords_.addEntry(LvUt.newCoords(5,0,new Point((short)4,(short)2)),new Condition(LvUt.newCoords(4,0,new Point((short)18,(short)8),new Point((short)4,(short)0))));
dataMap_.setAccessCondition(objectMapCoordsEqListCoords_);
MiniMapCoordsList objectMapMiniMapCoordsTileMiniMap_=new MiniMapCoordsList(new CollCapacity(30));
TileMiniMap tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("city_locked.txt");
tileMiniMap_.setPlace((short)0);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)1,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("city_locked.txt");
tileMiniMap_.setPlace((short)8);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)5,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)3);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)4,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)11);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)0,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)9);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)2,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)0,(short)1),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)0,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)9);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)4,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)1,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)9);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)3,(short)4),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("league.txt");
tileMiniMap_.setPlace((short)10);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)3,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)2,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("city_locked.txt");
tileMiniMap_.setPlace((short)4);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)5,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)0,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)1);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)1,(short)1),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)2,(short)1),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)5);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)5,(short)1),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("city_locked.txt");
tileMiniMap_.setPlace((short)2);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)1,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)0,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)1,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)7);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)5,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)3,(short)1),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)4,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("rock.txt");
tileMiniMap_.setPlace((short)6);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)5,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)4,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)3);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)2,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)3,(short)2),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("road.txt");
tileMiniMap_.setPlace((short)3);
tileMiniMap_.setHeros(true);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)3,(short)0),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)2,(short)3),tileMiniMap_);
tileMiniMap_=Instances.newTileMiniMap();
tileMiniMap_.setFile("ground.txt");
tileMiniMap_.setPlace((short)-1);
tileMiniMap_.setHeros(false);
objectMapMiniMapCoordsTileMiniMap_.addEntry(new MiniMapCoords((short)4,(short)1),tileMiniMap_);
dataMap_.setMiniMap(objectMapMiniMapCoordsTileMiniMap_);
dataMap_.setUnlockedCity("city_unlocked.txt");
dataMap_.setBegin(LvUt.newCoords(0,0,new Point((short)6,(short)8)));
WildPk wildPk_=Instances.newWildPk();
wildPk_.setName("EVOLI");
wildPk_.setLevel((short)1);
wildPk_.setGender(Gender.NO_GENDER);
wildPk_.setAbility("ADAPTABILITE");
dataMap_.setFirstPokemon(wildPk_);
dataMap_.setScreenWidth(9);
dataMap_.setScreenHeight(9);
dataMap_.setSpaceBetweenLeftAndHeros(4);
dataMap_.setSpaceBetweenTopAndHeros(4);
dataMap_.setSideLength(32);
return dataMap_;
}
}
