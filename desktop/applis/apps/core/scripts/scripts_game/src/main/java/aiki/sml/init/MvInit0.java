package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit0 extends CstIgame{
private MvInit0(){}
static MoveData m0(){
StatusMoveData m548statusMoveData_ = Instances.newStatusMoveData();
m548statusMoveData_.setPp(5);
StringList m548stringList_=new StringList(new CollCapacity(1));
m548stringList_.add(I_SOL);
m548statusMoveData_.setTypes(m548stringList_);
m548stringList_=new StringList(new CollCapacity(1));
m548stringList_.add(I_SOL);
m548statusMoveData_.setBoostedTypes(m548stringList_);
m548statusMoveData_.setAccuracy(A_DIV+LP+A_MAX+LP+V_LANCEUR_NIVEAU+OD+V_CIBLE_NIVEAU+OC+R_0+RP+OC+R_100+RP);
CustList<Effect> m548custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRemainedHpRate m548effectRemainedHpRate_=Instances.newEffectRemainedHpRate();
m548effectRemainedHpRate_.setRateHp(Rate.newRate(OD+R_1));
m548effectRemainedHpRate_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m548effectRemainedHpRate_.setFail(ES);
m548custListEffect_.add(m548effectRemainedHpRate_);
m548statusMoveData_.setEffects(m548custListEffect_);
m548statusMoveData_.setStoppableMoveSolo(true);
m548statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m548statusMoveData_;
}
static MoveData m1(){
DamagingMoveData m549damagingMoveData_ = Instances.newDamagingMoveData();
m549damagingMoveData_.setCategory(I_SPECIALE);
m549damagingMoveData_.setStoppableMoveKoSingle(true);
m549damagingMoveData_.setPp(15);
StringList m549stringList_=new StringList(new CollCapacity(1));
m549stringList_.add(I_TENEBRE);
m549damagingMoveData_.setTypes(m549stringList_);
m549stringList_=new StringList(new CollCapacity(1));
m549stringList_.add(I_TENEBRE);
m549damagingMoveData_.setBoostedTypes(m549stringList_);
m549damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m549custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m549effectDamage_=Instances.newEffectDamage();
m549effectDamage_.setPower(R_55);
m549effectDamage_.setUserAttack(true);
m549effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m549effectDamage_.setTargetDefense(true);
m549effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m549effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m549effectDamage_.setFail(ES);
m549custListEffect_.add(m549effectDamage_);
EffectStatistic m549effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m549enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m549enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,-1);
m549effectStatistic_.setStatisVarRank(m549enumMapStatisticByte_);
IdMap<Statistic,String> m549enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m549enumMapStatisticString_.addEntry(Statistic.SPECIAL_ATTACK,V_CIBLE_CLONE+GT+R_0);
m549effectStatistic_.setLocalFailStatis(m549enumMapStatisticString_);
m549effectStatistic_.setEvtRate(Rate.newRate(R_1));
m549effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
m549effectStatistic_.setFail(ES);
Ints m549ints_=new Ints(new CollCapacity(1));
m549ints_.add(0);
m549effectStatistic_.setRequiredSuccessfulEffects(m549ints_);
m549custListEffect_.add(m549effectStatistic_);
m549damagingMoveData_.setEffects(m549custListEffect_);
m549damagingMoveData_.setStoppableMoveSolo(true);
m549damagingMoveData_.setStoppableMoveMulti(true);
m549damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m549damagingMoveData_;
}
static MoveData m2(){
StatusMoveData m550statusMoveData_ = Instances.newStatusMoveData();
m550statusMoveData_.setPp(5);
StringList m550stringList_=new StringList(new CollCapacity(1));
m550stringList_.add(I_NORMAL);
m550statusMoveData_.setTypes(m550stringList_);
m550stringList_=new StringList(new CollCapacity(1));
m550stringList_.add(I_NORMAL);
m550statusMoveData_.setBoostedTypes(m550stringList_);
m550statusMoveData_.setPriority(3);
m550statusMoveData_.setAccuracy(A_PUIS+LP+R_2+OC+OD+V_LANCEUR_NB_UTILISATION+SE+I_ABRI+OD+V_LANCEUR_NB_UTILISATION+SE+I_DETECTION+RP);
CustList<Effect> m550custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtection m550effectProtection_=Instances.newEffectProtection();
m550effectProtection_.setProtSingle(true);
m550effectProtection_.setTargetChoice(TargetChoice.LANCEUR);
m550effectProtection_.setFail(ES);
m550custListEffect_.add(m550effectProtection_);
m550statusMoveData_.setEffects(m550custListEffect_);
m550statusMoveData_.setStoppableMoveMulti(true);
m550statusMoveData_.setStoppableMovePrio(true);
m550statusMoveData_.setIgnVarEvasTargetPos(true);
m550statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m550statusMoveData_;
}
static MoveData m3(){
StatusMoveData m551statusMoveData_ = Instances.newStatusMoveData();
m551statusMoveData_.setThievableMove(true);
m551statusMoveData_.setPp(40);
StringList m551stringList_=new StringList(new CollCapacity(1));
m551stringList_.add(I_POISON);
m551statusMoveData_.setTypes(m551stringList_);
m551stringList_=new StringList(new CollCapacity(1));
m551stringList_.add(I_POISON);
m551statusMoveData_.setBoostedTypes(m551stringList_);
m551statusMoveData_.setAccuracy(R_1);
CustList<Effect> m551custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m551effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m551enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m551enumMapStatisticByte_.addEntry(Statistic.DEFENSE,2);
m551effectStatistic_.setStatisVarRank(m551enumMapStatisticByte_);
m551effectStatistic_.setEvtRate(Rate.newRate(R_1));
m551effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m551effectStatistic_.setFail(ES);
m551custListEffect_.add(m551effectStatistic_);
m551statusMoveData_.setEffects(m551custListEffect_);
m551statusMoveData_.setStoppableMoveMulti(true);
m551statusMoveData_.setIgnVarAccurUserNeg(true);
m551statusMoveData_.setIgnVarEvasTargetPos(true);
m551statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m551statusMoveData_;
}
static MoveData m4(){
DamagingMoveData m552damagingMoveData_ = Instances.newDamagingMoveData();
m552damagingMoveData_.setCategory(I_SPECIALE);
m552damagingMoveData_.setStoppableMoveKoSingle(true);
m552damagingMoveData_.setPp(30);
StringList m552stringList_=new StringList(new CollCapacity(1));
m552stringList_.add(I_POISON);
m552damagingMoveData_.setTypes(m552stringList_);
m552stringList_=new StringList(new CollCapacity(1));
m552stringList_.add(I_POISON);
m552damagingMoveData_.setBoostedTypes(m552stringList_);
m552damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m552custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m552effectDamage_=Instances.newEffectDamage();
m552effectDamage_.setPower(R_40);
m552effectDamage_.setUserAttack(true);
m552effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m552effectDamage_.setTargetDefense(true);
m552effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m552effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m552effectDamage_.setFail(ES);
m552custListEffect_.add(m552effectDamage_);
EffectStatistic m552effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m552enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m552enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,-1);
m552effectStatistic_.setStatisVarRank(m552enumMapStatisticByte_);
IdMap<Statistic,String> m552enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m552enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m552effectStatistic_.setLocalFailStatis(m552enumMapStatisticString_);
m552effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m552effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
m552effectStatistic_.setFail(ES);
Ints m552ints_=new Ints(new CollCapacity(1));
m552ints_.add(0);
m552effectStatistic_.setRequiredSuccessfulEffects(m552ints_);
m552custListEffect_.add(m552effectStatistic_);
m552damagingMoveData_.setEffects(m552custListEffect_);
m552damagingMoveData_.setStoppableMoveSolo(true);
m552damagingMoveData_.setStoppableMoveMulti(true);
m552damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m552damagingMoveData_;
}
static MoveData m5(){
DamagingMoveData m553damagingMoveData_ = Instances.newDamagingMoveData();
m553damagingMoveData_.setCategory(I_PHYSIQUE);
m553damagingMoveData_.setDirect(true);
m553damagingMoveData_.setStoppableMoveKoSingle(true);
m553damagingMoveData_.setPp(15);
StringList m553stringList_=new StringList(new CollCapacity(1));
m553stringList_.add(I_VOL);
m553damagingMoveData_.setTypes(m553stringList_);
m553stringList_=new StringList(new CollCapacity(1));
m553stringList_.add(I_VOL);
m553damagingMoveData_.setBoostedTypes(m553stringList_);
m553damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m553custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m553effectDamage_=Instances.newEffectDamage();
m553effectDamage_.setPower(R_55+OM+LP+A_INCLUSNUM+LP+LB+V_LANCEUR_OBJET+RB+OC+LB+RB+RP+OP+R_1+RP);
m553effectDamage_.setUserAttack(true);
m553effectDamage_.setStatisAtt(Statistic.ATTACK);
m553effectDamage_.setTargetDefense(true);
m553effectDamage_.setStatisDef(Statistic.DEFENSE);
m553effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m553effectDamage_.setFail(A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_OBJET+RB+OC+LB+I_BALLE_FER+RB+RP+RP+OE+R_1);
m553custListEffect_.add(m553effectDamage_);
m553damagingMoveData_.setEffects(m553custListEffect_);
m553damagingMoveData_.setStoppableMoveSolo(true);
m553damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m553damagingMoveData_;
}
static MoveData m6(){
StatusMoveData m554statusMoveData_ = Instances.newStatusMoveData();
m554statusMoveData_.setPp(30);
StringList m554stringList_=new StringList(new CollCapacity(1));
m554stringList_.add(I_NORMAL);
m554statusMoveData_.setTypes(m554stringList_);
m554stringList_=new StringList(new CollCapacity(1));
m554stringList_.add(I_NORMAL);
m554statusMoveData_.setBoostedTypes(m554stringList_);
m554statusMoveData_.setAccuracy(R_1);
CustList<Effect> m554custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m554effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m554enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(7));
m554enumMapStatisticByte_.addEntry(Statistic.ACCURACY,2);
m554enumMapStatisticByte_.addEntry(Statistic.EVASINESS,2);
m554enumMapStatisticByte_.addEntry(Statistic.ATTACK,2);
m554enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,2);
m554enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,2);
m554enumMapStatisticByte_.addEntry(Statistic.DEFENSE,2);
m554enumMapStatisticByte_.addEntry(Statistic.SPEED,2);
m554effectStatistic_.setStatisVarRank(m554enumMapStatisticByte_);
m554effectStatistic_.setEvtRate(Rate.newRate(R_1));
MonteCarloEnum<Statistic> m554monteCarloEnumStatistic_=new MonteCarloEnum<Statistic>(new CollCapacity(7));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.ACCURACY,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.EVASINESS,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.ATTACK,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.SPECIAL_ATTACK,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.SPECIAL_DEFENSE,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.DEFENSE,LgInt.newLgInt(R_1));
m554monteCarloEnumStatistic_.addQuickEvent(Statistic.SPEED,LgInt.newLgInt(R_1));
m554effectStatistic_.setLawBoost(m554monteCarloEnumStatistic_);
m554effectStatistic_.setTargetChoice(TargetChoice.UNIQUE_IMPORTE);
m554effectStatistic_.setFail(V_AUCUN_BOOST_POSSIBLE);
m554custListEffect_.add(m554effectStatistic_);
m554statusMoveData_.setEffects(m554custListEffect_);
m554statusMoveData_.setStoppableMoveSolo(true);
m554statusMoveData_.setIgnVarAccurUserNeg(true);
m554statusMoveData_.setIgnVarEvasTargetPos(true);
m554statusMoveData_.setTargetChoice(TargetChoice.UNIQUE_IMPORTE);
return m554statusMoveData_;
}
static MoveData m7(){
StatusMoveData m555statusMoveData_ = Instances.newStatusMoveData();
m555statusMoveData_.setThievableMove(true);
m555statusMoveData_.setPp(30);
StringList m555stringList_=new StringList(new CollCapacity(1));
m555stringList_.add(I_NORMAL);
m555statusMoveData_.setTypes(m555stringList_);
m555stringList_=new StringList(new CollCapacity(1));
m555stringList_.add(I_NORMAL);
m555statusMoveData_.setBoostedTypes(m555stringList_);
m555statusMoveData_.setAccuracy(R_1);
CustList<Effect> m555custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchTypes m555effectSwitchTypes_=Instances.newEffectSwitchTypes();
m555effectSwitchTypes_.setConstValuesType(ConstValuesType.LANCEUR_ATTAQUES_TYPES);
m555effectSwitchTypes_.setExchangeTypes(ExchangeType.NOTHING);
m555effectSwitchTypes_.setTargetChoice(TargetChoice.LANCEUR);
m555effectSwitchTypes_.setFail(A_INCLUSNUM+LP+LB+V_LANCEUR_ATTAQUES_TYPES+RB+OC+LB+V_LANCEUR_TYPES+RB+RP+OE+R_1);
m555custListEffect_.add(m555effectSwitchTypes_);
m555statusMoveData_.setEffects(m555custListEffect_);
m555statusMoveData_.setStoppableMoveMulti(true);
m555statusMoveData_.setIgnVarAccurUserNeg(true);
m555statusMoveData_.setIgnVarEvasTargetPos(true);
m555statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m555statusMoveData_;
}
static MoveData m8(){
DamagingMoveData m556damagingMoveData_ = Instances.newDamagingMoveData();
m556damagingMoveData_.setCategory(I_SPECIALE);
m556damagingMoveData_.setStoppableMoveKoSingle(true);
m556damagingMoveData_.setPp(5);
StringList m556stringList_=new StringList(new CollCapacity(1));
m556stringList_.add(I_VOL);
m556damagingMoveData_.setTypes(m556stringList_);
m556stringList_=new StringList(new CollCapacity(1));
m556stringList_.add(I_VOL);
m556damagingMoveData_.setBoostedTypes(m556stringList_);
m556damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m556custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m556effectDamage_=Instances.newEffectDamage();
m556effectDamage_.setChRate(1);
m556effectDamage_.setPower(R_100);
m556effectDamage_.setUserAttack(true);
m556effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m556effectDamage_.setTargetDefense(true);
m556effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m556effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m556effectDamage_.setFail(ES);
m556custListEffect_.add(m556effectDamage_);
m556damagingMoveData_.setEffects(m556custListEffect_);
m556damagingMoveData_.setStoppableMoveSolo(true);
m556damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m556damagingMoveData_;
}
static MoveData m9(){
DamagingMoveData m557damagingMoveData_ = Instances.newDamagingMoveData();
m557damagingMoveData_.setCategory(I_PHYSIQUE);
m557damagingMoveData_.setDirect(true);
m557damagingMoveData_.setStoppableMoveKoSingle(true);
m557damagingMoveData_.setPp(20);
StringList m557stringList_=new StringList(new CollCapacity(1));
m557stringList_.add(I_VOL);
m557damagingMoveData_.setTypes(m557stringList_);
m557stringList_=new StringList(new CollCapacity(1));
m557stringList_.add(I_VOL);
m557damagingMoveData_.setBoostedTypes(m557stringList_);
m557damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m557custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m557effectDamage_=Instances.newEffectDamage();
m557effectDamage_.setPower(R_60);
m557effectDamage_.setUserAttack(true);
m557effectDamage_.setStatisAtt(Statistic.ATTACK);
m557effectDamage_.setTargetDefense(true);
m557effectDamage_.setStatisDef(Statistic.DEFENSE);
m557effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m557effectDamage_.setFail(ES);
m557custListEffect_.add(m557effectDamage_);
m557damagingMoveData_.setEffects(m557custListEffect_);
m557damagingMoveData_.setStoppableMoveSolo(true);
m557damagingMoveData_.setIgnVarAccurUserNeg(true);
m557damagingMoveData_.setIgnVarEvasTargetPos(true);
m557damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m557damagingMoveData_;
}
static MoveData m10(){
StatusMoveData m558statusMoveData_ = Instances.newStatusMoveData();
m558statusMoveData_.setThievableMove(true);
m558statusMoveData_.setPp(30);
StringList m558stringList_=new StringList(new CollCapacity(1));
m558stringList_.add(I_NORMAL);
m558statusMoveData_.setTypes(m558stringList_);
m558stringList_=new StringList(new CollCapacity(1));
m558stringList_.add(I_NORMAL);
m558statusMoveData_.setBoostedTypes(m558stringList_);
m558statusMoveData_.setAccuracy(R_1);
CustList<Effect> m558custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m558effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m558enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m558enumMapStatisticByte_.addEntry(Statistic.ATTACK,1);
m558effectStatistic_.setStatisVarRank(m558enumMapStatisticByte_);
m558effectStatistic_.setEvtRate(Rate.newRate(R_1));
m558effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m558effectStatistic_.setFail(ES);
m558custListEffect_.add(m558effectStatistic_);
m558statusMoveData_.setEffects(m558custListEffect_);
m558statusMoveData_.setStoppableMoveMulti(true);
m558statusMoveData_.setIgnVarAccurUserNeg(true);
m558statusMoveData_.setIgnVarEvasTargetPos(true);
m558statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m558statusMoveData_;
}
static MoveData m11(){
StatusMoveData m559statusMoveData_ = Instances.newStatusMoveData();
m559statusMoveData_.setThievableMove(true);
m559statusMoveData_.setPp(15);
StringList m559stringList_=new StringList(new CollCapacity(1));
m559stringList_.add(I_TENEBRE);
m559statusMoveData_.setTypes(m559stringList_);
m559stringList_=new StringList(new CollCapacity(1));
m559stringList_.add(I_TENEBRE);
m559statusMoveData_.setBoostedTypes(m559stringList_);
m559statusMoveData_.setAccuracy(R_1);
CustList<Effect> m559custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m559effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m559enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(2));
m559enumMapStatisticByte_.addEntry(Statistic.ACCURACY,1);
m559enumMapStatisticByte_.addEntry(Statistic.ATTACK,1);
m559effectStatistic_.setStatisVarRank(m559enumMapStatisticByte_);
m559effectStatistic_.setEvtRate(Rate.newRate(R_1));
m559effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m559effectStatistic_.setFail(ES);
m559custListEffect_.add(m559effectStatistic_);
m559statusMoveData_.setEffects(m559custListEffect_);
m559statusMoveData_.setStoppableMoveMulti(true);
m559statusMoveData_.setIgnVarAccurUserNeg(true);
m559statusMoveData_.setIgnVarEvasTargetPos(true);
m559statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m559statusMoveData_;
}
static MoveData m12(){
DamagingMoveData m560damagingMoveData_ = Instances.newDamagingMoveData();
m560damagingMoveData_.setCategory(I_PHYSIQUE);
m560damagingMoveData_.setDirect(true);
m560damagingMoveData_.setStoppableMoveKoSingle(true);
m560damagingMoveData_.setPp(15);
StringList m560stringList_=new StringList(new CollCapacity(1));
m560stringList_.add(I_COMBAT);
m560damagingMoveData_.setTypes(m560stringList_);
m560stringList_=new StringList(new CollCapacity(1));
m560stringList_.add(I_COMBAT);
m560damagingMoveData_.setBoostedTypes(m560stringList_);
m560damagingMoveData_.setPriority(1);
m560damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m560custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m560effectDamage_=Instances.newEffectDamage();
m560effectDamage_.setPower(R_150);
m560effectDamage_.setUserAttack(true);
m560effectDamage_.setStatisAtt(Statistic.ATTACK);
m560effectDamage_.setTargetDefense(true);
m560effectDamage_.setStatisDef(Statistic.DEFENSE);
m560effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m560effectDamage_.setFail(ES);
m560custListEffect_.add(m560effectDamage_);
EffectStatus m560effectStatus_=Instances.newEffectStatus();
MonteCarloString m560monteCarloString_=new MonteCarloString(new CollCapacity(1));
m560monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m560effectStatus_.setLawStatus(m560monteCarloString_);
StringMap<String> m560stringMapString_=new StringMap<String>(new CollCapacity(1));
m560stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m560effectStatus_.setLocalFailStatus(m560stringMapString_);
m560effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m560effectStatus_.setFail(ES);
Ints m560ints_=new Ints(new CollCapacity(1));
m560ints_.add(0);
m560effectStatus_.setRequiredSuccessfulEffects(m560ints_);
m560custListEffect_.add(m560effectStatus_);
m560damagingMoveData_.setEffects(m560custListEffect_);
m560damagingMoveData_.setNbPrepaRound(1);
m560damagingMoveData_.setDisappearBeforeUse(true);
m560damagingMoveData_.setStoppableMoveSolo(true);
m560damagingMoveData_.setStoppableMovePrio(true);
m560damagingMoveData_.setIgnVarAccurUserNeg(true);
m560damagingMoveData_.setIgnVarEvasTargetPos(true);
m560damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m560damagingMoveData_;
}
static MoveData m13(){
DamagingMoveData m561damagingMoveData_ = Instances.newDamagingMoveData();
m561damagingMoveData_.setCategory(I_PHYSIQUE);
m561damagingMoveData_.setDirect(true);
m561damagingMoveData_.setStoppableMoveKoSingle(true);
m561damagingMoveData_.setPp(25);
StringList m561stringList_=new StringList(new CollCapacity(1));
m561stringList_.add(I_ACIER);
m561damagingMoveData_.setTypes(m561stringList_);
m561stringList_=new StringList(new CollCapacity(1));
m561stringList_.add(I_ACIER);
m561damagingMoveData_.setBoostedTypes(m561stringList_);
m561damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m561custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m561effectDamage_=Instances.newEffectDamage();
m561effectDamage_.setPower(R_70);
m561effectDamage_.setUserAttack(true);
m561effectDamage_.setStatisAtt(Statistic.ATTACK);
m561effectDamage_.setTargetDefense(true);
m561effectDamage_.setStatisDef(Statistic.DEFENSE);
m561effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m561effectDamage_.setFail(ES);
m561custListEffect_.add(m561effectDamage_);
EffectStatistic m561effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m561enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m561enumMapStatisticByte_.addEntry(Statistic.DEFENSE,1);
m561effectStatistic_.setStatisVarRank(m561enumMapStatisticByte_);
m561effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m561effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m561effectStatistic_.setFail(ES);
Ints m561ints_=new Ints(new CollCapacity(1));
m561ints_.add(0);
m561effectStatistic_.setRequiredSuccessfulEffects(m561ints_);
m561custListEffect_.add(m561effectStatistic_);
m561damagingMoveData_.setEffects(m561custListEffect_);
m561damagingMoveData_.setStoppableMoveSolo(true);
m561damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m561damagingMoveData_;
}
static MoveData m14(){
DamagingMoveData m562damagingMoveData_ = Instances.newDamagingMoveData();
m562damagingMoveData_.setCategory(I_SPECIALE);
m562damagingMoveData_.setStoppableMoveKoSingle(true);
m562damagingMoveData_.setPp(10);
StringList m562stringList_=new StringList(new CollCapacity(1));
m562stringList_.add(I_FEU);
m562damagingMoveData_.setTypes(m562stringList_);
m562stringList_=new StringList(new CollCapacity(1));
m562stringList_.add(I_FEU);
m562damagingMoveData_.setBoostedTypes(m562stringList_);
m562damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m562custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m562effectDamage_=Instances.newEffectDamage();
m562effectDamage_.setPower(R_50+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_D_HERBE+OP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_D_EAU+OP+R_1+RP);
m562effectDamage_.setUserAttack(true);
m562effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m562effectDamage_.setTargetDefense(true);
m562effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m562effectDamage_.setTargetChoice(TargetChoice.TOUS_ADV);
m562effectDamage_.setFail(ES);
m562custListEffect_.add(m562effectDamage_);
m562damagingMoveData_.setEffects(m562custListEffect_);
m562damagingMoveData_.setStoppableMoveSolo(true);
m562damagingMoveData_.setStoppableMoveMulti(true);
m562damagingMoveData_.setTargetChoice(TargetChoice.TOUS_ADV);
return m562damagingMoveData_;
}
static MoveData m15(){
DamagingMoveData m563damagingMoveData_ = Instances.newDamagingMoveData();
m563damagingMoveData_.setCategory(I_SPECIALE);
m563damagingMoveData_.setStoppableMoveKoSingle(true);
m563damagingMoveData_.setPp(10);
StringList m563stringList_=new StringList(new CollCapacity(1));
m563stringList_.add(I_EAU);
m563damagingMoveData_.setTypes(m563stringList_);
m563stringList_=new StringList(new CollCapacity(1));
m563stringList_.add(I_EAU);
m563damagingMoveData_.setBoostedTypes(m563stringList_);
m563damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m563custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m563effectDamage_=Instances.newEffectDamage();
m563effectDamage_.setPower(R_50+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_DE_FEU+OP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_D_HERBE+OP+R_1+RP);
m563effectDamage_.setUserAttack(true);
m563effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m563effectDamage_.setTargetDefense(true);
m563effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m563effectDamage_.setTargetChoice(TargetChoice.TOUS_ADV);
m563effectDamage_.setFail(ES);
m563custListEffect_.add(m563effectDamage_);
m563damagingMoveData_.setEffects(m563custListEffect_);
m563damagingMoveData_.setStoppableMoveSolo(true);
m563damagingMoveData_.setStoppableMoveMulti(true);
m563damagingMoveData_.setTargetChoice(TargetChoice.TOUS_ADV);
return m563damagingMoveData_;
}
static MoveData m16(){
DamagingMoveData m564damagingMoveData_ = Instances.newDamagingMoveData();
m564damagingMoveData_.setCategory(I_SPECIALE);
m564damagingMoveData_.setStoppableMoveKoSingle(true);
m564damagingMoveData_.setPp(10);
StringList m564stringList_=new StringList(new CollCapacity(1));
m564stringList_.add(I_PLANTE);
m564damagingMoveData_.setTypes(m564stringList_);
m564stringList_=new StringList(new CollCapacity(1));
m564stringList_.add(I_PLANTE);
m564damagingMoveData_.setBoostedTypes(m564stringList_);
m564damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m564custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m564effectDamage_=Instances.newEffectDamage();
m564effectDamage_.setPower(R_50+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_DE_FEU+OP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_AIRE_D_EAU+OP+R_1+RP);
m564effectDamage_.setUserAttack(true);
m564effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m564effectDamage_.setTargetDefense(true);
m564effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m564effectDamage_.setTargetChoice(TargetChoice.TOUS_ADV);
m564effectDamage_.setFail(ES);
m564custListEffect_.add(m564effectDamage_);
m564damagingMoveData_.setEffects(m564custListEffect_);
m564damagingMoveData_.setStoppableMoveSolo(true);
m564damagingMoveData_.setStoppableMoveMulti(true);
m564damagingMoveData_.setTargetChoice(TargetChoice.TOUS_ADV);
return m564damagingMoveData_;
}
static MoveData m17(){
StatusMoveData m565statusMoveData_ = Instances.newStatusMoveData();
m565statusMoveData_.setThievableMove(true);
m565statusMoveData_.setPp(30);
StringList m565stringList_=new StringList(new CollCapacity(1));
m565stringList_.add(I_NORMAL);
m565statusMoveData_.setTypes(m565stringList_);
m565stringList_=new StringList(new CollCapacity(1));
m565stringList_.add(I_NORMAL);
m565statusMoveData_.setBoostedTypes(m565stringList_);
m565statusMoveData_.setAccuracy(R_1);
CustList<Effect> m565custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m565effectTeam_=Instances.newEffectTeam();
m565effectTeam_.setProtectAgainstCh(true);
m565effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m565effectTeam_.setFail(ES);
m565custListEffect_.add(m565effectTeam_);
m565statusMoveData_.setEffects(m565custListEffect_);
m565statusMoveData_.setRankIncrementNbRound(12);
m565statusMoveData_.setStoppableMoveMulti(true);
m565statusMoveData_.setIgnVarAccurUserNeg(true);
m565statusMoveData_.setIgnVarEvasTargetPos(true);
m565statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m565statusMoveData_;
}
static MoveData m18(){
StatusMoveData m566statusMoveData_ = Instances.newStatusMoveData();
m566statusMoveData_.setThievableMove(true);
m566statusMoveData_.setPp(15);
StringList m566stringList_=new StringList(new CollCapacity(1));
m566stringList_.add(I_ACIER);
m566statusMoveData_.setTypes(m566stringList_);
m566stringList_=new StringList(new CollCapacity(1));
m566stringList_.add(I_ACIER);
m566statusMoveData_.setBoostedTypes(m566stringList_);
m566statusMoveData_.setAccuracy(R_1);
CustList<Effect> m566custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m566effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m566enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m566enumMapStatisticByte_.addEntry(Statistic.SPEED,2);
m566effectStatistic_.setStatisVarRank(m566enumMapStatisticByte_);
m566effectStatistic_.setEvtRate(Rate.newRate(R_1));
m566effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m566effectStatistic_.setFail(ES);
m566custListEffect_.add(m566effectStatistic_);
m566statusMoveData_.setEffects(m566custListEffect_);
m566statusMoveData_.setStoppableMoveMulti(true);
m566statusMoveData_.setIgnVarAccurUserNeg(true);
m566statusMoveData_.setIgnVarEvasTargetPos(true);
m566statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m566statusMoveData_;
}
static MoveData m19(){
StatusMoveData m567statusMoveData_ = Instances.newStatusMoveData();
m567statusMoveData_.setThievableMove(true);
m567statusMoveData_.setPp(20);
StringList m567stringList_=new StringList(new CollCapacity(1));
m567stringList_.add(I_PSY);
m567statusMoveData_.setTypes(m567stringList_);
m567stringList_=new StringList(new CollCapacity(1));
m567stringList_.add(I_PSY);
m567statusMoveData_.setBoostedTypes(m567stringList_);
m567statusMoveData_.setAccuracy(R_1);
CustList<Effect> m567custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m567effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Integer> m567enumMapStatisticByte_=new IdMap<Statistic,Integer>(new CollCapacity(1));
m567enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,2);
m567effectStatistic_.setStatisVarRank(m567enumMapStatisticByte_);
m567effectStatistic_.setEvtRate(Rate.newRate(R_1));
m567effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m567effectStatistic_.setFail(ES);
m567custListEffect_.add(m567effectStatistic_);
m567statusMoveData_.setEffects(m567custListEffect_);
m567statusMoveData_.setStoppableMoveMulti(true);
m567statusMoveData_.setIgnVarAccurUserNeg(true);
m567statusMoveData_.setIgnVarEvasTargetPos(true);
m567statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m567statusMoveData_;
}
static MoveData m20(){
DamagingMoveData m568damagingMoveData_ = Instances.newDamagingMoveData();
m568damagingMoveData_.setCategory(I_PHYSIQUE);
m568damagingMoveData_.setStoppableMoveKoSingle(true);
m568damagingMoveData_.setPp(30);
StringList m568stringList_=new StringList(new CollCapacity(1));
m568stringList_.add(I_SOL);
m568damagingMoveData_.setTypes(m568stringList_);
m568stringList_=new StringList(new CollCapacity(1));
m568stringList_.add(I_SOL);
m568damagingMoveData_.setBoostedTypes(m568stringList_);
m568damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m568custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m568effectDamage_=Instances.newEffectDamage();
m568effectDamage_.setPower(R_60+OM+LP+R_2+OM+A_CARACFERME+LP+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_TUNNEL+RB+RP+OM+V_CIBLE_DISPARAIT+OC+R_1+OC+R_1+RP+OP+A_CARACFERME+LP+V_CIBLE_DISPARAIT+OC+R_0+OC+R_0+RP+RP);
m568effectDamage_.setUserAttack(true);
m568effectDamage_.setStatisAtt(Statistic.ATTACK);
m568effectDamage_.setTargetDefense(true);
m568effectDamage_.setStatisDef(Statistic.DEFENSE);
m568effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m568effectDamage_.setFail(ES);
m568custListEffect_.add(m568effectDamage_);
m568damagingMoveData_.setEffects(m568custListEffect_);
m568damagingMoveData_.setStoppableMoveSolo(true);
m568damagingMoveData_.setStoppableMoveMulti(true);
m568stringList_=new StringList(new CollCapacity(1));
m568stringList_.add(I_TUNNEL);
m568damagingMoveData_.setAchieveDisappearedPkUsingMove(m568stringList_);
m568damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m568damagingMoveData_;
}
static MoveData m21(){
StatusMoveData m569statusMoveData_ = Instances.newStatusMoveData();
m569statusMoveData_.setThievableMove(true);
m569statusMoveData_.setPp(20);
StringList m569stringList_=new StringList(new CollCapacity(1));
m569stringList_.add(I_EAU);
m569statusMoveData_.setTypes(m569stringList_);
m569stringList_=new StringList(new CollCapacity(1));
m569stringList_.add(I_EAU);
m569statusMoveData_.setBoostedTypes(m569stringList_);
m569statusMoveData_.setAccuracy(R_1);
CustList<Effect> m569custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectEndRoundIndividual m569effectEndRoundIndividual_=Instances.newEffectEndRoundIndividual();
m569effectEndRoundIndividual_.setDeleteAllStatus(Rate.newRate(R_0));
m569effectEndRoundIndividual_.setRecoilDamage(Rate.newRate(R_0));
m569effectEndRoundIndividual_.setHealHp(Rate.newRate(R_1_16));
m569effectEndRoundIndividual_.setUserStatusEndRound(ES);
m569effectEndRoundIndividual_.setFailEndRound(ES);
m569effectEndRoundIndividual_.setEndRoundRank(60);
m569effectEndRoundIndividual_.setTargetChoice(TargetChoice.LANCEUR);
m569effectEndRoundIndividual_.setFail(ES);
m569custListEffect_.add(m569effectEndRoundIndividual_);
m569statusMoveData_.setEffects(m569custListEffect_);
m569statusMoveData_.setStoppableMoveMulti(true);
m569statusMoveData_.setIgnVarAccurUserNeg(true);
m569statusMoveData_.setIgnVarEvasTargetPos(true);
m569statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m569statusMoveData_;
}
static MoveData m22(){
DamagingMoveData m570damagingMoveData_ = Instances.newDamagingMoveData();
m570damagingMoveData_.setCategory(I_PHYSIQUE);
m570damagingMoveData_.setStoppableMoveKoSingle(true);
m570damagingMoveData_.setPp(15);
StringList m570stringList_=new StringList(new CollCapacity(1));
m570stringList_.add(I_ROCHE);
m570damagingMoveData_.setTypes(m570stringList_);
m570stringList_=new StringList(new CollCapacity(1));
m570stringList_.add(I_ROCHE);
m570damagingMoveData_.setBoostedTypes(m570stringList_);
m570damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m570custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m570effectDamage_=Instances.newEffectDamage();
m570effectDamage_.setPower(R_50+OM+LP+A_CARACFERME+LP+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_ENVOL+OS+I_REBOND+OS+I_CHUTE_LIBRE+RB+RP+OM+V_CIBLE_DISPARAIT+OC+R_1+OC+R_1+RP+OP+A_CARACFERME+LP+V_CIBLE_DISPARAIT+OC+R_0+OC+R_0+RP+RP);
m570effectDamage_.setUserAttack(true);
m570effectDamage_.setStatisAtt(Statistic.ATTACK);
m570effectDamage_.setTargetDefense(true);
m570effectDamage_.setStatisDef(Statistic.DEFENSE);
m570effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m570effectDamage_.setFail(V_CIBLE_CLONE+GT+R_0+OO+V_CIBLE_EFFET+SE+I_ATTERRISSAGE);
m570custListEffect_.add(m570effectDamage_);
EffectUnprotectFromTypes m570effectUnprotectFromTypes_=Instances.newEffectUnprotectFromTypes();
m570stringList_=new StringList(new CollCapacity(1));
m570stringList_.add(I_SOL);
m570effectUnprotectFromTypes_.setDisableImmuAgainstTypes(m570stringList_);
m570stringList_=new StringList(new CollCapacity(2));
m570stringList_.add(I_LEVIKINESIE);
m570stringList_.add(I_VOL_MAGNETIK);
m570effectUnprotectFromTypes_.setDisableImmuFromMoves(m570stringList_);
m570stringList_=new StringList(new CollCapacity(1));
m570stringList_.add(I_SOL);
m570effectUnprotectFromTypes_.setAttackTargetWithTypes(m570stringList_);
m570effectUnprotectFromTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m570effectUnprotectFromTypes_.setFail(V_CIBLE_DISPARAIT+OE+R_1+OA+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_ENVOL+OS+I_REBOND+OS+I_CHUTE_LIBRE+RB+RP+RP+GT+R_0);
Ints m570ints_=new Ints(new CollCapacity(1));
m570ints_.add(0);
m570effectUnprotectFromTypes_.setRequiredSuccessfulEffects(m570ints_);
m570custListEffect_.add(m570effectUnprotectFromTypes_);
m570damagingMoveData_.setEffects(m570custListEffect_);
m570damagingMoveData_.setStoppableMoveSolo(true);
m570stringList_=new StringList(new CollCapacity(3));
m570stringList_.add(I_ENVOL);
m570stringList_.add(I_REBOND);
m570stringList_.add(I_CHUTE_LIBRE);
m570damagingMoveData_.setAchieveDisappearedPkUsingMove(m570stringList_);
m570damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m570damagingMoveData_;
}
static MoveData m23(){
StatusMoveData m571statusMoveData_ = Instances.newStatusMoveData();
m571statusMoveData_.setCounterableMove(true);
m571statusMoveData_.setPp(15);
StringList m571stringList_=new StringList(new CollCapacity(1));
m571stringList_.add(I_VOL);
m571statusMoveData_.setTypes(m571stringList_);
m571stringList_=new StringList(new CollCapacity(1));
m571stringList_.add(I_VOL);
m571statusMoveData_.setBoostedTypes(m571stringList_);
m571statusMoveData_.setAccuracy(R_1);
CustList<Effect> m571custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m571effectTeam_=Instances.newEffectTeam();
IdList<Statistic> m571enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m571enumListStatistic_.add(Statistic.EVASINESS);
m571effectTeam_.setForbiddenBoost(m571enumListStatistic_);
m571enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m571enumListStatistic_.add(Statistic.EVASINESS);
m571effectTeam_.setCancelChgtStatFoeTeam(m571enumListStatistic_);
m571stringList_=new StringList(new CollCapacity(7));
m571stringList_.add(I_MUR_LUMIERE);
m571stringList_.add(I_PROTECTION);
m571stringList_.add(I_RUNE_PROTECT);
m571stringList_.add(I_BRUME);
m571stringList_.add(I_PICOTS);
m571stringList_.add(I_PIEGE_DE_ROC);
m571stringList_.add(I_PICS_TOXIK);
m571effectTeam_.setDisableFoeTeamEffects(m571stringList_);
m571effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m571effectTeam_.setFail(ES);
m571custListEffect_.add(m571effectTeam_);
m571statusMoveData_.setEffects(m571custListEffect_);
m571statusMoveData_.setRankIncrementNbRound(13);
m571statusMoveData_.setStoppableMoveMulti(true);
m571statusMoveData_.setIgnVarAccurUserNeg(true);
m571statusMoveData_.setIgnVarEvasTargetPos(true);
m571statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m571statusMoveData_;
}
static MoveData m24(){
StatusMoveData m572statusMoveData_ = Instances.newStatusMoveData();
m572statusMoveData_.setThievableMove(true);
m572statusMoveData_.setCounterableMove(true);
m572statusMoveData_.setPp(15);
StringList m572stringList_=new StringList(new CollCapacity(1));
m572stringList_.add(I_PSY);
m572statusMoveData_.setTypes(m572stringList_);
m572stringList_=new StringList(new CollCapacity(1));
m572stringList_.add(I_PSY);
m572statusMoveData_.setBoostedTypes(m572stringList_);
m572statusMoveData_.setAccuracy(R_1);
CustList<Effect> m572custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m572effectTeam_=Instances.newEffectTeam();
m572effectTeam_.setForbiddingHealing(true);
m572effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m572effectTeam_.setFail(ES);
m572custListEffect_.add(m572effectTeam_);
m572statusMoveData_.setEffects(m572custListEffect_);
m572statusMoveData_.setRankIncrementNbRound(14);
m572statusMoveData_.setStoppableMoveMulti(true);
m572statusMoveData_.setIgnVarAccurUserNeg(true);
m572statusMoveData_.setIgnVarEvasTargetPos(true);
m572statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m572statusMoveData_;
}
}
