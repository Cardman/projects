package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit10 extends CstIgame{
private MvInit10(){}
static MoveData m250(){
DamagingMoveData m602damagingMoveData_ = Instances.newDamagingMoveData();
m602damagingMoveData_.setCategory(I_SPECIALE);
m602damagingMoveData_.setStoppableMoveKoSingle(true);
m602damagingMoveData_.setPp((short)5);
StringList m602stringList_=new StringList(new CollCapacity(1));
m602stringList_.add(I_FEU);
m602damagingMoveData_.setTypes(m602stringList_);
m602stringList_=new StringList(new CollCapacity(1));
m602stringList_.add(I_FEU);
m602damagingMoveData_.setBoostedTypes(m602stringList_);
m602damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m602custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m602effectDamage_=Instances.newEffectDamage();
m602effectDamage_.setPower(R_100);
m602effectDamage_.setUserAttack(true);
m602effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m602effectDamage_.setTargetDefense(true);
m602effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m602effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m602effectDamage_.setFail(ES);
m602custListEffect_.add(m602effectDamage_);
EffectStatus m602effectStatus_=Instances.newEffectStatus();
MonteCarloString m602monteCarloString_=new MonteCarloString(new CollCapacity(1));
m602monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m602effectStatus_.setLawStatus(m602monteCarloString_);
StringMap<String> m602stringMapString_=new StringMap<String>(new CollCapacity(1));
m602stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m602effectStatus_.setLocalFailStatus(m602stringMapString_);
m602effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m602effectStatus_.setFail(ES);
Ints m602ints_=new Ints(new CollCapacity(1));
m602ints_.add(0);
m602effectStatus_.setRequiredSuccessfulEffects(m602ints_);
m602custListEffect_.add(m602effectStatus_);
m602damagingMoveData_.setEffects(m602custListEffect_);
m602damagingMoveData_.setStoppableMoveSolo(true);
m602damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m602damagingMoveData_;
}
static MoveData m251(){
DamagingMoveData m603damagingMoveData_ = Instances.newDamagingMoveData();
m603damagingMoveData_.setCategory(I_SPECIALE);
m603damagingMoveData_.setStoppableMoveKoSingle(true);
m603damagingMoveData_.setPp((short)10);
StringList m603stringList_=new StringList(new CollCapacity(1));
m603stringList_.add(I_FEU);
m603damagingMoveData_.setTypes(m603stringList_);
m603stringList_=new StringList(new CollCapacity(1));
m603stringList_.add(I_FEU);
m603damagingMoveData_.setBoostedTypes(m603stringList_);
m603damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m603custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m603effectDamage_=Instances.newEffectDamage();
m603effectDamage_.setPower(R_65);
m603effectDamage_.setUserAttack(true);
m603effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m603effectDamage_.setTargetDefense(true);
m603effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m603effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m603effectDamage_.setFail(ES);
m603custListEffect_.add(m603effectDamage_);
EffectStatistic m603effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m603enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m603enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,(byte)-1);
m603effectStatistic_.setStatisVarRank(m603enumMapStatisticByte_);
IdMap<Statistic,String> m603enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m603enumMapStatisticString_.addEntry(Statistic.SPECIAL_ATTACK,V_CIBLE_CLONE+GT+R_0);
m603effectStatistic_.setLocalFailStatis(m603enumMapStatisticString_);
m603effectStatistic_.setEvtRate(Rate.newRate(R_1));
m603effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m603effectStatistic_.setFail(ES);
Ints m603ints_=new Ints(new CollCapacity(1));
m603ints_.add(0);
m603effectStatistic_.setRequiredSuccessfulEffects(m603ints_);
m603custListEffect_.add(m603effectStatistic_);
m603damagingMoveData_.setEffects(m603custListEffect_);
m603damagingMoveData_.setStoppableMoveSolo(true);
m603damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m603damagingMoveData_;
}
static MoveData m252(){
StatusMoveData m604statusMoveData_ = Instances.newStatusMoveData();
m604statusMoveData_.setCounterableMove(true);
m604statusMoveData_.setPp((short)15);
StringList m604stringList_=new StringList(new CollCapacity(1));
m604stringList_.add(I_FEU);
m604statusMoveData_.setTypes(m604stringList_);
m604stringList_=new StringList(new CollCapacity(1));
m604stringList_.add(I_FEU);
m604statusMoveData_.setBoostedTypes(m604stringList_);
m604statusMoveData_.setAccuracy(R_3_4);
CustList<Effect> m604custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m604effectStatus_=Instances.newEffectStatus();
MonteCarloString m604monteCarloString_=new MonteCarloString(new CollCapacity(1));
m604monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m604effectStatus_.setLawStatus(m604monteCarloString_);
StringMap<String> m604stringMapString_=new StringMap<String>(new CollCapacity(1));
m604stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m604effectStatus_.setLocalFailStatus(m604stringMapString_);
m604effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m604effectStatus_.setFail(ES);
m604custListEffect_.add(m604effectStatus_);
m604statusMoveData_.setEffects(m604custListEffect_);
m604statusMoveData_.setStoppableMoveSolo(true);
m604statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m604statusMoveData_;
}
static MoveData m253(){
DamagingMoveData m605damagingMoveData_ = Instances.newDamagingMoveData();
m605damagingMoveData_.setCategory(I_SPECIALE);
m605damagingMoveData_.setStoppableMoveKoSingle(true);
m605damagingMoveData_.setPp((short)5);
StringList m605stringList_=new StringList(new CollCapacity(1));
m605stringList_.add(I_GLACE);
m605damagingMoveData_.setTypes(m605stringList_);
m605stringList_=new StringList(new CollCapacity(1));
m605stringList_.add(I_GLACE);
m605damagingMoveData_.setBoostedTypes(m605stringList_);
m605damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m605custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m605effectDamage_=Instances.newEffectDamage();
m605effectDamage_.setPower(R_140);
m605effectDamage_.setUserAttack(true);
m605effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m605effectDamage_.setTargetDefense(true);
m605effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m605effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m605effectDamage_.setFail(ES);
m605custListEffect_.add(m605effectDamage_);
EffectStatus m605effectStatus_=Instances.newEffectStatus();
MonteCarloString m605monteCarloString_=new MonteCarloString(new CollCapacity(2));
m605monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m605monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_3));
m605effectStatus_.setLawStatus(m605monteCarloString_);
StringMap<String> m605stringMapString_=new StringMap<String>(new CollCapacity(1));
m605stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m605effectStatus_.setLocalFailStatus(m605stringMapString_);
m605effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m605effectStatus_.setFail(ES);
Ints m605ints_=new Ints(new CollCapacity(1));
m605ints_.add(0);
m605effectStatus_.setRequiredSuccessfulEffects(m605ints_);
m605custListEffect_.add(m605effectStatus_);
m605damagingMoveData_.setEffects(m605custListEffect_);
m605damagingMoveData_.setNbPrepaRound((short)1);
m605damagingMoveData_.setStoppableMoveSolo(true);
m605damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m605damagingMoveData_;
}
static MoveData m254(){
DamagingMoveData m606damagingMoveData_ = Instances.newDamagingMoveData();
m606damagingMoveData_.setCategory(I_PHYSIQUE);
m606damagingMoveData_.setStoppableMoveKoSingle(true);
m606damagingMoveData_.setPp((short)5);
StringList m606stringList_=new StringList(new CollCapacity(1));
m606stringList_.add(I_FEU);
m606damagingMoveData_.setTypes(m606stringList_);
m606stringList_=new StringList(new CollCapacity(1));
m606stringList_.add(I_FEU);
m606damagingMoveData_.setBoostedTypes(m606stringList_);
m606damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m606custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m606effectDamage_=Instances.newEffectDamage();
m606effectDamage_.setPower(R_100);
m606effectDamage_.setUserAttack(true);
m606effectDamage_.setStatisAtt(Statistic.ATTACK);
m606effectDamage_.setTargetDefense(true);
m606effectDamage_.setStatisDef(Statistic.DEFENSE);
m606effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m606effectDamage_.setFail(ES);
m606custListEffect_.add(m606effectDamage_);
EffectStatus m606effectStatus_=Instances.newEffectStatus();
MonteCarloString m606monteCarloString_=new MonteCarloString(new CollCapacity(2));
m606monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_1));
m606monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m606effectStatus_.setLawStatus(m606monteCarloString_);
StringMap<String> m606stringMapString_=new StringMap<String>(new CollCapacity(1));
m606stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m606effectStatus_.setLocalFailStatus(m606stringMapString_);
m606effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m606effectStatus_.setFail(ES);
Ints m606ints_=new Ints(new CollCapacity(1));
m606ints_.add(0);
m606effectStatus_.setRequiredSuccessfulEffects(m606ints_);
m606custListEffect_.add(m606effectStatus_);
m606damagingMoveData_.setEffects(m606custListEffect_);
m606damagingMoveData_.setStoppableMoveSolo(true);
m606damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m606stringList_=new StringList(new CollCapacity(1));
m606stringList_.add(I_GEL);
m606damagingMoveData_.setDeletedStatus(m606stringList_);
return m606damagingMoveData_;
}
static MoveData m255(){
StatusMoveData m607statusMoveData_ = Instances.newStatusMoveData();
m607statusMoveData_.setCounterableMove(true);
m607statusMoveData_.setPp((short)40);
StringList m607stringList_=new StringList(new CollCapacity(1));
m607stringList_.add(I_NORMAL);
m607statusMoveData_.setTypes(m607stringList_);
m607stringList_=new StringList(new CollCapacity(1));
m607stringList_.add(I_NORMAL);
m607statusMoveData_.setBoostedTypes(m607stringList_);
m607statusMoveData_.setAccuracy(R_1);
CustList<Effect> m607custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectUnprotectFromTypes m607effectUnprotectFromTypes_=Instances.newEffectUnprotectFromTypes();
m607effectUnprotectFromTypes_.setTypes(new CustList<TypesDuo>(new TypesDuo(I_NORMAL,I_SPECTRE),new TypesDuo(I_COMBAT,I_SPECTRE)));
m607effectUnprotectFromTypes_.setTargetChoice(TargetChoice.ANY_FOE);
m607effectUnprotectFromTypes_.setFail(ES);
m607custListEffect_.add(m607effectUnprotectFromTypes_);
m607statusMoveData_.setEffects(m607custListEffect_);
m607statusMoveData_.setStoppableMoveMulti(true);
m607statusMoveData_.setIgnVarAccurUserNeg(true);
m607statusMoveData_.setIgnVarEvasTargetPos(true);
m607statusMoveData_.setTargetChoice(TargetChoice.ANY_FOE);
return m607statusMoveData_;
}
static MoveData m256(){
DamagingMoveData m608damagingMoveData_ = Instances.newDamagingMoveData();
m608damagingMoveData_.setCategory(I_SPECIALE);
m608damagingMoveData_.setStoppableMoveKoSingle(true);
m608damagingMoveData_.setPp((short)25);
StringList m608stringList_=new StringList(new CollCapacity(1));
m608stringList_.add(I_FEU);
m608damagingMoveData_.setTypes(m608stringList_);
m608stringList_=new StringList(new CollCapacity(1));
m608stringList_.add(I_FEU);
m608damagingMoveData_.setBoostedTypes(m608stringList_);
m608damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m608custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m608effectDamage_=Instances.newEffectDamage();
m608effectDamage_.setPower(R_40);
m608effectDamage_.setUserAttack(true);
m608effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m608effectDamage_.setTargetDefense(true);
m608effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m608effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m608effectDamage_.setFail(ES);
m608custListEffect_.add(m608effectDamage_);
EffectStatus m608effectStatus_=Instances.newEffectStatus();
MonteCarloString m608monteCarloString_=new MonteCarloString(new CollCapacity(2));
m608monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m608monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m608effectStatus_.setLawStatus(m608monteCarloString_);
StringMap<String> m608stringMapString_=new StringMap<String>(new CollCapacity(1));
m608stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m608effectStatus_.setLocalFailStatus(m608stringMapString_);
m608effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m608effectStatus_.setFail(ES);
Ints m608ints_=new Ints(new CollCapacity(1));
m608ints_.add(0);
m608effectStatus_.setRequiredSuccessfulEffects(m608ints_);
m608custListEffect_.add(m608effectStatus_);
m608damagingMoveData_.setEffects(m608custListEffect_);
m608damagingMoveData_.setStoppableMoveSolo(true);
m608damagingMoveData_.setStoppableMoveMulti(true);
m608damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m608damagingMoveData_;
}
static MoveData m257(){
DamagingMoveData m609damagingMoveData_ = Instances.newDamagingMoveData();
m609damagingMoveData_.setCategory(I_SPECIALE);
m609damagingMoveData_.setStoppableMoveKoSingle(true);
m609damagingMoveData_.setPp((short)5);
StringList m609stringList_=new StringList(new CollCapacity(1));
m609stringList_.add(I_FEU);
m609damagingMoveData_.setTypes(m609stringList_);
m609stringList_=new StringList(new CollCapacity(1));
m609stringList_.add(I_FEU);
m609damagingMoveData_.setBoostedTypes(m609stringList_);
m609damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m609custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m609effectDamage_=Instances.newEffectDamage();
m609effectDamage_.setPower(R_130);
m609effectDamage_.setUserAttack(true);
m609effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m609effectDamage_.setTargetDefense(true);
m609effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m609effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m609effectDamage_.setFail(ES);
m609custListEffect_.add(m609effectDamage_);
EffectStatus m609effectStatus_=Instances.newEffectStatus();
MonteCarloString m609monteCarloString_=new MonteCarloString(new CollCapacity(2));
m609monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_4));
m609monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m609effectStatus_.setLawStatus(m609monteCarloString_);
StringMap<String> m609stringMapString_=new StringMap<String>(new CollCapacity(1));
m609stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m609effectStatus_.setLocalFailStatus(m609stringMapString_);
m609effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m609effectStatus_.setFail(ES);
Ints m609ints_=new Ints(new CollCapacity(1));
m609ints_.add(0);
m609effectStatus_.setRequiredSuccessfulEffects(m609ints_);
m609custListEffect_.add(m609effectStatus_);
m609damagingMoveData_.setEffects(m609custListEffect_);
m609damagingMoveData_.setStoppableMoveSolo(true);
m609damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m609damagingMoveData_;
}
static MoveData m258(){
DamagingMoveData m610damagingMoveData_ = Instances.newDamagingMoveData();
m610damagingMoveData_.setCategory(I_SPECIALE);
m610damagingMoveData_.setStoppableMoveKoSingle(true);
m610damagingMoveData_.setPp((short)5);
StringList m610stringList_=new StringList(new CollCapacity(1));
m610stringList_.add(I_FEU);
m610damagingMoveData_.setTypes(m610stringList_);
m610stringList_=new StringList(new CollCapacity(1));
m610stringList_.add(I_FEU);
m610damagingMoveData_.setBoostedTypes(m610stringList_);
m610damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m610custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m610effectDamage_=Instances.newEffectDamage();
m610effectDamage_.setPower(R_100+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_ECLAIR_CROIX+OP+R_1+RP);
m610effectDamage_.setUserAttack(true);
m610effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m610effectDamage_.setTargetDefense(true);
m610effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m610effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m610effectDamage_.setFail(ES);
m610custListEffect_.add(m610effectDamage_);
m610damagingMoveData_.setEffects(m610custListEffect_);
m610damagingMoveData_.setStoppableMoveSolo(true);
m610damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m610damagingMoveData_;
}
static MoveData m259(){
StatusMoveData m611statusMoveData_ = Instances.newStatusMoveData();
m611statusMoveData_.setPp((short)20);
StringList m611stringList_=new StringList(new CollCapacity(1));
m611stringList_.add(I_NORMAL);
m611statusMoveData_.setTypes(m611stringList_);
m611stringList_=new StringList(new CollCapacity(1));
m611stringList_.add(I_NORMAL);
m611statusMoveData_.setBoostedTypes(m611stringList_);
m611statusMoveData_.setAccuracy(R_1);
CustList<Effect> m611custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m611effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m611enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m611enumMapStatisticByte_.addEntry(Statistic.ACCURACY,(byte)-1);
m611effectStatistic_.setStatisVarRank(m611enumMapStatisticByte_);
IdMap<Statistic,String> m611enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m611enumMapStatisticString_.addEntry(Statistic.ACCURACY,V_CIBLE_CLONE+GT+R_0);
m611effectStatistic_.setLocalFailStatis(m611enumMapStatisticString_);
m611effectStatistic_.setEvtRate(Rate.newRate(R_1));
m611effectStatistic_.setTargetChoice(TargetChoice.ADJ_MULT);
m611effectStatistic_.setFail(ES);
m611custListEffect_.add(m611effectStatistic_);
m611statusMoveData_.setEffects(m611custListEffect_);
m611statusMoveData_.setStoppableMoveSolo(true);
m611statusMoveData_.setStoppableMoveMulti(true);
m611statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m611statusMoveData_;
}
static MoveData m260(){
StatusMoveData m612statusMoveData_ = Instances.newStatusMoveData();
m612statusMoveData_.setCounterableMove(true);
m612statusMoveData_.setPp((short)15);
StringList m612stringList_=new StringList(new CollCapacity(1));
m612stringList_.add(I_TENEBRE);
m612statusMoveData_.setTypes(m612stringList_);
m612stringList_=new StringList(new CollCapacity(1));
m612stringList_.add(I_TENEBRE);
m612statusMoveData_.setBoostedTypes(m612stringList_);
m612statusMoveData_.setAccuracy(R_1);
CustList<Effect> m612custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectStatus m612effectStatus_=Instances.newEffectStatus();
MonteCarloString m612monteCarloString_=new MonteCarloString(new CollCapacity(1));
m612monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m612effectStatus_.setLawStatus(m612monteCarloString_);
StringMap<String> m612stringMapString_=new StringMap<String>(new CollCapacity(1));
m612stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m612effectStatus_.setLocalFailStatus(m612stringMapString_);
m612effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m612effectStatus_.setFail(ES);
m612custListEffect_.add(m612effectStatus_);
EffectStatistic m612effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m612enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m612enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,(byte)1);
m612effectStatistic_.setStatisVarRank(m612enumMapStatisticByte_);
m612effectStatistic_.setEvtRate(Rate.newRate(R_1));
m612effectStatistic_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m612effectStatistic_.setFail(ES);
Ints m612ints_=new Ints(new CollCapacity(1));
m612ints_.add(0);
m612effectStatistic_.setRequiredSuccessfulEffects(m612ints_);
m612custListEffect_.add(m612effectStatistic_);
m612statusMoveData_.setEffects(m612custListEffect_);
m612statusMoveData_.setStoppableMoveSolo(true);
m612statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m612statusMoveData_;
}
static MoveData m261(){
DamagingMoveData m613damagingMoveData_ = Instances.newDamagingMoveData();
m613damagingMoveData_.setCategory(I_PHYSIQUE);
m613damagingMoveData_.setDirect(true);
m613damagingMoveData_.setStoppableMoveKoSingle(true);
m613damagingMoveData_.setPp((short)15);
StringList m613stringList_=new StringList(new CollCapacity(1));
m613stringList_.add(I_NORMAL);
m613damagingMoveData_.setTypes(m613stringList_);
m613stringList_=new StringList(new CollCapacity(1));
m613stringList_.add(I_NORMAL);
m613damagingMoveData_.setBoostedTypes(m613stringList_);
m613damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m613custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m613effectDamage_=Instances.newEffectDamage();
m613effectDamage_.setPower(A_CARACSEMIOUVERTD+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_0+OC+R_2+RP+OM+R_200+OP+A_CARACSEMIOUVERTD+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_2+OC+R_6+RP+OM+R_150+OP+A_CARACSEMIOUVERTD+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_6+OC+R_13+RP+OM+R_100+OP+A_CARACSEMIOUVERTD+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_13+OC+R_22+RP+OM+R_80+OP+A_CARACSEMIOUVERTD+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_22+OC+R_43+RP+OM+R_40+OP+A_CARACDROITEFERME+LP+R_64+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP+OC+R_43+RP+OM+R_20);
m613effectDamage_.setUserAttack(true);
m613effectDamage_.setStatisAtt(Statistic.ATTACK);
m613effectDamage_.setTargetDefense(true);
m613effectDamage_.setStatisDef(Statistic.DEFENSE);
m613effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m613effectDamage_.setFail(ES);
m613custListEffect_.add(m613effectDamage_);
m613damagingMoveData_.setEffects(m613custListEffect_);
m613damagingMoveData_.setStoppableMoveSolo(true);
m613damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m613damagingMoveData_;
}
static MoveData m262(){
DamagingMoveData m614damagingMoveData_ = Instances.newDamagingMoveData();
m614damagingMoveData_.setCategory(I_PHYSIQUE);
m614damagingMoveData_.setDirect(true);
m614damagingMoveData_.setStoppableMoveKoSingle(true);
m614damagingMoveData_.setPp((short)10);
StringList m614stringList_=new StringList(new CollCapacity(2));
m614stringList_.add(I_COMBAT);
m614stringList_.add(I_VOL);
m614damagingMoveData_.setTypes(m614stringList_);
m614stringList_=new StringList(new CollCapacity(2));
m614stringList_.add(I_COMBAT);
m614stringList_.add(I_VOL);
m614damagingMoveData_.setBoostedTypes(m614stringList_);
m614damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m614custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m614effectDamage_=Instances.newEffectDamage();
m614effectDamage_.setPower(R_80);
m614effectDamage_.setUserAttack(true);
m614effectDamage_.setStatisAtt(Statistic.ATTACK);
m614effectDamage_.setTargetDefense(true);
m614effectDamage_.setStatisDef(Statistic.DEFENSE);
m614effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m614effectDamage_.setFail(ES);
m614custListEffect_.add(m614effectDamage_);
m614damagingMoveData_.setEffects(m614custListEffect_);
m614damagingMoveData_.setStoppableMoveSolo(true);
m614damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m614damagingMoveData_;
}
static MoveData m263(){
DamagingMoveData m615damagingMoveData_ = Instances.newDamagingMoveData();
m615damagingMoveData_.setCategory(I_PHYSIQUE);
m615damagingMoveData_.setDirect(true);
m615damagingMoveData_.setStoppableMoveKoSingle(true);
m615damagingMoveData_.setPp((short)15);
StringList m615stringList_=new StringList(new CollCapacity(1));
m615stringList_.add(I_NORMAL);
m615damagingMoveData_.setTypes(m615stringList_);
m615stringList_=new StringList(new CollCapacity(1));
m615stringList_.add(I_NORMAL);
m615damagingMoveData_.setBoostedTypes(m615stringList_);
m615damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m615custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m615effectDamage_=Instances.newEffectDamage();
m615effectDamage_.setPower(R_80);
m615effectDamage_.setUserAttack(true);
m615effectDamage_.setStatisAtt(Statistic.ATTACK);
m615effectDamage_.setTargetDefense(true);
m615effectDamage_.setStatisDef(Statistic.DEFENSE);
m615effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m615effectDamage_.setFail(ES);
m615custListEffect_.add(m615effectDamage_);
m615damagingMoveData_.setEffects(m615custListEffect_);
m615damagingMoveData_.setStoppableMoveSolo(true);
m615damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m615damagingMoveData_;
}
static MoveData m264(){
DamagingMoveData m616damagingMoveData_ = Instances.newDamagingMoveData();
m616damagingMoveData_.setCategory(I_SPECIALE);
m616damagingMoveData_.setStoppableMoveKoSingle(true);
m616damagingMoveData_.setPp((short)10);
StringList m616stringList_=new StringList(new CollCapacity(1));
m616stringList_.add(I_PSY);
m616damagingMoveData_.setTypes(m616stringList_);
m616stringList_=new StringList(new CollCapacity(1));
m616stringList_.add(I_PSY);
m616damagingMoveData_.setBoostedTypes(m616stringList_);
m616damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m616custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m616effectDamage_=Instances.newEffectDamage();
m616effectDamage_.setPower(A_MIN+LP+R_20+OM+V_SOMME_BOOST_POS_LANCEUR+OP+R_60+OC+R_200+RP);
m616effectDamage_.setUserAttack(true);
m616effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m616effectDamage_.setTargetDefense(true);
m616effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m616effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m616effectDamage_.setFail(ES);
m616custListEffect_.add(m616effectDamage_);
m616damagingMoveData_.setEffects(m616custListEffect_);
m616damagingMoveData_.setStoppableMoveSolo(true);
m616damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m616damagingMoveData_;
}
static MoveData m265(){
DamagingMoveData m617damagingMoveData_ = Instances.newDamagingMoveData();
m617damagingMoveData_.setCategory(I_PHYSIQUE);
m617damagingMoveData_.setStoppableMoveKoSingle(true);
m617damagingMoveData_.setPp((short)20);
StringList m617stringList_=new StringList(new CollCapacity(1));
m617stringList_.add(I_NORMAL);
m617damagingMoveData_.setTypes(m617stringList_);
m617stringList_=new StringList(new CollCapacity(1));
m617stringList_.add(I_NORMAL);
m617damagingMoveData_.setBoostedTypes(m617stringList_);
m617damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m617custListEffect_ = new CustList<Effect>(new CollCapacity(8));
EffectDamage m617effectDamage_=Instances.newEffectDamage();
m617effectDamage_.setPower(R_70);
m617effectDamage_.setUserAttack(true);
m617effectDamage_.setStatisAtt(Statistic.ATTACK);
m617effectDamage_.setTargetDefense(true);
m617effectDamage_.setStatisDef(Statistic.DEFENSE);
m617effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectDamage_.setFail(ES);
m617custListEffect_.add(m617effectDamage_);
EffectStatus m617effectStatus_=Instances.newEffectStatus();
MonteCarloString m617monteCarloString_=new MonteCarloString(new CollCapacity(1));
m617monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m617effectStatus_.setLawStatus(m617monteCarloString_);
StringMap<String> m617stringMapString_=new StringMap<String>(new CollCapacity(1));
m617stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m617effectStatus_.setLocalFailStatus(m617stringMapString_);
m617effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatus_.setFail(ES);
Ints m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatus_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatus_);
EffectStatistic m617effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m617enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m617enumMapStatisticByte_.addEntry(Statistic.ACCURACY,(byte)-1);
m617effectStatistic_.setStatisVarRank(m617enumMapStatisticByte_);
IdMap<Statistic,String> m617enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m617enumMapStatisticString_.addEntry(Statistic.ACCURACY,V_CIBLE_CLONE+GT+R_0);
m617effectStatistic_.setLocalFailStatis(m617enumMapStatisticString_);
m617effectStatistic_.setEvtRate(Rate.newRate(R_1));
m617effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatistic_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatistic_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatistic_);
m617effectStatistic_=Instances.newEffectStatistic();
m617enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m617enumMapStatisticByte_.addEntry(Statistic.ACCURACY,(byte)-1);
m617effectStatistic_.setStatisVarRank(m617enumMapStatisticByte_);
m617enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m617enumMapStatisticString_.addEntry(Statistic.ACCURACY,V_CIBLE_CLONE+GT+R_0);
m617effectStatistic_.setLocalFailStatis(m617enumMapStatisticString_);
m617effectStatistic_.setEvtRate(Rate.newRate(R_1));
m617effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatistic_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatistic_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatistic_);
m617effectStatus_=Instances.newEffectStatus();
m617monteCarloString_=new MonteCarloString(new CollCapacity(1));
m617monteCarloString_.addQuickEvent(I_SOMMEIL,LgInt.newLgInt(R_1));
m617effectStatus_.setLawStatus(m617monteCarloString_);
m617stringMapString_=new StringMap<String>(new CollCapacity(1));
m617stringMapString_.addEntry(I_SOMMEIL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_SOMMEIL+OS+I_SOMMEIL_REPOS+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m617effectStatus_.setLocalFailStatus(m617stringMapString_);
m617effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatus_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatus_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatus_);
EffectStatistic m617effectStatistic2_=Instances.newEffectStatistic();
m617enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m617enumMapStatisticByte_.addEntry(Statistic.ATTACK,(byte)-1);
m617effectStatistic2_.setStatisVarRank(m617enumMapStatisticByte_);
m617enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m617enumMapStatisticString_.addEntry(Statistic.ATTACK,V_CIBLE_CLONE+GT+R_0);
m617effectStatistic2_.setLocalFailStatis(m617enumMapStatisticString_);
m617effectStatistic2_.setEvtRate(Rate.newRate(R_1));
m617effectStatistic2_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatistic2_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatistic2_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatistic2_);
m617effectStatus_=Instances.newEffectStatus();
m617monteCarloString_=new MonteCarloString(new CollCapacity(1));
m617monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_1));
m617effectStatus_.setLawStatus(m617monteCarloString_);
m617stringMapString_=new StringMap<String>(new CollCapacity(1));
m617stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m617effectStatus_.setLocalFailStatus(m617stringMapString_);
m617effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatus_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatus_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatus_);
m617effectStatus_=Instances.newEffectStatus();
m617monteCarloString_=new MonteCarloString(new CollCapacity(1));
m617monteCarloString_.addQuickEvent(I_GEL,LgInt.newLgInt(R_1));
m617effectStatus_.setLawStatus(m617monteCarloString_);
m617stringMapString_=new StringMap<String>(new CollCapacity(1));
m617stringMapString_.addEntry(I_GEL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_GEL+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_GLACE+RB+RP+RP+GT+R_0);
m617effectStatus_.setLocalFailStatus(m617stringMapString_);
m617effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m617effectStatus_.setFail(ES);
m617ints_=new Ints(new CollCapacity(1));
m617ints_.add(0);
m617effectStatus_.setRequiredSuccessfulEffects(m617ints_);
m617custListEffect_.add(m617effectStatus_);
m617damagingMoveData_.setEffects(m617custListEffect_);
m617damagingMoveData_.setStoppableMoveSolo(true);
m617damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m617damagingMoveData_;
}
static MoveData m266(){
DamagingMoveData m618damagingMoveData_ = Instances.newDamagingMoveData();
m618damagingMoveData_.setCategory(I_PHYSIQUE);
m618damagingMoveData_.setStoppableMoveKoSingle(true);
m618damagingMoveData_.setPp((short)10);
StringList m618stringList_=new StringList(new CollCapacity(1));
m618stringList_.add(I_SOL);
m618damagingMoveData_.setTypes(m618stringList_);
m618stringList_=new StringList(new CollCapacity(1));
m618stringList_.add(I_SOL);
m618damagingMoveData_.setBoostedTypes(m618stringList_);
m618damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m618custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m618effectDamage_=Instances.newEffectDamage();
m618effectDamage_.setPower(R_90);
m618effectDamage_.setUserAttack(true);
m618effectDamage_.setStatisAtt(Statistic.ATTACK);
m618effectDamage_.setTargetDefense(true);
m618effectDamage_.setStatisDef(Statistic.DEFENSE);
m618effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m618effectDamage_.setFail(ES);
m618custListEffect_.add(m618effectDamage_);
m618damagingMoveData_.setEffects(m618custListEffect_);
m618damagingMoveData_.setStoppableMoveSolo(true);
m618damagingMoveData_.setStoppableMoveMulti(true);
m618damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m618damagingMoveData_;
}
static MoveData m267(){
StatusMoveData m619statusMoveData_ = Instances.newStatusMoveData();
m619statusMoveData_.setThievableMove(true);
m619statusMoveData_.setPp((short)20);
StringList m619stringList_=new StringList(new CollCapacity(1));
m619stringList_.add(I_PSY);
m619statusMoveData_.setTypes(m619stringList_);
m619stringList_=new StringList(new CollCapacity(1));
m619stringList_.add(I_PSY);
m619statusMoveData_.setBoostedTypes(m619stringList_);
m619statusMoveData_.setAccuracy(R_1);
CustList<Effect> m619custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m619effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m619enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(2));
m619enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)1);
m619enumMapStatisticByte_.addEntry(Statistic.DEFENSE,(byte)1);
m619effectStatistic_.setStatisVarRank(m619enumMapStatisticByte_);
m619effectStatistic_.setEvtRate(Rate.newRate(R_1));
m619effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m619effectStatistic_.setFail(ES);
m619custListEffect_.add(m619effectStatistic_);
m619statusMoveData_.setEffects(m619custListEffect_);
m619statusMoveData_.setStoppableMoveMulti(true);
m619statusMoveData_.setIgnVarAccurUserNeg(true);
m619statusMoveData_.setIgnVarEvasTargetPos(true);
m619statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m619statusMoveData_;
}
static MoveData m268(){
StatusMoveData m620statusMoveData_ = Instances.newStatusMoveData();
m620statusMoveData_.setPp((short)20);
StringList m620stringList_=new StringList(new CollCapacity(1));
m620stringList_.add(I_NORMAL);
m620statusMoveData_.setTypes(m620stringList_);
m620stringList_=new StringList(new CollCapacity(1));
m620stringList_.add(I_NORMAL);
m620statusMoveData_.setBoostedTypes(m620stringList_);
m620statusMoveData_.setAccuracy(R_19_20);
CustList<Effect> m620custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectInvoke m620effectInvoke_=Instances.newEffectInvoke();
IdMap<EnvironmentType,String> m620enumMapEnvironmentTypeString_=new IdMap<EnvironmentType,String>(new CollCapacity(8));
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.GRASS,I_CANON_GRAINE);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.ROCK,I_EBOULEMENT);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.ROAD,I_SEISME);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.WATER,I_HYDROCANON);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.NOTHING,I_BALL_OMBRE);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.SNOW,I_BLIZZARD);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.DESERT,I_SEISME);
m620enumMapEnvironmentTypeString_.addEntry(EnvironmentType.BUILDING,I_TRIPLATTAQUE);
m620effectInvoke_.setMoveFctEnv(m620enumMapEnvironmentTypeString_);
m620effectInvoke_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m620effectInvoke_.setFail(ES);
m620custListEffect_.add(m620effectInvoke_);
m620statusMoveData_.setEffects(m620custListEffect_);
m620statusMoveData_.setStoppableMoveSolo(true);
m620statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m620statusMoveData_;
}
static MoveData m269(){
DamagingMoveData m621damagingMoveData_ = Instances.newDamagingMoveData();
m621damagingMoveData_.setCategory(I_PHYSIQUE);
m621damagingMoveData_.setDirect(true);
m621damagingMoveData_.setStoppableMoveKoSingle(true);
m621damagingMoveData_.setPp((short)30);
StringList m621stringList_=new StringList(new CollCapacity(1));
m621stringList_.add(I_NORMAL);
m621damagingMoveData_.setTypes(m621stringList_);
m621stringList_=new StringList(new CollCapacity(1));
m621stringList_.add(I_NORMAL);
m621damagingMoveData_.setBoostedTypes(m621stringList_);
m621damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m621custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m621effectDamage_=Instances.newEffectDamage();
m621effectDamage_.setPower(R_55);
m621effectDamage_.setUserAttack(true);
m621effectDamage_.setStatisAtt(Statistic.ATTACK);
m621effectDamage_.setTargetDefense(true);
m621effectDamage_.setStatisDef(Statistic.DEFENSE);
m621effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m621effectDamage_.setFail(ES);
m621custListEffect_.add(m621effectDamage_);
m621damagingMoveData_.setEffects(m621custListEffect_);
m621damagingMoveData_.setStoppableMoveSolo(true);
m621damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m621damagingMoveData_;
}
static MoveData m270(){
DamagingMoveData m622damagingMoveData_ = Instances.newDamagingMoveData();
m622damagingMoveData_.setCategory(I_PHYSIQUE);
m622damagingMoveData_.setDirect(true);
m622damagingMoveData_.setStoppableMoveKoSingle(true);
m622damagingMoveData_.setPp((short)10);
StringList m622stringList_=new StringList(new CollCapacity(1));
m622stringList_.add(I_COMBAT);
m622damagingMoveData_.setTypes(m622stringList_);
m622stringList_=new StringList(new CollCapacity(1));
m622stringList_.add(I_COMBAT);
m622damagingMoveData_.setBoostedTypes(m622stringList_);
m622damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m622custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m622effectDamage_=Instances.newEffectDamage();
m622effectDamage_.setPower(R_60);
m622effectDamage_.setUserAttack(true);
m622effectDamage_.setStatisAtt(Statistic.ATTACK);
m622effectDamage_.setTargetDefense(true);
m622effectDamage_.setStatisDef(Statistic.DEFENSE);
m622effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m622effectDamage_.setFail(ES);
m622custListEffect_.add(m622effectDamage_);
EffectStatus m622effectStatus_=Instances.newEffectStatus();
MonteCarloString m622monteCarloString_=new MonteCarloString(new CollCapacity(2));
m622monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m622monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_3));
m622effectStatus_.setLawStatus(m622monteCarloString_);
StringMap<String> m622stringMapString_=new StringMap<String>(new CollCapacity(1));
m622stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m622effectStatus_.setLocalFailStatus(m622stringMapString_);
m622effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m622effectStatus_.setFail(ES);
Ints m622ints_=new Ints(new CollCapacity(1));
m622ints_.add(0);
m622effectStatus_.setRequiredSuccessfulEffects(m622ints_);
m622custListEffect_.add(m622effectStatus_);
m622damagingMoveData_.setEffects(m622custListEffect_);
m622damagingMoveData_.setStoppableMoveSolo(true);
m622damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m622damagingMoveData_;
}
static MoveData m271(){
DamagingMoveData m623damagingMoveData_ = Instances.newDamagingMoveData();
m623damagingMoveData_.setCategory(I_PHYSIQUE);
m623damagingMoveData_.setDirect(true);
m623damagingMoveData_.setStoppableMoveKoSingle(true);
m623damagingMoveData_.setPp((short)15);
StringList m623stringList_=new StringList(new CollCapacity(1));
m623stringList_.add(I_PLANTE);
m623damagingMoveData_.setTypes(m623stringList_);
m623stringList_=new StringList(new CollCapacity(1));
m623stringList_.add(I_PLANTE);
m623damagingMoveData_.setBoostedTypes(m623stringList_);
m623damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m623custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m623effectDamage_=Instances.newEffectDamage();
m623effectDamage_.setPower(R_75);
m623effectDamage_.setUserAttack(true);
m623effectDamage_.setStatisAtt(Statistic.ATTACK);
m623effectDamage_.setTargetDefense(true);
m623effectDamage_.setStatisDef(Statistic.DEFENSE);
m623effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m623effectDamage_.setFail(ES);
m623custListEffect_.add(m623effectDamage_);
m623damagingMoveData_.setEffects(m623custListEffect_);
m623damagingMoveData_.setStoppableMoveSolo(true);
m623damagingMoveData_.setStoppableMoveMulti(true);
m623damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m623damagingMoveData_;
}
static MoveData m272(){
DamagingMoveData m624damagingMoveData_ = Instances.newDamagingMoveData();
m624damagingMoveData_.setCategory(I_PHYSIQUE);
m624damagingMoveData_.setDirect(true);
m624damagingMoveData_.setStoppableMoveKoSingle(true);
m624damagingMoveData_.setPp((short)5);
StringList m624stringList_=new StringList(new CollCapacity(1));
m624stringList_.add(I_ROCHE);
m624damagingMoveData_.setTypes(m624stringList_);
m624stringList_=new StringList(new CollCapacity(1));
m624stringList_.add(I_ROCHE);
m624damagingMoveData_.setBoostedTypes(m624stringList_);
m624damagingMoveData_.setAccuracy(R_4_5);
CustList<Effect> m624custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m624effectDamage_=Instances.newEffectDamage();
m624effectDamage_.setPower(R_150);
m624effectDamage_.setUserAttack(true);
m624effectDamage_.setStatisAtt(Statistic.ATTACK);
m624effectDamage_.setTargetDefense(true);
m624effectDamage_.setStatisDef(Statistic.DEFENSE);
m624effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m624effectDamage_.setFail(ES);
m624custListEffect_.add(m624effectDamage_);
EffectDamageRate m624effectDamageRate_=Instances.newEffectDamageRate();
m624effectDamageRate_.setRateDamage(Rate.newRate(OD+R_1_2));
m624effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m624effectDamageRate_.setFail(ES);
Ints m624ints_=new Ints(new CollCapacity(1));
m624ints_.add(0);
m624effectDamageRate_.setRequiredSuccessfulEffects(m624ints_);
m624custListEffect_.add(m624effectDamageRate_);
m624damagingMoveData_.setEffects(m624custListEffect_);
m624damagingMoveData_.setStoppableMoveSolo(true);
m624damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m624damagingMoveData_;
}
static MoveData m273(){
DamagingMoveData m625damagingMoveData_ = Instances.newDamagingMoveData();
m625damagingMoveData_.setCategory(I_PHYSIQUE);
m625damagingMoveData_.setDirect(true);
m625damagingMoveData_.setStoppableMoveKoSingle(true);
m625damagingMoveData_.setPp((short)20);
StringList m625stringList_=new StringList(new CollCapacity(1));
m625stringList_.add(I_COMBAT);
m625damagingMoveData_.setTypes(m625stringList_);
m625stringList_=new StringList(new CollCapacity(1));
m625stringList_.add(I_COMBAT);
m625damagingMoveData_.setBoostedTypes(m625stringList_);
m625damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m625custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m625effectDamage_=Instances.newEffectDamage();
MonteCarloString m625monteCarloString_=new MonteCarloString(new CollCapacity(1));
m625monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU,LgInt.newLgInt(R_1));
m625effectDamage_.setDamageLaw(m625monteCarloString_);
m625effectDamage_.setPower(ES);
m625effectDamage_.setUserAttack(true);
m625effectDamage_.setStatisAtt(Statistic.ATTACK);
m625effectDamage_.setTargetDefense(true);
m625effectDamage_.setStatisDef(Statistic.DEFENSE);
m625effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m625effectDamage_.setFail(ES);
m625custListEffect_.add(m625effectDamage_);
m625damagingMoveData_.setEffects(m625custListEffect_);
m625damagingMoveData_.setStoppableMoveSolo(true);
m625damagingMoveData_.setStoppableMoveMulti(true);
m625damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m625damagingMoveData_;
}
static MoveData m274(){
DamagingMoveData m626damagingMoveData_ = Instances.newDamagingMoveData();
m626damagingMoveData_.setCategory(I_SPECIALE);
m626damagingMoveData_.setStoppableMoveKoSingle(true);
m626damagingMoveData_.setPp((short)10);
StringList m626stringList_=new StringList(new CollCapacity(1));
m626stringList_.add(I_PSY);
m626damagingMoveData_.setTypes(m626stringList_);
m626stringList_=new StringList(new CollCapacity(1));
m626stringList_.add(I_PSY);
m626damagingMoveData_.setBoostedTypes(m626stringList_);
m626damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m626custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m626effectDamage_=Instances.newEffectDamage();
m626effectDamage_.setPower(R_100);
m626effectDamage_.setUserAttack(true);
m626effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m626effectDamage_.setTargetDefense(true);
m626effectDamage_.setStatisDef(Statistic.DEFENSE);
m626effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m626effectDamage_.setFail(ES);
m626custListEffect_.add(m626effectDamage_);
m626damagingMoveData_.setEffects(m626custListEffect_);
m626damagingMoveData_.setStoppableMoveSolo(true);
m626damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m626damagingMoveData_;
}
}
