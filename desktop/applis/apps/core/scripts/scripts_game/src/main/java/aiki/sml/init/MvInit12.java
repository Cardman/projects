package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit12 extends CstIgame{
private MvInit12(){}
static MoveData m300(){
StatusMoveData m656statusMoveData_ = Instances.newStatusMoveData();
m656statusMoveData_.setThievableMove(true);
m656statusMoveData_.setPp(40);
StringList m656stringList_=new StringList(new CollCapacity(1));
m656stringList_.add(I_NORMAL);
m656statusMoveData_.setTypes(m656stringList_);
m656stringList_=new StringList(new CollCapacity(1));
m656stringList_.add(I_NORMAL);
m656statusMoveData_.setBoostedTypes(m656stringList_);
m656statusMoveData_.setAccuracy(R_1);
CustList<Effect> m656custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m656effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m656enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m656enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m656effectStatistic_.setStatisVarRank(m656enumMapStatisticByte_);
m656effectStatistic_.setEvtRate(Rate.newRate(R_1));
m656effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m656effectStatistic_.setFail(ES);
m656custListEffect_.add(m656effectStatistic_);
m656statusMoveData_.setEffects(m656custListEffect_);
m656statusMoveData_.setStoppableMoveMulti(true);
m656statusMoveData_.setIgnVarAccurUserNeg(true);
m656statusMoveData_.setIgnVarEvasTargetPos(true);
m656statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m656statusMoveData_;
}
static MoveData m301(){
StatusMoveData m657statusMoveData_ = Instances.newStatusMoveData();
m657statusMoveData_.setCounterableMove(true);
m657statusMoveData_.setPp(30);
StringList m657stringList_=new StringList(new CollCapacity(1));
m657stringList_.add(I_NORMAL);
m657statusMoveData_.setTypes(m657stringList_);
m657stringList_=new StringList(new CollCapacity(1));
m657stringList_.add(I_NORMAL);
m657statusMoveData_.setBoostedTypes(m657stringList_);
m657statusMoveData_.setAccuracy(R_1);
CustList<Effect> m657custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m657effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m657enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m657enumMapStatisticByte_.addEntry(Statistic.DEFENSE,-1L);
m657effectStatistic_.setStatisVarRank(m657enumMapStatisticByte_);
IdMap<Statistic,String> m657enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m657enumMapStatisticString_.addEntry(Statistic.DEFENSE,V_CIBLE_CLONE+GT+R_0);
m657effectStatistic_.setLocalFailStatis(m657enumMapStatisticString_);
m657effectStatistic_.setEvtRate(Rate.newRate(R_1));
m657effectStatistic_.setTargetChoice(TargetChoice.ADJ_MULT);
m657effectStatistic_.setFail(ES);
m657custListEffect_.add(m657effectStatistic_);
m657statusMoveData_.setEffects(m657custListEffect_);
m657statusMoveData_.setStoppableMoveSolo(true);
m657statusMoveData_.setStoppableMoveMulti(true);
m657statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m657statusMoveData_;
}
static MoveData m302(){
StatusMoveData m658statusMoveData_ = Instances.newStatusMoveData();
m658statusMoveData_.setPp(5);
StringList m658stringList_=new StringList(new CollCapacity(1));
m658stringList_.add(I_NORMAL);
m658statusMoveData_.setTypes(m658stringList_);
m658stringList_=new StringList(new CollCapacity(1));
m658stringList_.add(I_NORMAL);
m658statusMoveData_.setBoostedTypes(m658stringList_);
m658statusMoveData_.setAccuracy(A_DIV+LP+A_MAX+LP+V_LANCEUR_NIVEAU+OD+V_CIBLE_NIVEAU+OC+R_0+RP+OC+R_100+RP);
CustList<Effect> m658custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRemainedHpRate m658effectRemainedHpRate_=Instances.newEffectRemainedHpRate();
m658effectRemainedHpRate_.setRateHp(Rate.newRate(OD+R_1));
m658effectRemainedHpRate_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m658effectRemainedHpRate_.setFail(ES);
m658custListEffect_.add(m658effectRemainedHpRate_);
m658statusMoveData_.setEffects(m658custListEffect_);
m658statusMoveData_.setStoppableMoveSolo(true);
m658statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m658statusMoveData_;
}
static MoveData m303(){
DamagingMoveData m659damagingMoveData_ = Instances.newDamagingMoveData();
m659damagingMoveData_.setCategory(I_PHYSIQUE);
m659damagingMoveData_.setDirect(true);
m659damagingMoveData_.setStoppableMoveKoSingle(true);
m659damagingMoveData_.setPp(5);
StringList m659stringList_=new StringList(new CollCapacity(1));
m659stringList_.add(I_ACIER);
m659damagingMoveData_.setTypes(m659stringList_);
m659stringList_=new StringList(new CollCapacity(1));
m659stringList_.add(I_ACIER);
m659damagingMoveData_.setBoostedTypes(m659stringList_);
m659damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m659custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m659effectDamage_=Instances.newEffectDamage();
m659effectDamage_.setPower(R_1+OP+R_25+OM+A_DIV+LP+V_CIBLE_STATIS+SE+I_SPEED+OC+V_LANCEUR_STATIS+SE+I_SPEED+RP);
m659effectDamage_.setUserAttack(true);
m659effectDamage_.setStatisAtt(Statistic.ATTACK);
m659effectDamage_.setTargetDefense(true);
m659effectDamage_.setStatisDef(Statistic.DEFENSE);
m659effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m659effectDamage_.setFail(ES);
m659custListEffect_.add(m659effectDamage_);
m659damagingMoveData_.setEffects(m659custListEffect_);
m659damagingMoveData_.setStoppableMoveSolo(true);
m659damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m659damagingMoveData_;
}
static MoveData m304(){
StatusMoveData m660statusMoveData_ = Instances.newStatusMoveData();
m660statusMoveData_.setPp(20);
StringList m660stringList_=new StringList(new CollCapacity(1));
m660stringList_.add(I_SPECTRE);
m660statusMoveData_.setTypes(m660stringList_);
m660stringList_=new StringList(new CollCapacity(1));
m660stringList_.add(I_SPECTRE);
m660statusMoveData_.setBoostedTypes(m660stringList_);
m660statusMoveData_.setAccuracy(R_1);
CustList<Effect> m660custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchTypes m660effectSwitchTypes_=Instances.newEffectSwitchTypes();
m660effectSwitchTypes_.setConstValuesType(ConstValuesType.NOTHING);
m660effectSwitchTypes_.setExchangeTypes(ExchangeType.NOTHING);
m660stringList_=new StringList(new CollCapacity(1));
m660stringList_.add(I_SPECTRE);
m660effectSwitchTypes_.setAddedTypes(m660stringList_);
m660effectSwitchTypes_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m660effectSwitchTypes_.setFail(A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_SPECTRE+RB+RP+RP+OE+R_1);
m660custListEffect_.add(m660effectSwitchTypes_);
m660statusMoveData_.setEffects(m660custListEffect_);
m660statusMoveData_.setIgnVarAccurUserNeg(true);
m660statusMoveData_.setIgnVarEvasTargetPos(true);
m660statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m660statusMoveData_;
}
static MoveData m305(){
DamagingMoveData m661damagingMoveData_ = Instances.newDamagingMoveData();
m661damagingMoveData_.setCategory(I_PHYSIQUE);
m661damagingMoveData_.setDirect(true);
m661damagingMoveData_.setStoppableMoveKoSingle(true);
m661damagingMoveData_.setPp(10);
StringList m661stringList_=new StringList(new CollCapacity(1));
m661stringList_.add(I_SPECTRE);
m661damagingMoveData_.setTypes(m661stringList_);
m661stringList_=new StringList(new CollCapacity(1));
m661stringList_.add(I_SPECTRE);
m661damagingMoveData_.setBoostedTypes(m661stringList_);
m661damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m661custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m661effectDamage_=Instances.newEffectDamage();
m661effectDamage_.setPower(R_90);
m661effectDamage_.setUserAttack(true);
m661effectDamage_.setStatisAtt(Statistic.ATTACK);
m661effectDamage_.setTargetDefense(true);
m661effectDamage_.setStatisDef(Statistic.DEFENSE);
m661effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m661effectDamage_.setFail(ES);
m661custListEffect_.add(m661effectDamage_);
m661damagingMoveData_.setEffects(m661custListEffect_);
m661damagingMoveData_.setNbPrepaRound(1);
m661damagingMoveData_.setDisappearBeforeUse(true);
m661damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m661damagingMoveData_;
}
static MoveData m306(){
DamagingMoveData m662damagingMoveData_ = Instances.newDamagingMoveData();
m662damagingMoveData_.setCategory(I_SPECIALE);
m662damagingMoveData_.setDirect(true);
m662damagingMoveData_.setStoppableMoveKoSingle(true);
m662damagingMoveData_.setPp(20);
StringList m662stringList_=new StringList(new CollCapacity(1));
m662stringList_.add(I_INSECTE);
m662damagingMoveData_.setTypes(m662stringList_);
m662stringList_=new StringList(new CollCapacity(1));
m662stringList_.add(I_INSECTE);
m662damagingMoveData_.setBoostedTypes(m662stringList_);
m662damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m662custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m662effectDamage_=Instances.newEffectDamage();
m662effectDamage_.setPower(R_20);
m662effectDamage_.setUserAttack(true);
m662effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m662effectDamage_.setTargetDefense(true);
m662effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m662effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m662effectDamage_.setFail(ES);
m662custListEffect_.add(m662effectDamage_);
EffectEndRoundSingleRelation m662effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> m662longMapRate_=new LongMap<Rate>(new CollCapacity(5));
m662longMapRate_.addEntry(1L,Rate.newRate(R_1_8));
m662longMapRate_.addEntry(2L,Rate.newRate(R_1_8));
m662longMapRate_.addEntry(3L,Rate.newRate(R_1_8));
m662longMapRate_.addEntry(4L,Rate.newRate(R_1_8));
m662longMapRate_.addEntry(5L,Rate.newRate(R_1_8));
m662effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(m662longMapRate_);
MonteCarloNumber m662monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
m662monteCarloNumber_.addQuickEvent(Rate.newRate(R_3),LgInt.newLgInt(R_3));
m662monteCarloNumber_.addQuickEvent(Rate.newRate(R_2),LgInt.newLgInt(R_3));
m662monteCarloNumber_.addQuickEvent(Rate.newRate(R_4),LgInt.newLgInt(R_1));
m662monteCarloNumber_.addQuickEvent(Rate.newRate(R_5),LgInt.newLgInt(R_1));
m662effectEndRoundSingleRelation_.setLawForEnablingEffect(m662monteCarloNumber_);
m662effectEndRoundSingleRelation_.setFailEndRound(V_CIBLE_CLONE+GT+R_0);
m662effectEndRoundSingleRelation_.setEndRoundRank(46);
m662effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m662effectEndRoundSingleRelation_.setFail(V_CIBLE_CLONE+GT+R_0);
Ints m662ints_=new Ints(new CollCapacity(1));
m662ints_.add(0);
m662effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(m662ints_);
m662custListEffect_.add(m662effectEndRoundSingleRelation_);
m662damagingMoveData_.setEffects(m662custListEffect_);
m662damagingMoveData_.setStoppableMoveSolo(true);
m662damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m662damagingMoveData_;
}
static MoveData m307(){
StatusMoveData m663statusMoveData_ = Instances.newStatusMoveData();
m663statusMoveData_.setThievableMove(true);
m663statusMoveData_.setPp(30);
StringList m663stringList_=new StringList(new CollCapacity(1));
m663stringList_.add(I_PSY);
m663statusMoveData_.setTypes(m663stringList_);
m663stringList_=new StringList(new CollCapacity(1));
m663stringList_.add(I_PSY);
m663statusMoveData_.setBoostedTypes(m663stringList_);
m663statusMoveData_.setAccuracy(R_1);
CustList<Effect> m663custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m663effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m663enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m663enumMapStatisticByte_.addEntry(Statistic.SPEED,2L);
m663effectStatistic_.setStatisVarRank(m663enumMapStatisticByte_);
m663effectStatistic_.setEvtRate(Rate.newRate(R_1));
m663effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m663effectStatistic_.setFail(ES);
m663custListEffect_.add(m663effectStatistic_);
m663statusMoveData_.setEffects(m663custListEffect_);
m663statusMoveData_.setStoppableMoveMulti(true);
m663statusMoveData_.setIgnVarAccurUserNeg(true);
m663statusMoveData_.setIgnVarEvasTargetPos(true);
m663statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m663statusMoveData_;
}
static MoveData m308(){
DamagingMoveData m664damagingMoveData_ = Instances.newDamagingMoveData();
m664damagingMoveData_.setCategory(I_PHYSIQUE);
m664damagingMoveData_.setDirect(true);
m664damagingMoveData_.setCannotKo(true);
m664damagingMoveData_.setStoppableMoveKoSingle(true);
m664damagingMoveData_.setPp(40);
StringList m664stringList_=new StringList(new CollCapacity(1));
m664stringList_.add(I_NORMAL);
m664damagingMoveData_.setTypes(m664stringList_);
m664stringList_=new StringList(new CollCapacity(1));
m664stringList_.add(I_NORMAL);
m664damagingMoveData_.setBoostedTypes(m664stringList_);
m664damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m664custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m664effectDamage_=Instances.newEffectDamage();
m664effectDamage_.setPower(R_40);
m664effectDamage_.setUserAttack(true);
m664effectDamage_.setStatisAtt(Statistic.ATTACK);
m664effectDamage_.setTargetDefense(true);
m664effectDamage_.setStatisDef(Statistic.DEFENSE);
m664effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m664effectDamage_.setFail(ES);
m664custListEffect_.add(m664effectDamage_);
m664damagingMoveData_.setEffects(m664custListEffect_);
m664damagingMoveData_.setStoppableMoveSolo(true);
m664damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m664damagingMoveData_;
}
static MoveData m309(){
DamagingMoveData m665damagingMoveData_ = Instances.newDamagingMoveData();
m665damagingMoveData_.setCategory(I_SPECIALE);
m665damagingMoveData_.setStoppableMoveKoSingle(true);
m665damagingMoveData_.setPp(20);
StringList m665stringList_=new StringList(new CollCapacity(1));
m665stringList_.add(I_NORMAL);
m665damagingMoveData_.setTypes(m665stringList_);
m665stringList_=new StringList(new CollCapacity(1));
m665stringList_.add(I_NORMAL);
m665damagingMoveData_.setBoostedTypes(m665stringList_);
m665damagingMoveData_.setPriority(-6);
m665damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m665custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m665effectDamage_=Instances.newEffectDamage();
m665effectDamage_.setPower(R_55);
m665effectDamage_.setUserAttack(true);
m665effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m665effectDamage_.setTargetDefense(true);
m665effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m665effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m665effectDamage_.setFail(ES);
m665custListEffect_.add(m665effectDamage_);
m665damagingMoveData_.setEffects(m665custListEffect_);
m665damagingMoveData_.setStoppableMoveSolo(true);
m665damagingMoveData_.setStoppableMovePrio(true);
m665damagingMoveData_.setSwitchType(SwitchType.CIBLE);
m665damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m665damagingMoveData_;
}
static MoveData m310(){
DamagingMoveData m666damagingMoveData_ = Instances.newDamagingMoveData();
m666damagingMoveData_.setCategory(I_SPECIALE);
m666damagingMoveData_.setStoppableMoveKoSingle(true);
m666damagingMoveData_.setPp(5);
StringList m666stringList_=new StringList(new CollCapacity(1));
m666stringList_.add(I_DRAGON);
m666damagingMoveData_.setTypes(m666stringList_);
m666stringList_=new StringList(new CollCapacity(1));
m666stringList_.add(I_DRAGON);
m666damagingMoveData_.setBoostedTypes(m666stringList_);
m666damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m666custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m666effectDamage_=Instances.newEffectDamage();
m666effectDamage_.setPower(R_150);
m666effectDamage_.setUserAttack(true);
m666effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m666effectDamage_.setTargetDefense(true);
m666effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m666effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m666effectDamage_.setFail(ES);
m666custListEffect_.add(m666effectDamage_);
m666damagingMoveData_.setEffects(m666custListEffect_);
m666damagingMoveData_.setRechargeRound(true);
m666damagingMoveData_.setConstUserChoice(true);
m666damagingMoveData_.setStoppableMoveSolo(true);
m666damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m666damagingMoveData_;
}
static MoveData m311(){
DamagingMoveData m667damagingMoveData_ = Instances.newDamagingMoveData();
m667damagingMoveData_.setCategory(I_SPECIALE);
m667damagingMoveData_.setStoppableMoveKoSingle(true);
m667damagingMoveData_.setPp(5);
StringList m667stringList_=new StringList(new CollCapacity(1));
m667stringList_.add(I_EAU);
m667damagingMoveData_.setTypes(m667stringList_);
m667stringList_=new StringList(new CollCapacity(1));
m667stringList_.add(I_EAU);
m667damagingMoveData_.setBoostedTypes(m667stringList_);
m667damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m667custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m667effectDamage_=Instances.newEffectDamage();
m667effectDamage_.setPower(R_150);
m667effectDamage_.setUserAttack(true);
m667effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m667effectDamage_.setTargetDefense(true);
m667effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m667effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m667effectDamage_.setFail(ES);
m667custListEffect_.add(m667effectDamage_);
m667damagingMoveData_.setEffects(m667custListEffect_);
m667damagingMoveData_.setRechargeRound(true);
m667damagingMoveData_.setConstUserChoice(true);
m667damagingMoveData_.setStoppableMoveSolo(true);
m667damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m667damagingMoveData_;
}
static MoveData m312(){
DamagingMoveData m668damagingMoveData_ = Instances.newDamagingMoveData();
m668damagingMoveData_.setCategory(I_SPECIALE);
m668damagingMoveData_.setStoppableMoveKoSingle(true);
m668damagingMoveData_.setPp(5);
StringList m668stringList_=new StringList(new CollCapacity(1));
m668stringList_.add(I_EAU);
m668damagingMoveData_.setTypes(m668stringList_);
m668stringList_=new StringList(new CollCapacity(1));
m668stringList_.add(I_EAU);
m668damagingMoveData_.setBoostedTypes(m668stringList_);
m668damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m668custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m668effectDamage_=Instances.newEffectDamage();
m668effectDamage_.setPower(R_120);
m668effectDamage_.setUserAttack(true);
m668effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m668effectDamage_.setTargetDefense(true);
m668effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m668effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m668effectDamage_.setFail(ES);
m668custListEffect_.add(m668effectDamage_);
m668damagingMoveData_.setEffects(m668custListEffect_);
m668damagingMoveData_.setStoppableMoveSolo(true);
m668damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m668damagingMoveData_;
}
static MoveData m313(){
DamagingMoveData m669damagingMoveData_ = Instances.newDamagingMoveData();
m669damagingMoveData_.setCategory(I_PHYSIQUE);
m669damagingMoveData_.setDirect(true);
m669damagingMoveData_.setStoppableMoveKoSingle(true);
m669damagingMoveData_.setPp(10);
StringList m669stringList_=new StringList(new CollCapacity(1));
m669stringList_.add(I_EAU);
m669damagingMoveData_.setTypes(m669stringList_);
m669stringList_=new StringList(new CollCapacity(1));
m669stringList_.add(I_EAU);
m669damagingMoveData_.setBoostedTypes(m669stringList_);
m669damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m669custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m669effectDamage_=Instances.newEffectDamage();
m669effectDamage_.setPower(R_90);
m669effectDamage_.setUserAttack(true);
m669effectDamage_.setStatisAtt(Statistic.ATTACK);
m669effectDamage_.setTargetDefense(true);
m669effectDamage_.setStatisDef(Statistic.DEFENSE);
m669effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m669effectDamage_.setFail(ES);
m669custListEffect_.add(m669effectDamage_);
m669damagingMoveData_.setEffects(m669custListEffect_);
m669damagingMoveData_.setStoppableMoveSolo(true);
m669damagingMoveData_.setStoppableMoveMulti(true);
m669damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m669damagingMoveData_;
}
static MoveData m314(){
DamagingMoveData m670damagingMoveData_ = Instances.newDamagingMoveData();
m670damagingMoveData_.setCategory(I_PHYSIQUE);
m670damagingMoveData_.setDirect(true);
m670damagingMoveData_.setStoppableMoveKoSingle(true);
m670damagingMoveData_.setPp(5);
StringList m670stringList_=new StringList(new CollCapacity(1));
m670stringList_.add(I_TENEBRE);
m670damagingMoveData_.setTypes(m670stringList_);
m670stringList_=new StringList(new CollCapacity(1));
m670stringList_.add(I_TENEBRE);
m670damagingMoveData_.setBoostedTypes(m670stringList_);
m670damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m670custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m670effectDamage_=Instances.newEffectDamage();
m670effectDamage_.setPower(R_100);
IdList<Statistic> m670enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m670enumListStatistic_.add(Statistic.EVASINESS);
m670effectDamage_.setIgnVarStatTargetPos(m670enumListStatistic_);
m670enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m670enumListStatistic_.add(Statistic.ACCURACY);
m670effectDamage_.setIgnVarStatUserNeg(m670enumListStatistic_);
m670effectDamage_.setUserAttack(true);
m670effectDamage_.setStatisAtt(Statistic.ATTACK);
m670effectDamage_.setTargetDefense(true);
m670effectDamage_.setStatisDef(Statistic.DEFENSE);
m670effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m670effectDamage_.setFail(ES);
m670custListEffect_.add(m670effectDamage_);
m670damagingMoveData_.setEffects(m670custListEffect_);
m670damagingMoveData_.setIgnVarAccurUserNeg(true);
m670damagingMoveData_.setIgnVarEvasTargetPos(true);
m670damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m670damagingMoveData_;
}
static MoveData m315(){
StatusMoveData m671statusMoveData_ = Instances.newStatusMoveData();
m671statusMoveData_.setCounterableMove(true);
m671statusMoveData_.setPp(20);
StringList m671stringList_=new StringList(new CollCapacity(1));
m671stringList_.add(I_PSY);
m671statusMoveData_.setTypes(m671stringList_);
m671stringList_=new StringList(new CollCapacity(1));
m671stringList_.add(I_PSY);
m671statusMoveData_.setBoostedTypes(m671stringList_);
m671statusMoveData_.setAccuracy(R_3_5);
CustList<Effect> m671custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m671effectStatus_=Instances.newEffectStatus();
MonteCarloString m671monteCarloString_=new MonteCarloString(new CollCapacity(1));
m671monteCarloString_.addQuickEvent(I_SOMMEIL,LgInt.newLgInt(R_1));
m671effectStatus_.setLawStatus(m671monteCarloString_);
StringMap<String> m671stringMapString_=new StringMap<String>(new CollCapacity(1));
m671stringMapString_.addEntry(I_SOMMEIL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_SOMMEIL+OS+I_SOMMEIL_REPOS+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m671effectStatus_.setLocalFailStatus(m671stringMapString_);
m671effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m671effectStatus_.setFail(ES);
m671custListEffect_.add(m671effectStatus_);
m671statusMoveData_.setEffects(m671custListEffect_);
m671statusMoveData_.setStoppableMoveSolo(true);
m671statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m671statusMoveData_;
}
static MoveData m316(){
StatusMoveData m672statusMoveData_ = Instances.newStatusMoveData();
m672statusMoveData_.setCounterableMove(true);
m672statusMoveData_.setPp(10);
StringList m672stringList_=new StringList(new CollCapacity(1));
m672stringList_.add(I_PSY);
m672statusMoveData_.setTypes(m672stringList_);
m672stringList_=new StringList(new CollCapacity(1));
m672stringList_.add(I_PSY);
m672statusMoveData_.setBoostedTypes(m672stringList_);
m672statusMoveData_.setAccuracy(R_1);
CustList<Effect> m672custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchAbilities m672effectSwitchAbilities_=Instances.newEffectSwitchAbilities();
m672effectSwitchAbilities_.setExchangeAbility(ExchangeType.GIVE_TO_THROWER);
m672effectSwitchAbilities_.setConstAbility(ES);
m672effectSwitchAbilities_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m672effectSwitchAbilities_.setFail(ES);
m672custListEffect_.add(m672effectSwitchAbilities_);
m672statusMoveData_.setEffects(m672custListEffect_);
m672statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m672statusMoveData_;
}
static MoveData m317(){
DamagingMoveData m673damagingMoveData_ = Instances.newDamagingMoveData();
m673damagingMoveData_.setCategory(I_PHYSIQUE);
m673damagingMoveData_.setDirect(true);
m673damagingMoveData_.setStoppableMoveKoSingle(true);
m673damagingMoveData_.setPp(40);
StringList m673stringList_=new StringList(new CollCapacity(1));
m673stringList_.add(I_NORMAL);
m673damagingMoveData_.setTypes(m673stringList_);
m673stringList_=new StringList(new CollCapacity(1));
m673stringList_.add(I_NORMAL);
m673damagingMoveData_.setBoostedTypes(m673stringList_);
m673damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m673custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m673effectDamage_=Instances.newEffectDamage();
m673effectDamage_.setPower(R_60);
m673effectDamage_.setUserAttack(true);
m673effectDamage_.setStatisAtt(Statistic.ATTACK);
m673effectDamage_.setTargetDefense(true);
m673effectDamage_.setStatisDef(Statistic.DEFENSE);
m673effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m673effectDamage_.setFail(ES);
m673custListEffect_.add(m673effectDamage_);
EffectSwitchItems m673effectSwitchItems_=Instances.newEffectSwitchItems();
m673effectSwitchItems_.setMoveObject(MoveItemType.TAKE_OBJET);
m673effectSwitchItems_.setTargetChoice(TargetChoice.ADJ_MULT);
m673effectSwitchItems_.setFail(ES);
Ints m673ints_=new Ints(new CollCapacity(1));
m673ints_.add(0);
m673effectSwitchItems_.setRequiredSuccessfulEffects(m673ints_);
m673custListEffect_.add(m673effectSwitchItems_);
m673damagingMoveData_.setEffects(m673custListEffect_);
m673damagingMoveData_.setStoppableMoveSolo(true);
m673damagingMoveData_.setStoppableMoveMulti(true);
m673damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m673damagingMoveData_;
}
static MoveData m318(){
DamagingMoveData m674damagingMoveData_ = Instances.newDamagingMoveData();
m674damagingMoveData_.setCategory(I_SPECIALE);
m674damagingMoveData_.setStoppableMoveKoSingle(true);
m674damagingMoveData_.setPp(5);
StringList m674stringList_=new StringList(new CollCapacity(1));
m674stringList_.add(I_FEU);
m674damagingMoveData_.setTypes(m674stringList_);
m674stringList_=new StringList(new CollCapacity(1));
m674stringList_.add(I_FEU);
m674damagingMoveData_.setBoostedTypes(m674stringList_);
m674damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m674custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m674effectDamage_=Instances.newEffectDamage();
m674effectDamage_.setPower(R_100);
m674effectDamage_.setUserAttack(true);
m674effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m674effectDamage_.setTargetDefense(true);
m674effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m674effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m674effectDamage_.setFail(ES);
m674custListEffect_.add(m674effectDamage_);
EffectStatus m674effectStatus_=Instances.newEffectStatus();
MonteCarloString m674monteCarloString_=new MonteCarloString(new CollCapacity(2));
m674monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m674monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_3));
m674effectStatus_.setLawStatus(m674monteCarloString_);
StringMap<String> m674stringMapString_=new StringMap<String>(new CollCapacity(1));
m674stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m674effectStatus_.setLocalFailStatus(m674stringMapString_);
m674effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m674effectStatus_.setFail(ES);
Ints m674ints_=new Ints(new CollCapacity(1));
m674ints_.add(0);
m674effectStatus_.setRequiredSuccessfulEffects(m674ints_);
m674custListEffect_.add(m674effectStatus_);
m674damagingMoveData_.setEffects(m674custListEffect_);
m674damagingMoveData_.setNbPrepaRound(1);
m674damagingMoveData_.setStoppableMoveSolo(true);
m674damagingMoveData_.setStoppableMoveMulti(true);
m674damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m674damagingMoveData_;
}
static MoveData m319(){
StatusMoveData m675statusMoveData_ = Instances.newStatusMoveData();
m675statusMoveData_.setPp(15);
StringList m675stringList_=new StringList(new CollCapacity(1));
m675stringList_.add(I_PSY);
m675statusMoveData_.setTypes(m675stringList_);
m675stringList_=new StringList(new CollCapacity(1));
m675stringList_.add(I_PSY);
m675statusMoveData_.setBoostedTypes(m675stringList_);
m675statusMoveData_.setPriority(1);
m675statusMoveData_.setAccuracy(R_1);
CustList<Effect> m675custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchPosition m675effectSwitchPosition_=Instances.newEffectSwitchPosition();
m675effectSwitchPosition_.setTargetChoice(TargetChoice.ALLIE);
m675effectSwitchPosition_.setFail(V_PAS_PARTENAIRE_TERRAIN);
m675custListEffect_.add(m675effectSwitchPosition_);
m675statusMoveData_.setEffects(m675custListEffect_);
m675statusMoveData_.setStoppableMoveMulti(true);
m675statusMoveData_.setStoppableMovePrio(true);
m675statusMoveData_.setIgnVarAccurUserNeg(true);
m675statusMoveData_.setIgnVarEvasTargetPos(true);
m675statusMoveData_.setTargetChoice(TargetChoice.ALLIE);
return m675statusMoveData_;
}
static MoveData m320(){
StatusMoveData m676statusMoveData_ = Instances.newStatusMoveData();
m676statusMoveData_.setCounterableMove(true);
m676statusMoveData_.setPp(30);
StringList m676stringList_=new StringList(new CollCapacity(1));
m676stringList_.add(I_NORMAL);
m676statusMoveData_.setTypes(m676stringList_);
m676stringList_=new StringList(new CollCapacity(1));
m676stringList_.add(I_NORMAL);
m676statusMoveData_.setBoostedTypes(m676stringList_);
m676statusMoveData_.setAccuracy(R_9_10);
CustList<Effect> m676custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m676effectStatus_=Instances.newEffectStatus();
MonteCarloString m676monteCarloString_=new MonteCarloString(new CollCapacity(1));
m676monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m676effectStatus_.setLawStatus(m676monteCarloString_);
StringMap<String> m676stringMapString_=new StringMap<String>(new CollCapacity(1));
m676stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m676effectStatus_.setLocalFailStatus(m676stringMapString_);
m676effectStatus_.setTargetChoice(TargetChoice.ADJ_ADV);
m676effectStatus_.setFail(ES);
m676custListEffect_.add(m676effectStatus_);
m676statusMoveData_.setEffects(m676custListEffect_);
m676statusMoveData_.setStoppableMoveSolo(true);
m676statusMoveData_.setStoppableMoveMulti(true);
m676statusMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m676statusMoveData_;
}
static MoveData m321(){
DamagingMoveData m677damagingMoveData_ = Instances.newDamagingMoveData();
m677damagingMoveData_.setCategory(I_PHYSIQUE);
m677damagingMoveData_.setStoppableMoveKoSingle(true);
m677damagingMoveData_.setPp(20);
StringList m677stringList_=new StringList(new CollCapacity(1));
m677stringList_.add(I_NORMAL);
m677damagingMoveData_.setTypes(m677stringList_);
m677stringList_=new StringList(new CollCapacity(1));
m677stringList_.add(I_NORMAL);
m677damagingMoveData_.setBoostedTypes(m677stringList_);
m677damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m677custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m677effectDamage_=Instances.newEffectDamage();
m677effectDamage_.setPower(R_40);
m677effectDamage_.setUserAttack(true);
m677effectDamage_.setStatisAtt(Statistic.ATTACK);
m677effectDamage_.setTargetDefense(true);
m677effectDamage_.setStatisDef(Statistic.DEFENSE);
m677effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m677effectDamage_.setFail(ES);
m677custListEffect_.add(m677effectDamage_);
EffectWinMoney m677effectWinMoney_=Instances.newEffectWinMoney();
m677effectWinMoney_.setWinningRateBySumTargetUser(Rate.newRate(R_40));
m677effectWinMoney_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m677effectWinMoney_.setFail(ES);
Ints m677ints_=new Ints(new CollCapacity(1));
m677ints_.add(0);
m677effectWinMoney_.setRequiredSuccessfulEffects(m677ints_);
m677custListEffect_.add(m677effectWinMoney_);
m677damagingMoveData_.setEffects(m677custListEffect_);
m677damagingMoveData_.setStoppableMoveSolo(true);
m677damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m677damagingMoveData_;
}
static MoveData m322(){
StatusMoveData m678statusMoveData_ = Instances.newStatusMoveData();
m678statusMoveData_.setCounterableMove(true);
m678statusMoveData_.setPp(15);
StringList m678stringList_=new StringList(new CollCapacity(1));
m678stringList_.add(I_SOL);
m678statusMoveData_.setTypes(m678stringList_);
m678stringList_=new StringList(new CollCapacity(1));
m678stringList_.add(I_SOL);
m678statusMoveData_.setBoostedTypes(m678stringList_);
m678statusMoveData_.setAccuracy(R_1);
CustList<Effect> m678custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m678effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m678enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m678enumMapStatisticByte_.addEntry(Statistic.ACCURACY,-1L);
m678effectStatistic_.setStatisVarRank(m678enumMapStatisticByte_);
IdMap<Statistic,String> m678enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m678enumMapStatisticString_.addEntry(Statistic.ACCURACY,V_CIBLE_CLONE+GT+R_0);
m678effectStatistic_.setLocalFailStatis(m678enumMapStatisticString_);
m678effectStatistic_.setEvtRate(Rate.newRate(R_1));
m678effectStatistic_.setTargetChoice(TargetChoice.ADJ_MULT);
m678effectStatistic_.setFail(ES);
m678custListEffect_.add(m678effectStatistic_);
m678statusMoveData_.setEffects(m678custListEffect_);
m678statusMoveData_.setStoppableMoveSolo(true);
m678statusMoveData_.setStoppableMoveMulti(true);
m678statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m678statusMoveData_;
}
static MoveData m323(){
DamagingMoveData m679damagingMoveData_ = Instances.newDamagingMoveData();
m679damagingMoveData_.setCategory(I_SPECIALE);
m679damagingMoveData_.setStoppableMoveKoSingle(true);
m679damagingMoveData_.setPp(5);
StringList m679stringList_=new StringList(new CollCapacity(1));
m679stringList_.add(I_EAU);
m679damagingMoveData_.setTypes(m679stringList_);
m679stringList_=new StringList(new CollCapacity(1));
m679stringList_.add(I_EAU);
m679damagingMoveData_.setBoostedTypes(m679stringList_);
m679damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m679custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m679effectDamage_=Instances.newEffectDamage();
m679effectDamage_.setPower(R_110);
m679effectDamage_.setUserAttack(true);
m679effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m679effectDamage_.setTargetDefense(true);
m679effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m679effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m679effectDamage_.setFail(ES);
m679custListEffect_.add(m679effectDamage_);
EffectStatus m679effectStatus_=Instances.newEffectStatus();
MonteCarloString m679monteCarloString_=new MonteCarloString(new CollCapacity(2));
m679monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m679monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_3));
m679effectStatus_.setLawStatus(m679monteCarloString_);
StringMap<String> m679stringMapString_=new StringMap<String>(new CollCapacity(1));
m679stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m679effectStatus_.setLocalFailStatus(m679stringMapString_);
m679effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m679effectStatus_.setFail(ES);
Ints m679ints_=new Ints(new CollCapacity(1));
m679ints_.add(0);
m679effectStatus_.setRequiredSuccessfulEffects(m679ints_);
m679custListEffect_.add(m679effectStatus_);
m679damagingMoveData_.setEffects(m679custListEffect_);
m679damagingMoveData_.setStoppableMoveSolo(true);
m679damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m679damagingMoveData_;
}
static MoveData m324(){
DamagingMoveData m680damagingMoveData_ = Instances.newDamagingMoveData();
m680damagingMoveData_.setCategory(I_PHYSIQUE);
m680damagingMoveData_.setStoppableMoveKoSingle(true);
m680damagingMoveData_.setPp(15);
StringList m680stringList_=new StringList(new CollCapacity(1));
m680stringList_.add(I_ROCHE);
m680damagingMoveData_.setTypes(m680stringList_);
m680stringList_=new StringList(new CollCapacity(1));
m680stringList_.add(I_ROCHE);
m680damagingMoveData_.setBoostedTypes(m680stringList_);
m680damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m680custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m680effectDamage_=Instances.newEffectDamage();
m680effectDamage_.setPower(R_50);
m680effectDamage_.setUserAttack(true);
m680effectDamage_.setStatisAtt(Statistic.ATTACK);
m680effectDamage_.setTargetDefense(true);
m680effectDamage_.setStatisDef(Statistic.DEFENSE);
m680effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m680effectDamage_.setFail(ES);
m680custListEffect_.add(m680effectDamage_);
m680damagingMoveData_.setEffects(m680custListEffect_);
m680damagingMoveData_.setStoppableMoveSolo(true);
m680damagingMoveData_.setStoppableMoveMulti(true);
m680damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m680damagingMoveData_;
}
}
