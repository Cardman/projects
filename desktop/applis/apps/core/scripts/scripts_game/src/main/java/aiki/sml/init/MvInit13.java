package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit13 extends CstIgame{
private MvInit13(){}
static MoveData m325(){
DamagingMoveData m683damagingMoveData_ = Instances.newDamagingMoveData();
m683damagingMoveData_.setCategory(I_SPECIALE);
m683damagingMoveData_.setStoppableMoveKoSingle(true);
m683damagingMoveData_.setPp((short)10);
StringList m683stringList_=new StringList(new CollCapacity(1));
m683stringList_.add(I_NORMAL);
m683damagingMoveData_.setTypes(m683stringList_);
m683stringList_=new StringList(new CollCapacity(1));
m683stringList_.add(I_NORMAL);
m683damagingMoveData_.setBoostedTypes(m683stringList_);
m683damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m683custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m683effectDamage_=Instances.newEffectDamage();
m683effectDamage_.setPower(R_100);
m683effectDamage_.setUserAttack(true);
m683effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m683effectDamage_.setTargetDefense(true);
m683effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m683effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m683effectDamage_.setFail(ES);
m683custListEffect_.add(m683effectDamage_);
m683damagingMoveData_.setEffects(m683custListEffect_);
m683damagingMoveData_.setStoppableMoveSolo(true);
m683damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m683damagingMoveData_;
}
static MoveData m326(){
DamagingMoveData m684damagingMoveData_ = Instances.newDamagingMoveData();
m684damagingMoveData_.setCategory(I_PHYSIQUE);
m684damagingMoveData_.setDirect(true);
m684damagingMoveData_.setStoppableMoveKoSingle(true);
m684damagingMoveData_.setPp((short)25);
StringList m684stringList_=new StringList(new CollCapacity(1));
m684stringList_.add(I_NORMAL);
m684damagingMoveData_.setTypes(m684stringList_);
m684stringList_=new StringList(new CollCapacity(1));
m684stringList_.add(I_NORMAL);
m684damagingMoveData_.setBoostedTypes(m684stringList_);
m684damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m684custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m684effectDamage_=Instances.newEffectDamage();
m684effectDamage_.setPower(R_65);
m684effectDamage_.setUserAttack(true);
m684effectDamage_.setStatisAtt(Statistic.ATTACK);
m684effectDamage_.setTargetDefense(true);
m684effectDamage_.setStatisDef(Statistic.DEFENSE);
m684effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m684effectDamage_.setFail(ES);
m684custListEffect_.add(m684effectDamage_);
m684damagingMoveData_.setEffects(m684custListEffect_);
m684damagingMoveData_.setStoppableMoveSolo(true);
m684damagingMoveData_.setStoppableMoveMulti(true);
m684damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m684damagingMoveData_;
}
static MoveData m327(){
StatusMoveData m685statusMoveData_ = Instances.newStatusMoveData();
m685statusMoveData_.setThievableMove(true);
m685statusMoveData_.setPp((short)10);
StringList m685stringList_=new StringList(new CollCapacity(1));
m685stringList_.add(I_NORMAL);
m685statusMoveData_.setTypes(m685stringList_);
m685stringList_=new StringList(new CollCapacity(1));
m685stringList_.add(I_NORMAL);
m685statusMoveData_.setBoostedTypes(m685stringList_);
m685statusMoveData_.setAccuracy(R_1);
CustList<Effect> m685custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectFullHpRate m685effectFullHpRate_=Instances.newEffectFullHpRate();
m685effectFullHpRate_.setRestoredHp(R_1_2);
m685effectFullHpRate_.setTargetChoice(TargetChoice.LANCEUR);
m685effectFullHpRate_.setFail(ES);
m685custListEffect_.add(m685effectFullHpRate_);
m685statusMoveData_.setEffects(m685custListEffect_);
m685statusMoveData_.setStoppableMoveMulti(true);
m685statusMoveData_.setIgnVarAccurUserNeg(true);
m685statusMoveData_.setIgnVarEvasTargetPos(true);
m685statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m685statusMoveData_;
}
static MoveData m328(){
DamagingMoveData m686damagingMoveData_ = Instances.newDamagingMoveData();
m686damagingMoveData_.setCategory(I_PHYSIQUE);
m686damagingMoveData_.setStoppableMoveKoSingle(true);
m686damagingMoveData_.setPp((short)5);
StringList m686stringList_=new StringList(new CollCapacity(1));
m686stringList_.add(I_ROCHE);
m686damagingMoveData_.setTypes(m686stringList_);
m686stringList_=new StringList(new CollCapacity(1));
m686stringList_.add(I_ROCHE);
m686damagingMoveData_.setBoostedTypes(m686stringList_);
m686damagingMoveData_.setAccuracy(R_4_5);
CustList<Effect> m686custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m686effectDamage_=Instances.newEffectDamage();
m686effectDamage_.setChRate((byte)1);
m686effectDamage_.setPower(R_100);
m686effectDamage_.setUserAttack(true);
m686effectDamage_.setStatisAtt(Statistic.ATTACK);
m686effectDamage_.setTargetDefense(true);
m686effectDamage_.setStatisDef(Statistic.DEFENSE);
m686effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m686effectDamage_.setFail(ES);
m686custListEffect_.add(m686effectDamage_);
m686damagingMoveData_.setEffects(m686custListEffect_);
m686damagingMoveData_.setStoppableMoveSolo(true);
m686damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m686damagingMoveData_;
}
static MoveData m329(){
DamagingMoveData m687damagingMoveData_ = Instances.newDamagingMoveData();
m687damagingMoveData_.setCategory(I_SPECIALE);
m687damagingMoveData_.setStoppableMoveKoSingle(true);
m687damagingMoveData_.setPp((short)20);
StringList m687stringList_=new StringList(new CollCapacity(1));
m687stringList_.add(I_VOL);
m687damagingMoveData_.setTypes(m687stringList_);
m687stringList_=new StringList(new CollCapacity(1));
m687stringList_.add(I_VOL);
m687damagingMoveData_.setBoostedTypes(m687stringList_);
m687damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m687custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m687effectDamage_=Instances.newEffectDamage();
m687effectDamage_.setPower(R_75);
m687effectDamage_.setUserAttack(true);
m687effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m687effectDamage_.setTargetDefense(true);
m687effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m687effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m687effectDamage_.setFail(ES);
m687custListEffect_.add(m687effectDamage_);
EffectStatus m687effectStatus_=Instances.newEffectStatus();
MonteCarloString m687monteCarloString_=new MonteCarloString(new CollCapacity(2));
m687monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m687monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_3));
m687effectStatus_.setLawStatus(m687monteCarloString_);
StringMap<String> m687stringMapString_=new StringMap<String>(new CollCapacity(1));
m687stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m687effectStatus_.setLocalFailStatus(m687stringMapString_);
m687effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m687effectStatus_.setFail(ES);
Ints m687ints_=new Ints(new CollCapacity(1));
m687ints_.add(0);
m687effectStatus_.setRequiredSuccessfulEffects(m687ints_);
m687custListEffect_.add(m687effectStatus_);
m687damagingMoveData_.setEffects(m687custListEffect_);
m687damagingMoveData_.setStoppableMoveSolo(true);
m687damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m687damagingMoveData_;
}
static MoveData m330(){
DamagingMoveData m688damagingMoveData_ = Instances.newDamagingMoveData();
m688damagingMoveData_.setCategory(I_PHYSIQUE);
m688damagingMoveData_.setDirect(true);
m688damagingMoveData_.setStoppableMoveKoSingle(true);
m688damagingMoveData_.setPp((short)15);
StringList m688stringList_=new StringList(new CollCapacity(1));
m688stringList_.add(I_PLANTE);
m688damagingMoveData_.setTypes(m688stringList_);
m688stringList_=new StringList(new CollCapacity(1));
m688stringList_.add(I_PLANTE);
m688damagingMoveData_.setBoostedTypes(m688stringList_);
m688damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m688custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m688effectDamage_=Instances.newEffectDamage();
m688effectDamage_.setChRate((byte)1);
m688effectDamage_.setPower(R_90);
m688effectDamage_.setUserAttack(true);
m688effectDamage_.setStatisAtt(Statistic.ATTACK);
m688effectDamage_.setTargetDefense(true);
m688effectDamage_.setStatisDef(Statistic.DEFENSE);
m688effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m688effectDamage_.setFail(ES);
m688custListEffect_.add(m688effectDamage_);
m688damagingMoveData_.setEffects(m688custListEffect_);
m688damagingMoveData_.setStoppableMoveSolo(true);
m688damagingMoveData_.setStoppableMoveMulti(true);
m688damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m688damagingMoveData_;
}
static MoveData m331(){
DamagingMoveData m689damagingMoveData_ = Instances.newDamagingMoveData();
m689damagingMoveData_.setCategory(I_SPECIALE);
m689damagingMoveData_.setStoppableMoveKoSingle(true);
m689damagingMoveData_.setPp((short)10);
StringList m689stringList_=new StringList(new CollCapacity(1));
m689stringList_.add(I_COMBAT);
m689damagingMoveData_.setTypes(m689stringList_);
m689stringList_=new StringList(new CollCapacity(1));
m689stringList_.add(I_COMBAT);
m689damagingMoveData_.setBoostedTypes(m689stringList_);
m689damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m689custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m689effectDamage_=Instances.newEffectDamage();
m689effectDamage_.setPower(R_85);
m689effectDamage_.setUserAttack(true);
m689effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m689effectDamage_.setTargetDefense(true);
m689effectDamage_.setStatisDef(Statistic.DEFENSE);
m689effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m689effectDamage_.setFail(ES);
m689custListEffect_.add(m689effectDamage_);
m689damagingMoveData_.setEffects(m689custListEffect_);
m689damagingMoveData_.setStoppableMoveSolo(true);
m689damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m689damagingMoveData_;
}
static MoveData m332(){
DamagingMoveData m690damagingMoveData_ = Instances.newDamagingMoveData();
m690damagingMoveData_.setCategory(I_PHYSIQUE);
m690damagingMoveData_.setDirect(true);
m690damagingMoveData_.setStoppableMoveKoSingle(true);
m690damagingMoveData_.setPp((short)20);
StringList m690stringList_=new StringList(new CollCapacity(1));
m690stringList_.add(I_COMBAT);
m690damagingMoveData_.setTypes(m690stringList_);
m690stringList_=new StringList(new CollCapacity(1));
m690stringList_.add(I_COMBAT);
m690damagingMoveData_.setBoostedTypes(m690stringList_);
m690damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m690custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m690effectDamage_=Instances.newEffectDamage();
m690effectDamage_.setPower(R_90);
m690effectDamage_.setUserAttack(true);
m690effectDamage_.setStatisAtt(Statistic.ATTACK);
m690effectDamage_.setTargetDefense(true);
m690effectDamage_.setStatisDef(Statistic.DEFENSE);
m690effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m690effectDamage_.setFail(ES);
m690custListEffect_.add(m690effectDamage_);
m690damagingMoveData_.setEffects(m690custListEffect_);
m690damagingMoveData_.setStoppableMoveSolo(true);
m690damagingMoveData_.setIgnVarEvasTargetPos(true);
m690damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m690damagingMoveData_;
}
static MoveData m333(){
DamagingMoveData m691damagingMoveData_ = Instances.newDamagingMoveData();
m691damagingMoveData_.setCategory(I_PHYSIQUE);
m691damagingMoveData_.setDirect(true);
m691damagingMoveData_.setStoppableMoveKoSingle(true);
m691damagingMoveData_.setPp((short)15);
StringList m691stringList_=new StringList(new CollCapacity(1));
m691stringList_.add(I_ACIER);
m691damagingMoveData_.setTypes(m691stringList_);
m691stringList_=new StringList(new CollCapacity(1));
m691stringList_.add(I_ACIER);
m691damagingMoveData_.setBoostedTypes(m691stringList_);
m691damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m691custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m691effectDamage_=Instances.newEffectDamage();
m691effectDamage_.setPower(R_50);
m691effectDamage_.setUserAttack(true);
m691effectDamage_.setStatisAtt(Statistic.ATTACK);
m691effectDamage_.setTargetDefense(true);
m691effectDamage_.setStatisDef(Statistic.DEFENSE);
m691effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m691effectDamage_.setFail(ES);
m691custListEffect_.add(m691effectDamage_);
m691damagingMoveData_.setEffects(m691custListEffect_);
m691damagingMoveData_.setStoppableMoveSolo(true);
m691damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m691damagingMoveData_;
}
static MoveData m334(){
StatusMoveData m692statusMoveData_ = Instances.newStatusMoveData();
m692statusMoveData_.setPp((short)15);
StringList m692stringList_=new StringList(new CollCapacity(1));
m692stringList_.add(I_SOL);
m692statusMoveData_.setTypes(m692stringList_);
m692stringList_=new StringList(new CollCapacity(1));
m692stringList_.add(I_SOL);
m692statusMoveData_.setBoostedTypes(m692stringList_);
m692statusMoveData_.setAccuracy(R_1);
CustList<Effect> m692custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectMultSufferedMovePower m692effectMultSufferedMovePower_=Instances.newEffectMultSufferedMovePower();
StringMap<Rate> m692stringMapRate_=new StringMap<Rate>(new CollCapacity(1));
m692stringMapRate_.addEntry(I_ELECTRIQUE,Rate.newRate(R_1_2));
m692effectMultSufferedMovePower_.setMultMovePowerFctType(m692stringMapRate_);
m692effectMultSufferedMovePower_.setTargetChoice(TargetChoice.LANCEUR);
m692effectMultSufferedMovePower_.setFail(ES);
m692custListEffect_.add(m692effectMultSufferedMovePower_);
m692statusMoveData_.setEffects(m692custListEffect_);
m692statusMoveData_.setStoppableMoveMulti(true);
m692statusMoveData_.setIgnVarAccurUserNeg(true);
m692statusMoveData_.setIgnVarEvasTargetPos(true);
m692statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m692statusMoveData_;
}
static MoveData m335(){
DamagingMoveData m693damagingMoveData_ = Instances.newDamagingMoveData();
m693damagingMoveData_.setCategory(I_SPECIALE);
m693damagingMoveData_.setStoppableMoveKoSingle(true);
m693damagingMoveData_.setPp((short)15);
StringList m693stringList_=new StringList(new CollCapacity(1));
m693stringList_.add(I_FEU);
m693damagingMoveData_.setTypes(m693stringList_);
m693stringList_=new StringList(new CollCapacity(1));
m693stringList_.add(I_FEU);
m693damagingMoveData_.setBoostedTypes(m693stringList_);
m693damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m693custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m693effectDamage_=Instances.newEffectDamage();
m693effectDamage_.setPower(R_95);
m693effectDamage_.setUserAttack(true);
m693effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m693effectDamage_.setTargetDefense(true);
m693effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m693effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m693effectDamage_.setFail(ES);
m693custListEffect_.add(m693effectDamage_);
EffectStatus m693effectStatus_=Instances.newEffectStatus();
MonteCarloString m693monteCarloString_=new MonteCarloString(new CollCapacity(2));
m693monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m693monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m693effectStatus_.setLawStatus(m693monteCarloString_);
StringMap<String> m693stringMapString_=new StringMap<String>(new CollCapacity(1));
m693stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m693effectStatus_.setLocalFailStatus(m693stringMapString_);
m693effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m693effectStatus_.setFail(ES);
Ints m693ints_=new Ints(new CollCapacity(1));
m693ints_.add(0);
m693effectStatus_.setRequiredSuccessfulEffects(m693ints_);
m693custListEffect_.add(m693effectStatus_);
m693damagingMoveData_.setEffects(m693custListEffect_);
m693damagingMoveData_.setStoppableMoveSolo(true);
m693damagingMoveData_.setStoppableMoveMulti(true);
m693damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m693damagingMoveData_;
}
static MoveData m336(){
DamagingMoveData m694damagingMoveData_ = Instances.newDamagingMoveData();
m694damagingMoveData_.setCategory(I_SPECIALE);
m694damagingMoveData_.setStoppableMoveKoSingle(true);
m694damagingMoveData_.setPp((short)10);
StringList m694stringList_=new StringList(new CollCapacity(1));
m694stringList_.add(I_PLANTE);
m694damagingMoveData_.setTypes(m694stringList_);
m694stringList_=new StringList(new CollCapacity(1));
m694stringList_.add(I_PLANTE);
m694damagingMoveData_.setBoostedTypes(m694stringList_);
m694damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m694custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m694effectDamage_=Instances.newEffectDamage();
m694effectDamage_.setPower(R_120+OD+R_30+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_GRELE+OS+I_TEMPETESABLE+RB+RP+RP+OP+R_100+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ZENITH+RB+RP+RP+OD+R_40+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ORAGE+RB+RP+RP+OD+R_20+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_DANSE_PLUIE+RB+RP+RP);
m694effectDamage_.setUserAttack(true);
m694effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m694effectDamage_.setTargetDefense(true);
m694effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m694effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m694effectDamage_.setFail(ES);
m694custListEffect_.add(m694effectDamage_);
m694damagingMoveData_.setEffects(m694custListEffect_);
m694damagingMoveData_.setStoppableMoveSolo(true);
m694damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m694damagingMoveData_;
}
static MoveData m337(){
DamagingMoveData m695damagingMoveData_ = Instances.newDamagingMoveData();
m695damagingMoveData_.setCategory(I_PHYSIQUE);
m695damagingMoveData_.setDirect(true);
m695damagingMoveData_.setStoppableMoveKoSingle(true);
m695damagingMoveData_.setPp((short)10);
StringList m695stringList_=new StringList(new CollCapacity(1));
m695stringList_.add(I_TENEBRE);
m695damagingMoveData_.setTypes(m695stringList_);
m695stringList_=new StringList(new CollCapacity(1));
m695stringList_.add(I_TENEBRE);
m695damagingMoveData_.setBoostedTypes(m695stringList_);
m695damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m695custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m695effectDamage_=Instances.newEffectDamage();
m695effectDamage_.setPower(R_40);
m695effectDamage_.setUserAttack(true);
m695effectDamage_.setStatisAtt(Statistic.ATTACK);
m695effectDamage_.setTargetDefense(true);
m695effectDamage_.setStatisDef(Statistic.DEFENSE);
m695effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m695effectDamage_.setFail(ES);
m695custListEffect_.add(m695effectDamage_);
EffectSwitchItems m695effectSwitchItems_=Instances.newEffectSwitchItems();
m695effectSwitchItems_.setMoveObject(MoveItemType.REMOVE_TARGET_OBJECT);
m695effectSwitchItems_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m695effectSwitchItems_.setFail(ES);
Ints m695ints_=new Ints(new CollCapacity(1));
m695ints_.add(0);
m695effectSwitchItems_.setRequiredSuccessfulEffects(m695ints_);
m695custListEffect_.add(m695effectSwitchItems_);
m695damagingMoveData_.setEffects(m695custListEffect_);
m695damagingMoveData_.setStoppableMoveSolo(true);
m695damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m695damagingMoveData_;
}
static MoveData m338(){
DamagingMoveData m696damagingMoveData_ = Instances.newDamagingMoveData();
m696damagingMoveData_.setCategory(I_SPECIALE);
m696damagingMoveData_.setStoppableMoveKoSingle(true);
m696damagingMoveData_.setPp((short)10);
StringList m696stringList_=new StringList(new CollCapacity(1));
m696stringList_.add(I_GLACE);
m696damagingMoveData_.setTypes(m696stringList_);
m696stringList_=new StringList(new CollCapacity(1));
m696stringList_.add(I_GLACE);
m696damagingMoveData_.setBoostedTypes(m696stringList_);
m696damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m696custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m696effectDamage_=Instances.newEffectDamage();
m696effectDamage_.setPower(R_95);
m696effectDamage_.setUserAttack(true);
m696effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m696effectDamage_.setTargetDefense(true);
m696effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m696effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m696effectDamage_.setFail(ES);
m696custListEffect_.add(m696effectDamage_);
EffectStatus m696effectStatus_=Instances.newEffectStatus();
MonteCarloString m696monteCarloString_=new MonteCarloString(new CollCapacity(2));
m696monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m696monteCarloString_.addQuickEvent(I_GEL,LgInt.newLgInt(R_1));
m696effectStatus_.setLawStatus(m696monteCarloString_);
StringMap<String> m696stringMapString_=new StringMap<String>(new CollCapacity(1));
m696stringMapString_.addEntry(I_GEL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_GEL+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_GLACE+RB+RP+RP+GT+R_0);
m696effectStatus_.setLocalFailStatus(m696stringMapString_);
m696effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m696effectStatus_.setFail(ES);
Ints m696ints_=new Ints(new CollCapacity(1));
m696ints_.add(0);
m696effectStatus_.setRequiredSuccessfulEffects(m696ints_);
m696custListEffect_.add(m696effectStatus_);
m696damagingMoveData_.setEffects(m696custListEffect_);
m696damagingMoveData_.setStoppableMoveSolo(true);
m696damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m696damagingMoveData_;
}
static MoveData m339(){
DamagingMoveData m697damagingMoveData_ = Instances.newDamagingMoveData();
m697damagingMoveData_.setCategory(I_PHYSIQUE);
m697damagingMoveData_.setDirect(true);
m697damagingMoveData_.setStoppableMoveKoSingle(true);
m697damagingMoveData_.setPp((short)30);
StringList m697stringList_=new StringList(new CollCapacity(1));
m697stringList_.add(I_SPECTRE);
m697damagingMoveData_.setTypes(m697stringList_);
m697stringList_=new StringList(new CollCapacity(1));
m697stringList_.add(I_SPECTRE);
m697damagingMoveData_.setBoostedTypes(m697stringList_);
m697damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m697custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m697effectDamage_=Instances.newEffectDamage();
m697effectDamage_.setPower(R_20);
m697effectDamage_.setUserAttack(true);
m697effectDamage_.setStatisAtt(Statistic.ATTACK);
m697effectDamage_.setTargetDefense(true);
m697effectDamage_.setStatisDef(Statistic.DEFENSE);
m697effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m697effectDamage_.setFail(ES);
m697custListEffect_.add(m697effectDamage_);
EffectStatus m697effectStatus_=Instances.newEffectStatus();
MonteCarloString m697monteCarloString_=new MonteCarloString(new CollCapacity(2));
m697monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m697monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_3));
m697effectStatus_.setLawStatus(m697monteCarloString_);
StringMap<String> m697stringMapString_=new StringMap<String>(new CollCapacity(1));
m697stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m697effectStatus_.setLocalFailStatus(m697stringMapString_);
m697effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m697effectStatus_.setFail(ES);
Ints m697ints_=new Ints(new CollCapacity(1));
m697ints_.add(0);
m697effectStatus_.setRequiredSuccessfulEffects(m697ints_);
m697custListEffect_.add(m697effectStatus_);
m697damagingMoveData_.setEffects(m697custListEffect_);
m697damagingMoveData_.setStoppableMoveSolo(true);
m697damagingMoveData_.setStoppableMoveMulti(true);
m697damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m697damagingMoveData_;
}
static MoveData m340(){
StatusMoveData m698statusMoveData_ = Instances.newStatusMoveData();
m698statusMoveData_.setCounterableMove(true);
m698statusMoveData_.setPp((short)15);
StringList m698stringList_=new StringList(new CollCapacity(1));
m698stringList_.add(I_PSY);
m698statusMoveData_.setTypes(m698stringList_);
m698stringList_=new StringList(new CollCapacity(1));
m698stringList_.add(I_PSY);
m698statusMoveData_.setBoostedTypes(m698stringList_);
m698statusMoveData_.setAccuracy(R_1);
CustList<Effect> m698custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectProtectFromTypes m698effectProtectFromTypes_=Instances.newEffectProtectFromTypes();
m698stringList_=new StringList(new CollCapacity(1));
m698stringList_.add(I_SOL);
m698effectProtectFromTypes_.setImmuAgainstTypes(m698stringList_);
m698effectProtectFromTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m698effectProtectFromTypes_.setFail(V_CIBLE_EFFET+SE+I_RACINES+OO+V_IMMU_TYPE_ATT_CIBLE+SE+I_SOL+OO+V_NB_TOUR_GLOBAL+SE+I_GRAVITE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_OBJET+RB+OC+LB+I_BALLE_FER+RB+RP+RP+OE+R_1);
m698custListEffect_.add(m698effectProtectFromTypes_);
EffectAccuracy m698effectAccuracy_=Instances.newEffectAccuracy();
m698effectAccuracy_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m698effectAccuracy_.setFail(ES);
Ints m698ints_=new Ints(new CollCapacity(1));
m698ints_.add(0);
m698effectAccuracy_.setRequiredSuccessfulEffects(m698ints_);
m698custListEffect_.add(m698effectAccuracy_);
m698statusMoveData_.setEffects(m698custListEffect_);
m698statusMoveData_.setRankIncrementNbRound((short)21);
m698statusMoveData_.setStoppableMoveSolo(true);
m698statusMoveData_.setIgnVarAccurUserNeg(true);
m698statusMoveData_.setIgnVarEvasTargetPos(true);
m698statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m698statusMoveData_;
}
static MoveData m341(){
DamagingMoveData m699damagingMoveData_ = Instances.newDamagingMoveData();
m699damagingMoveData_.setCategory(I_SPECIALE);
m699damagingMoveData_.setStoppableMoveKoSingle(true);
m699damagingMoveData_.setPp((short)5);
StringList m699stringList_=new StringList(new CollCapacity(1));
m699stringList_.add(I_FEE);
m699damagingMoveData_.setTypes(m699stringList_);
m699stringList_=new StringList(new CollCapacity(1));
m699stringList_.add(I_FEE);
m699damagingMoveData_.setBoostedTypes(m699stringList_);
m699damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m699custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m699effectDamage_=Instances.newEffectDamage();
m699effectDamage_.setPower(R_140);
m699effectDamage_.setUserAttack(true);
m699effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m699effectDamage_.setTargetDefense(true);
m699effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m699effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m699effectDamage_.setFail(ES);
m699custListEffect_.add(m699effectDamage_);
EffectDamageRate m699effectDamageRate_=Instances.newEffectDamageRate();
m699effectDamageRate_.setRateDamage(Rate.newRate(OD+R_1_2));
m699effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m699effectDamageRate_.setFail(ES);
Ints m699ints_=new Ints(new CollCapacity(1));
m699ints_.add(0);
m699effectDamageRate_.setRequiredSuccessfulEffects(m699ints_);
m699custListEffect_.add(m699effectDamageRate_);
m699damagingMoveData_.setEffects(m699custListEffect_);
m699damagingMoveData_.setStoppableMoveSolo(true);
m699damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m699damagingMoveData_;
}
static MoveData m342(){
DamagingMoveData m700damagingMoveData_ = Instances.newDamagingMoveData();
m700damagingMoveData_.setCategory(I_PHYSIQUE);
m700damagingMoveData_.setDirect(true);
m700damagingMoveData_.setStoppableMoveKoSingle(true);
m700damagingMoveData_.setPp((short)20);
StringList m700stringList_=new StringList(new CollCapacity(1));
m700stringList_.add(I_NORMAL);
m700damagingMoveData_.setTypes(m700stringList_);
m700stringList_=new StringList(new CollCapacity(1));
m700stringList_.add(I_NORMAL);
m700damagingMoveData_.setBoostedTypes(m700stringList_);
m700damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m700custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m700effectDamage_=Instances.newEffectDamage();
m700effectDamage_.setPower(R_15);
m700effectDamage_.setUserAttack(true);
m700effectDamage_.setStatisAtt(Statistic.ATTACK);
m700effectDamage_.setTargetDefense(true);
m700effectDamage_.setStatisDef(Statistic.DEFENSE);
m700effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m700effectDamage_.setFail(ES);
m700custListEffect_.add(m700effectDamage_);
EffectEndRoundSingleRelation m700effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> m700longMapRate_=new LongMap<Rate>(new CollCapacity(5));
m700longMapRate_.addEntry(1L,Rate.newRate(R_1_16));
m700longMapRate_.addEntry(2L,Rate.newRate(R_1_16));
m700longMapRate_.addEntry(3L,Rate.newRate(R_1_16));
m700longMapRate_.addEntry(4L,Rate.newRate(R_1_16));
m700longMapRate_.addEntry(5L,Rate.newRate(R_1_16));
m700effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(m700longMapRate_);
MonteCarloNumber m700monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
m700monteCarloNumber_.addQuickEvent(Rate.newRate(R_3),LgInt.newLgInt(R_3));
m700monteCarloNumber_.addQuickEvent(Rate.newRate(R_2),LgInt.newLgInt(R_3));
m700monteCarloNumber_.addQuickEvent(Rate.newRate(R_4),LgInt.newLgInt(R_1));
m700monteCarloNumber_.addQuickEvent(Rate.newRate(R_5),LgInt.newLgInt(R_1));
m700effectEndRoundSingleRelation_.setLawForEnablingEffect(m700monteCarloNumber_);
m700effectEndRoundSingleRelation_.setFailEndRound(V_CIBLE_CLONE+GT+R_0);
m700effectEndRoundSingleRelation_.setEndRoundRank(44);
m700effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m700effectEndRoundSingleRelation_.setFail(V_CIBLE_CLONE+GT+R_0);
Ints m700ints_=new Ints(new CollCapacity(1));
m700ints_.add(0);
m700effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(m700ints_);
m700custListEffect_.add(m700effectEndRoundSingleRelation_);
m700damagingMoveData_.setEffects(m700custListEffect_);
m700damagingMoveData_.setStoppableMoveSolo(true);
m700damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m700damagingMoveData_;
}
static MoveData m343(){
StatusMoveData m701statusMoveData_ = Instances.newStatusMoveData();
m701statusMoveData_.setThievableMove(true);
m701statusMoveData_.setPp((short)20);
StringList m701stringList_=new StringList(new CollCapacity(1));
m701stringList_.add(I_NORMAL);
m701statusMoveData_.setTypes(m701stringList_);
m701stringList_=new StringList(new CollCapacity(1));
m701stringList_.add(I_NORMAL);
m701statusMoveData_.setBoostedTypes(m701stringList_);
m701statusMoveData_.setAccuracy(R_1);
CustList<Effect> m701custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m701effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> m701enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
m701enumMapStatisticByte_.addEntry(Statistic.EVASINESS,(byte)1);
m701effectStatistic_.setStatisVarRank(m701enumMapStatisticByte_);
m701effectStatistic_.setEvtRate(Rate.newRate(R_1));
m701effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m701effectStatistic_.setFail(ES);
m701custListEffect_.add(m701effectStatistic_);
m701statusMoveData_.setEffects(m701custListEffect_);
m701statusMoveData_.setStoppableMoveMulti(true);
m701statusMoveData_.setIgnVarAccurUserNeg(true);
m701statusMoveData_.setIgnVarEvasTargetPos(true);
m701statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m701statusMoveData_;
}
static MoveData m344(){
StatusMoveData m702statusMoveData_ = Instances.newStatusMoveData();
m702statusMoveData_.setPp((short)5);
StringList m702stringList_=new StringList(new CollCapacity(1));
m702stringList_.add(I_NORMAL);
m702statusMoveData_.setTypes(m702stringList_);
m702stringList_=new StringList(new CollCapacity(1));
m702stringList_.add(I_NORMAL);
m702statusMoveData_.setBoostedTypes(m702stringList_);
m702statusMoveData_.setAccuracy(R_1);
CustList<Effect> m702custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectAccuracy m702effectAccuracy_=Instances.newEffectAccuracy();
m702effectAccuracy_.setTargetChoice(TargetChoice.ADJ_MULT);
m702effectAccuracy_.setFail(ES);
m702custListEffect_.add(m702effectAccuracy_);
m702statusMoveData_.setEffects(m702custListEffect_);
m702statusMoveData_.setStoppableMoveMulti(true);
m702statusMoveData_.setIgnVarAccurUserNeg(true);
m702statusMoveData_.setIgnVarEvasTargetPos(true);
m702statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m702statusMoveData_;
}
static MoveData m345(){
DamagingMoveData m703damagingMoveData_ = Instances.newDamagingMoveData();
m703damagingMoveData_.setCategory(I_SPECIALE);
m703damagingMoveData_.setStoppableMoveKoSingle(true);
m703damagingMoveData_.setPp((short)10);
StringList m703stringList_=new StringList(new CollCapacity(1));
m703stringList_.add(I_ACIER);
m703damagingMoveData_.setTypes(m703stringList_);
m703stringList_=new StringList(new CollCapacity(1));
m703stringList_.add(I_ACIER);
m703damagingMoveData_.setBoostedTypes(m703stringList_);
m703damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m703custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m703effectDamage_=Instances.newEffectDamage();
m703effectDamage_.setPower(R_80);
m703effectDamage_.setUserAttack(true);
m703effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m703effectDamage_.setTargetDefense(true);
m703effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m703effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m703effectDamage_.setFail(ES);
m703custListEffect_.add(m703effectDamage_);
EffectStatistic m703effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> m703enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
m703enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)-1);
m703effectStatistic_.setStatisVarRank(m703enumMapStatisticByte_);
EnumMap<Statistic,String> m703enumMapStatisticString_=new EnumMap<Statistic,String>(new CollCapacity(1));
m703enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m703effectStatistic_.setLocalFailStatis(m703enumMapStatisticString_);
m703effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m703effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m703effectStatistic_.setFail(ES);
Ints m703ints_=new Ints(new CollCapacity(1));
m703ints_.add(0);
m703effectStatistic_.setRequiredSuccessfulEffects(m703ints_);
m703custListEffect_.add(m703effectStatistic_);
m703damagingMoveData_.setEffects(m703custListEffect_);
m703damagingMoveData_.setStoppableMoveSolo(true);
m703damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m703damagingMoveData_;
}
static MoveData m346(){
StatusMoveData m704statusMoveData_ = Instances.newStatusMoveData();
m704statusMoveData_.setThievableMove(true);
m704statusMoveData_.setPp((short)20);
StringList m704stringList_=new StringList(new CollCapacity(1));
m704stringList_.add(I_INSECTE);
m704statusMoveData_.setTypes(m704stringList_);
m704stringList_=new StringList(new CollCapacity(1));
m704stringList_.add(I_INSECTE);
m704statusMoveData_.setBoostedTypes(m704stringList_);
m704statusMoveData_.setAccuracy(R_1);
CustList<Effect> m704custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m704effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> m704enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
m704enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,(byte)2);
m704effectStatistic_.setStatisVarRank(m704enumMapStatisticByte_);
m704effectStatistic_.setEvtRate(Rate.newRate(R_1));
m704effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m704effectStatistic_.setFail(ES);
m704custListEffect_.add(m704effectStatistic_);
m704statusMoveData_.setEffects(m704custListEffect_);
m704statusMoveData_.setStoppableMoveMulti(true);
m704statusMoveData_.setIgnVarAccurUserNeg(true);
m704statusMoveData_.setIgnVarEvasTargetPos(true);
m704statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m704statusMoveData_;
}
static MoveData m347(){
DamagingMoveData m705damagingMoveData_ = Instances.newDamagingMoveData();
m705damagingMoveData_.setCategory(I_SPECIALE);
m705damagingMoveData_.setStoppableMoveKoSingle(true);
m705damagingMoveData_.setPp((short)5);
StringList m705stringList_=new StringList(new CollCapacity(1));
m705stringList_.add(I_PSY);
m705damagingMoveData_.setTypes(m705stringList_);
m705stringList_=new StringList(new CollCapacity(1));
m705stringList_.add(I_PSY);
m705damagingMoveData_.setBoostedTypes(m705stringList_);
m705damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m705custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m705effectDamage_=Instances.newEffectDamage();
m705effectDamage_.setPower(R_70);
m705effectDamage_.setUserAttack(true);
m705effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m705effectDamage_.setTargetDefense(true);
m705effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m705effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m705effectDamage_.setFail(ES);
m705custListEffect_.add(m705effectDamage_);
EffectStatistic m705effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> m705enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
m705enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)-1);
m705effectStatistic_.setStatisVarRank(m705enumMapStatisticByte_);
EnumMap<Statistic,String> m705enumMapStatisticString_=new EnumMap<Statistic,String>(new CollCapacity(1));
m705enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m705effectStatistic_.setLocalFailStatis(m705enumMapStatisticString_);
m705effectStatistic_.setEvtRate(Rate.newRate(R_1_2));
m705effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m705effectStatistic_.setFail(ES);
Ints m705ints_=new Ints(new CollCapacity(1));
m705ints_.add(0);
m705effectStatistic_.setRequiredSuccessfulEffects(m705ints_);
m705custListEffect_.add(m705effectStatistic_);
m705damagingMoveData_.setEffects(m705custListEffect_);
m705damagingMoveData_.setStoppableMoveSolo(true);
m705damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m705damagingMoveData_;
}
static MoveData m348(){
DamagingMoveData m706damagingMoveData_ = Instances.newDamagingMoveData();
m706damagingMoveData_.setCategory(I_PHYSIQUE);
m706damagingMoveData_.setDirect(true);
m706damagingMoveData_.setStoppableMoveKoSingle(true);
m706damagingMoveData_.setPp((short)1);
StringList m706stringList_=new StringList(new CollCapacity(1));
m706stringList_.add(I_NORMAL);
m706damagingMoveData_.setTypes(m706stringList_);
m706stringList_=new StringList(new CollCapacity(1));
m706stringList_.add(I_NORMAL);
m706damagingMoveData_.setBoostedTypes(m706stringList_);
m706damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m706custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m706effectDamage_=Instances.newEffectDamage();
m706effectDamage_.setPower(R_50);
m706effectDamage_.setUserAttack(true);
m706effectDamage_.setStatisAtt(Statistic.ATTACK);
m706effectDamage_.setTargetDefense(true);
m706effectDamage_.setStatisDef(Statistic.DEFENSE);
m706effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m706effectDamage_.setFail(ES);
m706custListEffect_.add(m706effectDamage_);
EffectDamageRate m706effectDamageRate_=Instances.newEffectDamageRate();
m706effectDamageRate_.setRateDamage(Rate.newRate(OD+R_1_4));
m706effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m706effectDamageRate_.setFail(ES);
Ints m706ints_=new Ints(new CollCapacity(1));
m706ints_.add(0);
m706effectDamageRate_.setRequiredSuccessfulEffects(m706ints_);
m706custListEffect_.add(m706effectDamageRate_);
m706damagingMoveData_.setEffects(m706custListEffect_);
m706damagingMoveData_.setStoppableMoveSolo(true);
m706damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m706damagingMoveData_;
}
static MoveData m349(){
DamagingMoveData m707damagingMoveData_ = Instances.newDamagingMoveData();
m707damagingMoveData_.setCategory(I_SPECIALE);
m707damagingMoveData_.setStoppableMoveKoSingle(true);
m707damagingMoveData_.setPp((short)20);
StringList m707stringList_=new StringList(new CollCapacity(1));
m707stringList_.add(I_GLACE);
m707damagingMoveData_.setTypes(m707stringList_);
m707stringList_=new StringList(new CollCapacity(1));
m707stringList_.add(I_GLACE);
m707damagingMoveData_.setBoostedTypes(m707stringList_);
m707damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m707custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m707effectDamage_=Instances.newEffectDamage();
m707effectDamage_.setPower(R_70);
m707effectDamage_.setUserAttack(true);
m707effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m707effectDamage_.setTargetDefense(true);
m707effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m707effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m707effectDamage_.setFail(ES);
m707custListEffect_.add(m707effectDamage_);
m707damagingMoveData_.setEffects(m707custListEffect_);
m707damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m707damagingMoveData_;
}
}
