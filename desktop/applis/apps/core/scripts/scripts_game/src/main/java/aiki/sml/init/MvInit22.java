package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit22 extends CstIgame{
private MvInit22(){}
static MoveData m550(){
DamagingMoveData m953damagingMoveData_ = Instances.newDamagingMoveData();
m953damagingMoveData_.setCategory(I_SPECIALE);
m953damagingMoveData_.setStoppableMoveKoSingle(true);
m953damagingMoveData_.setPp(10);
StringList m953stringList_=new StringList(new CollCapacity(1));
m953stringList_.add(I_SOL);
m953damagingMoveData_.setTypes(m953stringList_);
m953stringList_=new StringList(new CollCapacity(1));
m953stringList_.add(I_SOL);
m953damagingMoveData_.setBoostedTypes(m953stringList_);
m953damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m953custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m953effectDamage_=newEffectDamage();
m953effectDamage_.setPower(R_90);
m953effectDamage_.setUserAttack(true);
m953effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m953effectDamage_.setTargetDefense(true);
m953effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m953effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m953custListEffect_.add(m953effectDamage_);
EffectStatistic m953effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m953enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m953enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,-1L);
m953effectStatistic_.setStatisVarRank(m953enumMapStatisticByte_);
IdMap<Statistic,String> m953enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m953enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m953effectStatistic_.setLocalFailStatis(m953enumMapStatisticString_);
m953effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m953effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
Ints m953ints_=new Ints(new CollCapacity(1));
m953ints_.add(0);
m953effectStatistic_.setRequiredSuccessfulEffects(m953ints_);
m953custListEffect_.add(m953effectStatistic_);
m953damagingMoveData_.setEffects(m953custListEffect_);
m953damagingMoveData_.setStoppableMoveSolo(true);
m953damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m953damagingMoveData_;
}
static MoveData m551(){
StatusMoveData m954statusMoveData_ = Instances.newStatusMoveData();
m954statusMoveData_.setPp(10);
StringList m954stringList_=new StringList(new CollCapacity(1));
m954stringList_.add(I_ROCHE);
m954statusMoveData_.setTypes(m954stringList_);
m954stringList_=new StringList(new CollCapacity(1));
m954stringList_.add(I_ROCHE);
m954statusMoveData_.setBoostedTypes(m954stringList_);
m954statusMoveData_.setAccuracy(R_1);
CustList<Effect> m954custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectGlobal m954effectGlobal_=Instances.newEffectGlobal();
m954effectGlobal_.setWeather(true);
m954stringList_=new StringList(new CollCapacity(3));
m954stringList_.add(I_ROCHE);
m954stringList_.add(I_SOL);
m954stringList_.add(I_ACIER);
m954effectGlobal_.setImmuneTypes(m954stringList_);
m954effectGlobal_.setDamageEndRound(Rate.newRate(R_1_16));
StatisticTypeRate m954objectMapStatisticTypeRate_=new StatisticTypeRate(new CollCapacity(1));
m954objectMapStatisticTypeRate_.addEntry(new StatisticType(Statistic.SPECIAL_DEFENSE,I_ROCHE),Rate.newRate(R_3_2));
m954effectGlobal_.setMultStatIfContainsType(m954objectMapStatisticTypeRate_);
m954stringList_=new StringList(new CollCapacity(3));
m954stringList_.add(I_GRELE);
m954stringList_.add(I_DANSE_PLUIE);
m954stringList_.add(I_ZENITH);
m954effectGlobal_.setCancelEffects(m954stringList_);
m954effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
m954custListEffect_.add(m954effectGlobal_);
EffectEndRoundGlobal m954effectEndRoundGlobal_=Instances.newEffectEndRoundGlobal();
m954effectEndRoundGlobal_.setEndRoundRank(35);
m954effectEndRoundGlobal_.setTargetChoice(TargetChoice.LANCEUR);
Ints m954ints_=new Ints(new CollCapacity(1));
m954ints_.add(0);
m954effectEndRoundGlobal_.setRequiredSuccessfulEffects(m954ints_);
m954custListEffect_.add(m954effectEndRoundGlobal_);
m954statusMoveData_.setEffects(m954custListEffect_);
m954statusMoveData_.setRankIncrementNbRound(27);
m954statusMoveData_.setStoppableMoveMulti(true);
m954statusMoveData_.setIgnVarAccurUserNeg(true);
m954statusMoveData_.setIgnVarEvasTargetPos(true);
m954statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m954statusMoveData_;
}
static MoveData m552(){
DamagingMoveData m955damagingMoveData_ = Instances.newDamagingMoveData();
m955damagingMoveData_.setCategory(I_SPECIALE);
m955damagingMoveData_.setStoppableMoveKoSingle(true);
m955damagingMoveData_.setPp(5);
StringList m955stringList_=new StringList(new CollCapacity(1));
m955stringList_.add(I_PLANTE);
m955damagingMoveData_.setTypes(m955stringList_);
m955stringList_=new StringList(new CollCapacity(1));
m955stringList_.add(I_PLANTE);
m955damagingMoveData_.setBoostedTypes(m955stringList_);
m955damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m955custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m955effectDamage_=newEffectDamage();
m955effectDamage_.setPower(R_140);
m955effectDamage_.setUserAttack(true);
m955effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m955effectDamage_.setTargetDefense(true);
m955effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m955effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m955custListEffect_.add(m955effectDamage_);
EffectStatistic m955effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m955enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m955enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,-2L);
m955effectStatistic_.setStatisVarRank(m955enumMapStatisticByte_);
IdMap<Statistic,String> m955enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m955enumMapStatisticString_.addEntry(Statistic.SPECIAL_ATTACK,V_LANCEUR_CLONE+GT+R_0);
m955effectStatistic_.setLocalFailStatis(m955enumMapStatisticString_);
m955effectStatistic_.setEvtRate(Rate.newRate(R_1));
m955effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
Ints m955ints_=new Ints(new CollCapacity(1));
m955ints_.add(0);
m955effectStatistic_.setRequiredSuccessfulEffects(m955ints_);
m955custListEffect_.add(m955effectStatistic_);
m955damagingMoveData_.setEffects(m955custListEffect_);
m955damagingMoveData_.setStoppableMoveSolo(true);
m955damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m955damagingMoveData_;
}
static MoveData m553(){
DamagingMoveData m956damagingMoveData_ = Instances.newDamagingMoveData();
m956damagingMoveData_.setCategory(I_PHYSIQUE);
m956damagingMoveData_.setStoppableMoveKoSingle(true);
m956damagingMoveData_.setPp(15);
StringList m956stringList_=new StringList(new CollCapacity(1));
m956stringList_.add(I_PLANTE);
m956damagingMoveData_.setTypes(m956stringList_);
m956stringList_=new StringList(new CollCapacity(1));
m956stringList_.add(I_PLANTE);
m956damagingMoveData_.setBoostedTypes(m956stringList_);
m956damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m956custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m956effectDamage_=newEffectDamage();
m956effectDamage_.setPower(R_90);
m956effectDamage_.setUserAttack(true);
m956effectDamage_.setStatisAtt(Statistic.ATTACK);
m956effectDamage_.setTargetDefense(true);
m956effectDamage_.setStatisDef(Statistic.DEFENSE);
m956effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m956custListEffect_.add(m956effectDamage_);
m956damagingMoveData_.setEffects(m956custListEffect_);
m956damagingMoveData_.setStoppableMoveSolo(true);
m956damagingMoveData_.setStoppableMoveMulti(true);
m956damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m956damagingMoveData_;
}
static MoveData m554(){
StatusMoveData m957statusMoveData_ = Instances.newStatusMoveData();
m957statusMoveData_.setPp(10);
StringList m957stringList_=new StringList(new CollCapacity(1));
m957stringList_.add(I_NORMAL);
m957statusMoveData_.setTypes(m957stringList_);
m957stringList_=new StringList(new CollCapacity(1));
m957stringList_.add(I_NORMAL);
m957statusMoveData_.setBoostedTypes(m957stringList_);
m957statusMoveData_.setPriority(3);
m957statusMoveData_.setAccuracy(A_PUIS+LP+R_2+OC+OD+V_LANCEUR_NB_UTILISATION+SE+I_TENACITE+RP);
CustList<Effect> m957custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtection m957effectProtection_=Instances.newEffectProtection();
m957effectProtection_.setProtSingleAgainstKo(Rate.newRate(R_1));
m957effectProtection_.setTargetChoice(TargetChoice.LANCEUR);
m957custListEffect_.add(m957effectProtection_);
m957statusMoveData_.setEffects(m957custListEffect_);
m957statusMoveData_.setStoppableMoveMulti(true);
m957statusMoveData_.setStoppableMovePrio(true);
m957statusMoveData_.setIgnVarEvasTargetPos(true);
m957statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m957statusMoveData_;
}
//static MoveData m555(){
//DamagingMoveData m958damagingMoveData_ = Instances.newDamagingMoveData();
//m958damagingMoveData_.setCategory(I_SPECIALE);
//m958damagingMoveData_.setStoppableMoveKoSingle(true);
//m958damagingMoveData_.setPp(15);
//StringList m958stringList_=new StringList(new CollCapacity(1));
//m958stringList_.add(I_SPECTRE);
//m958damagingMoveData_.setTypes(m958stringList_);
//m958stringList_=new StringList(new CollCapacity(1));
//m958stringList_.add(I_SPECTRE);
//m958damagingMoveData_.setBoostedTypes(m958stringList_);
//m958damagingMoveData_.setAccuracy(R_1);
//CustList<Effect> m958custListEffect_ = new CustList<Effect>(new CollCapacity(1));
//EffectDamage m958effectDamage_=newEffectDamage();
//MonteCarloString m958monteCarloString_=new MonteCarloString(new CollCapacity(1));
//m958monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU,LgInt.newLgInt(R_1));
//m958effectDamage_.setDamageLaw(m958monteCarloString_);
//m958effectDamage_.setUserAttack(true);
//m958effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
//m958effectDamage_.setTargetDefense(true);
//m958effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
//m958effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
//m958custListEffect_.add(m958effectDamage_);
//m958damagingMoveData_.setEffects(m958custListEffect_);
//m958damagingMoveData_.setStoppableMoveSolo(true);
//m958damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
//return m958damagingMoveData_;
//}
static MoveData m556(){
StatusMoveData m959statusMoveData_ = Instances.newStatusMoveData();
m959statusMoveData_.setCounterableMove(true);
m959statusMoveData_.setPp(15);
StringList m959stringList_=new StringList(new CollCapacity(1));
m959stringList_.add(I_NORMAL);
m959statusMoveData_.setTypes(m959stringList_);
m959stringList_=new StringList(new CollCapacity(1));
m959stringList_.add(I_NORMAL);
m959statusMoveData_.setBoostedTypes(m959stringList_);
m959statusMoveData_.setAccuracy(R_1);
CustList<Effect> m959custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchAbilities m959effectSwitchAbilities_=Instances.newEffectSwitchAbilities();
m959effectSwitchAbilities_.setExchangeAbility(ExchangeType.GIVE_TO_TARGET);
m959effectSwitchAbilities_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m959effectSwitchAbilities_.setFail(LB+V_CIBLE_CAPACITE+RB+OE+LB+V_LANCEUR_CAPACITE+RB+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_CAPACITE+RB+OC+LB+I_MULTITYPE+OS+I_DECLIC_TACTIQUE+RB+RP+RP+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_CAPACITE+RB+OC+LB+I_CALQUE+OS+I_METEO+OS+I_DON_FLORAL+RB+RP+RP+GT+R_0);
m959custListEffect_.add(m959effectSwitchAbilities_);
m959statusMoveData_.setEffects(m959custListEffect_);
m959statusMoveData_.setStoppableMoveSolo(true);
m959statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m959statusMoveData_;
}
static MoveData m557(){
DamagingMoveData m960damagingMoveData_ = Instances.newDamagingMoveData();
m960damagingMoveData_.setCategory(I_PHYSIQUE);
m960damagingMoveData_.setDirect(true);
m960damagingMoveData_.setStoppableMoveKoSingle(true);
m960damagingMoveData_.setPp(15);
StringList m960stringList_=new StringList(new CollCapacity(1));
m960stringList_.add(I_ACIER);
m960damagingMoveData_.setTypes(m960stringList_);
m960stringList_=new StringList(new CollCapacity(1));
m960stringList_.add(I_ACIER);
m960damagingMoveData_.setBoostedTypes(m960stringList_);
m960damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m960custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m960effectDamage_=newEffectDamage();
m960effectDamage_.setPower(R_80);
m960effectDamage_.setUserAttack(true);
m960effectDamage_.setStatisAtt(Statistic.ATTACK);
m960effectDamage_.setTargetDefense(true);
m960effectDamage_.setStatisDef(Statistic.DEFENSE);
m960effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m960custListEffect_.add(m960effectDamage_);
EffectStatus m960effectStatus_=Instances.newEffectStatus();
MonteCarloString m960monteCarloString_=new MonteCarloString(new CollCapacity(2));
m960monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m960monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_3));
m960effectStatus_.setLawStatus(m960monteCarloString_);
StringMap<String> m960stringMapString_=new StringMap<String>(new CollCapacity(1));
m960stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m960effectStatus_.setLocalFailStatus(m960stringMapString_);
m960effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
Ints m960ints_=new Ints(new CollCapacity(1));
m960ints_.add(0);
m960effectStatus_.setRequiredSuccessfulEffects(m960ints_);
m960custListEffect_.add(m960effectStatus_);
m960damagingMoveData_.setEffects(m960custListEffect_);
m960damagingMoveData_.setStoppableMoveSolo(true);
m960damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m960damagingMoveData_;
}
static MoveData m558(){
DamagingMoveData m961damagingMoveData_ = Instances.newDamagingMoveData();
m961damagingMoveData_.setCategory(I_SPECIALE);
m961damagingMoveData_.setStoppableMoveKoSingle(true);
m961damagingMoveData_.setPp(15);
StringList m961stringList_=new StringList(new CollCapacity(1));
m961stringList_.add(I_SOL);
m961damagingMoveData_.setTypes(m961stringList_);
m961stringList_=new StringList(new CollCapacity(1));
m961stringList_.add(I_SOL);
m961damagingMoveData_.setBoostedTypes(m961stringList_);
m961damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m961custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m961effectDamage_=newEffectDamage();
m961effectDamage_.setPower(R_55);
m961effectDamage_.setUserAttack(true);
m961effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m961effectDamage_.setTargetDefense(true);
m961effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m961effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m961custListEffect_.add(m961effectDamage_);
EffectStatistic m961effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m961enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m961enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m961effectStatistic_.setStatisVarRank(m961enumMapStatisticByte_);
IdMap<Statistic,String> m961enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m961enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m961effectStatistic_.setLocalFailStatis(m961enumMapStatisticString_);
m961effectStatistic_.setEvtRate(Rate.newRate(R_1));
m961effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
Ints m961ints_=new Ints(new CollCapacity(1));
m961ints_.add(0);
m961effectStatistic_.setRequiredSuccessfulEffects(m961ints_);
m961custListEffect_.add(m961effectStatistic_);
m961damagingMoveData_.setEffects(m961custListEffect_);
m961damagingMoveData_.setStoppableMoveSolo(true);
m961damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m961damagingMoveData_;
}
static MoveData m559(){
StatusMoveData m962statusMoveData_ = Instances.newStatusMoveData();
m962statusMoveData_.setCounterableMove(true);
m962statusMoveData_.setPp(10);
StringList m962stringList_=new StringList(new CollCapacity(1));
m962stringList_.add(I_INSECTE);
m962statusMoveData_.setTypes(m962stringList_);
m962stringList_=new StringList(new CollCapacity(1));
m962stringList_.add(I_INSECTE);
m962statusMoveData_.setBoostedTypes(m962stringList_);
m962statusMoveData_.setAccuracy(R_1);
CustList<Effect> m962custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m962effectTeam_=Instances.newEffectTeam();
IdMap<Statistic,Rate> m962enumMapStatisticRate_=new IdMap<Statistic,Rate>(new CollCapacity(1));
m962enumMapStatisticRate_.addEntry(Statistic.ACCURACY,Rate.newRate(R_2));
m962effectTeam_.setMultStatistic(m962enumMapStatisticRate_);
m962enumMapStatisticRate_=new IdMap<Statistic,Rate>(new CollCapacity(1));
m962enumMapStatisticRate_.addEntry(Statistic.EVASINESS,Rate.newRate(R_1_2));
m962effectTeam_.setMultStatisticFoe(m962enumMapStatisticRate_);
m962effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m962custListEffect_.add(m962effectTeam_);
m962statusMoveData_.setEffects(m962custListEffect_);
m962statusMoveData_.setRankIncrementNbRound(12);
m962statusMoveData_.setStoppableMoveMulti(true);
m962statusMoveData_.setIgnVarAccurUserNeg(true);
m962statusMoveData_.setIgnVarEvasTargetPos(true);
m962statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m962statusMoveData_;
}
static MoveData m560(){
DamagingMoveData m963damagingMoveData_ = Instances.newDamagingMoveData();
m963damagingMoveData_.setCategory(I_SPECIALE);
m963damagingMoveData_.setStoppableMoveKoSingle(true);
m963damagingMoveData_.setPp(15);
StringList m963stringList_=new StringList(new CollCapacity(1));
m963stringList_.add(I_ELECTRIQUE);
m963damagingMoveData_.setTypes(m963stringList_);
m963stringList_=new StringList(new CollCapacity(1));
m963stringList_.add(I_ELECTRIQUE);
m963damagingMoveData_.setBoostedTypes(m963stringList_);
m963damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m963custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m963effectDamage_=newEffectDamage();
m963effectDamage_.setPower(R_55);
m963effectDamage_.setUserAttack(true);
m963effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m963effectDamage_.setTargetDefense(true);
m963effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m963effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m963custListEffect_.add(m963effectDamage_);
EffectStatistic m963effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m963enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m963enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m963effectStatistic_.setStatisVarRank(m963enumMapStatisticByte_);
IdMap<Statistic,String> m963enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m963enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m963effectStatistic_.setLocalFailStatis(m963enumMapStatisticString_);
m963effectStatistic_.setEvtRate(Rate.newRate(R_1));
m963effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
Ints m963ints_=new Ints(new CollCapacity(1));
m963ints_.add(0);
m963effectStatistic_.setRequiredSuccessfulEffects(m963ints_);
m963custListEffect_.add(m963effectStatistic_);
m963damagingMoveData_.setEffects(m963custListEffect_);
m963damagingMoveData_.setStoppableMoveSolo(true);
m963damagingMoveData_.setStoppableMoveMulti(true);
m963damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m963damagingMoveData_;
}
static MoveData m561(){
StatusMoveData m964statusMoveData_ = Instances.newStatusMoveData();
m964statusMoveData_.setCounterableMove(true);
m964statusMoveData_.setPp(20);
StringList m964stringList_=new StringList(new CollCapacity(1));
m964stringList_.add(I_INSECTE);
m964statusMoveData_.setTypes(m964stringList_);
m964stringList_=new StringList(new CollCapacity(1));
m964stringList_.add(I_INSECTE);
m964statusMoveData_.setBoostedTypes(m964stringList_);
m964statusMoveData_.setAccuracy(R_1);
CustList<Effect> m964custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeamWhileSendFoe m964effectTeamWhileSendFoe_=Instances.newEffectTeamWhileSendFoe();
m964effectTeamWhileSendFoe_.setFailSending(V_IMMU_TYPE_ATT_COMBATTANT_ENTRANT+SE+I_SOL+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_COMBATTANT_ENTRANT_TYPES+RB+OC+LB+I_VOL+RB+RP+RP+GT+R_0);
IdMap<Statistic,Long> m964enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m964enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m964effectTeamWhileSendFoe_.setStatistics(m964enumMapStatisticByte_);
m964effectTeamWhileSendFoe_.setTargetChoice(TargetChoice.LANCEUR);
m964custListEffect_.add(m964effectTeamWhileSendFoe_);
m964statusMoveData_.setEffects(m964custListEffect_);
m964statusMoveData_.setIgnVarAccurUserNeg(true);
m964statusMoveData_.setIgnVarEvasTargetPos(true);
m964statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m964statusMoveData_;
}
static MoveData m562(){
DamagingMoveData m965damagingMoveData_ = Instances.newDamagingMoveData();
m965damagingMoveData_.setCategory(I_PHYSIQUE);
m965damagingMoveData_.setStoppableMoveKoSingle(true);
m965damagingMoveData_.setPp(10);
StringList m965stringList_=new StringList(new CollCapacity(1));
m965stringList_.add(I_ROCHE);
m965damagingMoveData_.setTypes(m965stringList_);
m965stringList_=new StringList(new CollCapacity(1));
m965stringList_.add(I_ROCHE);
m965damagingMoveData_.setBoostedTypes(m965stringList_);
m965damagingMoveData_.setAccuracy(R_4_5);
CustList<Effect> m965custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m965effectDamage_=newEffectDamage();
m965effectDamage_.setPower(R_50);
m965effectDamage_.setUserAttack(true);
m965effectDamage_.setStatisAtt(Statistic.ATTACK);
m965effectDamage_.setTargetDefense(true);
m965effectDamage_.setStatisDef(Statistic.DEFENSE);
m965effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m965custListEffect_.add(m965effectDamage_);
EffectStatistic m965effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m965enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m965enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m965effectStatistic_.setStatisVarRank(m965enumMapStatisticByte_);
IdMap<Statistic,String> m965enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m965enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m965effectStatistic_.setLocalFailStatis(m965enumMapStatisticString_);
m965effectStatistic_.setEvtRate(Rate.newRate(R_1));
m965effectStatistic_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
Ints m965ints_=new Ints(new CollCapacity(1));
m965ints_.add(0);
m965effectStatistic_.setRequiredSuccessfulEffects(m965ints_);
m965custListEffect_.add(m965effectStatistic_);
m965damagingMoveData_.setEffects(m965custListEffect_);
m965damagingMoveData_.setStoppableMoveSolo(true);
m965damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m965damagingMoveData_;
}
static MoveData m563(){
DamagingMoveData m966damagingMoveData_ = Instances.newDamagingMoveData();
m966damagingMoveData_.setCategory(I_SPECIALE);
m966damagingMoveData_.setStoppableMoveKoSingle(true);
m966damagingMoveData_.setPp(15);
StringList m966stringList_=new StringList(new CollCapacity(1));
m966stringList_.add(I_ELECTRIQUE);
m966damagingMoveData_.setTypes(m966stringList_);
m966stringList_=new StringList(new CollCapacity(1));
m966stringList_.add(I_ELECTRIQUE);
m966damagingMoveData_.setBoostedTypes(m966stringList_);
m966damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m966custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m966effectDamage_=newEffectDamage();
m966effectDamage_.setPower(R_95);
m966effectDamage_.setUserAttack(true);
m966effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m966effectDamage_.setTargetDefense(true);
m966effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m966effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m966custListEffect_.add(m966effectDamage_);
EffectStatus m966effectStatus_=Instances.newEffectStatus();
MonteCarloString m966monteCarloString_=new MonteCarloString(new CollCapacity(2));
m966monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m966monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m966effectStatus_.setLawStatus(m966monteCarloString_);
StringMap<String> m966stringMapString_=new StringMap<String>(new CollCapacity(1));
m966stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_ELECTRIQUE+RB+RP+RP+GT+R_0);
m966effectStatus_.setLocalFailStatus(m966stringMapString_);
m966effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
Ints m966ints_=new Ints(new CollCapacity(1));
m966ints_.add(0);
m966effectStatus_.setRequiredSuccessfulEffects(m966ints_);
m966custListEffect_.add(m966effectStatus_);
m966damagingMoveData_.setEffects(m966custListEffect_);
m966damagingMoveData_.setStoppableMoveSolo(true);
m966damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m966damagingMoveData_;
}
static MoveData m564(){
DamagingMoveData m967damagingMoveData_ = Instances.newDamagingMoveData();
m967damagingMoveData_.setCategory(I_PHYSIQUE);
m967damagingMoveData_.setDirect(true);
m967damagingMoveData_.setStoppableMoveKoSingle(true);
m967damagingMoveData_.setPp(10);
StringList m967stringList_=new StringList(new CollCapacity(1));
m967stringList_.add(I_NORMAL);
m967damagingMoveData_.setTypes(m967stringList_);
m967stringList_=new StringList(new CollCapacity(1));
m967stringList_.add(I_NORMAL);
m967damagingMoveData_.setBoostedTypes(m967stringList_);
m967damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m967custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m967effectDamage_=newEffectDamageLawFour(new LgInt(R_3),new LgInt(R_3),new LgInt(R_1),new LgInt(R_1));
m967effectDamage_.setPower(R_15);
m967effectDamage_.setUserAttack(true);
m967effectDamage_.setStatisAtt(Statistic.ATTACK);
m967effectDamage_.setTargetDefense(true);
m967effectDamage_.setStatisDef(Statistic.DEFENSE);
m967effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m967custListEffect_.add(m967effectDamage_);
m967damagingMoveData_.setEffects(m967custListEffect_);
m967damagingMoveData_.setStoppableMoveSolo(true);
m967damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m967damagingMoveData_;
}
static MoveData m565(){
DamagingMoveData m968damagingMoveData_ = Instances.newDamagingMoveData();
m968damagingMoveData_.setCategory(I_SPECIALE);
m968damagingMoveData_.setStoppableMoveKoSingle(true);
m968damagingMoveData_.setPp(35);
StringList m968stringList_=new StringList(new CollCapacity(1));
m968stringList_.add(I_VOL);
m968damagingMoveData_.setTypes(m968stringList_);
m968stringList_=new StringList(new CollCapacity(1));
m968stringList_.add(I_VOL);
m968damagingMoveData_.setBoostedTypes(m968stringList_);
m968damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m968custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m968effectDamage_=newEffectDamage();
m968effectDamage_.setPower(R_40+OM+LP+R_2+OM+A_CARACFERME+LP+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_ENVOL+OS+I_REBOND+OS+I_CHUTE_LIBRE+RB+RP+OM+V_CIBLE_DISPARAIT+OC+R_1+OC+R_1+RP+OP+A_CARACFERME+LP+V_CIBLE_DISPARAIT+OC+R_0+OC+R_0+RP+RP);
m968effectDamage_.setUserAttack(true);
m968effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m968effectDamage_.setTargetDefense(true);
m968effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m968effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m968custListEffect_.add(m968effectDamage_);
m968damagingMoveData_.setEffects(m968custListEffect_);
m968damagingMoveData_.setStoppableMoveSolo(true);
m968stringList_=new StringList(new CollCapacity(3));
m968stringList_.add(I_ENVOL);
m968stringList_.add(I_REBOND);
m968stringList_.add(I_CHUTE_LIBRE);
m968damagingMoveData_.setAchieveDisappearedPkUsingMove(m968stringList_);
m968damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m968damagingMoveData_;
}
static MoveData m566(){
DamagingMoveData m969damagingMoveData_ = Instances.newDamagingMoveData();
m969damagingMoveData_.setCategory(I_PHYSIQUE);
m969damagingMoveData_.setStoppableMoveKoSingle(true);
m969damagingMoveData_.setPp(15);
StringList m969stringList_=new StringList(new CollCapacity(1));
m969stringList_.add(I_SOL);
m969damagingMoveData_.setTypes(m969stringList_);
m969stringList_=new StringList(new CollCapacity(1));
m969stringList_.add(I_SOL);
m969damagingMoveData_.setBoostedTypes(m969stringList_);
m969damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m969custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m969effectDamage_=newEffectDamage();
m969effectDamage_.setPower(R_35);
m969effectDamage_.setUserAttack(true);
m969effectDamage_.setStatisAtt(Statistic.ATTACK);
m969effectDamage_.setTargetDefense(true);
m969effectDamage_.setStatisDef(Statistic.DEFENSE);
m969effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m969custListEffect_.add(m969effectDamage_);
EffectEndRoundSingleRelation m969effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> m969longMapRate_=new LongMap<Rate>(new CollCapacity(5));
m969longMapRate_.addEntry(1L,Rate.newRate(R_1_16));
m969longMapRate_.addEntry(2L,Rate.newRate(R_1_16));
m969longMapRate_.addEntry(3L,Rate.newRate(R_1_16));
m969longMapRate_.addEntry(4L,Rate.newRate(R_1_16));
m969longMapRate_.addEntry(5L,Rate.newRate(R_1_16));
m969effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(m969longMapRate_);
MonteCarloNumber m969monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
m969monteCarloNumber_.addQuickEvent(Rate.newRate(R_3),LgInt.newLgInt(R_3));
m969monteCarloNumber_.addQuickEvent(Rate.newRate(R_2),LgInt.newLgInt(R_3));
m969monteCarloNumber_.addQuickEvent(Rate.newRate(R_4),LgInt.newLgInt(R_1));
m969monteCarloNumber_.addQuickEvent(Rate.newRate(R_5),LgInt.newLgInt(R_1));
m969effectEndRoundSingleRelation_.setLawForEnablingEffect(m969monteCarloNumber_);
m969effectEndRoundSingleRelation_.setFailEndRound(V_CIBLE_CLONE+GT+R_0);
m969effectEndRoundSingleRelation_.setEndRoundRank(50);
m969effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_MULT);
m969effectEndRoundSingleRelation_.setFail(V_CIBLE_CLONE+GT+R_0);
Ints m969ints_=new Ints(new CollCapacity(1));
m969ints_.add(0);
m969effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(m969ints_);
m969custListEffect_.add(m969effectEndRoundSingleRelation_);
m969damagingMoveData_.setEffects(m969custListEffect_);
m969damagingMoveData_.setStoppableMoveSolo(true);
m969damagingMoveData_.setStoppableMoveMulti(true);
m969damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m969damagingMoveData_;
}
static MoveData m567(){
StatusMoveData m970statusMoveData_ = Instances.newStatusMoveData();
m970statusMoveData_.setPp(10);
StringList m970stringList_=new StringList(new CollCapacity(1));
m970stringList_.add(I_PSY);
m970statusMoveData_.setTypes(m970stringList_);
m970stringList_=new StringList(new CollCapacity(1));
m970stringList_.add(I_PSY);
m970statusMoveData_.setBoostedTypes(m970stringList_);
m970statusMoveData_.setAccuracy(R_1);
CustList<Effect> m970custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchItems m970effectSwitchItems_=Instances.newEffectSwitchItems();
m970effectSwitchItems_.setMoveObject(MoveItemType.EXCHANGE_OBJECTS);
m970effectSwitchItems_.setTargetChoice(TargetChoice.ADJ_MULT);
m970effectSwitchItems_.setFail(V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+LB+V_LANCEUR_OBJET+RB+RP+OP+A_CARDINAL+LP+LB+V_CIBLE_OBJET+RB+RP+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_NOM+OS+V_CIBLE_NOM+RB+OC+LB+I_GIRATINA+RB+RP+RP+GT+R_0+OA+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_OBJET+RB+OC+LB+I_ORBE_PLATINE+RB+RP+RP+OE+R_1+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_NOM+OS+V_CIBLE_NOM+RB+OC+LB+I_GENESECT+RB+RP+RP+GT+R_0+OA+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_OBJET+RB+OC+LB+I_MODULE_AQUA+OS+I_MODULE_CHOC+OS+I_MODULE_CRYO+OS+I_MODULE_PYRO+RB+RP+RP+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_NOM+OS+V_CIBLE_NOM+RB+OC+LB+I_ARCEUS+RB+RP+RP+GT+R_0+OA+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_OBJET+RB+OC+LB+I_PLAQUE_CIEL+OS+I_PLAQUE_DRACO+OS+I_PLAQUE_FANTO+OS+I_PLAQUE_FER+OS+I_PLAQUE_FLAM+OS+I_PLAQUE_FEE+OS+I_PLAQUE_GLACE+OS+I_PLAQUE_HERBE+OS+I_PLAQUE_HYDRO+OS+I_PLAQUINSECT+OS+I_PLAQUESPRIT+OS+I_PLAQUE_OMBRE+OS+I_PLAQUE_POING+OS+I_PLAQUE_ROC+OS+I_PLAQUE_TERRE+OS+I_PLAQUE_TOXIC+OS+I_PLAQUE_VOLT+RB+RP+RP+GT+R_0);
m970custListEffect_.add(m970effectSwitchItems_);
m970statusMoveData_.setEffects(m970custListEffect_);
m970statusMoveData_.setStoppableMoveSolo(true);
m970statusMoveData_.setStoppableMoveMulti(true);
m970statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m970statusMoveData_;
}
static MoveData m568(){
StatusMoveData m971statusMoveData_ = Instances.newStatusMoveData();
m971statusMoveData_.setCounterableMove(true);
m971statusMoveData_.setPp(15);
StringList m971stringList_=new StringList(new CollCapacity(1));
m971stringList_.add(I_TENEBRE);
m971statusMoveData_.setTypes(m971stringList_);
m971stringList_=new StringList(new CollCapacity(1));
m971stringList_.add(I_TENEBRE);
m971statusMoveData_.setBoostedTypes(m971stringList_);
m971statusMoveData_.setAccuracy(R_1);
CustList<Effect> m971custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRestriction m971effectRestriction_=Instances.newEffectRestriction();
m971effectRestriction_.setForbidTargetUsingItem(false);
m971effectRestriction_.setChoiceRestriction(MoveChoiceRestrictionType.DER);
m971effectRestriction_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m971custListEffect_.add(m971effectRestriction_);
m971statusMoveData_.setEffects(m971custListEffect_);
m971statusMoveData_.setStoppableMoveSolo(true);
m971statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m971statusMoveData_;
}
static MoveData m569(){
StatusMoveData m972statusMoveData_ = Instances.newStatusMoveData();
m972statusMoveData_.setPp(15);
StringList m972stringList_=new StringList(new CollCapacity(1));
m972stringList_.add(I_EAU);
m972statusMoveData_.setTypes(m972stringList_);
m972stringList_=new StringList(new CollCapacity(1));
m972stringList_.add(I_EAU);
m972statusMoveData_.setBoostedTypes(m972stringList_);
m972statusMoveData_.setAccuracy(R_1);
CustList<Effect> m972custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectMultSufferedMovePower m972effectMultSufferedMovePower_=Instances.newEffectMultSufferedMovePower();
StringMap<Rate> m972stringMapRate_=new StringMap<Rate>(new CollCapacity(1));
m972stringMapRate_.addEntry(I_FEU,Rate.newRate(R_1_2));
m972effectMultSufferedMovePower_.setMultMovePowerFctType(m972stringMapRate_);
m972effectMultSufferedMovePower_.setTargetChoice(TargetChoice.LANCEUR);
m972custListEffect_.add(m972effectMultSufferedMovePower_);
m972statusMoveData_.setEffects(m972custListEffect_);
m972statusMoveData_.setStoppableMoveMulti(true);
m972statusMoveData_.setIgnVarAccurUserNeg(true);
m972statusMoveData_.setIgnVarEvasTargetPos(true);
m972statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m972statusMoveData_;
}
static MoveData m570(){
DamagingMoveData m973damagingMoveData_ = Instances.newDamagingMoveData();
m973damagingMoveData_.setCategory(I_PHYSIQUE);
m973damagingMoveData_.setDirect(true);
m973damagingMoveData_.setStoppableMoveKoSingle(true);
m973damagingMoveData_.setPp(40);
StringList m973stringList_=new StringList(new CollCapacity(1));
m973stringList_.add(I_NORMAL);
m973damagingMoveData_.setTypes(m973stringList_);
m973stringList_=new StringList(new CollCapacity(1));
m973stringList_.add(I_NORMAL);
m973damagingMoveData_.setBoostedTypes(m973stringList_);
m973damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m973custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m973effectDamage_=newEffectDamage();
m973effectDamage_.setPower(R_20);
m973effectDamage_.setUserAttack(true);
m973effectDamage_.setStatisAtt(Statistic.ATTACK);
m973effectDamage_.setTargetDefense(true);
m973effectDamage_.setStatisDef(Statistic.DEFENSE);
m973effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m973custListEffect_.add(m973effectDamage_);
EffectTeam m973effectTeam_=Instances.newEffectTeam();
m973stringList_=new StringList(new CollCapacity(3));
m973stringList_.add(I_PICOTS);
m973stringList_.add(I_PICS_TOXIK);
m973stringList_.add(I_PIEGE_DE_ROC);
m973effectTeam_.setDisableFoeTeamEffects(m973stringList_);
m973stringList_=new StringList(new CollCapacity(1));
m973stringList_.add(I_VAMPIGRAINE_ST);
m973effectTeam_.setDisableFoeTeamStatus(m973stringList_);
m973effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
Ints m973ints_=new Ints(new CollCapacity(1));
m973ints_.add(0);
m973effectTeam_.setRequiredSuccessfulEffects(m973ints_);
m973custListEffect_.add(m973effectTeam_);
m973damagingMoveData_.setEffects(m973custListEffect_);
m973damagingMoveData_.setStoppableMoveSolo(true);
m973damagingMoveData_.setSecEffectIfNoDamage(true);
m973damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m973damagingMoveData_;
}
static MoveData m571(){
DamagingMoveData m974damagingMoveData_ = Instances.newDamagingMoveData();
m974damagingMoveData_.setCategory(I_SPECIALE);
m974damagingMoveData_.setStoppableMoveKoSingle(true);
m974damagingMoveData_.setPp(5);
StringList m974stringList_=new StringList(new CollCapacity(1));
m974stringList_.add(I_COMBAT);
m974damagingMoveData_.setTypes(m974stringList_);
m974stringList_=new StringList(new CollCapacity(1));
m974stringList_.add(I_COMBAT);
m974damagingMoveData_.setBoostedTypes(m974stringList_);
m974damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m974custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m974effectDamage_=newEffectDamage();
MonteCarloString m974monteCarloString_=new MonteCarloString(new CollCapacity(1));
m974monteCarloString_.addQuickEvent(V_LANCEUR_PV_RESTANTS,LgInt.newLgInt(R_1));
m974effectDamage_.setDamageLaw(m974monteCarloString_);
m974effectDamage_.setUserAttack(true);
m974effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m974effectDamage_.setTargetDefense(true);
m974effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m974effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m974custListEffect_.add(m974effectDamage_);
m974damagingMoveData_.setEffects(m974custListEffect_);
m974damagingMoveData_.setStoppableMoveSolo(true);
m974damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m974damagingMoveData_;
}
static MoveData m572(){
StatusMoveData m975statusMoveData_ = Instances.newStatusMoveData();
m975statusMoveData_.setPp(10);
StringList m975stringList_=new StringList(new CollCapacity(1));
m975stringList_.add(I_POISON);
m975statusMoveData_.setTypes(m975stringList_);
m975stringList_=new StringList(new CollCapacity(1));
m975stringList_.add(I_POISON);
m975statusMoveData_.setBoostedTypes(m975stringList_);
m975statusMoveData_.setAccuracy(R_9_10);
CustList<Effect> m975custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m975effectStatus_=Instances.newEffectStatus();
MonteCarloString m975monteCarloString_=new MonteCarloString(new CollCapacity(1));
m975monteCarloString_.addQuickEvent(I_POISON_GRAVE,LgInt.newLgInt(R_1));
m975effectStatus_.setLawStatus(m975monteCarloString_);
StringMap<String> m975stringMapString_=new StringMap<String>(new CollCapacity(1));
m975stringMapString_.addEntry(I_POISON_GRAVE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_SIMPLE_POISON+OS+I_POISON_GRAVE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_POISON+OS+I_ACIER+RB+RP+RP+GT+R_0);
m975effectStatus_.setLocalFailStatus(m975stringMapString_);
m975effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m975custListEffect_.add(m975effectStatus_);
m975statusMoveData_.setEffects(m975custListEffect_);
m975statusMoveData_.setStoppableMoveSolo(true);
m975statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m975statusMoveData_;
}
static MoveData m573(){
DamagingMoveData m976damagingMoveData_ = Instances.newDamagingMoveData();
m976damagingMoveData_.setCategory(I_PHYSIQUE);
m976damagingMoveData_.setDirect(true);
m976damagingMoveData_.setStoppableMoveKoSingle(true);
m976damagingMoveData_.setPp(20);
StringList m976stringList_=new StringList(new CollCapacity(1));
m976stringList_.add(I_NORMAL);
m976damagingMoveData_.setTypes(m976stringList_);
m976stringList_=new StringList(new CollCapacity(1));
m976stringList_.add(I_NORMAL);
m976damagingMoveData_.setBoostedTypes(m976stringList_);
m976damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m976custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m976effectDamage_=newEffectDamage();
m976effectDamage_.setChRate(1);
m976effectDamage_.setPower(R_70);
m976effectDamage_.setUserAttack(true);
m976effectDamage_.setStatisAtt(Statistic.ATTACK);
m976effectDamage_.setTargetDefense(true);
m976effectDamage_.setStatisDef(Statistic.DEFENSE);
m976effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m976custListEffect_.add(m976effectDamage_);
m976damagingMoveData_.setEffects(m976custListEffect_);
m976damagingMoveData_.setStoppableMoveSolo(true);
m976damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m976damagingMoveData_;
}
static MoveData m574(){
DamagingMoveData m977damagingMoveData_ = Instances.newDamagingMoveData();
m977damagingMoveData_.setCategory(I_PHYSIQUE);
m977damagingMoveData_.setDirect(true);
m977damagingMoveData_.setStoppableMoveKoSingle(true);
m977damagingMoveData_.setPp(15);
StringList m977stringList_=new StringList(new CollCapacity(1));
m977stringList_.add(I_TENEBRE);
m977damagingMoveData_.setTypes(m977stringList_);
m977stringList_=new StringList(new CollCapacity(1));
m977stringList_.add(I_TENEBRE);
m977damagingMoveData_.setBoostedTypes(m977stringList_);
m977damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m977custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m977effectDamage_=newEffectDamage();
m977effectDamage_.setChRate(1);
m977effectDamage_.setPower(R_70);
m977effectDamage_.setUserAttack(true);
m977effectDamage_.setStatisAtt(Statistic.ATTACK);
m977effectDamage_.setTargetDefense(true);
m977effectDamage_.setStatisDef(Statistic.DEFENSE);
m977effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m977custListEffect_.add(m977effectDamage_);
m977damagingMoveData_.setEffects(m977custListEffect_);
m977damagingMoveData_.setStoppableMoveSolo(true);
m977damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m977damagingMoveData_;
}
}
