package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit23 extends CstIgame{
private MvInit23(){}
static MoveData m575(){
DamagingMoveData m980damagingMoveData_ = Instances.newDamagingMoveData();
m980damagingMoveData_.setCategory(I_SPECIALE);
m980damagingMoveData_.setStoppableMoveKoSingle(true);
m980damagingMoveData_.setPp(25);
StringList m980stringList_=new StringList(new CollCapacity(1));
m980stringList_.add(I_VOL);
m980damagingMoveData_.setTypes(m980stringList_);
m980stringList_=new StringList(new CollCapacity(1));
m980stringList_.add(I_VOL);
m980damagingMoveData_.setBoostedTypes(m980stringList_);
m980damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m980custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m980effectDamage_=Instances.newEffectDamage();
m980effectDamage_.setChRate(1);
m980effectDamage_.setPower(R_55);
m980effectDamage_.setUserAttack(true);
m980effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m980effectDamage_.setTargetDefense(true);
m980effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m980effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m980effectDamage_.setFail(ES);
m980custListEffect_.add(m980effectDamage_);
m980damagingMoveData_.setEffects(m980custListEffect_);
m980damagingMoveData_.setStoppableMoveSolo(true);
m980damagingMoveData_.setStoppableMoveMulti(true);
m980damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m980damagingMoveData_;
}
static MoveData m576(){
DamagingMoveData m981damagingMoveData_ = Instances.newDamagingMoveData();
m981damagingMoveData_.setCategory(I_PHYSIQUE);
m981damagingMoveData_.setStoppableMoveKoSingle(true);
m981damagingMoveData_.setPp(25);
StringList m981stringList_=new StringList(new CollCapacity(1));
m981stringList_.add(I_PLANTE);
m981damagingMoveData_.setTypes(m981stringList_);
m981stringList_=new StringList(new CollCapacity(1));
m981stringList_.add(I_PLANTE);
m981damagingMoveData_.setBoostedTypes(m981stringList_);
m981damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m981custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m981effectDamage_=Instances.newEffectDamage();
m981effectDamage_.setChRate(1);
m981effectDamage_.setPower(R_55);
m981effectDamage_.setUserAttack(true);
m981effectDamage_.setStatisAtt(Statistic.ATTACK);
m981effectDamage_.setTargetDefense(true);
m981effectDamage_.setStatisDef(Statistic.DEFENSE);
m981effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m981effectDamage_.setFail(ES);
m981custListEffect_.add(m981effectDamage_);
m981damagingMoveData_.setEffects(m981custListEffect_);
m981damagingMoveData_.setStoppableMoveSolo(true);
m981damagingMoveData_.setStoppableMoveMulti(true);
m981damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m981damagingMoveData_;
}
static MoveData m577(){
DamagingMoveData m982damagingMoveData_ = Instances.newDamagingMoveData();
m982damagingMoveData_.setCategory(I_PHYSIQUE);
m982damagingMoveData_.setStoppableMoveKoSingle(true);
m982damagingMoveData_.setPp(40);
StringList m982stringList_=new StringList(new CollCapacity(1));
m982stringList_.add(I_EAU);
m982damagingMoveData_.setTypes(m982stringList_);
m982stringList_=new StringList(new CollCapacity(1));
m982stringList_.add(I_EAU);
m982damagingMoveData_.setBoostedTypes(m982stringList_);
m982damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m982custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m982effectDamage_=Instances.newEffectDamage();
m982effectDamage_.setPower(R_20);
m982effectDamage_.setUserAttack(true);
m982effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m982effectDamage_.setTargetDefense(true);
m982effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m982effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m982effectDamage_.setFail(ES);
m982custListEffect_.add(m982effectDamage_);
m982damagingMoveData_.setEffects(m982custListEffect_);
m982damagingMoveData_.setStoppableMoveMulti(true);
m982damagingMoveData_.setIgnVarAccurUserNeg(true);
m982damagingMoveData_.setIgnVarEvasTargetPos(true);
m982damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m982damagingMoveData_;
}
static MoveData m578(){
DamagingMoveData m983damagingMoveData_ = Instances.newDamagingMoveData();
m983damagingMoveData_.setCategory(I_PHYSIQUE);
m983damagingMoveData_.setDirect(true);
m983damagingMoveData_.setStoppableMoveKoSingle(true);
m983damagingMoveData_.setPp(15);
StringList m983stringList_=new StringList(new CollCapacity(1));
m983stringList_.add(I_TENEBRE);
m983damagingMoveData_.setTypes(m983stringList_);
m983stringList_=new StringList(new CollCapacity(1));
m983stringList_.add(I_TENEBRE);
m983damagingMoveData_.setBoostedTypes(m983stringList_);
m983damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m983custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m983effectDamage_=Instances.newEffectDamage();
m983effectDamage_.setPower(R_95);
m983effectDamage_.setStatisAtt(Statistic.ATTACK);
m983effectDamage_.setTargetDefense(true);
m983effectDamage_.setStatisDef(Statistic.DEFENSE);
m983effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m983effectDamage_.setFail(ES);
m983custListEffect_.add(m983effectDamage_);
m983damagingMoveData_.setEffects(m983custListEffect_);
m983damagingMoveData_.setStoppableMoveSolo(true);
m983damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m983damagingMoveData_;
}
static MoveData m579(){
DamagingMoveData m984damagingMoveData_ = Instances.newDamagingMoveData();
m984damagingMoveData_.setCategory(I_SPECIALE);
m984damagingMoveData_.setStoppableMoveKoSingle(true);
m984damagingMoveData_.setPp(10);
StringList m984stringList_=new StringList(new CollCapacity(1));
m984stringList_.add(I_NORMAL);
m984damagingMoveData_.setTypes(m984stringList_);
m984stringList_=new StringList(new CollCapacity(1));
m984stringList_.add(I_NORMAL);
m984damagingMoveData_.setBoostedTypes(m984stringList_);
m984damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m984custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m984effectDamage_=Instances.newEffectDamage();
m984effectDamage_.setPower(R_80);
m984effectDamage_.setUserAttack(true);
m984effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m984effectDamage_.setTargetDefense(true);
m984effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m984effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m984effectDamage_.setFail(ES);
m984custListEffect_.add(m984effectDamage_);
EffectStatus m984effectStatus_=Instances.newEffectStatus();
MonteCarloString m984monteCarloString_=new MonteCarloString(new CollCapacity(4));
m984monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_12));
m984monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_1));
m984monteCarloString_.addQuickEvent(I_GEL,LgInt.newLgInt(R_1));
m984monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m984effectStatus_.setLawStatus(m984monteCarloString_);
StringMap<String> m984stringMapString_=new StringMap<String>(new CollCapacity(2));
m984stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m984stringMapString_.addEntry(I_GEL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_GEL+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_GLACE+RB+RP+RP+GT+R_0);
m984effectStatus_.setLocalFailStatus(m984stringMapString_);
m984effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m984effectStatus_.setFail(ES);
Ints m984ints_=new Ints(new CollCapacity(1));
m984ints_.add(0);
m984effectStatus_.setRequiredSuccessfulEffects(m984ints_);
m984custListEffect_.add(m984effectStatus_);
m984damagingMoveData_.setEffects(m984custListEffect_);
m984damagingMoveData_.setStoppableMoveSolo(true);
m984damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m984damagingMoveData_;
}
static MoveData m580(){
DamagingMoveData m985damagingMoveData_ = Instances.newDamagingMoveData();
m985damagingMoveData_.setCategory(I_PHYSIQUE);
m985damagingMoveData_.setDirect(true);
m985damagingMoveData_.setStoppableMoveKoSingle(true);
m985damagingMoveData_.setPp(10);
StringList m985stringList_=new StringList(new CollCapacity(1));
m985stringList_.add(I_COMBAT);
m985damagingMoveData_.setTypes(m985stringList_);
m985stringList_=new StringList(new CollCapacity(1));
m985stringList_.add(I_COMBAT);
m985damagingMoveData_.setBoostedTypes(m985stringList_);
m985damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m985custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m985effectDamage_=newEffectDamageLaw(new Rate(R_3));
m985effectDamage_.setPower(R_20);
m985effectDamage_.setUserAttack(true);
m985effectDamage_.setStatisAtt(Statistic.ATTACK);
m985effectDamage_.setTargetDefense(true);
m985effectDamage_.setStatisDef(Statistic.DEFENSE);
m985effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m985effectDamage_.setFail(ES);
m985custListEffect_.add(m985effectDamage_);
m985damagingMoveData_.setEffects(m985custListEffect_);
m985damagingMoveData_.setStoppableMoveSolo(true);
m985damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m985damagingMoveData_;
}
static MoveData m581(){
DamagingMoveData m986damagingMoveData_ = Instances.newDamagingMoveData();
m986damagingMoveData_.setCategory(I_PHYSIQUE);
m986damagingMoveData_.setDirect(true);
m986damagingMoveData_.setStoppableMoveKoSingle(true);
m986damagingMoveData_.setPp(5);
StringList m986stringList_=new StringList(new CollCapacity(1));
m986stringList_.add(I_SOL);
m986damagingMoveData_.setTypes(m986stringList_);
m986stringList_=new StringList(new CollCapacity(1));
m986stringList_.add(I_SOL);
m986damagingMoveData_.setBoostedTypes(m986stringList_);
m986damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m986custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m986effectDamage_=Instances.newEffectDamage();
m986effectDamage_.setPower(R_100);
IdList<Statistic> m986enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m986enumListStatistic_.add(Statistic.EVASINESS);
m986effectDamage_.setIgnVarStatTargetPos(m986enumListStatistic_);
m986enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m986enumListStatistic_.add(Statistic.ACCURACY);
m986effectDamage_.setIgnVarStatUserNeg(m986enumListStatistic_);
m986effectDamage_.setUserAttack(true);
m986effectDamage_.setStatisAtt(Statistic.ATTACK);
m986effectDamage_.setTargetDefense(true);
m986effectDamage_.setStatisDef(Statistic.DEFENSE);
m986effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m986effectDamage_.setFail(ES);
m986custListEffect_.add(m986effectDamage_);
m986damagingMoveData_.setEffects(m986custListEffect_);
m986damagingMoveData_.setIgnVarAccurUserNeg(true);
m986damagingMoveData_.setIgnVarEvasTargetPos(true);
m986damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m986damagingMoveData_;
}
static MoveData m582(){
StatusMoveData m987statusMoveData_ = Instances.newStatusMoveData();
m987statusMoveData_.setCounterableMove(true);
m987statusMoveData_.setPp(10);
StringList m987stringList_=new StringList(new CollCapacity(1));
m987stringList_.add(I_TENEBRE);
m987statusMoveData_.setTypes(m987stringList_);
m987stringList_=new StringList(new CollCapacity(1));
m987stringList_.add(I_TENEBRE);
m987statusMoveData_.setBoostedTypes(m987stringList_);
m987statusMoveData_.setAccuracy(R_4_5);
CustList<Effect> m987custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m987effectStatus_=Instances.newEffectStatus();
MonteCarloString m987monteCarloString_=new MonteCarloString(new CollCapacity(1));
m987monteCarloString_.addQuickEvent(I_SOMMEIL,LgInt.newLgInt(R_1));
m987effectStatus_.setLawStatus(m987monteCarloString_);
StringMap<String> m987stringMapString_=new StringMap<String>(new CollCapacity(1));
m987stringMapString_.addEntry(I_SOMMEIL,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_SOMMEIL+OS+I_SOMMEIL_REPOS+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m987effectStatus_.setLocalFailStatus(m987stringMapString_);
m987effectStatus_.setTargetChoice(TargetChoice.ADJ_ADV);
m987effectStatus_.setFail(ES);
m987custListEffect_.add(m987effectStatus_);
m987statusMoveData_.setEffects(m987custListEffect_);
m987statusMoveData_.setStoppableMoveSolo(true);
m987statusMoveData_.setStoppableMoveMulti(true);
m987statusMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m987statusMoveData_;
}
static MoveData m583(){
DamagingMoveData m988damagingMoveData_ = Instances.newDamagingMoveData();
m988damagingMoveData_.setCategory(I_PHYSIQUE);
m988damagingMoveData_.setDirect(true);
m988damagingMoveData_.setStoppableMoveKoSingle(true);
m988damagingMoveData_.setPp(10);
StringList m988stringList_=new StringList(new CollCapacity(1));
m988stringList_.add(I_SOL);
m988damagingMoveData_.setTypes(m988stringList_);
m988stringList_=new StringList(new CollCapacity(1));
m988stringList_.add(I_SOL);
m988damagingMoveData_.setBoostedTypes(m988stringList_);
m988damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m988custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m988effectDamage_=Instances.newEffectDamage();
m988effectDamage_.setPower(R_80);
m988effectDamage_.setUserAttack(true);
m988effectDamage_.setStatisAtt(Statistic.ATTACK);
m988effectDamage_.setTargetDefense(true);
m988effectDamage_.setStatisDef(Statistic.DEFENSE);
m988effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m988effectDamage_.setFail(ES);
m988custListEffect_.add(m988effectDamage_);
m988damagingMoveData_.setEffects(m988custListEffect_);
m988damagingMoveData_.setNbPrepaRound(1);
m988damagingMoveData_.setDisappearBeforeUse(true);
m988damagingMoveData_.setStoppableMoveSolo(true);
m988damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m988damagingMoveData_;
}
static MoveData m584(){
DamagingMoveData m989damagingMoveData_ = Instances.newDamagingMoveData();
m989damagingMoveData_.setCategory(I_PHYSIQUE);
m989damagingMoveData_.setDirect(true);
m989damagingMoveData_.setStoppableMoveKoSingle(true);
m989damagingMoveData_.setPp(10);
StringList m989stringList_=new StringList(new CollCapacity(1));
m989stringList_.add(I_SOL);
m989damagingMoveData_.setTypes(m989stringList_);
m989stringList_=new StringList(new CollCapacity(1));
m989stringList_.add(I_SOL);
m989damagingMoveData_.setBoostedTypes(m989stringList_);
m989damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m989custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m989effectDamage_=Instances.newEffectDamage();
m989effectDamage_.setChRate(1);
m989effectDamage_.setPower(R_80);
m989effectDamage_.setUserAttack(true);
m989effectDamage_.setStatisAtt(Statistic.ATTACK);
m989effectDamage_.setTargetDefense(true);
m989effectDamage_.setStatisDef(Statistic.DEFENSE);
m989effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m989effectDamage_.setFail(ES);
m989custListEffect_.add(m989effectDamage_);
m989damagingMoveData_.setEffects(m989custListEffect_);
m989damagingMoveData_.setStoppableMoveSolo(true);
m989damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m989damagingMoveData_;
}
static MoveData m585(){
DamagingMoveData m990damagingMoveData_ = Instances.newDamagingMoveData();
m990damagingMoveData_.setCategory(I_PHYSIQUE);
m990damagingMoveData_.setDirect(true);
m990damagingMoveData_.setStoppableMoveKoSingle(true);
m990damagingMoveData_.setPp(20);
StringList m990stringList_=new StringList(new CollCapacity(1));
m990stringList_.add(I_NORMAL);
m990damagingMoveData_.setTypes(m990stringList_);
m990stringList_=new StringList(new CollCapacity(1));
m990stringList_.add(I_NORMAL);
m990damagingMoveData_.setBoostedTypes(m990stringList_);
m990damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m990custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m990effectDamage_=Instances.newEffectDamage();
m990effectDamage_.setPower(R_80);
m990effectDamage_.setUserAttack(true);
m990effectDamage_.setStatisAtt(Statistic.ATTACK);
m990effectDamage_.setTargetDefense(true);
m990effectDamage_.setStatisDef(Statistic.DEFENSE);
m990effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m990effectDamage_.setFail(ES);
m990custListEffect_.add(m990effectDamage_);
m990damagingMoveData_.setEffects(m990custListEffect_);
m990damagingMoveData_.setStoppableMoveSolo(true);
m990damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m990damagingMoveData_;
}
static MoveData m586(){
DamagingMoveData m991damagingMoveData_ = Instances.newDamagingMoveData();
m991damagingMoveData_.setCategory(I_PHYSIQUE);
m991damagingMoveData_.setDirect(true);
m991damagingMoveData_.setStoppableMoveKoSingle(true);
m991damagingMoveData_.setPp(5);
StringList m991stringList_=new StringList(new CollCapacity(1));
m991stringList_.add(I_NORMAL);
m991damagingMoveData_.setTypes(m991stringList_);
m991stringList_=new StringList(new CollCapacity(1));
m991stringList_.add(I_NORMAL);
m991damagingMoveData_.setBoostedTypes(m991stringList_);
m991damagingMoveData_.setAccuracy(R_3_4);
CustList<Effect> m991custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m991effectDamage_=Instances.newEffectDamage();
m991effectDamage_.setPower(R_120);
m991effectDamage_.setUserAttack(true);
m991effectDamage_.setStatisAtt(Statistic.ATTACK);
m991effectDamage_.setTargetDefense(true);
m991effectDamage_.setStatisDef(Statistic.DEFENSE);
m991effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m991effectDamage_.setFail(ES);
m991custListEffect_.add(m991effectDamage_);
m991damagingMoveData_.setEffects(m991custListEffect_);
m991damagingMoveData_.setStoppableMoveSolo(true);
m991damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m991damagingMoveData_;
}
static MoveData m587(){
DamagingMoveData m992damagingMoveData_ = Instances.newDamagingMoveData();
m992damagingMoveData_.setCategory(I_SPECIALE);
m992damagingMoveData_.setStoppableMoveKoSingle(true);
m992damagingMoveData_.setPp(5);
StringList m992stringList_=new StringList(new CollCapacity(1));
m992stringList_.add(I_NORMAL);
m992damagingMoveData_.setTypes(m992stringList_);
m992stringList_=new StringList(new CollCapacity(1));
m992stringList_.add(I_NORMAL);
m992damagingMoveData_.setBoostedTypes(m992stringList_);
m992damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m992custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m992effectDamage_=Instances.newEffectDamage();
m992effectDamage_.setPower(R_150);
m992effectDamage_.setUserAttack(true);
m992effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m992effectDamage_.setTargetDefense(true);
m992effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m992effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m992effectDamage_.setFail(ES);
m992custListEffect_.add(m992effectDamage_);
m992damagingMoveData_.setEffects(m992custListEffect_);
m992damagingMoveData_.setRechargeRound(true);
m992damagingMoveData_.setConstUserChoice(true);
m992damagingMoveData_.setStoppableMoveSolo(true);
m992damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m992damagingMoveData_;
}
static MoveData m588(){
StatusMoveData m993statusMoveData_ = Instances.newStatusMoveData();
m993statusMoveData_.setCounterableMove(true);
m993statusMoveData_.setPp(20);
StringList m993stringList_=new StringList(new CollCapacity(1));
m993stringList_.add(I_NORMAL);
m993statusMoveData_.setTypes(m993stringList_);
m993stringList_=new StringList(new CollCapacity(1));
m993stringList_.add(I_NORMAL);
m993statusMoveData_.setBoostedTypes(m993stringList_);
m993statusMoveData_.setAccuracy(R_11_20);
CustList<Effect> m993custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m993effectStatus_=Instances.newEffectStatus();
MonteCarloString m993monteCarloString_=new MonteCarloString(new CollCapacity(1));
m993monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m993effectStatus_.setLawStatus(m993monteCarloString_);
StringMap<String> m993stringMapString_=new StringMap<String>(new CollCapacity(1));
m993stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m993effectStatus_.setLocalFailStatus(m993stringMapString_);
m993effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m993effectStatus_.setFail(ES);
m993custListEffect_.add(m993effectStatus_);
m993statusMoveData_.setEffects(m993custListEffect_);
m993statusMoveData_.setStoppableMoveSolo(true);
m993statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m993statusMoveData_;
}
static MoveData m589(){
DamagingMoveData m994damagingMoveData_ = Instances.newDamagingMoveData();
m994damagingMoveData_.setCategory(I_PHYSIQUE);
m994damagingMoveData_.setDirect(true);
m994damagingMoveData_.setStoppableMoveKoSingle(true);
m994damagingMoveData_.setPp(10);
StringList m994stringList_=new StringList(new CollCapacity(1));
m994stringList_.add(I_NORMAL);
m994damagingMoveData_.setTypes(m994stringList_);
m994stringList_=new StringList(new CollCapacity(1));
m994stringList_.add(I_NORMAL);
m994damagingMoveData_.setBoostedTypes(m994stringList_);
m994damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m994custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m994effectDamage_=Instances.newEffectDamage();
m994effectDamage_.setPower(R_70);
m994effectDamage_.setUserAttack(true);
m994effectDamage_.setStatisAtt(Statistic.ATTACK);
m994effectDamage_.setTargetDefense(true);
m994effectDamage_.setStatisDef(Statistic.DEFENSE);
m994effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m994effectDamage_.setFail(ES);
m994custListEffect_.add(m994effectDamage_);
EffectStatus m994effectStatus_=Instances.newEffectStatus();
MonteCarloString m994monteCarloString_=new MonteCarloString(new CollCapacity(2));
m994monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_4));
m994monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m994effectStatus_.setLawStatus(m994monteCarloString_);
StringMap<String> m994stringMapString_=new StringMap<String>(new CollCapacity(1));
m994stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m994effectStatus_.setLocalFailStatus(m994stringMapString_);
m994effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m994effectStatus_.setFail(ES);
Ints m994ints_=new Ints(new CollCapacity(1));
m994ints_.add(0);
m994effectStatus_.setRequiredSuccessfulEffects(m994ints_);
m994custListEffect_.add(m994effectStatus_);
m994damagingMoveData_.setEffects(m994custListEffect_);
m994damagingMoveData_.setStoppableMoveSolo(true);
m994damagingMoveData_.setStoppableMoveMulti(true);
m994damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m994damagingMoveData_;
}
static MoveData m590(){
DamagingMoveData m995damagingMoveData_ = Instances.newDamagingMoveData();
m995damagingMoveData_.setCategory(I_SPECIALE);
m995damagingMoveData_.setStoppableMoveKoSingle(true);
m995damagingMoveData_.setPp(15);
StringList m995stringList_=new StringList(new CollCapacity(1));
m995stringList_.add(I_PSY);
m995damagingMoveData_.setTypes(m995stringList_);
m995stringList_=new StringList(new CollCapacity(1));
m995stringList_.add(I_PSY);
m995damagingMoveData_.setBoostedTypes(m995stringList_);
m995damagingMoveData_.setAccuracy(R_4_5);
CustList<Effect> m995custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m995effectDamage_=Instances.newEffectDamage();
MonteCarloString m995monteCarloString_=new MonteCarloString(new CollCapacity(11));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_1_2,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_6_5,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_3_5,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_3_2,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_9_10,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_7_5,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_13_10,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_4_5,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_11_10,LgInt.newLgInt(R_1));
m995monteCarloString_.addQuickEvent(V_LANCEUR_NIVEAU+OM+R_7_10,LgInt.newLgInt(R_1));
m995effectDamage_.setDamageLaw(m995monteCarloString_);
m995effectDamage_.setPower(ES);
m995effectDamage_.setUserAttack(true);
m995effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m995effectDamage_.setTargetDefense(true);
m995effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m995effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m995effectDamage_.setFail(ES);
m995custListEffect_.add(m995effectDamage_);
m995damagingMoveData_.setEffects(m995custListEffect_);
m995damagingMoveData_.setStoppableMoveSolo(true);
m995damagingMoveData_.setStoppableMoveMulti(true);
m995damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m995damagingMoveData_;
}
static MoveData m591(){
DamagingMoveData m996damagingMoveData_ = Instances.newDamagingMoveData();
m996damagingMoveData_.setCategory(I_SPECIALE);
m996damagingMoveData_.setDirect(true);
m996damagingMoveData_.setStoppableMoveKoSingle(true);
m996damagingMoveData_.setPp(10);
StringList m996stringList_=new StringList(new CollCapacity(1));
m996stringList_.add(I_FEE);
m996damagingMoveData_.setTypes(m996stringList_);
m996stringList_=new StringList(new CollCapacity(1));
m996stringList_.add(I_FEE);
m996damagingMoveData_.setBoostedTypes(m996stringList_);
m996damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m996custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m996effectDamage_=Instances.newEffectDamage();
m996effectDamage_.setPower(R_50);
m996effectDamage_.setUserAttack(true);
m996effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m996effectDamage_.setTargetDefense(true);
m996effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m996effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m996effectDamage_.setFail(ES);
m996custListEffect_.add(m996effectDamage_);
EffectDamageRate m996effectDamageRate_=Instances.newEffectDamageRate();
m996effectDamageRate_.setRateDamage(Rate.newRate(R_3_4));
m996effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m996effectDamageRate_.setFail(ES);
Ints m996ints_=new Ints(new CollCapacity(1));
m996ints_.add(0);
m996effectDamageRate_.setRequiredSuccessfulEffects(m996ints_);
m996custListEffect_.add(m996effectDamageRate_);
m996damagingMoveData_.setEffects(m996custListEffect_);
m996damagingMoveData_.setStoppableMoveSolo(true);
m996damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m996damagingMoveData_;
}
static MoveData m592(){
StatusMoveData m997statusMoveData_ = Instances.newStatusMoveData();
m997statusMoveData_.setCounterableMove(true);
m997statusMoveData_.setPp(10);
StringList m997stringList_=new StringList(new CollCapacity(1));
m997stringList_.add(I_PLANTE);
m997statusMoveData_.setTypes(m997stringList_);
m997stringList_=new StringList(new CollCapacity(1));
m997stringList_.add(I_PLANTE);
m997statusMoveData_.setBoostedTypes(m997stringList_);
m997statusMoveData_.setAccuracy(R_9_10);
CustList<Effect> m997custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m997effectStatus_=Instances.newEffectStatus();
MonteCarloString m997monteCarloString_=new MonteCarloString(new CollCapacity(1));
m997monteCarloString_.addQuickEvent(I_VAMPIGRAINE_ST,LgInt.newLgInt(R_1));
m997effectStatus_.setLawStatus(m997monteCarloString_);
StringMap<String> m997stringMapString_=new StringMap<String>(new CollCapacity(1));
m997stringMapString_.addEntry(I_VAMPIGRAINE_ST,V_CIBLE_POSSEDE_STATUT_RELATION+SE+I_VAMPIGRAINE_ST+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_PLANTE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m997effectStatus_.setLocalFailStatus(m997stringMapString_);
m997effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m997effectStatus_.setFail(ES);
m997custListEffect_.add(m997effectStatus_);
m997statusMoveData_.setEffects(m997custListEffect_);
m997statusMoveData_.setStoppableMoveSolo(true);
m997statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m997statusMoveData_;
}
static MoveData m593(){
DamagingMoveData m998damagingMoveData_ = Instances.newDamagingMoveData();
m998damagingMoveData_.setCategory(I_PHYSIQUE);
m998damagingMoveData_.setDirect(true);
m998damagingMoveData_.setStoppableMoveKoSingle(true);
m998damagingMoveData_.setPp(10);
StringList m998stringList_=new StringList(new CollCapacity(1));
m998stringList_.add(I_COMBAT);
m998damagingMoveData_.setTypes(m998stringList_);
m998stringList_=new StringList(new CollCapacity(1));
m998stringList_.add(I_COMBAT);
m998damagingMoveData_.setBoostedTypes(m998stringList_);
m998damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m998custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m998effectDamage_=Instances.newEffectDamage();
m998effectDamage_.setPower(R_75);
m998effectDamage_.setUserAttack(true);
m998effectDamage_.setStatisAtt(Statistic.ATTACK);
m998effectDamage_.setTargetDefense(true);
m998effectDamage_.setStatisDef(Statistic.DEFENSE);
m998effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m998effectDamage_.setFail(ES);
m998custListEffect_.add(m998effectDamage_);
EffectDamageRate m998effectDamageRate_=Instances.newEffectDamageRate();
m998effectDamageRate_.setRateDamage(Rate.newRate(R_1_2));
m998effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m998effectDamageRate_.setFail(ES);
Ints m998ints_=new Ints(new CollCapacity(1));
m998ints_.add(0);
m998effectDamageRate_.setRequiredSuccessfulEffects(m998ints_);
m998custListEffect_.add(m998effectDamageRate_);
m998damagingMoveData_.setEffects(m998custListEffect_);
m998damagingMoveData_.setStoppableMoveSolo(true);
m998damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m998damagingMoveData_;
}
static MoveData m594(){
DamagingMoveData m999damagingMoveData_ = Instances.newDamagingMoveData();
m999damagingMoveData_.setCategory(I_PHYSIQUE);
m999damagingMoveData_.setDirect(true);
m999damagingMoveData_.setStoppableMoveKoSingle(true);
m999damagingMoveData_.setPp(15);
StringList m999stringList_=new StringList(new CollCapacity(1));
m999stringList_.add(I_INSECTE);
m999damagingMoveData_.setTypes(m999stringList_);
m999stringList_=new StringList(new CollCapacity(1));
m999stringList_.add(I_INSECTE);
m999damagingMoveData_.setBoostedTypes(m999stringList_);
m999damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m999custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m999effectDamage_=Instances.newEffectDamage();
m999effectDamage_.setPower(R_20);
m999effectDamage_.setUserAttack(true);
m999effectDamage_.setStatisAtt(Statistic.ATTACK);
m999effectDamage_.setTargetDefense(true);
m999effectDamage_.setStatisDef(Statistic.DEFENSE);
m999effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m999effectDamage_.setFail(ES);
m999custListEffect_.add(m999effectDamage_);
EffectDamageRate m999effectDamageRate_=Instances.newEffectDamageRate();
m999effectDamageRate_.setRateDamage(Rate.newRate(R_1_2));
m999effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m999effectDamageRate_.setFail(ES);
Ints m999ints_=new Ints(new CollCapacity(1));
m999ints_.add(0);
m999effectDamageRate_.setRequiredSuccessfulEffects(m999ints_);
m999custListEffect_.add(m999effectDamageRate_);
m999damagingMoveData_.setEffects(m999custListEffect_);
m999damagingMoveData_.setStoppableMoveSolo(true);
m999damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m999damagingMoveData_;
}
static MoveData m595(){
StatusMoveData m1000statusMoveData_ = Instances.newStatusMoveData();
m1000statusMoveData_.setCounterableMove(true);
m1000statusMoveData_.setPp(15);
StringList m1000stringList_=new StringList(new CollCapacity(1));
m1000stringList_.add(I_NORMAL);
m1000statusMoveData_.setTypes(m1000stringList_);
m1000stringList_=new StringList(new CollCapacity(1));
m1000stringList_.add(I_NORMAL);
m1000statusMoveData_.setBoostedTypes(m1000stringList_);
m1000statusMoveData_.setAccuracy(R_9_10);
CustList<Effect> m1000custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectStatus m1000effectStatus_=Instances.newEffectStatus();
MonteCarloString m1000monteCarloString_=new MonteCarloString(new CollCapacity(1));
m1000monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m1000effectStatus_.setLawStatus(m1000monteCarloString_);
StringMap<String> m1000stringMapString_=new StringMap<String>(new CollCapacity(1));
m1000stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1000effectStatus_.setLocalFailStatus(m1000stringMapString_);
m1000effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1000effectStatus_.setFail(ES);
m1000custListEffect_.add(m1000effectStatus_);
EffectStatistic m1000effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1000enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1000enumMapStatisticByte_.addEntry(Statistic.ATTACK,2L);
m1000effectStatistic_.setStatisVarRank(m1000enumMapStatisticByte_);
m1000effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1000effectStatistic_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1000effectStatistic_.setFail(ES);
Ints m1000ints_=new Ints(new CollCapacity(1));
m1000ints_.add(0);
m1000effectStatistic_.setRequiredSuccessfulEffects(m1000ints_);
m1000custListEffect_.add(m1000effectStatistic_);
m1000statusMoveData_.setEffects(m1000custListEffect_);
m1000statusMoveData_.setStoppableMoveSolo(true);
m1000statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1000statusMoveData_;
}
static MoveData m596(){
DamagingMoveData m1001damagingMoveData_ = Instances.newDamagingMoveData();
m1001damagingMoveData_.setCategory(I_SPECIALE);
m1001damagingMoveData_.setStoppableMoveKoSingle(true);
m1001damagingMoveData_.setPp(5);
StringList m1001stringList_=new StringList(new CollCapacity(1));
m1001stringList_.add(I_PLANTE);
m1001damagingMoveData_.setTypes(m1001stringList_);
m1001stringList_=new StringList(new CollCapacity(1));
m1001stringList_.add(I_PLANTE);
m1001damagingMoveData_.setBoostedTypes(m1001stringList_);
m1001damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m1001custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1001effectDamage_=Instances.newEffectDamage();
m1001effectDamage_.setPower(R_150);
m1001effectDamage_.setUserAttack(true);
m1001effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1001effectDamage_.setTargetDefense(true);
m1001effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1001effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1001effectDamage_.setFail(ES);
m1001custListEffect_.add(m1001effectDamage_);
m1001damagingMoveData_.setEffects(m1001custListEffect_);
m1001damagingMoveData_.setRechargeRound(true);
m1001damagingMoveData_.setConstUserChoice(true);
m1001damagingMoveData_.setStoppableMoveSolo(true);
m1001damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1001damagingMoveData_;
}
static MoveData m597(){
DamagingMoveData m1002damagingMoveData_ = Instances.newDamagingMoveData();
m1002damagingMoveData_.setCategory(I_PHYSIQUE);
m1002damagingMoveData_.setDirect(true);
m1002damagingMoveData_.setStoppableMoveKoSingle(true);
m1002damagingMoveData_.setPp(10);
StringList m1002stringList_=new StringList(new CollCapacity(1));
m1002stringList_.add(I_COMBAT);
m1002damagingMoveData_.setTypes(m1002stringList_);
m1002stringList_=new StringList(new CollCapacity(1));
m1002stringList_.add(I_COMBAT);
m1002damagingMoveData_.setBoostedTypes(m1002stringList_);
m1002damagingMoveData_.setPriority(-4);
m1002damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1002custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1002effectDamage_=Instances.newEffectDamage();
m1002effectDamage_.setPower(R_60+OM+LP+A_CARACFERME+LP+V_LANCEUR_DEGATS_RECUS_TOTAL_TOUR+OC+R_0+OC+R_0+RP+OP+R_2+OM+A_CARACDROITEOUVERT+LP+V_LANCEUR_DEGATS_RECUS_TOTAL_TOUR+OC+R_0+RP+RP);
m1002effectDamage_.setUserAttack(true);
m1002effectDamage_.setStatisAtt(Statistic.ATTACK);
m1002effectDamage_.setTargetDefense(true);
m1002effectDamage_.setStatisDef(Statistic.DEFENSE);
m1002effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1002effectDamage_.setFail(ES);
m1002custListEffect_.add(m1002effectDamage_);
m1002damagingMoveData_.setEffects(m1002custListEffect_);
m1002damagingMoveData_.setStoppableMoveSolo(true);
m1002damagingMoveData_.setStoppableMovePrio(true);
m1002damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1002damagingMoveData_;
}
static MoveData m598(){
DamagingMoveData m1003damagingMoveData_ = Instances.newDamagingMoveData();
m1003damagingMoveData_.setCategory(I_PHYSIQUE);
m1003damagingMoveData_.setDirect(true);
m1003damagingMoveData_.setStoppableMoveKoSingle(true);
m1003damagingMoveData_.setPp(5);
StringList m1003stringList_=new StringList(new CollCapacity(1));
m1003stringList_.add(I_NORMAL);
m1003damagingMoveData_.setTypes(m1003stringList_);
m1003stringList_=new StringList(new CollCapacity(1));
m1003stringList_.add(I_NORMAL);
m1003damagingMoveData_.setBoostedTypes(m1003stringList_);
m1003damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1003custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1003effectDamage_=Instances.newEffectDamage();
m1003effectDamage_.setPower(R_70+OM+LP+A_MIN+LP+R_1+OC+V_NB_KO_EQUIPE_LANCEUR+RP+OP+R_1+RP);
m1003effectDamage_.setUserAttack(true);
m1003effectDamage_.setStatisAtt(Statistic.ATTACK);
m1003effectDamage_.setTargetDefense(true);
m1003effectDamage_.setStatisDef(Statistic.DEFENSE);
m1003effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1003effectDamage_.setFail(ES);
m1003custListEffect_.add(m1003effectDamage_);
m1003damagingMoveData_.setEffects(m1003custListEffect_);
m1003damagingMoveData_.setStoppableMoveSolo(true);
m1003damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1003damagingMoveData_;
}
static MoveData m599(){
DamagingMoveData m1004damagingMoveData_ = Instances.newDamagingMoveData();
m1004damagingMoveData_.setCategory(I_SPECIALE);
m1004damagingMoveData_.setStoppableMoveKoSingle(true);
m1004damagingMoveData_.setPp(5);
StringList m1004stringList_=new StringList(new CollCapacity(1));
m1004stringList_.add(I_INSECTE);
m1004damagingMoveData_.setTypes(m1004stringList_);
m1004stringList_=new StringList(new CollCapacity(1));
m1004stringList_.add(I_INSECTE);
m1004damagingMoveData_.setBoostedTypes(m1004stringList_);
m1004damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1004custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1004effectDamage_=Instances.newEffectDamage();
m1004effectDamage_.setPower(R_60);
m1004effectDamage_.setUserAttack(true);
m1004effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1004effectDamage_.setTargetDefense(true);
m1004effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1004effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1004effectDamage_.setFail(ES);
m1004custListEffect_.add(m1004effectDamage_);
EffectStatistic m1004effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1004enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(5));
m1004enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m1004enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,1L);
m1004enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,1L);
m1004enumMapStatisticByte_.addEntry(Statistic.DEFENSE,1L);
m1004enumMapStatisticByte_.addEntry(Statistic.SPEED,1L);
m1004effectStatistic_.setStatisVarRank(m1004enumMapStatisticByte_);
m1004effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m1004effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m1004effectStatistic_.setFail(ES);
Ints m1004ints_=new Ints(new CollCapacity(1));
m1004ints_.add(0);
m1004effectStatistic_.setRequiredSuccessfulEffects(m1004ints_);
m1004custListEffect_.add(m1004effectStatistic_);
m1004damagingMoveData_.setEffects(m1004custListEffect_);
m1004damagingMoveData_.setStoppableMoveSolo(true);
m1004damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1004damagingMoveData_;
}
}
