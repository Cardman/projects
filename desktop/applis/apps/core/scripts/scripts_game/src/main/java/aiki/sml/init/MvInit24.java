package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit24 extends CstIgame{
private MvInit24(){}
static MoveData m600(){
StatusMoveData m1007statusMoveData_ = Instances.newStatusMoveData();
m1007statusMoveData_.setThievableMove(true);
m1007statusMoveData_.setPp(30);
StringList m1007stringList_=new StringList(new CollCapacity(1));
m1007stringList_.add(I_VOL);
m1007statusMoveData_.setTypes(m1007stringList_);
m1007stringList_=new StringList(new CollCapacity(1));
m1007stringList_.add(I_VOL);
m1007statusMoveData_.setBoostedTypes(m1007stringList_);
m1007statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1007custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m1007effectTeam_=Instances.newEffectTeam();
IdMap<Statistic,Rate> m1007enumMapStatisticRate_=new IdMap<Statistic,Rate>(new CollCapacity(1));
m1007enumMapStatisticRate_.addEntry(Statistic.SPEED,Rate.newRate(R_2));
m1007effectTeam_.setMultStatistic(m1007enumMapStatisticRate_);
m1007effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m1007custListEffect_.add(m1007effectTeam_);
m1007statusMoveData_.setEffects(m1007custListEffect_);
m1007statusMoveData_.setRankIncrementNbRound(13);
m1007statusMoveData_.setStoppableMoveMulti(true);
m1007statusMoveData_.setIgnVarAccurUserNeg(true);
m1007statusMoveData_.setIgnVarEvasTargetPos(true);
m1007statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1007statusMoveData_;
}
static MoveData m601(){
DamagingMoveData m1008damagingMoveData_ = Instances.newDamagingMoveData();
m1008damagingMoveData_.setCategory(I_SPECIALE);
m1008damagingMoveData_.setStoppableMoveKoSingle(true);
m1008damagingMoveData_.setPp(30);
StringList m1008stringList_=new StringList(new CollCapacity(1));
m1008stringList_.add(I_FEE);
m1008damagingMoveData_.setTypes(m1008stringList_);
m1008stringList_=new StringList(new CollCapacity(1));
m1008stringList_.add(I_FEE);
m1008damagingMoveData_.setBoostedTypes(m1008stringList_);
m1008damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1008custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1008effectDamage_=newEffectDamage();
m1008effectDamage_.setPower(R_40);
m1008effectDamage_.setUserAttack(true);
m1008effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1008effectDamage_.setTargetDefense(true);
m1008effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1008effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1008custListEffect_.add(m1008effectDamage_);
m1008damagingMoveData_.setEffects(m1008custListEffect_);
m1008damagingMoveData_.setStoppableMoveSolo(true);
m1008damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1008damagingMoveData_;
}
static MoveData m602(){
DamagingMoveData m1009damagingMoveData_ = Instances.newDamagingMoveData();
m1009damagingMoveData_.setCategory(I_SPECIALE);
m1009damagingMoveData_.setStoppableMoveKoSingle(true);
m1009damagingMoveData_.setPp(15);
StringList m1009stringList_=new StringList(new CollCapacity(1));
m1009stringList_.add(I_GLACE);
m1009damagingMoveData_.setTypes(m1009stringList_);
m1009stringList_=new StringList(new CollCapacity(1));
m1009stringList_.add(I_GLACE);
m1009damagingMoveData_.setBoostedTypes(m1009stringList_);
m1009damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m1009custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1009effectDamage_=newEffectDamage();
m1009effectDamage_.setPower(R_55);
m1009effectDamage_.setUserAttack(true);
m1009effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1009effectDamage_.setTargetDefense(true);
m1009effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1009effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m1009custListEffect_.add(m1009effectDamage_);
EffectStatistic m1009effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1009enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1009enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m1009effectStatistic_.setStatisVarRank(m1009enumMapStatisticByte_);
IdMap<Statistic,String> m1009enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1009enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m1009effectStatistic_.setLocalFailStatis(m1009enumMapStatisticString_);
m1009effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1009effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
Ints m1009ints_=new Ints(new CollCapacity(1));
m1009ints_.add(0);
m1009effectStatistic_.setRequiredSuccessfulEffects(m1009ints_);
m1009custListEffect_.add(m1009effectStatistic_);
m1009damagingMoveData_.setEffects(m1009custListEffect_);
m1009damagingMoveData_.setStoppableMoveSolo(true);
m1009damagingMoveData_.setStoppableMoveMulti(true);
m1009damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m1009damagingMoveData_;
}
static MoveData m603(){
DamagingMoveData m1010damagingMoveData_ = Instances.newDamagingMoveData();
m1010damagingMoveData_.setCategory(I_SPECIALE);
m1010damagingMoveData_.setStoppableMoveKoSingle(true);
m1010damagingMoveData_.setPp(5);
StringList m1010stringList_=new StringList(new CollCapacity(1));
m1010stringList_.add(I_SPECTRE);
m1010damagingMoveData_.setTypes(m1010stringList_);
m1010stringList_=new StringList(new CollCapacity(1));
m1010stringList_.add(I_SPECTRE);
m1010damagingMoveData_.setBoostedTypes(m1010stringList_);
m1010damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1010custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1010effectDamage_=newEffectDamage();
m1010effectDamage_.setPower(R_60);
m1010effectDamage_.setUserAttack(true);
m1010effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1010effectDamage_.setTargetDefense(true);
m1010effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1010effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1010custListEffect_.add(m1010effectDamage_);
EffectStatistic m1010effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1010enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(5));
m1010enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m1010enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,1L);
m1010enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,1L);
m1010enumMapStatisticByte_.addEntry(Statistic.DEFENSE,1L);
m1010enumMapStatisticByte_.addEntry(Statistic.SPEED,1L);
m1010effectStatistic_.setStatisVarRank(m1010enumMapStatisticByte_);
m1010effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m1010effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
Ints m1010ints_=new Ints(new CollCapacity(1));
m1010ints_.add(0);
m1010effectStatistic_.setRequiredSuccessfulEffects(m1010ints_);
m1010custListEffect_.add(m1010effectStatistic_);
m1010damagingMoveData_.setEffects(m1010custListEffect_);
m1010damagingMoveData_.setStoppableMoveSolo(true);
m1010damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1010damagingMoveData_;
}
static MoveData m604(){
DamagingMoveData m1011damagingMoveData_ = Instances.newDamagingMoveData();
m1011damagingMoveData_.setCategory(I_SPECIALE);
m1011damagingMoveData_.setStoppableMoveKoSingle(true);
m1011damagingMoveData_.setPp(10);
StringList m1011stringList_=new StringList(new CollCapacity(1));
m1011stringList_.add(I_VOL);
m1011damagingMoveData_.setTypes(m1011stringList_);
m1011stringList_=new StringList(new CollCapacity(1));
m1011stringList_.add(I_VOL);
m1011damagingMoveData_.setBoostedTypes(m1011stringList_);
m1011damagingMoveData_.setAccuracy(A_DIV+LP+R_70+OP+R_10+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_GRELE+RB+RP+RP+OD+R_15+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ZENITH+RB+RP+RP+OP+R_30+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ORAGE+OS+I_DANSE_PLUIE+RB+RP+RP+OC+R_100+RP);
CustList<Effect> m1011custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1011effectDamage_=newEffectDamage();
m1011effectDamage_.setPower(R_120+OM+LP+A_CARACFERME+LP+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_ENVOL+OS+I_REBOND+OS+I_CHUTE_LIBRE+RB+RP+OM+V_CIBLE_DISPARAIT+OC+R_1+OC+R_1+RP+OP+A_CARACFERME+LP+V_CIBLE_DISPARAIT+OC+R_0+OC+R_0+RP+RP);
m1011effectDamage_.setUserAttack(true);
m1011effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1011effectDamage_.setTargetDefense(true);
m1011effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1011effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1011custListEffect_.add(m1011effectDamage_);
EffectStatus m1011effectStatus_=Instances.newEffectStatus();
MonteCarloString m1011monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1011monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1011monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_3));
m1011effectStatus_.setLawStatus(m1011monteCarloString_);
StringMap<String> m1011stringMapString_=new StringMap<String>(new CollCapacity(1));
m1011stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0);
m1011effectStatus_.setLocalFailStatus(m1011stringMapString_);
m1011effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
Ints m1011ints_=new Ints(new CollCapacity(1));
m1011ints_.add(0);
m1011effectStatus_.setRequiredSuccessfulEffects(m1011ints_);
m1011custListEffect_.add(m1011effectStatus_);
m1011damagingMoveData_.setEffects(m1011custListEffect_);
m1011damagingMoveData_.setStoppableMoveSolo(true);
m1011stringList_=new StringList(new CollCapacity(3));
m1011stringList_.add(I_ENVOL);
m1011stringList_.add(I_REBOND);
m1011stringList_.add(I_CHUTE_LIBRE);
m1011damagingMoveData_.setAchieveDisappearedPkUsingMove(m1011stringList_);
m1011damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1011damagingMoveData_;
}
static MoveData m605(){
StatusMoveData m1012statusMoveData_ = Instances.newStatusMoveData();
m1012statusMoveData_.setPp(5);
StringList m1012stringList_=new StringList(new CollCapacity(1));
m1012stringList_.add(I_NORMAL);
m1012statusMoveData_.setTypes(m1012stringList_);
m1012stringList_=new StringList(new CollCapacity(1));
m1012stringList_.add(I_NORMAL);
m1012statusMoveData_.setBoostedTypes(m1012stringList_);
m1012statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1012custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectAccuracy m1012effectAccuracy_=Instances.newEffectAccuracy();
m1012effectAccuracy_.setTargetChoice(TargetChoice.ADJ_MULT);
m1012custListEffect_.add(m1012effectAccuracy_);
m1012statusMoveData_.setEffects(m1012custListEffect_);
m1012statusMoveData_.setStoppableMoveMulti(true);
m1012statusMoveData_.setIgnVarAccurUserNeg(true);
m1012statusMoveData_.setIgnVarEvasTargetPos(true);
m1012statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1012statusMoveData_;
}
static MoveData m606(){
StatusMoveData m1013statusMoveData_ = Instances.newStatusMoveData();
m1013statusMoveData_.setPp(10);
StringList m1013stringList_=new StringList(new CollCapacity(1));
m1013stringList_.add(I_FEE);
m1013statusMoveData_.setTypes(m1013stringList_);
m1013stringList_=new StringList(new CollCapacity(1));
m1013stringList_.add(I_FEE);
m1013statusMoveData_.setBoostedTypes(m1013stringList_);
m1013statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1013custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam m1013effectTeam_=Instances.newEffectTeam();
IdMap<Statistic,Rate> m1013enumMapStatisticRate_=new IdMap<Statistic,Rate>(new CollCapacity(1));
m1013enumMapStatisticRate_.addEntry(Statistic.ACCURACY,Rate.newRate(R_2));
m1013effectTeam_.setMultStatistic(m1013enumMapStatisticRate_);
m1013enumMapStatisticRate_=new IdMap<Statistic,Rate>(new CollCapacity(1));
m1013enumMapStatisticRate_.addEntry(Statistic.EVASINESS,Rate.newRate(R_1_2));
m1013effectTeam_.setMultStatisticFoe(m1013enumMapStatisticRate_);
m1013effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
m1013custListEffect_.add(m1013effectTeam_);
m1013statusMoveData_.setEffects(m1013custListEffect_);
m1013statusMoveData_.setIgnVarAccurUserNeg(true);
m1013statusMoveData_.setIgnVarEvasTargetPos(true);
m1013statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1013statusMoveData_;
}
static MoveData m607(){
DamagingMoveData m1014damagingMoveData_ = Instances.newDamagingMoveData();
m1014damagingMoveData_.setCategory(I_SPECIALE);
m1014damagingMoveData_.setStoppableMoveKoSingle(true);
m1014damagingMoveData_.setPp(20);
StringList m1014stringList_=new StringList(new CollCapacity(1));
m1014stringList_.add(I_EAU);
m1014damagingMoveData_.setTypes(m1014stringList_);
m1014stringList_=new StringList(new CollCapacity(1));
m1014stringList_.add(I_EAU);
m1014damagingMoveData_.setBoostedTypes(m1014stringList_);
m1014damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1014custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1014effectDamage_=newEffectDamage();
m1014effectDamage_.setPower(R_60);
m1014effectDamage_.setUserAttack(true);
m1014effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1014effectDamage_.setTargetDefense(true);
m1014effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1014effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1014custListEffect_.add(m1014effectDamage_);
EffectStatus m1014effectStatus_=Instances.newEffectStatus();
MonteCarloString m1014monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1014monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_4));
m1014monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m1014effectStatus_.setLawStatus(m1014monteCarloString_);
StringMap<String> m1014stringMapString_=new StringMap<String>(new CollCapacity(1));
m1014stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1014effectStatus_.setLocalFailStatus(m1014stringMapString_);
m1014effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
Ints m1014ints_=new Ints(new CollCapacity(1));
m1014ints_.add(0);
m1014effectStatus_.setRequiredSuccessfulEffects(m1014ints_);
m1014custListEffect_.add(m1014effectStatus_);
m1014damagingMoveData_.setEffects(m1014custListEffect_);
m1014damagingMoveData_.setStoppableMoveSolo(true);
m1014damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1014damagingMoveData_;
}
static MoveData m608(){
StatusMoveData m1015statusMoveData_ = Instances.newStatusMoveData();
m1015statusMoveData_.setPp(10);
StringList m1015stringList_=new StringList(new CollCapacity(1));
m1015stringList_.add(I_PSY);
m1015statusMoveData_.setTypes(m1015stringList_);
m1015stringList_=new StringList(new CollCapacity(1));
m1015stringList_.add(I_PSY);
m1015statusMoveData_.setBoostedTypes(m1015stringList_);
m1015statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1015custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectFullHpRate m1015effectFullHpRate_=Instances.newEffectFullHpRate();
m1015effectFullHpRate_.setRestoredHp(R_1_2);
m1015effectFullHpRate_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1015custListEffect_.add(m1015effectFullHpRate_);
m1015statusMoveData_.setEffects(m1015custListEffect_);
m1015statusMoveData_.setStoppableMoveSolo(true);
m1015statusMoveData_.setIgnVarAccurUserNeg(true);
m1015statusMoveData_.setIgnVarEvasTargetPos(true);
m1015statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1015statusMoveData_;
}
static MoveData m609(){
DamagingMoveData m1016damagingMoveData_ = Instances.newDamagingMoveData();
m1016damagingMoveData_.setCategory(I_SPECIALE);
m1016damagingMoveData_.setStoppableMoveKoSingle(true);
m1016damagingMoveData_.setPp(15);
StringList m1016stringList_=new StringList(new CollCapacity(1));
m1016stringList_.add(I_TENEBRE);
m1016damagingMoveData_.setTypes(m1016stringList_);
m1016stringList_=new StringList(new CollCapacity(1));
m1016stringList_.add(I_TENEBRE);
m1016damagingMoveData_.setBoostedTypes(m1016stringList_);
m1016damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1016custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1016effectDamage_=newEffectDamage();
m1016effectDamage_.setPower(R_90);
m1016effectDamage_.setUserAttack(true);
m1016effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1016effectDamage_.setTargetDefense(true);
m1016effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1016effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1016custListEffect_.add(m1016effectDamage_);
EffectStatus m1016effectStatus_=Instances.newEffectStatus();
MonteCarloString m1016monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1016monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_4));
m1016monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_1));
m1016effectStatus_.setLawStatus(m1016monteCarloString_);
StringMap<String> m1016stringMapString_=new StringMap<String>(new CollCapacity(1));
m1016stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m1016effectStatus_.setLocalFailStatus(m1016stringMapString_);
m1016effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
Ints m1016ints_=new Ints(new CollCapacity(1));
m1016ints_.add(0);
m1016effectStatus_.setRequiredSuccessfulEffects(m1016ints_);
m1016custListEffect_.add(m1016effectStatus_);
m1016damagingMoveData_.setEffects(m1016custListEffect_);
m1016damagingMoveData_.setStoppableMoveSolo(true);
m1016damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1016damagingMoveData_;
}
static MoveData m610(){
StatusMoveData m1017statusMoveData_ = Instances.newStatusMoveData();
m1017statusMoveData_.setPp(10);
StringList m1017stringList_=new StringList(new CollCapacity(1));
m1017stringList_.add(I_FEE);
m1017statusMoveData_.setTypes(m1017stringList_);
m1017stringList_=new StringList(new CollCapacity(1));
m1017stringList_.add(I_FEE);
m1017statusMoveData_.setBoostedTypes(m1017stringList_);
m1017statusMoveData_.setPriority(3);
m1017statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1017custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtection m1017effectProtection_=Instances.newEffectProtection();
m1017effectProtection_.setProtTeamAgainstStatusMoves(true);
m1017effectProtection_.setTargetChoice(TargetChoice.LANCEUR);
m1017custListEffect_.add(m1017effectProtection_);
m1017statusMoveData_.setEffects(m1017custListEffect_);
m1017statusMoveData_.setStoppableMovePrio(true);
m1017statusMoveData_.setIgnVarAccurUserNeg(true);
m1017statusMoveData_.setIgnVarEvasTargetPos(true);
m1017statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1017statusMoveData_;
}
static MoveData m611(){
DamagingMoveData m1018damagingMoveData_ = Instances.newDamagingMoveData();
m1018damagingMoveData_.setCategory(I_PHYSIQUE);
m1018damagingMoveData_.setDirect(true);
m1018damagingMoveData_.setStoppableMoveKoSingle(true);
m1018damagingMoveData_.setPp(5);
StringList m1018stringList_=new StringList(new CollCapacity(1));
m1018stringList_.add(I_NORMAL);
m1018damagingMoveData_.setTypes(m1018stringList_);
m1018stringList_=new StringList(new CollCapacity(1));
m1018stringList_.add(I_NORMAL);
m1018damagingMoveData_.setBoostedTypes(m1018stringList_);
m1018damagingMoveData_.setPriority(2);
m1018damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1018custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1018effectDamage_=newEffectDamage();
m1018effectDamage_.setPower(R_80);
m1018effectDamage_.setUserAttack(true);
m1018effectDamage_.setStatisAtt(Statistic.ATTACK);
m1018effectDamage_.setTargetDefense(true);
m1018effectDamage_.setStatisDef(Statistic.DEFENSE);
m1018effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1018custListEffect_.add(m1018effectDamage_);
m1018damagingMoveData_.setEffects(m1018custListEffect_);
m1018damagingMoveData_.setStoppableMoveSolo(true);
m1018damagingMoveData_.setStoppableMovePrio(true);
m1018damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1018damagingMoveData_;
}
static MoveData m612(){
DamagingMoveData m1019damagingMoveData_ = Instances.newDamagingMoveData();
m1019damagingMoveData_.setCategory(I_PHYSIQUE);
m1019damagingMoveData_.setDirect(true);
m1019damagingMoveData_.setStoppableMoveKoSingle(true);
m1019damagingMoveData_.setPp(30);
StringList m1019stringList_=new StringList(new CollCapacity(1));
m1019stringList_.add(I_NORMAL);
m1019damagingMoveData_.setTypes(m1019stringList_);
m1019stringList_=new StringList(new CollCapacity(1));
m1019stringList_.add(I_NORMAL);
m1019damagingMoveData_.setBoostedTypes(m1019stringList_);
m1019damagingMoveData_.setPriority(1);
m1019damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1019custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1019effectDamage_=newEffectDamage();
m1019effectDamage_.setPower(R_40);
m1019effectDamage_.setUserAttack(true);
m1019effectDamage_.setStatisAtt(Statistic.ATTACK);
m1019effectDamage_.setTargetDefense(true);
m1019effectDamage_.setStatisDef(Statistic.DEFENSE);
m1019effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1019custListEffect_.add(m1019effectDamage_);
m1019damagingMoveData_.setEffects(m1019custListEffect_);
m1019damagingMoveData_.setStoppableMoveSolo(true);
m1019damagingMoveData_.setStoppableMovePrio(true);
m1019damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1019damagingMoveData_;
}
static MoveData m613(){
StatusMoveData m1020statusMoveData_ = Instances.newStatusMoveData();
m1020statusMoveData_.setThievableMove(true);
m1020statusMoveData_.setPp(10);
StringList m1020stringList_=new StringList(new CollCapacity(1));
m1020stringList_.add(I_NORMAL);
m1020statusMoveData_.setTypes(m1020stringList_);
m1020stringList_=new StringList(new CollCapacity(1));
m1020stringList_.add(I_NORMAL);
m1020statusMoveData_.setBoostedTypes(m1020stringList_);
m1020statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1020custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectEndRoundPositionRelation m1020effectEndRoundPositionRelation_=Instances.newEffectEndRoundPositionRelation();
m1020effectEndRoundPositionRelation_.setHealHp(Rate.newRate(R_1_2));
m1020effectEndRoundPositionRelation_.setEndRoundRank(26);
m1020effectEndRoundPositionRelation_.setTargetChoice(TargetChoice.LANCEUR);
m1020custListEffect_.add(m1020effectEndRoundPositionRelation_);
m1020statusMoveData_.setEffects(m1020custListEffect_);
m1020statusMoveData_.setStoppableMoveMulti(true);
m1020statusMoveData_.setIgnVarAccurUserNeg(true);
m1020statusMoveData_.setIgnVarEvasTargetPos(true);
m1020statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1020statusMoveData_;
}
static MoveData m614(){
StatusMoveData m1021statusMoveData_ = Instances.newStatusMoveData();
m1021statusMoveData_.setPp(10);
StringList m1021stringList_=new StringList(new CollCapacity(1));
m1021stringList_.add(I_PSY);
m1021statusMoveData_.setTypes(m1021stringList_);
m1021stringList_=new StringList(new CollCapacity(1));
m1021stringList_.add(I_PSY);
m1021statusMoveData_.setBoostedTypes(m1021stringList_);
m1021statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1021custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m1021effectStatus_=Instances.newEffectStatus();
m1021effectStatus_.setKoUserHealSubst(true);
m1021effectStatus_.setTargetChoice(TargetChoice.LANCEUR);
m1021custListEffect_.add(m1021effectStatus_);
m1021statusMoveData_.setEffects(m1021custListEffect_);
m1021statusMoveData_.setStoppableMoveMulti(true);
m1021statusMoveData_.setIgnVarAccurUserNeg(true);
m1021statusMoveData_.setIgnVarEvasTargetPos(true);
m1021statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1021statusMoveData_;
}
static MoveData m615(){
DamagingMoveData m1022damagingMoveData_ = Instances.newDamagingMoveData();
m1022damagingMoveData_.setCategory(I_SPECIALE);
m1022damagingMoveData_.setStoppableMoveKoSingle(true);
m1022damagingMoveData_.setPp(20);
StringList m1022stringList_=new StringList(new CollCapacity(1));
m1022stringList_.add(I_PSY);
m1022damagingMoveData_.setTypes(m1022stringList_);
m1022stringList_=new StringList(new CollCapacity(1));
m1022stringList_.add(I_PSY);
m1022damagingMoveData_.setBoostedTypes(m1022stringList_);
m1022damagingMoveData_.setPriority(-5);
m1022damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1022custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1022effectDamage_=newEffectDamage();
StringMap<Rate> m1022stringMapRate_=new StringMap<Rate>(new CollCapacity(1));
m1022stringMapRate_.addEntry(I_SPECIALE,Rate.newRate(R_2));
m1022effectDamage_.setMultDamageAgainst(m1022stringMapRate_);
m1022effectDamage_.setUserAttack(true);
m1022effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1022effectDamage_.setTargetDefense(true);
m1022effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1022effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1022effectDamage_.setFail(A_CARACDROITEOUVERT+LP+V_LANCEUR_DEGATS_RECUS_TOUR+SE+I_SPECIALE+OC+R_0+RP+OE+R_0);
m1022custListEffect_.add(m1022effectDamage_);
m1022damagingMoveData_.setEffects(m1022custListEffect_);
m1022damagingMoveData_.setStoppableMoveSolo(true);
m1022damagingMoveData_.setStoppableMovePrio(true);
m1022damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1022damagingMoveData_;
}
static MoveData m616(){
DamagingMoveData m1023damagingMoveData_ = Instances.newDamagingMoveData();
m1023damagingMoveData_.setCategory(I_SPECIALE);
m1023damagingMoveData_.setStoppableMoveKoSingle(true);
m1023damagingMoveData_.setPp(15);
StringList m1023stringList_=new StringList(new CollCapacity(1));
m1023stringList_.add(I_FEE);
m1023damagingMoveData_.setTypes(m1023stringList_);
m1023stringList_=new StringList(new CollCapacity(1));
m1023stringList_.add(I_FEE);
m1023damagingMoveData_.setBoostedTypes(m1023stringList_);
m1023damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1023custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1023effectDamage_=newEffectDamage();
m1023effectDamage_.setPower(R_40);
IdList<Statistic> m1023enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m1023enumListStatistic_.add(Statistic.EVASINESS);
m1023effectDamage_.setIgnVarStatTargetPos(m1023enumListStatistic_);
m1023enumListStatistic_=new IdList<Statistic>(new CollCapacity(1));
m1023enumListStatistic_.add(Statistic.ACCURACY);
m1023effectDamage_.setIgnVarStatUserNeg(m1023enumListStatistic_);
m1023effectDamage_.setUserAttack(true);
m1023effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1023effectDamage_.setTargetDefense(true);
m1023effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1023effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m1023custListEffect_.add(m1023effectDamage_);
m1023damagingMoveData_.setEffects(m1023custListEffect_);
m1023damagingMoveData_.setStoppableMoveSolo(true);
m1023damagingMoveData_.setStoppableMoveMulti(true);
m1023damagingMoveData_.setIgnVarAccurUserNeg(true);
m1023damagingMoveData_.setIgnVarEvasTargetPos(true);
m1023damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m1023damagingMoveData_;
}
static MoveData m617(){
StatusMoveData m1024statusMoveData_ = Instances.newStatusMoveData();
m1024statusMoveData_.setThievableMove(true);
m1024statusMoveData_.setPp(10);
StringList m1024stringList_=new StringList(new CollCapacity(1));
m1024stringList_.add(I_ELECTRIQUE);
m1024statusMoveData_.setTypes(m1024stringList_);
m1024stringList_=new StringList(new CollCapacity(1));
m1024stringList_.add(I_ELECTRIQUE);
m1024statusMoveData_.setBoostedTypes(m1024stringList_);
m1024statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1024custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtectFromTypes m1024effectProtectFromTypes_=Instances.newEffectProtectFromTypes();
m1024stringList_=new StringList(new CollCapacity(1));
m1024stringList_.add(I_SOL);
m1024effectProtectFromTypes_.setImmuAgainstTypes(m1024stringList_);
m1024effectProtectFromTypes_.setTargetChoice(TargetChoice.LANCEUR);
m1024effectProtectFromTypes_.setFail(V_LANCEUR_EFFET+SE+I_RACINES+OO+V_NB_TOUR_GLOBAL+SE+I_GRAVITE+GT+R_0);
m1024custListEffect_.add(m1024effectProtectFromTypes_);
m1024statusMoveData_.setEffects(m1024custListEffect_);
m1024statusMoveData_.setRankIncrementNbRound(20);
m1024statusMoveData_.setStoppableMoveMulti(true);
m1024statusMoveData_.setIgnVarAccurUserNeg(true);
m1024statusMoveData_.setIgnVarEvasTargetPos(true);
m1024statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1024statusMoveData_;
}
static MoveData m618(){
DamagingMoveData m1025damagingMoveData_ = Instances.newDamagingMoveData();
m1025damagingMoveData_.setCategory(I_SPECIALE);
m1025damagingMoveData_.setStoppableMoveKoSingle(true);
m1025damagingMoveData_.setPp(20);
StringList m1025stringList_=new StringList(new CollCapacity(1));
m1025stringList_.add(I_PLANTE);
m1025damagingMoveData_.setTypes(m1025stringList_);
m1025stringList_=new StringList(new CollCapacity(1));
m1025stringList_.add(I_PLANTE);
m1025damagingMoveData_.setBoostedTypes(m1025stringList_);
m1025damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1025custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1025effectDamage_=newEffectDamage();
m1025effectDamage_.setPower(R_20);
m1025effectDamage_.setUserAttack(true);
m1025effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1025effectDamage_.setTargetDefense(true);
m1025effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1025effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1025custListEffect_.add(m1025effectDamage_);
EffectDamageRate m1025effectDamageRate_=Instances.newEffectDamageRate();
m1025effectDamageRate_.setRateDamage(Rate.newRate(R_1_2));
m1025effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
Ints m1025ints_=new Ints(new CollCapacity(1));
m1025ints_.add(0);
m1025effectDamageRate_.setRequiredSuccessfulEffects(m1025ints_);
m1025custListEffect_.add(m1025effectDamageRate_);
m1025damagingMoveData_.setEffects(m1025custListEffect_);
m1025damagingMoveData_.setStoppableMoveSolo(true);
m1025damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1025damagingMoveData_;
}
static MoveData m619(){
DamagingMoveData m1026damagingMoveData_ = Instances.newDamagingMoveData();
m1026damagingMoveData_.setCategory(I_SPECIALE);
m1026damagingMoveData_.setStoppableMoveKoSingle(true);
m1026damagingMoveData_.setPp(5);
StringList m1026stringList_=new StringList(new CollCapacity(1));
m1026stringList_.add(I_FEU);
m1026damagingMoveData_.setTypes(m1026stringList_);
m1026stringList_=new StringList(new CollCapacity(1));
m1026stringList_.add(I_FEU);
m1026damagingMoveData_.setBoostedTypes(m1026stringList_);
m1026damagingMoveData_.setAccuracy(R_3_4);
CustList<Effect> m1026custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1026effectDamage_=newEffectDamage();
m1026effectDamage_.setPower(R_120);
m1026effectDamage_.setUserAttack(true);
m1026effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1026effectDamage_.setTargetDefense(true);
m1026effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1026effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1026custListEffect_.add(m1026effectDamage_);
EffectEndRoundSingleRelation m1026effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> m1026longMapRate_=new LongMap<Rate>(new CollCapacity(5));
m1026longMapRate_.addEntry(1L,Rate.newRate(R_1_16));
m1026longMapRate_.addEntry(2L,Rate.newRate(R_1_16));
m1026longMapRate_.addEntry(3L,Rate.newRate(R_1_16));
m1026longMapRate_.addEntry(4L,Rate.newRate(R_1_16));
m1026longMapRate_.addEntry(5L,Rate.newRate(R_1_16));
m1026effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(m1026longMapRate_);
MonteCarloNumber m1026monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
m1026monteCarloNumber_.addQuickEvent(Rate.newRate(R_3),LgInt.newLgInt(R_3));
m1026monteCarloNumber_.addQuickEvent(Rate.newRate(R_2),LgInt.newLgInt(R_3));
m1026monteCarloNumber_.addQuickEvent(Rate.newRate(R_4),LgInt.newLgInt(R_1));
m1026monteCarloNumber_.addQuickEvent(Rate.newRate(R_5),LgInt.newLgInt(R_1));
m1026effectEndRoundSingleRelation_.setLawForEnablingEffect(m1026monteCarloNumber_);
m1026effectEndRoundSingleRelation_.setFailEndRound(V_CIBLE_CLONE+GT+R_0);
m1026effectEndRoundSingleRelation_.setEndRoundRank(48);
m1026effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1026effectEndRoundSingleRelation_.setFail(V_CIBLE_CLONE+GT+R_0);
Ints m1026ints_=new Ints(new CollCapacity(1));
m1026ints_.add(0);
m1026effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(m1026ints_);
m1026custListEffect_.add(m1026effectEndRoundSingleRelation_);
m1026damagingMoveData_.setEffects(m1026custListEffect_);
m1026damagingMoveData_.setStoppableMoveSolo(true);
m1026damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1026damagingMoveData_;
}
static MoveData m620(){
DamagingMoveData m1027damagingMoveData_ = Instances.newDamagingMoveData();
m1027damagingMoveData_.setCategory(I_PHYSIQUE);
m1027damagingMoveData_.setDirect(true);
m1027damagingMoveData_.setStoppableMoveKoSingle(true);
m1027damagingMoveData_.setPp(10);
StringList m1027stringList_=new StringList(new CollCapacity(1));
m1027stringList_.add(I_COMBAT);
m1027damagingMoveData_.setTypes(m1027stringList_);
m1027stringList_=new StringList(new CollCapacity(1));
m1027stringList_.add(I_COMBAT);
m1027damagingMoveData_.setBoostedTypes(m1027stringList_);
m1027damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1027custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1027effectDamage_=newEffectDamageCh();
m1027effectDamage_.setPower(R_40);
m1027effectDamage_.setUserAttack(true);
m1027effectDamage_.setStatisAtt(Statistic.ATTACK);
m1027effectDamage_.setTargetDefense(true);
m1027effectDamage_.setStatisDef(Statistic.DEFENSE);
m1027effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1027custListEffect_.add(m1027effectDamage_);
m1027damagingMoveData_.setEffects(m1027custListEffect_);
m1027damagingMoveData_.setStoppableMoveSolo(true);
m1027damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1027damagingMoveData_;
}
static MoveData m621(){
StatusMoveData m1028statusMoveData_ = Instances.newStatusMoveData();
m1028statusMoveData_.setThievableMove(true);
m1028statusMoveData_.setPp(40);
StringList m1028stringList_=new StringList(new CollCapacity(1));
m1028stringList_.add(I_PSY);
m1028statusMoveData_.setTypes(m1028stringList_);
m1028stringList_=new StringList(new CollCapacity(1));
m1028stringList_.add(I_PSY);
m1028statusMoveData_.setBoostedTypes(m1028stringList_);
m1028statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1028custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m1028effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1028enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1028enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m1028effectStatistic_.setStatisVarRank(m1028enumMapStatisticByte_);
m1028effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1028effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m1028custListEffect_.add(m1028effectStatistic_);
m1028statusMoveData_.setEffects(m1028custListEffect_);
m1028statusMoveData_.setStoppableMoveMulti(true);
m1028statusMoveData_.setIgnVarAccurUserNeg(true);
m1028statusMoveData_.setIgnVarEvasTargetPos(true);
m1028statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1028statusMoveData_;
}
static MoveData m622(){
StatusMoveData m1029statusMoveData_ = Instances.newStatusMoveData();
m1029statusMoveData_.setPp(5);
StringList m1029stringList_=new StringList(new CollCapacity(1));
m1029stringList_.add(I_FEU);
m1029statusMoveData_.setTypes(m1029stringList_);
m1029stringList_=new StringList(new CollCapacity(1));
m1029stringList_.add(I_FEU);
m1029statusMoveData_.setBoostedTypes(m1029stringList_);
m1029statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1029custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectGlobal m1029effectGlobal_=Instances.newEffectGlobal();
m1029effectGlobal_.setWeather(true);
m1029stringList_=new StringList(new CollCapacity(1));
m1029stringList_.add(I_GEL);
m1029effectGlobal_.setPreventStatus(m1029stringList_);
m1029stringList_=new StringList(new CollCapacity(2));
m1029stringList_.add(I_GRELE);
m1029stringList_.add(I_TEMPETESABLE);
m1029effectGlobal_.setCancelEffects(m1029stringList_);
StringMap<Rate> m1029stringMapRate_=new StringMap<Rate>(new CollCapacity(2));
m1029stringMapRate_.addEntry(I_EAU,Rate.newRate(R_1_2));
m1029stringMapRate_.addEntry(I_FEU,Rate.newRate(R_3_2));
m1029effectGlobal_.setMultDamageTypesMoves(m1029stringMapRate_);
m1029effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
m1029custListEffect_.add(m1029effectGlobal_);
EffectEndRoundGlobal m1029effectEndRoundGlobal_=Instances.newEffectEndRoundGlobal();
m1029effectEndRoundGlobal_.setEndRoundRank(32);
m1029effectEndRoundGlobal_.setTargetChoice(TargetChoice.LANCEUR);
Ints m1029ints_=new Ints(new CollCapacity(1));
m1029ints_.add(0);
m1029effectEndRoundGlobal_.setRequiredSuccessfulEffects(m1029ints_);
m1029custListEffect_.add(m1029effectEndRoundGlobal_);
m1029statusMoveData_.setEffects(m1029custListEffect_);
m1029statusMoveData_.setRankIncrementNbRound(27);
m1029statusMoveData_.setStoppableMoveMulti(true);
m1029statusMoveData_.setIgnVarAccurUserNeg(true);
m1029statusMoveData_.setIgnVarEvasTargetPos(true);
m1029statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1029statusMoveData_;
}
static MoveData m623(){
StatusMoveData m1030statusMoveData_ = Instances.newStatusMoveData();
m1030statusMoveData_.setPp(10);
StringList m1030stringList_=new StringList(new CollCapacity(1));
m1030stringList_.add(I_PSY);
m1030statusMoveData_.setTypes(m1030stringList_);
m1030stringList_=new StringList(new CollCapacity(1));
m1030stringList_.add(I_PSY);
m1030statusMoveData_.setBoostedTypes(m1030stringList_);
m1030statusMoveData_.setPriority(-7);
m1030statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1030custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectGlobal m1030effectGlobal_=Instances.newEffectGlobal();
m1030effectGlobal_.setCanceledIfUsed(true);
IdList<Statistic> m1030enumListStatistic_=new IdList<Statistic>(new CollCapacity(8));
m1030enumListStatistic_.add(Statistic.ATTACK);
m1030enumListStatistic_.add(Statistic.DEFENSE);
m1030enumListStatistic_.add(Statistic.SPECIAL_ATTACK);
m1030enumListStatistic_.add(Statistic.SPECIAL_DEFENSE);
m1030enumListStatistic_.add(Statistic.SPEED);
m1030enumListStatistic_.add(Statistic.ACCURACY);
m1030enumListStatistic_.add(Statistic.EVASINESS);
m1030enumListStatistic_.add(Statistic.CRITICAL_HIT);
m1030effectGlobal_.setCancelChgtStat(m1030enumListStatistic_);
m1030effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
m1030custListEffect_.add(m1030effectGlobal_);
m1030statusMoveData_.setEffects(m1030custListEffect_);
m1030statusMoveData_.setRankIncrementNbRound(7);
m1030statusMoveData_.setStoppableMoveMulti(true);
m1030statusMoveData_.setStoppableMovePrio(true);
m1030statusMoveData_.setIgnVarAccurUserNeg(true);
m1030statusMoveData_.setIgnVarEvasTargetPos(true);
m1030statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1030statusMoveData_;
}
static MoveData m624(){
StatusMoveData m1031statusMoveData_ = Instances.newStatusMoveData();
m1031statusMoveData_.setPp(10);
StringList m1031stringList_=new StringList(new CollCapacity(1));
m1031stringList_.add(I_PSY);
m1031statusMoveData_.setTypes(m1031stringList_);
m1031stringList_=new StringList(new CollCapacity(1));
m1031stringList_.add(I_PSY);
m1031statusMoveData_.setBoostedTypes(m1031stringList_);
m1031statusMoveData_.setPriority(-7);
m1031statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1031custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectGlobal m1031effectGlobal_=Instances.newEffectGlobal();
m1031effectGlobal_.setCanceledIfUsed(true);
m1031effectGlobal_.setUnusableItem(true);
m1031effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
m1031custListEffect_.add(m1031effectGlobal_);
m1031statusMoveData_.setEffects(m1031custListEffect_);
m1031statusMoveData_.setRankIncrementNbRound(8);
m1031statusMoveData_.setStoppableMoveMulti(true);
m1031statusMoveData_.setStoppableMovePrio(true);
m1031statusMoveData_.setIgnVarAccurUserNeg(true);
m1031statusMoveData_.setIgnVarEvasTargetPos(true);
m1031statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1031statusMoveData_;
}
}
