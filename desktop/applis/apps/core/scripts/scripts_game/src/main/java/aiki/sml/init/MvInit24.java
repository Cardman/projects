package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit24{
private MvInit24(){}
static MoveData m600(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)30);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam effectTeam_=Instances.newEffectTeam();
EnumMap<Statistic,Rate> enumMapStatisticRate_=new EnumMap<Statistic,Rate>(new CollCapacity(1));
enumMapStatisticRate_.addEntry(Statistic.SPEED,Rate.newRate("2"));
effectTeam_.setMultStatistic(enumMapStatisticRate_);
effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
effectTeam_.setFail("");
custListEffect_.add(effectTeam_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)13);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m601(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)30);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("40");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m602(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("GLACE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("19/20");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("55");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.SPEED,(byte)-1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
EnumMap<Statistic,String> enumMapStatisticString_=new EnumMap<Statistic,String>(new CollCapacity(1));
enumMapStatisticString_.addEntry(Statistic.SPEED,"VAR__CIBLE_CLONE>0");
effectStatistic_.setLocalFailStatis(enumMapStatisticString_);
effectStatistic_.setEvtRate(Rate.newRate("1"));
effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
effectStatistic_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatistic_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatistic_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return damagingMoveData_;
}
static MoveData m603(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("SPECTRE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("SPECTRE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("60");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(5));
enumMapStatisticByte_.addEntry(Statistic.ATTACK,(byte)1);
enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,(byte)1);
enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)1);
enumMapStatisticByte_.addEntry(Statistic.DEFENSE,(byte)1);
enumMapStatisticByte_.addEntry(Statistic.SPEED,(byte)1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
effectStatistic_.setEvtRate(Rate.newRate("1/10"));
effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
effectStatistic_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatistic_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatistic_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m604(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("VOL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("div(70+10*cardinal(inter({VAR__CLIMATS},{GRELE}))-15*cardinal(inter({VAR__CLIMATS},{ZENITH}))+30*cardinal(inter({VAR__CLIMATS},{ORAGE;DANSE_PLUIE})),100)");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("120*(caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{ENVOL;REBOND;CHUTE_LIBRE})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("7"));
monteCarloString_.addQuickEvent("CONFUSION",LgInt.newLgInt("3"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("CONFUSION","cardinal(inter({VAR__CIBLE_STATUTS},{CONFUSION}))>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
stringList_=new StringList(new CollCapacity(3));
stringList_.add("ENVOL");
stringList_.add("REBOND");
stringList_.add("CHUTE_LIBRE");
damagingMoveData_.setAchieveDisappearedPkUsingMove(stringList_);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m605(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectAccuracy effectAccuracy_=Instances.newEffectAccuracy();
effectAccuracy_.setTargetChoice(TargetChoice.ADJ_MULT);
effectAccuracy_.setFail("");
custListEffect_.add(effectAccuracy_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return statusMoveData_;
}
static MoveData m606(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectTeam effectTeam_=Instances.newEffectTeam();
EnumMap<Statistic,Rate> enumMapStatisticRate_=new EnumMap<Statistic,Rate>(new CollCapacity(1));
enumMapStatisticRate_.addEntry(Statistic.ACCURACY,Rate.newRate("2"));
effectTeam_.setMultStatistic(enumMapStatisticRate_);
enumMapStatisticRate_=new EnumMap<Statistic,Rate>(new CollCapacity(1));
enumMapStatisticRate_.addEntry(Statistic.EVASINESS,Rate.newRate("1/2"));
effectTeam_.setMultStatisticFoe(enumMapStatisticRate_);
effectTeam_.setTargetChoice(TargetChoice.LANCEUR);
effectTeam_.setFail("");
custListEffect_.add(effectTeam_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m607(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("EAU");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("EAU");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("60");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("4"));
monteCarloString_.addQuickEvent("CONFUSION",LgInt.newLgInt("1"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("CONFUSION","cardinal(inter({VAR__CIBLE_STATUTS},{CONFUSION}))>0|VAR__CIBLE_CLONE>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m608(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectFullHpRate effectFullHpRate_=Instances.newEffectFullHpRate();
effectFullHpRate_.setRestoredHp("1/2");
effectFullHpRate_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectFullHpRate_.setFail("");
custListEffect_.add(effectFullHpRate_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveSolo(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return statusMoveData_;
}
static MoveData m609(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("TENEBRE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("TENEBRE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("90");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectStatus effectStatus_=Instances.newEffectStatus();
MonteCarloString monteCarloString_=new MonteCarloString(new CollCapacity(2));
monteCarloString_.addQuickEvent("",LgInt.newLgInt("4"));
monteCarloString_.addQuickEvent("PEUR",LgInt.newLgInt("1"));
effectStatus_.setLawStatus(monteCarloString_);
StringMap<String> stringMapString_=new StringMap<String>(new CollCapacity(1));
stringMapString_.addEntry("PEUR","VAR__CIBLE_CLONE>0");
effectStatus_.setLocalFailStatus(stringMapString_);
effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectStatus_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectStatus_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectStatus_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m610(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setPriority((byte)3);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtection effectProtection_=Instances.newEffectProtection();
effectProtection_.setProtTeamAgainstStatusMoves(true);
effectProtection_.setTargetChoice(TargetChoice.LANCEUR);
effectProtection_.setFail("");
custListEffect_.add(effectProtection_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMovePrio(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m611(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setPriority((byte)2);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("80");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMovePrio(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m612(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)30);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setPriority((byte)1);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("40");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMovePrio(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m613(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("NORMAL");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectEndRoundPositionRelation effectEndRoundPositionRelation_=Instances.newEffectEndRoundPositionRelation();
effectEndRoundPositionRelation_.setHealHp(Rate.newRate("1/2"));
effectEndRoundPositionRelation_.setFailEndRound("");
effectEndRoundPositionRelation_.setEndRoundRank(26);
effectEndRoundPositionRelation_.setTargetChoice(TargetChoice.LANCEUR);
effectEndRoundPositionRelation_.setFail("");
custListEffect_.add(effectEndRoundPositionRelation_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m614(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus effectStatus_=Instances.newEffectStatus();
effectStatus_.setKoUserHealSubst(true);
effectStatus_.setTargetChoice(TargetChoice.LANCEUR);
effectStatus_.setFail("");
custListEffect_.add(effectStatus_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m615(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setPriority((byte)-5);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
StringMap<Rate> stringMapRate_=new StringMap<Rate>(new CollCapacity(1));
stringMapRate_.addEntry("SPECIALE",Rate.newRate("2"));
effectDamage_.setMultDamageAgainst(stringMapRate_);
effectDamage_.setPower("");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
effectDamage_.setFail("caracdroiteouvert(VAR__LANCEUR_DEGATS_RECUS_TOUR__SPECIALE,0)=0");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMovePrio(true);
damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return damagingMoveData_;
}
static MoveData m616(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)15);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("40");
EnumList<Statistic> enumListStatistic_=new EnumList<Statistic>(new CollCapacity(1));
enumListStatistic_.add(Statistic.EVASINESS);
effectDamage_.setIgnVarStatTargetPos(enumListStatistic_);
enumListStatistic_=new EnumList<Statistic>(new CollCapacity(1));
enumListStatistic_.add(Statistic.ACCURACY);
effectDamage_.setIgnVarStatUserNeg(enumListStatistic_);
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setStoppableMoveMulti(true);
damagingMoveData_.setIgnVarAccurUserNeg(true);
damagingMoveData_.setIgnVarEvasTargetPos(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return damagingMoveData_;
}
static MoveData m617(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("ELECTRIQUE");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("ELECTRIQUE");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectProtectFromTypes effectProtectFromTypes_=Instances.newEffectProtectFromTypes();
stringList_=new StringList(new CollCapacity(1));
stringList_.add("SOL");
effectProtectFromTypes_.setImmuAgainstTypes(stringList_);
effectProtectFromTypes_.setTargetChoice(TargetChoice.LANCEUR);
effectProtectFromTypes_.setFail("VAR__LANCEUR_EFFET__RACINES|VAR__NB_TOUR_GLOBAL__GRAVITE>0");
custListEffect_.add(effectProtectFromTypes_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)20);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m618(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)20);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PLANTE");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("20");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectDamageRate effectDamageRate_=Instances.newEffectDamageRate();
effectDamageRate_.setRateDamage(Rate.newRate("1/2"));
effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
effectDamageRate_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectDamageRate_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectDamageRate_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m619(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("SPECIALE");
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("3/4");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("120");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
EffectEndRoundSingleRelation effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> longMapRate_=new LongMap<Rate>(new CollCapacity(5));
longMapRate_.addEntry(1L,Rate.newRate("1/16"));
longMapRate_.addEntry(2L,Rate.newRate("1/16"));
longMapRate_.addEntry(3L,Rate.newRate("1/16"));
longMapRate_.addEntry(4L,Rate.newRate("1/16"));
longMapRate_.addEntry(5L,Rate.newRate("1/16"));
effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(longMapRate_);
MonteCarloNumber monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
monteCarloNumber_.addQuickEvent(Rate.newRate("3"),LgInt.newLgInt("3"));
monteCarloNumber_.addQuickEvent(Rate.newRate("2"),LgInt.newLgInt("3"));
monteCarloNumber_.addQuickEvent(Rate.newRate("4"),LgInt.newLgInt("1"));
monteCarloNumber_.addQuickEvent(Rate.newRate("5"),LgInt.newLgInt("1"));
effectEndRoundSingleRelation_.setLawForEnablingEffect(monteCarloNumber_);
effectEndRoundSingleRelation_.setFailEndRound("VAR__CIBLE_CLONE>0");
effectEndRoundSingleRelation_.setEndRoundRank(48);
effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectEndRoundSingleRelation_.setFail("VAR__CIBLE_CLONE>0");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectEndRoundSingleRelation_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m620(){
DamagingMoveData damagingMoveData_ = Instances.newDamagingMoveData();
damagingMoveData_.setCategory("PHYSIQUE");
damagingMoveData_.setDirect(true);
damagingMoveData_.setStoppableMoveKoSingle(true);
damagingMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("COMBAT");
damagingMoveData_.setBoostedTypes(stringList_);
damagingMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage effectDamage_=Instances.newEffectDamage();
effectDamage_.setPower("40");
effectDamage_.setUserAttack(true);
effectDamage_.setStatisAtt(Statistic.ATTACK);
effectDamage_.setTargetDefense(true);
effectDamage_.setStatisDef(Statistic.DEFENSE);
effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
effectDamage_.setFail("");
custListEffect_.add(effectDamage_);
damagingMoveData_.setEffects(custListEffect_);
damagingMoveData_.setStoppableMoveSolo(true);
damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return damagingMoveData_;
}
static MoveData m621(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setThievableMove(true);
statusMoveData_.setPp((short)40);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic effectStatistic_=Instances.newEffectStatistic();
EnumMap<Statistic,Byte> enumMapStatisticByte_=new EnumMap<Statistic,Byte>(new CollCapacity(1));
enumMapStatisticByte_.addEntry(Statistic.ATTACK,(byte)1);
effectStatistic_.setStatisVarRank(enumMapStatisticByte_);
effectStatistic_.setEvtRate(Rate.newRate("1"));
effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
effectStatistic_.setFail("");
custListEffect_.add(effectStatistic_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m622(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)5);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("FEU");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectGlobal effectGlobal_=Instances.newEffectGlobal();
effectGlobal_.setWeather(true);
effectGlobal_.setMultAccuracy(Rate.newRate("0"));
stringList_=new StringList(new CollCapacity(1));
stringList_.add("GEL");
effectGlobal_.setPreventStatus(stringList_);
effectGlobal_.setDamageEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRoundGround(Rate.newRate("0"));
effectGlobal_.setMultEffectLovingAlly(Rate.newRate("0"));
stringList_=new StringList(new CollCapacity(2));
stringList_.add("GRELE");
stringList_.add("TEMPETESABLE");
effectGlobal_.setCancelEffects(stringList_);
StringMap<Rate> stringMapRate_=new StringMap<Rate>(new CollCapacity(2));
stringMapRate_.addEntry("EAU",Rate.newRate("1/2"));
stringMapRate_.addEntry("FEU",Rate.newRate("3/2"));
effectGlobal_.setMultDamageTypesMoves(stringMapRate_);
effectGlobal_.setInvokedMoveTerrain("");
effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
effectGlobal_.setFail("");
custListEffect_.add(effectGlobal_);
EffectEndRoundGlobal effectEndRoundGlobal_=Instances.newEffectEndRoundGlobal();
effectEndRoundGlobal_.setFailEndRound("");
effectEndRoundGlobal_.setEndRoundRank(32);
effectEndRoundGlobal_.setTargetChoice(TargetChoice.LANCEUR);
effectEndRoundGlobal_.setFail("");
Ints ints_=new Ints(new CollCapacity(1));
ints_.add(0);
effectEndRoundGlobal_.setRequiredSuccessfulEffects(ints_);
custListEffect_.add(effectEndRoundGlobal_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)27);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m623(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setPriority((byte)-7);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectGlobal effectGlobal_=Instances.newEffectGlobal();
effectGlobal_.setCanceledIfUsed(true);
effectGlobal_.setMultAccuracy(Rate.newRate("0"));
effectGlobal_.setDamageEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRoundGround(Rate.newRate("0"));
effectGlobal_.setMultEffectLovingAlly(Rate.newRate("0"));
EnumList<Statistic> enumListStatistic_=new EnumList<Statistic>(new CollCapacity(8));
enumListStatistic_.add(Statistic.ATTACK);
enumListStatistic_.add(Statistic.DEFENSE);
enumListStatistic_.add(Statistic.SPECIAL_ATTACK);
enumListStatistic_.add(Statistic.SPECIAL_DEFENSE);
enumListStatistic_.add(Statistic.SPEED);
enumListStatistic_.add(Statistic.ACCURACY);
enumListStatistic_.add(Statistic.EVASINESS);
enumListStatistic_.add(Statistic.CRITICAL_HIT);
effectGlobal_.setCancelChgtStat(enumListStatistic_);
effectGlobal_.setInvokedMoveTerrain("");
effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
effectGlobal_.setFail("");
custListEffect_.add(effectGlobal_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)7);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setStoppableMovePrio(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
static MoveData m624(){
StatusMoveData statusMoveData_ = Instances.newStatusMoveData();
statusMoveData_.setPp((short)10);
StringList stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setTypes(stringList_);
stringList_=new StringList(new CollCapacity(1));
stringList_.add("PSY");
statusMoveData_.setBoostedTypes(stringList_);
statusMoveData_.setPriority((byte)-7);
statusMoveData_.setAccuracy("1");
CustList<Effect> custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectGlobal effectGlobal_=Instances.newEffectGlobal();
effectGlobal_.setCanceledIfUsed(true);
effectGlobal_.setMultAccuracy(Rate.newRate("0"));
effectGlobal_.setUnusableItem(true);
effectGlobal_.setDamageEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRound(Rate.newRate("0"));
effectGlobal_.setHealingEndRoundGround(Rate.newRate("0"));
effectGlobal_.setMultEffectLovingAlly(Rate.newRate("0"));
effectGlobal_.setInvokedMoveTerrain("");
effectGlobal_.setTargetChoice(TargetChoice.LANCEUR);
effectGlobal_.setFail("");
custListEffect_.add(effectGlobal_);
statusMoveData_.setEffects(custListEffect_);
statusMoveData_.setRankIncrementNbRound((short)8);
statusMoveData_.setStoppableMoveMulti(true);
statusMoveData_.setStoppableMovePrio(true);
statusMoveData_.setIgnVarAccurUserNeg(true);
statusMoveData_.setIgnVarEvasTargetPos(true);
statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return statusMoveData_;
}
}
