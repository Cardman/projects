package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit8 extends CstIgame{
private MvInit8(){}
static MoveData m200(){
DamagingMoveData m1169damagingMoveData_ = Instances.newDamagingMoveData();
m1169damagingMoveData_.setCategory(I_SPECIALE);
m1169damagingMoveData_.setStoppableMoveKoSingle(true);
m1169damagingMoveData_.setPp((short)15);
StringList m1169stringList_=new StringList(new CollCapacity(1));
m1169stringList_.add(I_FEU);
m1169damagingMoveData_.setTypes(m1169stringList_);
m1169stringList_=new StringList(new CollCapacity(1));
m1169stringList_.add(I_FEU);
m1169damagingMoveData_.setBoostedTypes(m1169stringList_);
m1169damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1169custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1169effectDamage_=Instances.newEffectDamage();
m1169effectDamage_.setPower(R_80);
m1169effectDamage_.setUserAttack(true);
m1169effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1169effectDamage_.setTargetDefense(true);
m1169effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1169effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1169effectDamage_.setFail(ES);
m1169custListEffect_.add(m1169effectDamage_);
EffectStatus m1169effectStatus_=Instances.newEffectStatus();
MonteCarloString m1169monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1169monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1169monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_3));
m1169effectStatus_.setLawStatus(m1169monteCarloString_);
StringMap<String> m1169stringMapString_=new StringMap<String>(new CollCapacity(1));
m1169stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m1169effectStatus_.setLocalFailStatus(m1169stringMapString_);
m1169effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m1169effectStatus_.setFail(ES);
Ints m1169ints_=new Ints(new CollCapacity(1));
m1169ints_.add(0);
m1169effectStatus_.setRequiredSuccessfulEffects(m1169ints_);
m1169custListEffect_.add(m1169effectStatus_);
m1169damagingMoveData_.setEffects(m1169custListEffect_);
m1169damagingMoveData_.setStoppableMoveSolo(true);
m1169damagingMoveData_.setStoppableMoveMulti(true);
m1169damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1169damagingMoveData_;
}
static MoveData m201(){
DamagingMoveData m1170damagingMoveData_ = Instances.newDamagingMoveData();
m1170damagingMoveData_.setCategory(I_SPECIALE);
m1170damagingMoveData_.setStoppableMoveKoSingle(true);
m1170damagingMoveData_.setPp((short)15);
StringList m1170stringList_=new StringList(new CollCapacity(1));
m1170stringList_.add(I_EAU);
m1170damagingMoveData_.setTypes(m1170stringList_);
m1170stringList_=new StringList(new CollCapacity(1));
m1170stringList_.add(I_EAU);
m1170damagingMoveData_.setBoostedTypes(m1170stringList_);
m1170damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1170custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1170effectDamage_=Instances.newEffectDamage();
m1170effectDamage_.setPower(R_80);
m1170effectDamage_.setUserAttack(true);
m1170effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1170effectDamage_.setTargetDefense(true);
m1170effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1170effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1170effectDamage_.setFail(ES);
m1170custListEffect_.add(m1170effectDamage_);
EffectStatus m1170effectStatus_=Instances.newEffectStatus();
MonteCarloString m1170monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1170monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1170monteCarloString_.addQuickEvent(I_BRULURE,LgInt.newLgInt(R_3));
m1170effectStatus_.setLawStatus(m1170monteCarloString_);
StringMap<String> m1170stringMapString_=new StringMap<String>(new CollCapacity(1));
m1170stringMapString_.addEntry(I_BRULURE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0+OO+A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_FEU+RB+RP+RP+GT+R_0);
m1170effectStatus_.setLocalFailStatus(m1170stringMapString_);
m1170effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1170effectStatus_.setFail(ES);
Ints m1170ints_=new Ints(new CollCapacity(1));
m1170ints_.add(0);
m1170effectStatus_.setRequiredSuccessfulEffects(m1170ints_);
m1170custListEffect_.add(m1170effectStatus_);
m1170damagingMoveData_.setEffects(m1170custListEffect_);
m1170damagingMoveData_.setStoppableMoveSolo(true);
m1170damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1170stringList_=new StringList(new CollCapacity(1));
m1170stringList_.add(I_GEL);
m1170damagingMoveData_.setDeletedStatus(m1170stringList_);
return m1170damagingMoveData_;
}
static MoveData m202(){
StatusMoveData m1171statusMoveData_ = Instances.newStatusMoveData();
m1171statusMoveData_.setPp((short)10);
StringList m1171stringList_=new StringList(new CollCapacity(1));
m1171stringList_.add(I_PSY);
m1171statusMoveData_.setTypes(m1171stringList_);
m1171stringList_=new StringList(new CollCapacity(1));
m1171stringList_.add(I_PSY);
m1171statusMoveData_.setBoostedTypes(m1171stringList_);
m1171statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1171custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchAbilities m1171effectSwitchAbilities_=Instances.newEffectSwitchAbilities();
m1171effectSwitchAbilities_.setExchangeAbility(ExchangeType.EXCHANGE);
m1171effectSwitchAbilities_.setConstAbility(ES);
m1171effectSwitchAbilities_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1171effectSwitchAbilities_.setFail(ES);
m1171custListEffect_.add(m1171effectSwitchAbilities_);
m1171statusMoveData_.setEffects(m1171custListEffect_);
m1171statusMoveData_.setStoppableMoveSolo(true);
m1171statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1171statusMoveData_;
}
static MoveData m203(){
StatusMoveData m1172statusMoveData_ = Instances.newStatusMoveData();
m1172statusMoveData_.setPp((short)10);
StringList m1172stringList_=new StringList(new CollCapacity(1));
m1172stringList_.add(I_PSY);
m1172statusMoveData_.setTypes(m1172stringList_);
m1172stringList_=new StringList(new CollCapacity(1));
m1172stringList_.add(I_PSY);
m1172statusMoveData_.setBoostedTypes(m1172stringList_);
m1172statusMoveData_.setAccuracy(R_9_10);
CustList<Effect> m1172custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatus m1172effectStatus_=Instances.newEffectStatus();
m1172effectStatus_.setStatusFromUser(true);
m1172effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1172effectStatus_.setFail(A_CARDINAL+LP+LB+V_CIBLE_STATUTS+RB+RP+GT+R_0+OO+A_CARDINAL+LP+LB+V_LANCEUR_STATUTS+RB+RP+OE+R_0);
m1172custListEffect_.add(m1172effectStatus_);
m1172statusMoveData_.setEffects(m1172custListEffect_);
m1172statusMoveData_.setStoppableMoveSolo(true);
m1172statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1172statusMoveData_;
}
static MoveData m204(){
DamagingMoveData m1173damagingMoveData_ = Instances.newDamagingMoveData();
m1173damagingMoveData_.setCategory(I_SPECIALE);
m1173damagingMoveData_.setStoppableMoveKoSingle(true);
m1173damagingMoveData_.setPp((short)15);
StringList m1173stringList_=new StringList(new CollCapacity(1));
m1173stringList_.add(I_NORMAL);
m1173damagingMoveData_.setTypes(m1173stringList_);
m1173stringList_=new StringList(new CollCapacity(1));
m1173stringList_.add(I_NORMAL);
m1173damagingMoveData_.setBoostedTypes(m1173stringList_);
m1173damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1173custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1173effectDamage_=Instances.newEffectDamage();
m1173effectDamage_.setPower(R_40+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_ECHO+OP+R_1+RP);
m1173effectDamage_.setUserAttack(true);
m1173effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1173effectDamage_.setTargetDefense(true);
m1173effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1173effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1173effectDamage_.setFail(ES);
m1173custListEffect_.add(m1173effectDamage_);
m1173damagingMoveData_.setEffects(m1173custListEffect_);
m1173damagingMoveData_.setStoppableMoveSolo(true);
m1173damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1173damagingMoveData_;
}
static MoveData m205(){
DamagingMoveData m1174damagingMoveData_ = Instances.newDamagingMoveData();
m1174damagingMoveData_.setCategory(I_SPECIALE);
m1174damagingMoveData_.setStoppableMoveKoSingle(true);
m1174damagingMoveData_.setPp((short)30);
StringList m1174stringList_=new StringList(new CollCapacity(1));
m1174stringList_.add(I_ELECTRIQUE);
m1174damagingMoveData_.setTypes(m1174stringList_);
m1174stringList_=new StringList(new CollCapacity(1));
m1174stringList_.add(I_ELECTRIQUE);
m1174damagingMoveData_.setBoostedTypes(m1174stringList_);
m1174damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1174custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1174effectDamage_=Instances.newEffectDamage();
m1174effectDamage_.setPower(R_40);
m1174effectDamage_.setUserAttack(true);
m1174effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1174effectDamage_.setTargetDefense(true);
m1174effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1174effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1174effectDamage_.setFail(ES);
m1174custListEffect_.add(m1174effectDamage_);
EffectStatus m1174effectStatus_=Instances.newEffectStatus();
MonteCarloString m1174monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1174monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m1174monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m1174effectStatus_.setLawStatus(m1174monteCarloString_);
StringMap<String> m1174stringMapString_=new StringMap<String>(new CollCapacity(1));
m1174stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1174effectStatus_.setLocalFailStatus(m1174stringMapString_);
m1174effectStatus_.setTargetChoice(TargetChoice.ADJ_MULT);
m1174effectStatus_.setFail(ES);
Ints m1174ints_=new Ints(new CollCapacity(1));
m1174ints_.add(0);
m1174effectStatus_.setRequiredSuccessfulEffects(m1174ints_);
m1174custListEffect_.add(m1174effectStatus_);
m1174damagingMoveData_.setEffects(m1174custListEffect_);
m1174damagingMoveData_.setStoppableMoveSolo(true);
m1174damagingMoveData_.setStoppableMoveMulti(true);
m1174damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1174damagingMoveData_;
}
static MoveData m206(){
DamagingMoveData m1175damagingMoveData_ = Instances.newDamagingMoveData();
m1175damagingMoveData_.setCategory(I_PHYSIQUE);
m1175damagingMoveData_.setStoppableMoveKoSingle(true);
m1175damagingMoveData_.setPp((short)5);
StringList m1175stringList_=new StringList(new CollCapacity(1));
m1175stringList_.add(I_ELECTRIQUE);
m1175damagingMoveData_.setTypes(m1175stringList_);
m1175stringList_=new StringList(new CollCapacity(1));
m1175stringList_.add(I_ELECTRIQUE);
m1175damagingMoveData_.setBoostedTypes(m1175stringList_);
m1175damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1175custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1175effectDamage_=Instances.newEffectDamage();
m1175effectDamage_.setPower(R_100+OM+LP+V_NB_UTILI_ATT_EQ_TOUR+SE+I_FLAMME_CROIX+OP+R_1+RP);
m1175effectDamage_.setUserAttack(true);
m1175effectDamage_.setStatisAtt(Statistic.ATTACK);
m1175effectDamage_.setTargetDefense(true);
m1175effectDamage_.setStatisDef(Statistic.DEFENSE);
m1175effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1175effectDamage_.setFail(ES);
m1175custListEffect_.add(m1175effectDamage_);
m1175damagingMoveData_.setEffects(m1175custListEffect_);
m1175damagingMoveData_.setStoppableMoveSolo(true);
m1175damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1175damagingMoveData_;
}
static MoveData m207(){
DamagingMoveData m1176damagingMoveData_ = Instances.newDamagingMoveData();
m1176damagingMoveData_.setCategory(I_PHYSIQUE);
m1176damagingMoveData_.setDirect(true);
m1176damagingMoveData_.setStoppableMoveKoSingle(true);
m1176damagingMoveData_.setPp((short)15);
StringList m1176stringList_=new StringList(new CollCapacity(1));
m1176stringList_.add(I_ELECTRIQUE);
m1176damagingMoveData_.setTypes(m1176stringList_);
m1176stringList_=new StringList(new CollCapacity(1));
m1176stringList_.add(I_ELECTRIQUE);
m1176damagingMoveData_.setBoostedTypes(m1176stringList_);
m1176damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1176custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1176effectDamage_=Instances.newEffectDamage();
m1176effectDamage_.setPower(R_90);
m1176effectDamage_.setUserAttack(true);
m1176effectDamage_.setStatisAtt(Statistic.ATTACK);
m1176effectDamage_.setTargetDefense(true);
m1176effectDamage_.setStatisDef(Statistic.DEFENSE);
m1176effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1176effectDamage_.setFail(ES);
m1176custListEffect_.add(m1176effectDamage_);
EffectDamageRate m1176effectDamageRate_=Instances.newEffectDamageRate();
m1176effectDamageRate_.setRateDamage(Rate.newRate(OD+R_1_4));
m1176effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m1176effectDamageRate_.setFail(ES);
Ints m1176ints_=new Ints(new CollCapacity(1));
m1176ints_.add(0);
m1176effectDamageRate_.setRequiredSuccessfulEffects(m1176ints_);
m1176custListEffect_.add(m1176effectDamageRate_);
m1176damagingMoveData_.setEffects(m1176custListEffect_);
m1176damagingMoveData_.setStoppableMoveSolo(true);
m1176damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1176damagingMoveData_;
}
static MoveData m208(){
DamagingMoveData m1177damagingMoveData_ = Instances.newDamagingMoveData();
m1177damagingMoveData_.setCategory(I_PHYSIQUE);
m1177damagingMoveData_.setStoppableMoveKoSingle(true);
m1177damagingMoveData_.setPp((short)5);
StringList m1177stringList_=new StringList(new CollCapacity(1));
m1177stringList_.add(I_GLACE);
m1177damagingMoveData_.setTypes(m1177stringList_);
m1177stringList_=new StringList(new CollCapacity(1));
m1177stringList_.add(I_GLACE);
m1177damagingMoveData_.setBoostedTypes(m1177stringList_);
m1177damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m1177custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1177effectDamage_=Instances.newEffectDamage();
m1177effectDamage_.setPower(R_140);
m1177effectDamage_.setUserAttack(true);
m1177effectDamage_.setStatisAtt(Statistic.ATTACK);
m1177effectDamage_.setTargetDefense(true);
m1177effectDamage_.setStatisDef(Statistic.DEFENSE);
m1177effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1177effectDamage_.setFail(ES);
m1177custListEffect_.add(m1177effectDamage_);
EffectStatus m1177effectStatus_=Instances.newEffectStatus();
MonteCarloString m1177monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1177monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1177monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_3));
m1177effectStatus_.setLawStatus(m1177monteCarloString_);
StringMap<String> m1177stringMapString_=new StringMap<String>(new CollCapacity(1));
m1177stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1177effectStatus_.setLocalFailStatus(m1177stringMapString_);
m1177effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1177effectStatus_.setFail(ES);
Ints m1177ints_=new Ints(new CollCapacity(1));
m1177ints_.add(0);
m1177effectStatus_.setRequiredSuccessfulEffects(m1177ints_);
m1177custListEffect_.add(m1177effectStatus_);
m1177damagingMoveData_.setEffects(m1177custListEffect_);
m1177damagingMoveData_.setNbPrepaRound((short)1);
m1177damagingMoveData_.setStoppableMoveSolo(true);
m1177damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1177damagingMoveData_;
}
static MoveData m209(){
DamagingMoveData m1178damagingMoveData_ = Instances.newDamagingMoveData();
m1178damagingMoveData_.setCategory(I_PHYSIQUE);
m1178damagingMoveData_.setDirect(true);
m1178damagingMoveData_.setStoppableMoveKoSingle(true);
m1178damagingMoveData_.setPp((short)10);
StringList m1178stringList_=new StringList(new CollCapacity(1));
m1178stringList_.add(I_NORMAL);
m1178damagingMoveData_.setTypes(m1178stringList_);
m1178stringList_=new StringList(new CollCapacity(1));
m1178stringList_.add(I_NORMAL);
m1178damagingMoveData_.setBoostedTypes(m1178stringList_);
m1178damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m1178custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1178effectDamage_=Instances.newEffectDamage();
m1178effectDamage_.setPower(R_75);
m1178effectDamage_.setUserAttack(true);
m1178effectDamage_.setStatisAtt(Statistic.ATTACK);
m1178effectDamage_.setTargetDefense(true);
m1178effectDamage_.setStatisDef(Statistic.DEFENSE);
m1178effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1178effectDamage_.setFail(ES);
m1178custListEffect_.add(m1178effectDamage_);
EffectStatistic m1178effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m1178enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m1178enumMapStatisticByte_.addEntry(Statistic.DEFENSE,(byte)-1);
m1178effectStatistic_.setStatisVarRank(m1178enumMapStatisticByte_);
IdMap<Statistic,String> m1178enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1178enumMapStatisticString_.addEntry(Statistic.DEFENSE,V_CIBLE_CLONE+GT+R_0);
m1178effectStatistic_.setLocalFailStatis(m1178enumMapStatisticString_);
m1178effectStatistic_.setEvtRate(Rate.newRate(R_1_2));
m1178effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1178effectStatistic_.setFail(ES);
Ints m1178ints_=new Ints(new CollCapacity(1));
m1178ints_.add(0);
m1178effectStatistic_.setRequiredSuccessfulEffects(m1178ints_);
m1178custListEffect_.add(m1178effectStatistic_);
m1178damagingMoveData_.setEffects(m1178custListEffect_);
m1178damagingMoveData_.setStoppableMoveSolo(true);
m1178damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1178damagingMoveData_;
}
static MoveData m210(){
DamagingMoveData m1179damagingMoveData_ = Instances.newDamagingMoveData();
m1179damagingMoveData_.setCategory(I_PHYSIQUE);
m1179damagingMoveData_.setDirect(true);
m1179damagingMoveData_.setStoppableMoveKoSingle(true);
m1179damagingMoveData_.setPp((short)15);
StringList m1179stringList_=new StringList(new CollCapacity(1));
m1179stringList_.add(I_COMBAT);
m1179damagingMoveData_.setTypes(m1179stringList_);
m1179stringList_=new StringList(new CollCapacity(1));
m1179stringList_.add(I_COMBAT);
m1179damagingMoveData_.setBoostedTypes(m1179stringList_);
m1179damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1179custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1179effectDamage_=Instances.newEffectDamage();
m1179effectDamage_.setPower(R_40);
m1179effectDamage_.setUserAttack(true);
m1179effectDamage_.setStatisAtt(Statistic.ATTACK);
m1179effectDamage_.setTargetDefense(true);
m1179effectDamage_.setStatisDef(Statistic.DEFENSE);
m1179effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1179effectDamage_.setFail(ES);
m1179custListEffect_.add(m1179effectDamage_);
EffectStatistic m1179effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m1179enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m1179enumMapStatisticByte_.addEntry(Statistic.DEFENSE,(byte)-1);
m1179effectStatistic_.setStatisVarRank(m1179enumMapStatisticByte_);
IdMap<Statistic,String> m1179enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1179enumMapStatisticString_.addEntry(Statistic.DEFENSE,V_CIBLE_CLONE+GT+R_0);
m1179effectStatistic_.setLocalFailStatis(m1179enumMapStatisticString_);
m1179effectStatistic_.setEvtRate(Rate.newRate(R_1_2));
m1179effectStatistic_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1179effectStatistic_.setFail(ES);
Ints m1179ints_=new Ints(new CollCapacity(1));
m1179ints_.add(0);
m1179effectStatistic_.setRequiredSuccessfulEffects(m1179ints_);
m1179custListEffect_.add(m1179effectStatistic_);
m1179damagingMoveData_.setEffects(m1179custListEffect_);
m1179damagingMoveData_.setStoppableMoveSolo(true);
m1179damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1179damagingMoveData_;
}
static MoveData m211(){
DamagingMoveData m1180damagingMoveData_ = Instances.newDamagingMoveData();
m1180damagingMoveData_.setCategory(I_PHYSIQUE);
m1180damagingMoveData_.setStoppableMoveKoSingle(true);
m1180damagingMoveData_.setPp((short)30);
StringList m1180stringList_=new StringList(new CollCapacity(1));
m1180stringList_.add(I_GLACE);
m1180damagingMoveData_.setTypes(m1180stringList_);
m1180stringList_=new StringList(new CollCapacity(1));
m1180stringList_.add(I_GLACE);
m1180damagingMoveData_.setBoostedTypes(m1180stringList_);
m1180damagingMoveData_.setPriority((byte)1);
m1180damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1180custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1180effectDamage_=Instances.newEffectDamage();
m1180effectDamage_.setPower(R_40);
m1180effectDamage_.setUserAttack(true);
m1180effectDamage_.setStatisAtt(Statistic.ATTACK);
m1180effectDamage_.setTargetDefense(true);
m1180effectDamage_.setStatisDef(Statistic.DEFENSE);
m1180effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1180effectDamage_.setFail(ES);
m1180custListEffect_.add(m1180effectDamage_);
m1180damagingMoveData_.setEffects(m1180custListEffect_);
m1180damagingMoveData_.setStoppableMoveSolo(true);
m1180damagingMoveData_.setStoppableMovePrio(true);
m1180damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1180damagingMoveData_;
}
static MoveData m212(){
DamagingMoveData m1181damagingMoveData_ = Instances.newDamagingMoveData();
m1181damagingMoveData_.setCategory(I_SPECIALE);
m1181damagingMoveData_.setStoppableMoveKoSingle(true);
m1181damagingMoveData_.setPp((short)10);
StringList m1181stringList_=new StringList(new CollCapacity(1));
m1181stringList_.add(I_FEE);
m1181damagingMoveData_.setTypes(m1181stringList_);
m1181stringList_=new StringList(new CollCapacity(1));
m1181stringList_.add(I_FEE);
m1181damagingMoveData_.setBoostedTypes(m1181stringList_);
m1181damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1181custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1181effectDamage_=Instances.newEffectDamage();
m1181effectDamage_.setPower(R_80);
m1181effectDamage_.setUserAttack(true);
m1181effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1181effectDamage_.setTargetDefense(true);
m1181effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1181effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m1181effectDamage_.setFail(ES);
m1181custListEffect_.add(m1181effectDamage_);
m1181damagingMoveData_.setEffects(m1181custListEffect_);
m1181damagingMoveData_.setStoppableMoveSolo(true);
m1181damagingMoveData_.setStoppableMoveMulti(true);
m1181damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m1181damagingMoveData_;
}
static MoveData m213(){
DamagingMoveData m1182damagingMoveData_ = Instances.newDamagingMoveData();
m1182damagingMoveData_.setCategory(I_SPECIALE);
m1182damagingMoveData_.setStoppableMoveKoSingle(true);
m1182damagingMoveData_.setPp((short)10);
StringList m1182stringList_=new StringList(new CollCapacity(1));
m1182stringList_.add(I_PLANTE);
m1182damagingMoveData_.setTypes(m1182stringList_);
m1182stringList_=new StringList(new CollCapacity(1));
m1182stringList_.add(I_PLANTE);
m1182damagingMoveData_.setBoostedTypes(m1182stringList_);
m1182damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1182custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1182effectDamage_=Instances.newEffectDamage();
m1182effectDamage_.setPower(R_80);
m1182effectDamage_.setUserAttack(true);
m1182effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1182effectDamage_.setTargetDefense(true);
m1182effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1182effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1182effectDamage_.setFail(ES);
m1182custListEffect_.add(m1182effectDamage_);
EffectStatistic m1182effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m1182enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m1182enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,(byte)-1);
m1182effectStatistic_.setStatisVarRank(m1182enumMapStatisticByte_);
IdMap<Statistic,String> m1182enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1182enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m1182effectStatistic_.setLocalFailStatis(m1182enumMapStatisticString_);
m1182effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m1182effectStatistic_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1182effectStatistic_.setFail(ES);
Ints m1182ints_=new Ints(new CollCapacity(1));
m1182ints_.add(0);
m1182effectStatistic_.setRequiredSuccessfulEffects(m1182ints_);
m1182custListEffect_.add(m1182effectStatistic_);
m1182damagingMoveData_.setEffects(m1182custListEffect_);
m1182damagingMoveData_.setStoppableMoveSolo(true);
m1182damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1182damagingMoveData_;
}
static MoveData m214(){
DamagingMoveData m1183damagingMoveData_ = Instances.newDamagingMoveData();
m1183damagingMoveData_.setCategory(I_PHYSIQUE);
m1183damagingMoveData_.setDirect(true);
m1183damagingMoveData_.setStoppableMoveKoSingle(true);
m1183damagingMoveData_.setPp((short)20);
StringList m1183stringList_=new StringList(new CollCapacity(1));
m1183stringList_.add(I_NORMAL);
m1183damagingMoveData_.setTypes(m1183stringList_);
m1183stringList_=new StringList(new CollCapacity(1));
m1183stringList_.add(I_NORMAL);
m1183damagingMoveData_.setBoostedTypes(m1183stringList_);
m1183damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1183custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1183effectDamage_=Instances.newEffectDamage();
m1183effectDamage_.setPower(R_65+OM+LP+A_MIN+LP+R_1+OC+V_CIBLE_NB_UTILISATION+SE+I_LILLIPUT+RP+OP+R_1+RP);
m1183effectDamage_.setUserAttack(true);
m1183effectDamage_.setStatisAtt(Statistic.ATTACK);
m1183effectDamage_.setTargetDefense(true);
m1183effectDamage_.setStatisDef(Statistic.DEFENSE);
m1183effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1183effectDamage_.setFail(ES);
m1183custListEffect_.add(m1183effectDamage_);
EffectStatus m1183effectStatus_=Instances.newEffectStatus();
MonteCarloString m1183monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1183monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1183monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_3));
m1183effectStatus_.setLawStatus(m1183monteCarloString_);
StringMap<String> m1183stringMapString_=new StringMap<String>(new CollCapacity(1));
m1183stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m1183effectStatus_.setLocalFailStatus(m1183stringMapString_);
m1183effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1183effectStatus_.setFail(ES);
Ints m1183ints_=new Ints(new CollCapacity(1));
m1183ints_.add(0);
m1183effectStatus_.setRequiredSuccessfulEffects(m1183ints_);
m1183custListEffect_.add(m1183effectStatus_);
m1183damagingMoveData_.setEffects(m1183custListEffect_);
m1183damagingMoveData_.setStoppableMoveSolo(true);
m1183damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1183damagingMoveData_;
}
static MoveData m215(){
DamagingMoveData m1184damagingMoveData_ = Instances.newDamagingMoveData();
m1184damagingMoveData_.setCategory(I_PHYSIQUE);
m1184damagingMoveData_.setDirect(true);
m1184damagingMoveData_.setStoppableMoveKoSingle(true);
m1184damagingMoveData_.setPp((short)35);
StringList m1184stringList_=new StringList(new CollCapacity(1));
m1184stringList_.add(I_NORMAL);
m1184damagingMoveData_.setTypes(m1184stringList_);
m1184stringList_=new StringList(new CollCapacity(1));
m1184stringList_.add(I_NORMAL);
m1184damagingMoveData_.setBoostedTypes(m1184stringList_);
m1184damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1184custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1184effectDamage_=Instances.newEffectDamage();
m1184effectDamage_.setPower(R_40);
m1184effectDamage_.setUserAttack(true);
m1184effectDamage_.setStatisAtt(Statistic.ATTACK);
m1184effectDamage_.setTargetDefense(true);
m1184effectDamage_.setStatisDef(Statistic.DEFENSE);
m1184effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1184effectDamage_.setFail(ES);
m1184custListEffect_.add(m1184effectDamage_);
m1184damagingMoveData_.setEffects(m1184custListEffect_);
m1184damagingMoveData_.setStoppableMoveSolo(true);
m1184damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1184damagingMoveData_;
}
static MoveData m216(){
DamagingMoveData m1185damagingMoveData_ = Instances.newDamagingMoveData();
m1185damagingMoveData_.setCategory(I_SPECIALE);
m1185damagingMoveData_.setStoppableMoveKoSingle(true);
m1185damagingMoveData_.setPp((short)30);
StringList m1185stringList_=new StringList(new CollCapacity(1));
m1185stringList_.add(I_EAU);
m1185damagingMoveData_.setTypes(m1185stringList_);
m1185stringList_=new StringList(new CollCapacity(1));
m1185stringList_.add(I_EAU);
m1185damagingMoveData_.setBoostedTypes(m1185stringList_);
m1185damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1185custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1185effectDamage_=Instances.newEffectDamage();
m1185effectDamage_.setPower(R_20);
m1185effectDamage_.setUserAttack(true);
m1185effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1185effectDamage_.setTargetDefense(true);
m1185effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1185effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m1185effectDamage_.setFail(ES);
m1185custListEffect_.add(m1185effectDamage_);
EffectStatistic m1185effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Byte> m1185enumMapStatisticByte_=new IdMap<Statistic,Byte>(new CollCapacity(1));
m1185enumMapStatisticByte_.addEntry(Statistic.SPEED,(byte)-1);
m1185effectStatistic_.setStatisVarRank(m1185enumMapStatisticByte_);
IdMap<Statistic,String> m1185enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1185enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m1185effectStatistic_.setLocalFailStatis(m1185enumMapStatisticString_);
m1185effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m1185effectStatistic_.setTargetChoice(TargetChoice.ADJ_ADV);
m1185effectStatistic_.setFail(ES);
Ints m1185ints_=new Ints(new CollCapacity(1));
m1185ints_.add(0);
m1185effectStatistic_.setRequiredSuccessfulEffects(m1185ints_);
m1185custListEffect_.add(m1185effectStatistic_);
m1185damagingMoveData_.setEffects(m1185custListEffect_);
m1185damagingMoveData_.setStoppableMoveSolo(true);
m1185damagingMoveData_.setStoppableMoveMulti(true);
m1185damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m1185damagingMoveData_;
}
static MoveData m217(){
StatusMoveData m1186statusMoveData_ = Instances.newStatusMoveData();
m1186statusMoveData_.setPp((short)5);
StringList m1186stringList_=new StringList(new CollCapacity(1));
m1186stringList_.add(I_NORMAL);
m1186statusMoveData_.setTypes(m1186stringList_);
m1186stringList_=new StringList(new CollCapacity(1));
m1186stringList_.add(I_NORMAL);
m1186statusMoveData_.setBoostedTypes(m1186stringList_);
m1186statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1186custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectCommonStatistics m1186effectCommonStatistics_=Instances.newEffectCommonStatistics();
IdMap<Statistic,String> m1186enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1186enumMapStatisticString_.addEntry(Statistic.PV_RESTANTS,A_MIN+LP+V_CIBLE_PV_RESTANTS+OC+V_LANCEUR_PV_RESTANTS+RP);
m1186effectCommonStatistics_.setCommonValue(m1186enumMapStatisticString_);
m1186effectCommonStatistics_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1186effectCommonStatistics_.setFail(V_CIBLE_PV_RESTANTS+LT+V_LANCEUR_PV_RESTANTS);
m1186custListEffect_.add(m1186effectCommonStatistics_);
m1186statusMoveData_.setEffects(m1186custListEffect_);
m1186statusMoveData_.setStoppableMoveSolo(true);
m1186statusMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1186statusMoveData_;
}
static MoveData m218(){
DamagingMoveData m1187damagingMoveData_ = Instances.newDamagingMoveData();
m1187damagingMoveData_.setCategory(I_SPECIALE);
m1187damagingMoveData_.setStoppableMoveKoSingle(true);
m1187damagingMoveData_.setPp((short)5);
StringList m1187stringList_=new StringList(new CollCapacity(1));
m1187stringList_.add(I_ELECTRIQUE);
m1187damagingMoveData_.setTypes(m1187stringList_);
m1187stringList_=new StringList(new CollCapacity(1));
m1187stringList_.add(I_ELECTRIQUE);
m1187damagingMoveData_.setBoostedTypes(m1187stringList_);
m1187damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1187custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1187effectDamage_=Instances.newEffectDamage();
m1187effectDamage_.setPower(R_120);
m1187effectDamage_.setUserAttack(true);
m1187effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1187effectDamage_.setTargetDefense(true);
m1187effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1187effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1187effectDamage_.setFail(ES);
m1187custListEffect_.add(m1187effectDamage_);
EffectStatus m1187effectStatus_=Instances.newEffectStatus();
MonteCarloString m1187monteCarloString_=new MonteCarloString(new CollCapacity(1));
m1187monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m1187effectStatus_.setLawStatus(m1187monteCarloString_);
StringMap<String> m1187stringMapString_=new StringMap<String>(new CollCapacity(1));
m1187stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1187effectStatus_.setLocalFailStatus(m1187stringMapString_);
m1187effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1187effectStatus_.setFail(ES);
Ints m1187ints_=new Ints(new CollCapacity(1));
m1187ints_.add(0);
m1187effectStatus_.setRequiredSuccessfulEffects(m1187ints_);
m1187custListEffect_.add(m1187effectStatus_);
m1187damagingMoveData_.setEffects(m1187custListEffect_);
m1187damagingMoveData_.setStoppableMoveSolo(true);
m1187damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1187damagingMoveData_;
}
static MoveData m219(){
DamagingMoveData m1188damagingMoveData_ = Instances.newDamagingMoveData();
m1188damagingMoveData_.setCategory(I_PHYSIQUE);
m1188damagingMoveData_.setDirect(true);
m1188damagingMoveData_.setStoppableMoveKoSingle(true);
m1188damagingMoveData_.setPp((short)15);
StringList m1188stringList_=new StringList(new CollCapacity(1));
m1188stringList_.add(I_ELECTRIQUE);
m1188damagingMoveData_.setTypes(m1188stringList_);
m1188stringList_=new StringList(new CollCapacity(1));
m1188stringList_.add(I_ELECTRIQUE);
m1188damagingMoveData_.setBoostedTypes(m1188stringList_);
m1188damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1188custListEffect_ = new CustList<Effect>(new CollCapacity(3));
EffectDamage m1188effectDamage_=Instances.newEffectDamage();
m1188effectDamage_.setPower(R_120);
m1188effectDamage_.setUserAttack(true);
m1188effectDamage_.setStatisAtt(Statistic.ATTACK);
m1188effectDamage_.setTargetDefense(true);
m1188effectDamage_.setStatisDef(Statistic.DEFENSE);
m1188effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1188effectDamage_.setFail(ES);
m1188custListEffect_.add(m1188effectDamage_);
EffectStatus m1188effectStatus_=Instances.newEffectStatus();
MonteCarloString m1188monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1188monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m1188monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_1));
m1188effectStatus_.setLawStatus(m1188monteCarloString_);
StringMap<String> m1188stringMapString_=new StringMap<String>(new CollCapacity(1));
m1188stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1188effectStatus_.setLocalFailStatus(m1188stringMapString_);
m1188effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1188effectStatus_.setFail(ES);
Ints m1188ints_=new Ints(new CollCapacity(1));
m1188ints_.add(0);
m1188effectStatus_.setRequiredSuccessfulEffects(m1188ints_);
m1188custListEffect_.add(m1188effectStatus_);
EffectDamageRate m1188effectDamageRate_=Instances.newEffectDamageRate();
m1188effectDamageRate_.setRateDamage(Rate.newRate(OD+R_1_3));
m1188effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m1188effectDamageRate_.setFail(ES);
m1188ints_=new Ints(new CollCapacity(1));
m1188ints_.add(0);
m1188effectDamageRate_.setRequiredSuccessfulEffects(m1188ints_);
m1188custListEffect_.add(m1188effectDamageRate_);
m1188damagingMoveData_.setEffects(m1188custListEffect_);
m1188damagingMoveData_.setStoppableMoveSolo(true);
m1188damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1188damagingMoveData_;
}
static MoveData m220(){
StatusMoveData m1189statusMoveData_ = Instances.newStatusMoveData();
m1189statusMoveData_.setPp((short)20);
StringList m1189stringList_=new StringList(new CollCapacity(1));
m1189stringList_.add(I_ELECTRIQUE);
m1189statusMoveData_.setTypes(m1189stringList_);
m1189stringList_=new StringList(new CollCapacity(1));
m1189stringList_.add(I_ELECTRIQUE);
m1189statusMoveData_.setBoostedTypes(m1189stringList_);
m1189statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1189custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectSwitchMoveTypes m1189effectSwitchMoveTypes_=Instances.newEffectSwitchMoveTypes();
m1189stringList_=new StringList(new CollCapacity(1));
m1189stringList_.add(I_ELECTRIQUE);
m1189effectSwitchMoveTypes_.setReplacingTypes(m1189stringList_);
m1189effectSwitchMoveTypes_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1189effectSwitchMoveTypes_.setFail(ES);
m1189custListEffect_.add(m1189effectSwitchMoveTypes_);
m1189statusMoveData_.setEffects(m1189custListEffect_);
m1189statusMoveData_.setIgnVarAccurUserNeg(true);
m1189statusMoveData_.setIgnVarEvasTargetPos(true);
m1189statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1189statusMoveData_;
}
static MoveData m221(){
StatusMoveData m1190statusMoveData_ = Instances.newStatusMoveData();
m1190statusMoveData_.setCounterableMove(true);
m1190statusMoveData_.setPp((short)15);
StringList m1190stringList_=new StringList(new CollCapacity(1));
m1190stringList_.add(I_TENEBRE);
m1190statusMoveData_.setTypes(m1190stringList_);
m1190stringList_=new StringList(new CollCapacity(1));
m1190stringList_.add(I_TENEBRE);
m1190statusMoveData_.setBoostedTypes(m1190stringList_);
m1190statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1190custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRestriction m1190effectRestriction_=Instances.newEffectRestriction();
m1190effectRestriction_.setForbidTargetUsingItem(true);
m1190effectRestriction_.setChoiceRestriction(MoveChoiceRestrictionType.NOTHING);
m1190effectRestriction_.setTargetChoice(TargetChoice.ADJ_MULT);
m1190effectRestriction_.setFail(ES);
m1190custListEffect_.add(m1190effectRestriction_);
m1190statusMoveData_.setEffects(m1190custListEffect_);
m1190statusMoveData_.setRankIncrementNbRound((short)19);
m1190statusMoveData_.setStoppableMoveSolo(true);
m1190statusMoveData_.setStoppableMoveMulti(true);
m1190statusMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1190statusMoveData_;
}
static MoveData m222(){
StatusMoveData m1191statusMoveData_ = Instances.newStatusMoveData();
m1191statusMoveData_.setPp((short)5);
StringList m1191stringList_=new StringList(new CollCapacity(1));
m1191stringList_.add(I_NORMAL);
m1191statusMoveData_.setTypes(m1191stringList_);
m1191stringList_=new StringList(new CollCapacity(1));
m1191stringList_.add(I_NORMAL);
m1191statusMoveData_.setBoostedTypes(m1191stringList_);
m1191statusMoveData_.setAccuracy(A_DIV+LP+A_MAX+LP+V_LANCEUR_NIVEAU+OD+V_CIBLE_NIVEAU+OC+R_0+RP+OC+R_100+RP);
CustList<Effect> m1191custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRemainedHpRate m1191effectRemainedHpRate_=Instances.newEffectRemainedHpRate();
m1191effectRemainedHpRate_.setRateHp(Rate.newRate(OD+R_1));
m1191effectRemainedHpRate_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1191effectRemainedHpRate_.setFail(ES);
m1191custListEffect_.add(m1191effectRemainedHpRate_);
m1191statusMoveData_.setEffects(m1191custListEffect_);
m1191statusMoveData_.setStoppableMoveSolo(true);
m1191statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1191statusMoveData_;
}
static MoveData m223(){
StatusMoveData m1192statusMoveData_ = Instances.newStatusMoveData();
m1192statusMoveData_.setCounterableMove(true);
m1192statusMoveData_.setPp((short)5);
StringList m1192stringList_=new StringList(new CollCapacity(1));
m1192stringList_.add(I_NORMAL);
m1192statusMoveData_.setTypes(m1192stringList_);
m1192stringList_=new StringList(new CollCapacity(1));
m1192stringList_.add(I_NORMAL);
m1192statusMoveData_.setBoostedTypes(m1192stringList_);
m1192statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1192custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRestriction m1192effectRestriction_=Instances.newEffectRestriction();
m1192effectRestriction_.setForbidTargetUsingItem(false);
m1192effectRestriction_.setChoiceRestriction(MoveChoiceRestrictionType.FORCE);
m1192effectRestriction_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1192effectRestriction_.setFail(V_PAS_PP_ATTAQUE_CIBLE+OO+V_PAS_UTILIS_ATTAQUE_CIBLE+OO+V_CIBLE_EFFET+SE+I_ENCORE+OO+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_COPIE+OS+I_ENCORE+OS+I_GRIBOUILLE+OS+I_LUTTE+OS+I_MIMIQUE+OS+I_MORPHING+RB+RP+OE+R_1);
m1192custListEffect_.add(m1192effectRestriction_);
m1192statusMoveData_.setEffects(m1192custListEffect_);
m1192statusMoveData_.setRankIncrementNbRound((short)62);
m1192statusMoveData_.setStoppableMoveSolo(true);
m1192statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1192statusMoveData_;
}
static MoveData m224(){
DamagingMoveData m1193damagingMoveData_ = Instances.newDamagingMoveData();
m1193damagingMoveData_.setCategory(I_PHYSIQUE);
m1193damagingMoveData_.setDirect(true);
m1193damagingMoveData_.setStoppableMoveKoSingle(true);
m1193damagingMoveData_.setPp((short)10);
StringList m1193stringList_=new StringList(new CollCapacity(1));
m1193stringList_.add(I_PLANTE);
m1193damagingMoveData_.setTypes(m1193stringList_);
m1193stringList_=new StringList(new CollCapacity(1));
m1193stringList_.add(I_PLANTE);
m1193damagingMoveData_.setBoostedTypes(m1193stringList_);
m1193damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1193custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1193effectDamage_=Instances.newEffectDamage();
m1193effectDamage_.setPower(R_75);
m1193effectDamage_.setUserAttack(true);
m1193effectDamage_.setStatisAtt(Statistic.ATTACK);
m1193effectDamage_.setTargetDefense(true);
m1193effectDamage_.setStatisDef(Statistic.DEFENSE);
m1193effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1193effectDamage_.setFail(ES);
m1193custListEffect_.add(m1193effectDamage_);
EffectDamageRate m1193effectDamageRate_=Instances.newEffectDamageRate();
m1193effectDamageRate_.setRateDamage(Rate.newRate(R_1_2));
m1193effectDamageRate_.setTargetChoice(TargetChoice.LANCEUR);
m1193effectDamageRate_.setFail(ES);
Ints m1193ints_=new Ints(new CollCapacity(1));
m1193ints_.add(0);
m1193effectDamageRate_.setRequiredSuccessfulEffects(m1193ints_);
m1193custListEffect_.add(m1193effectDamageRate_);
m1193damagingMoveData_.setEffects(m1193custListEffect_);
m1193damagingMoveData_.setStoppableMoveSolo(true);
m1193damagingMoveData_.setStoppableMoveMulti(true);
m1193damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1193damagingMoveData_;
}
}
