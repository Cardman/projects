package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.moves.*;
import aiki.fight.moves.effects.*;
import aiki.fight.moves.effects.enums.*;
import aiki.map.levels.enums.*;
import aiki.fight.moves.enums.*;
import code.maths.*;
import code.maths.montecarlo.*;
import code.util.*;
final class MvInit9 extends CstIgame{
private MvInit9(){}
static MoveData m225(){
StatusMoveData m1196statusMoveData_ = Instances.newStatusMoveData();
m1196statusMoveData_.setThievableMove(true);
m1196statusMoveData_.setPp(20);
StringList m1196stringList_=new StringList(new CollCapacity(1));
m1196stringList_.add(I_POISON);
m1196statusMoveData_.setTypes(m1196stringList_);
m1196stringList_=new StringList(new CollCapacity(1));
m1196stringList_.add(I_POISON);
m1196statusMoveData_.setBoostedTypes(m1196stringList_);
m1196statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1196custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m1196effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1196enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(3));
m1196enumMapStatisticByte_.addEntry(Statistic.ACCURACY,1L);
m1196enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m1196enumMapStatisticByte_.addEntry(Statistic.DEFENSE,1L);
m1196effectStatistic_.setStatisVarRank(m1196enumMapStatisticByte_);
m1196effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1196effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m1196effectStatistic_.setFail(ES);
m1196custListEffect_.add(m1196effectStatistic_);
m1196statusMoveData_.setEffects(m1196custListEffect_);
m1196statusMoveData_.setStoppableMoveMulti(true);
m1196statusMoveData_.setIgnVarAccurUserNeg(true);
m1196statusMoveData_.setIgnVarEvasTargetPos(true);
m1196statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1196statusMoveData_;
}
static MoveData m226(){
StatusMoveData m1197statusMoveData_ = Instances.newStatusMoveData();
m1197statusMoveData_.setCounterableMove(true);
m1197statusMoveData_.setPp(20);
StringList m1197stringList_=new StringList(new CollCapacity(1));
m1197stringList_.add(I_NORMAL);
m1197statusMoveData_.setTypes(m1197stringList_);
m1197stringList_=new StringList(new CollCapacity(1));
m1197stringList_.add(I_NORMAL);
m1197statusMoveData_.setBoostedTypes(m1197stringList_);
m1197statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1197custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectRestriction m1197effectRestriction_=Instances.newEffectRestriction();
m1197effectRestriction_.setForbidTargetUsingItem(false);
m1197effectRestriction_.setChoiceRestriction(MoveChoiceRestrictionType.FORBIDDEN);
m1197effectRestriction_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1197effectRestriction_.setFail(V_PAS_PP_ATTAQUE_CIBLE+OO+V_PAS_UTILIS_ATTAQUE_CIBLE+OO+V_CIBLE_EFFET+SE+I_ENTRAVE);
m1197custListEffect_.add(m1197effectRestriction_);
m1197statusMoveData_.setEffects(m1197custListEffect_);
m1197statusMoveData_.setRankIncrementNbRound(22);
m1197statusMoveData_.setStoppableMoveSolo(true);
m1197statusMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1197statusMoveData_;
}
static MoveData m227(){
DamagingMoveData m1198damagingMoveData_ = Instances.newDamagingMoveData();
m1198damagingMoveData_.setCategory(I_PHYSIQUE);
m1198damagingMoveData_.setDirect(true);
m1198damagingMoveData_.setStoppableMoveKoSingle(true);
m1198damagingMoveData_.setPp(15);
StringList m1198stringList_=new StringList(new CollCapacity(1));
m1198stringList_.add(I_VOL);
m1198damagingMoveData_.setTypes(m1198stringList_);
m1198stringList_=new StringList(new CollCapacity(1));
m1198stringList_.add(I_VOL);
m1198damagingMoveData_.setBoostedTypes(m1198stringList_);
m1198damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m1198custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1198effectDamage_=newEffectDamage();
m1198effectDamage_.setPower(R_90);
m1198effectDamage_.setUserAttack(true);
m1198effectDamage_.setStatisAtt(Statistic.ATTACK);
m1198effectDamage_.setTargetDefense(true);
m1198effectDamage_.setStatisDef(Statistic.DEFENSE);
m1198effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1198effectDamage_.setFail(ES);
m1198custListEffect_.add(m1198effectDamage_);
m1198damagingMoveData_.setEffects(m1198custListEffect_);
m1198damagingMoveData_.setNbPrepaRound(1);
m1198damagingMoveData_.setDisappearBeforeUse(true);
m1198damagingMoveData_.setStoppableMoveSolo(true);
m1198damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1198damagingMoveData_;
}
static MoveData m228(){
DamagingMoveData m1199damagingMoveData_ = Instances.newDamagingMoveData();
m1199damagingMoveData_.setCategory(I_SPECIALE);
m1199damagingMoveData_.setStoppableMoveKoSingle(true);
m1199damagingMoveData_.setPp(10);
StringList m1199stringList_=new StringList(new CollCapacity(1));
m1199stringList_.add(I_GLACE);
m1199damagingMoveData_.setTypes(m1199stringList_);
m1199stringList_=new StringList(new CollCapacity(1));
m1199stringList_.add(I_GLACE);
m1199damagingMoveData_.setBoostedTypes(m1199stringList_);
m1199damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m1199custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1199effectDamage_=newEffectDamage();
m1199effectDamage_.setPower(R_65);
m1199effectDamage_.setUserAttack(true);
m1199effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1199effectDamage_.setTargetDefense(true);
m1199effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1199effectDamage_.setTargetChoice(TargetChoice.TOUS_ADV);
m1199effectDamage_.setFail(ES);
m1199custListEffect_.add(m1199effectDamage_);
EffectStatistic m1199effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1199enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1199enumMapStatisticByte_.addEntry(Statistic.SPEED,-1L);
m1199effectStatistic_.setStatisVarRank(m1199enumMapStatisticByte_);
IdMap<Statistic,String> m1199enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1199enumMapStatisticString_.addEntry(Statistic.SPEED,V_CIBLE_CLONE+GT+R_0);
m1199effectStatistic_.setLocalFailStatis(m1199enumMapStatisticString_);
m1199effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1199effectStatistic_.setTargetChoice(TargetChoice.TOUS_ADV);
m1199effectStatistic_.setFail(ES);
Ints m1199ints_=new Ints(new CollCapacity(1));
m1199ints_.add(0);
m1199effectStatistic_.setRequiredSuccessfulEffects(m1199ints_);
m1199custListEffect_.add(m1199effectStatistic_);
m1199damagingMoveData_.setEffects(m1199custListEffect_);
m1199damagingMoveData_.setStoppableMoveSolo(true);
m1199damagingMoveData_.setStoppableMoveMulti(true);
m1199damagingMoveData_.setTargetChoice(TargetChoice.TOUS_ADV);
return m1199damagingMoveData_;
}
static MoveData m229(){
DamagingMoveData m1200damagingMoveData_ = Instances.newDamagingMoveData();
m1200damagingMoveData_.setCategory(I_SPECIALE);
m1200damagingMoveData_.setStoppableMoveKoSingle(true);
m1200damagingMoveData_.setPp(10);
StringList m1200stringList_=new StringList(new CollCapacity(1));
m1200stringList_.add(I_POISON);
m1200damagingMoveData_.setTypes(m1200stringList_);
m1200stringList_=new StringList(new CollCapacity(1));
m1200stringList_.add(I_POISON);
m1200damagingMoveData_.setBoostedTypes(m1200stringList_);
m1200damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1200custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1200effectDamage_=newEffectDamage();
m1200effectDamage_.setPower(R_120);
m1200effectDamage_.setUserAttack(true);
m1200effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1200effectDamage_.setTargetDefense(true);
m1200effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1200effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1200effectDamage_.setFail(ES);
m1200custListEffect_.add(m1200effectDamage_);
m1200damagingMoveData_.setEffects(m1200custListEffect_);
m1200damagingMoveData_.setStoppableMoveSolo(true);
m1200damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1200damagingMoveData_;
}
static MoveData m230(){
DamagingMoveData m1201damagingMoveData_ = Instances.newDamagingMoveData();
m1201damagingMoveData_.setCategory(I_SPECIALE);
m1201damagingMoveData_.setStoppableMoveKoSingle(true);
m1201damagingMoveData_.setPp(5);
StringList m1201stringList_=new StringList(new CollCapacity(1));
m1201stringList_.add(I_FEU);
m1201damagingMoveData_.setTypes(m1201stringList_);
m1201stringList_=new StringList(new CollCapacity(1));
m1201stringList_.add(I_FEU);
m1201damagingMoveData_.setBoostedTypes(m1201stringList_);
m1201damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1201custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1201effectDamage_=newEffectDamage();
m1201effectDamage_.setPower(R_150+OM+A_DIV+LP+V_LANCEUR_PV_RESTANTS+OC+V_LANCEUR_PV_MAX+RP);
m1201effectDamage_.setUserAttack(true);
m1201effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1201effectDamage_.setTargetDefense(true);
m1201effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1201effectDamage_.setTargetChoice(TargetChoice.ADJ_ADV);
m1201effectDamage_.setFail(ES);
m1201custListEffect_.add(m1201effectDamage_);
m1201damagingMoveData_.setEffects(m1201custListEffect_);
m1201damagingMoveData_.setStoppableMoveSolo(true);
m1201damagingMoveData_.setStoppableMoveMulti(true);
m1201damagingMoveData_.setTargetChoice(TargetChoice.ADJ_ADV);
return m1201damagingMoveData_;
}
static MoveData m231(){
DamagingMoveData m1202damagingMoveData_ = Instances.newDamagingMoveData();
m1202damagingMoveData_.setCategory(I_PHYSIQUE);
m1202damagingMoveData_.setDirect(true);
m1202damagingMoveData_.setStoppableMoveKoSingle(true);
m1202damagingMoveData_.setPp(20);
StringList m1202stringList_=new StringList(new CollCapacity(1));
m1202stringList_.add(I_NORMAL);
m1202damagingMoveData_.setTypes(m1202stringList_);
m1202stringList_=new StringList(new CollCapacity(1));
m1202stringList_.add(I_NORMAL);
m1202damagingMoveData_.setBoostedTypes(m1202stringList_);
m1202damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1202custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1202effectDamage_=newEffectDamage();
m1202effectDamage_.setPower(R_90);
m1202effectDamage_.setUserAttack(true);
m1202effectDamage_.setStatisAtt(Statistic.ATTACK);
m1202effectDamage_.setTargetDefense(true);
m1202effectDamage_.setStatisDef(Statistic.DEFENSE);
m1202effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1202effectDamage_.setFail(ES);
m1202custListEffect_.add(m1202effectDamage_);
EffectStatus m1202effectStatus_=Instances.newEffectStatus();
MonteCarloString m1202monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1202monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_4));
m1202monteCarloString_.addQuickEvent(I_CONFUSION,LgInt.newLgInt(R_1));
m1202effectStatus_.setLawStatus(m1202monteCarloString_);
StringMap<String> m1202stringMapString_=new StringMap<String>(new CollCapacity(1));
m1202stringMapString_.addEntry(I_CONFUSION,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_CONFUSION+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1202effectStatus_.setLocalFailStatus(m1202stringMapString_);
m1202effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1202effectStatus_.setFail(ES);
Ints m1202ints_=new Ints(new CollCapacity(1));
m1202ints_.add(0);
m1202effectStatus_.setRequiredSuccessfulEffects(m1202ints_);
m1202custListEffect_.add(m1202effectStatus_);
m1202damagingMoveData_.setEffects(m1202custListEffect_);
m1202damagingMoveData_.setStoppableMoveSolo(true);
m1202damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1202damagingMoveData_;
}
static MoveData m232(){
DamagingMoveData m1203damagingMoveData_ = Instances.newDamagingMoveData();
m1203damagingMoveData_.setCategory(I_SPECIALE);
m1203damagingMoveData_.setDirect(true);
m1203damagingMoveData_.setStoppableMoveKoSingle(true);
m1203damagingMoveData_.setPp(5);
StringList m1203stringList_=new StringList(new CollCapacity(1));
m1203stringList_.add(I_NORMAL);
m1203damagingMoveData_.setTypes(m1203stringList_);
m1203stringList_=new StringList(new CollCapacity(1));
m1203stringList_.add(I_NORMAL);
m1203damagingMoveData_.setBoostedTypes(m1203stringList_);
m1203damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1203custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1203effectDamage_=newEffectDamage();
m1203effectDamage_.setPower(R_1+OP+R_120+OM+A_DIV+LP+V_CIBLE_PV_RESTANTS+OC+V_CIBLE_PV_MAX+RP);
m1203effectDamage_.setUserAttack(true);
m1203effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1203effectDamage_.setTargetDefense(true);
m1203effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1203effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1203effectDamage_.setFail(ES);
m1203custListEffect_.add(m1203effectDamage_);
m1203damagingMoveData_.setEffects(m1203custListEffect_);
m1203damagingMoveData_.setStoppableMoveSolo(true);
m1203damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1203damagingMoveData_;
}
static MoveData m233(){
DamagingMoveData m1204damagingMoveData_ = Instances.newDamagingMoveData();
m1204damagingMoveData_.setCategory(I_PHYSIQUE);
m1204damagingMoveData_.setDirect(true);
m1204damagingMoveData_.setStoppableMoveKoSingle(true);
m1204damagingMoveData_.setPp(20);
StringList m1204stringList_=new StringList(new CollCapacity(1));
m1204stringList_.add(I_ELECTRIQUE);
m1204damagingMoveData_.setTypes(m1204stringList_);
m1204stringList_=new StringList(new CollCapacity(1));
m1204stringList_.add(I_ELECTRIQUE);
m1204damagingMoveData_.setBoostedTypes(m1204stringList_);
m1204damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1204custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1204effectDamage_=newEffectDamage();
m1204effectDamage_.setPower(R_65);
m1204effectDamage_.setUserAttack(true);
m1204effectDamage_.setStatisAtt(Statistic.ATTACK);
m1204effectDamage_.setTargetDefense(true);
m1204effectDamage_.setStatisDef(Statistic.DEFENSE);
m1204effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1204effectDamage_.setFail(ES);
m1204custListEffect_.add(m1204effectDamage_);
EffectStatus m1204effectStatus_=Instances.newEffectStatus();
MonteCarloString m1204monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1204monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1204monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_3));
m1204effectStatus_.setLawStatus(m1204monteCarloString_);
StringMap<String> m1204stringMapString_=new StringMap<String>(new CollCapacity(1));
m1204stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1204effectStatus_.setLocalFailStatus(m1204stringMapString_);
m1204effectStatus_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1204effectStatus_.setFail(ES);
Ints m1204ints_=new Ints(new CollCapacity(1));
m1204ints_.add(0);
m1204effectStatus_.setRequiredSuccessfulEffects(m1204ints_);
m1204custListEffect_.add(m1204effectStatus_);
m1204damagingMoveData_.setEffects(m1204custListEffect_);
m1204damagingMoveData_.setStoppableMoveSolo(true);
m1204damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1204damagingMoveData_;
}
static MoveData m234(){
DamagingMoveData m1205damagingMoveData_ = Instances.newDamagingMoveData();
m1205damagingMoveData_.setCategory(I_PHYSIQUE);
m1205damagingMoveData_.setDirect(true);
m1205damagingMoveData_.setStoppableMoveKoSingle(true);
m1205damagingMoveData_.setPp(15);
StringList m1205stringList_=new StringList(new CollCapacity(1));
m1205stringList_.add(I_SPECTRE);
m1205damagingMoveData_.setTypes(m1205stringList_);
m1205stringList_=new StringList(new CollCapacity(1));
m1205stringList_.add(I_SPECTRE);
m1205damagingMoveData_.setBoostedTypes(m1205stringList_);
m1205damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1205custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1205effectDamage_=newEffectDamage();
m1205effectDamage_.setPower(R_30);
m1205effectDamage_.setUserAttack(true);
m1205effectDamage_.setStatisAtt(Statistic.ATTACK);
m1205effectDamage_.setTargetDefense(true);
m1205effectDamage_.setStatisDef(Statistic.DEFENSE);
m1205effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1205effectDamage_.setFail(ES);
m1205custListEffect_.add(m1205effectDamage_);
EffectStatus m1205effectStatus_=Instances.newEffectStatus();
MonteCarloString m1205monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1205monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1205monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_3));
m1205effectStatus_.setLawStatus(m1205monteCarloString_);
StringMap<String> m1205stringMapString_=new StringMap<String>(new CollCapacity(1));
m1205stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m1205effectStatus_.setLocalFailStatus(m1205stringMapString_);
m1205effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1205effectStatus_.setFail(ES);
Ints m1205ints_=new Ints(new CollCapacity(1));
m1205ints_.add(0);
m1205effectStatus_.setRequiredSuccessfulEffects(m1205ints_);
m1205custListEffect_.add(m1205effectStatus_);
m1205damagingMoveData_.setEffects(m1205custListEffect_);
m1205damagingMoveData_.setStoppableMoveSolo(true);
m1205damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1205damagingMoveData_;
}
static MoveData m235(){
DamagingMoveData m1206damagingMoveData_ = Instances.newDamagingMoveData();
m1206damagingMoveData_.setCategory(I_PHYSIQUE);
m1206damagingMoveData_.setDirect(true);
m1206damagingMoveData_.setStoppableMoveKoSingle(true);
m1206damagingMoveData_.setPp(10);
StringList m1206stringList_=new StringList(new CollCapacity(1));
m1206stringList_.add(I_ACIER);
m1206damagingMoveData_.setTypes(m1206stringList_);
m1206stringList_=new StringList(new CollCapacity(1));
m1206stringList_.add(I_ACIER);
m1206damagingMoveData_.setBoostedTypes(m1206stringList_);
m1206damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1206custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1206effectDamage_=newEffectDamage();
m1206effectDamage_.setPower(LP+A_MIN+LP+A_MAX+LP+A_ENT+LP+A_DIV+LP+V_LANCEUR_TAILLE+OC+V_CIBLE_TAILLE+RP+RP+OC+R_1+RP+OC+R_5+RP+OP+R_1+RP+OM+R_40);
m1206effectDamage_.setUserAttack(true);
m1206effectDamage_.setStatisAtt(Statistic.ATTACK);
m1206effectDamage_.setTargetDefense(true);
m1206effectDamage_.setStatisDef(Statistic.DEFENSE);
m1206effectDamage_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
m1206effectDamage_.setFail(ES);
m1206custListEffect_.add(m1206effectDamage_);
m1206damagingMoveData_.setEffects(m1206custListEffect_);
m1206damagingMoveData_.setStoppableMoveSolo(true);
m1206damagingMoveData_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
return m1206damagingMoveData_;
}
static MoveData m236(){
DamagingMoveData m1207damagingMoveData_ = Instances.newDamagingMoveData();
m1207damagingMoveData_.setCategory(I_PHYSIQUE);
m1207damagingMoveData_.setDirect(true);
m1207damagingMoveData_.setStoppableMoveKoSingle(true);
m1207damagingMoveData_.setPp(35);
StringList m1207stringList_=new StringList(new CollCapacity(1));
m1207stringList_.add(I_NORMAL);
m1207damagingMoveData_.setTypes(m1207stringList_);
m1207stringList_=new StringList(new CollCapacity(1));
m1207stringList_.add(I_NORMAL);
m1207damagingMoveData_.setBoostedTypes(m1207stringList_);
m1207damagingMoveData_.setAccuracy(R_17_20);
CustList<Effect> m1207custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1207effectDamage_=newEffectDamage();
m1207effectDamage_.setPower(R_15);
m1207effectDamage_.setUserAttack(true);
m1207effectDamage_.setStatisAtt(Statistic.ATTACK);
m1207effectDamage_.setTargetDefense(true);
m1207effectDamage_.setStatisDef(Statistic.DEFENSE);
m1207effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1207effectDamage_.setFail(ES);
m1207custListEffect_.add(m1207effectDamage_);
EffectEndRoundSingleRelation m1207effectEndRoundSingleRelation_=Instances.newEffectEndRoundSingleRelation();
LongMap<Rate> m1207longMapRate_=new LongMap<Rate>(new CollCapacity(5));
m1207longMapRate_.addEntry(1L,Rate.newRate(R_1_16));
m1207longMapRate_.addEntry(2L,Rate.newRate(R_1_16));
m1207longMapRate_.addEntry(3L,Rate.newRate(R_1_16));
m1207longMapRate_.addEntry(4L,Rate.newRate(R_1_16));
m1207longMapRate_.addEntry(5L,Rate.newRate(R_1_16));
m1207effectEndRoundSingleRelation_.setRateDamageFunctionOfNbRounds(m1207longMapRate_);
MonteCarloNumber m1207monteCarloNumber_=new MonteCarloNumber(new CollCapacity(4));
m1207monteCarloNumber_.addQuickEvent(Rate.newRate(R_3),LgInt.newLgInt(R_3));
m1207monteCarloNumber_.addQuickEvent(Rate.newRate(R_2),LgInt.newLgInt(R_3));
m1207monteCarloNumber_.addQuickEvent(Rate.newRate(R_4),LgInt.newLgInt(R_1));
m1207monteCarloNumber_.addQuickEvent(Rate.newRate(R_5),LgInt.newLgInt(R_1));
m1207effectEndRoundSingleRelation_.setLawForEnablingEffect(m1207monteCarloNumber_);
m1207effectEndRoundSingleRelation_.setFailEndRound(V_CIBLE_CLONE+GT+R_0);
m1207effectEndRoundSingleRelation_.setEndRoundRank(49);
m1207effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_MULT);
m1207effectEndRoundSingleRelation_.setFail(V_CIBLE_CLONE+GT+R_0);
Ints m1207ints_=new Ints(new CollCapacity(1));
m1207ints_.add(0);
m1207effectEndRoundSingleRelation_.setRequiredSuccessfulEffects(m1207ints_);
m1207custListEffect_.add(m1207effectEndRoundSingleRelation_);
m1207damagingMoveData_.setEffects(m1207custListEffect_);
m1207damagingMoveData_.setStoppableMoveSolo(true);
m1207damagingMoveData_.setStoppableMoveMulti(true);
m1207damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1207damagingMoveData_;
}
static MoveData m237(){
DamagingMoveData m1208damagingMoveData_ = Instances.newDamagingMoveData();
m1208damagingMoveData_.setCategory(I_PHYSIQUE);
m1208damagingMoveData_.setDirect(true);
m1208damagingMoveData_.setStoppableMoveKoSingle(true);
m1208damagingMoveData_.setPp(15);
StringList m1208stringList_=new StringList(new CollCapacity(1));
m1208stringList_.add(I_NORMAL);
m1208damagingMoveData_.setTypes(m1208stringList_);
m1208stringList_=new StringList(new CollCapacity(1));
m1208stringList_.add(I_NORMAL);
m1208damagingMoveData_.setBoostedTypes(m1208stringList_);
m1208damagingMoveData_.setAccuracy(R_9_10);
CustList<Effect> m1208custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1208effectDamage_=newEffectDamage();
m1208effectDamage_.setPower(R_60);
m1208effectDamage_.setUserAttack(true);
m1208effectDamage_.setStatisAtt(Statistic.ATTACK);
m1208effectDamage_.setTargetDefense(true);
m1208effectDamage_.setStatisDef(Statistic.DEFENSE);
m1208effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1208effectDamage_.setFail(ES);
m1208custListEffect_.add(m1208effectDamage_);
m1208damagingMoveData_.setEffects(m1208custListEffect_);
m1208damagingMoveData_.setStoppableMoveSolo(true);
m1208damagingMoveData_.setStoppableMoveMulti(true);
m1208damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1208damagingMoveData_;
}
static MoveData m238(){
DamagingMoveData m1209damagingMoveData_ = Instances.newDamagingMoveData();
m1209damagingMoveData_.setCategory(I_SPECIALE);
m1209damagingMoveData_.setStoppableMoveKoSingle(true);
m1209damagingMoveData_.setPp(5);
StringList m1209stringList_=new StringList(new CollCapacity(1));
m1209stringList_.add(I_COMBAT);
m1209damagingMoveData_.setTypes(m1209stringList_);
m1209stringList_=new StringList(new CollCapacity(1));
m1209stringList_.add(I_COMBAT);
m1209damagingMoveData_.setBoostedTypes(m1209stringList_);
m1209damagingMoveData_.setAccuracy(R_7_10);
CustList<Effect> m1209custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1209effectDamage_=newEffectDamage();
m1209effectDamage_.setPower(R_120);
m1209effectDamage_.setUserAttack(true);
m1209effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1209effectDamage_.setTargetDefense(true);
m1209effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1209effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1209effectDamage_.setFail(ES);
m1209custListEffect_.add(m1209effectDamage_);
EffectStatistic m1209effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1209enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1209enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,-1L);
m1209effectStatistic_.setStatisVarRank(m1209enumMapStatisticByte_);
IdMap<Statistic,String> m1209enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1209enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_CIBLE_CLONE+GT+R_0);
m1209effectStatistic_.setLocalFailStatis(m1209enumMapStatisticString_);
m1209effectStatistic_.setEvtRate(Rate.newRate(R_1_10));
m1209effectStatistic_.setTargetChoice(TargetChoice.ADJ_MULT);
m1209effectStatistic_.setFail(ES);
Ints m1209ints_=new Ints(new CollCapacity(1));
m1209ints_.add(0);
m1209effectStatistic_.setRequiredSuccessfulEffects(m1209ints_);
m1209custListEffect_.add(m1209effectStatistic_);
m1209damagingMoveData_.setEffects(m1209custListEffect_);
m1209damagingMoveData_.setStoppableMoveSolo(true);
m1209damagingMoveData_.setStoppableMoveMulti(true);
m1209damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1209damagingMoveData_;
}
static MoveData m239(){
DamagingMoveData m1210damagingMoveData_ = Instances.newDamagingMoveData();
m1210damagingMoveData_.setCategory(I_SPECIALE);
m1210damagingMoveData_.setStoppableMoveKoSingle(true);
m1210damagingMoveData_.setPp(10);
StringList m1210stringList_=new StringList(new CollCapacity(1));
m1210stringList_.add(I_TENEBRE);
m1210damagingMoveData_.setTypes(m1210stringList_);
m1210stringList_=new StringList(new CollCapacity(1));
m1210stringList_.add(I_TENEBRE);
m1210damagingMoveData_.setBoostedTypes(m1210stringList_);
m1210damagingMoveData_.setAccuracy(R_19_20);
CustList<Effect> m1210custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1210effectDamage_=newEffectDamage();
m1210effectDamage_.setPower(R_85);
m1210effectDamage_.setUserAttack(true);
m1210effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1210effectDamage_.setTargetDefense(true);
m1210effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1210effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1210effectDamage_.setFail(ES);
m1210custListEffect_.add(m1210effectDamage_);
EffectStatistic m1210effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1210enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(1));
m1210enumMapStatisticByte_.addEntry(Statistic.ACCURACY,-1L);
m1210effectStatistic_.setStatisVarRank(m1210enumMapStatisticByte_);
IdMap<Statistic,String> m1210enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(1));
m1210enumMapStatisticString_.addEntry(Statistic.ACCURACY,V_CIBLE_CLONE+GT+R_0);
m1210effectStatistic_.setLocalFailStatis(m1210enumMapStatisticString_);
m1210effectStatistic_.setEvtRate(Rate.newRate(R_2_5));
m1210effectStatistic_.setTargetChoice(TargetChoice.ADJ_MULT);
m1210effectStatistic_.setFail(ES);
Ints m1210ints_=new Ints(new CollCapacity(1));
m1210ints_.add(0);
m1210effectStatistic_.setRequiredSuccessfulEffects(m1210ints_);
m1210custListEffect_.add(m1210effectStatistic_);
m1210damagingMoveData_.setEffects(m1210custListEffect_);
m1210damagingMoveData_.setStoppableMoveSolo(true);
m1210damagingMoveData_.setStoppableMoveMulti(true);
m1210damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1210damagingMoveData_;
}
static MoveData m240(){
DamagingMoveData m1211damagingMoveData_ = Instances.newDamagingMoveData();
m1211damagingMoveData_.setCategory(I_PHYSIQUE);
m1211damagingMoveData_.setStoppableMoveKoSingle(true);
m1211damagingMoveData_.setPp(5);
StringList m1211stringList_=new StringList(new CollCapacity(1));
m1211stringList_.add(I_NORMAL);
m1211damagingMoveData_.setTypes(m1211stringList_);
m1211stringList_=new StringList(new CollCapacity(1));
m1211stringList_.add(I_NORMAL);
m1211damagingMoveData_.setBoostedTypes(m1211stringList_);
m1211damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1211custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1211effectDamage_=newEffectDamage();
m1211effectDamage_.setPower(R_250);
m1211effectDamage_.setUserAttack(true);
m1211effectDamage_.setStatisAtt(Statistic.ATTACK);
m1211effectDamage_.setTargetDefense(true);
m1211effectDamage_.setStatisDef(Statistic.DEFENSE);
m1211effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1211effectDamage_.setFail(ES);
m1211custListEffect_.add(m1211effectDamage_);
EffectRemainedHpRate m1211effectRemainedHpRate_=Instances.newEffectRemainedHpRate();
m1211effectRemainedHpRate_.setRateHp(Rate.newRate(OD+R_1));
m1211effectRemainedHpRate_.setTargetChoice(TargetChoice.LANCEUR);
m1211effectRemainedHpRate_.setFail(ES);
Ints m1211ints_=new Ints(new CollCapacity(1));
m1211ints_.add(0);
m1211effectRemainedHpRate_.setRequiredSuccessfulEffects(m1211ints_);
m1211custListEffect_.add(m1211effectRemainedHpRate_);
m1211damagingMoveData_.setEffects(m1211custListEffect_);
m1211damagingMoveData_.setStoppableMoveSolo(true);
m1211damagingMoveData_.setStoppableMoveMulti(true);
m1211damagingMoveData_.setSecEffectIfNoDamage(true);
m1211damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1211damagingMoveData_;
}
static MoveData m241(){
DamagingMoveData m1212damagingMoveData_ = Instances.newDamagingMoveData();
m1212damagingMoveData_.setCategory(I_SPECIALE);
m1212damagingMoveData_.setStoppableMoveKoSingle(true);
m1212damagingMoveData_.setPp(30);
StringList m1212stringList_=new StringList(new CollCapacity(1));
m1212stringList_.add(I_PSY);
m1212damagingMoveData_.setTypes(m1212stringList_);
m1212stringList_=new StringList(new CollCapacity(1));
m1212stringList_.add(I_PSY);
m1212damagingMoveData_.setBoostedTypes(m1212stringList_);
m1212damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1212custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1212effectDamage_=newEffectDamage();
m1212effectDamage_.setPower(R_80);
m1212effectDamage_.setUserAttack(true);
m1212effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1212effectDamage_.setTargetDefense(true);
m1212effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1212effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1212effectDamage_.setFail(ES);
m1212custListEffect_.add(m1212effectDamage_);
EffectStatus m1212effectStatus_=Instances.newEffectStatus();
MonteCarloString m1212monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1212monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_9));
m1212monteCarloString_.addQuickEvent(I_PEUR,LgInt.newLgInt(R_1));
m1212effectStatus_.setLawStatus(m1212monteCarloString_);
StringMap<String> m1212stringMapString_=new StringMap<String>(new CollCapacity(1));
m1212stringMapString_.addEntry(I_PEUR,V_CIBLE_CLONE+GT+R_0);
m1212effectStatus_.setLocalFailStatus(m1212stringMapString_);
m1212effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1212effectStatus_.setFail(ES);
Ints m1212ints_=new Ints(new CollCapacity(1));
m1212ints_.add(0);
m1212effectStatus_.setRequiredSuccessfulEffects(m1212ints_);
m1212custListEffect_.add(m1212effectStatus_);
m1212damagingMoveData_.setEffects(m1212custListEffect_);
m1212damagingMoveData_.setStoppableMoveSolo(true);
m1212damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1212damagingMoveData_;
}
static MoveData m242(){
StatusMoveData m1213statusMoveData_ = Instances.newStatusMoveData();
m1213statusMoveData_.setThievableMove(true);
m1213statusMoveData_.setPp(15);
StringList m1213stringList_=new StringList(new CollCapacity(1));
m1213stringList_.add(I_NORMAL);
m1213statusMoveData_.setTypes(m1213stringList_);
m1213stringList_=new StringList(new CollCapacity(1));
m1213stringList_.add(I_NORMAL);
m1213statusMoveData_.setBoostedTypes(m1213stringList_);
m1213statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1213custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m1213effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1213enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(5));
m1213enumMapStatisticByte_.addEntry(Statistic.ATTACK,2L);
m1213enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,2L);
m1213enumMapStatisticByte_.addEntry(Statistic.SPECIAL_DEFENSE,-1L);
m1213enumMapStatisticByte_.addEntry(Statistic.DEFENSE,-1L);
m1213enumMapStatisticByte_.addEntry(Statistic.SPEED,2L);
m1213effectStatistic_.setStatisVarRank(m1213enumMapStatisticByte_);
IdMap<Statistic,String> m1213enumMapStatisticString_=new IdMap<Statistic,String>(new CollCapacity(2));
m1213enumMapStatisticString_.addEntry(Statistic.SPECIAL_DEFENSE,V_LANCEUR_CLONE+GT+R_0);
m1213enumMapStatisticString_.addEntry(Statistic.DEFENSE,V_LANCEUR_CLONE+GT+R_0);
m1213effectStatistic_.setLocalFailStatis(m1213enumMapStatisticString_);
m1213effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1213effectStatistic_.setTargetChoice(TargetChoice.LANCEUR);
m1213effectStatistic_.setFail(ES);
m1213custListEffect_.add(m1213effectStatistic_);
m1213statusMoveData_.setEffects(m1213custListEffect_);
m1213statusMoveData_.setStoppableMoveMulti(true);
m1213statusMoveData_.setIgnVarAccurUserNeg(true);
m1213statusMoveData_.setIgnVarEvasTargetPos(true);
m1213statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1213statusMoveData_;
}
static MoveData m243(){
StatusMoveData m1214statusMoveData_ = Instances.newStatusMoveData();
m1214statusMoveData_.setThievableMove(true);
m1214statusMoveData_.setPp(10);
StringList m1214stringList_=new StringList(new CollCapacity(1));
m1214stringList_.add(I_NORMAL);
m1214statusMoveData_.setTypes(m1214stringList_);
m1214stringList_=new StringList(new CollCapacity(1));
m1214stringList_.add(I_NORMAL);
m1214statusMoveData_.setBoostedTypes(m1214stringList_);
m1214statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1214custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectFullHpRate m1214effectFullHpRate_=Instances.newEffectFullHpRate();
m1214effectFullHpRate_.setRestoredHp(R_1_2);
m1214effectFullHpRate_.setTargetChoice(TargetChoice.LANCEUR);
m1214effectFullHpRate_.setFail(ES);
m1214custListEffect_.add(m1214effectFullHpRate_);
m1214statusMoveData_.setEffects(m1214custListEffect_);
m1214statusMoveData_.setStoppableMoveMulti(true);
m1214statusMoveData_.setIgnVarAccurUserNeg(true);
m1214statusMoveData_.setIgnVarEvasTargetPos(true);
m1214statusMoveData_.setTargetChoice(TargetChoice.LANCEUR);
return m1214statusMoveData_;
}
static MoveData m244(){
DamagingMoveData m1215damagingMoveData_ = Instances.newDamagingMoveData();
m1215damagingMoveData_.setCategory(I_PHYSIQUE);
m1215damagingMoveData_.setDirect(true);
m1215damagingMoveData_.setStoppableMoveKoSingle(true);
m1215damagingMoveData_.setPp(20);
StringList m1215stringList_=new StringList(new CollCapacity(1));
m1215stringList_.add(I_NORMAL);
m1215damagingMoveData_.setTypes(m1215stringList_);
m1215stringList_=new StringList(new CollCapacity(1));
m1215stringList_.add(I_NORMAL);
m1215damagingMoveData_.setBoostedTypes(m1215stringList_);
m1215damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1215custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1215effectDamage_=newEffectDamage();
m1215effectDamage_.setPower(R_70+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_SIMPLE_POISON+RB+RP+RP+OP+R_1+RP+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_POISON_GRAVE+RB+RP+RP+OP+R_1+RP+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_SOMMEIL+OS+I_SOMMEIL_REPOS+RB+RP+RP+OP+R_1+RP+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+OP+R_1+RP+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_GEL+RB+RP+RP+OP+R_1+RP+OM+LP+A_CARDINAL+LP+A_INTER+LP+LB+V_LANCEUR_STATUTS+RB+OC+LB+I_BRULURE+RB+RP+RP+OP+R_1+RP);
m1215effectDamage_.setUserAttack(true);
m1215effectDamage_.setStatisAtt(Statistic.ATTACK);
m1215effectDamage_.setTargetDefense(true);
m1215effectDamage_.setStatisDef(Statistic.DEFENSE);
m1215effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1215effectDamage_.setFail(ES);
m1215custListEffect_.add(m1215effectDamage_);
m1215damagingMoveData_.setEffects(m1215custListEffect_);
m1215damagingMoveData_.setStoppableMoveSolo(true);
m1215damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1215damagingMoveData_;
}
static MoveData m245(){
DamagingMoveData m1216damagingMoveData_ = Instances.newDamagingMoveData();
m1216damagingMoveData_.setCategory(I_SPECIALE);
m1216damagingMoveData_.setStoppableMoveKoSingle(true);
m1216damagingMoveData_.setPp(10);
StringList m1216stringList_=new StringList(new CollCapacity(1));
m1216stringList_.add(I_ELECTRIQUE);
m1216damagingMoveData_.setTypes(m1216stringList_);
m1216stringList_=new StringList(new CollCapacity(1));
m1216stringList_.add(I_ELECTRIQUE);
m1216damagingMoveData_.setBoostedTypes(m1216stringList_);
m1216damagingMoveData_.setAccuracy(A_DIV+LP+R_70+OP+R_10+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_GRELE+RB+RP+RP+OD+R_15+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ZENITH+RB+RP+RP+OP+R_30+OM+A_CARDINAL+LP+A_INTER+LP+LB+V_CLIMATS+RB+OC+LB+I_ORAGE+OS+I_DANSE_PLUIE+RB+RP+RP+OC+R_100+RP);
CustList<Effect> m1216custListEffect_ = new CustList<Effect>(new CollCapacity(2));
EffectDamage m1216effectDamage_=newEffectDamage();
m1216effectDamage_.setPower(R_120+OM+LP+A_CARACFERME+LP+A_INCLUSNUM+LP+LB+V_CIBLE_ATTAQUE_CHOISIE+RB+OC+LB+I_ENVOL+OS+I_REBOND+OS+I_CHUTE_LIBRE+RB+RP+OM+V_CIBLE_DISPARAIT+OC+R_1+OC+R_1+RP+OP+A_CARACFERME+LP+V_CIBLE_DISPARAIT+OC+R_0+OC+R_0+RP+RP);
m1216effectDamage_.setUserAttack(true);
m1216effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1216effectDamage_.setTargetDefense(true);
m1216effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1216effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1216effectDamage_.setFail(ES);
m1216custListEffect_.add(m1216effectDamage_);
EffectStatus m1216effectStatus_=Instances.newEffectStatus();
MonteCarloString m1216monteCarloString_=new MonteCarloString(new CollCapacity(2));
m1216monteCarloString_.addQuickEvent(ES,LgInt.newLgInt(R_7));
m1216monteCarloString_.addQuickEvent(I_PARALYSIE,LgInt.newLgInt(R_3));
m1216effectStatus_.setLawStatus(m1216monteCarloString_);
StringMap<String> m1216stringMapString_=new StringMap<String>(new CollCapacity(1));
m1216stringMapString_.addEntry(I_PARALYSIE,A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_STATUTS+RB+OC+LB+I_PARALYSIE+RB+RP+RP+GT+R_0+OO+V_CIBLE_CLONE+GT+R_0);
m1216effectStatus_.setLocalFailStatus(m1216stringMapString_);
m1216effectStatus_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1216effectStatus_.setFail(ES);
Ints m1216ints_=new Ints(new CollCapacity(1));
m1216ints_.add(0);
m1216effectStatus_.setRequiredSuccessfulEffects(m1216ints_);
m1216custListEffect_.add(m1216effectStatus_);
m1216damagingMoveData_.setEffects(m1216custListEffect_);
m1216damagingMoveData_.setStoppableMoveSolo(true);
m1216stringList_=new StringList(new CollCapacity(3));
m1216stringList_.add(I_ENVOL);
m1216stringList_.add(I_REBOND);
m1216stringList_.add(I_CHUTE_LIBRE);
m1216damagingMoveData_.setAchieveDisappearedPkUsingMove(m1216stringList_);
m1216damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1216damagingMoveData_;
}
static MoveData m246(){
DamagingMoveData m1217damagingMoveData_ = Instances.newDamagingMoveData();
m1217damagingMoveData_.setCategory(I_PHYSIQUE);
m1217damagingMoveData_.setDirect(true);
m1217damagingMoveData_.setCannotKo(true);
m1217damagingMoveData_.setStoppableMoveKoSingle(true);
m1217damagingMoveData_.setPp(40);
StringList m1217stringList_=new StringList(new CollCapacity(1));
m1217stringList_.add(I_NORMAL);
m1217damagingMoveData_.setTypes(m1217stringList_);
m1217stringList_=new StringList(new CollCapacity(1));
m1217stringList_.add(I_NORMAL);
m1217damagingMoveData_.setBoostedTypes(m1217stringList_);
m1217damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1217custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1217effectDamage_=newEffectDamage();
m1217effectDamage_.setPower(R_40);
m1217effectDamage_.setUserAttack(true);
m1217effectDamage_.setStatisAtt(Statistic.ATTACK);
m1217effectDamage_.setTargetDefense(true);
m1217effectDamage_.setStatisDef(Statistic.DEFENSE);
m1217effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1217effectDamage_.setFail(ES);
m1217custListEffect_.add(m1217effectDamage_);
m1217damagingMoveData_.setEffects(m1217custListEffect_);
m1217damagingMoveData_.setStoppableMoveSolo(true);
m1217damagingMoveData_.setStoppableMoveMulti(true);
m1217damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1217damagingMoveData_;
}
static MoveData m247(){
DamagingMoveData m1218damagingMoveData_ = Instances.newDamagingMoveData();
m1218damagingMoveData_.setCategory(I_PHYSIQUE);
m1218damagingMoveData_.setDirect(true);
m1218damagingMoveData_.setStoppableMoveKoSingle(true);
m1218damagingMoveData_.setPp(20);
StringList m1218stringList_=new StringList(new CollCapacity(1));
m1218stringList_.add(I_TENEBRE);
m1218damagingMoveData_.setTypes(m1218stringList_);
m1218stringList_=new StringList(new CollCapacity(1));
m1218stringList_.add(I_TENEBRE);
m1218damagingMoveData_.setBoostedTypes(m1218stringList_);
m1218damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1218custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1218effectDamage_=newEffectDamage();
m1218effectDamage_.setPower(R_60);
m1218effectDamage_.setUserAttack(true);
m1218effectDamage_.setStatisAtt(Statistic.ATTACK);
m1218effectDamage_.setTargetDefense(true);
m1218effectDamage_.setStatisDef(Statistic.DEFENSE);
m1218effectDamage_.setTargetChoice(TargetChoice.ADJ_MULT);
m1218effectDamage_.setFail(ES);
m1218custListEffect_.add(m1218effectDamage_);
m1218damagingMoveData_.setEffects(m1218custListEffect_);
m1218damagingMoveData_.setStoppableMoveSolo(true);
m1218damagingMoveData_.setStoppableMoveMulti(true);
m1218damagingMoveData_.setIgnVarAccurUserNeg(true);
m1218damagingMoveData_.setIgnVarEvasTargetPos(true);
m1218damagingMoveData_.setTargetChoice(TargetChoice.ADJ_MULT);
return m1218damagingMoveData_;
}
static MoveData m248(){
StatusMoveData m1219statusMoveData_ = Instances.newStatusMoveData();
m1219statusMoveData_.setPp(10);
StringList m1219stringList_=new StringList(new CollCapacity(1));
m1219stringList_.add(I_SOL);
m1219statusMoveData_.setTypes(m1219stringList_);
m1219stringList_=new StringList(new CollCapacity(1));
m1219stringList_.add(I_SOL);
m1219statusMoveData_.setBoostedTypes(m1219stringList_);
m1219statusMoveData_.setAccuracy(R_1);
CustList<Effect> m1219custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectStatistic m1219effectStatistic_=Instances.newEffectStatistic();
IdMap<Statistic,Long> m1219enumMapStatisticByte_=new IdMap<Statistic,Long>(new CollCapacity(2));
m1219enumMapStatisticByte_.addEntry(Statistic.ATTACK,1L);
m1219enumMapStatisticByte_.addEntry(Statistic.SPECIAL_ATTACK,1L);
m1219effectStatistic_.setStatisVarRank(m1219enumMapStatisticByte_);
m1219effectStatistic_.setEvtRate(Rate.newRate(R_1));
m1219effectStatistic_.setTargetChoice(TargetChoice.GLOBALE);
m1219effectStatistic_.setFail(A_CARDINAL+LP+A_INTER+LP+LB+V_CIBLE_TYPES+RB+OC+LB+I_PLANTE+RB+RP+RP+OE+R_0);
m1219custListEffect_.add(m1219effectStatistic_);
m1219statusMoveData_.setEffects(m1219custListEffect_);
m1219statusMoveData_.setStoppableMoveMulti(true);
m1219statusMoveData_.setIgnVarAccurUserNeg(true);
m1219statusMoveData_.setIgnVarEvasTargetPos(true);
m1219statusMoveData_.setTargetChoice(TargetChoice.GLOBALE);
return m1219statusMoveData_;
}
static MoveData m249(){
DamagingMoveData m1220damagingMoveData_ = Instances.newDamagingMoveData();
m1220damagingMoveData_.setCategory(I_SPECIALE);
m1220damagingMoveData_.setStoppableMoveKoSingle(true);
m1220damagingMoveData_.setPp(20);
StringList m1220stringList_=new StringList(new CollCapacity(1));
m1220stringList_.add(I_PLANTE);
m1220damagingMoveData_.setTypes(m1220stringList_);
m1220stringList_=new StringList(new CollCapacity(1));
m1220stringList_.add(I_PLANTE);
m1220damagingMoveData_.setBoostedTypes(m1220stringList_);
m1220damagingMoveData_.setAccuracy(R_1);
CustList<Effect> m1220custListEffect_ = new CustList<Effect>(new CollCapacity(1));
EffectDamage m1220effectDamage_=newEffectDamage();
m1220effectDamage_.setPower(R_60);
m1220effectDamage_.setUserAttack(true);
m1220effectDamage_.setStatisAtt(Statistic.SPECIAL_ATTACK);
m1220effectDamage_.setTargetDefense(true);
m1220effectDamage_.setStatisDef(Statistic.SPECIAL_DEFENSE);
m1220effectDamage_.setTargetChoice(TargetChoice.ADJ_UNIQ);
m1220effectDamage_.setFail(ES);
m1220custListEffect_.add(m1220effectDamage_);
m1220damagingMoveData_.setEffects(m1220custListEffect_);
m1220damagingMoveData_.setStoppableMoveSolo(true);
m1220damagingMoveData_.setIgnVarAccurUserNeg(true);
m1220damagingMoveData_.setIgnVarEvasTargetPos(true);
m1220damagingMoveData_.setTargetChoice(TargetChoice.ADJ_UNIQ);
return m1220damagingMoveData_;
}
}
