package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.pokemon.*;
import aiki.fight.pokemon.evolution.*;
import aiki.fight.pokemon.enums.*;
import aiki.map.pokemon.enums.*;
import code.maths.*;
import code.util.*;
final class PkInit15 extends CstIgame{
private PkInit15(){}
static PokemonData p405(){
PokemonData m1429pokemonData_=Instances.newPokemonData();
m1429pokemonData_.setWeight(Rate.newRate(R_18_5));
StringList m1429stringList_=new StringList(new CollCapacity(2));
m1429stringList_.add(I_INSECTE);
m1429stringList_.add(I_VOL);
m1429pokemonData_.setTypes(m1429stringList_);
EnumMap<Statistic,StatBaseEv> m1429enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)60,(short)0));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)80,(short)1));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)82,(short)1));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)62,(short)0));
m1429enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1429pokemonData_.setStatistics(m1429enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1429custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1429custListLevelMove_.add(new LevelMove((short)1,I_VENT_MAUVAIS));
m1429custListLevelMove_.add(new LevelMove((short)1,I_ECUME));
m1429custListLevelMove_.add(new LevelMove((short)7,I_VIVE_ATTAQUE));
m1429custListLevelMove_.add(new LevelMove((short)13,I_DOUX_PARFUM));
m1429custListLevelMove_.add(new LevelMove((short)19,I_TOURNIQUET));
m1429custListLevelMove_.add(new LevelMove((short)22,I_TORNADE));
m1429custListLevelMove_.add(new LevelMove((short)26,I_GRIMACE));
m1429custListLevelMove_.add(new LevelMove((short)33,I_PARA_SPORE));
m1429custListLevelMove_.add(new LevelMove((short)40,I_VENT_ARGENTE));
m1429custListLevelMove_.add(new LevelMove((short)47,I_LAME_D_AIR));
m1429custListLevelMove_.add(new LevelMove((short)54,I_CYCLONE));
m1429custListLevelMove_.add(new LevelMove((short)61,I_BOURDON));
m1429custListLevelMove_.add(new LevelMove((short)68,I_PAPILLODANSE));
m1429pokemonData_.setLevMoves(m1429custListLevelMove_);
m1429pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1429stringList_=new StringList(new CollCapacity(1));
m1429stringList_.add(I_INTIMIDANT);
m1429pokemonData_.setAbilities(m1429stringList_);
m1429stringList_=new StringList(new CollCapacity(25));
m1429stringList_.add(I_BLABLA_DODO);
m1429stringList_.add(I_BOOST);
m1429stringList_.add(I_CLAIRVOYANCE);
m1429stringList_.add(I_CLONAGE);
m1429stringList_.add(I_COPIE);
m1429stringList_.add(I_COUD_BOUE);
m1429stringList_.add(I_DAMOCLES);
m1429stringList_.add(I_HYDROCANON);
m1429stringList_.add(I_LIRE_ESPRIT);
m1429stringList_.add(I_METEORES);
m1429stringList_.add(I_OURAGAN);
m1429stringList_.add(I_PIQURE);
m1429stringList_.add(I_RAFALE_PSY);
m1429stringList_.add(I_RAYON_SIGNAL);
m1429stringList_.add(I_RONFLEMENT);
m1429stringList_.add(I_SECRETION);
m1429stringList_.add(I_TENACITE);
m1429stringList_.add(I_TIR_DE_BOUE);
m1429stringList_.add(I_TRANCH_AIR);
m1429stringList_.add(I_VANTARDISE);
m1429stringList_.add(I_VENT_ARRIERE);
m1429stringList_.add(I_VENT_GLACE);
m1429stringList_.add(I_VENT_MAUVAIS);
m1429stringList_.add(I_ATTERRISSAGE);
m1429stringList_.add(I_GIGA_SANGSUE);
m1429pokemonData_.setMoveTutors(m1429stringList_);
Shorts m1429shorts_=new Shorts(new CollCapacity(32));
m1429shorts_.add((short)70);
m1429shorts_.add((short)6);
m1429shorts_.add((short)10);
m1429shorts_.add((short)11);
m1429shorts_.add((short)13);
m1429shorts_.add((short)14);
m1429shorts_.add((short)15);
m1429shorts_.add((short)17);
m1429shorts_.add((short)18);
m1429shorts_.add((short)19);
m1429shorts_.add((short)21);
m1429shorts_.add((short)22);
m1429shorts_.add((short)27);
m1429shorts_.add((short)30);
m1429shorts_.add((short)32);
m1429shorts_.add((short)40);
m1429shorts_.add((short)42);
m1429shorts_.add((short)44);
m1429shorts_.add((short)45);
m1429shorts_.add((short)46);
m1429shorts_.add((short)48);
m1429shorts_.add((short)53);
m1429shorts_.add((short)55);
m1429shorts_.add((short)68);
m1429shorts_.add((short)76);
m1429shorts_.add((short)77);
m1429shorts_.add((short)88);
m1429shorts_.add((short)83);
m1429shorts_.add((short)87);
m1429shorts_.add((short)89);
m1429shorts_.add((short)90);
m1429shorts_.add((short)100);
m1429pokemonData_.setTechnicalMoves(m1429shorts_);
m1429pokemonData_.setBaseEvo(I_ARAKDO);
m1429pokemonData_.setCatchingRate((short)75);
m1429pokemonData_.setHeight(Rate.newRate(R_4_5));
m1429pokemonData_.setExpEvo(ExpType.M);
m1429pokemonData_.setExpRate(145);
m1429stringList_=new StringList(new CollCapacity(2));
m1429stringList_.add(I_EAU_1);
m1429stringList_.add(I_INSECTE);
m1429pokemonData_.setEggGroups(m1429stringList_);
m1429pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1429pokemonData_.setHappiness((short)70);
m1429pokemonData_.setHappinessHatch((short)140);
return m1429pokemonData_;
}
static PokemonData p406(){
PokemonData m1430pokemonData_=Instances.newPokemonData();
m1430pokemonData_.setWeight(Rate.newRate(R_108_5));
StringList m1430stringList_=new StringList(new CollCapacity(1));
m1430stringList_.add(I_PLANTE);
m1430pokemonData_.setTypes(m1430stringList_);
EnumMap<Statistic,StatBaseEv> m1430enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)65,(short)0));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)0));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1430enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)95,(short)2));
m1430pokemonData_.setStatistics(m1430enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1430custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1430custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1430custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1430custListLevelMove_.add(new LevelMove((short)6,I_VOL_VIE));
m1430custListLevelMove_.add(new LevelMove((short)11,I_VIVE_ATTAQUE));
m1430custListLevelMove_.add(new LevelMove((short)16,I_TAILLADE));
m1430custListLevelMove_.add(new LevelMove((short)17,I_POURSUITE));
m1430custListLevelMove_.add(new LevelMove((short)23,I_GRINCEMENT));
m1430custListLevelMove_.add(new LevelMove((short)29,I_LAME_FEUILLE));
m1430custListLevelMove_.add(new LevelMove((short)35,I_HATE));
m1430custListLevelMove_.add(new LevelMove((short)41,I_SOUPLESSE));
m1430custListLevelMove_.add(new LevelMove((short)47,I_DETECTION));
m1430custListLevelMove_.add(new LevelMove((short)53,I_FAUX_CHAGE));
m1430custListLevelMove_.add(new LevelMove((short)59,I_TEMPETEVERTE));
m1430pokemonData_.setLevMoves(m1430custListLevelMove_);
m1430pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1430stringList_=new StringList(new CollCapacity(1));
m1430stringList_.add(I_ENGRAIS);
m1430pokemonData_.setAbilities(m1430stringList_);
m1430stringList_=new StringList(new CollCapacity(40));
m1430stringList_.add(I_BALAYAGE);
m1430stringList_.add(I_BLABLA_DODO);
m1430stringList_.add(I_CANON_GRAINE);
m1430stringList_.add(I_CLONAGE);
m1430stringList_.add(I_COPIE);
m1430stringList_.add(I_COUD_BOUE);
m1430stringList_.add(I_COUP_D_BOULE);
m1430stringList_.add(I_COUPE_VENT);
m1430stringList_.add(I_DAMOCLES);
m1430stringList_.add(I_DANSE_LAMES);
m1430stringList_.add(I_DOUBLE_PIED);
m1430stringList_.add(I_DRACOSOUFFLE);
m1430stringList_.add(I_DYNAMOPOING);
m1430stringList_.add(I_ECLATEGRIFFE);
m1430stringList_.add(I_EFFORT);
m1430stringList_.add(I_FEUILLEMAGIK);
m1430stringList_.add(I_FRAPPE_ATLAS);
m1430stringList_.add(I_LANCE_BOUE);
m1430stringList_.add(I_MACHOUILLE);
m1430stringList_.add(I_METEORES);
m1430stringList_.add(I_PLAQUAGE);
m1430stringList_.add(I_POING_ECLAIR);
m1430stringList_.add(I_RIPOSTE);
m1430stringList_.add(I_RONFLEMENT);
m1430stringList_.add(I_SIFFL_HERBE);
m1430stringList_.add(I_SOUCIGRAINE);
m1430stringList_.add(I_SYNTHESE);
m1430stringList_.add(I_TAILLADE);
m1430stringList_.add(I_TEMPETEVERTE);
m1430stringList_.add(I_TENACITE);
m1430stringList_.add(I_ULTIMAPOING);
m1430stringList_.add(I_ULTIMAWASHI);
m1430stringList_.add(I_VAMPIGRAINE);
m1430stringList_.add(I_VANTARDISE);
m1430stringList_.add(I_AIRE_D_HERBE);
m1430stringList_.add(I_GIGA_SANGSUE);
m1430stringList_.add(I_QUEUE_DE_FER);
m1430stringList_.add(I_VAMPIPOING);
m1430stringList_.add(I_COUPE);
m1430stringList_.add(I_FORCE);
m1430pokemonData_.setMoveTutors(m1430stringList_);
Shorts m1430shorts_=new Shorts(new CollCapacity(2));
m1430shorts_.add((short)1);
m1430shorts_.add((short)4);
m1430pokemonData_.setHiddenMoves(m1430shorts_);
m1430shorts_=new Shorts(new CollCapacity(34));
m1430shorts_.add((short)70);
m1430shorts_.add((short)94);
m1430shorts_.add((short)6);
m1430shorts_.add((short)10);
m1430shorts_.add((short)11);
m1430shorts_.add((short)17);
m1430shorts_.add((short)20);
m1430shorts_.add((short)21);
m1430shorts_.add((short)22);
m1430shorts_.add((short)27);
m1430shorts_.add((short)28);
m1430shorts_.add((short)31);
m1430shorts_.add((short)32);
m1430shorts_.add((short)39);
m1430shorts_.add((short)40);
m1430shorts_.add((short)42);
m1430shorts_.add((short)44);
m1430shorts_.add((short)45);
m1430shorts_.add((short)47);
m1430shorts_.add((short)48);
m1430shorts_.add((short)53);
m1430shorts_.add((short)54);
m1430shorts_.add((short)56);
m1430shorts_.add((short)62);
m1430shorts_.add((short)75);
m1430shorts_.add((short)80);
m1430shorts_.add((short)81);
m1430shorts_.add((short)88);
m1430shorts_.add((short)86);
m1430shorts_.add((short)87);
m1430shorts_.add((short)90);
m1430shorts_.add((short)96);
m1430shorts_.add((short)98);
m1430shorts_.add((short)100);
m1430pokemonData_.setTechnicalMoves(m1430shorts_);
m1430pokemonData_.setBaseEvo(I_ARCKO);
StringMap<Evolution> m1430stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1430evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1430evolutionLevelSimple_.setLevel((short)36);
m1430stringMapEvolution_.addEntry(I_JUNGKO,m1430evolutionLevelSimple_);
m1430pokemonData_.setEvolutions(m1430stringMapEvolution_);
m1430pokemonData_.setCatchingRate((short)45);
m1430pokemonData_.setHeight(Rate.newRate(R_9_10));
m1430pokemonData_.setExpEvo(ExpType.P);
m1430pokemonData_.setExpRate(142);
m1430stringList_=new StringList(new CollCapacity(2));
m1430stringList_.add(I_DRAGON);
m1430stringList_.add(I_MONSTRE);
m1430pokemonData_.setEggGroups(m1430stringList_);
m1430pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1430pokemonData_.setHappiness((short)70);
m1430pokemonData_.setHappinessHatch((short)140);
return m1430pokemonData_;
}
static PokemonData p407(){
PokemonData m1431pokemonData_=Instances.newPokemonData();
m1431pokemonData_.setWeight(Rate.newRate(R_61));
StringList m1431stringList_=new StringList(new CollCapacity(1));
m1431stringList_.add(I_NORMAL);
m1431pokemonData_.setTypes(m1431stringList_);
EnumMap<Statistic,StatBaseEv> m1431enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)3));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)45,(short)0));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)0));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)85,(short)0));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)90,(short)0));
m1431enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)80,(short)0));
m1431pokemonData_.setStatistics(m1431enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1431custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1431custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1431custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1431custListLevelMove_.add(new LevelMove((short)1,I_CROCS_ECLAIR));
m1431custListLevelMove_.add(new LevelMove((short)1,I_CROCS_GIVRE));
m1431custListLevelMove_.add(new LevelMove((short)1,I_CROCS_FEU));
m1431custListLevelMove_.add(new LevelMove((short)5,I_FLAIR));
m1431custListLevelMove_.add(new LevelMove((short)8,I_MORSURE));
m1431custListLevelMove_.add(new LevelMove((short)12,I_COUP_D_MAIN));
m1431custListLevelMove_.add(new LevelMove((short)15,I_BELIER));
m1431custListLevelMove_.add(new LevelMove((short)20,I_RENGORGEMENT));
m1431custListLevelMove_.add(new LevelMove((short)24,I_MACHOUILLE));
m1431custListLevelMove_.add(new LevelMove((short)29,I_HURLEMENT));
m1431custListLevelMove_.add(new LevelMove((short)36,I_VENGEANCE));
m1431custListLevelMove_.add(new LevelMove((short)42,I_CONTRE));
m1431custListLevelMove_.add(new LevelMove((short)51,I_DERNIERECOUR));
m1431custListLevelMove_.add(new LevelMove((short)59,I_GIGA_IMPACT));
m1431custListLevelMove_.add(new LevelMove((short)63,I_CALINERIE));
m1431pokemonData_.setLevMoves(m1431custListLevelMove_);
m1431pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1431stringList_=new StringList(new CollCapacity(3));
m1431stringList_.add(I_INTIMIDANT);
m1431stringList_.add(I_BAIGNE_SABLE);
m1431stringList_.add(I_QUERELLEUR);
m1431pokemonData_.setAbilities(m1431stringList_);
m1431stringList_=new StringList(new CollCapacity(11));
m1431stringList_.add(I_BLABLA_DODO);
m1431stringList_.add(I_BROUHAHA);
m1431stringList_.add(I_COUP_D_MAIN);
m1431stringList_.add(I_DERNIERECOUR);
m1431stringList_.add(I_IMPLORE);
m1431stringList_.add(I_MEGAPHONE);
m1431stringList_.add(I_RONFLEMENT);
m1431stringList_.add(I_SURPUISSANCE);
m1431stringList_.add(I_TETE_DE_FER);
m1431stringList_.add(I_SURF);
m1431stringList_.add(I_FORCE);
m1431pokemonData_.setMoveTutors(m1431stringList_);
Shorts m1431shorts_=new Shorts(new CollCapacity(2));
m1431shorts_.add((short)3);
m1431shorts_.add((short)4);
m1431pokemonData_.setHiddenMoves(m1431shorts_);
m1431shorts_=new Shorts(new CollCapacity(31));
m1431shorts_.add((short)94);
m1431shorts_.add((short)5);
m1431shorts_.add((short)6);
m1431shorts_.add((short)10);
m1431shorts_.add((short)11);
m1431shorts_.add((short)15);
m1431shorts_.add((short)17);
m1431shorts_.add((short)18);
m1431shorts_.add((short)21);
m1431shorts_.add((short)24);
m1431shorts_.add((short)25);
m1431shorts_.add((short)27);
m1431shorts_.add((short)28);
m1431shorts_.add((short)30);
m1431shorts_.add((short)32);
m1431shorts_.add((short)39);
m1431shorts_.add((short)40);
m1431shorts_.add((short)42);
m1431shorts_.add((short)44);
m1431shorts_.add((short)45);
m1431shorts_.add((short)48);
m1431shorts_.add((short)66);
m1431shorts_.add((short)67);
m1431shorts_.add((short)68);
m1431shorts_.add((short)73);
m1431shorts_.add((short)88);
m1431shorts_.add((short)87);
m1431shorts_.add((short)90);
m1431shorts_.add((short)93);
m1431shorts_.add((short)95);
m1431shorts_.add((short)100);
m1431pokemonData_.setTechnicalMoves(m1431shorts_);
m1431pokemonData_.setBaseEvo(I_PONCHIOT);
m1431pokemonData_.setCatchingRate((short)45);
m1431pokemonData_.setHeight(Rate.newRate(R_6_5));
m1431pokemonData_.setExpEvo(ExpType.P);
m1431pokemonData_.setExpRate(221);
m1431stringList_=new StringList(new CollCapacity(1));
m1431stringList_.add(I_SOL);
m1431pokemonData_.setEggGroups(m1431stringList_);
m1431pokemonData_.setHatchingSteps(LgInt.newLgInt(R_4080));
m1431pokemonData_.setHappiness((short)70);
m1431pokemonData_.setHappinessHatch((short)140);
return m1431pokemonData_;
}
static PokemonData p408(){
PokemonData m1432pokemonData_=Instances.newPokemonData();
m1432pokemonData_.setWeight(Rate.newRate(R_49_2));
StringList m1432stringList_=new StringList(new CollCapacity(1));
m1432stringList_.add(I_EAU);
m1432pokemonData_.setTypes(m1432stringList_);
EnumMap<Statistic,StatBaseEv> m1432enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)75,(short)0));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)83,(short)2));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)75,(short)0));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1432enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1432pokemonData_.setStatistics(m1432enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1432custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1432custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1432custListLevelMove_.add(new LevelMove((short)5,I_MIMI_QUEUE));
m1432custListLevelMove_.add(new LevelMove((short)7,I_PISTOLET_A_O));
m1432custListLevelMove_.add(new LevelMove((short)11,I_TOURNIQUET));
m1432custListLevelMove_.add(new LevelMove((short)13,I_PUISSANCE));
m1432custListLevelMove_.add(new LevelMove((short)17,I_COQUILAME));
m1432custListLevelMove_.add(new LevelMove((short)20,I_TAILLADE));
m1432custListLevelMove_.add(new LevelMove((short)25,I_VIBRAQUA));
m1432custListLevelMove_.add(new LevelMove((short)28,I_VENDETTA));
m1432custListLevelMove_.add(new LevelMove((short)33,I_AQUA_JET));
m1432custListLevelMove_.add(new LevelMove((short)36,I_ENCORE));
m1432custListLevelMove_.add(new LevelMove((short)41,I_HYDROQUEUE));
m1432custListLevelMove_.add(new LevelMove((short)44,I_VENGEANCE));
m1432custListLevelMove_.add(new LevelMove((short)49,I_DANSE_LAMES));
m1432custListLevelMove_.add(new LevelMove((short)52,I_HYDROCANON));
m1432pokemonData_.setLevMoves(m1432custListLevelMove_);
m1432pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1432stringList_=new StringList(new CollCapacity(2));
m1432stringList_.add(I_TORRENT);
m1432stringList_.add(I_COQUE_ARMURE);
m1432pokemonData_.setAbilities(m1432stringList_);
m1432stringList_=new StringList(new CollCapacity(11));
m1432stringList_.add(I_AIRE_D_EAU);
m1432stringList_.add(I_BLABLA_DODO);
m1432stringList_.add(I_COUP_D_MAIN);
m1432stringList_.add(I_HYDROQUEUE);
m1432stringList_.add(I_IMPLORE);
m1432stringList_.add(I_QUEUE_DE_FER);
m1432stringList_.add(I_RONFLEMENT);
m1432stringList_.add(I_VENT_GLACE);
m1432stringList_.add(I_COUPE);
m1432stringList_.add(I_SURF);
m1432stringList_.add(I_SIPHON);
m1432pokemonData_.setMoveTutors(m1432stringList_);
Shorts m1432shorts_=new Shorts(new CollCapacity(3));
m1432shorts_.add((short)1);
m1432shorts_.add((short)3);
m1432shorts_.add((short)5);
m1432pokemonData_.setHiddenMoves(m1432shorts_);
m1432shorts_=new Shorts(new CollCapacity(29));
m1432shorts_.add((short)94);
m1432shorts_.add((short)6);
m1432shorts_.add((short)7);
m1432shorts_.add((short)10);
m1432shorts_.add((short)12);
m1432shorts_.add((short)13);
m1432shorts_.add((short)14);
m1432shorts_.add((short)17);
m1432shorts_.add((short)18);
m1432shorts_.add((short)21);
m1432shorts_.add((short)27);
m1432shorts_.add((short)28);
m1432shorts_.add((short)32);
m1432shorts_.add((short)40);
m1432shorts_.add((short)42);
m1432shorts_.add((short)44);
m1432shorts_.add((short)45);
m1432shorts_.add((short)48);
m1432shorts_.add((short)54);
m1432shorts_.add((short)55);
m1432shorts_.add((short)56);
m1432shorts_.add((short)67);
m1432shorts_.add((short)75);
m1432shorts_.add((short)81);
m1432shorts_.add((short)88);
m1432shorts_.add((short)86);
m1432shorts_.add((short)87);
m1432shorts_.add((short)90);
m1432shorts_.add((short)100);
m1432pokemonData_.setTechnicalMoves(m1432shorts_);
m1432pokemonData_.setBaseEvo(I_MOUSTILLON);
StringMap<Evolution> m1432stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1432evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1432evolutionLevelSimple_.setLevel((short)36);
m1432stringMapEvolution_.addEntry(I_CLAMIRAL,m1432evolutionLevelSimple_);
m1432pokemonData_.setEvolutions(m1432stringMapEvolution_);
m1432pokemonData_.setCatchingRate((short)45);
m1432pokemonData_.setHeight(Rate.newRate(R_4_5));
m1432pokemonData_.setExpEvo(ExpType.P);
m1432pokemonData_.setExpRate(145);
m1432stringList_=new StringList(new CollCapacity(1));
m1432stringList_.add(I_SOL);
m1432pokemonData_.setEggGroups(m1432stringList_);
m1432pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1432pokemonData_.setHappiness((short)70);
m1432pokemonData_.setHappinessHatch((short)140);
return m1432pokemonData_;
}
static PokemonData p409(){
PokemonData m1433pokemonData_=Instances.newPokemonData();
m1433pokemonData_.setWeight(Rate.newRate(R_68_5));
StringList m1433stringList_=new StringList(new CollCapacity(1));
m1433stringList_.add(I_TENEBRE);
m1433pokemonData_.setTypes(m1433stringList_);
EnumMap<Statistic,StatBaseEv> m1433enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)1));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)30,(short)0));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)30,(short)0));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)35,(short)0));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)35,(short)0));
m1433enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)35,(short)0));
m1433pokemonData_.setStatistics(m1433enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1433custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1433custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1433custListLevelMove_.add(new LevelMove((short)5,I_GRONDEMENT));
m1433custListLevelMove_.add(new LevelMove((short)9,I_JET_DE_SABLE));
m1433custListLevelMove_.add(new LevelMove((short)13,I_MORSURE));
m1433custListLevelMove_.add(new LevelMove((short)17,I_FLAIR));
m1433custListLevelMove_.add(new LevelMove((short)21,I_HURLEMENT));
m1433custListLevelMove_.add(new LevelMove((short)25,I_VANTARDISE));
m1433custListLevelMove_.add(new LevelMove((short)29,I_ASSURANCE));
m1433custListLevelMove_.add(new LevelMove((short)33,I_GRIMACE));
m1433custListLevelMove_.add(new LevelMove((short)37,I_PROVOC));
m1433custListLevelMove_.add(new LevelMove((short)41,I_EMBARGO));
m1433custListLevelMove_.add(new LevelMove((short)45,I_BELIER));
m1433custListLevelMove_.add(new LevelMove((short)49,I_COUP_BAS));
m1433custListLevelMove_.add(new LevelMove((short)53,I_MACHOUILLE));
m1433pokemonData_.setLevMoves(m1433custListLevelMove_);
m1433pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1433stringList_=new StringList(new CollCapacity(1));
m1433stringList_.add(I_PIED_VELOCE);
m1433pokemonData_.setAbilities(m1433stringList_);
m1433stringList_=new StringList(new CollCapacity(31));
m1433stringList_.add(I_BAILLEMENT);
m1433stringList_.add(I_BLABLA_DODO);
m1433stringList_.add(I_BOOST);
m1433stringList_.add(I_BROUHAHA);
m1433stringList_.add(I_CLONAGE);
m1433stringList_.add(I_COPIE);
m1433stringList_.add(I_COUD_BOUE);
m1433stringList_.add(I_COUP_BAS);
m1433stringList_.add(I_COUP_D_BOULE);
m1433stringList_.add(I_CROC_FATAL);
m1433stringList_.add(I_CROCHETVENIN);
m1433stringList_.add(I_CROCS_ECLAIR);
m1433stringList_.add(I_CROCS_FEU);
m1433stringList_.add(I_CROCS_GIVRE);
m1433stringList_.add(I_DAMOCLES);
m1433stringList_.add(I_DEPIT);
m1433stringList_.add(I_ETONNEMENT);
m1433stringList_.add(I_GROZ_YEUX);
m1433stringList_.add(I_IMPLORE);
m1433stringList_.add(I_MOI_D_ABORD);
m1433stringList_.add(I_PLAQUAGE);
m1433stringList_.add(I_RIPOSTE);
m1433stringList_.add(I_RONFLEMENT);
m1433stringList_.add(I_TENACITE);
m1433stringList_.add(I_VANTARDISE);
m1433stringList_.add(I_CALINERIE);
m1433stringList_.add(I_MEGAPHONE);
m1433stringList_.add(I_QUEUE_DE_FER);
m1433stringList_.add(I_SAISIE);
m1433stringList_.add(I_TRICHERIE);
m1433stringList_.add(I_VIBROBSCUR);
m1433pokemonData_.setMoveTutors(m1433stringList_);
Shorts m1433shorts_=new Shorts(new CollCapacity(29));
m1433shorts_.add((short)94);
m1433shorts_.add((short)5);
m1433shorts_.add((short)6);
m1433shorts_.add((short)10);
m1433shorts_.add((short)11);
m1433shorts_.add((short)12);
m1433shorts_.add((short)17);
m1433shorts_.add((short)18);
m1433shorts_.add((short)21);
m1433shorts_.add((short)27);
m1433shorts_.add((short)28);
m1433shorts_.add((short)30);
m1433shorts_.add((short)32);
m1433shorts_.add((short)41);
m1433shorts_.add((short)42);
m1433shorts_.add((short)44);
m1433shorts_.add((short)45);
m1433shorts_.add((short)46);
m1433shorts_.add((short)48);
m1433shorts_.add((short)59);
m1433shorts_.add((short)63);
m1433shorts_.add((short)66);
m1433shorts_.add((short)67);
m1433shorts_.add((short)97);
m1433shorts_.add((short)88);
m1433shorts_.add((short)87);
m1433shorts_.add((short)90);
m1433shorts_.add((short)95);
m1433shorts_.add((short)100);
m1433pokemonData_.setTechnicalMoves(m1433shorts_);
m1433pokemonData_.setBaseEvo(I_MEDHYENA);
StringMap<Evolution> m1433stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1433evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1433evolutionLevelSimple_.setLevel((short)18);
m1433stringMapEvolution_.addEntry(I_GRAHYENA,m1433evolutionLevelSimple_);
m1433pokemonData_.setEvolutions(m1433stringMapEvolution_);
m1433pokemonData_.setCatchingRate((short)255);
m1433pokemonData_.setHeight(Rate.newRate(R_1_2));
m1433pokemonData_.setExpEvo(ExpType.M);
m1433pokemonData_.setExpRate(44);
m1433stringList_=new StringList(new CollCapacity(1));
m1433stringList_.add(I_SOL);
m1433pokemonData_.setEggGroups(m1433stringList_);
m1433pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1433pokemonData_.setHappiness((short)70);
m1433pokemonData_.setHappinessHatch((short)140);
return m1433pokemonData_;
}
static PokemonData p410(){
PokemonData m1434pokemonData_=Instances.newPokemonData();
m1434pokemonData_.setWeight(Rate.newRate(R_56_5));
StringList m1434stringList_=new StringList(new CollCapacity(2));
m1434stringList_.add(I_COMBAT);
m1434stringList_.add(I_PSY);
m1434pokemonData_.setTypes(m1434stringList_);
EnumMap<Statistic,StatBaseEv> m1434enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)40,(short)0));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)0));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)30,(short)0));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)55,(short)0));
m1434enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)1));
m1434pokemonData_.setStatistics(m1434enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1434custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1434custListLevelMove_.add(new LevelMove((short)1,I_PATIENCE));
m1434custListLevelMove_.add(new LevelMove((short)4,I_YOGA));
m1434custListLevelMove_.add(new LevelMove((short)8,I_CHOC_MENTAL));
m1434custListLevelMove_.add(new LevelMove((short)11,I_DETECTION));
m1434custListLevelMove_.add(new LevelMove((short)15,I_PUIS_CACHEE));
m1434custListLevelMove_.add(new LevelMove((short)18,I_LIRE_ESPRIT));
m1434custListLevelMove_.add(new LevelMove((short)22,I_RUSE));
m1434custListLevelMove_.add(new LevelMove((short)25,I_PLENITUDE));
m1434custListLevelMove_.add(new LevelMove((short)29,I_FORTE_PAUME));
m1434custListLevelMove_.add(new LevelMove((short)32,I_PIED_VOLTIGE));
m1434custListLevelMove_.add(new LevelMove((short)36,I_BOOST));
m1434custListLevelMove_.add(new LevelMove((short)39,I_ACUPRESSION));
m1434custListLevelMove_.add(new LevelMove((short)43,I_ASTUCE_FORCE));
m1434custListLevelMove_.add(new LevelMove((short)46,I_CONTRE));
m1434custListLevelMove_.add(new LevelMove((short)50,I_SOIN));
m1434pokemonData_.setLevMoves(m1434custListLevelMove_);
m1434pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1434stringList_=new StringList(new CollCapacity(1));
m1434stringList_.add(I_FORCE_PURE);
m1434pokemonData_.setAbilities(m1434stringList_);
m1434stringList_=new StringList(new CollCapacity(44));
m1434stringList_.add(I_BALANCE);
m1434stringList_.add(I_BALAYAGE);
m1434stringList_.add(I_BLABLA_DODO);
m1434stringList_.add(I_BLUFF);
m1434stringList_.add(I_BOOST);
m1434stringList_.add(I_CLAIRVOYANCE);
m1434stringList_.add(I_CLONAGE);
m1434stringList_.add(I_COPIE);
m1434stringList_.add(I_COUD_BOUE);
m1434stringList_.add(I_COUP_D_BOULE);
m1434stringList_.add(I_COUPE_PSYCHO);
m1434stringList_.add(I_DAMOCLES);
m1434stringList_.add(I_DEVOREVE);
m1434stringList_.add(I_DYNAMOPOING);
m1434stringList_.add(I_FRAPPE_ATLAS);
m1434stringList_.add(I_GRAVITE);
m1434stringList_.add(I_IMITATION);
m1434stringList_.add(I_METEORES);
m1434stringList_.add(I_METRONOME);
m1434stringList_.add(I_ONDE_VIDE);
m1434stringList_.add(I_PERMUFORCE);
m1434stringList_.add(I_PERMUGARDE);
m1434stringList_.add(I_PISTO_POING);
m1434stringList_.add(I_PLAQUAGE);
m1434stringList_.add(I_POING_DE_FEU);
m1434stringList_.add(I_POING_ECLAIR);
m1434stringList_.add(I_POINGLACE);
m1434stringList_.add(I_PSYKOUD_BOUL);
m1434stringList_.add(I_RAYON_SIGNAL);
m1434stringList_.add(I_REFLET_MAGIK);
m1434stringList_.add(I_RELAIS);
m1434stringList_.add(I_RIPOSTE);
m1434stringList_.add(I_RONFLEMENT);
m1434stringList_.add(I_TENACITE);
m1434stringList_.add(I_TOURMAGIK);
m1434stringList_.add(I_ULTIMAPOING);
m1434stringList_.add(I_ULTIMAWASHI);
m1434stringList_.add(I_VANTARDISE);
m1434stringList_.add(I_COUP_D_MAIN);
m1434stringList_.add(I_FORCE_CACHEE);
m1434stringList_.add(I_PREVENTION);
m1434stringList_.add(I_RECYCLAGE);
m1434stringList_.add(I_VAMPIPOING);
m1434stringList_.add(I_FORCE);
m1434pokemonData_.setMoveTutors(m1434stringList_);
Shorts m1434shorts_=new Shorts(new CollCapacity(1));
m1434shorts_.add((short)4);
m1434pokemonData_.setHiddenMoves(m1434shorts_);
m1434shorts_=new Shorts(new CollCapacity(37));
m1434shorts_.add((short)70);
m1434shorts_.add((short)94);
m1434shorts_.add((short)3);
m1434shorts_.add((short)4);
m1434shorts_.add((short)6);
m1434shorts_.add((short)8);
m1434shorts_.add((short)10);
m1434shorts_.add((short)11);
m1434shorts_.add((short)16);
m1434shorts_.add((short)17);
m1434shorts_.add((short)18);
m1434shorts_.add((short)21);
m1434shorts_.add((short)27);
m1434shorts_.add((short)29);
m1434shorts_.add((short)30);
m1434shorts_.add((short)31);
m1434shorts_.add((short)32);
m1434shorts_.add((short)33);
m1434shorts_.add((short)39);
m1434shorts_.add((short)42);
m1434shorts_.add((short)44);
m1434shorts_.add((short)45);
m1434shorts_.add((short)47);
m1434shorts_.add((short)48);
m1434shorts_.add((short)52);
m1434shorts_.add((short)56);
m1434shorts_.add((short)67);
m1434shorts_.add((short)77);
m1434shorts_.add((short)80);
m1434shorts_.add((short)88);
m1434shorts_.add((short)84);
m1434shorts_.add((short)85);
m1434shorts_.add((short)86);
m1434shorts_.add((short)87);
m1434shorts_.add((short)90);
m1434shorts_.add((short)98);
m1434shorts_.add((short)100);
m1434pokemonData_.setTechnicalMoves(m1434shorts_);
m1434pokemonData_.setBaseEvo(I_MEDITIKKA);
StringMap<Evolution> m1434stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1434evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1434evolutionLevelSimple_.setLevel((short)37);
m1434stringMapEvolution_.addEntry(I_CHARMINA,m1434evolutionLevelSimple_);
m1434pokemonData_.setEvolutions(m1434stringMapEvolution_);
m1434pokemonData_.setCatchingRate((short)180);
m1434pokemonData_.setHeight(Rate.newRate(R_3_5));
m1434pokemonData_.setExpEvo(ExpType.M);
m1434pokemonData_.setExpRate(56);
m1434stringList_=new StringList(new CollCapacity(1));
m1434stringList_.add(I_HUMANOIDE);
m1434pokemonData_.setEggGroups(m1434stringList_);
m1434pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1434pokemonData_.setHappiness((short)70);
m1434pokemonData_.setHappinessHatch((short)140);
return m1434pokemonData_;
}
static PokemonData p411(){
PokemonData m1435pokemonData_=Instances.newPokemonData();
m1435pokemonData_.setWeight(Rate.newRate(R_201_2));
StringList m1435stringList_=new StringList(new CollCapacity(1));
m1435stringList_.add(I_PLANTE);
m1435pokemonData_.setTypes(m1435stringList_);
EnumMap<Statistic,StatBaseEv> m1435enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)82,(short)0));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)83,(short)0));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)100,(short)2));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)80,(short)0));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)1));
m1435enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)80,(short)0));
m1435pokemonData_.setStatistics(m1435enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1435custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1435custListLevelMove_.add(new LevelMove((short)1,I_TEMPETE_FLORALE));
m1435custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1435custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1435custListLevelMove_.add(new LevelMove((short)6,I_TRANCH_HERBE));
m1435custListLevelMove_.add(new LevelMove((short)9,I_POUDRE_TOXIK));
m1435custListLevelMove_.add(new LevelMove((short)12,I_SYNTHESE));
m1435custListLevelMove_.add(new LevelMove((short)18,I_PROTECTION));
m1435custListLevelMove_.add(new LevelMove((short)22,I_FEUILLEMAGIK));
m1435custListLevelMove_.add(new LevelMove((short)26,I_DON_NATUREL));
m1435custListLevelMove_.add(new LevelMove((short)32,I_DANSE_FLEUR));
m1435custListLevelMove_.add(new LevelMove((short)34,I_DOUX_PARFUM));
m1435custListLevelMove_.add(new LevelMove((short)40,I_MUR_LUMIERE));
m1435custListLevelMove_.add(new LevelMove((short)46,I_PLAQUAGE));
m1435custListLevelMove_.add(new LevelMove((short)54,I_RUNE_PROTECT));
m1435custListLevelMove_.add(new LevelMove((short)60,I_AROMATHERAPI));
m1435custListLevelMove_.add(new LevelMove((short)66,I_LANCE_SOLEIL));
m1435custListLevelMove_.add(new LevelMove((short)70,I_TEMPETE_FLORALE));
m1435pokemonData_.setLevMoves(m1435custListLevelMove_);
m1435pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1435stringList_=new StringList(new CollCapacity(1));
m1435stringList_.add(I_ENGRAIS);
m1435pokemonData_.setAbilities(m1435stringList_);
m1435stringList_=new StringList(new CollCapacity(34));
m1435stringList_.add(I_AROMATHERAPI);
m1435stringList_.add(I_BLABLA_DODO);
m1435stringList_.add(I_CANON_GRAINE);
m1435stringList_.add(I_CLONAGE);
m1435stringList_.add(I_COLERE);
m1435stringList_.add(I_COPIE);
m1435stringList_.add(I_COUD_BOUE);
m1435stringList_.add(I_COUP_D_BOULE);
m1435stringList_.add(I_DAMOCLES);
m1435stringList_.add(I_DANSE_LAMES);
m1435stringList_.add(I_ESSORAGE);
m1435stringList_.add(I_FLEAU);
m1435stringList_.add(I_FORCE_NATURE);
m1435stringList_.add(I_FOUET_LIANES);
m1435stringList_.add(I_PLAQUAGE);
m1435stringList_.add(I_POUV_ANTIQUE);
m1435stringList_.add(I_RACINES);
m1435stringList_.add(I_REFLET_MAGIK);
m1435stringList_.add(I_RIPOSTE);
m1435stringList_.add(I_RONFLEMENT);
m1435stringList_.add(I_SIFFL_HERBE);
m1435stringList_.add(I_SOUCIGRAINE);
m1435stringList_.add(I_SYNTHESE);
m1435stringList_.add(I_TAILLADE);
m1435stringList_.add(I_TEMPETEVERTE);
m1435stringList_.add(I_TENACITE);
m1435stringList_.add(I_VAMPIGRAINE);
m1435stringList_.add(I_VANTARDISE);
m1435stringList_.add(I_VEGE_ATTAK);
m1435stringList_.add(I_AIRE_D_HERBE);
m1435stringList_.add(I_GIGA_SANGSUE);
m1435stringList_.add(I_QUEUE_DE_FER);
m1435stringList_.add(I_COUPE);
m1435stringList_.add(I_FORCE);
m1435pokemonData_.setMoveTutors(m1435stringList_);
Shorts m1435shorts_=new Shorts(new CollCapacity(2));
m1435shorts_.add((short)1);
m1435shorts_.add((short)4);
m1435pokemonData_.setHiddenMoves(m1435shorts_);
m1435shorts_=new Shorts(new CollCapacity(31));
m1435shorts_.add((short)70);
m1435shorts_.add((short)94);
m1435shorts_.add((short)6);
m1435shorts_.add((short)10);
m1435shorts_.add((short)11);
m1435shorts_.add((short)15);
m1435shorts_.add((short)16);
m1435shorts_.add((short)17);
m1435shorts_.add((short)20);
m1435shorts_.add((short)21);
m1435shorts_.add((short)22);
m1435shorts_.add((short)26);
m1435shorts_.add((short)27);
m1435shorts_.add((short)32);
m1435shorts_.add((short)33);
m1435shorts_.add((short)42);
m1435shorts_.add((short)44);
m1435shorts_.add((short)45);
m1435shorts_.add((short)48);
m1435shorts_.add((short)49);
m1435shorts_.add((short)53);
m1435shorts_.add((short)68);
m1435shorts_.add((short)75);
m1435shorts_.add((short)78);
m1435shorts_.add((short)88);
m1435shorts_.add((short)82);
m1435shorts_.add((short)86);
m1435shorts_.add((short)87);
m1435shorts_.add((short)90);
m1435shorts_.add((short)96);
m1435shorts_.add((short)100);
m1435pokemonData_.setTechnicalMoves(m1435shorts_);
m1435pokemonData_.setBaseEvo(I_GERMIGNON);
m1435pokemonData_.setCatchingRate((short)45);
m1435pokemonData_.setHeight(Rate.newRate(R_9_5));
m1435pokemonData_.setExpEvo(ExpType.P);
m1435pokemonData_.setExpRate(236);
m1435stringList_=new StringList(new CollCapacity(2));
m1435stringList_.add(I_MONSTRE);
m1435stringList_.add(I_PLANTE);
m1435pokemonData_.setEggGroups(m1435stringList_);
m1435pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1435pokemonData_.setHappiness((short)70);
m1435pokemonData_.setHappinessHatch((short)140);
return m1435pokemonData_;
}
static PokemonData p412(){
PokemonData m1436pokemonData_=Instances.newPokemonData();
m1436pokemonData_.setWeight(Rate.newRate(R_81));
StringList m1436stringList_=new StringList(new CollCapacity(2));
m1436stringList_.add(I_EAU);
m1436stringList_.add(I_ROCHE);
m1436pokemonData_.setTypes(m1436stringList_);
EnumMap<Statistic,StatBaseEv> m1436enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)108,(short)0));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)83,(short)0));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)74,(short)0));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)133,(short)2));
m1436enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)32,(short)0));
m1436pokemonData_.setStatistics(m1436enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1436custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1436custListLevelMove_.add(new LevelMove((short)1,I_PISTOLET_A_O));
m1436custListLevelMove_.add(new LevelMove((short)1,I_REPLI));
m1436custListLevelMove_.add(new LevelMove((short)1,I_PATIENCE));
m1436custListLevelMove_.add(new LevelMove((short)5,I_ROULADE));
m1436custListLevelMove_.add(new LevelMove((short)8,I_MORSURE));
m1436custListLevelMove_.add(new LevelMove((short)11,I_ABRI));
m1436custListLevelMove_.add(new LevelMove((short)15,I_AQUA_JET));
m1436custListLevelMove_.add(new LevelMove((short)18,I_POUV_ANTIQUE));
m1436custListLevelMove_.add(new LevelMove((short)21,I_MACHOUILLE));
m1436custListLevelMove_.add(new LevelMove((short)25,I_GARDE_LARGE));
m1436custListLevelMove_.add(new LevelMove((short)28,I_SAUMURE));
m1436custListLevelMove_.add(new LevelMove((short)31,I_ANTI_AIR));
m1436custListLevelMove_.add(new LevelMove((short)35,I_MALEDICTION));
m1436custListLevelMove_.add(new LevelMove((short)40,I_EXUVIATION));
m1436custListLevelMove_.add(new LevelMove((short)45,I_HYDROQUEUE));
m1436custListLevelMove_.add(new LevelMove((short)51,I_EBOULEMENT));
m1436custListLevelMove_.add(new LevelMove((short)56,I_DANSE_PLUIE));
m1436custListLevelMove_.add(new LevelMove((short)61,I_HYDROCANON));
m1436pokemonData_.setLevMoves(m1436custListLevelMove_);
m1436pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1436stringList_=new StringList(new CollCapacity(3));
m1436stringList_.add(I_SOLIDE_ROC);
m1436stringList_.add(I_FERMETE);
m1436stringList_.add(I_GLISSADE);
m1436pokemonData_.setAbilities(m1436stringList_);
m1436stringList_=new StringList(new CollCapacity(15));
m1436stringList_.add(I_BALAYAGE);
m1436stringList_.add(I_BARRAGE);
m1436stringList_.add(I_BLABLA_DODO);
m1436stringList_.add(I_HYDROQUEUE);
m1436stringList_.add(I_MUR_DE_FER);
m1436stringList_.add(I_PIEGE_DE_ROC);
m1436stringList_.add(I_QUEUE_DE_FER);
m1436stringList_.add(I_RONFLEMENT);
m1436stringList_.add(I_SURPUISSANCE);
m1436stringList_.add(I_TELLURIFORCE);
m1436stringList_.add(I_TETE_DE_FER);
m1436stringList_.add(I_VENT_GLACE);
m1436stringList_.add(I_SURF);
m1436stringList_.add(I_FORCE);
m1436stringList_.add(I_SIPHON);
m1436pokemonData_.setMoveTutors(m1436stringList_);
Shorts m1436shorts_=new Shorts(new CollCapacity(3));
m1436shorts_.add((short)3);
m1436shorts_.add((short)4);
m1436shorts_.add((short)5);
m1436pokemonData_.setHiddenMoves(m1436shorts_);
m1436shorts_=new Shorts(new CollCapacity(31));
m1436shorts_.add((short)94);
m1436shorts_.add((short)6);
m1436shorts_.add((short)10);
m1436shorts_.add((short)13);
m1436shorts_.add((short)14);
m1436shorts_.add((short)15);
m1436shorts_.add((short)17);
m1436shorts_.add((short)18);
m1436shorts_.add((short)21);
m1436shorts_.add((short)23);
m1436shorts_.add((short)26);
m1436shorts_.add((short)27);
m1436shorts_.add((short)28);
m1436shorts_.add((short)32);
m1436shorts_.add((short)37);
m1436shorts_.add((short)39);
m1436shorts_.add((short)42);
m1436shorts_.add((short)44);
m1436shorts_.add((short)45);
m1436shorts_.add((short)48);
m1436shorts_.add((short)52);
m1436shorts_.add((short)55);
m1436shorts_.add((short)68);
m1436shorts_.add((short)69);
m1436shorts_.add((short)71);
m1436shorts_.add((short)78);
m1436shorts_.add((short)80);
m1436shorts_.add((short)88);
m1436shorts_.add((short)87);
m1436shorts_.add((short)90);
m1436shorts_.add((short)100);
m1436pokemonData_.setTechnicalMoves(m1436shorts_);
m1436pokemonData_.setBaseEvo(I_CARAPAGOS);
m1436pokemonData_.setCatchingRate((short)45);
m1436pokemonData_.setHeight(Rate.newRate(R_6_5));
m1436pokemonData_.setExpEvo(ExpType.M);
m1436pokemonData_.setExpRate(173);
m1436stringList_=new StringList(new CollCapacity(1));
m1436stringList_.add(I_EAU_1);
m1436pokemonData_.setEggGroups(m1436stringList_);
m1436pokemonData_.setHatchingSteps(LgInt.newLgInt(R_7905));
m1436pokemonData_.setHappiness((short)70);
m1436pokemonData_.setHappinessHatch((short)140);
return m1436pokemonData_;
}
static PokemonData p413(){
PokemonData m1437pokemonData_=Instances.newPokemonData();
m1437pokemonData_.setWeight(Rate.newRate(R_8));
StringList m1437stringList_=new StringList(new CollCapacity(1));
m1437stringList_.add(I_PSY);
m1437pokemonData_.setTypes(m1437stringList_);
EnumMap<Statistic,StatBaseEv> m1437enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)40,(short)0));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)125,(short)2));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)50,(short)0));
m1437enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1437pokemonData_.setStatistics(m1437enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1437custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1437custListLevelMove_.add(new LevelMove((short)1,I_VAGUE_PSY));
m1437custListLevelMove_.add(new LevelMove((short)3,I_PROTECTION));
m1437custListLevelMove_.add(new LevelMove((short)7,I_ROULADE));
m1437custListLevelMove_.add(new LevelMove((short)10,I_SAISIE));
m1437custListLevelMove_.add(new LevelMove((short)14,I_PUIS_CACHEE));
m1437custListLevelMove_.add(new LevelMove((short)16,I_MUR_LUMIERE));
m1437custListLevelMove_.add(new LevelMove((short)19,I_CHARME));
m1437custListLevelMove_.add(new LevelMove((short)24,I_SOIN));
m1437custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1437custListLevelMove_.add(new LevelMove((short)28,I_EFFORT));
m1437custListLevelMove_.add(new LevelMove((short)31,I_PRESCIENCE));
m1437custListLevelMove_.add(new LevelMove((short)34,I_BALANCE));
m1437custListLevelMove_.add(new LevelMove((short)39,I_PSYKO));
m1437custListLevelMove_.add(new LevelMove((short)43,I_ECHANGE));
m1437custListLevelMove_.add(new LevelMove((short)50,I_ANTI_SOIN));
m1437custListLevelMove_.add(new LevelMove((short)53,I_ZONE_ETRANGE));
m1437pokemonData_.setLevMoves(m1437custListLevelMove_);
m1437pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1437stringList_=new StringList(new CollCapacity(3));
m1437stringList_.add(I_ENVELOCAPE);
m1437stringList_.add(I_GARDE_MAGIK);
m1437stringList_.add(I_REGE_FORCE);
m1437pokemonData_.setAbilities(m1437stringList_);
m1437stringList_=new StringList(new CollCapacity(14));
m1437stringList_.add(I_APRES_VOUS);
m1437stringList_.add(I_BALANCE);
m1437stringList_.add(I_BLABLA_DODO);
m1437stringList_.add(I_ECHANGE);
m1437stringList_.add(I_EFFORT);
m1437stringList_.add(I_GRAVITE);
m1437stringList_.add(I_IMITATION);
m1437stringList_.add(I_PSYKOUD_BOUL);
m1437stringList_.add(I_RAYON_SIGNAL);
m1437stringList_.add(I_REFLET_MAGIK);
m1437stringList_.add(I_RONFLEMENT);
m1437stringList_.add(I_SAISIE);
m1437stringList_.add(I_TOURMAGIK);
m1437stringList_.add(I_ZONE_ETRANGE);
m1437pokemonData_.setMoveTutors(m1437stringList_);
Shorts m1437shorts_=new Shorts(new CollCapacity(36));
m1437shorts_.add((short)70);
m1437shorts_.add((short)3);
m1437shorts_.add((short)4);
m1437shorts_.add((short)6);
m1437shorts_.add((short)10);
m1437shorts_.add((short)16);
m1437shorts_.add((short)17);
m1437shorts_.add((short)18);
m1437shorts_.add((short)20);
m1437shorts_.add((short)21);
m1437shorts_.add((short)25);
m1437shorts_.add((short)27);
m1437shorts_.add((short)29);
m1437shorts_.add((short)30);
m1437shorts_.add((short)32);
m1437shorts_.add((short)33);
m1437shorts_.add((short)39);
m1437shorts_.add((short)42);
m1437shorts_.add((short)44);
m1437shorts_.add((short)45);
m1437shorts_.add((short)48);
m1437shorts_.add((short)53);
m1437shorts_.add((short)63);
m1437shorts_.add((short)64);
m1437shorts_.add((short)73);
m1437shorts_.add((short)74);
m1437shorts_.add((short)77);
m1437shorts_.add((short)80);
m1437shorts_.add((short)88);
m1437shorts_.add((short)83);
m1437shorts_.add((short)85);
m1437shorts_.add((short)87);
m1437shorts_.add((short)90);
m1437shorts_.add((short)91);
m1437shorts_.add((short)92);
m1437shorts_.add((short)100);
m1437pokemonData_.setTechnicalMoves(m1437shorts_);
m1437pokemonData_.setBaseEvo(I_NUCLEOS);
StringMap<Evolution> m1437stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1437evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1437evolutionLevelSimple_.setLevel((short)41);
m1437stringMapEvolution_.addEntry(I_SYMBIOS,m1437evolutionLevelSimple_);
m1437pokemonData_.setEvolutions(m1437stringMapEvolution_);
m1437pokemonData_.setCatchingRate((short)100);
m1437pokemonData_.setHeight(Rate.newRate(R_3_5));
m1437pokemonData_.setExpEvo(ExpType.P);
m1437pokemonData_.setExpRate(130);
m1437stringList_=new StringList(new CollCapacity(1));
m1437stringList_.add(I_INDETERMINE);
m1437pokemonData_.setEggGroups(m1437stringList_);
m1437pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1437pokemonData_.setHappiness((short)70);
m1437pokemonData_.setHappinessHatch((short)140);
return m1437pokemonData_;
}
static PokemonData p414(){
PokemonData m1438pokemonData_=Instances.newPokemonData();
m1438pokemonData_.setWeight(Rate.newRate(R_13));
StringList m1438stringList_=new StringList(new CollCapacity(2));
m1438stringList_.add(I_FEU);
m1438stringList_.add(I_SPECTRE);
m1438pokemonData_.setTypes(m1438stringList_);
EnumMap<Statistic,StatBaseEv> m1438enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)40,(short)0));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)2));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1438enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)55,(short)0));
m1438pokemonData_.setStatistics(m1438enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1438custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1438custListLevelMove_.add(new LevelMove((short)1,I_FLAMMECHE));
m1438custListLevelMove_.add(new LevelMove((short)1,I_ETONNEMENT));
m1438custListLevelMove_.add(new LevelMove((short)3,I_LILLIPUT));
m1438custListLevelMove_.add(new LevelMove((short)5,I_PUREDPOIS));
m1438custListLevelMove_.add(new LevelMove((short)7,I_DANSEFLAMME));
m1438custListLevelMove_.add(new LevelMove((short)10,I_ONDE_FOLIE));
m1438custListLevelMove_.add(new LevelMove((short)13,I_OMBRE_NOCTURNE));
m1438custListLevelMove_.add(new LevelMove((short)16,I_FEU_FOLLET));
m1438custListLevelMove_.add(new LevelMove((short)20,I_REBONDIFEU));
m1438custListLevelMove_.add(new LevelMove((short)24,I_POSSESSIF));
m1438custListLevelMove_.add(new LevelMove((short)28,I_CHATIMENT));
m1438custListLevelMove_.add(new LevelMove((short)33,I_SOUVENIR));
m1438custListLevelMove_.add(new LevelMove((short)38,I_FEU_D_ENFER));
m1438custListLevelMove_.add(new LevelMove((short)45,I_MALEDICTION));
m1438custListLevelMove_.add(new LevelMove((short)53,I_BALL_OMBRE));
m1438custListLevelMove_.add(new LevelMove((short)61,I_BALANCE));
m1438custListLevelMove_.add(new LevelMove((short)69,I_SURCHAUFFE));
m1438pokemonData_.setLevMoves(m1438custListLevelMove_);
m1438pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1438stringList_=new StringList(new CollCapacity(3));
m1438stringList_.add(I_TORCHE);
m1438stringList_.add(I_CORPS_ARDENT);
m1438stringList_.add(I_MARQUE_OMBRE);
m1438pokemonData_.setAbilities(m1438stringList_);
m1438stringList_=new StringList(new CollCapacity(7));
m1438stringList_.add(I_BALANCE);
m1438stringList_.add(I_BLABLA_DODO);
m1438stringList_.add(I_CANICULE);
m1438stringList_.add(I_DEPIT);
m1438stringList_.add(I_RONFLEMENT);
m1438stringList_.add(I_TOURMAGIK);
m1438stringList_.add(I_VIBROBSCUR);
m1438pokemonData_.setMoveTutors(m1438stringList_);
Shorts m1438shorts_=new Shorts(new CollCapacity(36));
m1438shorts_.add((short)70);
m1438shorts_.add((short)4);
m1438shorts_.add((short)6);
m1438shorts_.add((short)10);
m1438shorts_.add((short)11);
m1438shorts_.add((short)12);
m1438shorts_.add((short)17);
m1438shorts_.add((short)20);
m1438shorts_.add((short)21);
m1438shorts_.add((short)22);
m1438shorts_.add((short)27);
m1438shorts_.add((short)29);
m1438shorts_.add((short)30);
m1438shorts_.add((short)32);
m1438shorts_.add((short)35);
m1438shorts_.add((short)38);
m1438shorts_.add((short)42);
m1438shorts_.add((short)43);
m1438shorts_.add((short)44);
m1438shorts_.add((short)45);
m1438shorts_.add((short)46);
m1438shorts_.add((short)48);
m1438shorts_.add((short)50);
m1438shorts_.add((short)53);
m1438shorts_.add((short)59);
m1438shorts_.add((short)61);
m1438shorts_.add((short)63);
m1438shorts_.add((short)66);
m1438shorts_.add((short)77);
m1438shorts_.add((short)97);
m1438shorts_.add((short)88);
m1438shorts_.add((short)85);
m1438shorts_.add((short)87);
m1438shorts_.add((short)90);
m1438shorts_.add((short)92);
m1438shorts_.add((short)100);
m1438pokemonData_.setTechnicalMoves(m1438shorts_);
m1438pokemonData_.setBaseEvo(I_FUNECIRE);
StringMap<Evolution> m1438stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionStoneSimple m1438evolutionStoneSimple_=Instances.newEvolutionStoneSimple();
m1438evolutionStoneSimple_.setStone(I_PIERRE_NUIT);
m1438stringMapEvolution_.addEntry(I_LUGULABRE,m1438evolutionStoneSimple_);
m1438pokemonData_.setEvolutions(m1438stringMapEvolution_);
m1438pokemonData_.setCatchingRate((short)90);
m1438pokemonData_.setHeight(Rate.newRate(R_3_5));
m1438pokemonData_.setExpEvo(ExpType.P);
m1438pokemonData_.setExpRate(130);
m1438stringList_=new StringList(new CollCapacity(1));
m1438stringList_.add(I_INDETERMINE);
m1438pokemonData_.setEggGroups(m1438stringList_);
m1438pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1438pokemonData_.setHappiness((short)70);
m1438pokemonData_.setHappinessHatch((short)140);
return m1438pokemonData_;
}
static PokemonData p415(){
PokemonData m1439pokemonData_=Instances.newPokemonData();
m1439pokemonData_.setWeight(Rate.newRate(R_3));
StringList m1439stringList_=new StringList(new CollCapacity(1));
m1439stringList_.add(I_FEE);
m1439pokemonData_.setTypes(m1439stringList_);
EnumMap<Statistic,StatBaseEv> m1439enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)25,(short)0));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)45,(short)0));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)1));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)28,(short)0));
m1439enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)15,(short)0));
m1439pokemonData_.setStatistics(m1439enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1439custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(7));
m1439custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1439custListLevelMove_.add(new LevelMove((short)1,I_CHARME));
m1439custListLevelMove_.add(new LevelMove((short)4,I_ENCORE));
m1439custListLevelMove_.add(new LevelMove((short)7,I_BERCEUSE));
m1439custListLevelMove_.add(new LevelMove((short)10,I_DOUX_BAISER));
m1439custListLevelMove_.add(new LevelMove((short)13,I_PHOTOCOPIE));
m1439custListLevelMove_.add(new LevelMove((short)16,I_FEUILLEMAGIK));
m1439pokemonData_.setLevMoves(m1439custListLevelMove_);
m1439pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1439stringList_=new StringList(new CollCapacity(2));
m1439stringList_.add(I_JOLI_SOURIRE);
m1439stringList_.add(I_GARDE_MAGIK);
m1439pokemonData_.setAbilities(m1439stringList_);
m1439stringList_=new StringList(new CollCapacity(50));
m1439stringList_.add(I_AMNESIE);
m1439stringList_.add(I_AROMATHERAPI);
m1439stringList_.add(I_BLABLA_DODO);
m1439stringList_.add(I_BOOST);
m1439stringList_.add(I_BOUL_ARMURE);
m1439stringList_.add(I_BROUHAHA);
m1439stringList_.add(I_CAGE_ECLAIR);
m1439stringList_.add(I_CLONAGE);
m1439stringList_.add(I_COGNOBIDON);
m1439stringList_.add(I_COPIE);
m1439stringList_.add(I_COUD_BOUE);
m1439stringList_.add(I_COUP_D_BOULE);
m1439stringList_.add(I_CROCO_LARME);
m1439stringList_.add(I_DAMOCLES);
m1439stringList_.add(I_DERNIERECOUR);
m1439stringList_.add(I_DEVOREVE);
m1439stringList_.add(I_E_COQUE);
m1439stringList_.add(I_EFFORT);
m1439stringList_.add(I_EXCUSE);
m1439stringList_.add(I_FRAPPE_ATLAS);
m1439stringList_.add(I_GRAVITE);
m1439stringList_.add(I_IMITATION);
m1439stringList_.add(I_IMPLORE);
m1439stringList_.add(I_METRONOME);
m1439stringList_.add(I_PLAQUAGE);
m1439stringList_.add(I_PSYKOUD_BOUL);
m1439stringList_.add(I_RAYON_SIGNAL);
m1439stringList_.add(I_REFLET_MAGIK);
m1439stringList_.add(I_RIPOSTE);
m1439stringList_.add(I_RONFLEMENT);
m1439stringList_.add(I_ROULADE);
m1439stringList_.add(I_TENACITE);
m1439stringList_.add(I_TOURMAGIK);
m1439stringList_.add(I_TREMPETTE);
m1439stringList_.add(I_ULTIMAPOING);
m1439stringList_.add(I_ULTIMAWASHI);
m1439stringList_.add(I_VANTARDISE);
m1439stringList_.add(I_VENT_GLACE);
m1439stringList_.add(I_VOEU);
m1439stringList_.add(I_APRES_VOUS);
m1439stringList_.add(I_CADEAU);
m1439stringList_.add(I_CHAMP_BRUMEUX);
m1439stringList_.add(I_CHATOUILLE);
m1439stringList_.add(I_COUP_D_MAIN);
m1439stringList_.add(I_FORCE_AJOUTEE);
m1439stringList_.add(I_MEGAPHONE);
m1439stringList_.add(I_QUEUE_DE_FER);
m1439stringList_.add(I_RECYCLAGE);
m1439stringList_.add(I_VIBRA_SOIN);
m1439stringList_.add(I_ZONE_ETRANGE);
m1439pokemonData_.setMoveTutors(m1439stringList_);
Shorts m1439shorts_=new Shorts(new CollCapacity(34));
m1439shorts_.add((short)70);
m1439shorts_.add((short)3);
m1439shorts_.add((short)6);
m1439shorts_.add((short)10);
m1439shorts_.add((short)11);
m1439shorts_.add((short)16);
m1439shorts_.add((short)17);
m1439shorts_.add((short)18);
m1439shorts_.add((short)20);
m1439shorts_.add((short)21);
m1439shorts_.add((short)22);
m1439shorts_.add((short)27);
m1439shorts_.add((short)28);
m1439shorts_.add((short)29);
m1439shorts_.add((short)30);
m1439shorts_.add((short)32);
m1439shorts_.add((short)33);
m1439shorts_.add((short)35);
m1439shorts_.add((short)38);
m1439shorts_.add((short)42);
m1439shorts_.add((short)44);
m1439shorts_.add((short)45);
m1439shorts_.add((short)48);
m1439shorts_.add((short)49);
m1439shorts_.add((short)56);
m1439shorts_.add((short)59);
m1439shorts_.add((short)73);
m1439shorts_.add((short)77);
m1439shorts_.add((short)88);
m1439shorts_.add((short)85);
m1439shorts_.add((short)86);
m1439shorts_.add((short)87);
m1439shorts_.add((short)90);
m1439shorts_.add((short)100);
m1439pokemonData_.setTechnicalMoves(m1439shorts_);
m1439pokemonData_.setBaseEvo(I_MELO);
StringMap<Evolution> m1439stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
m1439stringMapEvolution_.addEntry(I_MELOFEE,Instances.newEvolutionHappiness());
m1439pokemonData_.setEvolutions(m1439stringMapEvolution_);
m1439pokemonData_.setCatchingRate((short)150);
m1439pokemonData_.setHeight(Rate.newRate(R_3_10));
m1439pokemonData_.setExpEvo(ExpType.R);
m1439pokemonData_.setExpRate(44);
m1439stringList_=new StringList(new CollCapacity(1));
m1439stringList_.add(I_SANS_OEUF);
m1439pokemonData_.setEggGroups(m1439stringList_);
m1439pokemonData_.setHatchingSteps(LgInt.newLgInt(R_2560));
m1439pokemonData_.setHappiness((short)70);
m1439pokemonData_.setHappinessHatch((short)140);
return m1439pokemonData_;
}
static PokemonData p416(){
PokemonData m1440pokemonData_=Instances.newPokemonData();
m1440pokemonData_.setWeight(Rate.newRate(R_40));
StringList m1440stringList_=new StringList(new CollCapacity(1));
m1440stringList_.add(I_FEE);
m1440pokemonData_.setTypes(m1440stringList_);
EnumMap<Statistic,StatBaseEv> m1440enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)70,(short)0));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)0));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)0));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)95,(short)3));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)73,(short)0));
m1440enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1440pokemonData_.setStatistics(m1440enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1440custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(5));
m1440custListLevelMove_.add(new LevelMove((short)1,I_VOIX_ENJOLEUSE));
m1440custListLevelMove_.add(new LevelMove((short)1,I_TORGNOLES));
m1440custListLevelMove_.add(new LevelMove((short)1,I_METRONOME));
m1440custListLevelMove_.add(new LevelMove((short)1,I_LILLIPUT));
m1440custListLevelMove_.add(new LevelMove((short)1,I_BERCEUSE));
m1440pokemonData_.setLevMoves(m1440custListLevelMove_);
m1440pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1440stringList_=new StringList(new CollCapacity(2));
m1440stringList_.add(I_JOLI_SOURIRE);
m1440stringList_.add(I_GARDE_MAGIK);
m1440pokemonData_.setAbilities(m1440stringList_);
m1440stringList_=new StringList(new CollCapacity(56));
m1440stringList_.add(I_AMNESIE);
m1440stringList_.add(I_AROMATHERAPI);
m1440stringList_.add(I_BLABLA_DODO);
m1440stringList_.add(I_BOOST);
m1440stringList_.add(I_BOUL_ARMURE);
m1440stringList_.add(I_CAGE_ECLAIR);
m1440stringList_.add(I_CLONAGE);
m1440stringList_.add(I_COGNOBIDON);
m1440stringList_.add(I_COPIE);
m1440stringList_.add(I_COUD_BOUE);
m1440stringList_.add(I_COUP_D_BOULE);
m1440stringList_.add(I_CROCO_LARME);
m1440stringList_.add(I_DAMOCLES);
m1440stringList_.add(I_DERNIERECOUR);
m1440stringList_.add(I_DEVOREVE);
m1440stringList_.add(I_DYNAMOPOING);
m1440stringList_.add(I_E_COQUE);
m1440stringList_.add(I_EFFORT);
m1440stringList_.add(I_EXCUSE);
m1440stringList_.add(I_FRAPPE_ATLAS);
m1440stringList_.add(I_GLAS_DE_SOIN);
m1440stringList_.add(I_GRAVITE);
m1440stringList_.add(I_IMITATION);
m1440stringList_.add(I_IMPLORE);
m1440stringList_.add(I_METRONOME);
m1440stringList_.add(I_PLAQUAGE);
m1440stringList_.add(I_POING_DE_FEU);
m1440stringList_.add(I_POING_ECLAIR);
m1440stringList_.add(I_POINGLACE);
m1440stringList_.add(I_PSYKOUD_BOUL);
m1440stringList_.add(I_RAYON_SIGNAL);
m1440stringList_.add(I_REBOND);
m1440stringList_.add(I_REFLET_MAGIK);
m1440stringList_.add(I_RIPOSTE);
m1440stringList_.add(I_RONFLEMENT);
m1440stringList_.add(I_ROULADE);
m1440stringList_.add(I_SABOTAGE);
m1440stringList_.add(I_TENACITE);
m1440stringList_.add(I_TOURMAGIK);
m1440stringList_.add(I_TREMPETTE);
m1440stringList_.add(I_ULTIMAPOING);
m1440stringList_.add(I_ULTIMAWASHI);
m1440stringList_.add(I_VANTARDISE);
m1440stringList_.add(I_VENT_GLACE);
m1440stringList_.add(I_VOEU);
m1440stringList_.add(I_APRES_VOUS);
m1440stringList_.add(I_CADEAU);
m1440stringList_.add(I_COUP_D_MAIN);
m1440stringList_.add(I_MEGAPHONE);
m1440stringList_.add(I_PIEGE_DE_ROC);
m1440stringList_.add(I_QUEUE_DE_FER);
m1440stringList_.add(I_RECYCLAGE);
m1440stringList_.add(I_SAISIE);
m1440stringList_.add(I_VAMPIPOING);
m1440stringList_.add(I_ZONE_ETRANGE);
m1440stringList_.add(I_FORCE);
m1440pokemonData_.setMoveTutors(m1440stringList_);
Shorts m1440shorts_=new Shorts(new CollCapacity(1));
m1440shorts_.add((short)4);
m1440pokemonData_.setHiddenMoves(m1440shorts_);
m1440shorts_=new Shorts(new CollCapacity(48));
m1440shorts_.add((short)70);
m1440shorts_.add((short)94);
m1440shorts_.add((short)3);
m1440shorts_.add((short)4);
m1440shorts_.add((short)6);
m1440shorts_.add((short)10);
m1440shorts_.add((short)11);
m1440shorts_.add((short)13);
m1440shorts_.add((short)14);
m1440shorts_.add((short)15);
m1440shorts_.add((short)16);
m1440shorts_.add((short)17);
m1440shorts_.add((short)18);
m1440shorts_.add((short)20);
m1440shorts_.add((short)21);
m1440shorts_.add((short)22);
m1440shorts_.add((short)24);
m1440shorts_.add((short)25);
m1440shorts_.add((short)27);
m1440shorts_.add((short)28);
m1440shorts_.add((short)29);
m1440shorts_.add((short)30);
m1440shorts_.add((short)31);
m1440shorts_.add((short)32);
m1440shorts_.add((short)33);
m1440shorts_.add((short)35);
m1440shorts_.add((short)38);
m1440shorts_.add((short)42);
m1440shorts_.add((short)44);
m1440shorts_.add((short)45);
m1440shorts_.add((short)48);
m1440shorts_.add((short)49);
m1440shorts_.add((short)52);
m1440shorts_.add((short)56);
m1440shorts_.add((short)57);
m1440shorts_.add((short)59);
m1440shorts_.add((short)67);
m1440shorts_.add((short)68);
m1440shorts_.add((short)73);
m1440shorts_.add((short)77);
m1440shorts_.add((short)88);
m1440shorts_.add((short)85);
m1440shorts_.add((short)86);
m1440shorts_.add((short)87);
m1440shorts_.add((short)90);
m1440shorts_.add((short)98);
m1440shorts_.add((short)99);
m1440shorts_.add((short)100);
m1440pokemonData_.setTechnicalMoves(m1440shorts_);
m1440pokemonData_.setBaseEvo(I_MELO);
m1440pokemonData_.setCatchingRate((short)25);
m1440pokemonData_.setHeight(Rate.newRate(R_13_10));
m1440pokemonData_.setExpEvo(ExpType.R);
m1440pokemonData_.setExpRate(213);
m1440stringList_=new StringList(new CollCapacity(1));
m1440stringList_.add(I_FEE);
m1440pokemonData_.setEggGroups(m1440stringList_);
m1440pokemonData_.setHatchingSteps(LgInt.newLgInt(R_2560));
m1440pokemonData_.setHappiness((short)70);
m1440pokemonData_.setHappinessHatch((short)140);
return m1440pokemonData_;
}
static PokemonData p417(){
PokemonData m1441pokemonData_=Instances.newPokemonData();
m1441pokemonData_.setWeight(Rate.newRate(R_13_2));
StringList m1441stringList_=new StringList(new CollCapacity(2));
m1441stringList_.add(I_NORMAL);
m1441stringList_.add(I_PSY);
m1441pokemonData_.setTypes(m1441stringList_);
EnumMap<Statistic,StatBaseEv> m1441enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)77,(short)1));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)128,(short)0));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)128,(short)0));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)100,(short)0));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)77,(short)1));
m1441enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)90,(short)1));
m1441pokemonData_.setStatistics(m1441enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1441custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1441custListLevelMove_.add(new LevelMove((short)1,I_CHANT_CANON));
m1441custListLevelMove_.add(new LevelMove((short)6,I_VIVE_ATTAQUE));
m1441custListLevelMove_.add(new LevelMove((short)11,I_CHOC_MENTAL));
m1441custListLevelMove_.add(new LevelMove((short)16,I_BERCEUSE));
m1441custListLevelMove_.add(new LevelMove((short)21,I_DANSE_FOLLE));
m1441custListLevelMove_.add(new LevelMove((short)26,I_ACROBATIE));
m1441custListLevelMove_.add(new LevelMove((short)31,I_RAFALE_PSY));
m1441custListLevelMove_.add(new LevelMove((short)36,I_ECHO));
m1441custListLevelMove_.add(new LevelMove((short)43,I_DEMI_TOUR));
m1441custListLevelMove_.add(new LevelMove((short)50,I_REVEIL_FORCE));
m1441custListLevelMove_.add(new LevelMove((short)57,I_PSYKO));
m1441custListLevelMove_.add(new LevelMove((short)64,I_MEGAPHONE));
m1441custListLevelMove_.add(new LevelMove((short)71,I_IMITATION));
m1441custListLevelMove_.add(new LevelMove((short)78,I_CLOSE_COMBAT));
m1441custListLevelMove_.add(new LevelMove((short)85,I_REQUIEM));
m1441pokemonData_.setLevMoves(m1441custListLevelMove_);
m1441pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1441stringList_=new StringList(new CollCapacity(1));
m1441stringList_.add(I_SERENITE);
m1441pokemonData_.setAbilities(m1441stringList_);
m1441stringList_=new StringList(new CollCapacity(28));
m1441stringList_.add(I_CHANT_ANTIQUE);
m1441stringList_.add(I_BALAYAGE);
m1441stringList_.add(I_BLABLA_DODO);
m1441stringList_.add(I_BROUHAHA);
m1441stringList_.add(I_COUP_D_MAIN);
m1441stringList_.add(I_DERNIERECOUR);
m1441stringList_.add(I_DOUBLE_BAFFE);
m1441stringList_.add(I_ECHANGE);
m1441stringList_.add(I_GLAS_DE_SOIN);
m1441stringList_.add(I_GRAVITE);
m1441stringList_.add(I_IMITATION);
m1441stringList_.add(I_IMPLORE);
m1441stringList_.add(I_MEGAPHONE);
m1441stringList_.add(I_POING_DE_FEU);
m1441stringList_.add(I_POING_ECLAIR);
m1441stringList_.add(I_POINGLACE);
m1441stringList_.add(I_PSYKOUD_BOUL);
m1441stringList_.add(I_RAYON_SIGNAL);
m1441stringList_.add(I_RECYCLAGE);
m1441stringList_.add(I_REFLET_MAGIK);
m1441stringList_.add(I_RONFLEMENT);
m1441stringList_.add(I_SABOTAGE);
m1441stringList_.add(I_SAISIE);
m1441stringList_.add(I_TOURMAGIK);
m1441stringList_.add(I_VAMPIPOING);
m1441stringList_.add(I_ZONE_ETRANGE);
m1441stringList_.add(I_ZONE_MAGIQUE);
m1441stringList_.add(I_FORCE);
m1441pokemonData_.setMoveTutors(m1441stringList_);
Shorts m1441shorts_=new Shorts(new CollCapacity(1));
m1441shorts_.add((short)4);
m1441pokemonData_.setHiddenMoves(m1441shorts_);
m1441shorts_=new Shorts(new CollCapacity(49));
m1441shorts_.add((short)70);
m1441shorts_.add((short)94);
m1441shorts_.add((short)1);
m1441shorts_.add((short)3);
m1441shorts_.add((short)4);
m1441shorts_.add((short)6);
m1441shorts_.add((short)10);
m1441shorts_.add((short)11);
m1441shorts_.add((short)15);
m1441shorts_.add((short)16);
m1441shorts_.add((short)17);
m1441shorts_.add((short)18);
m1441shorts_.add((short)20);
m1441shorts_.add((short)21);
m1441shorts_.add((short)24);
m1441shorts_.add((short)25);
m1441shorts_.add((short)27);
m1441shorts_.add((short)29);
m1441shorts_.add((short)30);
m1441shorts_.add((short)31);
m1441shorts_.add((short)32);
m1441shorts_.add((short)42);
m1441shorts_.add((short)44);
m1441shorts_.add((short)47);
m1441shorts_.add((short)48);
m1441shorts_.add((short)49);
m1441shorts_.add((short)52);
m1441shorts_.add((short)53);
m1441shorts_.add((short)56);
m1441shorts_.add((short)57);
m1441shorts_.add((short)62);
m1441shorts_.add((short)63);
m1441shorts_.add((short)65);
m1441shorts_.add((short)66);
m1441shorts_.add((short)67);
m1441shorts_.add((short)68);
m1441shorts_.add((short)71);
m1441shorts_.add((short)73);
m1441shorts_.add((short)77);
m1441shorts_.add((short)88);
m1441shorts_.add((short)85);
m1441shorts_.add((short)86);
m1441shorts_.add((short)87);
m1441shorts_.add((short)89);
m1441shorts_.add((short)90);
m1441shorts_.add((short)92);
m1441shorts_.add((short)98);
m1441shorts_.add((short)99);
m1441shorts_.add((short)100);
m1441pokemonData_.setTechnicalMoves(m1441shorts_);
m1441pokemonData_.setBaseEvo(I_MELOETTA);
m1441pokemonData_.setCatchingRate((short)3);
m1441pokemonData_.setHeight(Rate.newRate(R_3_5));
m1441pokemonData_.setExpEvo(ExpType.L);
m1441pokemonData_.setExpRate(270);
m1441stringList_=new StringList(new CollCapacity(1));
m1441stringList_.add(I_SANS_OEUF);
m1441pokemonData_.setEggGroups(m1441stringList_);
m1441pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1441pokemonData_.setHappiness((short)70);
m1441pokemonData_.setHappinessHatch((short)140);
return m1441pokemonData_;
}
static PokemonData p418(){
PokemonData m1442pokemonData_=Instances.newPokemonData();
m1442pokemonData_.setWeight(Rate.newRate(R_15_2));
StringList m1442stringList_=new StringList(new CollCapacity(1));
m1442stringList_.add(I_FEE);
m1442pokemonData_.setTypes(m1442stringList_);
EnumMap<Statistic,StatBaseEv> m1442enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)45,(short)0));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)2));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)48,(short)0));
m1442enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)35,(short)0));
m1442pokemonData_.setStatistics(m1442enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1442custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(22));
m1442custListLevelMove_.add(new LevelMove((short)1,I_VOIX_ENJOLEUSE));
m1442custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1442custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1442custListLevelMove_.add(new LevelMove((short)1,I_ENCORE));
m1442custListLevelMove_.add(new LevelMove((short)7,I_BERCEUSE));
m1442custListLevelMove_.add(new LevelMove((short)10,I_TORGNOLES));
m1442custListLevelMove_.add(new LevelMove((short)13,I_BOUL_ARMURE));
m1442custListLevelMove_.add(new LevelMove((short)16,I_PAR_ICI));
m1442custListLevelMove_.add(new LevelMove((short)19,I_PASSE_CADEAU));
m1442custListLevelMove_.add(new LevelMove((short)22,I_REVEIL_FORCE));
m1442custListLevelMove_.add(new LevelMove((short)25,I_LILLIPUT));
m1442custListLevelMove_.add(new LevelMove((short)28,I_FORCE_AJOUTEE));
m1442custListLevelMove_.add(new LevelMove((short)31,I_METRONOME));
m1442custListLevelMove_.add(new LevelMove((short)34,I_FORCE_COSMIK));
m1442custListLevelMove_.add(new LevelMove((short)37,I_AIR_VEINARD));
m1442custListLevelMove_.add(new LevelMove((short)40,I_PLAQUAGE));
m1442custListLevelMove_.add(new LevelMove((short)43,I_RAYON_LUNE));
m1442custListLevelMove_.add(new LevelMove((short)46,I_POUVOIR_LUNAIRE));
m1442custListLevelMove_.add(new LevelMove((short)49,I_GRAVITE));
m1442custListLevelMove_.add(new LevelMove((short)50,I_POING_METEOR));
m1442custListLevelMove_.add(new LevelMove((short)55,I_VOEU_SOIN));
m1442custListLevelMove_.add(new LevelMove((short)58,I_APRES_VOUS));
m1442pokemonData_.setLevMoves(m1442custListLevelMove_);
m1442pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1442stringList_=new StringList(new CollCapacity(2));
m1442stringList_.add(I_JOLI_SOURIRE);
m1442stringList_.add(I_GARDE_MAGIK);
m1442pokemonData_.setAbilities(m1442stringList_);
m1442stringList_=new StringList(new CollCapacity(56));
m1442stringList_.add(I_AMNESIE);
m1442stringList_.add(I_AROMATHERAPI);
m1442stringList_.add(I_BLABLA_DODO);
m1442stringList_.add(I_BOOST);
m1442stringList_.add(I_BOUL_ARMURE);
m1442stringList_.add(I_CAGE_ECLAIR);
m1442stringList_.add(I_CLONAGE);
m1442stringList_.add(I_COGNOBIDON);
m1442stringList_.add(I_COPIE);
m1442stringList_.add(I_COUD_BOUE);
m1442stringList_.add(I_COUP_D_BOULE);
m1442stringList_.add(I_CROCO_LARME);
m1442stringList_.add(I_DAMOCLES);
m1442stringList_.add(I_DERNIERECOUR);
m1442stringList_.add(I_DEVOREVE);
m1442stringList_.add(I_DYNAMOPOING);
m1442stringList_.add(I_E_COQUE);
m1442stringList_.add(I_EFFORT);
m1442stringList_.add(I_EXCUSE);
m1442stringList_.add(I_FRAPPE_ATLAS);
m1442stringList_.add(I_GLAS_DE_SOIN);
m1442stringList_.add(I_GRAVITE);
m1442stringList_.add(I_IMITATION);
m1442stringList_.add(I_IMPLORE);
m1442stringList_.add(I_METRONOME);
m1442stringList_.add(I_PLAQUAGE);
m1442stringList_.add(I_POING_DE_FEU);
m1442stringList_.add(I_POING_ECLAIR);
m1442stringList_.add(I_POINGLACE);
m1442stringList_.add(I_PSYKOUD_BOUL);
m1442stringList_.add(I_RAYON_SIGNAL);
m1442stringList_.add(I_REBOND);
m1442stringList_.add(I_REFLET_MAGIK);
m1442stringList_.add(I_RIPOSTE);
m1442stringList_.add(I_RONFLEMENT);
m1442stringList_.add(I_ROULADE);
m1442stringList_.add(I_SABOTAGE);
m1442stringList_.add(I_TENACITE);
m1442stringList_.add(I_TOURMAGIK);
m1442stringList_.add(I_TREMPETTE);
m1442stringList_.add(I_ULTIMAPOING);
m1442stringList_.add(I_ULTIMAWASHI);
m1442stringList_.add(I_VANTARDISE);
m1442stringList_.add(I_VENT_GLACE);
m1442stringList_.add(I_VOEU);
m1442stringList_.add(I_APRES_VOUS);
m1442stringList_.add(I_CADEAU);
m1442stringList_.add(I_COUP_D_MAIN);
m1442stringList_.add(I_MEGAPHONE);
m1442stringList_.add(I_PIEGE_DE_ROC);
m1442stringList_.add(I_QUEUE_DE_FER);
m1442stringList_.add(I_RECYCLAGE);
m1442stringList_.add(I_SAISIE);
m1442stringList_.add(I_VAMPIPOING);
m1442stringList_.add(I_ZONE_ETRANGE);
m1442stringList_.add(I_FORCE);
m1442pokemonData_.setMoveTutors(m1442stringList_);
Shorts m1442shorts_=new Shorts(new CollCapacity(1));
m1442shorts_.add((short)4);
m1442pokemonData_.setHiddenMoves(m1442shorts_);
m1442shorts_=new Shorts(new CollCapacity(45));
m1442shorts_.add((short)70);
m1442shorts_.add((short)94);
m1442shorts_.add((short)3);
m1442shorts_.add((short)4);
m1442shorts_.add((short)6);
m1442shorts_.add((short)10);
m1442shorts_.add((short)11);
m1442shorts_.add((short)13);
m1442shorts_.add((short)14);
m1442shorts_.add((short)16);
m1442shorts_.add((short)17);
m1442shorts_.add((short)18);
m1442shorts_.add((short)20);
m1442shorts_.add((short)21);
m1442shorts_.add((short)22);
m1442shorts_.add((short)24);
m1442shorts_.add((short)25);
m1442shorts_.add((short)27);
m1442shorts_.add((short)28);
m1442shorts_.add((short)29);
m1442shorts_.add((short)30);
m1442shorts_.add((short)31);
m1442shorts_.add((short)32);
m1442shorts_.add((short)33);
m1442shorts_.add((short)35);
m1442shorts_.add((short)38);
m1442shorts_.add((short)42);
m1442shorts_.add((short)44);
m1442shorts_.add((short)45);
m1442shorts_.add((short)48);
m1442shorts_.add((short)49);
m1442shorts_.add((short)56);
m1442shorts_.add((short)57);
m1442shorts_.add((short)59);
m1442shorts_.add((short)67);
m1442shorts_.add((short)73);
m1442shorts_.add((short)77);
m1442shorts_.add((short)88);
m1442shorts_.add((short)85);
m1442shorts_.add((short)86);
m1442shorts_.add((short)87);
m1442shorts_.add((short)90);
m1442shorts_.add((short)98);
m1442shorts_.add((short)99);
m1442shorts_.add((short)100);
m1442pokemonData_.setTechnicalMoves(m1442shorts_);
m1442pokemonData_.setBaseEvo(I_MELO);
StringMap<Evolution> m1442stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionStoneSimple m1442evolutionStoneSimple_=Instances.newEvolutionStoneSimple();
m1442evolutionStoneSimple_.setStone(I_PIERRE_LUNE);
m1442stringMapEvolution_.addEntry(I_MELODELFE,m1442evolutionStoneSimple_);
m1442pokemonData_.setEvolutions(m1442stringMapEvolution_);
m1442pokemonData_.setCatchingRate((short)150);
m1442pokemonData_.setHeight(Rate.newRate(R_3_5));
m1442pokemonData_.setExpEvo(ExpType.R);
m1442pokemonData_.setExpRate(113);
m1442stringList_=new StringList(new CollCapacity(1));
m1442stringList_.add(I_FEE);
m1442pokemonData_.setEggGroups(m1442stringList_);
m1442pokemonData_.setHatchingSteps(LgInt.newLgInt(R_2560));
m1442pokemonData_.setHappiness((short)70);
m1442pokemonData_.setHappinessHatch((short)140);
return m1442pokemonData_;
}
static PokemonData p419(){
PokemonData m1443pokemonData_=Instances.newPokemonData();
m1443pokemonData_.setWeight(Rate.newRate(R_51_2));
StringList m1443stringList_=new StringList(new CollCapacity(1));
m1443stringList_.add(I_INSECTE);
m1443pokemonData_.setTypes(m1443stringList_);
EnumMap<Statistic,StatBaseEv> m1443enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)2));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)51,(short)0));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)77,(short)0));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)51,(short)0));
m1443enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)0));
m1443pokemonData_.setStatistics(m1443enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1443custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1443custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1443custListLevelMove_.add(new LevelMove((short)1,I_PATIENCE));
m1443custListLevelMove_.add(new LevelMove((short)10,I_TAILLADE));
m1443custListLevelMove_.add(new LevelMove((short)14,I_VAMPIRISME));
m1443custListLevelMove_.add(new LevelMove((short)18,I_BERCEUSE));
m1443custListLevelMove_.add(new LevelMove((short)22,I_PUISSANCE));
m1443custListLevelMove_.add(new LevelMove((short)26,I_TRANCHE));
m1443custListLevelMove_.add(new LevelMove((short)30,I_PLAIE_CROIX));
m1443custListLevelMove_.add(new LevelMove((short)34,I_GRINCEMENT));
m1443custListLevelMove_.add(new LevelMove((short)36,I_DARD_MORTEL));
m1443custListLevelMove_.add(new LevelMove((short)38,I_PROVOC));
m1443custListLevelMove_.add(new LevelMove((short)42,I_TRANCHE_NUIT));
m1443custListLevelMove_.add(new LevelMove((short)44,I_TOILE_GLUANTE));
m1443custListLevelMove_.add(new LevelMove((short)46,I_BOURDON));
m1443custListLevelMove_.add(new LevelMove((short)50,I_REQUIEM));
m1443pokemonData_.setLevMoves(m1443custListLevelMove_);
m1443pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1443stringList_=new StringList(new CollCapacity(1));
m1443stringList_.add(I_ESSAIM);
m1443pokemonData_.setAbilities(m1443stringList_);
m1443stringList_=new StringList(new CollCapacity(13));
m1443stringList_.add(I_BROUHAHA);
m1443stringList_.add(I_COUD_BOUE);
m1443stringList_.add(I_EFFORT);
m1443stringList_.add(I_PIQURE);
m1443stringList_.add(I_RONFLEMENT);
m1443stringList_.add(I_SABOTAGE);
m1443stringList_.add(I_SECRETION);
m1443stringList_.add(I_TAILLADE);
m1443stringList_.add(I_BLABLA_DODO);
m1443stringList_.add(I_GLAS_DE_SOIN);
m1443stringList_.add(I_MEGAPHONE);
m1443stringList_.add(I_COUPE);
m1443stringList_.add(I_FORCE);
m1443pokemonData_.setMoveTutors(m1443stringList_);
Shorts m1443shorts_=new Shorts(new CollCapacity(2));
m1443shorts_.add((short)1);
m1443shorts_.add((short)4);
m1443pokemonData_.setHiddenMoves(m1443shorts_);
m1443shorts_=new Shorts(new CollCapacity(31));
m1443shorts_.add((short)70);
m1443shorts_.add((short)94);
m1443shorts_.add((short)1);
m1443shorts_.add((short)6);
m1443shorts_.add((short)10);
m1443shorts_.add((short)11);
m1443shorts_.add((short)12);
m1443shorts_.add((short)15);
m1443shorts_.add((short)17);
m1443shorts_.add((short)18);
m1443shorts_.add((short)21);
m1443shorts_.add((short)27);
m1443shorts_.add((short)31);
m1443shorts_.add((short)32);
m1443shorts_.add((short)40);
m1443shorts_.add((short)42);
m1443shorts_.add((short)44);
m1443shorts_.add((short)45);
m1443shorts_.add((short)48);
m1443shorts_.add((short)49);
m1443shorts_.add((short)54);
m1443shorts_.add((short)68);
m1443shorts_.add((short)75);
m1443shorts_.add((short)76);
m1443shorts_.add((short)81);
m1443shorts_.add((short)88);
m1443shorts_.add((short)83);
m1443shorts_.add((short)87);
m1443shorts_.add((short)90);
m1443shorts_.add((short)98);
m1443shorts_.add((short)100);
m1443pokemonData_.setTechnicalMoves(m1443shorts_);
m1443pokemonData_.setBaseEvo(I_CRIKZIK);
m1443pokemonData_.setCatchingRate((short)45);
m1443pokemonData_.setHeight(Rate.newRate(R_1));
m1443pokemonData_.setExpEvo(ExpType.P);
m1443pokemonData_.setExpRate(134);
m1443stringList_=new StringList(new CollCapacity(1));
m1443stringList_.add(I_INSECTE);
m1443pokemonData_.setEggGroups(m1443stringList_);
m1443pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1443pokemonData_.setHappiness((short)70);
m1443pokemonData_.setHappinessHatch((short)140);
return m1443pokemonData_;
}
static PokemonData p420(){
PokemonData m1444pokemonData_=Instances.newPokemonData();
m1444pokemonData_.setWeight(Rate.newRate(R_53_2));
StringList m1444stringList_=new StringList(new CollCapacity(1));
m1444stringList_.add(I_PSY);
m1444pokemonData_.setTypes(m1444stringList_);
EnumMap<Statistic,StatBaseEv> m1444enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)65,(short)0));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)130,(short)2));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)95,(short)0));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1444enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)110,(short)0));
m1444pokemonData_.setStatistics(m1444enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1444custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1444custListLevelMove_.add(new LevelMove((short)1,I_MIMI_QUEUE));
m1444custListLevelMove_.add(new LevelMove((short)1,I_COUP_D_MAIN));
m1444custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1444custListLevelMove_.add(new LevelMove((short)5,I_JET_DE_SABLE));
m1444custListLevelMove_.add(new LevelMove((short)9,I_CHOC_MENTAL));
m1444custListLevelMove_.add(new LevelMove((short)13,I_VIVE_ATTAQUE));
m1444custListLevelMove_.add(new LevelMove((short)17,I_METEORES));
m1444custListLevelMove_.add(new LevelMove((short)20,I_RAFALE_PSY));
m1444custListLevelMove_.add(new LevelMove((short)25,I_PRESCIENCE));
m1444custListLevelMove_.add(new LevelMove((short)29,I_BOOST));
m1444custListLevelMove_.add(new LevelMove((short)33,I_AURORE));
m1444custListLevelMove_.add(new LevelMove((short)37,I_PSYKO));
m1444custListLevelMove_.add(new LevelMove((short)41,I_DERNIERECOUR));
m1444custListLevelMove_.add(new LevelMove((short)45,I_PERMUFORCE));
m1444pokemonData_.setLevMoves(m1444custListLevelMove_);
m1444pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1444stringList_=new StringList(new CollCapacity(1));
m1444stringList_.add(I_SYNCHRO);
m1444pokemonData_.setAbilities(m1444stringList_);
m1444stringList_=new StringList(new CollCapacity(35));
m1444stringList_.add(I_BAILLEMENT);
m1444stringList_.add(I_BLABLA_DODO);
m1444stringList_.add(I_BOOST);
m1444stringList_.add(I_CHARME);
m1444stringList_.add(I_CHATOUILLE);
m1444stringList_.add(I_CLONAGE);
m1444stringList_.add(I_COPIE);
m1444stringList_.add(I_COUD_BOUE);
m1444stringList_.add(I_COUP_D_BOULE);
m1444stringList_.add(I_CROCO_LARME);
m1444stringList_.add(I_DAMOCLES);
m1444stringList_.add(I_DERNIERECOUR);
m1444stringList_.add(I_DETECTION);
m1444stringList_.add(I_DEVOREVE);
m1444stringList_.add(I_FLEAU);
m1444stringList_.add(I_GLAS_DE_SOIN);
m1444stringList_.add(I_IMPLORE);
m1444stringList_.add(I_MALEDICTION);
m1444stringList_.add(I_METEORES);
m1444stringList_.add(I_PLAQUAGE);
m1444stringList_.add(I_PSYKOUD_BOUL);
m1444stringList_.add(I_RAYON_SIGNAL);
m1444stringList_.add(I_REFLET_MAGIK);
m1444stringList_.add(I_RELAIS);
m1444stringList_.add(I_RONFLEMENT);
m1444stringList_.add(I_TENACITE);
m1444stringList_.add(I_TOURMAGIK);
m1444stringList_.add(I_VANTARDISE);
m1444stringList_.add(I_VOEU);
m1444stringList_.add(I_COUP_D_MAIN);
m1444stringList_.add(I_ECHANGE);
m1444stringList_.add(I_MEGAPHONE);
m1444stringList_.add(I_QUEUE_DE_FER);
m1444stringList_.add(I_ZONE_MAGIQUE);
m1444stringList_.add(I_COUPE);
m1444pokemonData_.setMoveTutors(m1444stringList_);
Shorts m1444shorts_=new Shorts(new CollCapacity(1));
m1444shorts_.add((short)1);
m1444pokemonData_.setHiddenMoves(m1444shorts_);
m1444shorts_=new Shorts(new CollCapacity(33));
m1444shorts_.add((short)70);
m1444shorts_.add((short)3);
m1444shorts_.add((short)4);
m1444shorts_.add((short)6);
m1444shorts_.add((short)10);
m1444shorts_.add((short)11);
m1444shorts_.add((short)15);
m1444shorts_.add((short)16);
m1444shorts_.add((short)17);
m1444shorts_.add((short)18);
m1444shorts_.add((short)21);
m1444shorts_.add((short)27);
m1444shorts_.add((short)28);
m1444shorts_.add((short)29);
m1444shorts_.add((short)30);
m1444shorts_.add((short)32);
m1444shorts_.add((short)33);
m1444shorts_.add((short)42);
m1444shorts_.add((short)44);
m1444shorts_.add((short)45);
m1444shorts_.add((short)48);
m1444shorts_.add((short)49);
m1444shorts_.add((short)67);
m1444shorts_.add((short)68);
m1444shorts_.add((short)77);
m1444shorts_.add((short)88);
m1444shorts_.add((short)85);
m1444shorts_.add((short)86);
m1444shorts_.add((short)87);
m1444shorts_.add((short)90);
m1444shorts_.add((short)92);
m1444shorts_.add((short)99);
m1444shorts_.add((short)100);
m1444pokemonData_.setTechnicalMoves(m1444shorts_);
m1444pokemonData_.setBaseEvo(I_EVOLI);
m1444pokemonData_.setCatchingRate((short)45);
m1444pokemonData_.setHeight(Rate.newRate(R_9_10));
m1444pokemonData_.setExpEvo(ExpType.M);
m1444pokemonData_.setExpRate(184);
m1444stringList_=new StringList(new CollCapacity(1));
m1444stringList_.add(I_SOL);
m1444pokemonData_.setEggGroups(m1444stringList_);
m1444pokemonData_.setHatchingSteps(LgInt.newLgInt(R_8960));
m1444pokemonData_.setHappiness((short)70);
m1444pokemonData_.setHappinessHatch((short)140);
return m1444pokemonData_;
}
static PokemonData p421(){
PokemonData m1445pokemonData_=Instances.newPokemonData();
m1445pokemonData_.setWeight(Rate.newRate(R_18));
StringList m1445stringList_=new StringList(new CollCapacity(1));
m1445stringList_.add(I_PSY);
m1445pokemonData_.setTypes(m1445stringList_);
EnumMap<Statistic,StatBaseEv> m1445enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)45,(short)0));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)75,(short)0));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)85,(short)2));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1445enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)55,(short)0));
m1445pokemonData_.setStatistics(m1445enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1445custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1445custListLevelMove_.add(new LevelMove((short)1,I_CAMARADERIE));
m1445custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1445custListLevelMove_.add(new LevelMove((short)3,I_CHOC_MENTAL));
m1445custListLevelMove_.add(new LevelMove((short)7,I_CHATOUILLE));
m1445custListLevelMove_.add(new LevelMove((short)10,I_CROCO_LARME));
m1445custListLevelMove_.add(new LevelMove((short)14,I_TORGNOLES));
m1445custListLevelMove_.add(new LevelMove((short)16,I_RAFALE_PSY));
m1445custListLevelMove_.add(new LevelMove((short)19,I_EMBARGO));
m1445custListLevelMove_.add(new LevelMove((short)24,I_FEINTE));
m1445custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1445custListLevelMove_.add(new LevelMove((short)28,I_FLATTERIE));
m1445custListLevelMove_.add(new LevelMove((short)31,I_PRESCIENCE));
m1445custListLevelMove_.add(new LevelMove((short)34,I_ANTI_SOIN));
m1445custListLevelMove_.add(new LevelMove((short)39,I_PSYKO));
m1445custListLevelMove_.add(new LevelMove((short)43,I_LEVIKINESIE));
m1445custListLevelMove_.add(new LevelMove((short)50,I_CHARME));
m1445custListLevelMove_.add(new LevelMove((short)53,I_ZONE_MAGIQUE));
m1445pokemonData_.setLevMoves(m1445custListLevelMove_);
m1445pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1445stringList_=new StringList(new CollCapacity(1));
m1445stringList_.add(I_MARQUE_OMBRE);
m1445pokemonData_.setAbilities(m1445stringList_);
m1445stringList_=new StringList(new CollCapacity(17));
m1445stringList_.add(I_BLABLA_DODO);
m1445stringList_.add(I_BROUHAHA);
m1445stringList_.add(I_COUP_D_MAIN);
m1445stringList_.add(I_ECHANGE);
m1445stringList_.add(I_GLAS_DE_SOIN);
m1445stringList_.add(I_GRAVITE);
m1445stringList_.add(I_IMITATION);
m1445stringList_.add(I_IMPLORE);
m1445stringList_.add(I_PSYKOUD_BOUL);
m1445stringList_.add(I_RAYON_SIGNAL);
m1445stringList_.add(I_RECYCLAGE);
m1445stringList_.add(I_REFLET_MAGIK);
m1445stringList_.add(I_RONFLEMENT);
m1445stringList_.add(I_SAISIE);
m1445stringList_.add(I_TOURMAGIK);
m1445stringList_.add(I_TRICHERIE);
m1445stringList_.add(I_ZONE_MAGIQUE);
m1445pokemonData_.setMoveTutors(m1445stringList_);
Shorts m1445shorts_=new Shorts(new CollCapacity(39));
m1445shorts_.add((short)70);
m1445shorts_.add((short)3);
m1445shorts_.add((short)4);
m1445shorts_.add((short)6);
m1445shorts_.add((short)10);
m1445shorts_.add((short)12);
m1445shorts_.add((short)16);
m1445shorts_.add((short)17);
m1445shorts_.add((short)18);
m1445shorts_.add((short)20);
m1445shorts_.add((short)21);
m1445shorts_.add((short)24);
m1445shorts_.add((short)27);
m1445shorts_.add((short)29);
m1445shorts_.add((short)30);
m1445shorts_.add((short)32);
m1445shorts_.add((short)33);
m1445shorts_.add((short)39);
m1445shorts_.add((short)41);
m1445shorts_.add((short)42);
m1445shorts_.add((short)44);
m1445shorts_.add((short)45);
m1445shorts_.add((short)46);
m1445shorts_.add((short)48);
m1445shorts_.add((short)53);
m1445shorts_.add((short)56);
m1445shorts_.add((short)57);
m1445shorts_.add((short)63);
m1445shorts_.add((short)66);
m1445shorts_.add((short)73);
m1445shorts_.add((short)77);
m1445shorts_.add((short)80);
m1445shorts_.add((short)88);
m1445shorts_.add((short)85);
m1445shorts_.add((short)86);
m1445shorts_.add((short)87);
m1445shorts_.add((short)90);
m1445shorts_.add((short)92);
m1445shorts_.add((short)100);
m1445pokemonData_.setTechnicalMoves(m1445shorts_);
m1445pokemonData_.setBaseEvo(I_SCRUTELLA);
StringMap<Evolution> m1445stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1445evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1445evolutionLevelSimple_.setLevel((short)41);
m1445stringMapEvolution_.addEntry(I_SIDERELLA,m1445evolutionLevelSimple_);
m1445pokemonData_.setEvolutions(m1445stringMapEvolution_);
m1445pokemonData_.setCatchingRate((short)100);
m1445pokemonData_.setHeight(Rate.newRate(R_7_10));
m1445pokemonData_.setExpEvo(ExpType.P);
m1445pokemonData_.setExpRate(137);
m1445stringList_=new StringList(new CollCapacity(1));
m1445stringList_.add(I_HUMANOIDE);
m1445pokemonData_.setEggGroups(m1445stringList_);
m1445pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1445pokemonData_.setHappiness((short)70);
m1445pokemonData_.setHappinessHatch((short)140);
return m1445pokemonData_;
}
static PokemonData p422(){
PokemonData m1446pokemonData_=Instances.newPokemonData();
m1446pokemonData_.setWeight(Rate.newRate(R_550));
StringList m1446stringList_=new StringList(new CollCapacity(2));
m1446stringList_.add(I_ACIER);
m1446stringList_.add(I_PSY);
m1446pokemonData_.setTypes(m1446stringList_);
EnumMap<Statistic,StatBaseEv> m1446enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)135,(short)0));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)0));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)0));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)80,(short)0));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)130,(short)3));
m1446enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)0));
m1446pokemonData_.setStatistics(m1446enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1446custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1446custListLevelMove_.add(new LevelMove((short)1,I_VOL_MAGNETIK));
m1446custListLevelMove_.add(new LevelMove((short)1,I_BELIER));
m1446custListLevelMove_.add(new LevelMove((short)20,I_GRIFFE_ACIER));
m1446custListLevelMove_.add(new LevelMove((short)20,I_CHOC_MENTAL));
m1446custListLevelMove_.add(new LevelMove((short)23,I_POURSUITE));
m1446custListLevelMove_.add(new LevelMove((short)26,I_OEIL_MIRACLE));
m1446custListLevelMove_.add(new LevelMove((short)29,I_PSYKOUD_BOUL));
m1446custListLevelMove_.add(new LevelMove((short)32,I_PISTO_POING));
m1446custListLevelMove_.add(new LevelMove((short)35,I_GRIMACE));
m1446custListLevelMove_.add(new LevelMove((short)38,I_HATE));
m1446custListLevelMove_.add(new LevelMove((short)41,I_PSYKO));
m1446custListLevelMove_.add(new LevelMove((short)44,I_POING_METEOR));
m1446custListLevelMove_.add(new LevelMove((short)45,I_MARTO_POING));
m1446custListLevelMove_.add(new LevelMove((short)53,I_MUR_DE_FER));
m1446custListLevelMove_.add(new LevelMove((short)62,I_ULTRALASER));
m1446pokemonData_.setLevMoves(m1446custListLevelMove_);
m1446pokemonData_.setGenderRep(GenderRepartition.NO_GENDER);
m1446stringList_=new StringList(new CollCapacity(1));
m1446stringList_.add(I_CORPS_SAIN);
m1446pokemonData_.setAbilities(m1446stringList_);
m1446stringList_=new StringList(new CollCapacity(32));
m1446stringList_.add(I_BARRAGE);
m1446stringList_.add(I_BLABLA_DODO);
m1446stringList_.add(I_BOOST);
m1446stringList_.add(I_BOUL_ARMURE);
m1446stringList_.add(I_CLONAGE);
m1446stringList_.add(I_COPIE);
m1446stringList_.add(I_COUD_BOUE);
m1446stringList_.add(I_COUP_D_BOULE);
m1446stringList_.add(I_DAMOCLES);
m1446stringList_.add(I_DYNAMOPOING);
m1446stringList_.add(I_EBOULEMENT);
m1446stringList_.add(I_EXPLOSION);
m1446stringList_.add(I_GRAVITE);
m1446stringList_.add(I_METEORES);
m1446stringList_.add(I_MUR_DE_FER);
m1446stringList_.add(I_PLAQUAGE);
m1446stringList_.add(I_POING_ECLAIR);
m1446stringList_.add(I_POINGLACE);
m1446stringList_.add(I_PSYKOUD_BOUL);
m1446stringList_.add(I_RAYON_SIGNAL);
m1446stringList_.add(I_RONFLEMENT);
m1446stringList_.add(I_ROULADE);
m1446stringList_.add(I_TAILLADE);
m1446stringList_.add(I_TENACITE);
m1446stringList_.add(I_TETE_DE_FER);
m1446stringList_.add(I_TOURMAGIK);
m1446stringList_.add(I_VANTARDISE);
m1446stringList_.add(I_VENT_GLACE);
m1446stringList_.add(I_VOL_MAGNETIK);
m1446stringList_.add(I_PIEGE_DE_ROC);
m1446stringList_.add(I_COUPE);
m1446stringList_.add(I_FORCE);
m1446pokemonData_.setMoveTutors(m1446stringList_);
Shorts m1446shorts_=new Shorts(new CollCapacity(2));
m1446shorts_.add((short)1);
m1446shorts_.add((short)4);
m1446pokemonData_.setHiddenMoves(m1446shorts_);
m1446shorts_=new Shorts(new CollCapacity(40));
m1446shorts_.add((short)70);
m1446shorts_.add((short)94);
m1446shorts_.add((short)1);
m1446shorts_.add((short)3);
m1446shorts_.add((short)6);
m1446shorts_.add((short)10);
m1446shorts_.add((short)11);
m1446shorts_.add((short)15);
m1446shorts_.add((short)16);
m1446shorts_.add((short)17);
m1446shorts_.add((short)18);
m1446shorts_.add((short)21);
m1446shorts_.add((short)26);
m1446shorts_.add((short)27);
m1446shorts_.add((short)29);
m1446shorts_.add((short)30);
m1446shorts_.add((short)31);
m1446shorts_.add((short)32);
m1446shorts_.add((short)33);
m1446shorts_.add((short)36);
m1446shorts_.add((short)37);
m1446shorts_.add((short)39);
m1446shorts_.add((short)40);
m1446shorts_.add((short)42);
m1446shorts_.add((short)44);
m1446shorts_.add((short)48);
m1446shorts_.add((short)64);
m1446shorts_.add((short)68);
m1446shorts_.add((short)69);
m1446shorts_.add((short)74);
m1446shorts_.add((short)77);
m1446shorts_.add((short)78);
m1446shorts_.add((short)80);
m1446shorts_.add((short)88);
m1446shorts_.add((short)86);
m1446shorts_.add((short)87);
m1446shorts_.add((short)90);
m1446shorts_.add((short)91);
m1446shorts_.add((short)98);
m1446shorts_.add((short)100);
m1446pokemonData_.setTechnicalMoves(m1446shorts_);
m1446pokemonData_.setBaseEvo(I_TERHAL);
m1446pokemonData_.setCatchingRate((short)3);
m1446pokemonData_.setHeight(Rate.newRate(R_8_5));
m1446pokemonData_.setExpEvo(ExpType.L);
m1446pokemonData_.setExpRate(270);
m1446stringList_=new StringList(new CollCapacity(1));
m1446stringList_.add(I_MINERAL);
m1446pokemonData_.setEggGroups(m1446stringList_);
m1446pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1446pokemonData_.setHappiness((short)70);
m1446pokemonData_.setHappinessHatch((short)140);
return m1446pokemonData_;
}
static PokemonData p423(){
PokemonData m1447pokemonData_=Instances.newPokemonData();
m1447pokemonData_.setWeight(Rate.newRate(R_4));
StringList m1447stringList_=new StringList(new CollCapacity(1));
m1447stringList_.add(I_NORMAL);
m1447pokemonData_.setTypes(m1447stringList_);
EnumMap<Statistic,StatBaseEv> m1447enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)48,(short)0));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)48,(short)0));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)48,(short)0));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)48,(short)1));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)48,(short)0));
m1447enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)48,(short)0));
m1447pokemonData_.setStatistics(m1447enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1447custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(1));
m1447custListLevelMove_.add(new LevelMove((short)1,I_MORPHING));
m1447pokemonData_.setLevMoves(m1447custListLevelMove_);
m1447pokemonData_.setGenderRep(GenderRepartition.NO_GENDER);
m1447stringList_=new StringList(new CollCapacity(1));
m1447stringList_.add(I_ECHAUFFEMENT);
m1447pokemonData_.setAbilities(m1447stringList_);
m1447pokemonData_.setBaseEvo(I_METAMORPH);
m1447pokemonData_.setCatchingRate((short)35);
m1447pokemonData_.setHeight(Rate.newRate(R_3_10));
m1447pokemonData_.setExpEvo(ExpType.M);
m1447pokemonData_.setExpRate(101);
m1447stringList_=new StringList(new CollCapacity(1));
m1447stringList_.add(I_METAMORPH);
m1447pokemonData_.setEggGroups(m1447stringList_);
m1447pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1447pokemonData_.setHappiness((short)70);
m1447pokemonData_.setHappinessHatch((short)140);
return m1447pokemonData_;
}
static PokemonData p424(){
PokemonData m1448pokemonData_=Instances.newPokemonData();
m1448pokemonData_.setWeight(Rate.newRate(R_405_2));
StringList m1448stringList_=new StringList(new CollCapacity(2));
m1448stringList_.add(I_ACIER);
m1448stringList_.add(I_PSY);
m1448pokemonData_.setTypes(m1448stringList_);
EnumMap<Statistic,StatBaseEv> m1448enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)75,(short)0));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)80,(short)0));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)2));
m1448enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)50,(short)0));
m1448pokemonData_.setStatistics(m1448enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1448custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1448custListLevelMove_.add(new LevelMove((short)1,I_VOL_MAGNETIK));
m1448custListLevelMove_.add(new LevelMove((short)1,I_BELIER));
m1448custListLevelMove_.add(new LevelMove((short)20,I_GRIFFE_ACIER));
m1448custListLevelMove_.add(new LevelMove((short)20,I_CHOC_MENTAL));
m1448custListLevelMove_.add(new LevelMove((short)23,I_POURSUITE));
m1448custListLevelMove_.add(new LevelMove((short)26,I_OEIL_MIRACLE));
m1448custListLevelMove_.add(new LevelMove((short)29,I_PSYKOUD_BOUL));
m1448custListLevelMove_.add(new LevelMove((short)32,I_PISTO_POING));
m1448custListLevelMove_.add(new LevelMove((short)35,I_GRIMACE));
m1448custListLevelMove_.add(new LevelMove((short)38,I_HATE));
m1448custListLevelMove_.add(new LevelMove((short)41,I_PSYKO));
m1448custListLevelMove_.add(new LevelMove((short)44,I_POING_METEOR));
m1448custListLevelMove_.add(new LevelMove((short)47,I_MUR_DE_FER));
m1448custListLevelMove_.add(new LevelMove((short)50,I_ULTRALASER));
m1448pokemonData_.setLevMoves(m1448custListLevelMove_);
m1448pokemonData_.setGenderRep(GenderRepartition.NO_GENDER);
m1448stringList_=new StringList(new CollCapacity(1));
m1448stringList_.add(I_CORPS_SAIN);
m1448pokemonData_.setAbilities(m1448stringList_);
m1448stringList_=new StringList(new CollCapacity(31));
m1448stringList_.add(I_BLABLA_DODO);
m1448stringList_.add(I_BOOST);
m1448stringList_.add(I_BOUL_ARMURE);
m1448stringList_.add(I_CLONAGE);
m1448stringList_.add(I_COPIE);
m1448stringList_.add(I_COUD_BOUE);
m1448stringList_.add(I_COUP_D_BOULE);
m1448stringList_.add(I_DAMOCLES);
m1448stringList_.add(I_DYNAMOPOING);
m1448stringList_.add(I_EBOULEMENT);
m1448stringList_.add(I_EXPLOSION);
m1448stringList_.add(I_GRAVITE);
m1448stringList_.add(I_METEORES);
m1448stringList_.add(I_MUR_DE_FER);
m1448stringList_.add(I_PLAQUAGE);
m1448stringList_.add(I_POING_ECLAIR);
m1448stringList_.add(I_POINGLACE);
m1448stringList_.add(I_PSYKOUD_BOUL);
m1448stringList_.add(I_RAYON_SIGNAL);
m1448stringList_.add(I_RONFLEMENT);
m1448stringList_.add(I_ROULADE);
m1448stringList_.add(I_TAILLADE);
m1448stringList_.add(I_TENACITE);
m1448stringList_.add(I_TETE_DE_FER);
m1448stringList_.add(I_TOURMAGIK);
m1448stringList_.add(I_VANTARDISE);
m1448stringList_.add(I_VENT_GLACE);
m1448stringList_.add(I_VOL_MAGNETIK);
m1448stringList_.add(I_PIEGE_DE_ROC);
m1448stringList_.add(I_COUPE);
m1448stringList_.add(I_FORCE);
m1448pokemonData_.setMoveTutors(m1448stringList_);
Shorts m1448shorts_=new Shorts(new CollCapacity(2));
m1448shorts_.add((short)1);
m1448shorts_.add((short)4);
m1448pokemonData_.setHiddenMoves(m1448shorts_);
m1448shorts_=new Shorts(new CollCapacity(39));
m1448shorts_.add((short)70);
m1448shorts_.add((short)94);
m1448shorts_.add((short)1);
m1448shorts_.add((short)3);
m1448shorts_.add((short)6);
m1448shorts_.add((short)10);
m1448shorts_.add((short)11);
m1448shorts_.add((short)15);
m1448shorts_.add((short)16);
m1448shorts_.add((short)17);
m1448shorts_.add((short)18);
m1448shorts_.add((short)21);
m1448shorts_.add((short)26);
m1448shorts_.add((short)27);
m1448shorts_.add((short)29);
m1448shorts_.add((short)30);
m1448shorts_.add((short)31);
m1448shorts_.add((short)32);
m1448shorts_.add((short)33);
m1448shorts_.add((short)36);
m1448shorts_.add((short)37);
m1448shorts_.add((short)39);
m1448shorts_.add((short)40);
m1448shorts_.add((short)42);
m1448shorts_.add((short)44);
m1448shorts_.add((short)48);
m1448shorts_.add((short)64);
m1448shorts_.add((short)69);
m1448shorts_.add((short)74);
m1448shorts_.add((short)77);
m1448shorts_.add((short)78);
m1448shorts_.add((short)80);
m1448shorts_.add((short)88);
m1448shorts_.add((short)86);
m1448shorts_.add((short)87);
m1448shorts_.add((short)90);
m1448shorts_.add((short)91);
m1448shorts_.add((short)98);
m1448shorts_.add((short)100);
m1448pokemonData_.setTechnicalMoves(m1448shorts_);
m1448pokemonData_.setBaseEvo(I_TERHAL);
StringMap<Evolution> m1448stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1448evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1448evolutionLevelSimple_.setLevel((short)45);
m1448stringMapEvolution_.addEntry(I_METALOSSE,m1448evolutionLevelSimple_);
m1448pokemonData_.setEvolutions(m1448stringMapEvolution_);
m1448pokemonData_.setCatchingRate((short)3);
m1448pokemonData_.setHeight(Rate.newRate(R_6_5));
m1448pokemonData_.setExpEvo(ExpType.L);
m1448pokemonData_.setExpRate(147);
m1448stringList_=new StringList(new CollCapacity(1));
m1448stringList_.add(I_MINERAL);
m1448pokemonData_.setEggGroups(m1448stringList_);
m1448pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1448pokemonData_.setHappiness((short)70);
m1448pokemonData_.setHappinessHatch((short)140);
return m1448pokemonData_;
}
static PokemonData p425(){
PokemonData m1449pokemonData_=Instances.newPokemonData();
m1449pokemonData_.setWeight(Rate.newRate(R_4));
StringList m1449stringList_=new StringList(new CollCapacity(1));
m1449stringList_.add(I_PSY);
m1449pokemonData_.setTypes(m1449stringList_);
EnumMap<Statistic,StatBaseEv> m1449enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)0));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)100,(short)0));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)100,(short)3));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)0));
m1449enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)100,(short)0));
m1449pokemonData_.setStatistics(m1449enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1449custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1449custListLevelMove_.add(new LevelMove((short)1,I_COPIE_TYPE));
m1449custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1449custListLevelMove_.add(new LevelMove((short)1,I_MORPHING));
m1449custListLevelMove_.add(new LevelMove((short)10,I_ULTIMAPOING));
m1449custListLevelMove_.add(new LevelMove((short)20,I_METRONOME));
m1449custListLevelMove_.add(new LevelMove((short)30,I_PSYKO));
m1449custListLevelMove_.add(new LevelMove((short)40,I_BOUCLIER));
m1449custListLevelMove_.add(new LevelMove((short)50,I_POUV_ANTIQUE));
m1449custListLevelMove_.add(new LevelMove((short)60,I_AMNESIE));
m1449custListLevelMove_.add(new LevelMove((short)70,I_MOI_D_ABORD));
m1449custListLevelMove_.add(new LevelMove((short)80,I_RELAIS));
m1449custListLevelMove_.add(new LevelMove((short)90,I_MACHINATION));
m1449custListLevelMove_.add(new LevelMove((short)100,I_AURASPHERE));
m1449pokemonData_.setLevMoves(m1449custListLevelMove_);
m1449pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1449stringList_=new StringList(new CollCapacity(1));
m1449stringList_.add(I_SYNCHRO);
m1449pokemonData_.setAbilities(m1449stringList_);
m1449stringList_=new StringList(new CollCapacity(98));
m1449stringList_.add(I_BALANCE);
m1449stringList_.add(I_BALAYAGE);
m1449stringList_.add(I_BARRAGE);
m1449stringList_.add(I_BLABLA_DODO);
m1449stringList_.add(I_BOOST);
m1449stringList_.add(I_BOUL_ARMURE);
m1449stringList_.add(I_BROUHAHA);
m1449stringList_.add(I_CAGE_ECLAIR);
m1449stringList_.add(I_CANICULE);
m1449stringList_.add(I_CANON_GRAINE);
m1449stringList_.add(I_CLONAGE);
m1449stringList_.add(I_COLERE);
m1449stringList_.add(I_COPIE);
m1449stringList_.add(I_COUD_BOUE);
m1449stringList_.add(I_COUP_BAS);
m1449stringList_.add(I_COUP_D_BOULE);
m1449stringList_.add(I_CROC_FATAL);
m1449stringList_.add(I_DAMOCLES);
m1449stringList_.add(I_DANSE_LAMES);
m1449stringList_.add(I_DEPIT);
m1449stringList_.add(I_DERNIERECOUR);
m1449stringList_.add(I_DETRICANON);
m1449stringList_.add(I_DEVOREVE);
m1449stringList_.add(I_DYNAMOPOING);
m1449stringList_.add(I_E_COQUE);
m1449stringList_.add(I_EBOULEMENT);
m1449stringList_.add(I_EFFORT);
m1449stringList_.add(I_EXPLOSION);
m1449stringList_.add(I_FRAPPE_ATLAS);
m1449stringList_.add(I_GLAS_DE_SOIN);
m1449stringList_.add(I_GRAVITE);
m1449stringList_.add(I_HYDROQUEUE);
m1449stringList_.add(I_IMITATION);
m1449stringList_.add(I_METEORES);
m1449stringList_.add(I_METRONOME);
m1449stringList_.add(I_MUR_DE_FER);
m1449stringList_.add(I_ONDE_VIDE);
m1449stringList_.add(I_OURAGAN);
m1449stringList_.add(I_PIQUE);
m1449stringList_.add(I_PIQURE);
m1449stringList_.add(I_PLAQUAGE);
m1449stringList_.add(I_PLONGEE);
m1449stringList_.add(I_POING_DE_FEU);
m1449stringList_.add(I_POING_ECLAIR);
m1449stringList_.add(I_POINGLACE);
m1449stringList_.add(I_POUV_ANTIQUE);
m1449stringList_.add(I_PSYKOUD_BOUL);
m1449stringList_.add(I_RAYON_SIGNAL);
m1449stringList_.add(I_REBOND);
m1449stringList_.add(I_REFLET_MAGIK);
m1449stringList_.add(I_RIPOSTE);
m1449stringList_.add(I_RONFLEMENT);
m1449stringList_.add(I_ROULADE);
m1449stringList_.add(I_SABOTAGE);
m1449stringList_.add(I_SECRETION);
m1449stringList_.add(I_SOUCIGRAINE);
m1449stringList_.add(I_SUC_DIGESTIF);
m1449stringList_.add(I_SURPUISSANCE);
m1449stringList_.add(I_SYNTHESE);
m1449stringList_.add(I_TAILLADE);
m1449stringList_.add(I_TELLURIFORCE);
m1449stringList_.add(I_TENACITE);
m1449stringList_.add(I_TETE_DE_FER);
m1449stringList_.add(I_TOURMAGIK);
m1449stringList_.add(I_TRANCH_AIR);
m1449stringList_.add(I_ULTIMAPOING);
m1449stringList_.add(I_ULTIMAWASHI);
m1449stringList_.add(I_VANTARDISE);
m1449stringList_.add(I_VENT_ARRIERE);
m1449stringList_.add(I_VENT_GLACE);
m1449stringList_.add(I_VENT_MAUVAIS);
m1449stringList_.add(I_VOL_MAGNETIK);
m1449stringList_.add(I_APRES_VOUS);
m1449stringList_.add(I_ATTERRISSAGE);
m1449stringList_.add(I_COUP_D_MAIN);
m1449stringList_.add(I_DOUBLE_BAFFE);
m1449stringList_.add(I_DRACOCHOC);
m1449stringList_.add(I_ECHANGE);
m1449stringList_.add(I_ETREINTE);
m1449stringList_.add(I_GIGA_SANGSUE);
m1449stringList_.add(I_IMPLORE);
m1449stringList_.add(I_MEGAPHONE);
m1449stringList_.add(I_PIEGE_DE_ROC);
m1449stringList_.add(I_QUEUE_DE_FER);
m1449stringList_.add(I_RECYCLAGE);
m1449stringList_.add(I_SAISIE);
m1449stringList_.add(I_TOILE_ELEK);
m1449stringList_.add(I_TRICHERIE);
m1449stringList_.add(I_TUNNELIER);
m1449stringList_.add(I_VAMPIPOING);
m1449stringList_.add(I_VIBROBSCUR);
m1449stringList_.add(I_ZONE_ETRANGE);
m1449stringList_.add(I_ZONE_MAGIQUE);
m1449stringList_.add(I_COUPE);
m1449stringList_.add(I_ENVOL);
m1449stringList_.add(I_SURF);
m1449stringList_.add(I_FORCE);
m1449stringList_.add(I_SIPHON);
m1449pokemonData_.setMoveTutors(m1449stringList_);
Shorts m1449shorts_=new Shorts(new CollCapacity(5));
m1449shorts_.add((short)1);
m1449shorts_.add((short)2);
m1449shorts_.add((short)3);
m1449shorts_.add((short)4);
m1449shorts_.add((short)5);
m1449pokemonData_.setHiddenMoves(m1449shorts_);
m1449shorts_=new Shorts(new CollCapacity(100));
m1449shorts_.add((short)70);
m1449shorts_.add((short)94);
m1449shorts_.add((short)1);
m1449shorts_.add((short)2);
m1449shorts_.add((short)3);
m1449shorts_.add((short)4);
m1449shorts_.add((short)5);
m1449shorts_.add((short)6);
m1449shorts_.add((short)7);
m1449shorts_.add((short)8);
m1449shorts_.add((short)9);
m1449shorts_.add((short)10);
m1449shorts_.add((short)11);
m1449shorts_.add((short)12);
m1449shorts_.add((short)13);
m1449shorts_.add((short)14);
m1449shorts_.add((short)15);
m1449shorts_.add((short)16);
m1449shorts_.add((short)17);
m1449shorts_.add((short)18);
m1449shorts_.add((short)19);
m1449shorts_.add((short)20);
m1449shorts_.add((short)21);
m1449shorts_.add((short)22);
m1449shorts_.add((short)23);
m1449shorts_.add((short)24);
m1449shorts_.add((short)25);
m1449shorts_.add((short)26);
m1449shorts_.add((short)27);
m1449shorts_.add((short)28);
m1449shorts_.add((short)29);
m1449shorts_.add((short)30);
m1449shorts_.add((short)31);
m1449shorts_.add((short)32);
m1449shorts_.add((short)33);
m1449shorts_.add((short)34);
m1449shorts_.add((short)35);
m1449shorts_.add((short)36);
m1449shorts_.add((short)37);
m1449shorts_.add((short)38);
m1449shorts_.add((short)39);
m1449shorts_.add((short)40);
m1449shorts_.add((short)41);
m1449shorts_.add((short)42);
m1449shorts_.add((short)43);
m1449shorts_.add((short)44);
m1449shorts_.add((short)45);
m1449shorts_.add((short)46);
m1449shorts_.add((short)51);
m1449shorts_.add((short)47);
m1449shorts_.add((short)48);
m1449shorts_.add((short)49);
m1449shorts_.add((short)50);
m1449shorts_.add((short)52);
m1449shorts_.add((short)53);
m1449shorts_.add((short)54);
m1449shorts_.add((short)55);
m1449shorts_.add((short)56);
m1449shorts_.add((short)57);
m1449shorts_.add((short)58);
m1449shorts_.add((short)59);
m1449shorts_.add((short)60);
m1449shorts_.add((short)61);
m1449shorts_.add((short)62);
m1449shorts_.add((short)63);
m1449shorts_.add((short)64);
m1449shorts_.add((short)65);
m1449shorts_.add((short)66);
m1449shorts_.add((short)67);
m1449shorts_.add((short)68);
m1449shorts_.add((short)69);
m1449shorts_.add((short)71);
m1449shorts_.add((short)72);
m1449shorts_.add((short)73);
m1449shorts_.add((short)74);
m1449shorts_.add((short)75);
m1449shorts_.add((short)76);
m1449shorts_.add((short)77);
m1449shorts_.add((short)78);
m1449shorts_.add((short)97);
m1449shorts_.add((short)79);
m1449shorts_.add((short)80);
m1449shorts_.add((short)81);
m1449shorts_.add((short)88);
m1449shorts_.add((short)82);
m1449shorts_.add((short)83);
m1449shorts_.add((short)84);
m1449shorts_.add((short)85);
m1449shorts_.add((short)86);
m1449shorts_.add((short)87);
m1449shorts_.add((short)89);
m1449shorts_.add((short)90);
m1449shorts_.add((short)91);
m1449shorts_.add((short)92);
m1449shorts_.add((short)93);
m1449shorts_.add((short)95);
m1449shorts_.add((short)96);
m1449shorts_.add((short)98);
m1449shorts_.add((short)99);
m1449shorts_.add((short)100);
m1449pokemonData_.setTechnicalMoves(m1449shorts_);
m1449pokemonData_.setBaseEvo(I_MEW);
m1449pokemonData_.setCatchingRate((short)45);
m1449pokemonData_.setHeight(Rate.newRate(R_2_5));
m1449pokemonData_.setExpEvo(ExpType.P);
m1449pokemonData_.setExpRate(270);
m1449stringList_=new StringList(new CollCapacity(1));
m1449stringList_.add(I_SANS_OEUF);
m1449pokemonData_.setEggGroups(m1449stringList_);
m1449pokemonData_.setHatchingSteps(LgInt.newLgInt(R_30720));
m1449pokemonData_.setHappiness((short)70);
m1449pokemonData_.setHappinessHatch((short)140);
return m1449pokemonData_;
}
static PokemonData p426(){
PokemonData m1450pokemonData_=Instances.newPokemonData();
m1450pokemonData_.setWeight(Rate.newRate(R_122));
StringList m1450stringList_=new StringList(new CollCapacity(1));
m1450stringList_.add(I_PSY);
m1450pokemonData_.setTypes(m1450stringList_);
EnumMap<Statistic,StatBaseEv> m1450enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)110,(short)0));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)154,(short)3));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)0));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)106,(short)0));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)90,(short)0));
m1450enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)130,(short)0));
m1450pokemonData_.setStatistics(m1450enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1450custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1450custListLevelMove_.add(new LevelMove((short)1,I_ENTRAVE));
m1450custListLevelMove_.add(new LevelMove((short)1,I_CHOC_MENTAL));
m1450custListLevelMove_.add(new LevelMove((short)1,I_RUNE_PROTECT));
m1450custListLevelMove_.add(new LevelMove((short)8,I_METEORES));
m1450custListLevelMove_.add(new LevelMove((short)15,I_PRESCIENCE));
m1450custListLevelMove_.add(new LevelMove((short)22,I_BOOST));
m1450custListLevelMove_.add(new LevelMove((short)29,I_OEIL_MIRACLE));
m1450custListLevelMove_.add(new LevelMove((short)36,I_COUPE_PSYCHO));
m1450custListLevelMove_.add(new LevelMove((short)43,I_PERMUFORCE));
m1450custListLevelMove_.add(new LevelMove((short)43,I_PERMUGARDE));
m1450custListLevelMove_.add(new LevelMove((short)50,I_SOIN));
m1450custListLevelMove_.add(new LevelMove((short)57,I_PSYKO));
m1450custListLevelMove_.add(new LevelMove((short)64,I_BOUCLIER));
m1450custListLevelMove_.add(new LevelMove((short)70,I_AURASPHERE));
m1450custListLevelMove_.add(new LevelMove((short)79,I_AMNESIE));
m1450custListLevelMove_.add(new LevelMove((short)86,I_BRUME));
m1450custListLevelMove_.add(new LevelMove((short)93,I_MOI_D_ABORD));
m1450custListLevelMove_.add(new LevelMove((short)100,I_FRAPPE_PSY));
m1450pokemonData_.setLevMoves(m1450custListLevelMove_);
m1450pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1450stringList_=new StringList(new CollCapacity(1));
m1450stringList_.add(I_PRESSION);
m1450pokemonData_.setAbilities(m1450stringList_);
m1450stringList_=new StringList(new CollCapacity(41));
m1450stringList_.add(I_BALAYAGE);
m1450stringList_.add(I_BLABLA_DODO);
m1450stringList_.add(I_BOOST);
m1450stringList_.add(I_CAGE_ECLAIR);
m1450stringList_.add(I_CLONAGE);
m1450stringList_.add(I_COPIE);
m1450stringList_.add(I_COUD_BOUE);
m1450stringList_.add(I_COUP_D_BOULE);
m1450stringList_.add(I_DAMOCLES);
m1450stringList_.add(I_DEVOREVE);
m1450stringList_.add(I_DYNAMOPOING);
m1450stringList_.add(I_FRAPPE_ATLAS);
m1450stringList_.add(I_GRAVITE);
m1450stringList_.add(I_HYDROQUEUE);
m1450stringList_.add(I_IMITATION);
m1450stringList_.add(I_METEORES);
m1450stringList_.add(I_METRONOME);
m1450stringList_.add(I_PLAQUAGE);
m1450stringList_.add(I_POING_DE_FEU);
m1450stringList_.add(I_POING_ECLAIR);
m1450stringList_.add(I_POINGLACE);
m1450stringList_.add(I_PSYKOUD_BOUL);
m1450stringList_.add(I_RAYON_SIGNAL);
m1450stringList_.add(I_REFLET_MAGIK);
m1450stringList_.add(I_RIPOSTE);
m1450stringList_.add(I_RONFLEMENT);
m1450stringList_.add(I_TENACITE);
m1450stringList_.add(I_TOURMAGIK);
m1450stringList_.add(I_ULTIMAPOING);
m1450stringList_.add(I_ULTIMAWASHI);
m1450stringList_.add(I_VANTARDISE);
m1450stringList_.add(I_VENT_GLACE);
m1450stringList_.add(I_ECHANGE);
m1450stringList_.add(I_QUEUE_DE_FER);
m1450stringList_.add(I_RECYCLAGE);
m1450stringList_.add(I_SAISIE);
m1450stringList_.add(I_TRICHERIE);
m1450stringList_.add(I_VAMPIPOING);
m1450stringList_.add(I_ZONE_ETRANGE);
m1450stringList_.add(I_ZONE_MAGIQUE);
m1450stringList_.add(I_FORCE);
m1450pokemonData_.setMoveTutors(m1450stringList_);
Shorts m1450shorts_=new Shorts(new CollCapacity(1));
m1450shorts_.add((short)4);
m1450pokemonData_.setHiddenMoves(m1450shorts_);
m1450shorts_=new Shorts(new CollCapacity(60));
m1450shorts_.add((short)70);
m1450shorts_.add((short)94);
m1450shorts_.add((short)3);
m1450shorts_.add((short)4);
m1450shorts_.add((short)6);
m1450shorts_.add((short)7);
m1450shorts_.add((short)8);
m1450shorts_.add((short)10);
m1450shorts_.add((short)11);
m1450shorts_.add((short)12);
m1450shorts_.add((short)13);
m1450shorts_.add((short)14);
m1450shorts_.add((short)15);
m1450shorts_.add((short)16);
m1450shorts_.add((short)17);
m1450shorts_.add((short)18);
m1450shorts_.add((short)20);
m1450shorts_.add((short)21);
m1450shorts_.add((short)22);
m1450shorts_.add((short)24);
m1450shorts_.add((short)25);
m1450shorts_.add((short)26);
m1450shorts_.add((short)27);
m1450shorts_.add((short)29);
m1450shorts_.add((short)30);
m1450shorts_.add((short)31);
m1450shorts_.add((short)32);
m1450shorts_.add((short)33);
m1450shorts_.add((short)35);
m1450shorts_.add((short)37);
m1450shorts_.add((short)38);
m1450shorts_.add((short)39);
m1450shorts_.add((short)40);
m1450shorts_.add((short)41);
m1450shorts_.add((short)42);
m1450shorts_.add((short)44);
m1450shorts_.add((short)47);
m1450shorts_.add((short)48);
m1450shorts_.add((short)52);
m1450shorts_.add((short)53);
m1450shorts_.add((short)56);
m1450shorts_.add((short)57);
m1450shorts_.add((short)59);
m1450shorts_.add((short)61);
m1450shorts_.add((short)63);
m1450shorts_.add((short)68);
m1450shorts_.add((short)71);
m1450shorts_.add((short)73);
m1450shorts_.add((short)77);
m1450shorts_.add((short)78);
m1450shorts_.add((short)80);
m1450shorts_.add((short)88);
m1450shorts_.add((short)84);
m1450shorts_.add((short)85);
m1450shorts_.add((short)86);
m1450shorts_.add((short)87);
m1450shorts_.add((short)90);
m1450shorts_.add((short)92);
m1450shorts_.add((short)98);
m1450shorts_.add((short)100);
m1450pokemonData_.setTechnicalMoves(m1450shorts_);
m1450pokemonData_.setBaseEvo(I_MEWTWO);
m1450pokemonData_.setCatchingRate((short)3);
m1450pokemonData_.setHeight(Rate.newRate(R_2));
m1450pokemonData_.setExpEvo(ExpType.L);
m1450pokemonData_.setExpRate(306);
m1450stringList_=new StringList(new CollCapacity(1));
m1450stringList_.add(I_SANS_OEUF);
m1450pokemonData_.setEggGroups(m1450stringList_);
m1450pokemonData_.setHatchingSteps(LgInt.newLgInt(R_30720));
m1450pokemonData_.setHappiness((short)70);
m1450pokemonData_.setHappinessHatch((short)140);
return m1450pokemonData_;
}
static PokemonData p427(){
PokemonData m1451pokemonData_=Instances.newPokemonData();
m1451pokemonData_.setWeight(Rate.newRate(R_31));
StringList m1451stringList_=new StringList(new CollCapacity(1));
m1451stringList_.add(I_POISON);
m1451pokemonData_.setTypes(m1451stringList_);
EnumMap<Statistic,StatBaseEv> m1451enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)50,(short)0));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)62,(short)0));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)62,(short)0));
m1451enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)1));
m1451pokemonData_.setStatistics(m1451enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1451custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1451custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1451custListLevelMove_.add(new LevelMove((short)1,I_GAZ_TOXIK));
m1451custListLevelMove_.add(new LevelMove((short)3,I_RECYCLAGE));
m1451custListLevelMove_.add(new LevelMove((short)7,I_PICS_TOXIK));
m1451custListLevelMove_.add(new LevelMove((short)12,I_BOMBE_ACIDE));
m1451custListLevelMove_.add(new LevelMove((short)14,I_TORGNOLES));
m1451custListLevelMove_.add(new LevelMove((short)18,I_DETRITUS));
m1451custListLevelMove_.add(new LevelMove((short)23,I_STOCKAGE));
m1451custListLevelMove_.add(new LevelMove((short)23,I_AVALE));
m1451custListLevelMove_.add(new LevelMove((short)25,I_BELIER));
m1451custListLevelMove_.add(new LevelMove((short)29,I_BOMB_BEURK));
m1451custListLevelMove_.add(new LevelMove((short)34,I_BAIN_DE_SMOG));
m1451custListLevelMove_.add(new LevelMove((short)36,I_TOXIK));
m1451custListLevelMove_.add(new LevelMove((short)40,I_AMNESIE));
m1451custListLevelMove_.add(new LevelMove((short)42,I_ERUCTATION));
m1451custListLevelMove_.add(new LevelMove((short)45,I_DETRICANON));
m1451custListLevelMove_.add(new LevelMove((short)47,I_EXPLOSION));
m1451pokemonData_.setLevMoves(m1451custListLevelMove_);
m1451pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1451stringList_=new StringList(new CollCapacity(3));
m1451stringList_.add(I_PUANTEUR);
m1451stringList_.add(I_GLUE);
m1451stringList_.add(I_BOOM_FINAL);
m1451pokemonData_.setAbilities(m1451stringList_);
m1451stringList_=new StringList(new CollCapacity(18));
m1451stringList_.add(I_BOULE_ROC);
m1451stringList_.add(I_BUEE_NOIRE);
m1451stringList_.add(I_DESTRUCTION);
m1451stringList_.add(I_JET_DE_SABLE);
m1451stringList_.add(I_LANCE_BOUE);
m1451stringList_.add(I_MALEDICTION);
m1451stringList_.add(I_PICOTS);
m1451stringList_.add(I_ROULADE);
m1451stringList_.add(I_BALANCE);
m1451stringList_.add(I_BLABLA_DODO);
m1451stringList_.add(I_CANON_GRAINE);
m1451stringList_.add(I_DEPIT);
m1451stringList_.add(I_DETRICANON);
m1451stringList_.add(I_GIGA_SANGSUE);
m1451stringList_.add(I_RECYCLAGE);
m1451stringList_.add(I_RONFLEMENT);
m1451stringList_.add(I_VAMPIPOING);
m1451stringList_.add(I_VIBROBSCUR);
m1451pokemonData_.setMoveTutors(m1451stringList_);
Shorts m1451shorts_=new Shorts(new CollCapacity(24));
m1451shorts_.add((short)6);
m1451shorts_.add((short)9);
m1451shorts_.add((short)10);
m1451shorts_.add((short)11);
m1451shorts_.add((short)17);
m1451shorts_.add((short)18);
m1451shorts_.add((short)21);
m1451shorts_.add((short)27);
m1451shorts_.add((short)32);
m1451shorts_.add((short)34);
m1451shorts_.add((short)36);
m1451shorts_.add((short)42);
m1451shorts_.add((short)44);
m1451shorts_.add((short)45);
m1451shorts_.add((short)46);
m1451shorts_.add((short)48);
m1451shorts_.add((short)64);
m1451shorts_.add((short)66);
m1451shorts_.add((short)97);
m1451shorts_.add((short)88);
m1451shorts_.add((short)83);
m1451shorts_.add((short)87);
m1451shorts_.add((short)90);
m1451shorts_.add((short)100);
m1451pokemonData_.setTechnicalMoves(m1451shorts_);
m1451pokemonData_.setBaseEvo(I_MIAMIASME);
StringMap<Evolution> m1451stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1451evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1451evolutionLevelSimple_.setLevel((short)36);
m1451stringMapEvolution_.addEntry(I_MIASMAX,m1451evolutionLevelSimple_);
m1451pokemonData_.setEvolutions(m1451stringMapEvolution_);
m1451pokemonData_.setCatchingRate((short)190);
m1451pokemonData_.setHeight(Rate.newRate(R_3_5));
m1451pokemonData_.setExpEvo(ExpType.M);
m1451pokemonData_.setExpRate(66);
m1451stringList_=new StringList(new CollCapacity(1));
m1451stringList_.add(I_MINERAL);
m1451pokemonData_.setEggGroups(m1451stringList_);
m1451pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1451pokemonData_.setHappiness((short)70);
m1451pokemonData_.setHappinessHatch((short)140);
return m1451pokemonData_;
}
static PokemonData p428(){
PokemonData m1452pokemonData_=Instances.newPokemonData();
m1452pokemonData_.setWeight(Rate.newRate(R_21_5));
StringList m1452stringList_=new StringList(new CollCapacity(1));
m1452stringList_.add(I_NORMAL);
m1452pokemonData_.setTypes(m1452stringList_);
EnumMap<Statistic,StatBaseEv> m1452enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)45,(short)0));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)40,(short)0));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)35,(short)0));
m1452enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)90,(short)1));
m1452pokemonData_.setStatistics(m1452enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1452custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1452custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1452custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1452custListLevelMove_.add(new LevelMove((short)6,I_MORSURE));
m1452custListLevelMove_.add(new LevelMove((short)9,I_BLUFF));
m1452custListLevelMove_.add(new LevelMove((short)14,I_COMBO_GRIFFE));
m1452custListLevelMove_.add(new LevelMove((short)17,I_GRINCEMENT));
m1452custListLevelMove_.add(new LevelMove((short)22,I_FEINTE));
m1452custListLevelMove_.add(new LevelMove((short)25,I_PROVOC));
m1452custListLevelMove_.add(new LevelMove((short)30,I_JACKPOT));
m1452custListLevelMove_.add(new LevelMove((short)33,I_TRANCHE));
m1452custListLevelMove_.add(new LevelMove((short)38,I_MACHINATION));
m1452custListLevelMove_.add(new LevelMove((short)41,I_ASSURANCE));
m1452custListLevelMove_.add(new LevelMove((short)46,I_SEDUCTION));
m1452custListLevelMove_.add(new LevelMove((short)49,I_TRANCHE_NUIT));
m1452custListLevelMove_.add(new LevelMove((short)50,I_RUSE));
m1452pokemonData_.setLevMoves(m1452custListLevelMove_);
m1452pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1452stringList_=new StringList(new CollCapacity(1));
m1452stringList_.add(I_TECHNICIEN);
m1452pokemonData_.setAbilities(m1452stringList_);
m1452stringList_=new StringList(new CollCapacity(36));
m1452stringList_.add(I_AMNESIE);
m1452stringList_.add(I_ASSISTANCE);
m1452stringList_.add(I_BLABLA_DODO);
m1452stringList_.add(I_BOOST);
m1452stringList_.add(I_BOUL_ARMURE);
m1452stringList_.add(I_CANON_GRAINE);
m1452stringList_.add(I_CHARME);
m1452stringList_.add(I_CLONAGE);
m1452stringList_.add(I_COPIE);
m1452stringList_.add(I_COUD_BOUE);
m1452stringList_.add(I_COUP_D_BOULE);
m1452stringList_.add(I_DAMOCLES);
m1452stringList_.add(I_DEPIT);
m1452stringList_.add(I_DERNIERECOUR);
m1452stringList_.add(I_DETRICANON);
m1452stringList_.add(I_DEVOREVE);
m1452stringList_.add(I_FLAIR);
m1452stringList_.add(I_FLEAU);
m1452stringList_.add(I_HYPNOSE);
m1452stringList_.add(I_METEORES);
m1452stringList_.add(I_MIMI_QUEUE);
m1452stringList_.add(I_PLAQUAGE);
m1452stringList_.add(I_PUNITION);
m1452stringList_.add(I_RONFLEMENT);
m1452stringList_.add(I_SABOTAGE);
m1452stringList_.add(I_TENACITE);
m1452stringList_.add(I_VANTARDISE);
m1452stringList_.add(I_VENT_GLACE);
m1452stringList_.add(I_BROUHAHA);
m1452stringList_.add(I_IMPLORE);
m1452stringList_.add(I_MEGAPHONE);
m1452stringList_.add(I_QUEUE_DE_FER);
m1452stringList_.add(I_SAISIE);
m1452stringList_.add(I_TRICHERIE);
m1452stringList_.add(I_VIBROBSCUR);
m1452stringList_.add(I_COUPE);
m1452pokemonData_.setMoveTutors(m1452stringList_);
Shorts m1452shorts_=new Shorts(new CollCapacity(1));
m1452shorts_.add((short)1);
m1452pokemonData_.setHiddenMoves(m1452shorts_);
m1452shorts_=new Shorts(new CollCapacity(34));
m1452shorts_.add((short)70);
m1452shorts_.add((short)1);
m1452shorts_.add((short)6);
m1452shorts_.add((short)10);
m1452shorts_.add((short)11);
m1452shorts_.add((short)12);
m1452shorts_.add((short)17);
m1452shorts_.add((short)18);
m1452shorts_.add((short)21);
m1452shorts_.add((short)24);
m1452shorts_.add((short)25);
m1452shorts_.add((short)27);
m1452shorts_.add((short)28);
m1452shorts_.add((short)30);
m1452shorts_.add((short)32);
m1452shorts_.add((short)40);
m1452shorts_.add((short)41);
m1452shorts_.add((short)42);
m1452shorts_.add((short)44);
m1452shorts_.add((short)45);
m1452shorts_.add((short)46);
m1452shorts_.add((short)48);
m1452shorts_.add((short)49);
m1452shorts_.add((short)65);
m1452shorts_.add((short)66);
m1452shorts_.add((short)67);
m1452shorts_.add((short)77);
m1452shorts_.add((short)97);
m1452shorts_.add((short)88);
m1452shorts_.add((short)85);
m1452shorts_.add((short)87);
m1452shorts_.add((short)89);
m1452shorts_.add((short)90);
m1452shorts_.add((short)100);
m1452pokemonData_.setTechnicalMoves(m1452shorts_);
m1452pokemonData_.setBaseEvo(I_MIAOUSS);
StringMap<Evolution> m1452stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1452evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1452evolutionLevelSimple_.setLevel((short)28);
m1452stringMapEvolution_.addEntry(I_PERSIAN,m1452evolutionLevelSimple_);
m1452pokemonData_.setEvolutions(m1452stringMapEvolution_);
m1452pokemonData_.setCatchingRate((short)255);
m1452pokemonData_.setHeight(Rate.newRate(R_2_5));
m1452pokemonData_.setExpEvo(ExpType.M);
m1452pokemonData_.setExpRate(58);
m1452stringList_=new StringList(new CollCapacity(1));
m1452stringList_.add(I_SOL);
m1452pokemonData_.setEggGroups(m1452stringList_);
m1452pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1452pokemonData_.setHappiness((short)70);
m1452pokemonData_.setHappinessHatch((short)140);
return m1452pokemonData_;
}
static PokemonData p429(){
PokemonData m1453pokemonData_=Instances.newPokemonData();
m1453pokemonData_.setWeight(Rate.newRate(R_1073_10));
StringList m1453stringList_=new StringList(new CollCapacity(1));
m1453stringList_.add(I_POISON);
m1453pokemonData_.setTypes(m1453stringList_);
EnumMap<Statistic,StatBaseEv> m1453enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)95,(short)2));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)82,(short)0));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)80,(short)0));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)82,(short)0));
m1453enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)75,(short)0));
m1453pokemonData_.setStatistics(m1453enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1453custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1453custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1453custListLevelMove_.add(new LevelMove((short)1,I_GAZ_TOXIK));
m1453custListLevelMove_.add(new LevelMove((short)3,I_RECYCLAGE));
m1453custListLevelMove_.add(new LevelMove((short)7,I_PICS_TOXIK));
m1453custListLevelMove_.add(new LevelMove((short)12,I_BOMBE_ACIDE));
m1453custListLevelMove_.add(new LevelMove((short)14,I_TORGNOLES));
m1453custListLevelMove_.add(new LevelMove((short)18,I_DETRITUS));
m1453custListLevelMove_.add(new LevelMove((short)23,I_STOCKAGE));
m1453custListLevelMove_.add(new LevelMove((short)23,I_AVALE));
m1453custListLevelMove_.add(new LevelMove((short)25,I_PLAQUAGE));
m1453custListLevelMove_.add(new LevelMove((short)29,I_BOMB_BEURK));
m1453custListLevelMove_.add(new LevelMove((short)34,I_BAIN_DE_SMOG));
m1453custListLevelMove_.add(new LevelMove((short)39,I_TOXIK));
m1453custListLevelMove_.add(new LevelMove((short)46,I_AMNESIE));
m1453custListLevelMove_.add(new LevelMove((short)49,I_ERUCTATION));
m1453custListLevelMove_.add(new LevelMove((short)54,I_DETRICANON));
m1453custListLevelMove_.add(new LevelMove((short)59,I_EXPLOSION));
m1453pokemonData_.setLevMoves(m1453custListLevelMove_);
m1453pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1453stringList_=new StringList(new CollCapacity(3));
m1453stringList_.add(I_PUANTEUR);
m1453stringList_.add(I_ARMUROUILLEE);
m1453stringList_.add(I_BOOM_FINAL);
m1453pokemonData_.setAbilities(m1453stringList_);
m1453stringList_=new StringList(new CollCapacity(10));
m1453stringList_.add(I_BALANCE);
m1453stringList_.add(I_BLABLA_DODO);
m1453stringList_.add(I_CANON_GRAINE);
m1453stringList_.add(I_DEPIT);
m1453stringList_.add(I_DETRICANON);
m1453stringList_.add(I_GIGA_SANGSUE);
m1453stringList_.add(I_RECYCLAGE);
m1453stringList_.add(I_RONFLEMENT);
m1453stringList_.add(I_VAMPIPOING);
m1453stringList_.add(I_VIBROBSCUR);
m1453pokemonData_.setMoveTutors(m1453stringList_);
Shorts m1453shorts_=new Shorts(new CollCapacity(33));
m1453shorts_.add((short)6);
m1453shorts_.add((short)9);
m1453shorts_.add((short)10);
m1453shorts_.add((short)11);
m1453shorts_.add((short)15);
m1453shorts_.add((short)17);
m1453shorts_.add((short)18);
m1453shorts_.add((short)21);
m1453shorts_.add((short)22);
m1453shorts_.add((short)23);
m1453shorts_.add((short)24);
m1453shorts_.add((short)27);
m1453shorts_.add((short)29);
m1453shorts_.add((short)32);
m1453shorts_.add((short)34);
m1453shorts_.add((short)36);
m1453shorts_.add((short)42);
m1453shorts_.add((short)44);
m1453shorts_.add((short)45);
m1453shorts_.add((short)46);
m1453shorts_.add((short)48);
m1453shorts_.add((short)52);
m1453shorts_.add((short)56);
m1453shorts_.add((short)64);
m1453shorts_.add((short)66);
m1453shorts_.add((short)68);
m1453shorts_.add((short)69);
m1453shorts_.add((short)97);
m1453shorts_.add((short)88);
m1453shorts_.add((short)83);
m1453shorts_.add((short)87);
m1453shorts_.add((short)90);
m1453shorts_.add((short)100);
m1453pokemonData_.setTechnicalMoves(m1453shorts_);
m1453pokemonData_.setBaseEvo(I_MIAMIASME);
m1453pokemonData_.setCatchingRate((short)60);
m1453pokemonData_.setHeight(Rate.newRate(R_19_10));
m1453pokemonData_.setExpEvo(ExpType.M);
m1453pokemonData_.setExpRate(166);
m1453stringList_=new StringList(new CollCapacity(1));
m1453stringList_.add(I_MINERAL);
m1453pokemonData_.setEggGroups(m1453stringList_);
m1453pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1453pokemonData_.setHappiness((short)70);
m1453pokemonData_.setHappinessHatch((short)140);
return m1453pokemonData_;
}
static PokemonData p430(){
PokemonData m1454pokemonData_=Instances.newPokemonData();
m1454pokemonData_.setWeight(Rate.newRate(R_67_2));
StringList m1454stringList_=new StringList(new CollCapacity(2));
m1454stringList_.add(I_INSECTE);
m1454stringList_.add(I_POISON);
m1454pokemonData_.setTypes(m1454stringList_);
EnumMap<Statistic,StatBaseEv> m1454enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)90,(short)2));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1454enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1454pokemonData_.setStatistics(m1454enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1454custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1454custListLevelMove_.add(new LevelMove((short)1,I_DARD_MORTEL));
m1454custListLevelMove_.add(new LevelMove((short)1,I_PIEGE_VENIN));
m1454custListLevelMove_.add(new LevelMove((short)1,I_PIQURE));
m1454custListLevelMove_.add(new LevelMove((short)1,I_SECRETION));
m1454custListLevelMove_.add(new LevelMove((short)1,I_DARD_VENIN));
m1454custListLevelMove_.add(new LevelMove((short)5,I_GRIMACE));
m1454custListLevelMove_.add(new LevelMove((short)8,I_CONSTRICTION));
m1454custListLevelMove_.add(new LevelMove((short)12,I_VAMPIRISME));
m1454custListLevelMove_.add(new LevelMove((short)15,I_OMBRE_NOCTURNE));
m1454custListLevelMove_.add(new LevelMove((short)19,I_OMBRE_PORTEE));
m1454custListLevelMove_.add(new LevelMove((short)23,I_COMBO_GRIFFE));
m1454custListLevelMove_.add(new LevelMove((short)28,I_COUP_BAS));
m1454custListLevelMove_.add(new LevelMove((short)32,I_TOILE));
m1454custListLevelMove_.add(new LevelMove((short)37,I_HATE));
m1454custListLevelMove_.add(new LevelMove((short)41,I_DARD_NUEE));
m1454custListLevelMove_.add(new LevelMove((short)46,I_PSYKO));
m1454custListLevelMove_.add(new LevelMove((short)50,I_DIRECT_TOXIK));
m1454custListLevelMove_.add(new LevelMove((short)55,I_POISON_CROIX));
m1454custListLevelMove_.add(new LevelMove((short)58,I_TOILE_GLUANTE));
m1454pokemonData_.setLevMoves(m1454custListLevelMove_);
m1454pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1454stringList_=new StringList(new CollCapacity(2));
m1454stringList_.add(I_ESSAIM);
m1454stringList_.add(I_INSOMNIA);
m1454pokemonData_.setAbilities(m1454stringList_);
m1454stringList_=new StringList(new CollCapacity(22));
m1454stringList_.add(I_BLABLA_DODO);
m1454stringList_.add(I_CLONAGE);
m1454stringList_.add(I_COPIE);
m1454stringList_.add(I_COUP_BAS);
m1454stringList_.add(I_DAMOCLES);
m1454stringList_.add(I_ENTRAVE);
m1454stringList_.add(I_PICS_TOXIK);
m1454stringList_.add(I_PIQURE);
m1454stringList_.add(I_PLAQUAGE);
m1454stringList_.add(I_POURSUITE);
m1454stringList_.add(I_RAFALE_PSY);
m1454stringList_.add(I_RAYON_SIGNAL);
m1454stringList_.add(I_REBOND);
m1454stringList_.add(I_RELAIS);
m1454stringList_.add(I_RONFLEMENT);
m1454stringList_.add(I_SECRETION);
m1454stringList_.add(I_SONICBOOM);
m1454stringList_.add(I_TENACITE);
m1454stringList_.add(I_VANTARDISE);
m1454stringList_.add(I_GIGA_SANGSUE);
m1454stringList_.add(I_TOILE_ELEK);
m1454stringList_.add(I_TRICHERIE);
m1454pokemonData_.setMoveTutors(m1454stringList_);
Shorts m1454shorts_=new Shorts(new CollCapacity(29));
m1454shorts_.add((short)70);
m1454shorts_.add((short)1);
m1454shorts_.add((short)6);
m1454shorts_.add((short)9);
m1454shorts_.add((short)10);
m1454shorts_.add((short)11);
m1454shorts_.add((short)15);
m1454shorts_.add((short)17);
m1454shorts_.add((short)21);
m1454shorts_.add((short)22);
m1454shorts_.add((short)27);
m1454shorts_.add((short)28);
m1454shorts_.add((short)29);
m1454shorts_.add((short)32);
m1454shorts_.add((short)36);
m1454shorts_.add((short)42);
m1454shorts_.add((short)44);
m1454shorts_.add((short)45);
m1454shorts_.add((short)46);
m1454shorts_.add((short)48);
m1454shorts_.add((short)68);
m1454shorts_.add((short)76);
m1454shorts_.add((short)81);
m1454shorts_.add((short)88);
m1454shorts_.add((short)83);
m1454shorts_.add((short)84);
m1454shorts_.add((short)87);
m1454shorts_.add((short)90);
m1454shorts_.add((short)100);
m1454pokemonData_.setTechnicalMoves(m1454shorts_);
m1454pokemonData_.setBaseEvo(I_MIMIGAL);
m1454pokemonData_.setCatchingRate((short)90);
m1454pokemonData_.setHeight(Rate.newRate(R_11_10));
m1454pokemonData_.setExpEvo(ExpType.R);
m1454pokemonData_.setExpRate(137);
m1454stringList_=new StringList(new CollCapacity(1));
m1454stringList_.add(I_INSECTE);
m1454pokemonData_.setEggGroups(m1454stringList_);
m1454pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1454pokemonData_.setHappiness((short)70);
m1454pokemonData_.setHappinessHatch((short)140);
return m1454pokemonData_;
}
static PokemonData p431(){
PokemonData m1455pokemonData_=Instances.newPokemonData();
m1455pokemonData_.setWeight(Rate.newRate(R_162));
StringList m1455stringList_=new StringList(new CollCapacity(1));
m1455stringList_.add(I_EAU);
m1455pokemonData_.setTypes(m1455stringList_);
EnumMap<Statistic,StatBaseEv> m1455enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)60,(short)0));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)0));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)125,(short)2));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)95,(short)0));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)79,(short)0));
m1455enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)81,(short)0));
m1455pokemonData_.setStatistics(m1455enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1455custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1455custListLevelMove_.add(new LevelMove((short)1,I_PISTOLET_A_O));
m1455custListLevelMove_.add(new LevelMove((short)1,I_LIGOTAGE));
m1455custListLevelMove_.add(new LevelMove((short)5,I_TOURNIQUET));
m1455custListLevelMove_.add(new LevelMove((short)9,I_REGENERATION));
m1455custListLevelMove_.add(new LevelMove((short)13,I_VIBRAQUA));
m1455custListLevelMove_.add(new LevelMove((short)17,I_OURAGAN));
m1455custListLevelMove_.add(new LevelMove((short)21,I_SOIN));
m1455custListLevelMove_.add(new LevelMove((short)25,I_SEDUCTION));
m1455custListLevelMove_.add(new LevelMove((short)29,I_HYDROQUEUE));
m1455custListLevelMove_.add(new LevelMove((short)33,I_DANSE_PLUIE));
m1455custListLevelMove_.add(new LevelMove((short)37,I_HYDROCANON));
m1455custListLevelMove_.add(new LevelMove((short)41,I_ATTRACTION));
m1455custListLevelMove_.add(new LevelMove((short)45,I_RUNE_PROTECT));
m1455custListLevelMove_.add(new LevelMove((short)49,I_ANNEAU_HYDRO));
m1455pokemonData_.setLevMoves(m1455custListLevelMove_);
m1455pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1455stringList_=new StringList(new CollCapacity(1));
m1455stringList_.add(I_ECAILLE_SPECIALE);
m1455pokemonData_.setAbilities(m1455stringList_);
m1455stringList_=new StringList(new CollCapacity(31));
m1455stringList_.add(I_BLABLA_DODO);
m1455stringList_.add(I_BOOST);
m1455stringList_.add(I_BRUME);
m1455stringList_.add(I_BUEE_NOIRE);
m1455stringList_.add(I_CHATOUILLE);
m1455stringList_.add(I_CLONAGE);
m1455stringList_.add(I_COPIE);
m1455stringList_.add(I_COUD_BOUE);
m1455stringList_.add(I_DAMOCLES);
m1455stringList_.add(I_DRACOSOUFFLE);
m1455stringList_.add(I_HYDROQUEUE);
m1455stringList_.add(I_HYPNOSE);
m1455stringList_.add(I_LANCE_BOUE);
m1455stringList_.add(I_METEORES);
m1455stringList_.add(I_MUR_LUMIERE);
m1455stringList_.add(I_ONDE_FOLIE);
m1455stringList_.add(I_OURAGAN);
m1455stringList_.add(I_PLAQUAGE);
m1455stringList_.add(I_PLONGEE);
m1455stringList_.add(I_REFLET_MAGIK);
m1455stringList_.add(I_RONFLEMENT);
m1455stringList_.add(I_TENACITE);
m1455stringList_.add(I_TETE_DE_FER);
m1455stringList_.add(I_VANTARDISE);
m1455stringList_.add(I_VENT_GLACE);
m1455stringList_.add(I_VOILE_MIROIR);
m1455stringList_.add(I_DRACOCHOC);
m1455stringList_.add(I_ETREINTE);
m1455stringList_.add(I_QUEUE_DE_FER);
m1455stringList_.add(I_SURF);
m1455stringList_.add(I_SIPHON);
m1455pokemonData_.setMoveTutors(m1455stringList_);
Shorts m1455shorts_=new Shorts(new CollCapacity(2));
m1455shorts_.add((short)3);
m1455shorts_.add((short)5);
m1455pokemonData_.setHiddenMoves(m1455shorts_);
m1455shorts_=new Shorts(new CollCapacity(26));
m1455shorts_.add((short)6);
m1455shorts_.add((short)7);
m1455shorts_.add((short)10);
m1455shorts_.add((short)13);
m1455shorts_.add((short)14);
m1455shorts_.add((short)15);
m1455shorts_.add((short)16);
m1455shorts_.add((short)17);
m1455shorts_.add((short)18);
m1455shorts_.add((short)20);
m1455shorts_.add((short)21);
m1455shorts_.add((short)27);
m1455shorts_.add((short)32);
m1455shorts_.add((short)42);
m1455shorts_.add((short)44);
m1455shorts_.add((short)45);
m1455shorts_.add((short)48);
m1455shorts_.add((short)55);
m1455shorts_.add((short)68);
m1455shorts_.add((short)77);
m1455shorts_.add((short)78);
m1455shorts_.add((short)88);
m1455shorts_.add((short)82);
m1455shorts_.add((short)87);
m1455shorts_.add((short)90);
m1455shorts_.add((short)100);
m1455pokemonData_.setTechnicalMoves(m1455shorts_);
m1455pokemonData_.setBaseEvo(I_BARPAU);
m1455pokemonData_.setCatchingRate((short)60);
m1455pokemonData_.setHeight(Rate.newRate(R_31_5));
m1455pokemonData_.setExpEvo(ExpType.E);
m1455pokemonData_.setExpRate(189);
m1455stringList_=new StringList(new CollCapacity(2));
m1455stringList_.add(I_DRAGON);
m1455stringList_.add(I_EAU_1);
m1455pokemonData_.setEggGroups(m1455stringList_);
m1455pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1455pokemonData_.setHappiness((short)70);
m1455pokemonData_.setHappinessHatch((short)140);
return m1455pokemonData_;
}
}
