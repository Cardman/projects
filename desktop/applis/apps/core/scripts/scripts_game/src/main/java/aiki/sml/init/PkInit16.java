package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.pokemon.*;
import aiki.fight.pokemon.evolution.*;
import aiki.fight.pokemon.enums.*;
import aiki.map.pokemon.enums.*;
import code.maths.*;
import code.util.*;
final class PkInit16 extends CstIgame{
private PkInit16(){}
static PokemonData p432(){
PokemonData m1458pokemonData_=Instances.newPokemonData();
m1458pokemonData_.setWeight(Rate.newRate(R_13));
StringList m1458stringList_=new StringList(new CollCapacity(2));
m1458stringList_.add(I_PSY);
m1458stringList_.add(I_FEE);
m1458pokemonData_.setTypes(m1458stringList_);
EnumMap<Statistic,StatBaseEv> m1458enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)25,(short)0));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)70,(short)0));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)1));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)20,(short)0));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1458enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1458pokemonData_.setStatistics(m1458enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1458custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1458custListLevelMove_.add(new LevelMove((short)1,I_CHATOUILLE));
m1458custListLevelMove_.add(new LevelMove((short)1,I_BOUCLIER));
m1458custListLevelMove_.add(new LevelMove((short)1,I_CHOC_MENTAL));
m1458custListLevelMove_.add(new LevelMove((short)4,I_PHOTOCOPIE));
m1458custListLevelMove_.add(new LevelMove((short)8,I_YOGA));
m1458custListLevelMove_.add(new LevelMove((short)11,I_TORGNOLES));
m1458custListLevelMove_.add(new LevelMove((short)15,I_COPIE));
m1458custListLevelMove_.add(new LevelMove((short)18,I_ENCORE));
m1458custListLevelMove_.add(new LevelMove((short)22,I_PROTECTION));
m1458custListLevelMove_.add(new LevelMove((short)22,I_MUR_LUMIERE));
m1458custListLevelMove_.add(new LevelMove((short)25,I_RAFALE_PSY));
m1458custListLevelMove_.add(new LevelMove((short)29,I_CLONAGE));
m1458custListLevelMove_.add(new LevelMove((short)32,I_RECYCLAGE));
m1458custListLevelMove_.add(new LevelMove((short)36,I_TOURMAGIK));
m1458custListLevelMove_.add(new LevelMove((short)39,I_PSYKO));
m1458custListLevelMove_.add(new LevelMove((short)43,I_IMITATION));
m1458custListLevelMove_.add(new LevelMove((short)46,I_RELAIS));
m1458custListLevelMove_.add(new LevelMove((short)50,I_RUNE_PROTECT));
m1458pokemonData_.setLevMoves(m1458custListLevelMove_);
m1458pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1458stringList_=new StringList(new CollCapacity(2));
m1458stringList_.add(I_ANTI_BRUIT);
m1458stringList_.add(I_FILTRE);
m1458pokemonData_.setAbilities(m1458stringList_);
m1458stringList_=new StringList(new CollCapacity(30));
m1458stringList_.add(I_BLUFF);
m1458stringList_.add(I_BOOST);
m1458stringList_.add(I_BROUHAHA);
m1458stringList_.add(I_CHARME);
m1458stringList_.add(I_COPIE);
m1458stringList_.add(I_COUD_BOUE);
m1458stringList_.add(I_COUP_D_BOULE);
m1458stringList_.add(I_DANSE_FOLLE);
m1458stringList_.add(I_HYPNOSE);
m1458stringList_.add(I_IMITATION);
m1458stringList_.add(I_MACHINATION);
m1458stringList_.add(I_ONDE_FOLIE);
m1458stringList_.add(I_PRESCIENCE);
m1458stringList_.add(I_RAYON_SIGNAL);
m1458stringList_.add(I_REFLET_MAGIK);
m1458stringList_.add(I_REVEIL_FORCE);
m1458stringList_.add(I_RONFLEMENT);
m1458stringList_.add(I_TOURMAGIK);
m1458stringList_.add(I_VOEU_SOIN);
m1458stringList_.add(I_BLABLA_DODO);
m1458stringList_.add(I_COUP_D_MAIN);
m1458stringList_.add(I_ECHANGE);
m1458stringList_.add(I_IMPLORE);
m1458stringList_.add(I_PARTAGE_FORCE);
m1458stringList_.add(I_RECYCLAGE);
m1458stringList_.add(I_SAISIE);
m1458stringList_.add(I_VAMPIPOING);
m1458stringList_.add(I_VENT_GLACE);
m1458stringList_.add(I_ZONE_ETRANGE);
m1458stringList_.add(I_ZONE_MAGIQUE);
m1458pokemonData_.setMoveTutors(m1458stringList_);
Shorts m1458shorts_=new Shorts(new CollCapacity(39));
m1458shorts_.add((short)70);
m1458shorts_.add((short)3);
m1458shorts_.add((short)4);
m1458shorts_.add((short)6);
m1458shorts_.add((short)10);
m1458shorts_.add((short)11);
m1458shorts_.add((short)12);
m1458shorts_.add((short)16);
m1458shorts_.add((short)17);
m1458shorts_.add((short)18);
m1458shorts_.add((short)20);
m1458shorts_.add((short)21);
m1458shorts_.add((short)22);
m1458shorts_.add((short)24);
m1458shorts_.add((short)25);
m1458shorts_.add((short)27);
m1458shorts_.add((short)29);
m1458shorts_.add((short)30);
m1458shorts_.add((short)31);
m1458shorts_.add((short)32);
m1458shorts_.add((short)33);
m1458shorts_.add((short)41);
m1458shorts_.add((short)42);
m1458shorts_.add((short)44);
m1458shorts_.add((short)45);
m1458shorts_.add((short)46);
m1458shorts_.add((short)48);
m1458shorts_.add((short)56);
m1458shorts_.add((short)57);
m1458shorts_.add((short)73);
m1458shorts_.add((short)77);
m1458shorts_.add((short)88);
m1458shorts_.add((short)83);
m1458shorts_.add((short)85);
m1458shorts_.add((short)86);
m1458shorts_.add((short)87);
m1458shorts_.add((short)90);
m1458shorts_.add((short)92);
m1458shorts_.add((short)100);
m1458pokemonData_.setTechnicalMoves(m1458shorts_);
m1458pokemonData_.setBaseEvo(I_MIME_JR);
StringMap<Evolution> m1458stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1458evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1458evolutionLevelSimple_.setLevel((short)18);
m1458stringMapEvolution_.addEntry(I_M_MIME,m1458evolutionLevelSimple_);
m1458pokemonData_.setEvolutions(m1458stringMapEvolution_);
m1458pokemonData_.setCatchingRate((short)145);
m1458pokemonData_.setHeight(Rate.newRate(R_3_5));
m1458pokemonData_.setExpEvo(ExpType.M);
m1458pokemonData_.setExpRate(62);
m1458stringList_=new StringList(new CollCapacity(1));
m1458stringList_.add(I_SANS_OEUF);
m1458pokemonData_.setEggGroups(m1458stringList_);
m1458pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1458pokemonData_.setHappiness((short)70);
m1458pokemonData_.setHappinessHatch((short)140);
return m1458pokemonData_;
}
static PokemonData p433(){
PokemonData m1459pokemonData_=Instances.newPokemonData();
m1459pokemonData_.setWeight(Rate.newRate(R_17_2));
StringList m1459stringList_=new StringList(new CollCapacity(2));
m1459stringList_.add(I_INSECTE);
m1459stringList_.add(I_POISON);
m1459pokemonData_.setTypes(m1459stringList_);
EnumMap<Statistic,StatBaseEv> m1459enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)60,(short)1));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)40,(short)0));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)40,(short)0));
m1459enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1459pokemonData_.setStatistics(m1459enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1459custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1459custListLevelMove_.add(new LevelMove((short)1,I_SECRETION));
m1459custListLevelMove_.add(new LevelMove((short)1,I_DARD_VENIN));
m1459custListLevelMove_.add(new LevelMove((short)5,I_GRIMACE));
m1459custListLevelMove_.add(new LevelMove((short)8,I_CONSTRICTION));
m1459custListLevelMove_.add(new LevelMove((short)12,I_VAMPIRISME));
m1459custListLevelMove_.add(new LevelMove((short)15,I_OMBRE_NOCTURNE));
m1459custListLevelMove_.add(new LevelMove((short)19,I_OMBRE_PORTEE));
m1459custListLevelMove_.add(new LevelMove((short)22,I_COMBO_GRIFFE));
m1459custListLevelMove_.add(new LevelMove((short)26,I_COUP_BAS));
m1459custListLevelMove_.add(new LevelMove((short)29,I_TOILE));
m1459custListLevelMove_.add(new LevelMove((short)33,I_HATE));
m1459custListLevelMove_.add(new LevelMove((short)36,I_DARD_NUEE));
m1459custListLevelMove_.add(new LevelMove((short)40,I_PSYKO));
m1459custListLevelMove_.add(new LevelMove((short)43,I_DIRECT_TOXIK));
m1459custListLevelMove_.add(new LevelMove((short)47,I_POISON_CROIX));
m1459custListLevelMove_.add(new LevelMove((short)50,I_TOILE_GLUANTE));
m1459pokemonData_.setLevMoves(m1459custListLevelMove_);
m1459pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1459stringList_=new StringList(new CollCapacity(2));
m1459stringList_.add(I_ESSAIM);
m1459stringList_.add(I_INSOMNIA);
m1459pokemonData_.setAbilities(m1459stringList_);
m1459stringList_=new StringList(new CollCapacity(27));
m1459stringList_.add(I_BLABLA_DODO);
m1459stringList_.add(I_CLONAGE);
m1459stringList_.add(I_COPIE);
m1459stringList_.add(I_COUP_BAS);
m1459stringList_.add(I_DAMOCLES);
m1459stringList_.add(I_DIRECT_TOXIK);
m1459stringList_.add(I_ENTRAVE);
m1459stringList_.add(I_PICS_TOXIK);
m1459stringList_.add(I_PIQURE);
m1459stringList_.add(I_PLAQUAGE);
m1459stringList_.add(I_POURSUITE);
m1459stringList_.add(I_RAFALE_PSY);
m1459stringList_.add(I_RAYON_SIGNAL);
m1459stringList_.add(I_REBOND);
m1459stringList_.add(I_RELAIS);
m1459stringList_.add(I_RONFLEMENT);
m1459stringList_.add(I_SECRETION);
m1459stringList_.add(I_SONICBOOM);
m1459stringList_.add(I_TENACITE);
m1459stringList_.add(I_VANTARDISE);
m1459stringList_.add(I_DOUBLE_DARD);
m1459stringList_.add(I_GIGA_SANGSUE);
m1459stringList_.add(I_MEGACORNE);
m1459stringList_.add(I_POUDRE_FUREUR);
m1459stringList_.add(I_TOILE_ELEK);
m1459stringList_.add(I_TRANCHE_NUIT);
m1459stringList_.add(I_TRICHERIE);
m1459pokemonData_.setMoveTutors(m1459stringList_);
Shorts m1459shorts_=new Shorts(new CollCapacity(27));
m1459shorts_.add((short)70);
m1459shorts_.add((short)1);
m1459shorts_.add((short)6);
m1459shorts_.add((short)9);
m1459shorts_.add((short)10);
m1459shorts_.add((short)11);
m1459shorts_.add((short)17);
m1459shorts_.add((short)21);
m1459shorts_.add((short)22);
m1459shorts_.add((short)27);
m1459shorts_.add((short)28);
m1459shorts_.add((short)29);
m1459shorts_.add((short)32);
m1459shorts_.add((short)36);
m1459shorts_.add((short)42);
m1459shorts_.add((short)44);
m1459shorts_.add((short)45);
m1459shorts_.add((short)46);
m1459shorts_.add((short)48);
m1459shorts_.add((short)76);
m1459shorts_.add((short)81);
m1459shorts_.add((short)88);
m1459shorts_.add((short)83);
m1459shorts_.add((short)84);
m1459shorts_.add((short)87);
m1459shorts_.add((short)90);
m1459shorts_.add((short)100);
m1459pokemonData_.setTechnicalMoves(m1459shorts_);
m1459pokemonData_.setBaseEvo(I_MIMIGAL);
StringMap<Evolution> m1459stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1459evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1459evolutionLevelSimple_.setLevel((short)22);
m1459stringMapEvolution_.addEntry(I_MIGALOS,m1459evolutionLevelSimple_);
m1459pokemonData_.setEvolutions(m1459stringMapEvolution_);
m1459pokemonData_.setCatchingRate((short)255);
m1459pokemonData_.setHeight(Rate.newRate(R_1_2));
m1459pokemonData_.setExpEvo(ExpType.R);
m1459pokemonData_.setExpRate(50);
m1459stringList_=new StringList(new CollCapacity(1));
m1459stringList_.add(I_INSECTE);
m1459pokemonData_.setEggGroups(m1459stringList_);
m1459pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1459pokemonData_.setHappiness((short)70);
m1459pokemonData_.setHappinessHatch((short)140);
return m1459pokemonData_;
}
static PokemonData p434(){
PokemonData m1460pokemonData_=Instances.newPokemonData();
m1460pokemonData_.setWeight(Rate.newRate(R_30));
StringList m1460stringList_=new StringList(new CollCapacity(2));
m1460stringList_.add(I_INSECTE);
m1460stringList_.add(I_POISON);
m1460pokemonData_.setTypes(m1460stringList_);
EnumMap<Statistic,StatBaseEv> m1460enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)1));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)50,(short)0));
m1460enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)45,(short)0));
m1460pokemonData_.setStatistics(m1460enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1460custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1460custListLevelMove_.add(new LevelMove((short)1,I_ENTRAVE));
m1460custListLevelMove_.add(new LevelMove((short)1,I_CLAIRVOYANCE));
m1460custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1460custListLevelMove_.add(new LevelMove((short)5,I_ULTRASON));
m1460custListLevelMove_.add(new LevelMove((short)11,I_CHOC_MENTAL));
m1460custListLevelMove_.add(new LevelMove((short)13,I_POUDRE_TOXIK));
m1460custListLevelMove_.add(new LevelMove((short)17,I_VAMPIRISME));
m1460custListLevelMove_.add(new LevelMove((short)23,I_PARA_SPORE));
m1460custListLevelMove_.add(new LevelMove((short)25,I_RAFALE_PSY));
m1460custListLevelMove_.add(new LevelMove((short)29,I_POUDRE_DODO));
m1460custListLevelMove_.add(new LevelMove((short)35,I_RAYON_SIGNAL));
m1460custListLevelMove_.add(new LevelMove((short)37,I_PSYKOUD_BOUL));
m1460custListLevelMove_.add(new LevelMove((short)41,I_CROCHETVENIN));
m1460custListLevelMove_.add(new LevelMove((short)47,I_PSYKO));
m1460pokemonData_.setLevMoves(m1460custListLevelMove_);
m1460pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1460stringList_=new StringList(new CollCapacity(2));
m1460stringList_.add(I_OEIL_COMPOSE);
m1460stringList_.add(I_LENTITEINTEE);
m1460pokemonData_.setAbilities(m1460stringList_);
m1460stringList_=new StringList(new CollCapacity(21));
m1460stringList_.add(I_AURORE);
m1460stringList_.add(I_BLABLA_DODO);
m1460stringList_.add(I_CLONAGE);
m1460stringList_.add(I_COPIE);
m1460stringList_.add(I_DAMOCLES);
m1460stringList_.add(I_GIGA_SANGSUE);
m1460stringList_.add(I_GRINCEMENT);
m1460stringList_.add(I_HATE);
m1460stringList_.add(I_METEORES);
m1460stringList_.add(I_PICS_TOXIK);
m1460stringList_.add(I_PIQURE);
m1460stringList_.add(I_PSYKOUD_BOUL);
m1460stringList_.add(I_RAYON_SIGNAL);
m1460stringList_.add(I_RELAIS);
m1460stringList_.add(I_RONFLEMENT);
m1460stringList_.add(I_SECRETION);
m1460stringList_.add(I_TENACITE);
m1460stringList_.add(I_VANTARDISE);
m1460stringList_.add(I_ECHANGE);
m1460stringList_.add(I_FORCE_CACHEE);
m1460stringList_.add(I_POUDRE_FUREUR);
m1460pokemonData_.setMoveTutors(m1460stringList_);
Shorts m1460shorts_=new Shorts(new CollCapacity(23));
m1460shorts_.add((short)70);
m1460shorts_.add((short)6);
m1460shorts_.add((short)9);
m1460shorts_.add((short)10);
m1460shorts_.add((short)11);
m1460shorts_.add((short)17);
m1460shorts_.add((short)21);
m1460shorts_.add((short)22);
m1460shorts_.add((short)27);
m1460shorts_.add((short)29);
m1460shorts_.add((short)32);
m1460shorts_.add((short)36);
m1460shorts_.add((short)42);
m1460shorts_.add((short)44);
m1460shorts_.add((short)45);
m1460shorts_.add((short)46);
m1460shorts_.add((short)48);
m1460shorts_.add((short)76);
m1460shorts_.add((short)88);
m1460shorts_.add((short)83);
m1460shorts_.add((short)87);
m1460shorts_.add((short)90);
m1460shorts_.add((short)100);
m1460pokemonData_.setTechnicalMoves(m1460shorts_);
m1460pokemonData_.setBaseEvo(I_MIMITOSS);
StringMap<Evolution> m1460stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1460evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1460evolutionLevelSimple_.setLevel((short)31);
m1460stringMapEvolution_.addEntry(I_AEROMITE,m1460evolutionLevelSimple_);
m1460pokemonData_.setEvolutions(m1460stringMapEvolution_);
m1460pokemonData_.setCatchingRate((short)190);
m1460pokemonData_.setHeight(Rate.newRate(R_1));
m1460pokemonData_.setExpEvo(ExpType.M);
m1460pokemonData_.setExpRate(61);
m1460stringList_=new StringList(new CollCapacity(1));
m1460stringList_.add(I_INSECTE);
m1460pokemonData_.setEggGroups(m1460stringList_);
m1460pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1460pokemonData_.setHappiness((short)70);
m1460pokemonData_.setHappinessHatch((short)140);
return m1460pokemonData_;
}
static PokemonData p435(){
PokemonData m1461pokemonData_=Instances.newPokemonData();
m1461pokemonData_.setWeight(Rate.newRate(R_33_10));
StringList m1461stringList_=new StringList(new CollCapacity(1));
m1461stringList_.add(I_DRAGON);
m1461pokemonData_.setTypes(m1461stringList_);
EnumMap<Statistic,StatBaseEv> m1461enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)64,(short)1));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)41,(short)0));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1461enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)50,(short)0));
m1461pokemonData_.setStatistics(m1461enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1461custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1461custListLevelMove_.add(new LevelMove((short)1,I_LIGOTAGE));
m1461custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1461custListLevelMove_.add(new LevelMove((short)5,I_CAGE_ECLAIR));
m1461custListLevelMove_.add(new LevelMove((short)11,I_OURAGAN));
m1461custListLevelMove_.add(new LevelMove((short)15,I_DRACO_RAGE));
m1461custListLevelMove_.add(new LevelMove((short)21,I_SOUPLESSE));
m1461custListLevelMove_.add(new LevelMove((short)25,I_HATE));
m1461custListLevelMove_.add(new LevelMove((short)31,I_DRACO_QUEUE));
m1461custListLevelMove_.add(new LevelMove((short)35,I_HYDROQUEUE));
m1461custListLevelMove_.add(new LevelMove((short)41,I_DRACOCHARGE));
m1461custListLevelMove_.add(new LevelMove((short)45,I_RUNE_PROTECT));
m1461custListLevelMove_.add(new LevelMove((short)51,I_DANSE_DRACO));
m1461custListLevelMove_.add(new LevelMove((short)55,I_COLERE));
m1461custListLevelMove_.add(new LevelMove((short)61,I_ULTRALASER));
m1461pokemonData_.setLevMoves(m1461custListLevelMove_);
m1461pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1461stringList_=new StringList(new CollCapacity(1));
m1461stringList_.add(I_MUE);
m1461pokemonData_.setAbilities(m1461stringList_);
m1461stringList_=new StringList(new CollCapacity(31));
m1461stringList_.add(I_BLABLA_DODO);
m1461stringList_.add(I_BRUME);
m1461stringList_.add(I_BUEE_NOIRE);
m1461stringList_.add(I_CAGE_ECLAIR);
m1461stringList_.add(I_CLONAGE);
m1461stringList_.add(I_COLERE);
m1461stringList_.add(I_COPIE);
m1461stringList_.add(I_COUP_D_BOULE);
m1461stringList_.add(I_DAMOCLES);
m1461stringList_.add(I_DANSE_DRACO);
m1461stringList_.add(I_DRACO_METEOR);
m1461stringList_.add(I_DRACOCHARGE);
m1461stringList_.add(I_DRACOSOUFFLE);
m1461stringList_.add(I_HYDROQUEUE);
m1461stringList_.add(I_METEORES);
m1461stringList_.add(I_MUR_LUMIERE);
m1461stringList_.add(I_OURAGAN);
m1461stringList_.add(I_PLAQUAGE);
m1461stringList_.add(I_RONFLEMENT);
m1461stringList_.add(I_TENACITE);
m1461stringList_.add(I_ULTRASON);
m1461stringList_.add(I_VANTARDISE);
m1461stringList_.add(I_VENT_GLACE);
m1461stringList_.add(I_VIT_EXTREME);
m1461stringList_.add(I_AQUA_JET);
m1461stringList_.add(I_DRACOCHOC);
m1461stringList_.add(I_ETREINTE);
m1461stringList_.add(I_QUEUE_DE_FER);
m1461stringList_.add(I_VIBRAQUA);
m1461stringList_.add(I_SURF);
m1461stringList_.add(I_SIPHON);
m1461pokemonData_.setMoveTutors(m1461stringList_);
Shorts m1461shorts_=new Shorts(new CollCapacity(2));
m1461shorts_.add((short)3);
m1461shorts_.add((short)5);
m1461pokemonData_.setHiddenMoves(m1461shorts_);
m1461shorts_=new Shorts(new CollCapacity(29));
m1461shorts_.add((short)6);
m1461shorts_.add((short)7);
m1461shorts_.add((short)10);
m1461shorts_.add((short)11);
m1461shorts_.add((short)13);
m1461shorts_.add((short)14);
m1461shorts_.add((short)15);
m1461shorts_.add((short)16);
m1461shorts_.add((short)17);
m1461shorts_.add((short)18);
m1461shorts_.add((short)20);
m1461shorts_.add((short)21);
m1461shorts_.add((short)24);
m1461shorts_.add((short)25);
m1461shorts_.add((short)27);
m1461shorts_.add((short)32);
m1461shorts_.add((short)35);
m1461shorts_.add((short)38);
m1461shorts_.add((short)42);
m1461shorts_.add((short)44);
m1461shorts_.add((short)45);
m1461shorts_.add((short)48);
m1461shorts_.add((short)59);
m1461shorts_.add((short)73);
m1461shorts_.add((short)88);
m1461shorts_.add((short)82);
m1461shorts_.add((short)87);
m1461shorts_.add((short)90);
m1461shorts_.add((short)100);
m1461pokemonData_.setTechnicalMoves(m1461shorts_);
m1461pokemonData_.setBaseEvo(I_MINIDRACO);
StringMap<Evolution> m1461stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1461evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1461evolutionLevelSimple_.setLevel((short)30);
m1461stringMapEvolution_.addEntry(I_DRACO,m1461evolutionLevelSimple_);
m1461pokemonData_.setEvolutions(m1461stringMapEvolution_);
m1461pokemonData_.setCatchingRate((short)45);
m1461pokemonData_.setHeight(Rate.newRate(R_9_5));
m1461pokemonData_.setExpEvo(ExpType.L);
m1461pokemonData_.setExpRate(60);
m1461stringList_=new StringList(new CollCapacity(2));
m1461stringList_.add(I_DRAGON);
m1461stringList_.add(I_EAU_1);
m1461pokemonData_.setEggGroups(m1461stringList_);
m1461pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1461pokemonData_.setHappiness((short)70);
m1461pokemonData_.setHappinessHatch((short)140);
return m1461pokemonData_;
}
static PokemonData p436(){
PokemonData m1462pokemonData_=Instances.newPokemonData();
m1462pokemonData_.setWeight(Rate.newRate(R_202_5));
StringList m1462stringList_=new StringList(new CollCapacity(2));
m1462stringList_.add(I_ACIER);
m1462stringList_.add(I_SOL);
m1462pokemonData_.setTypes(m1462stringList_);
EnumMap<Statistic,StatBaseEv> m1462enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)135,(short)2));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)110,(short)0));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1462enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)88,(short)0));
m1462pokemonData_.setStatistics(m1462enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1462custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1462custListLevelMove_.add(new LevelMove((short)1,I_FERTILISATION));
m1462custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1462custListLevelMove_.add(new LevelMove((short)1,I_LANCE_BOUE));
m1462custListLevelMove_.add(new LevelMove((short)5,I_TOUR_RAPIDE));
m1462custListLevelMove_.add(new LevelMove((short)8,I_COUD_BOUE));
m1462custListLevelMove_.add(new LevelMove((short)12,I_COMBO_GRIFFE));
m1462custListLevelMove_.add(new LevelMove((short)15,I_GRIFFE_ACIER));
m1462custListLevelMove_.add(new LevelMove((short)19,I_TUNNEL));
m1462custListLevelMove_.add(new LevelMove((short)22,I_AIGUISAGE));
m1462custListLevelMove_.add(new LevelMove((short)26,I_TRANCHE));
m1462custListLevelMove_.add(new LevelMove((short)29,I_EBOULEMENT));
m1462custListLevelMove_.add(new LevelMove((short)31,I_EMPAL_KORNE));
m1462custListLevelMove_.add(new LevelMove((short)36,I_SEISME));
m1462custListLevelMove_.add(new LevelMove((short)42,I_DANSE_LAMES));
m1462custListLevelMove_.add(new LevelMove((short)49,I_TEMPETESABLE));
m1462custListLevelMove_.add(new LevelMove((short)55,I_TUNNELIER));
m1462custListLevelMove_.add(new LevelMove((short)62,I_ABIME));
m1462pokemonData_.setLevMoves(m1462custListLevelMove_);
m1462pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1462stringList_=new StringList(new CollCapacity(3));
m1462stringList_.add(I_BAIGNE_SABLE);
m1462stringList_.add(I_FORCE_SABLE);
m1462stringList_.add(I_BRISE_MOULE);
m1462pokemonData_.setAbilities(m1462stringList_);
m1462stringList_=new StringList(new CollCapacity(10));
m1462stringList_.add(I_BLABLA_DODO);
m1462stringList_.add(I_MUR_DE_FER);
m1462stringList_.add(I_PIEGE_DE_ROC);
m1462stringList_.add(I_RONFLEMENT);
m1462stringList_.add(I_TELLURIFORCE);
m1462stringList_.add(I_TETE_DE_FER);
m1462stringList_.add(I_TUNNELIER);
m1462stringList_.add(I_VOL_MAGNETIK);
m1462stringList_.add(I_COUPE);
m1462stringList_.add(I_FORCE);
m1462pokemonData_.setMoveTutors(m1462stringList_);
Shorts m1462shorts_=new Shorts(new CollCapacity(2));
m1462shorts_.add((short)1);
m1462shorts_.add((short)4);
m1462pokemonData_.setHiddenMoves(m1462shorts_);
m1462shorts_=new Shorts(new CollCapacity(33));
m1462shorts_.add((short)94);
m1462shorts_.add((short)1);
m1462shorts_.add((short)6);
m1462shorts_.add((short)10);
m1462shorts_.add((short)15);
m1462shorts_.add((short)17);
m1462shorts_.add((short)21);
m1462shorts_.add((short)26);
m1462shorts_.add((short)27);
m1462shorts_.add((short)28);
m1462shorts_.add((short)31);
m1462shorts_.add((short)32);
m1462shorts_.add((short)36);
m1462shorts_.add((short)37);
m1462shorts_.add((short)39);
m1462shorts_.add((short)40);
m1462shorts_.add((short)42);
m1462shorts_.add((short)44);
m1462shorts_.add((short)45);
m1462shorts_.add((short)48);
m1462shorts_.add((short)52);
m1462shorts_.add((short)56);
m1462shorts_.add((short)65);
m1462shorts_.add((short)68);
m1462shorts_.add((short)75);
m1462shorts_.add((short)78);
m1462shorts_.add((short)80);
m1462shorts_.add((short)81);
m1462shorts_.add((short)88);
m1462shorts_.add((short)84);
m1462shorts_.add((short)87);
m1462shorts_.add((short)90);
m1462shorts_.add((short)100);
m1462pokemonData_.setTechnicalMoves(m1462shorts_);
m1462pokemonData_.setBaseEvo(I_ROTOTAUPE);
m1462pokemonData_.setCatchingRate((short)60);
m1462pokemonData_.setHeight(Rate.newRate(R_7_10));
m1462pokemonData_.setExpEvo(ExpType.M);
m1462pokemonData_.setExpRate(178);
m1462stringList_=new StringList(new CollCapacity(1));
m1462stringList_.add(I_SOL);
m1462pokemonData_.setEggGroups(m1462stringList_);
m1462pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1462pokemonData_.setHappiness((short)70);
m1462pokemonData_.setHappinessHatch((short)140);
return m1462pokemonData_;
}
static PokemonData p437(){
PokemonData m1463pokemonData_=Instances.newPokemonData();
m1463pokemonData_.setWeight(Rate.newRate(R_27));
StringList m1463stringList_=new StringList(new CollCapacity(1));
m1463stringList_.add(I_NORMAL);
m1463pokemonData_.setTypes(m1463stringList_);
EnumMap<Statistic,StatBaseEv> m1463enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)2));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)69,(short)0));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)69,(short)0));
m1463enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)77,(short)0));
m1463pokemonData_.setStatistics(m1463enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1463custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1463custListLevelMove_.add(new LevelMove((short)1,I_FERTILISATION));
m1463custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1463custListLevelMove_.add(new LevelMove((short)1,I_BALAYAGE));
m1463custListLevelMove_.add(new LevelMove((short)3,I_GROZ_YEUX));
m1463custListLevelMove_.add(new LevelMove((short)6,I_MORSURE));
m1463custListLevelMove_.add(new LevelMove((short)8,I_PATIENCE));
m1463custListLevelMove_.add(new LevelMove((short)11,I_DETECTION));
m1463custListLevelMove_.add(new LevelMove((short)13,I_JET_DE_SABLE));
m1463custListLevelMove_.add(new LevelMove((short)16,I_MACHOUILLE));
m1463custListLevelMove_.add(new LevelMove((short)18,I_HYPNOSE));
m1463custListLevelMove_.add(new LevelMove((short)20,I_ONDE_FOLIE));
m1463custListLevelMove_.add(new LevelMove((short)22,I_CROC_FATAL));
m1463custListLevelMove_.add(new LevelMove((short)25,I_APRES_VOUS));
m1463custListLevelMove_.add(new LevelMove((short)29,I_BOOST));
m1463custListLevelMove_.add(new LevelMove((short)32,I_CROC_DE_MORT));
m1463custListLevelMove_.add(new LevelMove((short)36,I_REGARD_NOIR));
m1463custListLevelMove_.add(new LevelMove((short)39,I_RELAIS));
m1463custListLevelMove_.add(new LevelMove((short)43,I_SOUPLESSE));
m1463pokemonData_.setLevMoves(m1463custListLevelMove_);
m1463pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1463stringList_=new StringList(new CollCapacity(2));
m1463stringList_.add(I_REGARD_VIF);
m1463stringList_.add(I_ANALYSTE);
m1463pokemonData_.setAbilities(m1463stringList_);
m1463stringList_=new StringList(new CollCapacity(21));
m1463stringList_.add(I_APRES_VOUS);
m1463stringList_.add(I_BALAYAGE);
m1463stringList_.add(I_BLABLA_DODO);
m1463stringList_.add(I_CANON_GRAINE);
m1463stringList_.add(I_COUP_D_MAIN);
m1463stringList_.add(I_CROC_FATAL);
m1463stringList_.add(I_DERNIERECOUR);
m1463stringList_.add(I_DETRICANON);
m1463stringList_.add(I_EFFORT);
m1463stringList_.add(I_HYDROQUEUE);
m1463stringList_.add(I_IMPLORE);
m1463stringList_.add(I_POING_DE_FEU);
m1463stringList_.add(I_POING_ECLAIR);
m1463stringList_.add(I_POINGLACE);
m1463stringList_.add(I_PSYKOUD_BOUL);
m1463stringList_.add(I_QUEUE_DE_FER);
m1463stringList_.add(I_RAYON_SIGNAL);
m1463stringList_.add(I_RONFLEMENT);
m1463stringList_.add(I_SABOTAGE);
m1463stringList_.add(I_COUPE);
m1463stringList_.add(I_FORCE);
m1463pokemonData_.setMoveTutors(m1463stringList_);
Shorts m1463shorts_=new Shorts(new CollCapacity(2));
m1463shorts_.add((short)1);
m1463shorts_.add((short)4);
m1463pokemonData_.setHiddenMoves(m1463shorts_);
m1463shorts_=new Shorts(new CollCapacity(35));
m1463shorts_.add((short)70);
m1463shorts_.add((short)94);
m1463shorts_.add((short)6);
m1463shorts_.add((short)10);
m1463shorts_.add((short)11);
m1463shorts_.add((short)15);
m1463shorts_.add((short)16);
m1463shorts_.add((short)17);
m1463shorts_.add((short)18);
m1463shorts_.add((short)21);
m1463shorts_.add((short)24);
m1463shorts_.add((short)25);
m1463shorts_.add((short)27);
m1463shorts_.add((short)28);
m1463shorts_.add((short)30);
m1463shorts_.add((short)32);
m1463shorts_.add((short)35);
m1463shorts_.add((short)42);
m1463shorts_.add((short)44);
m1463shorts_.add((short)45);
m1463shorts_.add((short)48);
m1463shorts_.add((short)52);
m1463shorts_.add((short)56);
m1463shorts_.add((short)67);
m1463shorts_.add((short)68);
m1463shorts_.add((short)73);
m1463shorts_.add((short)75);
m1463shorts_.add((short)77);
m1463shorts_.add((short)88);
m1463shorts_.add((short)85);
m1463shorts_.add((short)86);
m1463shorts_.add((short)87);
m1463shorts_.add((short)90);
m1463shorts_.add((short)98);
m1463shorts_.add((short)100);
m1463pokemonData_.setTechnicalMoves(m1463shorts_);
m1463pokemonData_.setBaseEvo(I_RATENTIF);
m1463pokemonData_.setCatchingRate((short)255);
m1463pokemonData_.setHeight(Rate.newRate(R_11_10));
m1463pokemonData_.setExpEvo(ExpType.M);
m1463pokemonData_.setExpRate(147);
m1463stringList_=new StringList(new CollCapacity(1));
m1463stringList_.add(I_SOL);
m1463pokemonData_.setEggGroups(m1463stringList_);
m1463pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1463pokemonData_.setHappiness((short)70);
m1463pokemonData_.setHappinessHatch((short)140);
return m1463pokemonData_;
}
static PokemonData p438(){
PokemonData m1464pokemonData_=Instances.newPokemonData();
m1464pokemonData_.setWeight(Rate.newRate(R_17_2));
StringList m1464stringList_=new StringList(new CollCapacity(1));
m1464stringList_.add(I_PSY);
m1464pokemonData_.setTypes(m1464stringList_);
EnumMap<Statistic,StatBaseEv> m1464enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)48,(short)0));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)83,(short)0));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)81,(short)0));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)74,(short)0));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)76,(short)0));
m1464enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)104,(short)2));
m1464pokemonData_.setStatistics(m1464enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1464custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(25));
m1464custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1464custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1464custListLevelMove_.add(new LevelMove((short)1,I_REGARD_NOIR));
m1464custListLevelMove_.add(new LevelMove((short)1,I_COUP_D_MAIN));
m1464custListLevelMove_.add(new LevelMove((short)5,I_IMPLORE));
m1464custListLevelMove_.add(new LevelMove((short)9,I_CHOC_MENTAL));
m1464custListLevelMove_.add(new LevelMove((short)13,I_MUR_LUMIERE));
m1464custListLevelMove_.add(new LevelMove((short)13,I_MUR_LUMIERE));
m1464custListLevelMove_.add(new LevelMove((short)17,I_RAFALE_PSY));
m1464custListLevelMove_.add(new LevelMove((short)19,I_BLUFF));
m1464custListLevelMove_.add(new LevelMove((short)22,I_VOIX_ENJOLEUSE));
m1464custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1464custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1464custListLevelMove_.add(new LevelMove((short)28,I_CHARME));
m1464custListLevelMove_.add(new LevelMove((short)31,I_OEIL_MIRACLE));
m1464custListLevelMove_.add(new LevelMove((short)35,I_PROTECTION));
m1464custListLevelMove_.add(new LevelMove((short)35,I_PROTECTION));
m1464custListLevelMove_.add(new LevelMove((short)40,I_PSYKO));
m1464custListLevelMove_.add(new LevelMove((short)40,I_PSYKO));
m1464custListLevelMove_.add(new LevelMove((short)43,I_IMITATION));
m1464custListLevelMove_.add(new LevelMove((short)45,I_POSSESSIF));
m1464custListLevelMove_.add(new LevelMove((short)48,I_COUP_BAS));
m1464custListLevelMove_.add(new LevelMove((short)50,I_CHAMP_BRUMEUX));
m1464custListLevelMove_.add(new LevelMove((short)53,I_PREVENTION));
m1464custListLevelMove_.add(new LevelMove((short)53,I_PREVENTION));
m1464pokemonData_.setLevMoves(m1464custListLevelMove_);
m1464pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1464stringList_=new StringList(new CollCapacity(3));
m1464stringList_.add(I_FARCEUR);
m1464stringList_.add(I_INFILTRATION);
m1464stringList_.add(I_REGARD_VIF);
m1464pokemonData_.setAbilities(m1464stringList_);
m1464stringList_=new StringList(new CollCapacity(1));
m1464stringList_.add(I_COUPE);
m1464pokemonData_.setMoveTutors(m1464stringList_);
Shorts m1464shorts_=new Shorts(new CollCapacity(1));
m1464shorts_.add((short)1);
m1464pokemonData_.setHiddenMoves(m1464shorts_);
m1464shorts_=new Shorts(new CollCapacity(39));
m1464shorts_.add((short)70);
m1464shorts_.add((short)3);
m1464shorts_.add((short)4);
m1464shorts_.add((short)6);
m1464shorts_.add((short)10);
m1464shorts_.add((short)11);
m1464shorts_.add((short)15);
m1464shorts_.add((short)16);
m1464shorts_.add((short)17);
m1464shorts_.add((short)18);
m1464shorts_.add((short)20);
m1464shorts_.add((short)21);
m1464shorts_.add((short)24);
m1464shorts_.add((short)27);
m1464shorts_.add((short)28);
m1464shorts_.add((short)29);
m1464shorts_.add((short)30);
m1464shorts_.add((short)32);
m1464shorts_.add((short)33);
m1464shorts_.add((short)41);
m1464shorts_.add((short)42);
m1464shorts_.add((short)44);
m1464shorts_.add((short)45);
m1464shorts_.add((short)48);
m1464shorts_.add((short)49);
m1464shorts_.add((short)53);
m1464shorts_.add((short)57);
m1464shorts_.add((short)66);
m1464shorts_.add((short)68);
m1464shorts_.add((short)73);
m1464shorts_.add((short)77);
m1464shorts_.add((short)97);
m1464shorts_.add((short)88);
m1464shorts_.add((short)85);
m1464shorts_.add((short)87);
m1464shorts_.add((short)90);
m1464shorts_.add((short)92);
m1464shorts_.add((short)98);
m1464shorts_.add((short)100);
m1464pokemonData_.setTechnicalMoves(m1464shorts_);
m1464pokemonData_.setBaseEvo(I_PSYSTIGRI);
m1464pokemonData_.setCatchingRate((short)75);
m1464pokemonData_.setHeight(Rate.newRate(R_3_5));
m1464pokemonData_.setExpEvo(ExpType.M);
m1464pokemonData_.setExpRate(163);
m1464stringList_=new StringList(new CollCapacity(10));
m1464stringList_.add(I_METAMORPH);
m1464stringList_.add(I_DRAGON);
m1464stringList_.add(I_SOL);
m1464stringList_.add(I_EAU_1);
m1464stringList_.add(I_MONSTRE);
m1464stringList_.add(I_VOL);
m1464stringList_.add(I_HUMANOIDE);
m1464stringList_.add(I_FEE);
m1464stringList_.add(I_PLANTE);
m1464stringList_.add(I_EAU_2);
m1464pokemonData_.setEggGroups(m1464stringList_);
m1464pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1464pokemonData_.setHappiness((short)70);
m1464pokemonData_.setHappinessHatch((short)140);
return m1464pokemonData_;
}
static PokemonData p439(){
PokemonData m1465pokemonData_=Instances.newPokemonData();
m1465pokemonData_.setWeight(Rate.newRate(R_133_5));
StringList m1465stringList_=new StringList(new CollCapacity(2));
m1465stringList_.add(I_GLACE);
m1465stringList_.add(I_SPECTRE);
m1465pokemonData_.setTypes(m1465stringList_);
EnumMap<Statistic,StatBaseEv> m1465enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)80,(short)0));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)80,(short)0));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)70,(short)0));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1465enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)110,(short)2));
m1465pokemonData_.setStatistics(m1465enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1465custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1465custListLevelMove_.add(new LevelMove((short)1,I_POUDREUSE));
m1465custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1465custListLevelMove_.add(new LevelMove((short)4,I_REFLET));
m1465custListLevelMove_.add(new LevelMove((short)10,I_ETONNEMENT));
m1465custListLevelMove_.add(new LevelMove((short)13,I_VENT_GLACE));
m1465custListLevelMove_.add(new LevelMove((short)19,I_ONDE_FOLIE));
m1465custListLevelMove_.add(new LevelMove((short)22,I_VENT_MAUVAIS));
m1465custListLevelMove_.add(new LevelMove((short)28,I_REVEIL_FORCE));
m1465custListLevelMove_.add(new LevelMove((short)31,I_SEDUCTION));
m1465custListLevelMove_.add(new LevelMove((short)37,I_ECLATS_GLACE));
m1465custListLevelMove_.add(new LevelMove((short)40,I_GRELE));
m1465custListLevelMove_.add(new LevelMove((short)51,I_BLIZZARD));
m1465custListLevelMove_.add(new LevelMove((short)59,I_PRLVT_DESTIN));
m1465pokemonData_.setLevMoves(m1465custListLevelMove_);
m1465pokemonData_.setGenderRep(GenderRepartition.FEMALE);
m1465stringList_=new StringList(new CollCapacity(1));
m1465stringList_.add(I_RIDEAU_NEIGE);
m1465pokemonData_.setAbilities(m1465stringList_);
m1465stringList_=new StringList(new CollCapacity(19));
m1465stringList_.add(I_BALANCE);
m1465stringList_.add(I_BALL_METEO);
m1465stringList_.add(I_BARRAGE);
m1465stringList_.add(I_COUD_BOUE);
m1465stringList_.add(I_COUP_BAS);
m1465stringList_.add(I_COUP_D_BOULE);
m1465stringList_.add(I_DEPIT);
m1465stringList_.add(I_ENTRAVE);
m1465stringList_.add(I_PATIENCE);
m1465stringList_.add(I_PICOTS);
m1465stringList_.add(I_POINGLACE);
m1465stringList_.add(I_RAYON_SIGNAL);
m1465stringList_.add(I_RONFLEMENT);
m1465stringList_.add(I_ROULADE);
m1465stringList_.add(I_TOURMAGIK);
m1465stringList_.add(I_VENT_GLACE);
m1465stringList_.add(I_VENT_MAUVAIS);
m1465stringList_.add(I_BLABLA_DODO);
m1465stringList_.add(I_SAISIE);
m1465pokemonData_.setMoveTutors(m1465stringList_);
Shorts m1465shorts_=new Shorts(new CollCapacity(36));
m1465shorts_.add((short)70);
m1465shorts_.add((short)6);
m1465shorts_.add((short)7);
m1465shorts_.add((short)10);
m1465shorts_.add((short)12);
m1465shorts_.add((short)13);
m1465shorts_.add((short)14);
m1465shorts_.add((short)15);
m1465shorts_.add((short)16);
m1465shorts_.add((short)17);
m1465shorts_.add((short)18);
m1465shorts_.add((short)20);
m1465shorts_.add((short)21);
m1465shorts_.add((short)24);
m1465shorts_.add((short)25);
m1465shorts_.add((short)27);
m1465shorts_.add((short)29);
m1465shorts_.add((short)30);
m1465shorts_.add((short)32);
m1465shorts_.add((short)41);
m1465shorts_.add((short)42);
m1465shorts_.add((short)44);
m1465shorts_.add((short)45);
m1465shorts_.add((short)48);
m1465shorts_.add((short)56);
m1465shorts_.add((short)63);
m1465shorts_.add((short)66);
m1465shorts_.add((short)68);
m1465shorts_.add((short)73);
m1465shorts_.add((short)77);
m1465shorts_.add((short)79);
m1465shorts_.add((short)88);
m1465shorts_.add((short)85);
m1465shorts_.add((short)87);
m1465shorts_.add((short)90);
m1465shorts_.add((short)100);
m1465pokemonData_.setTechnicalMoves(m1465shorts_);
m1465pokemonData_.setBaseEvo(I_STALGAMIN);
m1465pokemonData_.setCatchingRate((short)75);
m1465pokemonData_.setHeight(Rate.newRate(R_13_10));
m1465pokemonData_.setExpEvo(ExpType.M);
m1465pokemonData_.setExpRate(168);
m1465stringList_=new StringList(new CollCapacity(2));
m1465stringList_.add(I_FEE);
m1465stringList_.add(I_MINERAL);
m1465pokemonData_.setEggGroups(m1465stringList_);
m1465pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1465pokemonData_.setHappiness((short)70);
m1465pokemonData_.setHappinessHatch((short)140);
return m1465pokemonData_;
}
static PokemonData p440(){
PokemonData m1466pokemonData_=Instances.newPokemonData();
m1466pokemonData_.setWeight(Rate.newRate(R_261_2));
StringList m1466stringList_=new StringList(new CollCapacity(1));
m1466stringList_.add(I_NORMAL);
m1466pokemonData_.setTypes(m1466stringList_);
EnumMap<Statistic,StatBaseEv> m1466enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)160,(short)0));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)0));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)150,(short)3));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)0));
m1466enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)100,(short)0));
m1466pokemonData_.setStatistics(m1466enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1466custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1466custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1466custListLevelMove_.add(new LevelMove((short)1,I_BAILLEMENT));
m1466custListLevelMove_.add(new LevelMove((short)7,I_ENCORE));
m1466custListLevelMove_.add(new LevelMove((short)13,I_PARESSE));
m1466custListLevelMove_.add(new LevelMove((short)19,I_FEINTE));
m1466custListLevelMove_.add(new LevelMove((short)25,I_AMNESIE));
m1466custListLevelMove_.add(new LevelMove((short)31,I_IMPLORE));
m1466custListLevelMove_.add(new LevelMove((short)36,I_VANTARDISE));
m1466custListLevelMove_.add(new LevelMove((short)37,I_ATTRITION));
m1466custListLevelMove_.add(new LevelMove((short)43,I_RIPOSTE));
m1466custListLevelMove_.add(new LevelMove((short)49,I_FLEAU));
m1466custListLevelMove_.add(new LevelMove((short)55,I_DEGOMMAGE));
m1466custListLevelMove_.add(new LevelMove((short)61,I_PUNITION));
m1466custListLevelMove_.add(new LevelMove((short)67,I_MARTO_POING));
m1466pokemonData_.setLevMoves(m1466custListLevelMove_);
m1466pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1466stringList_=new StringList(new CollCapacity(1));
m1466stringList_.add(I_ESPRIT_VITAL);
m1466pokemonData_.setAbilities(m1466stringList_);
m1466stringList_=new StringList(new CollCapacity(35));
m1466stringList_.add(I_BALAYAGE);
m1466stringList_.add(I_BARRAGE);
m1466stringList_.add(I_BLABLA_DODO);
m1466stringList_.add(I_CLONAGE);
m1466stringList_.add(I_COPIE);
m1466stringList_.add(I_COUD_BOUE);
m1466stringList_.add(I_COUP_BAS);
m1466stringList_.add(I_COUP_D_BOULE);
m1466stringList_.add(I_DAMOCLES);
m1466stringList_.add(I_DETRICANON);
m1466stringList_.add(I_DYNAMOPOING);
m1466stringList_.add(I_EBOULEMENT);
m1466stringList_.add(I_ECLATEGRIFFE);
m1466stringList_.add(I_FRAPPE_ATLAS);
m1466stringList_.add(I_MALEDICTION);
m1466stringList_.add(I_MARTO_POING);
m1466stringList_.add(I_PLAQUAGE);
m1466stringList_.add(I_POING_DE_FEU);
m1466stringList_.add(I_POING_ECLAIR);
m1466stringList_.add(I_POINGLACE);
m1466stringList_.add(I_POURSUITE);
m1466stringList_.add(I_RIPOSTE);
m1466stringList_.add(I_RONFLEMENT);
m1466stringList_.add(I_TAILLADE);
m1466stringList_.add(I_TENACITE);
m1466stringList_.add(I_TRANCHE);
m1466stringList_.add(I_TRANCHE_NUIT);
m1466stringList_.add(I_ULTIMAPOING);
m1466stringList_.add(I_ULTIMAWASHI);
m1466stringList_.add(I_VANTARDISE);
m1466stringList_.add(I_VENT_GLACE);
m1466stringList_.add(I_APRES_VOUS);
m1466stringList_.add(I_IMPLORE);
m1466stringList_.add(I_COUPE);
m1466stringList_.add(I_FORCE);
m1466pokemonData_.setMoveTutors(m1466stringList_);
Shorts m1466shorts_=new Shorts(new CollCapacity(2));
m1466shorts_.add((short)1);
m1466shorts_.add((short)4);
m1466pokemonData_.setHiddenMoves(m1466shorts_);
m1466shorts_=new Shorts(new CollCapacity(46));
m1466shorts_.add((short)94);
m1466shorts_.add((short)1);
m1466shorts_.add((short)5);
m1466shorts_.add((short)6);
m1466shorts_.add((short)8);
m1466shorts_.add((short)10);
m1466shorts_.add((short)11);
m1466shorts_.add((short)12);
m1466shorts_.add((short)13);
m1466shorts_.add((short)14);
m1466shorts_.add((short)15);
m1466shorts_.add((short)17);
m1466shorts_.add((short)18);
m1466shorts_.add((short)21);
m1466shorts_.add((short)22);
m1466shorts_.add((short)23);
m1466shorts_.add((short)24);
m1466shorts_.add((short)25);
m1466shorts_.add((short)26);
m1466shorts_.add((short)27);
m1466shorts_.add((short)30);
m1466shorts_.add((short)31);
m1466shorts_.add((short)32);
m1466shorts_.add((short)35);
m1466shorts_.add((short)38);
m1466shorts_.add((short)39);
m1466shorts_.add((short)40);
m1466shorts_.add((short)42);
m1466shorts_.add((short)44);
m1466shorts_.add((short)45);
m1466shorts_.add((short)47);
m1466shorts_.add((short)48);
m1466shorts_.add((short)52);
m1466shorts_.add((short)56);
m1466shorts_.add((short)59);
m1466shorts_.add((short)60);
m1466shorts_.add((short)65);
m1466shorts_.add((short)67);
m1466shorts_.add((short)68);
m1466shorts_.add((short)78);
m1466shorts_.add((short)80);
m1466shorts_.add((short)88);
m1466shorts_.add((short)87);
m1466shorts_.add((short)90);
m1466shorts_.add((short)98);
m1466shorts_.add((short)100);
m1466pokemonData_.setTechnicalMoves(m1466shorts_);
m1466pokemonData_.setBaseEvo(I_PARECOOL);
m1466pokemonData_.setCatchingRate((short)45);
m1466pokemonData_.setHeight(Rate.newRate(R_2));
m1466pokemonData_.setExpEvo(ExpType.L);
m1466pokemonData_.setExpRate(252);
m1466stringList_=new StringList(new CollCapacity(1));
m1466stringList_.add(I_SOL);
m1466pokemonData_.setEggGroups(m1466stringList_);
m1466pokemonData_.setHatchingSteps(LgInt.newLgInt(R_4095));
m1466pokemonData_.setHappiness((short)70);
m1466pokemonData_.setHappinessHatch((short)140);
return m1466pokemonData_;
}
static PokemonData p441(){
PokemonData m1467pokemonData_=Instances.newPokemonData();
m1467pokemonData_.setWeight(Rate.newRate(R_2));
StringList m1467stringList_=new StringList(new CollCapacity(2));
m1467stringList_.add(I_ACIER);
m1467stringList_.add(I_SPECTRE);
m1467pokemonData_.setTypes(m1467stringList_);
EnumMap<Statistic,StatBaseEv> m1467enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)80,(short)0));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)35,(short)0));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)37,(short)0));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)1));
m1467enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)28,(short)0));
m1467pokemonData_.setStatistics(m1467enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1467custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(20));
m1467custListLevelMove_.add(new LevelMove((short)1,I_DANSE_LAMES));
m1467custListLevelMove_.add(new LevelMove((short)1,I_DANSE_LAMES));
m1467custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1467custListLevelMove_.add(new LevelMove((short)5,I_TAILLADE));
m1467custListLevelMove_.add(new LevelMove((short)8,I_STRIDO_SON));
m1467custListLevelMove_.add(new LevelMove((short)8,I_STRIDO_SON));
m1467custListLevelMove_.add(new LevelMove((short)13,I_POURSUITE));
m1467custListLevelMove_.add(new LevelMove((short)18,I_ALLEGEMENT));
m1467custListLevelMove_.add(new LevelMove((short)20,I_OMBRE_PORTEE));
m1467custListLevelMove_.add(new LevelMove((short)20,I_OMBRE_PORTEE));
m1467custListLevelMove_.add(new LevelMove((short)22,I_AEROPIQUE));
m1467custListLevelMove_.add(new LevelMove((short)22,I_AEROPIQUE));
m1467custListLevelMove_.add(new LevelMove((short)26,I_VENGEANCE));
m1467custListLevelMove_.add(new LevelMove((short)26,I_VENGEANCE));
m1467custListLevelMove_.add(new LevelMove((short)29,I_TRANCHE));
m1467custListLevelMove_.add(new LevelMove((short)32,I_MUR_DE_FER));
m1467custListLevelMove_.add(new LevelMove((short)35,I_TRANCHE_NUIT));
m1467custListLevelMove_.add(new LevelMove((short)39,I_ASTUCE_FORCE));
m1467custListLevelMove_.add(new LevelMove((short)42,I_TETE_DE_FER));
m1467custListLevelMove_.add(new LevelMove((short)47,I_LAME_SAINTE));
m1467pokemonData_.setLevMoves(m1467custListLevelMove_);
m1467pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1467stringList_=new StringList(new CollCapacity(1));
m1467stringList_.add(I_ANNULE_GARDE);
m1467pokemonData_.setAbilities(m1467stringList_);
m1467stringList_=new StringList(new CollCapacity(5));
m1467stringList_.add(I_GARDE_LARGE);
m1467stringList_.add(I_OMBRE_PORTEE);
m1467stringList_.add(I_PRLVT_DESTIN);
m1467stringList_.add(I_STRIDO_SON);
m1467stringList_.add(I_COUPE);
m1467pokemonData_.setMoveTutors(m1467stringList_);
Shorts m1467shorts_=new Shorts(new CollCapacity(1));
m1467shorts_.add((short)1);
m1467pokemonData_.setHiddenMoves(m1467shorts_);
m1467shorts_=new Shorts(new CollCapacity(25));
m1467shorts_.add((short)94);
m1467shorts_.add((short)6);
m1467shorts_.add((short)10);
m1467shorts_.add((short)17);
m1467shorts_.add((short)18);
m1467shorts_.add((short)21);
m1467shorts_.add((short)27);
m1467shorts_.add((short)31);
m1467shorts_.add((short)32);
m1467shorts_.add((short)33);
m1467shorts_.add((short)40);
m1467shorts_.add((short)42);
m1467shorts_.add((short)44);
m1467shorts_.add((short)45);
m1467shorts_.add((short)54);
m1467shorts_.add((short)65);
m1467shorts_.add((short)67);
m1467shorts_.add((short)74);
m1467shorts_.add((short)75);
m1467shorts_.add((short)80);
m1467shorts_.add((short)88);
m1467shorts_.add((short)87);
m1467shorts_.add((short)90);
m1467shorts_.add((short)91);
m1467shorts_.add((short)100);
m1467pokemonData_.setTechnicalMoves(m1467shorts_);
m1467pokemonData_.setBaseEvo(I_MONORPALE);
StringMap<Evolution> m1467stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1467evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1467evolutionLevelSimple_.setLevel((short)35);
m1467stringMapEvolution_.addEntry(I_DIMOCLES,m1467evolutionLevelSimple_);
m1467pokemonData_.setEvolutions(m1467stringMapEvolution_);
m1467pokemonData_.setCatchingRate((short)180);
m1467pokemonData_.setHeight(Rate.newRate(R_4_5));
m1467pokemonData_.setExpEvo(ExpType.M);
m1467pokemonData_.setExpRate(65);
m1467stringList_=new StringList(new CollCapacity(7));
m1467stringList_.add(I_METAMORPH);
m1467stringList_.add(I_MINERAL);
m1467stringList_.add(I_INSECTE);
m1467stringList_.add(I_PLANTE);
m1467stringList_.add(I_FEE);
m1467stringList_.add(I_SANS_OEUF);
m1467stringList_.add(I_INDETERMINE);
m1467pokemonData_.setEggGroups(m1467stringList_);
m1467pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1467pokemonData_.setHappiness((short)70);
m1467pokemonData_.setHappinessHatch((short)140);
return m1467pokemonData_;
}
static PokemonData p442(){
PokemonData m1468pokemonData_=Instances.newPokemonData();
m1468pokemonData_.setWeight(Rate.newRate(R_4_5));
StringList m1468stringList_=new StringList(new CollCapacity(1));
m1468stringList_.add(I_NORMAL);
m1468pokemonData_.setTypes(m1468stringList_);
EnumMap<Statistic,StatBaseEv> m1468enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)70,(short)0));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)70,(short)0));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)70,(short)0));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)1));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1468enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)0));
m1468pokemonData_.setStatistics(m1468enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1468custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1468custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1468custListLevelMove_.add(new LevelMove((short)10,I_POUDREUSE));
m1468custListLevelMove_.add(new LevelMove((short)10,I_PISTOLET_A_O));
m1468custListLevelMove_.add(new LevelMove((short)10,I_FLAMMECHE));
m1468custListLevelMove_.add(new LevelMove((short)15,I_COUP_D_BOULE));
m1468custListLevelMove_.add(new LevelMove((short)20,I_ZENITH));
m1468custListLevelMove_.add(new LevelMove((short)20,I_GRELE));
m1468custListLevelMove_.add(new LevelMove((short)20,I_DANSE_PLUIE));
m1468custListLevelMove_.add(new LevelMove((short)30,I_BALL_METEO));
m1468custListLevelMove_.add(new LevelMove((short)40,I_DEFLAGRATION));
m1468custListLevelMove_.add(new LevelMove((short)40,I_BLIZZARD));
m1468custListLevelMove_.add(new LevelMove((short)40,I_HYDROCANON));
m1468pokemonData_.setLevMoves(m1468custListLevelMove_);
m1468pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1468stringList_=new StringList(new CollCapacity(1));
m1468stringList_.add(I_METEO);
m1468pokemonData_.setAbilities(m1468stringList_);
m1468stringList_=new StringList(new CollCapacity(25));
m1468stringList_.add(I_AIR_VEINARD);
m1468stringList_.add(I_AMNESIE);
m1468stringList_.add(I_BLABLA_DODO);
m1468stringList_.add(I_BOOST);
m1468stringList_.add(I_BOUL_ARMURE);
m1468stringList_.add(I_CAGE_ECLAIR);
m1468stringList_.add(I_CLONAGE);
m1468stringList_.add(I_COPIE);
m1468stringList_.add(I_DAMOCLES);
m1468stringList_.add(I_DERNIERECOUR);
m1468stringList_.add(I_ENTRAVE);
m1468stringList_.add(I_METEORES);
m1468stringList_.add(I_PLAQUAGE);
m1468stringList_.add(I_PRESCIENCE);
m1468stringList_.add(I_RONFLEMENT);
m1468stringList_.add(I_TENACITE);
m1468stringList_.add(I_VANTARDISE);
m1468stringList_.add(I_VENT_ARRIERE);
m1468stringList_.add(I_VENT_GLACE);
m1468stringList_.add(I_VENT_MAUVAIS);
m1468stringList_.add(I_BAIN_DE_SMOG);
m1468stringList_.add(I_CHATIMENT);
m1468stringList_.add(I_COPIE_TYPE);
m1468stringList_.add(I_FORCE_COSMIK);
m1468stringList_.add(I_PERMUGARDE);
m1468pokemonData_.setMoveTutors(m1468stringList_);
Shorts m1468shorts_=new Shorts(new CollCapacity(34));
m1468shorts_.add((short)70);
m1468shorts_.add((short)6);
m1468shorts_.add((short)7);
m1468shorts_.add((short)10);
m1468shorts_.add((short)11);
m1468shorts_.add((short)13);
m1468shorts_.add((short)14);
m1468shorts_.add((short)17);
m1468shorts_.add((short)18);
m1468shorts_.add((short)21);
m1468shorts_.add((short)22);
m1468shorts_.add((short)24);
m1468shorts_.add((short)25);
m1468shorts_.add((short)27);
m1468shorts_.add((short)30);
m1468shorts_.add((short)32);
m1468shorts_.add((short)35);
m1468shorts_.add((short)37);
m1468shorts_.add((short)38);
m1468shorts_.add((short)42);
m1468shorts_.add((short)44);
m1468shorts_.add((short)45);
m1468shorts_.add((short)46);
m1468shorts_.add((short)48);
m1468shorts_.add((short)53);
m1468shorts_.add((short)55);
m1468shorts_.add((short)59);
m1468shorts_.add((short)67);
m1468shorts_.add((short)73);
m1468shorts_.add((short)77);
m1468shorts_.add((short)88);
m1468shorts_.add((short)87);
m1468shorts_.add((short)90);
m1468shorts_.add((short)100);
m1468pokemonData_.setTechnicalMoves(m1468shorts_);
m1468pokemonData_.setBaseEvo(I_MORPHEO);
m1468pokemonData_.setCatchingRate((short)45);
m1468pokemonData_.setHeight(Rate.newRate(R_3_10));
m1468pokemonData_.setExpEvo(ExpType.M);
m1468pokemonData_.setExpRate(147);
m1468stringList_=new StringList(new CollCapacity(2));
m1468stringList_.add(I_FEE);
m1468stringList_.add(I_INDETERMINE);
m1468pokemonData_.setEggGroups(m1468stringList_);
m1468pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1468pokemonData_.setHappiness((short)70);
m1468pokemonData_.setHappinessHatch((short)140);
return m1468pokemonData_;
}
static PokemonData p443(){
PokemonData m1469pokemonData_=Instances.newPokemonData();
m1469pokemonData_.setWeight(Rate.newRate(R_3_10));
StringList m1469stringList_=new StringList(new CollCapacity(2));
m1469stringList_.add(I_ELECTRIQUE);
m1469stringList_.add(I_SPECTRE);
m1469pokemonData_.setTypes(m1469stringList_);
EnumMap<Statistic,StatBaseEv> m1469enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)50,(short)0));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)1));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)77,(short)0));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)77,(short)0));
m1469enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)91,(short)1));
m1469pokemonData_.setStatistics(m1469enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1469custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1469custListLevelMove_.add(new LevelMove((short)1,I_TOURMAGIK));
m1469custListLevelMove_.add(new LevelMove((short)1,I_ETONNEMENT));
m1469custListLevelMove_.add(new LevelMove((short)1,I_CAGE_ECLAIR));
m1469custListLevelMove_.add(new LevelMove((short)1,I_ECLAIR));
m1469custListLevelMove_.add(new LevelMove((short)1,I_ONDE_FOLIE));
m1469custListLevelMove_.add(new LevelMove((short)8,I_BROUHAHA));
m1469custListLevelMove_.add(new LevelMove((short)15,I_REFLET));
m1469custListLevelMove_.add(new LevelMove((short)22,I_ONDE_DE_CHOC));
m1469custListLevelMove_.add(new LevelMove((short)29,I_VENT_MAUVAIS));
m1469custListLevelMove_.add(new LevelMove((short)36,I_CLONAGE));
m1469custListLevelMove_.add(new LevelMove((short)43,I_BOULE_ELEK));
m1469custListLevelMove_.add(new LevelMove((short)50,I_CHATIMENT));
m1469custListLevelMove_.add(new LevelMove((short)57,I_CHARGEUR));
m1469custListLevelMove_.add(new LevelMove((short)64,I_COUP_D_JUS));
m1469pokemonData_.setLevMoves(m1469custListLevelMove_);
m1469pokemonData_.setGenderRep(GenderRepartition.NO_GENDER);
m1469stringList_=new StringList(new CollCapacity(1));
m1469stringList_.add(I_LEVITATION);
m1469pokemonData_.setAbilities(m1469stringList_);
m1469stringList_=new StringList(new CollCapacity(15));
m1469stringList_.add(I_BALANCE);
m1469stringList_.add(I_COUD_BOUE);
m1469stringList_.add(I_COUP_BAS);
m1469stringList_.add(I_DEPIT);
m1469stringList_.add(I_METEORES);
m1469stringList_.add(I_RAYON_SIGNAL);
m1469stringList_.add(I_RONFLEMENT);
m1469stringList_.add(I_TOURMAGIK);
m1469stringList_.add(I_VENT_MAUVAIS);
m1469stringList_.add(I_BLABLA_DODO);
m1469stringList_.add(I_BROUHAHA);
m1469stringList_.add(I_SAISIE);
m1469stringList_.add(I_TOILE_ELEK);
m1469stringList_.add(I_VIBROBSCUR);
m1469stringList_.add(I_ORAGE);
m1469pokemonData_.setMoveTutors(m1469stringList_);
Shorts m1469shorts_=new Shorts(new CollCapacity(29));
m1469shorts_.add((short)70);
m1469shorts_.add((short)6);
m1469shorts_.add((short)10);
m1469shorts_.add((short)11);
m1469shorts_.add((short)16);
m1469shorts_.add((short)17);
m1469shorts_.add((short)18);
m1469shorts_.add((short)21);
m1469shorts_.add((short)24);
m1469shorts_.add((short)25);
m1469shorts_.add((short)27);
m1469shorts_.add((short)30);
m1469shorts_.add((short)32);
m1469shorts_.add((short)33);
m1469shorts_.add((short)42);
m1469shorts_.add((short)44);
m1469shorts_.add((short)46);
m1469shorts_.add((short)48);
m1469shorts_.add((short)57);
m1469shorts_.add((short)61);
m1469shorts_.add((short)72);
m1469shorts_.add((short)73);
m1469shorts_.add((short)77);
m1469shorts_.add((short)97);
m1469shorts_.add((short)88);
m1469shorts_.add((short)85);
m1469shorts_.add((short)87);
m1469shorts_.add((short)90);
m1469shorts_.add((short)100);
m1469pokemonData_.setTechnicalMoves(m1469shorts_);
m1469pokemonData_.setBaseEvo(I_MOTISMA);
m1469pokemonData_.setCatchingRate((short)45);
m1469pokemonData_.setHeight(Rate.newRate(R_3_10));
m1469pokemonData_.setExpEvo(ExpType.M);
m1469pokemonData_.setExpRate(154);
m1469stringList_=new StringList(new CollCapacity(1));
m1469stringList_.add(I_INDETERMINE);
m1469pokemonData_.setEggGroups(m1469stringList_);
m1469pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1469pokemonData_.setHappiness((short)70);
m1469pokemonData_.setHappinessHatch((short)140);
return m1469pokemonData_;
}
static PokemonData p444(){
PokemonData m1470pokemonData_=Instances.newPokemonData();
m1470pokemonData_.setWeight(Rate.newRate(R_38));
StringList m1470stringList_=new StringList(new CollCapacity(2));
m1470stringList_.add(I_POISON);
m1470stringList_.add(I_TENEBRE);
m1470pokemonData_.setTypes(m1470stringList_);
EnumMap<Statistic,StatBaseEv> m1470enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)93,(short)0));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)71,(short)0));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)61,(short)0));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)103,(short)2));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)67,(short)0));
m1470enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)84,(short)0));
m1470pokemonData_.setStatistics(m1470enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1470custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1470custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1470custListLevelMove_.add(new LevelMove((short)1,I_PUISSANCE));
m1470custListLevelMove_.add(new LevelMove((short)4,I_GAZ_TOXIK));
m1470custListLevelMove_.add(new LevelMove((short)7,I_GRINCEMENT));
m1470custListLevelMove_.add(new LevelMove((short)10,I_COMBO_GRIFFE));
m1470custListLevelMove_.add(new LevelMove((short)14,I_BROUILLARD));
m1470custListLevelMove_.add(new LevelMove((short)18,I_RUSE));
m1470custListLevelMove_.add(new LevelMove((short)22,I_TRANCHE));
m1470custListLevelMove_.add(new LevelMove((short)27,I_TOXIK));
m1470custListLevelMove_.add(new LevelMove((short)32,I_BOMBE_ACIDE));
m1470custListLevelMove_.add(new LevelMove((short)34,I_LANCE_FLAMME));
m1470custListLevelMove_.add(new LevelMove((short)41,I_TRANCHE_NUIT));
m1470custListLevelMove_.add(new LevelMove((short)51,I_SOUVENIR));
m1470custListLevelMove_.add(new LevelMove((short)56,I_ERUCTATION));
m1470custListLevelMove_.add(new LevelMove((short)61,I_EXPLOSION));
m1470pokemonData_.setLevMoves(m1470custListLevelMove_);
m1470pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1470stringList_=new StringList(new CollCapacity(2));
m1470stringList_.add(I_PUANTEUR);
m1470stringList_.add(I_BOOM_FINAL);
m1470pokemonData_.setAbilities(m1470stringList_);
m1470stringList_=new StringList(new CollCapacity(22));
m1470stringList_.add(I_BUEE_NOIRE);
m1470stringList_.add(I_COUD_BOUE);
m1470stringList_.add(I_COUP_BAS);
m1470stringList_.add(I_COUP_D_BOULE);
m1470stringList_.add(I_DAMOCLES);
m1470stringList_.add(I_ETONNEMENT);
m1470stringList_.add(I_GRIMACE);
m1470stringList_.add(I_GROZ_YEUX);
m1470stringList_.add(I_MACHOUILLE);
m1470stringList_.add(I_METEORES);
m1470stringList_.add(I_POURSUITE);
m1470stringList_.add(I_PUNITION);
m1470stringList_.add(I_PUREDPOIS);
m1470stringList_.add(I_RONFLEMENT);
m1470stringList_.add(I_TAILLADE);
m1470stringList_.add(I_BLABLA_DODO);
m1470stringList_.add(I_QUEUE_DE_FER);
m1470stringList_.add(I_SAISIE);
m1470stringList_.add(I_TRICHERIE);
m1470stringList_.add(I_VIBROBSCUR);
m1470stringList_.add(I_COUPE);
m1470stringList_.add(I_FORCE);
m1470pokemonData_.setMoveTutors(m1470stringList_);
Shorts m1470shorts_=new Shorts(new CollCapacity(2));
m1470shorts_.add((short)1);
m1470shorts_.add((short)4);
m1470pokemonData_.setHiddenMoves(m1470shorts_);
m1470shorts_=new Shorts(new CollCapacity(37));
m1470shorts_.add((short)94);
m1470shorts_.add((short)1);
m1470shorts_.add((short)5);
m1470shorts_.add((short)6);
m1470shorts_.add((short)9);
m1470shorts_.add((short)10);
m1470shorts_.add((short)11);
m1470shorts_.add((short)12);
m1470shorts_.add((short)15);
m1470shorts_.add((short)17);
m1470shorts_.add((short)18);
m1470shorts_.add((short)21);
m1470shorts_.add((short)27);
m1470shorts_.add((short)28);
m1470shorts_.add((short)30);
m1470shorts_.add((short)32);
m1470shorts_.add((short)35);
m1470shorts_.add((short)36);
m1470shorts_.add((short)38);
m1470shorts_.add((short)41);
m1470shorts_.add((short)42);
m1470shorts_.add((short)44);
m1470shorts_.add((short)45);
m1470shorts_.add((short)46);
m1470shorts_.add((short)48);
m1470shorts_.add((short)59);
m1470shorts_.add((short)64);
m1470shorts_.add((short)65);
m1470shorts_.add((short)66);
m1470shorts_.add((short)68);
m1470shorts_.add((short)97);
m1470shorts_.add((short)88);
m1470shorts_.add((short)84);
m1470shorts_.add((short)87);
m1470shorts_.add((short)90);
m1470shorts_.add((short)95);
m1470shorts_.add((short)100);
m1470pokemonData_.setTechnicalMoves(m1470shorts_);
m1470pokemonData_.setBaseEvo(I_MOUFOUETTE);
m1470pokemonData_.setCatchingRate((short)60);
m1470pokemonData_.setHeight(Rate.newRate(R_1));
m1470pokemonData_.setExpEvo(ExpType.M);
m1470pokemonData_.setExpRate(168);
m1470stringList_=new StringList(new CollCapacity(1));
m1470stringList_.add(I_SOL);
m1470pokemonData_.setEggGroups(m1470stringList_);
m1470pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1470pokemonData_.setHappiness((short)70);
m1470pokemonData_.setHappinessHatch((short)140);
return m1470pokemonData_;
}
static PokemonData p445(){
PokemonData m1471pokemonData_=Instances.newPokemonData();
m1471pokemonData_.setWeight(Rate.newRate(R_96_5));
StringList m1471stringList_=new StringList(new CollCapacity(2));
m1471stringList_.add(I_POISON);
m1471stringList_.add(I_TENEBRE);
m1471pokemonData_.setTypes(m1471stringList_);
EnumMap<Statistic,StatBaseEv> m1471enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)63,(short)0));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)41,(short)0));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)41,(short)0));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)63,(short)0));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)47,(short)0));
m1471enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)74,(short)1));
m1471pokemonData_.setStatistics(m1471enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1471custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1471custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1471custListLevelMove_.add(new LevelMove((short)1,I_PUISSANCE));
m1471custListLevelMove_.add(new LevelMove((short)4,I_GAZ_TOXIK));
m1471custListLevelMove_.add(new LevelMove((short)7,I_GRINCEMENT));
m1471custListLevelMove_.add(new LevelMove((short)10,I_COMBO_GRIFFE));
m1471custListLevelMove_.add(new LevelMove((short)14,I_BROUILLARD));
m1471custListLevelMove_.add(new LevelMove((short)18,I_RUSE));
m1471custListLevelMove_.add(new LevelMove((short)22,I_TRANCHE));
m1471custListLevelMove_.add(new LevelMove((short)27,I_TOXIK));
m1471custListLevelMove_.add(new LevelMove((short)32,I_BOMBE_ACIDE));
m1471custListLevelMove_.add(new LevelMove((short)37,I_TRANCHE_NUIT));
m1471custListLevelMove_.add(new LevelMove((short)43,I_SOUVENIR));
m1471custListLevelMove_.add(new LevelMove((short)46,I_ERUCTATION));
m1471custListLevelMove_.add(new LevelMove((short)49,I_EXPLOSION));
m1471pokemonData_.setLevMoves(m1471custListLevelMove_);
m1471pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1471stringList_=new StringList(new CollCapacity(2));
m1471stringList_.add(I_PUANTEUR);
m1471stringList_.add(I_BOOM_FINAL);
m1471pokemonData_.setAbilities(m1471stringList_);
m1471stringList_=new StringList(new CollCapacity(23));
m1471stringList_.add(I_BUEE_NOIRE);
m1471stringList_.add(I_COUD_BOUE);
m1471stringList_.add(I_COUP_BAS);
m1471stringList_.add(I_COUP_D_BOULE);
m1471stringList_.add(I_DAMOCLES);
m1471stringList_.add(I_ETONNEMENT);
m1471stringList_.add(I_GRIMACE);
m1471stringList_.add(I_GROZ_YEUX);
m1471stringList_.add(I_MACHOUILLE);
m1471stringList_.add(I_METEORES);
m1471stringList_.add(I_POURSUITE);
m1471stringList_.add(I_PUNITION);
m1471stringList_.add(I_PUREDPOIS);
m1471stringList_.add(I_RONFLEMENT);
m1471stringList_.add(I_TAILLADE);
m1471stringList_.add(I_BLABLA_DODO);
m1471stringList_.add(I_CALINERIE);
m1471stringList_.add(I_QUEUE_DE_FER);
m1471stringList_.add(I_REBONDIFEU);
m1471stringList_.add(I_SAISIE);
m1471stringList_.add(I_TRICHERIE);
m1471stringList_.add(I_VIBROBSCUR);
m1471stringList_.add(I_COUPE);
m1471pokemonData_.setMoveTutors(m1471stringList_);
Shorts m1471shorts_=new Shorts(new CollCapacity(1));
m1471shorts_.add((short)1);
m1471pokemonData_.setHiddenMoves(m1471shorts_);
m1471shorts_=new Shorts(new CollCapacity(34));
m1471shorts_.add((short)94);
m1471shorts_.add((short)1);
m1471shorts_.add((short)5);
m1471shorts_.add((short)6);
m1471shorts_.add((short)9);
m1471shorts_.add((short)10);
m1471shorts_.add((short)11);
m1471shorts_.add((short)12);
m1471shorts_.add((short)17);
m1471shorts_.add((short)18);
m1471shorts_.add((short)21);
m1471shorts_.add((short)27);
m1471shorts_.add((short)28);
m1471shorts_.add((short)30);
m1471shorts_.add((short)32);
m1471shorts_.add((short)35);
m1471shorts_.add((short)36);
m1471shorts_.add((short)38);
m1471shorts_.add((short)41);
m1471shorts_.add((short)42);
m1471shorts_.add((short)44);
m1471shorts_.add((short)45);
m1471shorts_.add((short)46);
m1471shorts_.add((short)48);
m1471shorts_.add((short)59);
m1471shorts_.add((short)64);
m1471shorts_.add((short)65);
m1471shorts_.add((short)66);
m1471shorts_.add((short)97);
m1471shorts_.add((short)88);
m1471shorts_.add((short)87);
m1471shorts_.add((short)90);
m1471shorts_.add((short)95);
m1471shorts_.add((short)100);
m1471pokemonData_.setTechnicalMoves(m1471shorts_);
m1471pokemonData_.setBaseEvo(I_MOUFOUETTE);
StringMap<Evolution> m1471stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1471evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1471evolutionLevelSimple_.setLevel((short)34);
m1471stringMapEvolution_.addEntry(I_MOUFFLAIR,m1471evolutionLevelSimple_);
m1471pokemonData_.setEvolutions(m1471stringMapEvolution_);
m1471pokemonData_.setCatchingRate((short)225);
m1471pokemonData_.setHeight(Rate.newRate(R_2_5));
m1471pokemonData_.setExpEvo(ExpType.M);
m1471pokemonData_.setExpRate(66);
m1471stringList_=new StringList(new CollCapacity(1));
m1471stringList_.add(I_SOL);
m1471pokemonData_.setEggGroups(m1471stringList_);
m1471pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1471pokemonData_.setHappiness((short)70);
m1471pokemonData_.setHappinessHatch((short)140);
return m1471pokemonData_;
}
static PokemonData p446(){
PokemonData m1472pokemonData_=Instances.newPokemonData();
m1472pokemonData_.setWeight(Rate.newRate(R_59_10));
StringList m1472stringList_=new StringList(new CollCapacity(1));
m1472stringList_.add(I_EAU);
m1472pokemonData_.setTypes(m1472stringList_);
EnumMap<Statistic,StatBaseEv> m1472enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)63,(short)1));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)45,(short)0));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)55,(short)0));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1472enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)45,(short)0));
m1472pokemonData_.setStatistics(m1472enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1472custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1472custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1472custListLevelMove_.add(new LevelMove((short)5,I_MIMI_QUEUE));
m1472custListLevelMove_.add(new LevelMove((short)7,I_PISTOLET_A_O));
m1472custListLevelMove_.add(new LevelMove((short)11,I_TOURNIQUET));
m1472custListLevelMove_.add(new LevelMove((short)13,I_PUISSANCE));
m1472custListLevelMove_.add(new LevelMove((short)17,I_COQUILAME));
m1472custListLevelMove_.add(new LevelMove((short)19,I_TAILLADE));
m1472custListLevelMove_.add(new LevelMove((short)23,I_VIBRAQUA));
m1472custListLevelMove_.add(new LevelMove((short)25,I_VENDETTA));
m1472custListLevelMove_.add(new LevelMove((short)29,I_AQUA_JET));
m1472custListLevelMove_.add(new LevelMove((short)31,I_ENCORE));
m1472custListLevelMove_.add(new LevelMove((short)35,I_HYDROQUEUE));
m1472custListLevelMove_.add(new LevelMove((short)37,I_VENGEANCE));
m1472custListLevelMove_.add(new LevelMove((short)41,I_DANSE_LAMES));
m1472custListLevelMove_.add(new LevelMove((short)43,I_HYDROCANON));
m1472pokemonData_.setLevMoves(m1472custListLevelMove_);
m1472pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1472stringList_=new StringList(new CollCapacity(2));
m1472stringList_.add(I_TORRENT);
m1472stringList_.add(I_COQUE_ARMURE);
m1472pokemonData_.setAbilities(m1472stringList_);
m1472stringList_=new StringList(new CollCapacity(19));
m1472stringList_.add(I_AIRE_D_EAU);
m1472stringList_.add(I_ASSURANCE);
m1472stringList_.add(I_ATOUT);
m1472stringList_.add(I_DETECTION);
m1472stringList_.add(I_GRINCEMENT);
m1472stringList_.add(I_LAME_D_AIR);
m1472stringList_.add(I_PHOTOCOPIE);
m1472stringList_.add(I_SAUMURE);
m1472stringList_.add(I_TRANCHE_NUIT);
m1472stringList_.add(I_BLABLA_DODO);
m1472stringList_.add(I_COUP_D_MAIN);
m1472stringList_.add(I_HYDROQUEUE);
m1472stringList_.add(I_IMPLORE);
m1472stringList_.add(I_QUEUE_DE_FER);
m1472stringList_.add(I_RONFLEMENT);
m1472stringList_.add(I_VENT_GLACE);
m1472stringList_.add(I_COUPE);
m1472stringList_.add(I_SURF);
m1472stringList_.add(I_SIPHON);
m1472pokemonData_.setMoveTutors(m1472stringList_);
Shorts m1472shorts_=new Shorts(new CollCapacity(3));
m1472shorts_.add((short)1);
m1472shorts_.add((short)3);
m1472shorts_.add((short)5);
m1472pokemonData_.setHiddenMoves(m1472shorts_);
m1472shorts_=new Shorts(new CollCapacity(29));
m1472shorts_.add((short)94);
m1472shorts_.add((short)6);
m1472shorts_.add((short)7);
m1472shorts_.add((short)10);
m1472shorts_.add((short)12);
m1472shorts_.add((short)13);
m1472shorts_.add((short)14);
m1472shorts_.add((short)17);
m1472shorts_.add((short)18);
m1472shorts_.add((short)21);
m1472shorts_.add((short)27);
m1472shorts_.add((short)28);
m1472shorts_.add((short)32);
m1472shorts_.add((short)40);
m1472shorts_.add((short)42);
m1472shorts_.add((short)44);
m1472shorts_.add((short)45);
m1472shorts_.add((short)48);
m1472shorts_.add((short)54);
m1472shorts_.add((short)55);
m1472shorts_.add((short)56);
m1472shorts_.add((short)67);
m1472shorts_.add((short)75);
m1472shorts_.add((short)81);
m1472shorts_.add((short)88);
m1472shorts_.add((short)86);
m1472shorts_.add((short)87);
m1472shorts_.add((short)90);
m1472shorts_.add((short)100);
m1472pokemonData_.setTechnicalMoves(m1472shorts_);
m1472pokemonData_.setBaseEvo(I_MOUSTILLON);
StringMap<Evolution> m1472stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1472evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1472evolutionLevelSimple_.setLevel((short)17);
m1472stringMapEvolution_.addEntry(I_MATELOUTRE,m1472evolutionLevelSimple_);
m1472pokemonData_.setEvolutions(m1472stringMapEvolution_);
m1472pokemonData_.setCatchingRate((short)45);
m1472pokemonData_.setHeight(Rate.newRate(R_1_2));
m1472pokemonData_.setExpEvo(ExpType.P);
m1472pokemonData_.setExpRate(28);
m1472stringList_=new StringList(new CollCapacity(1));
m1472stringList_.add(I_SOL);
m1472pokemonData_.setEggGroups(m1472stringList_);
m1472pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1472pokemonData_.setHappiness((short)70);
m1472pokemonData_.setHappinessHatch((short)140);
return m1472pokemonData_;
}
static PokemonData p447(){
PokemonData m1473pokemonData_=Instances.newPokemonData();
m1473pokemonData_.setWeight(Rate.newRate(R_135));
StringList m1473stringList_=new StringList(new CollCapacity(2));
m1473stringList_.add(I_EAU);
m1473stringList_.add(I_SPECTRE);
m1473pokemonData_.setTypes(m1473stringList_);
EnumMap<Statistic,StatBaseEv> m1473enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)60,(short)0));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)0));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)105,(short)2));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)100,(short)0));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1473enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1473pokemonData_.setStatistics(m1473enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1473custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1473custListLevelMove_.add(new LevelMove((short)1,I_ECUME));
m1473custListLevelMove_.add(new LevelMove((short)1,I_TOURNIQUET));
m1473custListLevelMove_.add(new LevelMove((short)5,I_VOL_VIE));
m1473custListLevelMove_.add(new LevelMove((short)9,I_OMBRE_NOCTURNE));
m1473custListLevelMove_.add(new LevelMove((short)13,I_BULLES_D_O));
m1473custListLevelMove_.add(new LevelMove((short)17,I_SOIN));
m1473custListLevelMove_.add(new LevelMove((short)22,I_VIBRAQUA));
m1473custListLevelMove_.add(new LevelMove((short)27,I_VENT_MAUVAIS));
m1473custListLevelMove_.add(new LevelMove((short)32,I_SAUMURE));
m1473custListLevelMove_.add(new LevelMove((short)37,I_DANSE_PLUIE));
m1473custListLevelMove_.add(new LevelMove((short)45,I_CHATIMENT));
m1473custListLevelMove_.add(new LevelMove((short)53,I_HYDROCANON));
m1473custListLevelMove_.add(new LevelMove((short)61,I_ESSORAGE));
m1473custListLevelMove_.add(new LevelMove((short)69,I_GICLEDO));
m1473pokemonData_.setLevMoves(m1473custListLevelMove_);
m1473pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1473stringList_=new StringList(new CollCapacity(2));
m1473stringList_.add(I_ABSORB_EAU);
m1473stringList_.add(I_MOITEUR);
m1473pokemonData_.setAbilities(m1473stringList_);
m1473stringList_=new StringList(new CollCapacity(12));
m1473stringList_.add(I_BALANCE);
m1473stringList_.add(I_BLABLA_DODO);
m1473stringList_.add(I_DEPIT);
m1473stringList_.add(I_ETREINTE);
m1473stringList_.add(I_GIGA_SANGSUE);
m1473stringList_.add(I_REFLET_MAGIK);
m1473stringList_.add(I_RONFLEMENT);
m1473stringList_.add(I_TOURMAGIK);
m1473stringList_.add(I_VENT_GLACE);
m1473stringList_.add(I_VIBROBSCUR);
m1473stringList_.add(I_SURF);
m1473stringList_.add(I_SIPHON);
m1473pokemonData_.setMoveTutors(m1473stringList_);
Shorts m1473shorts_=new Shorts(new CollCapacity(2));
m1473shorts_.add((short)3);
m1473shorts_.add((short)5);
m1473pokemonData_.setHiddenMoves(m1473shorts_);
m1473shorts_=new Shorts(new CollCapacity(35));
m1473shorts_.add((short)70);
m1473shorts_.add((short)6);
m1473shorts_.add((short)7);
m1473shorts_.add((short)10);
m1473shorts_.add((short)12);
m1473shorts_.add((short)13);
m1473shorts_.add((short)14);
m1473shorts_.add((short)15);
m1473shorts_.add((short)17);
m1473shorts_.add((short)18);
m1473shorts_.add((short)20);
m1473shorts_.add((short)21);
m1473shorts_.add((short)27);
m1473shorts_.add((short)29);
m1473shorts_.add((short)30);
m1473shorts_.add((short)32);
m1473shorts_.add((short)34);
m1473shorts_.add((short)36);
m1473shorts_.add((short)42);
m1473shorts_.add((short)44);
m1473shorts_.add((short)45);
m1473shorts_.add((short)48);
m1473shorts_.add((short)53);
m1473shorts_.add((short)55);
m1473shorts_.add((short)61);
m1473shorts_.add((short)68);
m1473shorts_.add((short)77);
m1473shorts_.add((short)97);
m1473shorts_.add((short)88);
m1473shorts_.add((short)85);
m1473shorts_.add((short)87);
m1473shorts_.add((short)90);
m1473shorts_.add((short)92);
m1473shorts_.add((short)99);
m1473shorts_.add((short)100);
m1473pokemonData_.setTechnicalMoves(m1473shorts_);
m1473pokemonData_.setBaseEvo(I_VISKUSE);
m1473pokemonData_.setCatchingRate((short)60);
m1473pokemonData_.setHeight(Rate.newRate(R_11_5));
m1473pokemonData_.setExpEvo(ExpType.M);
m1473pokemonData_.setExpRate(168);
m1473stringList_=new StringList(new CollCapacity(1));
m1473stringList_.add(I_INDETERMINE);
m1473pokemonData_.setEggGroups(m1473stringList_);
m1473pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1473pokemonData_.setHappiness((short)70);
m1473pokemonData_.setHappinessHatch((short)140);
return m1473pokemonData_;
}
static PokemonData p448(){
PokemonData m1474pokemonData_=Instances.newPokemonData();
m1474pokemonData_.setWeight(Rate.newRate(R_177_10));
StringList m1474stringList_=new StringList(new CollCapacity(1));
m1474stringList_.add(I_INSECTE);
m1474pokemonData_.setTypes(m1474stringList_);
EnumMap<Statistic,StatBaseEv> m1474enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)73,(short)0));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)47,(short)0));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)75,(short)0));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)55,(short)0));
m1474enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)1));
m1474pokemonData_.setStatistics(m1474enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1474custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1474custListLevelMove_.add(new LevelMove((short)1,I_FLASH));
m1474custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1474custListLevelMove_.add(new LevelMove((short)5,I_REFLET));
m1474custListLevelMove_.add(new LevelMove((short)9,I_ONDE_FOLIE));
m1474custListLevelMove_.add(new LevelMove((short)13,I_RAYON_LUNE));
m1474custListLevelMove_.add(new LevelMove((short)17,I_VIVE_ATTAQUE));
m1474custListLevelMove_.add(new LevelMove((short)21,I_LUMIQUEUE));
m1474custListLevelMove_.add(new LevelMove((short)25,I_RAYON_SIGNAL));
m1474custListLevelMove_.add(new LevelMove((short)29,I_ABRI));
m1474custListLevelMove_.add(new LevelMove((short)33,I_COUP_D_MAIN));
m1474custListLevelMove_.add(new LevelMove((short)37,I_PSYKOUD_BOUL));
m1474custListLevelMove_.add(new LevelMove((short)41,I_BOURDON));
m1474custListLevelMove_.add(new LevelMove((short)45,I_DAMOCLES));
m1474pokemonData_.setLevMoves(m1474custListLevelMove_);
m1474pokemonData_.setGenderRep(GenderRepartition.MALE);
m1474stringList_=new StringList(new CollCapacity(1));
m1474stringList_.add(I_ESSAIM);
m1474pokemonData_.setAbilities(m1474stringList_);
m1474stringList_=new StringList(new CollCapacity(36));
m1474stringList_.add(I_BLABLA_DODO);
m1474stringList_.add(I_BOOST);
m1474stringList_.add(I_BOURDON);
m1474stringList_.add(I_CAGE_ECLAIR);
m1474stringList_.add(I_CLONAGE);
m1474stringList_.add(I_COPIE);
m1474stringList_.add(I_COUD_BOUE);
m1474stringList_.add(I_DAMOCLES);
m1474stringList_.add(I_DYNAMOPOING);
m1474stringList_.add(I_ENCORE);
m1474stringList_.add(I_FRAPPE_ATLAS);
m1474stringList_.add(I_METEORES);
m1474stringList_.add(I_METRONOME);
m1474stringList_.add(I_PIQURE);
m1474stringList_.add(I_PLAQUAGE);
m1474stringList_.add(I_POING_ECLAIR);
m1474stringList_.add(I_POINGLACE);
m1474stringList_.add(I_PSYKOUD_BOUL);
m1474stringList_.add(I_RAYON_SIGNAL);
m1474stringList_.add(I_RELAIS);
m1474stringList_.add(I_RIPOSTE);
m1474stringList_.add(I_RONFLEMENT);
m1474stringList_.add(I_SECRETION);
m1474stringList_.add(I_TENACITE);
m1474stringList_.add(I_TOURMAGIK);
m1474stringList_.add(I_TRANCH_AIR);
m1474stringList_.add(I_ULTIMAPOING);
m1474stringList_.add(I_ULTIMAWASHI);
m1474stringList_.add(I_VANTARDISE);
m1474stringList_.add(I_VENT_ARGENTE);
m1474stringList_.add(I_VENT_ARRIERE);
m1474stringList_.add(I_VENT_MAUVAIS);
m1474stringList_.add(I_ATTERRISSAGE);
m1474stringList_.add(I_COUP_D_MAIN);
m1474stringList_.add(I_GIGA_SANGSUE);
m1474stringList_.add(I_UPPERCUT);
m1474pokemonData_.setMoveTutors(m1474stringList_);
Shorts m1474shorts_=new Shorts(new CollCapacity(35));
m1474shorts_.add((short)70);
m1474shorts_.add((short)6);
m1474shorts_.add((short)10);
m1474shorts_.add((short)11);
m1474shorts_.add((short)16);
m1474shorts_.add((short)17);
m1474shorts_.add((short)18);
m1474shorts_.add((short)19);
m1474shorts_.add((short)21);
m1474shorts_.add((short)22);
m1474shorts_.add((short)24);
m1474shorts_.add((short)25);
m1474shorts_.add((short)27);
m1474shorts_.add((short)30);
m1474shorts_.add((short)31);
m1474shorts_.add((short)32);
m1474shorts_.add((short)40);
m1474shorts_.add((short)42);
m1474shorts_.add((short)44);
m1474shorts_.add((short)45);
m1474shorts_.add((short)46);
m1474shorts_.add((short)48);
m1474shorts_.add((short)56);
m1474shorts_.add((short)57);
m1474shorts_.add((short)62);
m1474shorts_.add((short)73);
m1474shorts_.add((short)76);
m1474shorts_.add((short)77);
m1474shorts_.add((short)88);
m1474shorts_.add((short)87);
m1474shorts_.add((short)89);
m1474shorts_.add((short)90);
m1474shorts_.add((short)98);
m1474shorts_.add((short)99);
m1474shorts_.add((short)100);
m1474pokemonData_.setTechnicalMoves(m1474shorts_);
m1474pokemonData_.setBaseEvo(I_MUCIOLE);
m1474pokemonData_.setCatchingRate((short)150);
m1474pokemonData_.setHeight(Rate.newRate(R_7_10));
m1474pokemonData_.setExpEvo(ExpType.E);
m1474pokemonData_.setExpRate(140);
m1474stringList_=new StringList(new CollCapacity(2));
m1474stringList_.add(I_HUMANOIDE);
m1474stringList_.add(I_INSECTE);
m1474pokemonData_.setEggGroups(m1474stringList_);
m1474pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1474pokemonData_.setHappiness((short)70);
m1474pokemonData_.setHappinessHatch((short)140);
return m1474pokemonData_;
}
static PokemonData p449(){
PokemonData m1475pokemonData_=Instances.newPokemonData();
m1475pokemonData_.setWeight(Rate.newRate(R_14_5));
StringList m1475stringList_=new StringList(new CollCapacity(1));
m1475stringList_.add(I_DRAGON);
m1475pokemonData_.setTypes(m1475stringList_);
EnumMap<Statistic,StatBaseEv> m1475enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)50,(short)0));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)75,(short)1));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)35,(short)0));
m1475enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1475pokemonData_.setStatistics(m1475enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1475custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1475custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1475custListLevelMove_.add(new LevelMove((short)1,I_ECUME));
m1475custListLevelMove_.add(new LevelMove((short)5,I_VOL_VIE));
m1475custListLevelMove_.add(new LevelMove((short)9,I_ABRI));
m1475custListLevelMove_.add(new LevelMove((short)9,I_ABRI));
m1475custListLevelMove_.add(new LevelMove((short)13,I_PATIENCE));
m1475custListLevelMove_.add(new LevelMove((short)18,I_DRACOSOUFFLE));
m1475custListLevelMove_.add(new LevelMove((short)25,I_DANSE_PLUIE));
m1475custListLevelMove_.add(new LevelMove((short)25,I_DANSE_PLUIE));
m1475custListLevelMove_.add(new LevelMove((short)28,I_FLEAU));
m1475custListLevelMove_.add(new LevelMove((short)32,I_PLAQUAGE));
m1475custListLevelMove_.add(new LevelMove((short)38,I_OCROUPI));
m1475custListLevelMove_.add(new LevelMove((short)42,I_DRACOCHOC));
m1475pokemonData_.setLevMoves(m1475custListLevelMove_);
m1475pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1475stringList_=new StringList(new CollCapacity(3));
m1475stringList_.add(I_HERBIVORE);
m1475stringList_.add(I_HYDRATATION);
m1475stringList_.add(I_POISSEUX);
m1475pokemonData_.setAbilities(m1475stringList_);
m1475stringList_=new StringList(new CollCapacity(7));
m1475stringList_.add(I_ACIDARMURE);
m1475stringList_.add(I_DRACO_METEOR);
m1475stringList_.add(I_MALEDICTION);
m1475stringList_.add(I_QUEUE_DE_FER);
m1475stringList_.add(I_QUEUE_POISON);
m1475stringList_.add(I_RIPOSTE);
m1475stringList_.add(I_TENACITE);
m1475pokemonData_.setMoveTutors(m1475stringList_);
Shorts m1475shorts_=new Shorts(new CollCapacity(21));
m1475shorts_.add((short)6);
m1475shorts_.add((short)10);
m1475shorts_.add((short)11);
m1475shorts_.add((short)17);
m1475shorts_.add((short)18);
m1475shorts_.add((short)21);
m1475shorts_.add((short)24);
m1475shorts_.add((short)27);
m1475shorts_.add((short)32);
m1475shorts_.add((short)34);
m1475shorts_.add((short)36);
m1475shorts_.add((short)42);
m1475shorts_.add((short)44);
m1475shorts_.add((short)45);
m1475shorts_.add((short)48);
m1475shorts_.add((short)80);
m1475shorts_.add((short)88);
m1475shorts_.add((short)83);
m1475shorts_.add((short)87);
m1475shorts_.add((short)90);
m1475shorts_.add((short)100);
m1475pokemonData_.setTechnicalMoves(m1475shorts_);
m1475pokemonData_.setBaseEvo(I_MUCUSCULE);
StringMap<Evolution> m1475stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1475evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1475evolutionLevelSimple_.setLevel((short)40);
m1475stringMapEvolution_.addEntry(I_COLIMUCUS,m1475evolutionLevelSimple_);
m1475pokemonData_.setEvolutions(m1475stringMapEvolution_);
m1475pokemonData_.setCatchingRate((short)45);
m1475pokemonData_.setHeight(Rate.newRate(R_3_10));
m1475pokemonData_.setExpEvo(ExpType.L);
m1475pokemonData_.setExpRate(60);
m1475stringList_=new StringList(new CollCapacity(7));
m1475stringList_.add(I_METAMORPH);
m1475stringList_.add(I_DRAGON);
m1475stringList_.add(I_SOL);
m1475stringList_.add(I_VOL);
m1475stringList_.add(I_MONSTRE);
m1475stringList_.add(I_EAU_1);
m1475stringList_.add(I_EAU_2);
m1475pokemonData_.setEggGroups(m1475stringList_);
m1475pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1475pokemonData_.setHappiness((short)35);
m1475pokemonData_.setHappinessHatch((short)140);
return m1475pokemonData_;
}
static PokemonData p450(){
PokemonData m1476pokemonData_=Instances.newPokemonData();
m1476pokemonData_.setWeight(Rate.newRate(R_6_5));
StringList m1476stringList_=new StringList(new CollCapacity(2));
m1476stringList_.add(I_INSECTE);
m1476stringList_.add(I_SPECTRE);
m1476pokemonData_.setTypes(m1476stringList_);
EnumMap<Statistic,StatBaseEv> m1476enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)90,(short)0));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)30,(short)0));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)30,(short)0));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)31,(short)2));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1476enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1476pokemonData_.setStatistics(m1476enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1476custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1476custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1476custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1476custListLevelMove_.add(new LevelMove((short)5,I_VAMPIRISME));
m1476custListLevelMove_.add(new LevelMove((short)9,I_JET_DE_SABLE));
m1476custListLevelMove_.add(new LevelMove((short)14,I_COMBO_GRIFFE));
m1476custListLevelMove_.add(new LevelMove((short)19,I_LIRE_ESPRIT));
m1476custListLevelMove_.add(new LevelMove((short)25,I_DEPIT));
m1476custListLevelMove_.add(new LevelMove((short)31,I_ONDE_FOLIE));
m1476custListLevelMove_.add(new LevelMove((short)38,I_OMBRE_PORTEE));
m1476custListLevelMove_.add(new LevelMove((short)47,I_HANTISE));
m1476custListLevelMove_.add(new LevelMove((short)50,I_ANTI_SOIN));
m1476custListLevelMove_.add(new LevelMove((short)59,I_BALL_OMBRE));
m1476pokemonData_.setLevMoves(m1476custListLevelMove_);
m1476pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1476stringList_=new StringList(new CollCapacity(1));
m1476stringList_.add(I_GARDE_MYSTIK);
m1476pokemonData_.setAbilities(m1476stringList_);
m1476stringList_=new StringList(new CollCapacity(22));
m1476stringList_.add(I_BLABLA_DODO);
m1476stringList_.add(I_BOURDON);
m1476stringList_.add(I_CLONAGE);
m1476stringList_.add(I_COPIE);
m1476stringList_.add(I_COUD_BOUE);
m1476stringList_.add(I_COUP_BAS);
m1476stringList_.add(I_DAMOCLES);
m1476stringList_.add(I_DEPIT);
m1476stringList_.add(I_DEVOREVE);
m1476stringList_.add(I_FEINTE);
m1476stringList_.add(I_PIQURE);
m1476stringList_.add(I_RONFLEMENT);
m1476stringList_.add(I_SECRETION);
m1476stringList_.add(I_TAILLADE);
m1476stringList_.add(I_TENACITE);
m1476stringList_.add(I_TORNADE);
m1476stringList_.add(I_TOURMAGIK);
m1476stringList_.add(I_TRANCHE_NUIT);
m1476stringList_.add(I_VANTARDISE);
m1476stringList_.add(I_VENT_ARGENTE);
m1476stringList_.add(I_GIGA_SANGSUE);
m1476stringList_.add(I_COUPE);
m1476pokemonData_.setMoveTutors(m1476stringList_);
Shorts m1476shorts_=new Shorts(new CollCapacity(1));
m1476shorts_.add((short)1);
m1476pokemonData_.setHiddenMoves(m1476shorts_);
m1476shorts_=new Shorts(new CollCapacity(30));
m1476shorts_.add((short)70);
m1476shorts_.add((short)1);
m1476shorts_.add((short)6);
m1476shorts_.add((short)10);
m1476shorts_.add((short)11);
m1476shorts_.add((short)15);
m1476shorts_.add((short)17);
m1476shorts_.add((short)21);
m1476shorts_.add((short)22);
m1476shorts_.add((short)27);
m1476shorts_.add((short)28);
m1476shorts_.add((short)30);
m1476shorts_.add((short)32);
m1476shorts_.add((short)37);
m1476shorts_.add((short)40);
m1476shorts_.add((short)42);
m1476shorts_.add((short)44);
m1476shorts_.add((short)46);
m1476shorts_.add((short)48);
m1476shorts_.add((short)54);
m1476shorts_.add((short)61);
m1476shorts_.add((short)65);
m1476shorts_.add((short)68);
m1476shorts_.add((short)76);
m1476shorts_.add((short)81);
m1476shorts_.add((short)88);
m1476shorts_.add((short)85);
m1476shorts_.add((short)87);
m1476shorts_.add((short)90);
m1476shorts_.add((short)100);
m1476pokemonData_.setTechnicalMoves(m1476shorts_);
m1476pokemonData_.setBaseEvo(I_NINGALE);
m1476pokemonData_.setCatchingRate((short)45);
m1476pokemonData_.setHeight(Rate.newRate(R_4_5));
m1476pokemonData_.setExpEvo(ExpType.E);
m1476pokemonData_.setExpRate(83);
m1476stringList_=new StringList(new CollCapacity(2));
m1476stringList_.add(I_MINERAL);
m1476stringList_.add(I_SANS_OEUF);
m1476pokemonData_.setEggGroups(m1476stringList_);
m1476pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1476pokemonData_.setHappiness((short)70);
m1476pokemonData_.setHappinessHatch((short)140);
return m1476pokemonData_;
}
static PokemonData p451(){
PokemonData m1477pokemonData_=Instances.newPokemonData();
m1477pokemonData_.setWeight(Rate.newRate(R_233_10));
StringList m1477stringList_=new StringList(new CollCapacity(1));
m1477stringList_.add(I_PSY);
m1477pokemonData_.setTypes(m1477stringList_);
EnumMap<Statistic,StatBaseEv> m1477enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)25,(short)0));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)67,(short)0));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)0));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)76,(short)1));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)45,(short)0));
m1477enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)24,(short)0));
m1477pokemonData_.setStatistics(m1477enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1477custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1477custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1477custListLevelMove_.add(new LevelMove((short)1,I_VAGUE_PSY));
m1477custListLevelMove_.add(new LevelMove((short)5,I_AIR_VEINARD));
m1477custListLevelMove_.add(new LevelMove((short)7,I_BAILLEMENT));
m1477custListLevelMove_.add(new LevelMove((short)11,I_RAFALE_PSY));
m1477custListLevelMove_.add(new LevelMove((short)13,I_POSSESSIF));
m1477custListLevelMove_.add(new LevelMove((short)17,I_RAYON_LUNE));
m1477custListLevelMove_.add(new LevelMove((short)19,I_HYPNOSE));
m1477custListLevelMove_.add(new LevelMove((short)23,I_PSYKOUD_BOUL));
m1477custListLevelMove_.add(new LevelMove((short)25,I_SYNCHROPEINE));
m1477custListLevelMove_.add(new LevelMove((short)29,I_CAUCHEMAR));
m1477custListLevelMove_.add(new LevelMove((short)31,I_PRESCIENCE));
m1477custListLevelMove_.add(new LevelMove((short)35,I_PLENITUDE));
m1477custListLevelMove_.add(new LevelMove((short)37,I_PSYKO));
m1477custListLevelMove_.add(new LevelMove((short)41,I_DEVOREVE));
m1477custListLevelMove_.add(new LevelMove((short)43,I_LEVIKINESIE));
m1477custListLevelMove_.add(new LevelMove((short)47,I_FORCE_AJOUTEE));
m1477pokemonData_.setLevMoves(m1477custListLevelMove_);
m1477pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1477stringList_=new StringList(new CollCapacity(2));
m1477stringList_.add(I_SYNCHRO);
m1477stringList_.add(I_TELEPATHE);
m1477pokemonData_.setAbilities(m1477stringList_);
m1477stringList_=new StringList(new CollCapacity(21));
m1477stringList_.add(I_BLABLA_DODO);
m1477stringList_.add(I_BOUCLIER);
m1477stringList_.add(I_COUP_D_MAIN);
m1477stringList_.add(I_FORCE_CACHEE);
m1477stringList_.add(I_MALEDICTION);
m1477stringList_.add(I_METEORES);
m1477stringList_.add(I_REFLET_MAGIK);
m1477stringList_.add(I_RELAIS);
m1477stringList_.add(I_SONICBOOM);
m1477stringList_.add(I_APRES_VOUS);
m1477stringList_.add(I_BALANCE);
m1477stringList_.add(I_ECHANGE);
m1477stringList_.add(I_GLAS_DE_SOIN);
m1477stringList_.add(I_GRAVITE);
m1477stringList_.add(I_PSYKOUD_BOUL);
m1477stringList_.add(I_RAYON_SIGNAL);
m1477stringList_.add(I_RONFLEMENT);
m1477stringList_.add(I_SOUCIGRAINE);
m1477stringList_.add(I_TOURMAGIK);
m1477stringList_.add(I_VOEU_SOIN);
m1477stringList_.add(I_ZONE_ETRANGE);
m1477pokemonData_.setMoveTutors(m1477stringList_);
Shorts m1477shorts_=new Shorts(new CollCapacity(34));
m1477shorts_.add((short)70);
m1477shorts_.add((short)3);
m1477shorts_.add((short)4);
m1477shorts_.add((short)6);
m1477shorts_.add((short)10);
m1477shorts_.add((short)16);
m1477shorts_.add((short)17);
m1477shorts_.add((short)18);
m1477shorts_.add((short)20);
m1477shorts_.add((short)21);
m1477shorts_.add((short)27);
m1477shorts_.add((short)29);
m1477shorts_.add((short)30);
m1477shorts_.add((short)32);
m1477shorts_.add((short)33);
m1477shorts_.add((short)39);
m1477shorts_.add((short)41);
m1477shorts_.add((short)42);
m1477shorts_.add((short)44);
m1477shorts_.add((short)45);
m1477shorts_.add((short)48);
m1477shorts_.add((short)53);
m1477shorts_.add((short)57);
m1477shorts_.add((short)73);
m1477shorts_.add((short)74);
m1477shorts_.add((short)77);
m1477shorts_.add((short)80);
m1477shorts_.add((short)88);
m1477shorts_.add((short)85);
m1477shorts_.add((short)87);
m1477shorts_.add((short)90);
m1477shorts_.add((short)92);
m1477shorts_.add((short)99);
m1477shorts_.add((short)100);
m1477pokemonData_.setTechnicalMoves(m1477shorts_);
m1477pokemonData_.setBaseEvo(I_MUNNA);
StringMap<Evolution> m1477stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionStoneSimple m1477evolutionStoneSimple_=Instances.newEvolutionStoneSimple();
m1477evolutionStoneSimple_.setStone(I_PIERRE_LUNE);
m1477stringMapEvolution_.addEntry(I_MUSHANA,m1477evolutionStoneSimple_);
m1477pokemonData_.setEvolutions(m1477stringMapEvolution_);
m1477pokemonData_.setCatchingRate((short)190);
m1477pokemonData_.setHeight(Rate.newRate(R_3_5));
m1477pokemonData_.setExpEvo(ExpType.R);
m1477pokemonData_.setExpRate(58);
m1477stringList_=new StringList(new CollCapacity(1));
m1477stringList_.add(I_SOL);
m1477pokemonData_.setEggGroups(m1477stringList_);
m1477pokemonData_.setHatchingSteps(LgInt.newLgInt(R_2805));
m1477pokemonData_.setHappiness((short)70);
m1477pokemonData_.setHappinessHatch((short)140);
return m1477pokemonData_;
}
static PokemonData p452(){
PokemonData m1478pokemonData_=Instances.newPokemonData();
m1478pokemonData_.setWeight(Rate.newRate(R_301_2));
StringList m1478stringList_=new StringList(new CollCapacity(1));
m1478stringList_.add(I_DRAGON);
m1478pokemonData_.setTypes(m1478stringList_);
EnumMap<Statistic,StatBaseEv> m1478enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)110,(short)0));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)150,(short)3));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)90,(short)0));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1478enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)80,(short)0));
m1478pokemonData_.setStatistics(m1478enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1478custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1478custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1478custListLevelMove_.add(new LevelMove((short)1,I_ECUME));
m1478custListLevelMove_.add(new LevelMove((short)1,I_RUSE));
m1478custListLevelMove_.add(new LevelMove((short)5,I_VOL_VIE));
m1478custListLevelMove_.add(new LevelMove((short)9,I_ABRI));
m1478custListLevelMove_.add(new LevelMove((short)9,I_ABRI));
m1478custListLevelMove_.add(new LevelMove((short)13,I_PATIENCE));
m1478custListLevelMove_.add(new LevelMove((short)18,I_DRACOSOUFFLE));
m1478custListLevelMove_.add(new LevelMove((short)25,I_DANSE_PLUIE));
m1478custListLevelMove_.add(new LevelMove((short)25,I_DANSE_PLUIE));
m1478custListLevelMove_.add(new LevelMove((short)28,I_FLEAU));
m1478custListLevelMove_.add(new LevelMove((short)32,I_PLAQUAGE));
m1478custListLevelMove_.add(new LevelMove((short)38,I_OCROUPI));
m1478custListLevelMove_.add(new LevelMove((short)47,I_DRACOCHOC));
m1478custListLevelMove_.add(new LevelMove((short)50,I_HYDROQUEUE));
m1478custListLevelMove_.add(new LevelMove((short)55,I_MEGAFOUET));
m1478custListLevelMove_.add(new LevelMove((short)63,I_COLERE));
m1478custListLevelMove_.add(new LevelMove((short)63,I_COLERE));
m1478pokemonData_.setLevMoves(m1478custListLevelMove_);
m1478pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1478stringList_=new StringList(new CollCapacity(3));
m1478stringList_.add(I_HERBIVORE);
m1478stringList_.add(I_HYDRATATION);
m1478stringList_.add(I_POISSEUX);
m1478pokemonData_.setAbilities(m1478stringList_);
m1478stringList_=new StringList(new CollCapacity(2));
m1478stringList_.add(I_DRACO_METEOR);
m1478stringList_.add(I_FORCE);
m1478pokemonData_.setMoveTutors(m1478stringList_);
Shorts m1478shorts_=new Shorts(new CollCapacity(1));
m1478shorts_.add((short)4);
m1478pokemonData_.setHiddenMoves(m1478shorts_);
m1478shorts_=new Shorts(new CollCapacity(35));
m1478shorts_.add((short)94);
m1478shorts_.add((short)6);
m1478shorts_.add((short)7);
m1478shorts_.add((short)10);
m1478shorts_.add((short)11);
m1478shorts_.add((short)13);
m1478shorts_.add((short)14);
m1478shorts_.add((short)15);
m1478shorts_.add((short)17);
m1478shorts_.add((short)18);
m1478shorts_.add((short)21);
m1478shorts_.add((short)24);
m1478shorts_.add((short)25);
m1478shorts_.add((short)26);
m1478shorts_.add((short)27);
m1478shorts_.add((short)32);
m1478shorts_.add((short)34);
m1478shorts_.add((short)35);
m1478shorts_.add((short)36);
m1478shorts_.add((short)38);
m1478shorts_.add((short)42);
m1478shorts_.add((short)44);
m1478shorts_.add((short)45);
m1478shorts_.add((short)48);
m1478shorts_.add((short)52);
m1478shorts_.add((short)59);
m1478shorts_.add((short)68);
m1478shorts_.add((short)78);
m1478shorts_.add((short)80);
m1478shorts_.add((short)88);
m1478shorts_.add((short)82);
m1478shorts_.add((short)83);
m1478shorts_.add((short)87);
m1478shorts_.add((short)90);
m1478shorts_.add((short)100);
m1478pokemonData_.setTechnicalMoves(m1478shorts_);
m1478pokemonData_.setBaseEvo(I_MUCUSCULE);
m1478pokemonData_.setCatchingRate((short)45);
m1478pokemonData_.setHeight(Rate.newRate(R_2));
m1478pokemonData_.setExpEvo(ExpType.L);
m1478pokemonData_.setExpRate(270);
m1478stringList_=new StringList(new CollCapacity(7));
m1478stringList_.add(I_METAMORPH);
m1478stringList_.add(I_DRAGON);
m1478stringList_.add(I_SOL);
m1478stringList_.add(I_VOL);
m1478stringList_.add(I_MONSTRE);
m1478stringList_.add(I_EAU_1);
m1478stringList_.add(I_EAU_2);
m1478pokemonData_.setEggGroups(m1478stringList_);
m1478pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1478pokemonData_.setHappiness((short)35);
m1478pokemonData_.setHappinessHatch((short)140);
return m1478pokemonData_;
}
static PokemonData p453(){
PokemonData m1479pokemonData_=Instances.newPokemonData();
m1479pokemonData_.setWeight(Rate.newRate(R_121_2));
StringList m1479stringList_=new StringList(new CollCapacity(1));
m1479stringList_.add(I_PSY);
m1479pokemonData_.setTypes(m1479stringList_);
EnumMap<Statistic,StatBaseEv> m1479enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)107,(short)0));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)95,(short)0));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)116,(short)2));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)85,(short)0));
m1479enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)29,(short)0));
m1479pokemonData_.setStatistics(m1479enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1479custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(4));
m1479custListLevelMove_.add(new LevelMove((short)1,I_RAFALE_PSY));
m1479custListLevelMove_.add(new LevelMove((short)1,I_HYPNOSE));
m1479custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1479custListLevelMove_.add(new LevelMove((short)1,I_AIR_VEINARD));
m1479pokemonData_.setLevMoves(m1479custListLevelMove_);
m1479pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1479stringList_=new StringList(new CollCapacity(2));
m1479stringList_.add(I_SYNCHRO);
m1479stringList_.add(I_TELEPATHE);
m1479pokemonData_.setAbilities(m1479stringList_);
m1479stringList_=new StringList(new CollCapacity(14));
m1479stringList_.add(I_APRES_VOUS);
m1479stringList_.add(I_BALANCE);
m1479stringList_.add(I_BLABLA_DODO);
m1479stringList_.add(I_COUP_D_MAIN);
m1479stringList_.add(I_ECHANGE);
m1479stringList_.add(I_GLAS_DE_SOIN);
m1479stringList_.add(I_GRAVITE);
m1479stringList_.add(I_PSYKOUD_BOUL);
m1479stringList_.add(I_RAYON_SIGNAL);
m1479stringList_.add(I_REFLET_MAGIK);
m1479stringList_.add(I_RONFLEMENT);
m1479stringList_.add(I_SOUCIGRAINE);
m1479stringList_.add(I_TOURMAGIK);
m1479stringList_.add(I_ZONE_ETRANGE);
m1479pokemonData_.setMoveTutors(m1479stringList_);
Shorts m1479shorts_=new Shorts(new CollCapacity(36));
m1479shorts_.add((short)70);
m1479shorts_.add((short)3);
m1479shorts_.add((short)4);
m1479shorts_.add((short)6);
m1479shorts_.add((short)10);
m1479shorts_.add((short)15);
m1479shorts_.add((short)16);
m1479shorts_.add((short)17);
m1479shorts_.add((short)18);
m1479shorts_.add((short)20);
m1479shorts_.add((short)21);
m1479shorts_.add((short)27);
m1479shorts_.add((short)29);
m1479shorts_.add((short)30);
m1479shorts_.add((short)32);
m1479shorts_.add((short)33);
m1479shorts_.add((short)39);
m1479shorts_.add((short)41);
m1479shorts_.add((short)42);
m1479shorts_.add((short)44);
m1479shorts_.add((short)45);
m1479shorts_.add((short)48);
m1479shorts_.add((short)53);
m1479shorts_.add((short)57);
m1479shorts_.add((short)68);
m1479shorts_.add((short)73);
m1479shorts_.add((short)74);
m1479shorts_.add((short)77);
m1479shorts_.add((short)80);
m1479shorts_.add((short)88);
m1479shorts_.add((short)85);
m1479shorts_.add((short)87);
m1479shorts_.add((short)90);
m1479shorts_.add((short)92);
m1479shorts_.add((short)99);
m1479shorts_.add((short)100);
m1479pokemonData_.setTechnicalMoves(m1479shorts_);
m1479pokemonData_.setBaseEvo(I_MUNNA);
m1479pokemonData_.setCatchingRate((short)75);
m1479pokemonData_.setHeight(Rate.newRate(R_11_10));
m1479pokemonData_.setExpEvo(ExpType.R);
m1479pokemonData_.setExpRate(170);
m1479stringList_=new StringList(new CollCapacity(1));
m1479stringList_.add(I_SOL);
m1479pokemonData_.setEggGroups(m1479stringList_);
m1479pokemonData_.setHatchingSteps(LgInt.newLgInt(R_2805));
m1479pokemonData_.setHappiness((short)70);
m1479pokemonData_.setHappinessHatch((short)140);
return m1479pokemonData_;
}
static PokemonData p454(){
PokemonData m1480pokemonData_=Instances.newPokemonData();
m1480pokemonData_.setWeight(Rate.newRate(R_59_2));
StringList m1480stringList_=new StringList(new CollCapacity(1));
m1480stringList_.add(I_EAU);
m1480pokemonData_.setTypes(m1480stringList_);
EnumMap<Statistic,StatBaseEv> m1480enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)65,(short)0));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)30,(short)0));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)55,(short)0));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)35,(short)0));
m1480enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)1));
m1480pokemonData_.setStatistics(m1480enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1480custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1480custListLevelMove_.add(new LevelMove((short)1,I_SONICBOOM));
m1480custListLevelMove_.add(new LevelMove((short)4,I_RUGISSEMENT));
m1480custListLevelMove_.add(new LevelMove((short)7,I_TOURNIQUET));
m1480custListLevelMove_.add(new LevelMove((short)11,I_VIVE_ATTAQUE));
m1480custListLevelMove_.add(new LevelMove((short)15,I_PISTOLET_A_O));
m1480custListLevelMove_.add(new LevelMove((short)18,I_POURSUITE));
m1480custListLevelMove_.add(new LevelMove((short)21,I_METEORES));
m1480custListLevelMove_.add(new LevelMove((short)24,I_AQUA_JET));
m1480custListLevelMove_.add(new LevelMove((short)27,I_COUP_DOUBLE));
m1480custListLevelMove_.add(new LevelMove((short)31,I_SIPHON));
m1480custListLevelMove_.add(new LevelMove((short)35,I_COUPE_VENT));
m1480custListLevelMove_.add(new LevelMove((short)38,I_HYDROQUEUE));
m1480custListLevelMove_.add(new LevelMove((short)41,I_HATE));
m1480custListLevelMove_.add(new LevelMove((short)45,I_HYDROCANON));
m1480pokemonData_.setLevMoves(m1480custListLevelMove_);
m1480pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1480stringList_=new StringList(new CollCapacity(1));
m1480stringList_.add(I_GLISSADE);
m1480pokemonData_.setAbilities(m1480stringList_);
m1480stringList_=new StringList(new CollCapacity(24));
m1480stringList_.add(I_COMBO_GRIFFE);
m1480stringList_.add(I_COUD_BOUE);
m1480stringList_.add(I_COUP_D_BOULE);
m1480stringList_.add(I_FLAIR);
m1480stringList_.add(I_METEORES);
m1480stringList_.add(I_PLONGEE);
m1480stringList_.add(I_POINGLACE);
m1480stringList_.add(I_RELAIS);
m1480stringList_.add(I_RONFLEMENT);
m1480stringList_.add(I_TAILLADE);
m1480stringList_.add(I_TORGNOLES);
m1480stringList_.add(I_TRANCHE);
m1480stringList_.add(I_VENT_GLACE);
m1480stringList_.add(I_ANNEAU_HYDRO);
m1480stringList_.add(I_BLABLA_DODO);
m1480stringList_.add(I_DETREMPAGE);
m1480stringList_.add(I_HYDROQUEUE);
m1480stringList_.add(I_MOI_D_ABORD);
m1480stringList_.add(I_PASSE_PASSE);
m1480stringList_.add(I_PLUMO_QUEUE);
m1480stringList_.add(I_QUEUE_DE_FER);
m1480stringList_.add(I_SURF);
m1480stringList_.add(I_FORCE);
m1480stringList_.add(I_SIPHON);
m1480pokemonData_.setMoveTutors(m1480stringList_);
Shorts m1480shorts_=new Shorts(new CollCapacity(3));
m1480shorts_.add((short)3);
m1480shorts_.add((short)4);
m1480shorts_.add((short)5);
m1480pokemonData_.setHiddenMoves(m1480shorts_);
m1480shorts_=new Shorts(new CollCapacity(26));
m1480shorts_.add((short)94);
m1480shorts_.add((short)6);
m1480shorts_.add((short)7);
m1480shorts_.add((short)8);
m1480shorts_.add((short)10);
m1480shorts_.add((short)13);
m1480shorts_.add((short)14);
m1480shorts_.add((short)17);
m1480shorts_.add((short)18);
m1480shorts_.add((short)21);
m1480shorts_.add((short)27);
m1480shorts_.add((short)28);
m1480shorts_.add((short)31);
m1480shorts_.add((short)32);
m1480shorts_.add((short)39);
m1480shorts_.add((short)42);
m1480shorts_.add((short)44);
m1480shorts_.add((short)45);
m1480shorts_.add((short)48);
m1480shorts_.add((short)49);
m1480shorts_.add((short)55);
m1480shorts_.add((short)88);
m1480shorts_.add((short)87);
m1480shorts_.add((short)90);
m1480shorts_.add((short)98);
m1480shorts_.add((short)100);
m1480pokemonData_.setTechnicalMoves(m1480shorts_);
m1480pokemonData_.setBaseEvo(I_MUSTEBOUEE);
StringMap<Evolution> m1480stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1480evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1480evolutionLevelSimple_.setLevel((short)26);
m1480stringMapEvolution_.addEntry(I_MUSTEFLOTT,m1480evolutionLevelSimple_);
m1480pokemonData_.setEvolutions(m1480stringMapEvolution_);
m1480pokemonData_.setCatchingRate((short)190);
m1480pokemonData_.setHeight(Rate.newRate(R_7_10));
m1480pokemonData_.setExpEvo(ExpType.M);
m1480pokemonData_.setExpRate(66);
m1480stringList_=new StringList(new CollCapacity(2));
m1480stringList_.add(I_EAU_1);
m1480stringList_.add(I_SOL);
m1480pokemonData_.setEggGroups(m1480stringList_);
m1480pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1480pokemonData_.setHappiness((short)70);
m1480pokemonData_.setHappinessHatch((short)140);
return m1480pokemonData_;
}
static PokemonData p455(){
PokemonData m1481pokemonData_=Instances.newPokemonData();
m1481pokemonData_.setWeight(Rate.newRate(R_67_2));
StringList m1481stringList_=new StringList(new CollCapacity(1));
m1481stringList_.add(I_EAU);
m1481pokemonData_.setTypes(m1481stringList_);
EnumMap<Statistic,StatBaseEv> m1481enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)105,(short)0));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)0));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)85,(short)0));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)55,(short)0));
m1481enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)115,(short)2));
m1481pokemonData_.setStatistics(m1481enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1481custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1481custListLevelMove_.add(new LevelMove((short)1,I_SONICBOOM));
m1481custListLevelMove_.add(new LevelMove((short)1,I_CROCS_GIVRE));
m1481custListLevelMove_.add(new LevelMove((short)1,I_MACHOUILLE));
m1481custListLevelMove_.add(new LevelMove((short)4,I_RUGISSEMENT));
m1481custListLevelMove_.add(new LevelMove((short)7,I_TOURNIQUET));
m1481custListLevelMove_.add(new LevelMove((short)11,I_VIVE_ATTAQUE));
m1481custListLevelMove_.add(new LevelMove((short)15,I_PISTOLET_A_O));
m1481custListLevelMove_.add(new LevelMove((short)18,I_POURSUITE));
m1481custListLevelMove_.add(new LevelMove((short)21,I_METEORES));
m1481custListLevelMove_.add(new LevelMove((short)24,I_AQUA_JET));
m1481custListLevelMove_.add(new LevelMove((short)29,I_COUP_DOUBLE));
m1481custListLevelMove_.add(new LevelMove((short)35,I_SIPHON));
m1481custListLevelMove_.add(new LevelMove((short)41,I_COUPE_VENT));
m1481custListLevelMove_.add(new LevelMove((short)46,I_HYDROQUEUE));
m1481custListLevelMove_.add(new LevelMove((short)51,I_HATE));
m1481custListLevelMove_.add(new LevelMove((short)57,I_HYDROCANON));
m1481pokemonData_.setLevMoves(m1481custListLevelMove_);
m1481pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1481stringList_=new StringList(new CollCapacity(1));
m1481stringList_.add(I_GLISSADE);
m1481pokemonData_.setAbilities(m1481stringList_);
m1481stringList_=new StringList(new CollCapacity(20));
m1481stringList_.add(I_BALAYAGE);
m1481stringList_.add(I_COMBO_GRIFFE);
m1481stringList_.add(I_COUD_BOUE);
m1481stringList_.add(I_COUP_D_BOULE);
m1481stringList_.add(I_FLAIR);
m1481stringList_.add(I_HYDROQUEUE);
m1481stringList_.add(I_METEORES);
m1481stringList_.add(I_PLONGEE);
m1481stringList_.add(I_POINGLACE);
m1481stringList_.add(I_RELAIS);
m1481stringList_.add(I_RONFLEMENT);
m1481stringList_.add(I_TAILLADE);
m1481stringList_.add(I_TORGNOLES);
m1481stringList_.add(I_TRANCHE);
m1481stringList_.add(I_VENT_GLACE);
m1481stringList_.add(I_BLABLA_DODO);
m1481stringList_.add(I_QUEUE_DE_FER);
m1481stringList_.add(I_SURF);
m1481stringList_.add(I_FORCE);
m1481stringList_.add(I_SIPHON);
m1481pokemonData_.setMoveTutors(m1481stringList_);
Shorts m1481shorts_=new Shorts(new CollCapacity(3));
m1481shorts_.add((short)3);
m1481shorts_.add((short)4);
m1481shorts_.add((short)5);
m1481pokemonData_.setHiddenMoves(m1481shorts_);
m1481shorts_=new Shorts(new CollCapacity(33));
m1481shorts_.add((short)94);
m1481shorts_.add((short)5);
m1481shorts_.add((short)6);
m1481shorts_.add((short)7);
m1481shorts_.add((short)8);
m1481shorts_.add((short)10);
m1481shorts_.add((short)12);
m1481shorts_.add((short)13);
m1481shorts_.add((short)14);
m1481shorts_.add((short)15);
m1481shorts_.add((short)17);
m1481shorts_.add((short)18);
m1481shorts_.add((short)21);
m1481shorts_.add((short)27);
m1481shorts_.add((short)28);
m1481shorts_.add((short)31);
m1481shorts_.add((short)32);
m1481shorts_.add((short)39);
m1481shorts_.add((short)41);
m1481shorts_.add((short)42);
m1481shorts_.add((short)44);
m1481shorts_.add((short)45);
m1481shorts_.add((short)48);
m1481shorts_.add((short)49);
m1481shorts_.add((short)52);
m1481shorts_.add((short)55);
m1481shorts_.add((short)66);
m1481shorts_.add((short)68);
m1481shorts_.add((short)88);
m1481shorts_.add((short)87);
m1481shorts_.add((short)90);
m1481shorts_.add((short)98);
m1481shorts_.add((short)100);
m1481pokemonData_.setTechnicalMoves(m1481shorts_);
m1481pokemonData_.setBaseEvo(I_MUSTEBOUEE);
m1481pokemonData_.setCatchingRate((short)75);
m1481pokemonData_.setHeight(Rate.newRate(R_11_10));
m1481pokemonData_.setExpEvo(ExpType.M);
m1481pokemonData_.setExpRate(173);
m1481stringList_=new StringList(new CollCapacity(2));
m1481stringList_.add(I_EAU_1);
m1481stringList_.add(I_SOL);
m1481pokemonData_.setEggGroups(m1481stringList_);
m1481pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1481pokemonData_.setHappiness((short)70);
m1481pokemonData_.setHappinessHatch((short)140);
return m1481pokemonData_;
}
static PokemonData p456(){
PokemonData m1482pokemonData_=Instances.newPokemonData();
m1482pokemonData_.setWeight(Rate.newRate(R_143_10));
StringList m1482stringList_=new StringList(new CollCapacity(2));
m1482stringList_.add(I_ELECTRIQUE);
m1482stringList_.add(I_INSECTE);
m1482pokemonData_.setTypes(m1482stringList_);
EnumMap<Statistic,StatBaseEv> m1482enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)77,(short)0));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)97,(short)0));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1482enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)108,(short)2));
m1482pokemonData_.setStatistics(m1482enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1482custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1482custListLevelMove_.add(new LevelMove((short)1,I_SECRETION));
m1482custListLevelMove_.add(new LevelMove((short)1,I_VAMPIRISME));
m1482custListLevelMove_.add(new LevelMove((short)1,I_TOILE));
m1482custListLevelMove_.add(new LevelMove((short)4,I_CAGE_ECLAIR));
m1482custListLevelMove_.add(new LevelMove((short)7,I_GRINCEMENT));
m1482custListLevelMove_.add(new LevelMove((short)12,I_TAILLADE));
m1482custListLevelMove_.add(new LevelMove((short)15,I_TOILE_ELEK));
m1482custListLevelMove_.add(new LevelMove((short)18,I_PIQURE));
m1482custListLevelMove_.add(new LevelMove((short)23,I_SUC_DIGESTIF));
m1482custListLevelMove_.add(new LevelMove((short)26,I_TRANCHE));
m1482custListLevelMove_.add(new LevelMove((short)29,I_BOULE_ELEK));
m1482custListLevelMove_.add(new LevelMove((short)34,I_RAYON_SIGNAL));
m1482custListLevelMove_.add(new LevelMove((short)40,I_HATE));
m1482custListLevelMove_.add(new LevelMove((short)46,I_COUP_BAS));
m1482custListLevelMove_.add(new LevelMove((short)54,I_COUP_D_JUS));
m1482custListLevelMove_.add(new LevelMove((short)60,I_BOURDON));
m1482custListLevelMove_.add(new LevelMove((short)65,I_TOILE_GLUANTE));
m1482custListLevelMove_.add(new LevelMove((short)65,I_TOILE_GLUANTE));
m1482pokemonData_.setLevMoves(m1482custListLevelMove_);
m1482pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1482stringList_=new StringList(new CollCapacity(3));
m1482stringList_.add(I_OEIL_COMPOSE);
m1482stringList_.add(I_TENSION);
m1482stringList_.add(I_ESSAIM);
m1482pokemonData_.setAbilities(m1482stringList_);
m1482stringList_=new StringList(new CollCapacity(11));
m1482stringList_.add(I_BLABLA_DODO);
m1482stringList_.add(I_GIGA_SANGSUE);
m1482stringList_.add(I_PIQURE);
m1482stringList_.add(I_RAYON_SIGNAL);
m1482stringList_.add(I_REBOND);
m1482stringList_.add(I_RONFLEMENT);
m1482stringList_.add(I_SUC_DIGESTIF);
m1482stringList_.add(I_TOILE_ELEK);
m1482stringList_.add(I_VOL_MAGNETIK);
m1482stringList_.add(I_ORAGE);
m1482stringList_.add(I_COUPE);
m1482pokemonData_.setMoveTutors(m1482stringList_);
Shorts m1482shorts_=new Shorts(new CollCapacity(1));
m1482shorts_.add((short)1);
m1482pokemonData_.setHiddenMoves(m1482shorts_);
m1482shorts_=new Shorts(new CollCapacity(31));
m1482shorts_.add((short)70);
m1482shorts_.add((short)6);
m1482shorts_.add((short)10);
m1482shorts_.add((short)15);
m1482shorts_.add((short)16);
m1482shorts_.add((short)17);
m1482shorts_.add((short)18);
m1482shorts_.add((short)21);
m1482shorts_.add((short)24);
m1482shorts_.add((short)25);
m1482shorts_.add((short)27);
m1482shorts_.add((short)32);
m1482shorts_.add((short)42);
m1482shorts_.add((short)44);
m1482shorts_.add((short)45);
m1482shorts_.add((short)46);
m1482shorts_.add((short)48);
m1482shorts_.add((short)53);
m1482shorts_.add((short)57);
m1482shorts_.add((short)68);
m1482shorts_.add((short)72);
m1482shorts_.add((short)73);
m1482shorts_.add((short)76);
m1482shorts_.add((short)81);
m1482shorts_.add((short)88);
m1482shorts_.add((short)83);
m1482shorts_.add((short)84);
m1482shorts_.add((short)87);
m1482shorts_.add((short)90);
m1482shorts_.add((short)93);
m1482shorts_.add((short)100);
m1482pokemonData_.setTechnicalMoves(m1482shorts_);
m1482pokemonData_.setBaseEvo(I_STATITIK);
m1482pokemonData_.setCatchingRate((short)75);
m1482pokemonData_.setHeight(Rate.newRate(R_4_5));
m1482pokemonData_.setExpEvo(ExpType.M);
m1482pokemonData_.setExpRate(165);
m1482stringList_=new StringList(new CollCapacity(1));
m1482stringList_.add(I_INSECTE);
m1482pokemonData_.setEggGroups(m1482stringList_);
m1482pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1482pokemonData_.setHappiness((short)70);
m1482pokemonData_.setHappinessHatch((short)140);
return m1482pokemonData_;
}
static PokemonData p457(){
PokemonData m1483pokemonData_=Instances.newPokemonData();
m1483pokemonData_.setWeight(Rate.newRate(R_23_2));
StringList m1483stringList_=new StringList(new CollCapacity(2));
m1483stringList_.add(I_ACIER);
m1483stringList_.add(I_FEE);
m1483pokemonData_.setTypes(m1483stringList_);
EnumMap<Statistic,StatBaseEv> m1483enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)1));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)0));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)85,(short)1));
m1483enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)50,(short)0));
m1483pokemonData_.setStatistics(m1483enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1483custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1483custListLevelMove_.add(new LevelMove((short)1,I_PROVOC));
m1483custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1483custListLevelMove_.add(new LevelMove((short)1,I_VENT_FEERIQUE));
m1483custListLevelMove_.add(new LevelMove((short)1,I_ETONNEMENT));
m1483custListLevelMove_.add(new LevelMove((short)6,I_CROCO_LARME));
m1483custListLevelMove_.add(new LevelMove((short)11,I_MORSURE));
m1483custListLevelMove_.add(new LevelMove((short)16,I_DOUX_PARFUM));
m1483custListLevelMove_.add(new LevelMove((short)21,I_FORCE_POIGNE));
m1483custListLevelMove_.add(new LevelMove((short)26,I_FEINTE));
m1483custListLevelMove_.add(new LevelMove((short)31,I_RELAIS));
m1483custListLevelMove_.add(new LevelMove((short)36,I_MACHOUILLE));
m1483custListLevelMove_.add(new LevelMove((short)41,I_MUR_DE_FER));
m1483custListLevelMove_.add(new LevelMove((short)46,I_COUP_BAS));
m1483custListLevelMove_.add(new LevelMove((short)50,I_STOCKAGE));
m1483custListLevelMove_.add(new LevelMove((short)50,I_RELACHE));
m1483custListLevelMove_.add(new LevelMove((short)50,I_AVALE));
m1483custListLevelMove_.add(new LevelMove((short)56,I_TETE_DE_FER));
m1483custListLevelMove_.add(new LevelMove((short)60,I_CALINERIE));
m1483custListLevelMove_.add(new LevelMove((short)60,I_CALINERIE));
m1483pokemonData_.setLevMoves(m1483custListLevelMove_);
m1483pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1483stringList_=new StringList(new CollCapacity(2));
m1483stringList_.add(I_INTIMIDANT);
m1483stringList_.add(I_HYPER_CUTTER);
m1483pokemonData_.setAbilities(m1483stringList_);
m1483stringList_=new StringList(new CollCapacity(47));
m1483stringList_.add(I_BALANCE);
m1483stringList_.add(I_BLABLA_DODO);
m1483stringList_.add(I_BOOST);
m1483stringList_.add(I_CHATOUILLE);
m1483stringList_.add(I_CLONAGE);
m1483stringList_.add(I_COPIE);
m1483stringList_.add(I_COUD_BOUE);
m1483stringList_.add(I_COUP_BAS);
m1483stringList_.add(I_COUP_D_BOULE);
m1483stringList_.add(I_CROC_FATAL);
m1483stringList_.add(I_CROCHETVENIN);
m1483stringList_.add(I_CROCS_ECLAIR);
m1483stringList_.add(I_CROCS_FEU);
m1483stringList_.add(I_CROCS_GIVRE);
m1483stringList_.add(I_DAMOCLES);
m1483stringList_.add(I_DANSE_LAMES);
m1483stringList_.add(I_DYNAMOPOING);
m1483stringList_.add(I_EBOULEMENT);
m1483stringList_.add(I_FAUX_CHAGE);
m1483stringList_.add(I_FRAPPE_ATLAS);
m1483stringList_.add(I_MUR_DE_FER);
m1483stringList_.add(I_PERMUGARDE);
m1483stringList_.add(I_PLAQUAGE);
m1483stringList_.add(I_POING_ECLAIR);
m1483stringList_.add(I_POINGLACE);
m1483stringList_.add(I_POUV_ANTIQUE);
m1483stringList_.add(I_PUNITION);
m1483stringList_.add(I_RIPOSTE);
m1483stringList_.add(I_RONFLEMENT);
m1483stringList_.add(I_SABOTAGE);
m1483stringList_.add(I_TENACITE);
m1483stringList_.add(I_TETE_DE_FER);
m1483stringList_.add(I_ULTIMAPOING);
m1483stringList_.add(I_ULTIMAWASHI);
m1483stringList_.add(I_VANTARDISE);
m1483stringList_.add(I_VENT_GLACE);
m1483stringList_.add(I_VOL_MAGNETIK);
m1483stringList_.add(I_CHAMP_BRUMEUX);
m1483stringList_.add(I_DERNIERECOUR);
m1483stringList_.add(I_FULMIFER);
m1483stringList_.add(I_PIEGE_DE_ROC);
m1483stringList_.add(I_SAISIE);
m1483stringList_.add(I_SEDUCTION);
m1483stringList_.add(I_SOUPLESSE);
m1483stringList_.add(I_TRICHERIE);
m1483stringList_.add(I_VIBROBSCUR);
m1483stringList_.add(I_FORCE);
m1483pokemonData_.setMoveTutors(m1483stringList_);
Shorts m1483shorts_=new Shorts(new CollCapacity(1));
m1483shorts_.add((short)4);
m1483pokemonData_.setHiddenMoves(m1483shorts_);
m1483shorts_=new Shorts(new CollCapacity(45));
m1483shorts_.add((short)94);
m1483shorts_.add((short)6);
m1483shorts_.add((short)10);
m1483shorts_.add((short)11);
m1483shorts_.add((short)12);
m1483shorts_.add((short)13);
m1483shorts_.add((short)15);
m1483shorts_.add((short)17);
m1483shorts_.add((short)18);
m1483shorts_.add((short)21);
m1483shorts_.add((short)22);
m1483shorts_.add((short)27);
m1483shorts_.add((short)30);
m1483shorts_.add((short)31);
m1483shorts_.add((short)32);
m1483shorts_.add((short)35);
m1483shorts_.add((short)36);
m1483shorts_.add((short)37);
m1483shorts_.add((short)38);
m1483shorts_.add((short)39);
m1483shorts_.add((short)41);
m1483shorts_.add((short)42);
m1483shorts_.add((short)44);
m1483shorts_.add((short)45);
m1483shorts_.add((short)48);
m1483shorts_.add((short)52);
m1483shorts_.add((short)54);
m1483shorts_.add((short)56);
m1483shorts_.add((short)57);
m1483shorts_.add((short)59);
m1483shorts_.add((short)63);
m1483shorts_.add((short)66);
m1483shorts_.add((short)68);
m1483shorts_.add((short)71);
m1483shorts_.add((short)75);
m1483shorts_.add((short)77);
m1483shorts_.add((short)97);
m1483shorts_.add((short)80);
m1483shorts_.add((short)88);
m1483shorts_.add((short)86);
m1483shorts_.add((short)87);
m1483shorts_.add((short)90);
m1483shorts_.add((short)91);
m1483shorts_.add((short)98);
m1483shorts_.add((short)100);
m1483pokemonData_.setTechnicalMoves(m1483shorts_);
m1483pokemonData_.setBaseEvo(I_MYSDIBULE);
m1483pokemonData_.setCatchingRate((short)45);
m1483pokemonData_.setHeight(Rate.newRate(R_3_5));
m1483pokemonData_.setExpEvo(ExpType.R);
m1483pokemonData_.setExpRate(133);
m1483stringList_=new StringList(new CollCapacity(2));
m1483stringList_.add(I_FEE);
m1483stringList_.add(I_SOL);
m1483pokemonData_.setEggGroups(m1483stringList_);
m1483pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1483pokemonData_.setHappiness((short)70);
m1483pokemonData_.setHappinessHatch((short)140);
return m1483pokemonData_;
}
static PokemonData p458(){
PokemonData m1484pokemonData_=Instances.newPokemonData();
m1484pokemonData_.setWeight(Rate.newRate(R_27_5));
StringList m1484stringList_=new StringList(new CollCapacity(2));
m1484stringList_.add(I_PLANTE);
m1484stringList_.add(I_POISON);
m1484pokemonData_.setTypes(m1484stringList_);
EnumMap<Statistic,StatBaseEv> m1484enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)50,(short)0));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)75,(short)1));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)55,(short)0));
m1484enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1484pokemonData_.setStatistics(m1484enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1484custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1484custListLevelMove_.add(new LevelMove((short)1,I_VOL_VIE));
m1484custListLevelMove_.add(new LevelMove((short)5,I_DOUX_PARFUM));
m1484custListLevelMove_.add(new LevelMove((short)9,I_ACIDE));
m1484custListLevelMove_.add(new LevelMove((short)13,I_POUDRE_TOXIK));
m1484custListLevelMove_.add(new LevelMove((short)15,I_PARA_SPORE));
m1484custListLevelMove_.add(new LevelMove((short)17,I_POUDRE_DODO));
m1484custListLevelMove_.add(new LevelMove((short)21,I_MEGA_SANGSUE));
m1484custListLevelMove_.add(new LevelMove((short)25,I_AIR_VEINARD));
m1484custListLevelMove_.add(new LevelMove((short)29,I_DON_NATUREL));
m1484custListLevelMove_.add(new LevelMove((short)33,I_RAYON_LUNE));
m1484custListLevelMove_.add(new LevelMove((short)37,I_GIGA_SANGSUE));
m1484custListLevelMove_.add(new LevelMove((short)41,I_DANSE_FLEUR));
m1484custListLevelMove_.add(new LevelMove((short)45,I_CHAMP_HERBU));
m1484pokemonData_.setLevMoves(m1484custListLevelMove_);
m1484pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1484stringList_=new StringList(new CollCapacity(1));
m1484stringList_.add(I_CHLOROPHYLLE);
m1484pokemonData_.setAbilities(m1484stringList_);
m1484stringList_=new StringList(new CollCapacity(23));
m1484stringList_.add(I_BLABLA_DODO);
m1484stringList_.add(I_CANON_GRAINE);
m1484stringList_.add(I_CHARME);
m1484stringList_.add(I_CHATOUILLE);
m1484stringList_.add(I_CLONAGE);
m1484stringList_.add(I_COPIE);
m1484stringList_.add(I_DAMOCLES);
m1484stringList_.add(I_DANSE_FOLLE);
m1484stringList_.add(I_DANSE_LAMES);
m1484stringList_.add(I_FLEAU);
m1484stringList_.add(I_RACINES);
m1484stringList_.add(I_RONFLEMENT);
m1484stringList_.add(I_SOUCIGRAINE);
m1484stringList_.add(I_SUC_DIGESTIF);
m1484stringList_.add(I_SYNTHESE);
m1484stringList_.add(I_TENACITE);
m1484stringList_.add(I_TRANCH_HERBE);
m1484stringList_.add(I_VANTARDISE);
m1484stringList_.add(I_APRES_VOUS);
m1484stringList_.add(I_FORCE_CACHEE);
m1484stringList_.add(I_FORCE_NATURE);
m1484stringList_.add(I_GIGA_SANGSUE);
m1484stringList_.add(I_COUPE);
m1484pokemonData_.setMoveTutors(m1484stringList_);
Shorts m1484shorts_=new Shorts(new CollCapacity(1));
m1484shorts_.add((short)1);
m1484pokemonData_.setHiddenMoves(m1484shorts_);
m1484shorts_=new Shorts(new CollCapacity(25));
m1484shorts_.add((short)70);
m1484shorts_.add((short)6);
m1484shorts_.add((short)9);
m1484shorts_.add((short)10);
m1484shorts_.add((short)11);
m1484shorts_.add((short)17);
m1484shorts_.add((short)21);
m1484shorts_.add((short)22);
m1484shorts_.add((short)27);
m1484shorts_.add((short)32);
m1484shorts_.add((short)36);
m1484shorts_.add((short)42);
m1484shorts_.add((short)44);
m1484shorts_.add((short)45);
m1484shorts_.add((short)48);
m1484shorts_.add((short)53);
m1484shorts_.add((short)75);
m1484shorts_.add((short)88);
m1484shorts_.add((short)83);
m1484shorts_.add((short)86);
m1484shorts_.add((short)87);
m1484shorts_.add((short)90);
m1484shorts_.add((short)96);
m1484shorts_.add((short)99);
m1484shorts_.add((short)100);
m1484pokemonData_.setTechnicalMoves(m1484shorts_);
m1484pokemonData_.setBaseEvo(I_MYSTHERBE);
StringMap<Evolution> m1484stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1484evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1484evolutionLevelSimple_.setLevel((short)21);
m1484stringMapEvolution_.addEntry(I_ORTIDE,m1484evolutionLevelSimple_);
m1484pokemonData_.setEvolutions(m1484stringMapEvolution_);
m1484pokemonData_.setCatchingRate((short)255);
m1484pokemonData_.setHeight(Rate.newRate(R_1_2));
m1484pokemonData_.setExpEvo(ExpType.P);
m1484pokemonData_.setExpRate(64);
m1484stringList_=new StringList(new CollCapacity(1));
m1484stringList_.add(I_PLANTE);
m1484pokemonData_.setEggGroups(m1484stringList_);
m1484pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1484pokemonData_.setHappiness((short)70);
m1484pokemonData_.setHappinessHatch((short)140);
return m1484pokemonData_;
}
}
