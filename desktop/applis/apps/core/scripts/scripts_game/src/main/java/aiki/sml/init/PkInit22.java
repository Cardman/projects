package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.pokemon.*;
import aiki.fight.pokemon.evolution.*;
import aiki.fight.pokemon.enums.*;
import aiki.map.pokemon.enums.*;
import code.maths.*;
import code.util.*;
final class PkInit22 extends CstIgame{
private PkInit22(){}
static PokemonData p594(){
PokemonData m1661pokemonData_=Instances.newPokemonData();
m1661pokemonData_.setWeight(Rate.newRate(R_12));
StringList m1661stringList_=new StringList(new CollCapacity(1));
m1661stringList_.add(I_SOL);
m1661pokemonData_.setTypes(m1661stringList_);
EnumMap<Statistic,StatBaseEv> m1661enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)75,(short)0));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)20,(short)0));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)30,(short)0));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)85,(short)1));
m1661enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1661pokemonData_.setStatistics(m1661enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1661custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1661custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1661custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1661custListLevelMove_.add(new LevelMove((short)3,I_JET_DE_SABLE));
m1661custListLevelMove_.add(new LevelMove((short)5,I_DARD_VENIN));
m1661custListLevelMove_.add(new LevelMove((short)7,I_ROULADE));
m1661custListLevelMove_.add(new LevelMove((short)9,I_TOUR_RAPIDE));
m1661custListLevelMove_.add(new LevelMove((short)11,I_METEORES));
m1661custListLevelMove_.add(new LevelMove((short)14,I_TAILLADE));
m1661custListLevelMove_.add(new LevelMove((short)17,I_AMPLEUR));
m1661custListLevelMove_.add(new LevelMove((short)20,I_COMBO_GRIFFE));
m1661custListLevelMove_.add(new LevelMove((short)23,I_TOURBI_SABLE));
m1661custListLevelMove_.add(new LevelMove((short)26,I_TRANCHE));
m1661custListLevelMove_.add(new LevelMove((short)30,I_TUNNEL));
m1661custListLevelMove_.add(new LevelMove((short)34,I_GYROBALLE));
m1661custListLevelMove_.add(new LevelMove((short)38,I_DANSE_LAMES));
m1661custListLevelMove_.add(new LevelMove((short)42,I_TEMPETESABLE));
m1661custListLevelMove_.add(new LevelMove((short)46,I_SEISME));
m1661pokemonData_.setLevMoves(m1661custListLevelMove_);
m1661pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1661stringList_=new StringList(new CollCapacity(1));
m1661stringList_.add(I_VOILE_SABLE);
m1661pokemonData_.setAbilities(m1661stringList_);
m1661stringList_=new StringList(new CollCapacity(37));
m1661stringList_.add(I_BLABLA_DODO);
m1661stringList_.add(I_BOUL_ARMURE);
m1661stringList_.add(I_CLONAGE);
m1661stringList_.add(I_COPIE);
m1661stringList_.add(I_COUD_BOUE);
m1661stringList_.add(I_COUP_D_BOULE);
m1661stringList_.add(I_CROC_FATAL);
m1661stringList_.add(I_DAMOCLES);
m1661stringList_.add(I_DANSE_LAMES);
m1661stringList_.add(I_DYNAMOPOING);
m1661stringList_.add(I_EBOULEMENT);
m1661stringList_.add(I_ECLATEGRIFFE);
m1661stringList_.add(I_FLEAU);
m1661stringList_.add(I_FRAPPE_ATLAS);
m1661stringList_.add(I_GRIFFE_ACIER);
m1661stringList_.add(I_METEORES);
m1661stringList_.add(I_PLAQUAGE);
m1661stringList_.add(I_RIPOSTE);
m1661stringList_.add(I_RONFLEMENT);
m1661stringList_.add(I_ROULADE);
m1661stringList_.add(I_RUNE_PROTECT);
m1661stringList_.add(I_SABOTAGE);
m1661stringList_.add(I_TAILLADE);
m1661stringList_.add(I_TELLURIFORCE);
m1661stringList_.add(I_TENACITE);
m1661stringList_.add(I_TIR_DE_BOUE);
m1661stringList_.add(I_TOUR_RAPIDE);
m1661stringList_.add(I_TRANCHE_NUIT);
m1661stringList_.add(I_VANTARDISE);
m1661stringList_.add(I_ATTRITION);
m1661stringList_.add(I_ESCALADE);
m1661stringList_.add(I_FERTILISATION);
m1661stringList_.add(I_IMPLORE);
m1661stringList_.add(I_PIEGE_DE_ROC);
m1661stringList_.add(I_QUEUE_DE_FER);
m1661stringList_.add(I_COUPE);
m1661stringList_.add(I_FORCE);
m1661pokemonData_.setMoveTutors(m1661stringList_);
Shorts m1661shorts_=new Shorts(new CollCapacity(2));
m1661shorts_.add((short)1);
m1661shorts_.add((short)4);
m1661pokemonData_.setHiddenMoves(m1661shorts_);
m1661shorts_=new Shorts(new CollCapacity(33));
m1661shorts_.add((short)94);
m1661shorts_.add((short)1);
m1661shorts_.add((short)6);
m1661shorts_.add((short)10);
m1661shorts_.add((short)11);
m1661shorts_.add((short)17);
m1661shorts_.add((short)20);
m1661shorts_.add((short)21);
m1661shorts_.add((short)26);
m1661shorts_.add((short)27);
m1661shorts_.add((short)28);
m1661shorts_.add((short)31);
m1661shorts_.add((short)32);
m1661shorts_.add((short)37);
m1661shorts_.add((short)39);
m1661shorts_.add((short)40);
m1661shorts_.add((short)42);
m1661shorts_.add((short)44);
m1661shorts_.add((short)45);
m1661shorts_.add((short)46);
m1661shorts_.add((short)48);
m1661shorts_.add((short)56);
m1661shorts_.add((short)65);
m1661shorts_.add((short)74);
m1661shorts_.add((short)75);
m1661shorts_.add((short)78);
m1661shorts_.add((short)80);
m1661shorts_.add((short)81);
m1661shorts_.add((short)88);
m1661shorts_.add((short)84);
m1661shorts_.add((short)87);
m1661shorts_.add((short)90);
m1661shorts_.add((short)100);
m1661pokemonData_.setTechnicalMoves(m1661shorts_);
m1661pokemonData_.setBaseEvo(I_SABELETTE);
StringMap<Evolution> m1661stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1661evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1661evolutionLevelSimple_.setLevel((short)22);
m1661stringMapEvolution_.addEntry(I_SABLAIREAU,m1661evolutionLevelSimple_);
m1661pokemonData_.setEvolutions(m1661stringMapEvolution_);
m1661pokemonData_.setCatchingRate((short)255);
m1661pokemonData_.setHeight(Rate.newRate(R_3_5));
m1661pokemonData_.setExpEvo(ExpType.M);
m1661pokemonData_.setExpRate(60);
m1661stringList_=new StringList(new CollCapacity(1));
m1661stringList_.add(I_SOL);
m1661pokemonData_.setEggGroups(m1661stringList_);
m1661pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1661pokemonData_.setHappiness((short)70);
m1661pokemonData_.setHappinessHatch((short)140);
return m1661pokemonData_;
}
static PokemonData p595(){
PokemonData m1662pokemonData_=Instances.newPokemonData();
m1662pokemonData_.setWeight(Rate.newRate(R_59_2));
StringList m1662stringList_=new StringList(new CollCapacity(1));
m1662stringList_.add(I_SOL);
m1662pokemonData_.setTypes(m1662stringList_);
EnumMap<Statistic,StatBaseEv> m1662enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)45,(short)0));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)55,(short)0));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)75,(short)0));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)110,(short)2));
m1662enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)0));
m1662pokemonData_.setStatistics(m1662enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1662custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1662custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1662custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1662custListLevelMove_.add(new LevelMove((short)3,I_JET_DE_SABLE));
m1662custListLevelMove_.add(new LevelMove((short)5,I_DARD_VENIN));
m1662custListLevelMove_.add(new LevelMove((short)7,I_ROULADE));
m1662custListLevelMove_.add(new LevelMove((short)9,I_TOUR_RAPIDE));
m1662custListLevelMove_.add(new LevelMove((short)11,I_METEORES));
m1662custListLevelMove_.add(new LevelMove((short)14,I_TAILLADE));
m1662custListLevelMove_.add(new LevelMove((short)17,I_AMPLEUR));
m1662custListLevelMove_.add(new LevelMove((short)20,I_COMBO_GRIFFE));
m1662custListLevelMove_.add(new LevelMove((short)22,I_ECLATEGRIFFE));
m1662custListLevelMove_.add(new LevelMove((short)23,I_TOURBI_SABLE));
m1662custListLevelMove_.add(new LevelMove((short)26,I_TRANCHE));
m1662custListLevelMove_.add(new LevelMove((short)30,I_TUNNEL));
m1662custListLevelMove_.add(new LevelMove((short)34,I_GYROBALLE));
m1662custListLevelMove_.add(new LevelMove((short)38,I_DANSE_LAMES));
m1662custListLevelMove_.add(new LevelMove((short)42,I_TEMPETESABLE));
m1662custListLevelMove_.add(new LevelMove((short)46,I_SEISME));
m1662pokemonData_.setLevMoves(m1662custListLevelMove_);
m1662pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1662stringList_=new StringList(new CollCapacity(1));
m1662stringList_.add(I_VOILE_SABLE);
m1662pokemonData_.setAbilities(m1662stringList_);
m1662stringList_=new StringList(new CollCapacity(34));
m1662stringList_.add(I_BLABLA_DODO);
m1662stringList_.add(I_BOUL_ARMURE);
m1662stringList_.add(I_CLONAGE);
m1662stringList_.add(I_COPIE);
m1662stringList_.add(I_COUD_BOUE);
m1662stringList_.add(I_COUP_D_BOULE);
m1662stringList_.add(I_CROC_FATAL);
m1662stringList_.add(I_DAMOCLES);
m1662stringList_.add(I_DANSE_LAMES);
m1662stringList_.add(I_DYNAMOPOING);
m1662stringList_.add(I_EBOULEMENT);
m1662stringList_.add(I_ECLATEGRIFFE);
m1662stringList_.add(I_FLEAU);
m1662stringList_.add(I_FRAPPE_ATLAS);
m1662stringList_.add(I_GRIFFE_ACIER);
m1662stringList_.add(I_METEORES);
m1662stringList_.add(I_PLAQUAGE);
m1662stringList_.add(I_RIPOSTE);
m1662stringList_.add(I_RONFLEMENT);
m1662stringList_.add(I_ROULADE);
m1662stringList_.add(I_RUNE_PROTECT);
m1662stringList_.add(I_SABOTAGE);
m1662stringList_.add(I_TAILLADE);
m1662stringList_.add(I_TELLURIFORCE);
m1662stringList_.add(I_TENACITE);
m1662stringList_.add(I_TIR_DE_BOUE);
m1662stringList_.add(I_TOUR_RAPIDE);
m1662stringList_.add(I_TRANCHE_NUIT);
m1662stringList_.add(I_VANTARDISE);
m1662stringList_.add(I_IMPLORE);
m1662stringList_.add(I_PIEGE_DE_ROC);
m1662stringList_.add(I_QUEUE_DE_FER);
m1662stringList_.add(I_COUPE);
m1662stringList_.add(I_FORCE);
m1662pokemonData_.setMoveTutors(m1662stringList_);
Shorts m1662shorts_=new Shorts(new CollCapacity(2));
m1662shorts_.add((short)1);
m1662shorts_.add((short)4);
m1662pokemonData_.setHiddenMoves(m1662shorts_);
m1662shorts_=new Shorts(new CollCapacity(37));
m1662shorts_.add((short)94);
m1662shorts_.add((short)1);
m1662shorts_.add((short)6);
m1662shorts_.add((short)10);
m1662shorts_.add((short)11);
m1662shorts_.add((short)15);
m1662shorts_.add((short)17);
m1662shorts_.add((short)20);
m1662shorts_.add((short)21);
m1662shorts_.add((short)26);
m1662shorts_.add((short)27);
m1662shorts_.add((short)28);
m1662shorts_.add((short)31);
m1662shorts_.add((short)32);
m1662shorts_.add((short)37);
m1662shorts_.add((short)39);
m1662shorts_.add((short)40);
m1662shorts_.add((short)42);
m1662shorts_.add((short)44);
m1662shorts_.add((short)45);
m1662shorts_.add((short)46);
m1662shorts_.add((short)48);
m1662shorts_.add((short)52);
m1662shorts_.add((short)56);
m1662shorts_.add((short)65);
m1662shorts_.add((short)68);
m1662shorts_.add((short)71);
m1662shorts_.add((short)74);
m1662shorts_.add((short)75);
m1662shorts_.add((short)78);
m1662shorts_.add((short)80);
m1662shorts_.add((short)81);
m1662shorts_.add((short)88);
m1662shorts_.add((short)84);
m1662shorts_.add((short)87);
m1662shorts_.add((short)90);
m1662shorts_.add((short)100);
m1662pokemonData_.setTechnicalMoves(m1662shorts_);
m1662pokemonData_.setBaseEvo(I_SABELETTE);
m1662pokemonData_.setCatchingRate((short)90);
m1662pokemonData_.setHeight(Rate.newRate(R_1));
m1662pokemonData_.setExpEvo(ExpType.M);
m1662pokemonData_.setExpRate(158);
m1662stringList_=new StringList(new CollCapacity(1));
m1662stringList_.add(I_SOL);
m1662pokemonData_.setEggGroups(m1662stringList_);
m1662pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1662pokemonData_.setHappiness((short)70);
m1662pokemonData_.setHappinessHatch((short)140);
return m1662pokemonData_;
}
static PokemonData p596(){
PokemonData m1663pokemonData_=Instances.newPokemonData();
m1663pokemonData_.setWeight(Rate.newRate(R_17_2));
StringList m1663stringList_=new StringList(new CollCapacity(1));
m1663stringList_.add(I_FEU);
m1663pokemonData_.setTypes(m1663stringList_);
EnumMap<Statistic,StatBaseEv> m1663enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)52,(short)0));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)39,(short)0));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)43,(short)0));
m1663enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)1));
m1663pokemonData_.setStatistics(m1663enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1663custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1663custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1663custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1663custListLevelMove_.add(new LevelMove((short)7,I_FLAMMECHE));
m1663custListLevelMove_.add(new LevelMove((short)10,I_BROUILLARD));
m1663custListLevelMove_.add(new LevelMove((short)16,I_DRACO_RAGE));
m1663custListLevelMove_.add(new LevelMove((short)19,I_GRIMACE));
m1663custListLevelMove_.add(new LevelMove((short)25,I_CROCS_FEU));
m1663custListLevelMove_.add(new LevelMove((short)28,I_REBONDIFEU));
m1663custListLevelMove_.add(new LevelMove((short)34,I_TRANCHE));
m1663custListLevelMove_.add(new LevelMove((short)37,I_LANCE_FLAMME));
m1663custListLevelMove_.add(new LevelMove((short)43,I_DANSEFLAMME));
m1663custListLevelMove_.add(new LevelMove((short)46,I_FEU_D_ENFER));
m1663pokemonData_.setLevMoves(m1663custListLevelMove_);
m1663pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1663stringList_=new StringList(new CollCapacity(1));
m1663stringList_.add(I_BRASIER);
m1663pokemonData_.setAbilities(m1663stringList_);
m1663stringList_=new StringList(new CollCapacity(40));
m1663stringList_.add(I_BASTON);
m1663stringList_.add(I_BLABLA_DODO);
m1663stringList_.add(I_BOUL_ARMURE);
m1663stringList_.add(I_BOUTEFEU);
m1663stringList_.add(I_CANICULE);
m1663stringList_.add(I_CLONAGE);
m1663stringList_.add(I_COGNOBIDON);
m1663stringList_.add(I_COLERE);
m1663stringList_.add(I_COPIE);
m1663stringList_.add(I_COUD_BOUE);
m1663stringList_.add(I_COUP_D_BOULE);
m1663stringList_.add(I_DAMOCLES);
m1663stringList_.add(I_DANSE_DRACO);
m1663stringList_.add(I_DANSE_LAMES);
m1663stringList_.add(I_DRACOCHARGE);
m1663stringList_.add(I_DYNAMOPOING);
m1663stringList_.add(I_EBOULEMENT);
m1663stringList_.add(I_FRAPPE_ATLAS);
m1663stringList_.add(I_GRIFFE_ACIER);
m1663stringList_.add(I_MACHOUILLE);
m1663stringList_.add(I_METEORES);
m1663stringList_.add(I_MORSURE);
m1663stringList_.add(I_PLAQUAGE);
m1663stringList_.add(I_POING_DE_FEU);
m1663stringList_.add(I_POING_ECLAIR);
m1663stringList_.add(I_POUV_ANTIQUE);
m1663stringList_.add(I_RIPOSTE);
m1663stringList_.add(I_RONFLEMENT);
m1663stringList_.add(I_TAILLADE);
m1663stringList_.add(I_TENACITE);
m1663stringList_.add(I_ULTIMAPOING);
m1663stringList_.add(I_ULTIMAWASHI);
m1663stringList_.add(I_VANTARDISE);
m1663stringList_.add(I_AIRE_DE_FEU);
m1663stringList_.add(I_DRACOCHOC);
m1663stringList_.add(I_MITRA_POING);
m1663stringList_.add(I_QUEUE_DE_FER);
m1663stringList_.add(I_TRANCH_AIR);
m1663stringList_.add(I_COUPE);
m1663stringList_.add(I_FORCE);
m1663pokemonData_.setMoveTutors(m1663stringList_);
Shorts m1663shorts_=new Shorts(new CollCapacity(2));
m1663shorts_.add((short)1);
m1663shorts_.add((short)4);
m1663pokemonData_.setHiddenMoves(m1663shorts_);
m1663shorts_=new Shorts(new CollCapacity(34));
m1663shorts_.add((short)94);
m1663shorts_.add((short)1);
m1663shorts_.add((short)2);
m1663shorts_.add((short)6);
m1663shorts_.add((short)10);
m1663shorts_.add((short)11);
m1663shorts_.add((short)17);
m1663shorts_.add((short)21);
m1663shorts_.add((short)27);
m1663shorts_.add((short)28);
m1663shorts_.add((short)31);
m1663shorts_.add((short)32);
m1663shorts_.add((short)35);
m1663shorts_.add((short)38);
m1663shorts_.add((short)39);
m1663shorts_.add((short)40);
m1663shorts_.add((short)42);
m1663shorts_.add((short)43);
m1663shorts_.add((short)44);
m1663shorts_.add((short)45);
m1663shorts_.add((short)48);
m1663shorts_.add((short)49);
m1663shorts_.add((short)50);
m1663shorts_.add((short)56);
m1663shorts_.add((short)59);
m1663shorts_.add((short)61);
m1663shorts_.add((short)65);
m1663shorts_.add((short)75);
m1663shorts_.add((short)80);
m1663shorts_.add((short)88);
m1663shorts_.add((short)87);
m1663shorts_.add((short)90);
m1663shorts_.add((short)98);
m1663shorts_.add((short)100);
m1663pokemonData_.setTechnicalMoves(m1663shorts_);
m1663pokemonData_.setBaseEvo(I_SALAMECHE);
StringMap<Evolution> m1663stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1663evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1663evolutionLevelSimple_.setLevel((short)16);
m1663stringMapEvolution_.addEntry(I_REPTINCEL,m1663evolutionLevelSimple_);
m1663pokemonData_.setEvolutions(m1663stringMapEvolution_);
m1663pokemonData_.setCatchingRate((short)45);
m1663pokemonData_.setHeight(Rate.newRate(R_3_5));
m1663pokemonData_.setExpEvo(ExpType.P);
m1663pokemonData_.setExpRate(62);
m1663stringList_=new StringList(new CollCapacity(2));
m1663stringList_.add(I_DRAGON);
m1663stringList_.add(I_MONSTRE);
m1663pokemonData_.setEggGroups(m1663stringList_);
m1663pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1663pokemonData_.setHappiness((short)70);
m1663pokemonData_.setHappinessHatch((short)140);
return m1663pokemonData_;
}
static PokemonData p597(){
PokemonData m1664pokemonData_=Instances.newPokemonData();
m1664pokemonData_.setWeight(Rate.newRate(R_63_10));
StringList m1664stringList_=new StringList(new CollCapacity(1));
m1664stringList_.add(I_EAU);
m1664pokemonData_.setTypes(m1664stringList_);
EnumMap<Statistic,StatBaseEv> m1664enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)48,(short)0));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)57,(short)0));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)62,(short)0));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)76,(short)1));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)48,(short)0));
m1664enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)34,(short)0));
m1664pokemonData_.setStatistics(m1664enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1664custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(10));
m1664custListLevelMove_.add(new LevelMove((short)1,I_COUD_BOUE));
m1664custListLevelMove_.add(new LevelMove((short)2,I_LANCE_BOUE));
m1664custListLevelMove_.add(new LevelMove((short)4,I_ARMURE));
m1664custListLevelMove_.add(new LevelMove((short)7,I_VIBRAQUA));
m1664custListLevelMove_.add(new LevelMove((short)11,I_BOUE_BOMBE));
m1664custListLevelMove_.add(new LevelMove((short)16,I_PUIS_CACHEE));
m1664custListLevelMove_.add(new LevelMove((short)22,I_DANSE_PLUIE));
m1664custListLevelMove_.add(new LevelMove((short)29,I_PLAQUAGE));
m1664custListLevelMove_.add(new LevelMove((short)37,I_OCROUPI));
m1664custListLevelMove_.add(new LevelMove((short)46,I_SOIN));
m1664pokemonData_.setLevMoves(m1664custListLevelMove_);
m1664pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1664stringList_=new StringList(new CollCapacity(2));
m1664stringList_.add(I_GLUE);
m1664stringList_.add(I_LAVABO);
m1664pokemonData_.setAbilities(m1664stringList_);
m1664stringList_=new StringList(new CollCapacity(26));
m1664stringList_.add(I_ABIME);
m1664stringList_.add(I_AMNESIE);
m1664stringList_.add(I_ATOUT);
m1664stringList_.add(I_AVALE);
m1664stringList_.add(I_BAILLEMENT);
m1664stringList_.add(I_BALANCE);
m1664stringList_.add(I_COUP_D_BOULE);
m1664stringList_.add(I_DETRITUS);
m1664stringList_.add(I_MALEDICTION);
m1664stringList_.add(I_PLONGEE);
m1664stringList_.add(I_POUV_ANTIQUE);
m1664stringList_.add(I_RELACHE);
m1664stringList_.add(I_RIPOSTE);
m1664stringList_.add(I_RONFLEMENT);
m1664stringList_.add(I_SECRETION);
m1664stringList_.add(I_SOUVENIR);
m1664stringList_.add(I_STOCKAGE);
m1664stringList_.add(I_TELLURIFORCE);
m1664stringList_.add(I_VENT_GLACE);
m1664stringList_.add(I_VOILE_MIROIR);
m1664stringList_.add(I_ACIDARMURE);
m1664stringList_.add(I_BAIN_DE_SMOG);
m1664stringList_.add(I_BLABLA_DODO);
m1664stringList_.add(I_BRUME);
m1664stringList_.add(I_SAUMURE);
m1664stringList_.add(I_SURF);
m1664pokemonData_.setMoveTutors(m1664stringList_);
Shorts m1664shorts_=new Shorts(new CollCapacity(1));
m1664shorts_.add((short)3);
m1664pokemonData_.setHiddenMoves(m1664shorts_);
m1664shorts_=new Shorts(new CollCapacity(20));
m1664shorts_.add((short)6);
m1664shorts_.add((short)7);
m1664shorts_.add((short)10);
m1664shorts_.add((short)13);
m1664shorts_.add((short)14);
m1664shorts_.add((short)17);
m1664shorts_.add((short)18);
m1664shorts_.add((short)21);
m1664shorts_.add((short)27);
m1664shorts_.add((short)32);
m1664shorts_.add((short)42);
m1664shorts_.add((short)44);
m1664shorts_.add((short)45);
m1664shorts_.add((short)48);
m1664shorts_.add((short)55);
m1664shorts_.add((short)88);
m1664shorts_.add((short)83);
m1664shorts_.add((short)87);
m1664shorts_.add((short)90);
m1664shorts_.add((short)100);
m1664pokemonData_.setTechnicalMoves(m1664shorts_);
m1664pokemonData_.setBaseEvo(I_SANCOKI);
StringMap<Evolution> m1664stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1664evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1664evolutionLevelSimple_.setLevel((short)30);
m1664stringMapEvolution_.addEntry(I_TRITOSOR,m1664evolutionLevelSimple_);
m1664pokemonData_.setEvolutions(m1664stringMapEvolution_);
m1664pokemonData_.setCatchingRate((short)190);
m1664pokemonData_.setHeight(Rate.newRate(R_3_10));
m1664pokemonData_.setExpEvo(ExpType.M);
m1664pokemonData_.setExpRate(65);
m1664stringList_=new StringList(new CollCapacity(2));
m1664stringList_.add(I_EAU_1);
m1664stringList_.add(I_INDETERMINE);
m1664pokemonData_.setEggGroups(m1664stringList_);
m1664pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1664pokemonData_.setHappiness((short)70);
m1664pokemonData_.setHappinessHatch((short)140);
return m1664pokemonData_;
}
static PokemonData p598(){
PokemonData m1665pokemonData_=Instances.newPokemonData();
m1665pokemonData_.setWeight(Rate.newRate(R_5));
StringList m1665stringList_=new StringList(new CollCapacity(1));
m1665stringList_.add(I_NORMAL);
m1665pokemonData_.setTypes(m1665stringList_);
EnumMap<Statistic,StatBaseEv> m1665enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)36,(short)0));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)32,(short)0));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)36,(short)0));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)38,(short)0));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)38,(short)0));
m1665enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)57,(short)1));
m1665pokemonData_.setStatistics(m1665enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1665custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1665custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1665custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1665custListLevelMove_.add(new LevelMove((short)1,I_HATE));
m1665custListLevelMove_.add(new LevelMove((short)7,I_VIVE_ATTAQUE));
m1665custListLevelMove_.add(new LevelMove((short)10,I_TORGNOLES));
m1665custListLevelMove_.add(new LevelMove((short)13,I_COUD_BOUE));
m1665custListLevelMove_.add(new LevelMove((short)15,I_BELIER));
m1665custListLevelMove_.add(new LevelMove((short)18,I_TIR_DE_BOUE));
m1665custListLevelMove_.add(new LevelMove((short)20,I_DOUBLE_PIED));
m1665custListLevelMove_.add(new LevelMove((short)25,I_FLAIR));
m1665custListLevelMove_.add(new LevelMove((short)29,I_FLEAU));
m1665custListLevelMove_.add(new LevelMove((short)33,I_TUNNEL));
m1665custListLevelMove_.add(new LevelMove((short)33,I_TUNNEL));
m1665custListLevelMove_.add(new LevelMove((short)38,I_REBOND));
m1665custListLevelMove_.add(new LevelMove((short)42,I_CROC_FATAL));
m1665custListLevelMove_.add(new LevelMove((short)47,I_FACADE));
m1665custListLevelMove_.add(new LevelMove((short)47,I_FACADE));
m1665custListLevelMove_.add(new LevelMove((short)49,I_SEISME));
m1665custListLevelMove_.add(new LevelMove((short)49,I_SEISME));
m1665pokemonData_.setLevMoves(m1665custListLevelMove_);
m1665pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1665stringList_=new StringList(new CollCapacity(2));
m1665stringList_.add(I_BAJOUES);
m1665stringList_.add(I_COLOFORCE);
m1665pokemonData_.setAbilities(m1665stringList_);
m1665stringList_=new StringList(new CollCapacity(6));
m1665stringList_.add(I_BOUL_ARMURE);
m1665stringList_.add(I_PICOTS);
m1665stringList_.add(I_ROULADE);
m1665stringList_.add(I_COUPE);
m1665stringList_.add(I_SURF);
m1665stringList_.add(I_FORCE);
m1665pokemonData_.setMoveTutors(m1665stringList_);
Shorts m1665shorts_=new Shorts(new CollCapacity(3));
m1665shorts_.add((short)1);
m1665shorts_.add((short)3);
m1665shorts_.add((short)4);
m1665pokemonData_.setHiddenMoves(m1665shorts_);
m1665shorts_=new Shorts(new CollCapacity(35));
m1665shorts_.add((short)94);
m1665shorts_.add((short)6);
m1665shorts_.add((short)8);
m1665shorts_.add((short)10);
m1665shorts_.add((short)17);
m1665shorts_.add((short)21);
m1665shorts_.add((short)23);
m1665shorts_.add((short)26);
m1665shorts_.add((short)27);
m1665shorts_.add((short)28);
m1665shorts_.add((short)31);
m1665shorts_.add((short)32);
m1665shorts_.add((short)36);
m1665shorts_.add((short)37);
m1665shorts_.add((short)39);
m1665shorts_.add((short)41);
m1665shorts_.add((short)42);
m1665shorts_.add((short)44);
m1665shorts_.add((short)45);
m1665shorts_.add((short)46);
m1665shorts_.add((short)48);
m1665shorts_.add((short)56);
m1665shorts_.add((short)66);
m1665shorts_.add((short)71);
m1665shorts_.add((short)78);
m1665shorts_.add((short)80);
m1665shorts_.add((short)88);
m1665shorts_.add((short)86);
m1665shorts_.add((short)87);
m1665shorts_.add((short)89);
m1665shorts_.add((short)90);
m1665shorts_.add((short)93);
m1665shorts_.add((short)96);
m1665shorts_.add((short)98);
m1665shorts_.add((short)100);
m1665pokemonData_.setTechnicalMoves(m1665shorts_);
m1665pokemonData_.setBaseEvo(I_SAPEREAU);
StringMap<Evolution> m1665stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1665evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1665evolutionLevelSimple_.setLevel((short)20);
m1665stringMapEvolution_.addEntry(I_EXCAVARENNE,m1665evolutionLevelSimple_);
m1665pokemonData_.setEvolutions(m1665stringMapEvolution_);
m1665pokemonData_.setCatchingRate((short)255);
m1665pokemonData_.setHeight(Rate.newRate(R_2_5));
m1665pokemonData_.setExpEvo(ExpType.M);
m1665pokemonData_.setExpRate(47);
m1665stringList_=new StringList(new CollCapacity(10));
m1665stringList_.add(I_METAMORPH);
m1665stringList_.add(I_DRAGON);
m1665stringList_.add(I_SOL);
m1665stringList_.add(I_EAU_1);
m1665stringList_.add(I_MONSTRE);
m1665stringList_.add(I_VOL);
m1665stringList_.add(I_HUMANOIDE);
m1665stringList_.add(I_FEE);
m1665stringList_.add(I_PLANTE);
m1665stringList_.add(I_EAU_2);
m1665pokemonData_.setEggGroups(m1665stringList_);
m1665pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1665pokemonData_.setHappiness((short)70);
m1665pokemonData_.setHappinessHatch((short)140);
return m1665pokemonData_;
}
static PokemonData p599(){
PokemonData m1666pokemonData_=Instances.newPokemonData();
m1666pokemonData_.setWeight(Rate.newRate(R_35));
StringList m1666stringList_=new StringList(new CollCapacity(1));
m1666stringList_.add(I_PLANTE);
m1666pokemonData_.setTypes(m1666stringList_);
EnumMap<Statistic,StatBaseEv> m1666enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)0));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)115,(short)1));
m1666enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1666pokemonData_.setStatistics(m1666enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1666custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1666custListLevelMove_.add(new LevelMove((short)1,I_RACINES));
m1666custListLevelMove_.add(new LevelMove((short)1,I_CONSTRICTION));
m1666custListLevelMove_.add(new LevelMove((short)4,I_POUDRE_DODO));
m1666custListLevelMove_.add(new LevelMove((short)7,I_FOUET_LIANES));
m1666custListLevelMove_.add(new LevelMove((short)10,I_VOL_VIE));
m1666custListLevelMove_.add(new LevelMove((short)14,I_POUDRE_TOXIK));
m1666custListLevelMove_.add(new LevelMove((short)17,I_ETREINTE));
m1666custListLevelMove_.add(new LevelMove((short)20,I_CROISSANCE));
m1666custListLevelMove_.add(new LevelMove((short)23,I_MEGA_SANGSUE));
m1666custListLevelMove_.add(new LevelMove((short)27,I_SABOTAGE));
m1666custListLevelMove_.add(new LevelMove((short)30,I_PARA_SPORE));
m1666custListLevelMove_.add(new LevelMove((short)33,I_DON_NATUREL));
m1666custListLevelMove_.add(new LevelMove((short)36,I_GIGA_SANGSUE));
m1666custListLevelMove_.add(new LevelMove((short)38,I_POUV_ANTIQUE));
m1666custListLevelMove_.add(new LevelMove((short)41,I_SOUPLESSE));
m1666custListLevelMove_.add(new LevelMove((short)44,I_CHATOUILLE));
m1666custListLevelMove_.add(new LevelMove((short)46,I_ESSORAGE));
m1666custListLevelMove_.add(new LevelMove((short)48,I_CHAMP_HERBU));
m1666custListLevelMove_.add(new LevelMove((short)50,I_MEGAFOUET));
m1666pokemonData_.setLevMoves(m1666custListLevelMove_);
m1666pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1666stringList_=new StringList(new CollCapacity(2));
m1666stringList_.add(I_CHLOROPHYLLE);
m1666stringList_.add(I_FEUILLE_GARDE);
m1666pokemonData_.setAbilities(m1666stringList_);
m1666stringList_=new StringList(new CollCapacity(31));
m1666stringList_.add(I_AMNESIE);
m1666stringList_.add(I_BALANCE);
m1666stringList_.add(I_BLABLA_DODO);
m1666stringList_.add(I_BOOST);
m1666stringList_.add(I_CANON_GRAINE);
m1666stringList_.add(I_CHOC_MENTAL);
m1666stringList_.add(I_CLONAGE);
m1666stringList_.add(I_COPIE);
m1666stringList_.add(I_DAMOCLES);
m1666stringList_.add(I_DANSE_LAMES);
m1666stringList_.add(I_EFFORT);
m1666stringList_.add(I_FLEAU);
m1666stringList_.add(I_FORCE_NATURE);
m1666stringList_.add(I_MEGA_SANGSUE);
m1666stringList_.add(I_PERMUFORCE);
m1666stringList_.add(I_PLAQUAGE);
m1666stringList_.add(I_POUV_ANTIQUE);
m1666stringList_.add(I_PROTECTION);
m1666stringList_.add(I_RONFLEMENT);
m1666stringList_.add(I_SABOTAGE);
m1666stringList_.add(I_SOUCIGRAINE);
m1666stringList_.add(I_SYNTHESE);
m1666stringList_.add(I_TEMPETEVERTE);
m1666stringList_.add(I_TENACITE);
m1666stringList_.add(I_VAMPIGRAINE);
m1666stringList_.add(I_VANTARDISE);
m1666stringList_.add(I_DON_NATUREL);
m1666stringList_.add(I_ETREINTE);
m1666stringList_.add(I_GIGA_SANGSUE);
m1666stringList_.add(I_POUDRE_FUREUR);
m1666stringList_.add(I_COUPE);
m1666pokemonData_.setMoveTutors(m1666stringList_);
Shorts m1666shorts_=new Shorts(new CollCapacity(1));
m1666shorts_.add((short)1);
m1666pokemonData_.setHiddenMoves(m1666shorts_);
m1666shorts_=new Shorts(new CollCapacity(28));
m1666shorts_.add((short)70);
m1666shorts_.add((short)94);
m1666shorts_.add((short)6);
m1666shorts_.add((short)10);
m1666shorts_.add((short)11);
m1666shorts_.add((short)15);
m1666shorts_.add((short)17);
m1666shorts_.add((short)21);
m1666shorts_.add((short)22);
m1666shorts_.add((short)27);
m1666shorts_.add((short)32);
m1666shorts_.add((short)33);
m1666shorts_.add((short)36);
m1666shorts_.add((short)42);
m1666shorts_.add((short)44);
m1666shorts_.add((short)45);
m1666shorts_.add((short)46);
m1666shorts_.add((short)48);
m1666shorts_.add((short)53);
m1666shorts_.add((short)68);
m1666shorts_.add((short)75);
m1666shorts_.add((short)77);
m1666shorts_.add((short)88);
m1666shorts_.add((short)83);
m1666shorts_.add((short)86);
m1666shorts_.add((short)87);
m1666shorts_.add((short)90);
m1666shorts_.add((short)100);
m1666pokemonData_.setTechnicalMoves(m1666shorts_);
m1666pokemonData_.setBaseEvo(I_SAQUEDENEU);
StringMap<Evolution> m1666stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionMove m1666evolutionMove_=Instances.newEvolutionMove();
m1666evolutionMove_.setMove(I_POUV_ANTIQUE);
m1666stringMapEvolution_.addEntry(I_BOULDENEU,m1666evolutionMove_);
m1666pokemonData_.setEvolutions(m1666stringMapEvolution_);
m1666pokemonData_.setCatchingRate((short)45);
m1666pokemonData_.setHeight(Rate.newRate(R_1));
m1666pokemonData_.setExpEvo(ExpType.M);
m1666pokemonData_.setExpRate(87);
m1666stringList_=new StringList(new CollCapacity(1));
m1666stringList_.add(I_PLANTE);
m1666pokemonData_.setEggGroups(m1666stringList_);
m1666pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1666pokemonData_.setHappiness((short)70);
m1666pokemonData_.setHappinessHatch((short)140);
return m1666pokemonData_;
}
static PokemonData p600(){
PokemonData m1667pokemonData_=Instances.newPokemonData();
m1667pokemonData_.setWeight(Rate.newRate(R_51_5));
StringList m1667stringList_=new StringList(new CollCapacity(2));
m1667stringList_.add(I_ACIER);
m1667stringList_.add(I_TENEBRE);
m1667pokemonData_.setTypes(m1667stringList_);
EnumMap<Statistic,StatBaseEv> m1667enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)1));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1667enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1667pokemonData_.setStatistics(m1667enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1667custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1667custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1667custListLevelMove_.add(new LevelMove((short)6,I_GROZ_YEUX));
m1667custListLevelMove_.add(new LevelMove((short)9,I_TAILLADE));
m1667custListLevelMove_.add(new LevelMove((short)14,I_TOURMENTE));
m1667custListLevelMove_.add(new LevelMove((short)17,I_FEINTE));
m1667custListLevelMove_.add(new LevelMove((short)22,I_GRIMACE));
m1667custListLevelMove_.add(new LevelMove((short)25,I_GRIFFE_ACIER));
m1667custListLevelMove_.add(new LevelMove((short)30,I_TRANCHE));
m1667custListLevelMove_.add(new LevelMove((short)33,I_ASSURANCE));
m1667custListLevelMove_.add(new LevelMove((short)38,I_STRIDO_SON));
m1667custListLevelMove_.add(new LevelMove((short)41,I_EMBARGO));
m1667custListLevelMove_.add(new LevelMove((short)46,I_MUR_DE_FER));
m1667custListLevelMove_.add(new LevelMove((short)49,I_TRANCHE_NUIT));
m1667custListLevelMove_.add(new LevelMove((short)54,I_TETE_DE_FER));
m1667custListLevelMove_.add(new LevelMove((short)57,I_DANSE_LAMES));
m1667custListLevelMove_.add(new LevelMove((short)62,I_GUILLOTINE));
m1667pokemonData_.setLevMoves(m1667custListLevelMove_);
m1667pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1667stringList_=new StringList(new CollCapacity(3));
m1667stringList_.add(I_ACHARNE);
m1667stringList_.add(I_ATTENTION);
m1667stringList_.add(I_PRESSION);
m1667pokemonData_.setAbilities(m1667stringList_);
m1667stringList_=new StringList(new CollCapacity(22));
m1667stringList_.add(I_COUPE_PSYCHO);
m1667stringList_.add(I_COUP_BAS);
m1667stringList_.add(I_COUP_D_BOULE);
m1667stringList_.add(I_PIEGE_DE_ROC);
m1667stringList_.add(I_POURSUITE);
m1667stringList_.add(I_REGARD_NOIR);
m1667stringList_.add(I_VENDETTA);
m1667stringList_.add(I_BALAYAGE);
m1667stringList_.add(I_BLABLA_DODO);
m1667stringList_.add(I_DEPIT);
m1667stringList_.add(I_DOUBLE_BAFFE);
m1667stringList_.add(I_IMITATION);
m1667stringList_.add(I_MUR_DE_FER);
m1667stringList_.add(I_PREVENTION);
m1667stringList_.add(I_RONFLEMENT);
m1667stringList_.add(I_SABOTAGE);
m1667stringList_.add(I_SAISIE);
m1667stringList_.add(I_TETE_DE_FER);
m1667stringList_.add(I_TRICHERIE);
m1667stringList_.add(I_VIBROBSCUR);
m1667stringList_.add(I_VOL_MAGNETIK);
m1667stringList_.add(I_COUPE);
m1667pokemonData_.setMoveTutors(m1667stringList_);
Shorts m1667shorts_=new Shorts(new CollCapacity(1));
m1667shorts_.add((short)1);
m1667pokemonData_.setHiddenMoves(m1667shorts_);
m1667shorts_=new Shorts(new CollCapacity(41));
m1667shorts_.add((short)94);
m1667shorts_.add((short)1);
m1667shorts_.add((short)6);
m1667shorts_.add((short)10);
m1667shorts_.add((short)12);
m1667shorts_.add((short)17);
m1667shorts_.add((short)18);
m1667shorts_.add((short)21);
m1667shorts_.add((short)27);
m1667shorts_.add((short)28);
m1667shorts_.add((short)31);
m1667shorts_.add((short)32);
m1667shorts_.add((short)37);
m1667shorts_.add((short)39);
m1667shorts_.add((short)40);
m1667shorts_.add((short)41);
m1667shorts_.add((short)42);
m1667shorts_.add((short)44);
m1667shorts_.add((short)45);
m1667shorts_.add((short)46);
m1667shorts_.add((short)47);
m1667shorts_.add((short)48);
m1667shorts_.add((short)54);
m1667shorts_.add((short)56);
m1667shorts_.add((short)63);
m1667shorts_.add((short)65);
m1667shorts_.add((short)66);
m1667shorts_.add((short)67);
m1667shorts_.add((short)69);
m1667shorts_.add((short)73);
m1667shorts_.add((short)75);
m1667shorts_.add((short)97);
m1667shorts_.add((short)81);
m1667shorts_.add((short)88);
m1667shorts_.add((short)84);
m1667shorts_.add((short)86);
m1667shorts_.add((short)87);
m1667shorts_.add((short)90);
m1667shorts_.add((short)95);
m1667shorts_.add((short)98);
m1667shorts_.add((short)100);
m1667pokemonData_.setTechnicalMoves(m1667shorts_);
m1667pokemonData_.setBaseEvo(I_SCALPION);
StringMap<Evolution> m1667stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1667evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1667evolutionLevelSimple_.setLevel((short)52);
m1667stringMapEvolution_.addEntry(I_SCALPROIE,m1667evolutionLevelSimple_);
m1667pokemonData_.setEvolutions(m1667stringMapEvolution_);
m1667pokemonData_.setCatchingRate((short)120);
m1667pokemonData_.setHeight(Rate.newRate(R_1_2));
m1667pokemonData_.setExpEvo(ExpType.M);
m1667pokemonData_.setExpRate(68);
m1667stringList_=new StringList(new CollCapacity(1));
m1667stringList_.add(I_HUMANOIDE);
m1667pokemonData_.setEggGroups(m1667stringList_);
m1667pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1667pokemonData_.setHappiness((short)70);
m1667pokemonData_.setHappinessHatch((short)140);
return m1667pokemonData_;
}
static PokemonData p601(){
PokemonData m1668pokemonData_=Instances.newPokemonData();
m1668pokemonData_.setWeight(Rate.newRate(R_70));
StringList m1668stringList_=new StringList(new CollCapacity(2));
m1668stringList_.add(I_ACIER);
m1668stringList_.add(I_TENEBRE);
m1668pokemonData_.setTypes(m1668stringList_);
EnumMap<Statistic,StatBaseEv> m1668enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)125,(short)2));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)70,(short)0));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)0));
m1668enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)0));
m1668pokemonData_.setStatistics(m1668enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1668custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1668custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1668custListLevelMove_.add(new LevelMove((short)1,I_FULMIFER));
m1668custListLevelMove_.add(new LevelMove((short)6,I_GROZ_YEUX));
m1668custListLevelMove_.add(new LevelMove((short)9,I_TAILLADE));
m1668custListLevelMove_.add(new LevelMove((short)14,I_TOURMENTE));
m1668custListLevelMove_.add(new LevelMove((short)17,I_FEINTE));
m1668custListLevelMove_.add(new LevelMove((short)22,I_GRIMACE));
m1668custListLevelMove_.add(new LevelMove((short)25,I_GRIFFE_ACIER));
m1668custListLevelMove_.add(new LevelMove((short)30,I_TRANCHE));
m1668custListLevelMove_.add(new LevelMove((short)33,I_ASSURANCE));
m1668custListLevelMove_.add(new LevelMove((short)38,I_STRIDO_SON));
m1668custListLevelMove_.add(new LevelMove((short)41,I_EMBARGO));
m1668custListLevelMove_.add(new LevelMove((short)46,I_MUR_DE_FER));
m1668custListLevelMove_.add(new LevelMove((short)49,I_TRANCHE_NUIT));
m1668custListLevelMove_.add(new LevelMove((short)57,I_TETE_DE_FER));
m1668custListLevelMove_.add(new LevelMove((short)63,I_DANSE_LAMES));
m1668custListLevelMove_.add(new LevelMove((short)71,I_GUILLOTINE));
m1668pokemonData_.setLevMoves(m1668custListLevelMove_);
m1668pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1668stringList_=new StringList(new CollCapacity(3));
m1668stringList_.add(I_ACHARNE);
m1668stringList_.add(I_ATTENTION);
m1668stringList_.add(I_PRESSION);
m1668pokemonData_.setAbilities(m1668stringList_);
m1668stringList_=new StringList(new CollCapacity(15));
m1668stringList_.add(I_BALAYAGE);
m1668stringList_.add(I_BLABLA_DODO);
m1668stringList_.add(I_DEPIT);
m1668stringList_.add(I_DOUBLE_BAFFE);
m1668stringList_.add(I_IMITATION);
m1668stringList_.add(I_MUR_DE_FER);
m1668stringList_.add(I_PIEGE_DE_ROC);
m1668stringList_.add(I_RONFLEMENT);
m1668stringList_.add(I_SABOTAGE);
m1668stringList_.add(I_SAISIE);
m1668stringList_.add(I_TETE_DE_FER);
m1668stringList_.add(I_TRICHERIE);
m1668stringList_.add(I_VIBROBSCUR);
m1668stringList_.add(I_VOL_MAGNETIK);
m1668stringList_.add(I_COUPE);
m1668pokemonData_.setMoveTutors(m1668stringList_);
Shorts m1668shorts_=new Shorts(new CollCapacity(1));
m1668shorts_.add((short)1);
m1668pokemonData_.setHiddenMoves(m1668shorts_);
m1668shorts_=new Shorts(new CollCapacity(45));
m1668shorts_.add((short)94);
m1668shorts_.add((short)1);
m1668shorts_.add((short)6);
m1668shorts_.add((short)10);
m1668shorts_.add((short)12);
m1668shorts_.add((short)15);
m1668shorts_.add((short)17);
m1668shorts_.add((short)18);
m1668shorts_.add((short)21);
m1668shorts_.add((short)27);
m1668shorts_.add((short)28);
m1668shorts_.add((short)31);
m1668shorts_.add((short)32);
m1668shorts_.add((short)37);
m1668shorts_.add((short)39);
m1668shorts_.add((short)40);
m1668shorts_.add((short)41);
m1668shorts_.add((short)42);
m1668shorts_.add((short)44);
m1668shorts_.add((short)45);
m1668shorts_.add((short)46);
m1668shorts_.add((short)47);
m1668shorts_.add((short)48);
m1668shorts_.add((short)52);
m1668shorts_.add((short)54);
m1668shorts_.add((short)56);
m1668shorts_.add((short)63);
m1668shorts_.add((short)65);
m1668shorts_.add((short)66);
m1668shorts_.add((short)67);
m1668shorts_.add((short)68);
m1668shorts_.add((short)69);
m1668shorts_.add((short)71);
m1668shorts_.add((short)73);
m1668shorts_.add((short)75);
m1668shorts_.add((short)97);
m1668shorts_.add((short)81);
m1668shorts_.add((short)88);
m1668shorts_.add((short)84);
m1668shorts_.add((short)86);
m1668shorts_.add((short)87);
m1668shorts_.add((short)90);
m1668shorts_.add((short)95);
m1668shorts_.add((short)98);
m1668shorts_.add((short)100);
m1668pokemonData_.setTechnicalMoves(m1668shorts_);
m1668pokemonData_.setBaseEvo(I_SCALPION);
m1668pokemonData_.setCatchingRate((short)45);
m1668pokemonData_.setHeight(Rate.newRate(R_8_5));
m1668pokemonData_.setExpEvo(ExpType.M);
m1668pokemonData_.setExpRate(172);
m1668stringList_=new StringList(new CollCapacity(1));
m1668stringList_.add(I_HUMANOIDE);
m1668pokemonData_.setEggGroups(m1668stringList_);
m1668pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1668pokemonData_.setHappiness((short)70);
m1668pokemonData_.setHappinessHatch((short)140);
return m1668pokemonData_;
}
static PokemonData p602(){
PokemonData m1669pokemonData_=Instances.newPokemonData();
m1669pokemonData_.setWeight(Rate.newRate(R_55));
StringList m1669stringList_=new StringList(new CollCapacity(1));
m1669stringList_.add(I_INSECTE);
m1669pokemonData_.setTypes(m1669stringList_);
EnumMap<Statistic,StatBaseEv> m1669enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)125,(short)2));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)70,(short)0));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)0));
m1669enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)0));
m1669pokemonData_.setStatistics(m1669enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1669custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1669custListLevelMove_.add(new LevelMove((short)1,I_PUISSANCE));
m1669custListLevelMove_.add(new LevelMove((short)1,I_FORCE_POIGNE));
m1669custListLevelMove_.add(new LevelMove((short)4,I_ETREINTE));
m1669custListLevelMove_.add(new LevelMove((short)8,I_FRAPPE_ATLAS));
m1669custListLevelMove_.add(new LevelMove((short)11,I_ARMURE));
m1669custListLevelMove_.add(new LevelMove((short)15,I_VENDETTA));
m1669custListLevelMove_.add(new LevelMove((short)18,I_CASSE_BRIQUE));
m1669custListLevelMove_.add(new LevelMove((short)22,I_CORPS_PERDU));
m1669custListLevelMove_.add(new LevelMove((short)26,I_SACRIFICE));
m1669custListLevelMove_.add(new LevelMove((short)29,I_PLAIE_CROIX));
m1669custListLevelMove_.add(new LevelMove((short)33,I_YAMA_ARASHI));
m1669custListLevelMove_.add(new LevelMove((short)36,I_MANIA));
m1669custListLevelMove_.add(new LevelMove((short)40,I_DANSE_LAMES));
m1669custListLevelMove_.add(new LevelMove((short)43,I_SURPUISSANCE));
m1669custListLevelMove_.add(new LevelMove((short)47,I_GUILLOTINE));
m1669pokemonData_.setLevMoves(m1669custListLevelMove_);
m1669pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1669stringList_=new StringList(new CollCapacity(2));
m1669stringList_.add(I_HYPER_CUTTER);
m1669stringList_.add(I_BRISE_MOULE);
m1669pokemonData_.setAbilities(m1669stringList_);
m1669stringList_=new StringList(new CollCapacity(30));
m1669stringList_.add(I_BLABLA_DODO);
m1669stringList_.add(I_CLONAGE);
m1669stringList_.add(I_CLOSE_COMBAT);
m1669stringList_.add(I_COPIE);
m1669stringList_.add(I_COUP_D_BOULE);
m1669stringList_.add(I_DAMOCLES);
m1669stringList_.add(I_DANSE_LAMES);
m1669stringList_.add(I_EBOULEMENT);
m1669stringList_.add(I_FAUX_CHAGE);
m1669stringList_.add(I_FEINTE);
m1669stringList_.add(I_FLEAU);
m1669stringList_.add(I_FRAPPE_ATLAS);
m1669stringList_.add(I_FURIE);
m1669stringList_.add(I_MUR_DE_FER);
m1669stringList_.add(I_PLAQUAGE);
m1669stringList_.add(I_RONFLEMENT);
m1669stringList_.add(I_RUSE);
m1669stringList_.add(I_SABOTAGE);
m1669stringList_.add(I_SECRETION);
m1669stringList_.add(I_SURPUISSANCE);
m1669stringList_.add(I_TAILLADE);
m1669stringList_.add(I_TENACITE);
m1669stringList_.add(I_VANTARDISE);
m1669stringList_.add(I_VIVE_ATTAQUE);
m1669stringList_.add(I_ETREINTE);
m1669stringList_.add(I_MOI_D_ABORD);
m1669stringList_.add(I_PIEGE_DE_ROC);
m1669stringList_.add(I_PIQURE);
m1669stringList_.add(I_COUPE);
m1669stringList_.add(I_FORCE);
m1669pokemonData_.setMoveTutors(m1669stringList_);
Shorts m1669shorts_=new Shorts(new CollCapacity(2));
m1669shorts_.add((short)1);
m1669shorts_.add((short)4);
m1669pokemonData_.setHiddenMoves(m1669shorts_);
m1669shorts_=new Shorts(new CollCapacity(35));
m1669shorts_.add((short)94);
m1669shorts_.add((short)6);
m1669shorts_.add((short)8);
m1669shorts_.add((short)10);
m1669shorts_.add((short)11);
m1669shorts_.add((short)15);
m1669shorts_.add((short)17);
m1669shorts_.add((short)18);
m1669shorts_.add((short)21);
m1669shorts_.add((short)23);
m1669shorts_.add((short)26);
m1669shorts_.add((short)27);
m1669shorts_.add((short)28);
m1669shorts_.add((short)31);
m1669shorts_.add((short)32);
m1669shorts_.add((short)39);
m1669shorts_.add((short)42);
m1669shorts_.add((short)44);
m1669shorts_.add((short)45);
m1669shorts_.add((short)46);
m1669shorts_.add((short)48);
m1669shorts_.add((short)52);
m1669shorts_.add((short)54);
m1669shorts_.add((short)56);
m1669shorts_.add((short)68);
m1669shorts_.add((short)71);
m1669shorts_.add((short)75);
m1669shorts_.add((short)76);
m1669shorts_.add((short)78);
m1669shorts_.add((short)80);
m1669shorts_.add((short)81);
m1669shorts_.add((short)88);
m1669shorts_.add((short)87);
m1669shorts_.add((short)90);
m1669shorts_.add((short)100);
m1669pokemonData_.setTechnicalMoves(m1669shorts_);
m1669pokemonData_.setBaseEvo(I_SCARABRUTE);
m1669pokemonData_.setCatchingRate((short)45);
m1669pokemonData_.setHeight(Rate.newRate(R_3_2));
m1669pokemonData_.setExpEvo(ExpType.L);
m1669pokemonData_.setExpRate(175);
m1669stringList_=new StringList(new CollCapacity(1));
m1669stringList_.add(I_INSECTE);
m1669pokemonData_.setEggGroups(m1669stringList_);
m1669pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1669pokemonData_.setHappiness((short)70);
m1669pokemonData_.setHappinessHatch((short)140);
return m1669pokemonData_;
}
static PokemonData p603(){
PokemonData m1670pokemonData_=Instances.newPokemonData();
m1670pokemonData_.setWeight(Rate.newRate(R_54));
StringList m1670stringList_=new StringList(new CollCapacity(2));
m1670stringList_.add(I_COMBAT);
m1670stringList_.add(I_INSECTE);
m1670pokemonData_.setTypes(m1670stringList_);
EnumMap<Statistic,StatBaseEv> m1670enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)125,(short)2));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)95,(short)0));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)80,(short)0));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)75,(short)0));
m1670enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)0));
m1670pokemonData_.setStatistics(m1670enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1670custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1670custListLevelMove_.add(new LevelMove((short)1,I_COGNE));
m1670custListLevelMove_.add(new LevelMove((short)1,I_BALLE_GRAINE));
m1670custListLevelMove_.add(new LevelMove((short)1,I_TRANCHE_NUIT));
m1670custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1670custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1670custListLevelMove_.add(new LevelMove((short)1,I_KOUD_KORNE));
m1670custListLevelMove_.add(new LevelMove((short)1,I_TENACITE));
m1670custListLevelMove_.add(new LevelMove((short)7,I_FURIE));
m1670custListLevelMove_.add(new LevelMove((short)10,I_AEROPIQUE));
m1670custListLevelMove_.add(new LevelMove((short)16,I_ATTRITION));
m1670custListLevelMove_.add(new LevelMove((short)19,I_RIPOSTE));
m1670custListLevelMove_.add(new LevelMove((short)25,I_CASSE_BRIQUE));
m1670custListLevelMove_.add(new LevelMove((short)28,I_BELIER));
m1670custListLevelMove_.add(new LevelMove((short)31,I_DARD_NUEE));
m1670custListLevelMove_.add(new LevelMove((short)34,I_CLOSE_COMBAT));
m1670custListLevelMove_.add(new LevelMove((short)37,I_RUSE));
m1670custListLevelMove_.add(new LevelMove((short)43,I_CONTRE));
m1670custListLevelMove_.add(new LevelMove((short)46,I_MEGACORNE));
m1670pokemonData_.setLevMoves(m1670custListLevelMove_);
m1670pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1670stringList_=new StringList(new CollCapacity(2));
m1670stringList_.add(I_ESSAIM);
m1670stringList_.add(I_CRAN);
m1670pokemonData_.setAbilities(m1670stringList_);
m1670stringList_=new StringList(new CollCapacity(31));
m1670stringList_.add(I_ARMURE);
m1670stringList_.add(I_BALAYAGE);
m1670stringList_.add(I_BLABLA_DODO);
m1670stringList_.add(I_CLONAGE);
m1670stringList_.add(I_COPIE);
m1670stringList_.add(I_COUP_D_BOULE);
m1670stringList_.add(I_DAMOCLES);
m1670stringList_.add(I_DANSE_LAMES);
m1670stringList_.add(I_EBOULEMENT);
m1670stringList_.add(I_FAUX_CHAGE);
m1670stringList_.add(I_FLEAU);
m1670stringList_.add(I_FRAPPE_ATLAS);
m1670stringList_.add(I_MUR_DE_FER);
m1670stringList_.add(I_ONDE_VIDE);
m1670stringList_.add(I_PATIENCE);
m1670stringList_.add(I_PIQURE);
m1670stringList_.add(I_PLAQUAGE);
m1670stringList_.add(I_POURSUITE);
m1670stringList_.add(I_RIPOSTE);
m1670stringList_.add(I_RONFLEMENT);
m1670stringList_.add(I_SABOTAGE);
m1670stringList_.add(I_TAILLADE);
m1670stringList_.add(I_TENACITE);
m1670stringList_.add(I_VANTARDISE);
m1670stringList_.add(I_VENDETTA);
m1670stringList_.add(I_BOULE_ROC);
m1670stringList_.add(I_COUP_D_MAIN);
m1670stringList_.add(I_MEGACORNE);
m1670stringList_.add(I_MITRA_POING);
m1670stringList_.add(I_COUPE);
m1670stringList_.add(I_FORCE);
m1670pokemonData_.setMoveTutors(m1670stringList_);
Shorts m1670shorts_=new Shorts(new CollCapacity(2));
m1670shorts_.add((short)1);
m1670shorts_.add((short)4);
m1670pokemonData_.setHiddenMoves(m1670shorts_);
m1670shorts_=new Shorts(new CollCapacity(38));
m1670shorts_.add((short)94);
m1670shorts_.add((short)6);
m1670shorts_.add((short)8);
m1670shorts_.add((short)9);
m1670shorts_.add((short)10);
m1670shorts_.add((short)11);
m1670shorts_.add((short)15);
m1670shorts_.add((short)17);
m1670shorts_.add((short)18);
m1670shorts_.add((short)21);
m1670shorts_.add((short)23);
m1670shorts_.add((short)26);
m1670shorts_.add((short)27);
m1670shorts_.add((short)28);
m1670shorts_.add((short)31);
m1670shorts_.add((short)32);
m1670shorts_.add((short)39);
m1670shorts_.add((short)40);
m1670shorts_.add((short)42);
m1670shorts_.add((short)44);
m1670shorts_.add((short)45);
m1670shorts_.add((short)46);
m1670shorts_.add((short)48);
m1670shorts_.add((short)52);
m1670shorts_.add((short)54);
m1670shorts_.add((short)56);
m1670shorts_.add((short)65);
m1670shorts_.add((short)67);
m1670shorts_.add((short)68);
m1670shorts_.add((short)71);
m1670shorts_.add((short)75);
m1670shorts_.add((short)76);
m1670shorts_.add((short)78);
m1670shorts_.add((short)80);
m1670shorts_.add((short)88);
m1670shorts_.add((short)87);
m1670shorts_.add((short)90);
m1670shorts_.add((short)100);
m1670pokemonData_.setTechnicalMoves(m1670shorts_);
m1670pokemonData_.setBaseEvo(I_SCARHINO);
m1670pokemonData_.setCatchingRate((short)45);
m1670pokemonData_.setHeight(Rate.newRate(R_3_2));
m1670pokemonData_.setExpEvo(ExpType.L);
m1670pokemonData_.setExpRate(175);
m1670stringList_=new StringList(new CollCapacity(1));
m1670stringList_.add(I_INSECTE);
m1670pokemonData_.setEggGroups(m1670stringList_);
m1670pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1670pokemonData_.setHappiness((short)70);
m1670pokemonData_.setHappinessHatch((short)140);
return m1670pokemonData_;
}
static PokemonData p604(){
PokemonData m1671pokemonData_=Instances.newPokemonData();
m1671pokemonData_.setWeight(Rate.newRate(R_117_2));
StringList m1671stringList_=new StringList(new CollCapacity(2));
m1671stringList_.add(I_INSECTE);
m1671stringList_.add(I_POISON);
m1671pokemonData_.setTypes(m1671stringList_);
EnumMap<Statistic,StatBaseEv> m1671enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)79,(short)0));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)40,(short)0));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)99,(short)2));
m1671enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)47,(short)0));
m1671pokemonData_.setStatistics(m1671enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1671custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1671custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1671custListLevelMove_.add(new LevelMove((short)1,I_ROULADE));
m1671custListLevelMove_.add(new LevelMove((short)5,I_DARD_VENIN));
m1671custListLevelMove_.add(new LevelMove((short)8,I_GRINCEMENT));
m1671custListLevelMove_.add(new LevelMove((short)12,I_POURSUITE));
m1671custListLevelMove_.add(new LevelMove((short)15,I_ABRI));
m1671custListLevelMove_.add(new LevelMove((short)19,I_QUEUE_POISON));
m1671custListLevelMove_.add(new LevelMove((short)22,I_MUR_DE_FER));
m1671custListLevelMove_.add(new LevelMove((short)23,I_PIQURE));
m1671custListLevelMove_.add(new LevelMove((short)28,I_CHOC_VENIN));
m1671custListLevelMove_.add(new LevelMove((short)32,I_HATE));
m1671custListLevelMove_.add(new LevelMove((short)37,I_BULLDOBOULE));
m1671custListLevelMove_.add(new LevelMove((short)41,I_TOXIK));
m1671custListLevelMove_.add(new LevelMove((short)43,I_PIEGE_VENIN));
m1671custListLevelMove_.add(new LevelMove((short)46,I_ESCALADE));
m1671custListLevelMove_.add(new LevelMove((short)50,I_DAMOCLES));
m1671pokemonData_.setLevMoves(m1671custListLevelMove_);
m1671pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1671stringList_=new StringList(new CollCapacity(3));
m1671stringList_.add(I_POINT_POISON);
m1671stringList_.add(I_ESSAIM);
m1671stringList_.add(I_PIED_VELOCE);
m1671pokemonData_.setAbilities(m1671stringList_);
m1671stringList_=new StringList(new CollCapacity(5));
m1671stringList_.add(I_BLABLA_DODO);
m1671stringList_.add(I_EFFORT);
m1671stringList_.add(I_MUR_DE_FER);
m1671stringList_.add(I_PIQURE);
m1671stringList_.add(I_RONFLEMENT);
m1671pokemonData_.setMoveTutors(m1671stringList_);
Shorts m1671shorts_=new Shorts(new CollCapacity(24));
m1671shorts_.add((short)94);
m1671shorts_.add((short)6);
m1671shorts_.add((short)9);
m1671shorts_.add((short)10);
m1671shorts_.add((short)11);
m1671shorts_.add((short)17);
m1671shorts_.add((short)21);
m1671shorts_.add((short)22);
m1671shorts_.add((short)27);
m1671shorts_.add((short)32);
m1671shorts_.add((short)36);
m1671shorts_.add((short)42);
m1671shorts_.add((short)44);
m1671shorts_.add((short)45);
m1671shorts_.add((short)48);
m1671shorts_.add((short)66);
m1671shorts_.add((short)74);
m1671shorts_.add((short)76);
m1671shorts_.add((short)88);
m1671shorts_.add((short)83);
m1671shorts_.add((short)84);
m1671shorts_.add((short)87);
m1671shorts_.add((short)90);
m1671shorts_.add((short)100);
m1671pokemonData_.setTechnicalMoves(m1671shorts_);
m1671pokemonData_.setBaseEvo(I_VENIPATTE);
StringMap<Evolution> m1671stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1671evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1671evolutionLevelSimple_.setLevel((short)30);
m1671stringMapEvolution_.addEntry(I_BRUTAPODE,m1671evolutionLevelSimple_);
m1671pokemonData_.setEvolutions(m1671stringMapEvolution_);
m1671pokemonData_.setCatchingRate((short)120);
m1671pokemonData_.setHeight(Rate.newRate(R_6_5));
m1671pokemonData_.setExpEvo(ExpType.P);
m1671pokemonData_.setExpRate(126);
m1671stringList_=new StringList(new CollCapacity(1));
m1671stringList_.add(I_INSECTE);
m1671pokemonData_.setEggGroups(m1671stringList_);
m1671pokemonData_.setHatchingSteps(LgInt.newLgInt(R_4080));
m1671pokemonData_.setHappiness((short)70);
m1671pokemonData_.setHappinessHatch((short)140);
return m1671pokemonData_;
}
static PokemonData p605(){
PokemonData m1672pokemonData_=Instances.newPokemonData();
m1672pokemonData_.setWeight(Rate.newRate(R_324_5));
StringList m1672stringList_=new StringList(new CollCapacity(2));
m1672stringList_.add(I_SOL);
m1672stringList_.add(I_VOL);
m1672pokemonData_.setTypes(m1672stringList_);
EnumMap<Statistic,StatBaseEv> m1672enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)75,(short)0));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)35,(short)0));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)105,(short)1));
m1672enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)0));
m1672pokemonData_.setStatistics(m1672enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1672custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1672custListLevelMove_.add(new LevelMove((short)1,I_DARD_VENIN));
m1672custListLevelMove_.add(new LevelMove((short)4,I_JET_DE_SABLE));
m1672custListLevelMove_.add(new LevelMove((short)7,I_ARMURE));
m1672custListLevelMove_.add(new LevelMove((short)10,I_SABOTAGE));
m1672custListLevelMove_.add(new LevelMove((short)13,I_VIVE_ATTAQUE));
m1672custListLevelMove_.add(new LevelMove((short)16,I_TAILLADE));
m1672custListLevelMove_.add(new LevelMove((short)19,I_FEINTE));
m1672custListLevelMove_.add(new LevelMove((short)22,I_ACROBATIE));
m1672custListLevelMove_.add(new LevelMove((short)27,I_TRANCHE));
m1672custListLevelMove_.add(new LevelMove((short)30,I_DEMI_TOUR));
m1672custListLevelMove_.add(new LevelMove((short)35,I_GRINCEMENT));
m1672custListLevelMove_.add(new LevelMove((short)40,I_PLAIE_CROIX));
m1672custListLevelMove_.add(new LevelMove((short)45,I_STRATOPERCUT));
m1672custListLevelMove_.add(new LevelMove((short)50,I_DANSE_LAMES));
m1672custListLevelMove_.add(new LevelMove((short)55,I_GUILLOTINE));
m1672pokemonData_.setLevMoves(m1672custListLevelMove_);
m1672pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1672stringList_=new StringList(new CollCapacity(2));
m1672stringList_.add(I_VOILE_SABLE);
m1672stringList_.add(I_HYPER_CUTTER);
m1672pokemonData_.setAbilities(m1672stringList_);
m1672stringList_=new StringList(new CollCapacity(37));
m1672stringList_.add(I_ASTUCE_FORCE);
m1672stringList_.add(I_BLABLA_DODO);
m1672stringList_.add(I_CLONAGE);
m1672stringList_.add(I_COPIE);
m1672stringList_.add(I_COUP_D_BOULE);
m1672stringList_.add(I_COUPE_VENT);
m1672stringList_.add(I_CRU_AILE);
m1672stringList_.add(I_DAMOCLES);
m1672stringList_.add(I_DANSE_LAMES);
m1672stringList_.add(I_DEVOREVE);
m1672stringList_.add(I_EBOULEMENT);
m1672stringList_.add(I_GRIFFE_ACIER);
m1672stringList_.add(I_HATE);
m1672stringList_.add(I_HYDROQUEUE);
m1672stringList_.add(I_METEORES);
m1672stringList_.add(I_POISON_CROIX);
m1672stringList_.add(I_RELAIS);
m1672stringList_.add(I_RIPOSTE);
m1672stringList_.add(I_RONFLEMENT);
m1672stringList_.add(I_RUSE);
m1672stringList_.add(I_TAILLADE);
m1672stringList_.add(I_TELLURIFORCE);
m1672stringList_.add(I_TENACITE);
m1672stringList_.add(I_TOURBI_SABLE);
m1672stringList_.add(I_TRANCHE_NUIT);
m1672stringList_.add(I_VANTARDISE);
m1672stringList_.add(I_ATTERRISSAGE);
m1672stringList_.add(I_ESCALADE);
m1672stringList_.add(I_PIEGE_DE_ROC);
m1672stringList_.add(I_PIQURE);
m1672stringList_.add(I_QUEUE_DE_FER);
m1672stringList_.add(I_QUEUE_POISON);
m1672stringList_.add(I_SABOTAGE);
m1672stringList_.add(I_VENT_ARRIERE);
m1672stringList_.add(I_VIBROBSCUR);
m1672stringList_.add(I_COUPE);
m1672stringList_.add(I_FORCE);
m1672pokemonData_.setMoveTutors(m1672stringList_);
Shorts m1672shorts_=new Shorts(new CollCapacity(2));
m1672shorts_.add((short)1);
m1672shorts_.add((short)4);
m1672pokemonData_.setHiddenMoves(m1672shorts_);
m1672shorts_=new Shorts(new CollCapacity(45));
m1672shorts_.add((short)94);
m1672shorts_.add((short)1);
m1672shorts_.add((short)6);
m1672shorts_.add((short)9);
m1672shorts_.add((short)10);
m1672shorts_.add((short)11);
m1672shorts_.add((short)12);
m1672shorts_.add((short)17);
m1672shorts_.add((short)18);
m1672shorts_.add((short)19);
m1672shorts_.add((short)21);
m1672shorts_.add((short)26);
m1672shorts_.add((short)27);
m1672shorts_.add((short)28);
m1672shorts_.add((short)31);
m1672shorts_.add((short)32);
m1672shorts_.add((short)36);
m1672shorts_.add((short)37);
m1672shorts_.add((short)39);
m1672shorts_.add((short)40);
m1672shorts_.add((short)41);
m1672shorts_.add((short)42);
m1672shorts_.add((short)44);
m1672shorts_.add((short)45);
m1672shorts_.add((short)46);
m1672shorts_.add((short)51);
m1672shorts_.add((short)48);
m1672shorts_.add((short)54);
m1672shorts_.add((short)56);
m1672shorts_.add((short)62);
m1672shorts_.add((short)66);
m1672shorts_.add((short)69);
m1672shorts_.add((short)71);
m1672shorts_.add((short)75);
m1672shorts_.add((short)76);
m1672shorts_.add((short)78);
m1672shorts_.add((short)97);
m1672shorts_.add((short)80);
m1672shorts_.add((short)81);
m1672shorts_.add((short)88);
m1672shorts_.add((short)84);
m1672shorts_.add((short)87);
m1672shorts_.add((short)89);
m1672shorts_.add((short)90);
m1672shorts_.add((short)100);
m1672pokemonData_.setTechnicalMoves(m1672shorts_);
m1672pokemonData_.setBaseEvo(I_SCORPLANE);
StringMap<Evolution> m1672stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionItem m1672evolutionItem_=Instances.newEvolutionItem();
m1672evolutionItem_.setItem(I_CROC_RASOIR);
m1672stringMapEvolution_.addEntry(I_SCORVOL,m1672evolutionItem_);
m1672pokemonData_.setEvolutions(m1672stringMapEvolution_);
m1672pokemonData_.setCatchingRate((short)60);
m1672pokemonData_.setHeight(Rate.newRate(R_11_10));
m1672pokemonData_.setExpEvo(ExpType.P);
m1672pokemonData_.setExpRate(86);
m1672stringList_=new StringList(new CollCapacity(1));
m1672stringList_.add(I_INSECTE);
m1672pokemonData_.setEggGroups(m1672stringList_);
m1672pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1672pokemonData_.setHappiness((short)70);
m1672pokemonData_.setHappinessHatch((short)140);
return m1672pokemonData_;
}
static PokemonData p606(){
PokemonData m1673pokemonData_=Instances.newPokemonData();
m1673pokemonData_.setWeight(Rate.newRate(R_85_2));
StringList m1673stringList_=new StringList(new CollCapacity(2));
m1673stringList_.add(I_SOL);
m1673stringList_.add(I_VOL);
m1673pokemonData_.setTypes(m1673stringList_);
EnumMap<Statistic,StatBaseEv> m1673enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)95,(short)0));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)45,(short)0));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)75,(short)0));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)75,(short)0));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)125,(short)2));
m1673enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)95,(short)0));
m1673pokemonData_.setStatistics(m1673enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1673custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1673custListLevelMove_.add(new LevelMove((short)1,I_CROCS_ECLAIR));
m1673custListLevelMove_.add(new LevelMove((short)1,I_CROCS_GIVRE));
m1673custListLevelMove_.add(new LevelMove((short)1,I_CROCS_FEU));
m1673custListLevelMove_.add(new LevelMove((short)1,I_DIRECT_TOXIK));
m1673custListLevelMove_.add(new LevelMove((short)4,I_JET_DE_SABLE));
m1673custListLevelMove_.add(new LevelMove((short)7,I_ARMURE));
m1673custListLevelMove_.add(new LevelMove((short)10,I_SABOTAGE));
m1673custListLevelMove_.add(new LevelMove((short)13,I_VIVE_ATTAQUE));
m1673custListLevelMove_.add(new LevelMove((short)16,I_TAILLADE));
m1673custListLevelMove_.add(new LevelMove((short)19,I_FEINTE));
m1673custListLevelMove_.add(new LevelMove((short)22,I_ACROBATIE));
m1673custListLevelMove_.add(new LevelMove((short)27,I_TRANCHE_NUIT));
m1673custListLevelMove_.add(new LevelMove((short)30,I_DEMI_TOUR));
m1673custListLevelMove_.add(new LevelMove((short)35,I_GRINCEMENT));
m1673custListLevelMove_.add(new LevelMove((short)40,I_PLAIE_CROIX));
m1673custListLevelMove_.add(new LevelMove((short)45,I_STRATOPERCUT));
m1673custListLevelMove_.add(new LevelMove((short)50,I_DANSE_LAMES));
m1673custListLevelMove_.add(new LevelMove((short)55,I_GUILLOTINE));
m1673pokemonData_.setLevMoves(m1673custListLevelMove_);
m1673pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1673stringList_=new StringList(new CollCapacity(2));
m1673stringList_.add(I_VOILE_SABLE);
m1673stringList_.add(I_HYPER_CUTTER);
m1673pokemonData_.setAbilities(m1673stringList_);
m1673stringList_=new StringList(new CollCapacity(30));
m1673stringList_.add(I_ASTUCE_FORCE);
m1673stringList_.add(I_COUD_BOUE);
m1673stringList_.add(I_COUP_D_BOULE);
m1673stringList_.add(I_COUPE_VENT);
m1673stringList_.add(I_CRU_AILE);
m1673stringList_.add(I_DAMOCLES);
m1673stringList_.add(I_GRIFFE_ACIER);
m1673stringList_.add(I_HATE);
m1673stringList_.add(I_HYDROQUEUE);
m1673stringList_.add(I_METEORES);
m1673stringList_.add(I_PIQUE);
m1673stringList_.add(I_POISON_CROIX);
m1673stringList_.add(I_RELAIS);
m1673stringList_.add(I_RIPOSTE);
m1673stringList_.add(I_RONFLEMENT);
m1673stringList_.add(I_RUSE);
m1673stringList_.add(I_SABOTAGE);
m1673stringList_.add(I_TAILLADE);
m1673stringList_.add(I_TELLURIFORCE);
m1673stringList_.add(I_TOURBI_SABLE);
m1673stringList_.add(I_TRANCHE_NUIT);
m1673stringList_.add(I_VENT_ARRIERE);
m1673stringList_.add(I_ATTERRISSAGE);
m1673stringList_.add(I_BLABLA_DODO);
m1673stringList_.add(I_PIEGE_DE_ROC);
m1673stringList_.add(I_PIQURE);
m1673stringList_.add(I_QUEUE_DE_FER);
m1673stringList_.add(I_VIBROBSCUR);
m1673stringList_.add(I_COUPE);
m1673stringList_.add(I_FORCE);
m1673pokemonData_.setMoveTutors(m1673stringList_);
Shorts m1673shorts_=new Shorts(new CollCapacity(2));
m1673shorts_.add((short)1);
m1673shorts_.add((short)4);
m1673pokemonData_.setHiddenMoves(m1673shorts_);
m1673shorts_=new Shorts(new CollCapacity(47));
m1673shorts_.add((short)94);
m1673shorts_.add((short)1);
m1673shorts_.add((short)6);
m1673shorts_.add((short)9);
m1673shorts_.add((short)10);
m1673shorts_.add((short)11);
m1673shorts_.add((short)12);
m1673shorts_.add((short)15);
m1673shorts_.add((short)17);
m1673shorts_.add((short)18);
m1673shorts_.add((short)19);
m1673shorts_.add((short)21);
m1673shorts_.add((short)26);
m1673shorts_.add((short)27);
m1673shorts_.add((short)28);
m1673shorts_.add((short)31);
m1673shorts_.add((short)32);
m1673shorts_.add((short)36);
m1673shorts_.add((short)37);
m1673shorts_.add((short)39);
m1673shorts_.add((short)40);
m1673shorts_.add((short)41);
m1673shorts_.add((short)42);
m1673shorts_.add((short)44);
m1673shorts_.add((short)45);
m1673shorts_.add((short)46);
m1673shorts_.add((short)51);
m1673shorts_.add((short)48);
m1673shorts_.add((short)54);
m1673shorts_.add((short)56);
m1673shorts_.add((short)62);
m1673shorts_.add((short)66);
m1673shorts_.add((short)68);
m1673shorts_.add((short)69);
m1673shorts_.add((short)71);
m1673shorts_.add((short)75);
m1673shorts_.add((short)76);
m1673shorts_.add((short)78);
m1673shorts_.add((short)97);
m1673shorts_.add((short)80);
m1673shorts_.add((short)81);
m1673shorts_.add((short)88);
m1673shorts_.add((short)84);
m1673shorts_.add((short)87);
m1673shorts_.add((short)89);
m1673shorts_.add((short)90);
m1673shorts_.add((short)100);
m1673pokemonData_.setTechnicalMoves(m1673shorts_);
m1673pokemonData_.setBaseEvo(I_SCORPLANE);
m1673pokemonData_.setCatchingRate((short)30);
m1673pokemonData_.setHeight(Rate.newRate(R_2));
m1673pokemonData_.setExpEvo(ExpType.P);
m1673pokemonData_.setExpRate(179);
m1673stringList_=new StringList(new CollCapacity(1));
m1673stringList_.add(I_INSECTE);
m1673pokemonData_.setEggGroups(m1673stringList_);
m1673pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1673pokemonData_.setHappiness((short)70);
m1673pokemonData_.setHappinessHatch((short)140);
return m1673pokemonData_;
}
static PokemonData p607(){
PokemonData m1674pokemonData_=Instances.newPokemonData();
m1674pokemonData_.setWeight(Rate.newRate(R_29_5));
StringList m1674stringList_=new StringList(new CollCapacity(1));
m1674stringList_.add(I_PSY);
m1674pokemonData_.setTypes(m1674stringList_);
EnumMap<Statistic,StatBaseEv> m1674enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)30,(short)0));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)1));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)50,(short)0));
m1674enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)45,(short)0));
m1674pokemonData_.setStatistics(m1674enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1674custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1674custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1674custListLevelMove_.add(new LevelMove((short)3,I_CHOC_MENTAL));
m1674custListLevelMove_.add(new LevelMove((short)7,I_CHATOUILLE));
m1674custListLevelMove_.add(new LevelMove((short)8,I_CAMARADERIE));
m1674custListLevelMove_.add(new LevelMove((short)10,I_CROCO_LARME));
m1674custListLevelMove_.add(new LevelMove((short)14,I_TORGNOLES));
m1674custListLevelMove_.add(new LevelMove((short)16,I_RAFALE_PSY));
m1674custListLevelMove_.add(new LevelMove((short)19,I_EMBARGO));
m1674custListLevelMove_.add(new LevelMove((short)24,I_FEINTE));
m1674custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1674custListLevelMove_.add(new LevelMove((short)28,I_FLATTERIE));
m1674custListLevelMove_.add(new LevelMove((short)31,I_PRESCIENCE));
m1674custListLevelMove_.add(new LevelMove((short)33,I_ANTI_SOIN));
m1674custListLevelMove_.add(new LevelMove((short)37,I_PSYKO));
m1674custListLevelMove_.add(new LevelMove((short)40,I_LEVIKINESIE));
m1674custListLevelMove_.add(new LevelMove((short)46,I_CHARME));
m1674custListLevelMove_.add(new LevelMove((short)48,I_ZONE_MAGIQUE));
m1674pokemonData_.setLevMoves(m1674custListLevelMove_);
m1674pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1674stringList_=new StringList(new CollCapacity(1));
m1674stringList_.add(I_MARQUE_OMBRE);
m1674pokemonData_.setAbilities(m1674stringList_);
m1674stringList_=new StringList(new CollCapacity(23));
m1674stringList_.add(I_BROUHAHA);
m1674stringList_.add(I_OEIL_MIRACLE);
m1674stringList_.add(I_REGARD_NOIR);
m1674stringList_.add(I_SEDUCTION);
m1674stringList_.add(I_VIBROBSCUR);
m1674stringList_.add(I_VOILE_MIROIR);
m1674stringList_.add(I_BLABLA_DODO);
m1674stringList_.add(I_COUP_D_MAIN);
m1674stringList_.add(I_ECHANGE);
m1674stringList_.add(I_GLAS_DE_SOIN);
m1674stringList_.add(I_GRAVITE);
m1674stringList_.add(I_IMITATION);
m1674stringList_.add(I_IMPLORE);
m1674stringList_.add(I_PSYKOUD_BOUL);
m1674stringList_.add(I_RAYON_SIGNAL);
m1674stringList_.add(I_RECYCLAGE);
m1674stringList_.add(I_REFLET_MAGIK);
m1674stringList_.add(I_RONFLEMENT);
m1674stringList_.add(I_SAISIE);
m1674stringList_.add(I_TOURMAGIK);
m1674stringList_.add(I_TRICHERIE);
m1674stringList_.add(I_VIBRA_SOIN);
m1674stringList_.add(I_ZONE_MAGIQUE);
m1674pokemonData_.setMoveTutors(m1674stringList_);
Shorts m1674shorts_=new Shorts(new CollCapacity(39));
m1674shorts_.add((short)70);
m1674shorts_.add((short)3);
m1674shorts_.add((short)4);
m1674shorts_.add((short)6);
m1674shorts_.add((short)10);
m1674shorts_.add((short)12);
m1674shorts_.add((short)16);
m1674shorts_.add((short)17);
m1674shorts_.add((short)18);
m1674shorts_.add((short)20);
m1674shorts_.add((short)21);
m1674shorts_.add((short)24);
m1674shorts_.add((short)27);
m1674shorts_.add((short)29);
m1674shorts_.add((short)30);
m1674shorts_.add((short)32);
m1674shorts_.add((short)33);
m1674shorts_.add((short)39);
m1674shorts_.add((short)41);
m1674shorts_.add((short)42);
m1674shorts_.add((short)44);
m1674shorts_.add((short)45);
m1674shorts_.add((short)46);
m1674shorts_.add((short)48);
m1674shorts_.add((short)53);
m1674shorts_.add((short)56);
m1674shorts_.add((short)57);
m1674shorts_.add((short)63);
m1674shorts_.add((short)66);
m1674shorts_.add((short)73);
m1674shorts_.add((short)77);
m1674shorts_.add((short)80);
m1674shorts_.add((short)88);
m1674shorts_.add((short)85);
m1674shorts_.add((short)86);
m1674shorts_.add((short)87);
m1674shorts_.add((short)90);
m1674shorts_.add((short)92);
m1674shorts_.add((short)100);
m1674pokemonData_.setTechnicalMoves(m1674shorts_);
m1674pokemonData_.setBaseEvo(I_SCRUTELLA);
StringMap<Evolution> m1674stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1674evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1674evolutionLevelSimple_.setLevel((short)32);
m1674stringMapEvolution_.addEntry(I_MESMERELLA,m1674evolutionLevelSimple_);
m1674pokemonData_.setEvolutions(m1674stringMapEvolution_);
m1674pokemonData_.setCatchingRate((short)200);
m1674pokemonData_.setHeight(Rate.newRate(R_2_5));
m1674pokemonData_.setExpEvo(ExpType.P);
m1674pokemonData_.setExpRate(58);
m1674stringList_=new StringList(new CollCapacity(1));
m1674stringList_.add(I_HUMANOIDE);
m1674pokemonData_.setEggGroups(m1674stringList_);
m1674pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1674pokemonData_.setHappiness((short)70);
m1674pokemonData_.setHappinessHatch((short)140);
return m1674pokemonData_;
}
static PokemonData p608(){
PokemonData m1675pokemonData_=Instances.newPokemonData();
m1675pokemonData_.setWeight(Rate.newRate(R_168));
StringList m1675stringList_=new StringList(new CollCapacity(2));
m1675stringList_.add(I_PSY);
m1675stringList_.add(I_ROCHE);
m1675pokemonData_.setTypes(m1675stringList_);
EnumMap<Statistic,StatBaseEv> m1675enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)2));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)85,(short)0));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)65,(short)0));
m1675enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)0));
m1675pokemonData_.setStatistics(m1675enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1675custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1675custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1675custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1675custListLevelMove_.add(new LevelMove((short)1,I_CHOC_MENTAL));
m1675custListLevelMove_.add(new LevelMove((short)5,I_JET_PIERRES));
m1675custListLevelMove_.add(new LevelMove((short)9,I_HYPNOSE));
m1675custListLevelMove_.add(new LevelMove((short)13,I_POLIROCHE));
m1675custListLevelMove_.add(new LevelMove((short)17,I_VAGUE_PSY));
m1675custListLevelMove_.add(new LevelMove((short)21,I_EMBARGO));
m1675custListLevelMove_.add(new LevelMove((short)25,I_EBOULEMENT));
m1675custListLevelMove_.add(new LevelMove((short)29,I_FORCE_COSMIK));
m1675custListLevelMove_.add(new LevelMove((short)33,I_PSYKO));
m1675custListLevelMove_.add(new LevelMove((short)37,I_ANTI_SOIN));
m1675custListLevelMove_.add(new LevelMove((short)41,I_LAME_DE_ROC));
m1675custListLevelMove_.add(new LevelMove((short)45,I_PRESCIENCE));
m1675custListLevelMove_.add(new LevelMove((short)49,I_EXPLOSION));
m1675custListLevelMove_.add(new LevelMove((short)50,I_POUVOIR_LUNAIRE));
m1675custListLevelMove_.add(new LevelMove((short)53,I_ZONE_MAGIQUE));
m1675pokemonData_.setLevMoves(m1675custListLevelMove_);
m1675pokemonData_.setGenderRep(GenderRepartition.NO_GENDER);
m1675stringList_=new StringList(new CollCapacity(1));
m1675stringList_.add(I_LEVITATION);
m1675pokemonData_.setAbilities(m1675stringList_);
m1675stringList_=new StringList(new CollCapacity(29));
m1675stringList_.add(I_BALANCE);
m1675stringList_.add(I_BLABLA_DODO);
m1675stringList_.add(I_BOOST);
m1675stringList_.add(I_BOUL_ARMURE);
m1675stringList_.add(I_CLONAGE);
m1675stringList_.add(I_COPIE);
m1675stringList_.add(I_DAMOCLES);
m1675stringList_.add(I_DEVOREVE);
m1675stringList_.add(I_EBOULEMENT);
m1675stringList_.add(I_EXPLOSION);
m1675stringList_.add(I_GRAVITE);
m1675stringList_.add(I_METEORES);
m1675stringList_.add(I_PLAQUAGE);
m1675stringList_.add(I_POUV_ANTIQUE);
m1675stringList_.add(I_PSYKOUD_BOUL);
m1675stringList_.add(I_RAYON_SIGNAL);
m1675stringList_.add(I_REFLET_MAGIK);
m1675stringList_.add(I_RONFLEMENT);
m1675stringList_.add(I_ROULADE);
m1675stringList_.add(I_TELLURIFORCE);
m1675stringList_.add(I_TENACITE);
m1675stringList_.add(I_TETE_DE_FER);
m1675stringList_.add(I_VANTARDISE);
m1675stringList_.add(I_COUP_D_MAIN);
m1675stringList_.add(I_ECHANGE);
m1675stringList_.add(I_PIEGE_DE_ROC);
m1675stringList_.add(I_RECYCLAGE);
m1675stringList_.add(I_VENT_GLACE);
m1675stringList_.add(I_ZONE_MAGIQUE);
m1675pokemonData_.setMoveTutors(m1675stringList_);
Shorts m1675shorts_=new Shorts(new CollCapacity(43));
m1675shorts_.add((short)70);
m1675shorts_.add((short)3);
m1675shorts_.add((short)4);
m1675shorts_.add((short)6);
m1675shorts_.add((short)10);
m1675shorts_.add((short)13);
m1675shorts_.add((short)14);
m1675shorts_.add((short)15);
m1675shorts_.add((short)16);
m1675shorts_.add((short)17);
m1675shorts_.add((short)18);
m1675shorts_.add((short)20);
m1675shorts_.add((short)21);
m1675shorts_.add((short)23);
m1675shorts_.add((short)26);
m1675shorts_.add((short)27);
m1675shorts_.add((short)29);
m1675shorts_.add((short)30);
m1675shorts_.add((short)32);
m1675shorts_.add((short)33);
m1675shorts_.add((short)37);
m1675shorts_.add((short)39);
m1675shorts_.add((short)42);
m1675shorts_.add((short)44);
m1675shorts_.add((short)48);
m1675shorts_.add((short)57);
m1675shorts_.add((short)62);
m1675shorts_.add((short)63);
m1675shorts_.add((short)64);
m1675shorts_.add((short)68);
m1675shorts_.add((short)69);
m1675shorts_.add((short)71);
m1675shorts_.add((short)74);
m1675shorts_.add((short)77);
m1675shorts_.add((short)78);
m1675shorts_.add((short)80);
m1675shorts_.add((short)88);
m1675shorts_.add((short)85);
m1675shorts_.add((short)86);
m1675shorts_.add((short)87);
m1675shorts_.add((short)90);
m1675shorts_.add((short)92);
m1675shorts_.add((short)100);
m1675pokemonData_.setTechnicalMoves(m1675shorts_);
m1675pokemonData_.setBaseEvo(I_SELEROC);
m1675pokemonData_.setCatchingRate((short)45);
m1675pokemonData_.setHeight(Rate.newRate(R_1));
m1675pokemonData_.setExpEvo(ExpType.R);
m1675pokemonData_.setExpRate(154);
m1675stringList_=new StringList(new CollCapacity(1));
m1675stringList_.add(I_MINERAL);
m1675pokemonData_.setEggGroups(m1675stringList_);
m1675pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1675pokemonData_.setHappiness((short)70);
m1675pokemonData_.setHappinessHatch((short)140);
return m1675pokemonData_;
}
static PokemonData p609(){
PokemonData m1676pokemonData_=Instances.newPokemonData();
m1676pokemonData_.setWeight(Rate.newRate(R_7_2));
StringList m1676stringList_=new StringList(new CollCapacity(2));
m1676stringList_.add(I_PSY);
m1676stringList_.add(I_TENEBRE);
m1676pokemonData_.setTypes(m1676stringList_);
EnumMap<Statistic,StatBaseEv> m1676enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)54,(short)1));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)37,(short)0));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)46,(short)0));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)53,(short)0));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)53,(short)0));
m1676enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)45,(short)0));
m1676pokemonData_.setStatistics(m1676enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1676custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(21));
m1676custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1676custListLevelMove_.add(new LevelMove((short)1,I_PICPIC));
m1676custListLevelMove_.add(new LevelMove((short)1,I_CONSTRICTION));
m1676custListLevelMove_.add(new LevelMove((short)4,I_PROTECTION));
m1676custListLevelMove_.add(new LevelMove((short)4,I_PROTECTION));
m1676custListLevelMove_.add(new LevelMove((short)8,I_TRICHERIE));
m1676custListLevelMove_.add(new LevelMove((short)12,I_VANTARDISE));
m1676custListLevelMove_.add(new LevelMove((short)12,I_VANTARDISE));
m1676custListLevelMove_.add(new LevelMove((short)13,I_VAGUE_PSY));
m1676custListLevelMove_.add(new LevelMove((short)15,I_RENVERSEMENT));
m1676custListLevelMove_.add(new LevelMove((short)18,I_HYPNOSE));
m1676custListLevelMove_.add(new LevelMove((short)21,I_RAFALE_PSY));
m1676custListLevelMove_.add(new LevelMove((short)23,I_PASSE_PASSE));
m1676custListLevelMove_.add(new LevelMove((short)27,I_REPRESAILLES));
m1676custListLevelMove_.add(new LevelMove((short)31,I_MUR_LUMIERE));
m1676custListLevelMove_.add(new LevelMove((short)31,I_MUR_LUMIERE));
m1676custListLevelMove_.add(new LevelMove((short)35,I_PICORE));
m1676custListLevelMove_.add(new LevelMove((short)39,I_COUPE_PSYCHO));
m1676custListLevelMove_.add(new LevelMove((short)43,I_TRANCHE));
m1676custListLevelMove_.add(new LevelMove((short)46,I_TRANCHE_NUIT));
m1676custListLevelMove_.add(new LevelMove((short)48,I_SURPUISSANCE));
m1676pokemonData_.setLevMoves(m1676custListLevelMove_);
m1676pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1676stringList_=new StringList(new CollCapacity(3));
m1676stringList_.add(I_CONTESTATION);
m1676stringList_.add(I_INFILTRATION);
m1676stringList_.add(I_VENTOUSE);
m1676pokemonData_.setAbilities(m1676stringList_);
m1676stringList_=new StringList(new CollCapacity(11));
m1676stringList_.add(I_CAMOUFLAGE);
m1676stringList_.add(I_CONFIDENCE);
m1676stringList_.add(I_EMBARGO);
m1676stringList_.add(I_FLATTERIE);
m1676stringList_.add(I_PARTAGE_FORCE);
m1676stringList_.add(I_PLENITUDE);
m1676stringList_.add(I_PRLVT_DESTIN);
m1676stringList_.add(I_PROVOC);
m1676stringList_.add(I_RAYON_SIMPLE);
m1676stringList_.add(I_VIBROBSCUR);
m1676stringList_.add(I_COUPE);
m1676pokemonData_.setMoveTutors(m1676stringList_);
Shorts m1676shorts_=new Shorts(new CollCapacity(1));
m1676shorts_.add((short)1);
m1676pokemonData_.setHiddenMoves(m1676shorts_);
m1676shorts_=new Shorts(new CollCapacity(35));
m1676shorts_.add((short)70);
m1676shorts_.add((short)4);
m1676shorts_.add((short)6);
m1676shorts_.add((short)10);
m1676shorts_.add((short)11);
m1676shorts_.add((short)12);
m1676shorts_.add((short)16);
m1676shorts_.add((short)17);
m1676shorts_.add((short)18);
m1676shorts_.add((short)21);
m1676shorts_.add((short)24);
m1676shorts_.add((short)27);
m1676shorts_.add((short)29);
m1676shorts_.add((short)32);
m1676shorts_.add((short)33);
m1676shorts_.add((short)35);
m1676shorts_.add((short)40);
m1676shorts_.add((short)41);
m1676shorts_.add((short)42);
m1676shorts_.add((short)44);
m1676shorts_.add((short)45);
m1676shorts_.add((short)46);
m1676shorts_.add((short)48);
m1676shorts_.add((short)56);
m1676shorts_.add((short)63);
m1676shorts_.add((short)66);
m1676shorts_.add((short)67);
m1676shorts_.add((short)77);
m1676shorts_.add((short)97);
m1676shorts_.add((short)80);
m1676shorts_.add((short)88);
m1676shorts_.add((short)87);
m1676shorts_.add((short)90);
m1676shorts_.add((short)92);
m1676shorts_.add((short)100);
m1676pokemonData_.setTechnicalMoves(m1676shorts_);
m1676pokemonData_.setBaseEvo(I_SEPIATOP);
StringMap<Evolution> m1676stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1676evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1676evolutionLevelSimple_.setLevel((short)30);
m1676stringMapEvolution_.addEntry(I_SEPIATROCE,m1676evolutionLevelSimple_);
m1676pokemonData_.setEvolutions(m1676stringMapEvolution_);
m1676pokemonData_.setCatchingRate((short)190);
m1676pokemonData_.setHeight(Rate.newRate(R_2_5));
m1676pokemonData_.setExpEvo(ExpType.M);
m1676pokemonData_.setExpRate(58);
m1676stringList_=new StringList(new CollCapacity(12));
m1676stringList_.add(I_METAMORPH);
m1676stringList_.add(I_EAU_1);
m1676stringList_.add(I_SOL);
m1676stringList_.add(I_MONSTRE);
m1676stringList_.add(I_INSECTE);
m1676stringList_.add(I_FEE);
m1676stringList_.add(I_EAU_2);
m1676stringList_.add(I_DRAGON);
m1676stringList_.add(I_VOL);
m1676stringList_.add(I_EAU_3);
m1676stringList_.add(I_INDETERMINE);
m1676stringList_.add(I_PLANTE);
m1676pokemonData_.setEggGroups(m1676stringList_);
m1676pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1676pokemonData_.setHappiness((short)70);
m1676pokemonData_.setHappinessHatch((short)140);
return m1676pokemonData_;
}
static PokemonData p610(){
PokemonData m1677pokemonData_=Instances.newPokemonData();
m1677pokemonData_.setWeight(Rate.newRate(R_47));
StringList m1677stringList_=new StringList(new CollCapacity(2));
m1677stringList_.add(I_PSY);
m1677stringList_.add(I_TENEBRE);
m1677pokemonData_.setTypes(m1677stringList_);
EnumMap<Statistic,StatBaseEv> m1677enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)92,(short)2));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)68,(short)0));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)75,(short)0));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)86,(short)0));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)88,(short)0));
m1677enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)73,(short)0));
m1677pokemonData_.setStatistics(m1677enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1677custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(23));
m1677custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1677custListLevelMove_.add(new LevelMove((short)1,I_PICPIC));
m1677custListLevelMove_.add(new LevelMove((short)1,I_CONSTRICTION));
m1677custListLevelMove_.add(new LevelMove((short)1,I_CONTRE));
m1677custListLevelMove_.add(new LevelMove((short)4,I_PROTECTION));
m1677custListLevelMove_.add(new LevelMove((short)4,I_PROTECTION));
m1677custListLevelMove_.add(new LevelMove((short)8,I_TRICHERIE));
m1677custListLevelMove_.add(new LevelMove((short)12,I_VANTARDISE));
m1677custListLevelMove_.add(new LevelMove((short)12,I_VANTARDISE));
m1677custListLevelMove_.add(new LevelMove((short)13,I_VAGUE_PSY));
m1677custListLevelMove_.add(new LevelMove((short)15,I_RENVERSEMENT));
m1677custListLevelMove_.add(new LevelMove((short)18,I_HYPNOSE));
m1677custListLevelMove_.add(new LevelMove((short)21,I_RAFALE_PSY));
m1677custListLevelMove_.add(new LevelMove((short)23,I_PASSE_PASSE));
m1677custListLevelMove_.add(new LevelMove((short)27,I_REPRESAILLES));
m1677custListLevelMove_.add(new LevelMove((short)31,I_MUR_LUMIERE));
m1677custListLevelMove_.add(new LevelMove((short)31,I_MUR_LUMIERE));
m1677custListLevelMove_.add(new LevelMove((short)35,I_PICORE));
m1677custListLevelMove_.add(new LevelMove((short)39,I_COUPE_PSYCHO));
m1677custListLevelMove_.add(new LevelMove((short)43,I_TRANCHE));
m1677custListLevelMove_.add(new LevelMove((short)46,I_TRANCHE_NUIT));
m1677custListLevelMove_.add(new LevelMove((short)48,I_SURPUISSANCE));
m1677custListLevelMove_.add(new LevelMove((short)48,I_SURPUISSANCE));
m1677pokemonData_.setLevMoves(m1677custListLevelMove_);
m1677pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1677stringList_=new StringList(new CollCapacity(3));
m1677stringList_.add(I_CONTESTATION);
m1677stringList_.add(I_INFILTRATION);
m1677stringList_.add(I_VENTOUSE);
m1677pokemonData_.setAbilities(m1677stringList_);
m1677stringList_=new StringList(new CollCapacity(1));
m1677stringList_.add(I_COUPE);
m1677pokemonData_.setMoveTutors(m1677stringList_);
Shorts m1677shorts_=new Shorts(new CollCapacity(1));
m1677shorts_.add((short)1);
m1677pokemonData_.setHiddenMoves(m1677shorts_);
m1677shorts_=new Shorts(new CollCapacity(38));
m1677shorts_.add((short)70);
m1677shorts_.add((short)3);
m1677shorts_.add((short)4);
m1677shorts_.add((short)6);
m1677shorts_.add((short)10);
m1677shorts_.add((short)11);
m1677shorts_.add((short)12);
m1677shorts_.add((short)15);
m1677shorts_.add((short)16);
m1677shorts_.add((short)17);
m1677shorts_.add((short)18);
m1677shorts_.add((short)21);
m1677shorts_.add((short)24);
m1677shorts_.add((short)27);
m1677shorts_.add((short)29);
m1677shorts_.add((short)32);
m1677shorts_.add((short)33);
m1677shorts_.add((short)35);
m1677shorts_.add((short)40);
m1677shorts_.add((short)41);
m1677shorts_.add((short)42);
m1677shorts_.add((short)44);
m1677shorts_.add((short)45);
m1677shorts_.add((short)46);
m1677shorts_.add((short)48);
m1677shorts_.add((short)56);
m1677shorts_.add((short)63);
m1677shorts_.add((short)66);
m1677shorts_.add((short)67);
m1677shorts_.add((short)68);
m1677shorts_.add((short)77);
m1677shorts_.add((short)97);
m1677shorts_.add((short)80);
m1677shorts_.add((short)88);
m1677shorts_.add((short)87);
m1677shorts_.add((short)90);
m1677shorts_.add((short)92);
m1677shorts_.add((short)100);
m1677pokemonData_.setTechnicalMoves(m1677shorts_);
m1677pokemonData_.setBaseEvo(I_SEPIATOP);
m1677pokemonData_.setCatchingRate((short)80);
m1677pokemonData_.setHeight(Rate.newRate(R_3_2));
m1677pokemonData_.setExpEvo(ExpType.M);
m1677pokemonData_.setExpRate(169);
m1677stringList_=new StringList(new CollCapacity(12));
m1677stringList_.add(I_METAMORPH);
m1677stringList_.add(I_EAU_1);
m1677stringList_.add(I_SOL);
m1677stringList_.add(I_MONSTRE);
m1677stringList_.add(I_INSECTE);
m1677stringList_.add(I_FEE);
m1677stringList_.add(I_EAU_2);
m1677stringList_.add(I_DRAGON);
m1677stringList_.add(I_VOL);
m1677stringList_.add(I_EAU_3);
m1677stringList_.add(I_INDETERMINE);
m1677stringList_.add(I_PLANTE);
m1677pokemonData_.setEggGroups(m1677stringList_);
m1677pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1677pokemonData_.setHappiness((short)70);
m1677pokemonData_.setHappinessHatch((short)140);
return m1677pokemonData_;
}
static PokemonData p611(){
PokemonData m1678pokemonData_=Instances.newPokemonData();
m1678pokemonData_.setWeight(Rate.newRate(R_505));
StringList m1678stringList_=new StringList(new CollCapacity(1));
m1678stringList_.add(I_GLACE);
m1678pokemonData_.setTypes(m1678stringList_);
EnumMap<Statistic,StatBaseEv> m1678enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)117,(short)0));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)44,(short)0));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)46,(short)0));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)95,(short)0));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)184,(short)2));
m1678enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)28,(short)0));
m1678pokemonData_.setStatistics(m1678enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1678custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(21));
m1678custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1678custListLevelMove_.add(new LevelMove((short)1,I_MORSURE));
m1678custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1678custListLevelMove_.add(new LevelMove((short)1,I_MUR_DE_FER));
m1678custListLevelMove_.add(new LevelMove((short)5,I_POUDREUSE));
m1678custListLevelMove_.add(new LevelMove((short)10,I_VENT_GLACE));
m1678custListLevelMove_.add(new LevelMove((short)15,I_BELIER));
m1678custListLevelMove_.add(new LevelMove((short)20,I_AFFUTAGE));
m1678custListLevelMove_.add(new LevelMove((short)22,I_MALEDICTION));
m1678custListLevelMove_.add(new LevelMove((short)26,I_CROCS_GIVRE));
m1678custListLevelMove_.add(new LevelMove((short)30,I_BALL_GLACE));
m1678custListLevelMove_.add(new LevelMove((short)35,I_TOUR_RAPIDE));
m1678custListLevelMove_.add(new LevelMove((short)42,I_AVALANCHE));
m1678custListLevelMove_.add(new LevelMove((short)46,I_BLIZZARD));
m1678custListLevelMove_.add(new LevelMove((short)46,I_BLIZZARD));
m1678custListLevelMove_.add(new LevelMove((short)51,I_SOIN));
m1678custListLevelMove_.add(new LevelMove((short)56,I_DAMOCLES));
m1678custListLevelMove_.add(new LevelMove((short)60,I_COUD_KRANE));
m1678custListLevelMove_.add(new LevelMove((short)60,I_COUD_KRANE));
m1678custListLevelMove_.add(new LevelMove((short)65,I_MACHOUILLE));
m1678custListLevelMove_.add(new LevelMove((short)65,I_MACHOUILLE));
m1678pokemonData_.setLevMoves(m1678custListLevelMove_);
m1678pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1678stringList_=new StringList(new CollCapacity(3));
m1678stringList_.add(I_CORPS_GEL);
m1678stringList_.add(I_FERMETE);
m1678stringList_.add(I_TEMPO_PERSO);
m1678pokemonData_.setAbilities(m1678stringList_);
m1678stringList_=new StringList(new CollCapacity(2));
m1678stringList_.add(I_SURF);
m1678stringList_.add(I_FORCE);
m1678pokemonData_.setMoveTutors(m1678stringList_);
Shorts m1678shorts_=new Shorts(new CollCapacity(2));
m1678shorts_.add((short)3);
m1678shorts_.add((short)4);
m1678pokemonData_.setHiddenMoves(m1678shorts_);
m1678shorts_=new Shorts(new CollCapacity(33));
m1678shorts_.add((short)70);
m1678shorts_.add((short)94);
m1678shorts_.add((short)5);
m1678shorts_.add((short)6);
m1678shorts_.add((short)7);
m1678shorts_.add((short)10);
m1678shorts_.add((short)13);
m1678shorts_.add((short)14);
m1678shorts_.add((short)15);
m1678shorts_.add((short)17);
m1678shorts_.add((short)18);
m1678shorts_.add((short)20);
m1678shorts_.add((short)21);
m1678shorts_.add((short)26);
m1678shorts_.add((short)27);
m1678shorts_.add((short)32);
m1678shorts_.add((short)39);
m1678shorts_.add((short)42);
m1678shorts_.add((short)44);
m1678shorts_.add((short)45);
m1678shorts_.add((short)48);
m1678shorts_.add((short)68);
m1678shorts_.add((short)69);
m1678shorts_.add((short)71);
m1678shorts_.add((short)74);
m1678shorts_.add((short)78);
m1678shorts_.add((short)79);
m1678shorts_.add((short)80);
m1678shorts_.add((short)88);
m1678shorts_.add((short)87);
m1678shorts_.add((short)90);
m1678shorts_.add((short)91);
m1678shorts_.add((short)100);
m1678pokemonData_.setTechnicalMoves(m1678shorts_);
m1678pokemonData_.setBaseEvo(I_GRELACON);
m1678pokemonData_.setCatchingRate((short)55);
m1678pokemonData_.setHeight(Rate.newRate(R_2));
m1678pokemonData_.setExpEvo(ExpType.M);
m1678pokemonData_.setExpRate(180);
m1678stringList_=new StringList(new CollCapacity(6));
m1678stringList_.add(I_METAMORPH);
m1678stringList_.add(I_EAU_1);
m1678stringList_.add(I_MONSTRE);
m1678stringList_.add(I_DRAGON);
m1678stringList_.add(I_PLANTE);
m1678stringList_.add(I_SOL);
m1678pokemonData_.setEggGroups(m1678stringList_);
m1678pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1678pokemonData_.setHappiness((short)70);
m1678pokemonData_.setHappinessHatch((short)140);
return m1678pokemonData_;
}
static PokemonData p612(){
PokemonData m1679pokemonData_=Instances.newPokemonData();
m1679pokemonData_.setWeight(Rate.newRate(R_27));
StringList m1679stringList_=new StringList(new CollCapacity(1));
m1679stringList_.add(I_EAU);
m1679pokemonData_.setTypes(m1679stringList_);
EnumMap<Statistic,StatBaseEv> m1679enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)104,(short)1));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)94,(short)0));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)75,(short)0));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)55,(short)0));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)105,(short)1));
m1679enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)52,(short)0));
m1679pokemonData_.setStatistics(m1679enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1679custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1679custListLevelMove_.add(new LevelMove((short)1,I_SIPHON));
m1679custListLevelMove_.add(new LevelMove((short)6,I_MORSURE));
m1679custListLevelMove_.add(new LevelMove((short)10,I_GRINCEMENT));
m1679custListLevelMove_.add(new LevelMove((short)15,I_VIBRAQUA));
m1679custListLevelMove_.add(new LevelMove((short)19,I_GRIMACE));
m1679custListLevelMove_.add(new LevelMove((short)24,I_CROCS_GIVRE));
m1679custListLevelMove_.add(new LevelMove((short)28,I_SAUMURE));
m1679custListLevelMove_.add(new LevelMove((short)33,I_RELAIS));
m1679custListLevelMove_.add(new LevelMove((short)37,I_PLONGEE));
m1679custListLevelMove_.add(new LevelMove((short)42,I_MACHOUILLE));
m1679custListLevelMove_.add(new LevelMove((short)46,I_HYDROQUEUE));
m1679custListLevelMove_.add(new LevelMove((short)50,I_HYDROCANON));
m1679pokemonData_.setLevMoves(m1679custListLevelMove_);
m1679pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1679stringList_=new StringList(new CollCapacity(1));
m1679stringList_.add(I_GLISSADE);
m1679pokemonData_.setAbilities(m1679stringList_);
m1679stringList_=new StringList(new CollCapacity(27));
m1679stringList_.add(I_ANNEAU_HYDRO);
m1679stringList_.add(I_BLABLA_DODO);
m1679stringList_.add(I_BOUCLIER);
m1679stringList_.add(I_CLONAGE);
m1679stringList_.add(I_COPIE);
m1679stringList_.add(I_COUD_BOUE);
m1679stringList_.add(I_COUP_BAS);
m1679stringList_.add(I_CROC_FATAL);
m1679stringList_.add(I_DAMOCLES);
m1679stringList_.add(I_HYDROQUEUE);
m1679stringList_.add(I_LANCE_BOUE);
m1679stringList_.add(I_METEORES);
m1679stringList_.add(I_OCROUPI);
m1679stringList_.add(I_ONDE_FOLIE);
m1679stringList_.add(I_PLAQUAGE);
m1679stringList_.add(I_PLONGEE);
m1679stringList_.add(I_REBOND);
m1679stringList_.add(I_REGENERATION);
m1679stringList_.add(I_RONFLEMENT);
m1679stringList_.add(I_TENACITE);
m1679stringList_.add(I_ULTRASON);
m1679stringList_.add(I_VANTARDISE);
m1679stringList_.add(I_VENT_GLACE);
m1679stringList_.add(I_ETREINTE);
m1679stringList_.add(I_SAISIE);
m1679stringList_.add(I_SURF);
m1679stringList_.add(I_SIPHON);
m1679pokemonData_.setMoveTutors(m1679stringList_);
Shorts m1679shorts_=new Shorts(new CollCapacity(2));
m1679shorts_.add((short)3);
m1679shorts_.add((short)5);
m1679pokemonData_.setHiddenMoves(m1679shorts_);
m1679shorts_=new Shorts(new CollCapacity(23));
m1679shorts_.add((short)6);
m1679shorts_.add((short)7);
m1679shorts_.add((short)10);
m1679shorts_.add((short)13);
m1679shorts_.add((short)14);
m1679shorts_.add((short)15);
m1679shorts_.add((short)17);
m1679shorts_.add((short)18);
m1679shorts_.add((short)21);
m1679shorts_.add((short)27);
m1679shorts_.add((short)32);
m1679shorts_.add((short)39);
m1679shorts_.add((short)42);
m1679shorts_.add((short)44);
m1679shorts_.add((short)45);
m1679shorts_.add((short)48);
m1679shorts_.add((short)55);
m1679shorts_.add((short)68);
m1679shorts_.add((short)88);
m1679shorts_.add((short)83);
m1679shorts_.add((short)87);
m1679shorts_.add((short)90);
m1679shorts_.add((short)100);
m1679pokemonData_.setTechnicalMoves(m1679shorts_);
m1679pokemonData_.setBaseEvo(I_COQUIPERL);
m1679pokemonData_.setCatchingRate((short)60);
m1679pokemonData_.setHeight(Rate.newRate(R_17_10));
m1679pokemonData_.setExpEvo(ExpType.E);
m1679pokemonData_.setExpRate(170);
m1679stringList_=new StringList(new CollCapacity(1));
m1679stringList_.add(I_EAU_1);
m1679pokemonData_.setEggGroups(m1679stringList_);
m1679pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1679pokemonData_.setHappiness((short)70);
m1679pokemonData_.setHappinessHatch((short)140);
return m1679pokemonData_;
}
static PokemonData p613(){
PokemonData m1680pokemonData_=Instances.newPokemonData();
m1680pokemonData_.setWeight(Rate.newRate(R_105_2));
StringList m1680stringList_=new StringList(new CollCapacity(1));
m1680stringList_.add(I_POISON);
m1680pokemonData_.setTypes(m1680stringList_);
EnumMap<Statistic,StatBaseEv> m1680enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)1));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)1));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)73,(short)0));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1680enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)0));
m1680pokemonData_.setStatistics(m1680enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1680custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1680custListLevelMove_.add(new LevelMove((short)1,I_LIGOTAGE));
m1680custListLevelMove_.add(new LevelMove((short)1,I_VANTARDISE));
m1680custListLevelMove_.add(new LevelMove((short)5,I_MORSURE));
m1680custListLevelMove_.add(new LevelMove((short)9,I_LECHOUILLE));
m1680custListLevelMove_.add(new LevelMove((short)12,I_QUEUE_POISON));
m1680custListLevelMove_.add(new LevelMove((short)16,I_GRINCEMENT));
m1680custListLevelMove_.add(new LevelMove((short)20,I_CHOC_VENIN));
m1680custListLevelMove_.add(new LevelMove((short)23,I_INTIMIDATION));
m1680custListLevelMove_.add(new LevelMove((short)27,I_CROCHETVENIN));
m1680custListLevelMove_.add(new LevelMove((short)28,I_PIEGE_VENIN));
m1680custListLevelMove_.add(new LevelMove((short)31,I_TRANCHE_NUIT));
m1680custListLevelMove_.add(new LevelMove((short)34,I_SUC_DIGESTIF));
m1680custListLevelMove_.add(new LevelMove((short)34,I_SUC_DIGESTIF));
m1680custListLevelMove_.add(new LevelMove((short)38,I_BUEE_NOIRE));
m1680custListLevelMove_.add(new LevelMove((short)42,I_DIRECT_TOXIK));
m1680custListLevelMove_.add(new LevelMove((short)45,I_MACHOUILLE));
m1680custListLevelMove_.add(new LevelMove((short)46,I_ERUCTATION));
m1680custListLevelMove_.add(new LevelMove((short)48,I_ENROULEMENT));
m1680custListLevelMove_.add(new LevelMove((short)50,I_ESSORAGE));
m1680pokemonData_.setLevMoves(m1680custListLevelMove_);
m1680pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1680stringList_=new StringList(new CollCapacity(1));
m1680stringList_.add(I_MUE);
m1680pokemonData_.setAbilities(m1680stringList_);
m1680stringList_=new StringList(new CollCapacity(32));
m1680stringList_.add(I_ASSURANCE);
m1680stringList_.add(I_AVALE);
m1680stringList_.add(I_BLABLA_DODO);
m1680stringList_.add(I_CLONAGE);
m1680stringList_.add(I_COPIE);
m1680stringList_.add(I_COUD_BOUE);
m1680stringList_.add(I_COUP_BAS);
m1680stringList_.add(I_COUP_D_BOULE);
m1680stringList_.add(I_DAMOCLES);
m1680stringList_.add(I_GRIMACE);
m1680stringList_.add(I_HYDROQUEUE);
m1680stringList_.add(I_METEORES);
m1680stringList_.add(I_PASSE_PASSE);
m1680stringList_.add(I_PLAQUAGE);
m1680stringList_.add(I_RELACHE);
m1680stringList_.add(I_RONFLEMENT);
m1680stringList_.add(I_SABOTAGE);
m1680stringList_.add(I_STOCKAGE);
m1680stringList_.add(I_TAILLADE);
m1680stringList_.add(I_TENACITE);
m1680stringList_.add(I_TRANCHE_NUIT);
m1680stringList_.add(I_VANTARDISE);
m1680stringList_.add(I_ESSORAGE);
m1680stringList_.add(I_ETREINTE);
m1680stringList_.add(I_GIGA_SANGSUE);
m1680stringList_.add(I_PUNITION);
m1680stringList_.add(I_QUEUE_DE_FER);
m1680stringList_.add(I_SAISIE);
m1680stringList_.add(I_SUC_DIGESTIF);
m1680stringList_.add(I_TOUT_OU_RIEN);
m1680stringList_.add(I_VIBROBSCUR);
m1680stringList_.add(I_FORCE);
m1680pokemonData_.setMoveTutors(m1680stringList_);
Shorts m1680shorts_=new Shorts(new CollCapacity(1));
m1680shorts_.add((short)4);
m1680pokemonData_.setHiddenMoves(m1680shorts_);
m1680shorts_=new Shorts(new CollCapacity(33));
m1680shorts_.add((short)94);
m1680shorts_.add((short)6);
m1680shorts_.add((short)9);
m1680shorts_.add((short)10);
m1680shorts_.add((short)11);
m1680shorts_.add((short)12);
m1680shorts_.add((short)17);
m1680shorts_.add((short)18);
m1680shorts_.add((short)21);
m1680shorts_.add((short)26);
m1680shorts_.add((short)27);
m1680shorts_.add((short)28);
m1680shorts_.add((short)32);
m1680shorts_.add((short)34);
m1680shorts_.add((short)35);
m1680shorts_.add((short)36);
m1680shorts_.add((short)42);
m1680shorts_.add((short)44);
m1680shorts_.add((short)45);
m1680shorts_.add((short)46);
m1680shorts_.add((short)48);
m1680shorts_.add((short)66);
m1680shorts_.add((short)67);
m1680shorts_.add((short)78);
m1680shorts_.add((short)97);
m1680shorts_.add((short)81);
m1680shorts_.add((short)88);
m1680shorts_.add((short)82);
m1680shorts_.add((short)83);
m1680shorts_.add((short)84);
m1680shorts_.add((short)87);
m1680shorts_.add((short)90);
m1680shorts_.add((short)100);
m1680pokemonData_.setTechnicalMoves(m1680shorts_);
m1680pokemonData_.setBaseEvo(I_SEVIPER);
m1680pokemonData_.setCatchingRate((short)90);
m1680pokemonData_.setHeight(Rate.newRate(R_27_10));
m1680pokemonData_.setExpEvo(ExpType.F);
m1680pokemonData_.setExpRate(160);
m1680stringList_=new StringList(new CollCapacity(2));
m1680stringList_.add(I_DRAGON);
m1680stringList_.add(I_SOL);
m1680pokemonData_.setEggGroups(m1680stringList_);
m1680pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1680pokemonData_.setHappiness((short)70);
m1680pokemonData_.setHappinessHatch((short)140);
return m1680pokemonData_;
}
static PokemonData p614(){
PokemonData m1681pokemonData_=Instances.newPokemonData();
m1681pokemonData_.setWeight(Rate.newRate(R_71_2));
StringList m1681stringList_=new StringList(new CollCapacity(1));
m1681stringList_.add(I_COMBAT);
m1681pokemonData_.setTypes(m1681stringList_);
EnumMap<Statistic,StatBaseEv> m1681enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)125,(short)2));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)0));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1681enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)105,(short)0));
m1681pokemonData_.setStatistics(m1681enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1681custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1681custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1681custListLevelMove_.add(new LevelMove((short)5,I_YOGA));
m1681custListLevelMove_.add(new LevelMove((short)9,I_DETECTION));
m1681custListLevelMove_.add(new LevelMove((short)13,I_BLUFF));
m1681custListLevelMove_.add(new LevelMove((short)17,I_TORGNOLES));
m1681custListLevelMove_.add(new LevelMove((short)21,I_METEORES));
m1681custListLevelMove_.add(new LevelMove((short)25,I_PLENITUDE));
m1681custListLevelMove_.add(new LevelMove((short)29,I_FORTE_PAUME));
m1681custListLevelMove_.add(new LevelMove((short)33,I_VAMPIPOING));
m1681custListLevelMove_.add(new LevelMove((short)37,I_PIED_SAUTE));
m1681custListLevelMove_.add(new LevelMove((short)41,I_DEMI_TOUR));
m1681custListLevelMove_.add(new LevelMove((short)45,I_GARDE_LARGE));
m1681custListLevelMove_.add(new LevelMove((short)49,I_REBOND));
m1681custListLevelMove_.add(new LevelMove((short)56,I_PIED_VOLTIGE));
m1681custListLevelMove_.add(new LevelMove((short)63,I_CONTRE));
m1681custListLevelMove_.add(new LevelMove((short)70,I_AURASPHERE));
m1681pokemonData_.setLevMoves(m1681custListLevelMove_);
m1681pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1681stringList_=new StringList(new CollCapacity(3));
m1681stringList_.add(I_ATTENTION);
m1681stringList_.add(I_REGE_FORCE);
m1681stringList_.add(I_TEMERAIRE);
m1681pokemonData_.setAbilities(m1681stringList_);
m1681stringList_=new StringList(new CollCapacity(10));
m1681stringList_.add(I_BALAYAGE);
m1681stringList_.add(I_BLABLA_DODO);
m1681stringList_.add(I_COUP_D_MAIN);
m1681stringList_.add(I_DOUBLE_BAFFE);
m1681stringList_.add(I_IMITATION);
m1681stringList_.add(I_REBOND);
m1681stringList_.add(I_RONFLEMENT);
m1681stringList_.add(I_SABOTAGE);
m1681stringList_.add(I_VAMPIPOING);
m1681stringList_.add(I_FORCE);
m1681pokemonData_.setMoveTutors(m1681stringList_);
Shorts m1681shorts_=new Shorts(new CollCapacity(1));
m1681shorts_.add((short)4);
m1681pokemonData_.setHiddenMoves(m1681shorts_);
m1681shorts_=new Shorts(new CollCapacity(41));
m1681shorts_.add((short)94);
m1681shorts_.add((short)4);
m1681shorts_.add((short)6);
m1681shorts_.add((short)8);
m1681shorts_.add((short)10);
m1681shorts_.add((short)11);
m1681shorts_.add((short)12);
m1681shorts_.add((short)15);
m1681shorts_.add((short)17);
m1681shorts_.add((short)18);
m1681shorts_.add((short)21);
m1681shorts_.add((short)27);
m1681shorts_.add((short)28);
m1681shorts_.add((short)31);
m1681shorts_.add((short)32);
m1681shorts_.add((short)33);
m1681shorts_.add((short)39);
m1681shorts_.add((short)40);
m1681shorts_.add((short)42);
m1681shorts_.add((short)44);
m1681shorts_.add((short)45);
m1681shorts_.add((short)47);
m1681shorts_.add((short)48);
m1681shorts_.add((short)52);
m1681shorts_.add((short)56);
m1681shorts_.add((short)62);
m1681shorts_.add((short)66);
m1681shorts_.add((short)67);
m1681shorts_.add((short)68);
m1681shorts_.add((short)71);
m1681shorts_.add((short)75);
m1681shorts_.add((short)77);
m1681shorts_.add((short)80);
m1681shorts_.add((short)88);
m1681shorts_.add((short)84);
m1681shorts_.add((short)86);
m1681shorts_.add((short)87);
m1681shorts_.add((short)89);
m1681shorts_.add((short)90);
m1681shorts_.add((short)98);
m1681shorts_.add((short)100);
m1681pokemonData_.setTechnicalMoves(m1681shorts_);
m1681pokemonData_.setBaseEvo(I_KUNGFOUINE);
m1681pokemonData_.setCatchingRate((short)45);
m1681pokemonData_.setHeight(Rate.newRate(R_7_5));
m1681pokemonData_.setExpEvo(ExpType.P);
m1681pokemonData_.setExpRate(179);
m1681stringList_=new StringList(new CollCapacity(2));
m1681stringList_.add(I_HUMANOIDE);
m1681stringList_.add(I_SOL);
m1681pokemonData_.setEggGroups(m1681stringList_);
m1681pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6630));
m1681pokemonData_.setHappiness((short)70);
m1681pokemonData_.setHappinessHatch((short)140);
return m1681pokemonData_;
}
static PokemonData p615(){
PokemonData m1682pokemonData_=Instances.newPokemonData();
m1682pokemonData_.setWeight(Rate.newRate(R_444_5));
StringList m1682stringList_=new StringList(new CollCapacity(2));
m1682stringList_.add(I_EAU);
m1682stringList_.add(I_TENEBRE);
m1682pokemonData_.setTypes(m1682stringList_);
EnumMap<Statistic,StatBaseEv> m1682enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)120,(short)2));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)0));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)40,(short)0));
m1682enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)95,(short)0));
m1682pokemonData_.setStatistics(m1682enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1682custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1682custListLevelMove_.add(new LevelMove((short)1,I_RUSE));
m1682custListLevelMove_.add(new LevelMove((short)1,I_MORSURE));
m1682custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1682custListLevelMove_.add(new LevelMove((short)6,I_FRENESIE));
m1682custListLevelMove_.add(new LevelMove((short)8,I_PUISSANCE));
m1682custListLevelMove_.add(new LevelMove((short)11,I_GRIMACE));
m1682custListLevelMove_.add(new LevelMove((short)16,I_CROCS_GIVRE));
m1682custListLevelMove_.add(new LevelMove((short)18,I_GRINCEMENT));
m1682custListLevelMove_.add(new LevelMove((short)21,I_VANTARDISE));
m1682custListLevelMove_.add(new LevelMove((short)26,I_ASSURANCE));
m1682custListLevelMove_.add(new LevelMove((short)28,I_MACHOUILLE));
m1682custListLevelMove_.add(new LevelMove((short)30,I_TRANCHE));
m1682custListLevelMove_.add(new LevelMove((short)34,I_AQUA_JET));
m1682custListLevelMove_.add(new LevelMove((short)40,I_PROVOC));
m1682custListLevelMove_.add(new LevelMove((short)45,I_HATE));
m1682custListLevelMove_.add(new LevelMove((short)50,I_COUD_KRANE));
m1682custListLevelMove_.add(new LevelMove((short)56,I_TRANCHE_NUIT));
m1682pokemonData_.setLevMoves(m1682custListLevelMove_);
m1682pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1682stringList_=new StringList(new CollCapacity(1));
m1682stringList_.add(I_PEAU_DURE);
m1682pokemonData_.setAbilities(m1682stringList_);
m1682stringList_=new StringList(new CollCapacity(24));
m1682stringList_.add(I_BLABLA_DODO);
m1682stringList_.add(I_BROUHAHA);
m1682stringList_.add(I_CLONAGE);
m1682stringList_.add(I_COPIE);
m1682stringList_.add(I_COUD_BOUE);
m1682stringList_.add(I_CROC_FATAL);
m1682stringList_.add(I_DAMOCLES);
m1682stringList_.add(I_DEPIT);
m1682stringList_.add(I_HYDROCANON);
m1682stringList_.add(I_MANIA);
m1682stringList_.add(I_METEORES);
m1682stringList_.add(I_PLONGEE);
m1682stringList_.add(I_POUV_ANTIQUE);
m1682stringList_.add(I_PSYKOUD_BOUL);
m1682stringList_.add(I_REBOND);
m1682stringList_.add(I_RONFLEMENT);
m1682stringList_.add(I_TAILLADE);
m1682stringList_.add(I_TENACITE);
m1682stringList_.add(I_VANTARDISE);
m1682stringList_.add(I_VENT_GLACE);
m1682stringList_.add(I_VIBROBSCUR);
m1682stringList_.add(I_SURF);
m1682stringList_.add(I_FORCE);
m1682stringList_.add(I_SIPHON);
m1682pokemonData_.setMoveTutors(m1682stringList_);
Shorts m1682shorts_=new Shorts(new CollCapacity(3));
m1682shorts_.add((short)3);
m1682shorts_.add((short)4);
m1682shorts_.add((short)5);
m1682pokemonData_.setHiddenMoves(m1682shorts_);
m1682shorts_=new Shorts(new CollCapacity(34));
m1682shorts_.add((short)94);
m1682shorts_.add((short)5);
m1682shorts_.add((short)6);
m1682shorts_.add((short)7);
m1682shorts_.add((short)10);
m1682shorts_.add((short)12);
m1682shorts_.add((short)13);
m1682shorts_.add((short)14);
m1682shorts_.add((short)15);
m1682shorts_.add((short)17);
m1682shorts_.add((short)18);
m1682shorts_.add((short)21);
m1682shorts_.add((short)26);
m1682shorts_.add((short)27);
m1682shorts_.add((short)32);
m1682shorts_.add((short)39);
m1682shorts_.add((short)41);
m1682shorts_.add((short)42);
m1682shorts_.add((short)44);
m1682shorts_.add((short)45);
m1682shorts_.add((short)46);
m1682shorts_.add((short)48);
m1682shorts_.add((short)55);
m1682shorts_.add((short)66);
m1682shorts_.add((short)67);
m1682shorts_.add((short)68);
m1682shorts_.add((short)78);
m1682shorts_.add((short)97);
m1682shorts_.add((short)88);
m1682shorts_.add((short)84);
m1682shorts_.add((short)87);
m1682shorts_.add((short)90);
m1682shorts_.add((short)95);
m1682shorts_.add((short)100);
m1682pokemonData_.setTechnicalMoves(m1682shorts_);
m1682pokemonData_.setBaseEvo(I_CARVANHA);
m1682pokemonData_.setCatchingRate((short)60);
m1682pokemonData_.setHeight(Rate.newRate(R_9_5));
m1682pokemonData_.setExpEvo(ExpType.L);
m1682pokemonData_.setExpRate(161);
m1682stringList_=new StringList(new CollCapacity(1));
m1682stringList_.add(I_EAU_2);
m1682pokemonData_.setEggGroups(m1682stringList_);
m1682pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1682pokemonData_.setHappiness((short)70);
m1682pokemonData_.setHappinessHatch((short)140);
return m1682pokemonData_;
}
static PokemonData p616(){
PokemonData m1683pokemonData_=Instances.newPokemonData();
m1683pokemonData_.setWeight(Rate.newRate(R_21_10));
StringList m1683stringList_=new StringList(new CollCapacity(1));
m1683stringList_.add(I_PLANTE);
m1683pokemonData_.setTypes(m1683stringList_);
EnumMap<Statistic,StatBaseEv> m1683enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)0));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)100,(short)0));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)100,(short)0));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)0));
m1683enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)100,(short)3));
m1683pokemonData_.setStatistics(m1683enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1683custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1683custListLevelMove_.add(new LevelMove((short)1,I_CROISSANCE));
m1683custListLevelMove_.add(new LevelMove((short)10,I_FEUILLEMAGIK));
m1683custListLevelMove_.add(new LevelMove((short)19,I_VAMPIGRAINE));
m1683custListLevelMove_.add(new LevelMove((short)28,I_SYNTHESE));
m1683custListLevelMove_.add(new LevelMove((short)37,I_DOUX_PARFUM));
m1683custListLevelMove_.add(new LevelMove((short)46,I_DON_NATUREL));
m1683custListLevelMove_.add(new LevelMove((short)55,I_SOUCIGRAINE));
m1683custListLevelMove_.add(new LevelMove((short)64,I_AROMATHERAPI));
m1683custListLevelMove_.add(new LevelMove((short)73,I_ECO_SPHERE));
m1683custListLevelMove_.add(new LevelMove((short)82,I_DOUX_BAISER));
m1683custListLevelMove_.add(new LevelMove((short)91,I_VOEU_SOIN));
m1683custListLevelMove_.add(new LevelMove((short)100,I_FULMIGRAINE));
m1683pokemonData_.setLevMoves(m1683custListLevelMove_);
m1683pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1683stringList_=new StringList(new CollCapacity(1));
m1683stringList_.add(I_MEDIC_NATURE);
m1683pokemonData_.setAbilities(m1683stringList_);
m1683stringList_=new StringList(new CollCapacity(16));
m1683stringList_.add(I_CANON_GRAINE);
m1683stringList_.add(I_COUD_BOUE);
m1683stringList_.add(I_COUP_D_BOULE);
m1683stringList_.add(I_DERNIERECOUR);
m1683stringList_.add(I_EFFORT);
m1683stringList_.add(I_METEORES);
m1683stringList_.add(I_PSYKOUD_BOUL);
m1683stringList_.add(I_RONFLEMENT);
m1683stringList_.add(I_SOUCIGRAINE);
m1683stringList_.add(I_SYNTHESE);
m1683stringList_.add(I_TELLURIFORCE);
m1683stringList_.add(I_TRANCH_AIR);
m1683stringList_.add(I_VENT_MAUVAIS);
m1683stringList_.add(I_BLABLA_DODO);
m1683stringList_.add(I_GIGA_SANGSUE);
m1683stringList_.add(I_IMPLORE);
m1683pokemonData_.setMoveTutors(m1683stringList_);
Shorts m1683shorts_=new Shorts(new CollCapacity(26));
m1683shorts_.add((short)70);
m1683shorts_.add((short)6);
m1683shorts_.add((short)10);
m1683shorts_.add((short)11);
m1683shorts_.add((short)15);
m1683shorts_.add((short)17);
m1683shorts_.add((short)20);
m1683shorts_.add((short)21);
m1683shorts_.add((short)22);
m1683shorts_.add((short)27);
m1683shorts_.add((short)29);
m1683shorts_.add((short)32);
m1683shorts_.add((short)42);
m1683shorts_.add((short)44);
m1683shorts_.add((short)48);
m1683shorts_.add((short)53);
m1683shorts_.add((short)68);
m1683shorts_.add((short)75);
m1683shorts_.add((short)77);
m1683shorts_.add((short)88);
m1683shorts_.add((short)86);
m1683shorts_.add((short)87);
m1683shorts_.add((short)90);
m1683shorts_.add((short)96);
m1683shorts_.add((short)99);
m1683shorts_.add((short)100);
m1683pokemonData_.setTechnicalMoves(m1683shorts_);
m1683pokemonData_.setBaseEvo(I_SHAYMIN);
m1683pokemonData_.setCatchingRate((short)45);
m1683pokemonData_.setHeight(Rate.newRate(R_1_5));
m1683pokemonData_.setExpEvo(ExpType.L);
m1683pokemonData_.setExpRate(270);
m1683stringList_=new StringList(new CollCapacity(1));
m1683stringList_.add(I_SANS_OEUF);
m1683pokemonData_.setEggGroups(m1683stringList_);
m1683pokemonData_.setHatchingSteps(LgInt.newLgInt(R_30720));
m1683pokemonData_.setHappiness((short)70);
m1683pokemonData_.setHappinessHatch((short)140);
return m1683pokemonData_;
}
static PokemonData p617(){
PokemonData m1684pokemonData_=Instances.newPokemonData();
m1684pokemonData_.setWeight(Rate.newRate(R_44));
StringList m1684stringList_=new StringList(new CollCapacity(1));
m1684stringList_.add(I_PSY);
m1684pokemonData_.setTypes(m1684stringList_);
EnumMap<Statistic,StatBaseEv> m1684enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)55,(short)0));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)95,(short)0));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)110,(short)3));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)95,(short)0));
m1684enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)0));
m1684pokemonData_.setStatistics(m1684enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1684custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1684custListLevelMove_.add(new LevelMove((short)1,I_CAMARADERIE));
m1684custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1684custListLevelMove_.add(new LevelMove((short)3,I_CHOC_MENTAL));
m1684custListLevelMove_.add(new LevelMove((short)7,I_CHATOUILLE));
m1684custListLevelMove_.add(new LevelMove((short)10,I_CROCO_LARME));
m1684custListLevelMove_.add(new LevelMove((short)14,I_TORGNOLES));
m1684custListLevelMove_.add(new LevelMove((short)16,I_RAFALE_PSY));
m1684custListLevelMove_.add(new LevelMove((short)19,I_EMBARGO));
m1684custListLevelMove_.add(new LevelMove((short)24,I_FEINTE));
m1684custListLevelMove_.add(new LevelMove((short)25,I_CHOC_PSY));
m1684custListLevelMove_.add(new LevelMove((short)28,I_FLATTERIE));
m1684custListLevelMove_.add(new LevelMove((short)31,I_PRESCIENCE));
m1684custListLevelMove_.add(new LevelMove((short)34,I_ANTI_SOIN));
m1684custListLevelMove_.add(new LevelMove((short)39,I_PSYKO));
m1684custListLevelMove_.add(new LevelMove((short)45,I_LEVIKINESIE));
m1684custListLevelMove_.add(new LevelMove((short)54,I_CHARME));
m1684custListLevelMove_.add(new LevelMove((short)59,I_ZONE_MAGIQUE));
m1684pokemonData_.setLevMoves(m1684custListLevelMove_);
m1684pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1684stringList_=new StringList(new CollCapacity(1));
m1684stringList_.add(I_MARQUE_OMBRE);
m1684pokemonData_.setAbilities(m1684stringList_);
m1684stringList_=new StringList(new CollCapacity(17));
m1684stringList_.add(I_BLABLA_DODO);
m1684stringList_.add(I_BROUHAHA);
m1684stringList_.add(I_COUP_D_MAIN);
m1684stringList_.add(I_ECHANGE);
m1684stringList_.add(I_GLAS_DE_SOIN);
m1684stringList_.add(I_GRAVITE);
m1684stringList_.add(I_IMITATION);
m1684stringList_.add(I_IMPLORE);
m1684stringList_.add(I_PSYKOUD_BOUL);
m1684stringList_.add(I_RAYON_SIGNAL);
m1684stringList_.add(I_RECYCLAGE);
m1684stringList_.add(I_REFLET_MAGIK);
m1684stringList_.add(I_RONFLEMENT);
m1684stringList_.add(I_SAISIE);
m1684stringList_.add(I_TOURMAGIK);
m1684stringList_.add(I_TRICHERIE);
m1684stringList_.add(I_ZONE_MAGIQUE);
m1684pokemonData_.setMoveTutors(m1684stringList_);
Shorts m1684shorts_=new Shorts(new CollCapacity(44));
m1684shorts_.add((short)70);
m1684shorts_.add((short)3);
m1684shorts_.add((short)4);
m1684shorts_.add((short)6);
m1684shorts_.add((short)10);
m1684shorts_.add((short)12);
m1684shorts_.add((short)15);
m1684shorts_.add((short)16);
m1684shorts_.add((short)17);
m1684shorts_.add((short)18);
m1684shorts_.add((short)20);
m1684shorts_.add((short)21);
m1684shorts_.add((short)24);
m1684shorts_.add((short)27);
m1684shorts_.add((short)29);
m1684shorts_.add((short)30);
m1684shorts_.add((short)31);
m1684shorts_.add((short)32);
m1684shorts_.add((short)33);
m1684shorts_.add((short)39);
m1684shorts_.add((short)41);
m1684shorts_.add((short)42);
m1684shorts_.add((short)44);
m1684shorts_.add((short)45);
m1684shorts_.add((short)46);
m1684shorts_.add((short)47);
m1684shorts_.add((short)48);
m1684shorts_.add((short)53);
m1684shorts_.add((short)56);
m1684shorts_.add((short)57);
m1684shorts_.add((short)63);
m1684shorts_.add((short)66);
m1684shorts_.add((short)68);
m1684shorts_.add((short)73);
m1684shorts_.add((short)77);
m1684shorts_.add((short)80);
m1684shorts_.add((short)88);
m1684shorts_.add((short)85);
m1684shorts_.add((short)86);
m1684shorts_.add((short)87);
m1684shorts_.add((short)90);
m1684shorts_.add((short)92);
m1684shorts_.add((short)98);
m1684shorts_.add((short)100);
m1684pokemonData_.setTechnicalMoves(m1684shorts_);
m1684pokemonData_.setBaseEvo(I_SCRUTELLA);
m1684pokemonData_.setCatchingRate((short)50);
m1684pokemonData_.setHeight(Rate.newRate(R_3_2));
m1684pokemonData_.setExpEvo(ExpType.P);
m1684pokemonData_.setExpRate(221);
m1684stringList_=new StringList(new CollCapacity(1));
m1684stringList_.add(I_HUMANOIDE);
m1684pokemonData_.setEggGroups(m1684stringList_);
m1684pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1684pokemonData_.setHappiness((short)70);
m1684pokemonData_.setHappinessHatch((short)140);
return m1684pokemonData_;
}
static PokemonData p618(){
PokemonData m1685pokemonData_=Instances.newPokemonData();
m1685pokemonData_.setWeight(Rate.newRate(R_55));
StringList m1685stringList_=new StringList(new CollCapacity(2));
m1685stringList_.add(I_COMBAT);
m1685stringList_.add(I_FEU);
m1685pokemonData_.setTypes(m1685stringList_);
EnumMap<Statistic,StatBaseEv> m1685enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)104,(short)1));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)104,(short)1));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)71,(short)0));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)76,(short)0));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)71,(short)0));
m1685enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)108,(short)1));
m1685pokemonData_.setStatistics(m1685enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1685custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1685custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1685custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1685custListLevelMove_.add(new LevelMove((short)7,I_FLAMMECHE));
m1685custListLevelMove_.add(new LevelMove((short)9,I_PROVOC));
m1685custListLevelMove_.add(new LevelMove((short)14,I_MACH_PUNCH));
m1685custListLevelMove_.add(new LevelMove((short)16,I_COMBO_GRIFFE));
m1685custListLevelMove_.add(new LevelMove((short)19,I_ROUE_DE_FEU));
m1685custListLevelMove_.add(new LevelMove((short)26,I_RUSE));
m1685custListLevelMove_.add(new LevelMove((short)29,I_PUNITION));
m1685custListLevelMove_.add(new LevelMove((short)36,I_CLOSE_COMBAT));
m1685custListLevelMove_.add(new LevelMove((short)42,I_DANSEFLAMME));
m1685custListLevelMove_.add(new LevelMove((short)52,I_ACROBATIE));
m1685custListLevelMove_.add(new LevelMove((short)58,I_PLENITUDE));
m1685custListLevelMove_.add(new LevelMove((short)68,I_BOUTEFEU));
m1685pokemonData_.setLevMoves(m1685custListLevelMove_);
m1685pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1685stringList_=new StringList(new CollCapacity(1));
m1685stringList_.add(I_BRASIER);
m1685pokemonData_.setAbilities(m1685stringList_);
m1685stringList_=new StringList(new CollCapacity(30));
m1685stringList_.add(I_ASSISTANCE);
m1685stringList_.add(I_BALAYAGE);
m1685stringList_.add(I_BLUFF);
m1685stringList_.add(I_CANICULE);
m1685stringList_.add(I_COUD_BOUE);
m1685stringList_.add(I_COUP_D_BOULE);
m1685stringList_.add(I_DETRICANON);
m1685stringList_.add(I_DOUBLE_PIED);
m1685stringList_.add(I_EFFORT);
m1685stringList_.add(I_ENCORE);
m1685stringList_.add(I_IMITATION);
m1685stringList_.add(I_METEORES);
m1685stringList_.add(I_ONDE_VIDE);
m1685stringList_.add(I_PIED_BRULEUR);
m1685stringList_.add(I_POING_DE_FEU);
m1685stringList_.add(I_POING_ECLAIR);
m1685stringList_.add(I_PUISSANCE);
m1685stringList_.add(I_RAFALE_FEU);
m1685stringList_.add(I_RIPOSTE);
m1685stringList_.add(I_RONFLEMENT);
m1685stringList_.add(I_ROULADE);
m1685stringList_.add(I_AIRE_DE_FEU);
m1685stringList_.add(I_BLABLA_DODO);
m1685stringList_.add(I_COUP_D_MAIN);
m1685stringList_.add(I_DOUBLE_BAFFE);
m1685stringList_.add(I_IMPLORE);
m1685stringList_.add(I_PIEGE_DE_ROC);
m1685stringList_.add(I_QUEUE_DE_FER);
m1685stringList_.add(I_COUPE);
m1685stringList_.add(I_FORCE);
m1685pokemonData_.setMoveTutors(m1685stringList_);
Shorts m1685shorts_=new Shorts(new CollCapacity(2));
m1685shorts_.add((short)1);
m1685shorts_.add((short)4);
m1685pokemonData_.setHiddenMoves(m1685shorts_);
m1685shorts_=new Shorts(new CollCapacity(50));
m1685shorts_.add((short)94);
m1685shorts_.add((short)1);
m1685shorts_.add((short)4);
m1685shorts_.add((short)5);
m1685shorts_.add((short)6);
m1685shorts_.add((short)8);
m1685shorts_.add((short)10);
m1685shorts_.add((short)11);
m1685shorts_.add((short)12);
m1685shorts_.add((short)15);
m1685shorts_.add((short)17);
m1685shorts_.add((short)21);
m1685shorts_.add((short)22);
m1685shorts_.add((short)26);
m1685shorts_.add((short)27);
m1685shorts_.add((short)28);
m1685shorts_.add((short)31);
m1685shorts_.add((short)32);
m1685shorts_.add((short)35);
m1685shorts_.add((short)38);
m1685shorts_.add((short)39);
m1685shorts_.add((short)40);
m1685shorts_.add((short)41);
m1685shorts_.add((short)42);
m1685shorts_.add((short)43);
m1685shorts_.add((short)44);
m1685shorts_.add((short)45);
m1685shorts_.add((short)47);
m1685shorts_.add((short)48);
m1685shorts_.add((short)50);
m1685shorts_.add((short)52);
m1685shorts_.add((short)56);
m1685shorts_.add((short)59);
m1685shorts_.add((short)61);
m1685shorts_.add((short)62);
m1685shorts_.add((short)65);
m1685shorts_.add((short)67);
m1685shorts_.add((short)68);
m1685shorts_.add((short)71);
m1685shorts_.add((short)75);
m1685shorts_.add((short)78);
m1685shorts_.add((short)80);
m1685shorts_.add((short)88);
m1685shorts_.add((short)84);
m1685shorts_.add((short)86);
m1685shorts_.add((short)87);
m1685shorts_.add((short)89);
m1685shorts_.add((short)90);
m1685shorts_.add((short)98);
m1685shorts_.add((short)100);
m1685pokemonData_.setTechnicalMoves(m1685shorts_);
m1685pokemonData_.setBaseEvo(I_OUISTICRAM);
m1685pokemonData_.setCatchingRate((short)45);
m1685pokemonData_.setHeight(Rate.newRate(R_6_5));
m1685pokemonData_.setExpEvo(ExpType.P);
m1685pokemonData_.setExpRate(240);
m1685stringList_=new StringList(new CollCapacity(2));
m1685stringList_.add(I_HUMANOIDE);
m1685stringList_.add(I_SOL);
m1685pokemonData_.setEggGroups(m1685stringList_);
m1685pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1685pokemonData_.setHappiness((short)70);
m1685pokemonData_.setHappinessHatch((short)140);
return m1685pokemonData_;
}
static PokemonData p619(){
PokemonData m1686pokemonData_=Instances.newPokemonData();
m1686pokemonData_.setWeight(Rate.newRate(R_38));
StringList m1686stringList_=new StringList(new CollCapacity(1));
m1686stringList_.add(I_ROCHE);
m1686pokemonData_.setTypes(m1686stringList_);
EnumMap<Statistic,StatBaseEv> m1686enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)30,(short)0));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)115,(short)2));
m1686enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1686pokemonData_.setStatistics(m1686enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1686custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1686custListLevelMove_.add(new LevelMove((short)1,I_MARTOBOIS));
m1686custListLevelMove_.add(new LevelMove((short)1,I_PHOTOCOPIE));
m1686custListLevelMove_.add(new LevelMove((short)5,I_FLEAU));
m1686custListLevelMove_.add(new LevelMove((short)8,I_BALAYAGE));
m1686custListLevelMove_.add(new LevelMove((short)12,I_JET_PIERRES));
m1686custListLevelMove_.add(new LevelMove((short)15,I_COPIE));
m1686custListLevelMove_.add(new LevelMove((short)15,I_SOUPLESSE));
m1686custListLevelMove_.add(new LevelMove((short)19,I_FEINTE));
m1686custListLevelMove_.add(new LevelMove((short)22,I_TOMBEROCHE));
m1686custListLevelMove_.add(new LevelMove((short)26,I_BARRAGE));
m1686custListLevelMove_.add(new LevelMove((short)29,I_EBOULEMENT));
m1686custListLevelMove_.add(new LevelMove((short)33,I_RIPOSTE));
m1686custListLevelMove_.add(new LevelMove((short)36,I_COUP_BAS));
m1686custListLevelMove_.add(new LevelMove((short)40,I_DAMOCLES));
m1686custListLevelMove_.add(new LevelMove((short)43,I_LAME_DE_ROC));
m1686custListLevelMove_.add(new LevelMove((short)47,I_MARTO_POING));
m1686pokemonData_.setLevMoves(m1686custListLevelMove_);
m1686pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1686stringList_=new StringList(new CollCapacity(2));
m1686stringList_.add(I_TETE_DE_ROC);
m1686stringList_.add(I_FERMETE);
m1686pokemonData_.setAbilities(m1686stringList_);
m1686stringList_=new StringList(new CollCapacity(38));
m1686stringList_.add(I_ARMURE);
m1686stringList_.add(I_BALAYAGE);
m1686stringList_.add(I_BARRAGE);
m1686stringList_.add(I_BLABLA_DODO);
m1686stringList_.add(I_BOOST);
m1686stringList_.add(I_BOUL_ARMURE);
m1686stringList_.add(I_CLONAGE);
m1686stringList_.add(I_COPIE);
m1686stringList_.add(I_COUD_BOUE);
m1686stringList_.add(I_COUP_BAS);
m1686stringList_.add(I_COUP_D_BOULE);
m1686stringList_.add(I_DAMOCLES);
m1686stringList_.add(I_DESTRUCTION);
m1686stringList_.add(I_DYNAMOPOING);
m1686stringList_.add(I_EBOULEMENT);
m1686stringList_.add(I_EXPLOSION);
m1686stringList_.add(I_FRAPPE_ATLAS);
m1686stringList_.add(I_IMITATION);
m1686stringList_.add(I_PLAQUAGE);
m1686stringList_.add(I_POING_DE_FEU);
m1686stringList_.add(I_POING_ECLAIR);
m1686stringList_.add(I_POINGLACE);
m1686stringList_.add(I_RIPOSTE);
m1686stringList_.add(I_RONFLEMENT);
m1686stringList_.add(I_ROULADE);
m1686stringList_.add(I_TELLURIFORCE);
m1686stringList_.add(I_TENACITE);
m1686stringList_.add(I_TOURBI_SABLE);
m1686stringList_.add(I_ULTIMAPOING);
m1686stringList_.add(I_ULTIMAWASHI);
m1686stringList_.add(I_VANTARDISE);
m1686stringList_.add(I_APRES_VOUS);
m1686stringList_.add(I_COUP_D_MAIN);
m1686stringList_.add(I_IMPLORE);
m1686stringList_.add(I_MALEDICTION);
m1686stringList_.add(I_PIEGE_DE_ROC);
m1686stringList_.add(I_TRICHERIE);
m1686stringList_.add(I_FORCE);
m1686pokemonData_.setMoveTutors(m1686stringList_);
Shorts m1686shorts_=new Shorts(new CollCapacity(1));
m1686shorts_.add((short)4);
m1686pokemonData_.setHiddenMoves(m1686shorts_);
m1686shorts_=new Shorts(new CollCapacity(35));
m1686shorts_.add((short)94);
m1686shorts_.add((short)4);
m1686shorts_.add((short)6);
m1686shorts_.add((short)10);
m1686shorts_.add((short)11);
m1686shorts_.add((short)12);
m1686shorts_.add((short)17);
m1686shorts_.add((short)21);
m1686shorts_.add((short)23);
m1686shorts_.add((short)26);
m1686shorts_.add((short)27);
m1686shorts_.add((short)28);
m1686shorts_.add((short)31);
m1686shorts_.add((short)32);
m1686shorts_.add((short)37);
m1686shorts_.add((short)39);
m1686shorts_.add((short)41);
m1686shorts_.add((short)42);
m1686shorts_.add((short)44);
m1686shorts_.add((short)45);
m1686shorts_.add((short)46);
m1686shorts_.add((short)48);
m1686shorts_.add((short)56);
m1686shorts_.add((short)64);
m1686shorts_.add((short)69);
m1686shorts_.add((short)71);
m1686shorts_.add((short)77);
m1686shorts_.add((short)78);
m1686shorts_.add((short)80);
m1686shorts_.add((short)88);
m1686shorts_.add((short)87);
m1686shorts_.add((short)90);
m1686shorts_.add((short)96);
m1686shorts_.add((short)98);
m1686shorts_.add((short)100);
m1686pokemonData_.setTechnicalMoves(m1686shorts_);
m1686pokemonData_.setBaseEvo(I_MANZAI);
m1686pokemonData_.setCatchingRate((short)65);
m1686pokemonData_.setHeight(Rate.newRate(R_6_5));
m1686pokemonData_.setExpEvo(ExpType.P);
m1686pokemonData_.setExpRate(144);
m1686stringList_=new StringList(new CollCapacity(1));
m1686stringList_.add(I_MINERAL);
m1686pokemonData_.setEggGroups(m1686stringList_);
m1686pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1686pokemonData_.setHappiness((short)70);
m1686pokemonData_.setHappinessHatch((short)140);
return m1686pokemonData_;
}
static PokemonData p620(){
PokemonData m1687pokemonData_=Instances.newPokemonData();
m1687pokemonData_.setWeight(Rate.newRate(R_15));
StringList m1687stringList_=new StringList(new CollCapacity(1));
m1687stringList_.add(I_SPECTRE);
m1687pokemonData_.setTypes(m1687stringList_);
EnumMap<Statistic,StatBaseEv> m1687enumMapStatisticStatBaseEv_ = new EnumMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)40,(short)0));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)30,(short)0));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)90,(short)1));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)20,(short)0));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)90,(short)0));
m1687enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)25,(short)0));
m1687pokemonData_.setStatistics(m1687enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1687custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1687custListLevelMove_.add(new LevelMove((short)1,I_OMBRE_NOCTURNE));
m1687custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1687custListLevelMove_.add(new LevelMove((short)6,I_ENTRAVE));
m1687custListLevelMove_.add(new LevelMove((short)9,I_CLAIRVOYANCE));
m1687custListLevelMove_.add(new LevelMove((short)14,I_ETONNEMENT));
m1687custListLevelMove_.add(new LevelMove((short)17,I_ONDE_FOLIE));
m1687custListLevelMove_.add(new LevelMove((short)22,I_OMBRE_PORTEE));
m1687custListLevelMove_.add(new LevelMove((short)25,I_POURSUITE));
m1687custListLevelMove_.add(new LevelMove((short)30,I_MALEDICTION));
m1687custListLevelMove_.add(new LevelMove((short)33,I_FEU_FOLLET));
m1687custListLevelMove_.add(new LevelMove((short)38,I_CHATIMENT));
m1687custListLevelMove_.add(new LevelMove((short)41,I_REGARD_NOIR));
m1687custListLevelMove_.add(new LevelMove((short)46,I_REPRESAILLES));
m1687custListLevelMove_.add(new LevelMove((short)49,I_PRESCIENCE));
m1687pokemonData_.setLevMoves(m1687custListLevelMove_);
m1687pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1687stringList_=new StringList(new CollCapacity(1));
m1687stringList_.add(I_LEVITATION);
m1687pokemonData_.setAbilities(m1687stringList_);
m1687stringList_=new StringList(new CollCapacity(27));
m1687stringList_.add(I_BALANCE);
m1687stringList_.add(I_BLABLA_DODO);
m1687stringList_.add(I_BOOST);
m1687stringList_.add(I_CLONAGE);
m1687stringList_.add(I_COPIE);
m1687stringList_.add(I_COUP_D_BOULE);
m1687stringList_.add(I_DAMOCLES);
m1687stringList_.add(I_DEPIT);
m1687stringList_.add(I_DEVOREVE);
m1687stringList_.add(I_FEINTE);
m1687stringList_.add(I_GRAVITE);
m1687stringList_.add(I_PLAQUAGE);
m1687stringList_.add(I_POSSESSIF);
m1687stringList_.add(I_RONFLEMENT);
m1687stringList_.add(I_SOUVENIR);
m1687stringList_.add(I_TENACITE);
m1687stringList_.add(I_VANTARDISE);
m1687stringList_.add(I_VENT_GLACE);
m1687stringList_.add(I_VENT_MAUVAIS);
m1687stringList_.add(I_BUEE_NOIRE);
m1687stringList_.add(I_ECHANGE);
m1687stringList_.add(I_PRLVT_DESTIN);
m1687stringList_.add(I_RANCUNE);
m1687stringList_.add(I_SAISIE);
m1687stringList_.add(I_TOURMAGIK);
m1687stringList_.add(I_VIBROBSCUR);
m1687stringList_.add(I_ZONE_ETRANGE);
m1687pokemonData_.setMoveTutors(m1687stringList_);
Shorts m1687shorts_=new Shorts(new CollCapacity(35));
m1687shorts_.add((short)70);
m1687shorts_.add((short)4);
m1687shorts_.add((short)6);
m1687shorts_.add((short)10);
m1687shorts_.add((short)11);
m1687shorts_.add((short)12);
m1687shorts_.add((short)13);
m1687shorts_.add((short)14);
m1687shorts_.add((short)17);
m1687shorts_.add((short)18);
m1687shorts_.add((short)21);
m1687shorts_.add((short)27);
m1687shorts_.add((short)29);
m1687shorts_.add((short)30);
m1687shorts_.add((short)32);
m1687shorts_.add((short)41);
m1687shorts_.add((short)42);
m1687shorts_.add((short)44);
m1687shorts_.add((short)45);
m1687shorts_.add((short)46);
m1687shorts_.add((short)48);
m1687shorts_.add((short)56);
m1687shorts_.add((short)57);
m1687shorts_.add((short)61);
m1687shorts_.add((short)63);
m1687shorts_.add((short)66);
m1687shorts_.add((short)77);
m1687shorts_.add((short)97);
m1687shorts_.add((short)88);
m1687shorts_.add((short)83);
m1687shorts_.add((short)85);
m1687shorts_.add((short)87);
m1687shorts_.add((short)90);
m1687shorts_.add((short)92);
m1687shorts_.add((short)100);
m1687pokemonData_.setTechnicalMoves(m1687shorts_);
m1687pokemonData_.setBaseEvo(I_SKELENOX);
StringMap<Evolution> m1687stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1687evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1687evolutionLevelSimple_.setLevel((short)37);
m1687stringMapEvolution_.addEntry(I_TERACLOPE,m1687evolutionLevelSimple_);
m1687pokemonData_.setEvolutions(m1687stringMapEvolution_);
m1687pokemonData_.setCatchingRate((short)190);
m1687pokemonData_.setHeight(Rate.newRate(R_4_5));
m1687pokemonData_.setExpEvo(ExpType.R);
m1687pokemonData_.setExpRate(59);
m1687stringList_=new StringList(new CollCapacity(1));
m1687stringList_.add(I_INDETERMINE);
m1687pokemonData_.setEggGroups(m1687stringList_);
m1687pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6400));
m1687pokemonData_.setHappiness((short)70);
m1687pokemonData_.setHappinessHatch((short)140);
return m1687pokemonData_;
}
}
