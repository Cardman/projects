package aiki.sml.init;
import aiki.instances.*;
import aiki.fight.util.*;
import aiki.fight.enums.*;
import aiki.fight.pokemon.*;
import aiki.fight.pokemon.evolution.*;
import aiki.fight.pokemon.enums.*;
import aiki.map.pokemon.enums.*;
import code.maths.*;
import code.util.*;
final class PkInit9 extends CstIgame{
private PkInit9(){}
static PokemonData p243(){
PokemonData m1973pokemonData_=Instances.newPokemonData();
m1973pokemonData_.setWeight(Rate.newRate(R_21_2));
StringList m1973stringList_=new StringList(new CollCapacity(2));
m1973stringList_.add(I_NORMAL);
m1973stringList_.add(I_VOL);
m1973pokemonData_.setTypes(m1973stringList_);
IdMap<Statistic,StatBaseEv> m1973enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)83,(short)1));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)37,(short)0));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)50,(short)0));
m1973enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)60,(short)0));
m1973pokemonData_.setStatistics(m1973enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1973custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1973custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1973custListLevelMove_.add(new LevelMove((short)1,I_PICPIC));
m1973custListLevelMove_.add(new LevelMove((short)5,I_FURIE));
m1973custListLevelMove_.add(new LevelMove((short)10,I_CRU_AILE));
m1973custListLevelMove_.add(new LevelMove((short)14,I_AIGUISAGE));
m1973custListLevelMove_.add(new LevelMove((short)19,I_GRIMACE));
m1973custListLevelMove_.add(new LevelMove((short)23,I_AEROPIQUE));
m1973custListLevelMove_.add(new LevelMove((short)28,I_TRANCHE));
m1973custListLevelMove_.add(new LevelMove((short)32,I_ANTI_BRUME));
m1973custListLevelMove_.add(new LevelMove((short)37,I_VENT_ARRIERE));
m1973custListLevelMove_.add(new LevelMove((short)41,I_LAME_D_AIR));
m1973custListLevelMove_.add(new LevelMove((short)46,I_ECLATEGRIFFE));
m1973custListLevelMove_.add(new LevelMove((short)50,I_CHUTE_LIBRE));
m1973custListLevelMove_.add(new LevelMove((short)55,I_CYCLONE));
m1973custListLevelMove_.add(new LevelMove((short)59,I_RAPACE));
m1973custListLevelMove_.add(new LevelMove((short)64,I_MANIA));
m1973pokemonData_.setLevMoves(m1973custListLevelMove_);
m1973pokemonData_.setGenderRep(GenderRepartition.MALE);
m1973stringList_=new StringList(new CollCapacity(3));
m1973stringList_.add(I_REGARD_VIF);
m1973stringList_.add(I_SANS_LIMITE);
m1973stringList_.add(I_AGITATION);
m1973pokemonData_.setAbilities(m1973stringList_);
m1973stringList_=new StringList(new CollCapacity(9));
m1973stringList_.add(I_ATTERRISSAGE);
m1973stringList_.add(I_BLABLA_DODO);
m1973stringList_.add(I_CANICULE);
m1973stringList_.add(I_RONFLEMENT);
m1973stringList_.add(I_SURPUISSANCE);
m1973stringList_.add(I_VENT_ARRIERE);
m1973stringList_.add(I_COUPE);
m1973stringList_.add(I_ENVOL);
m1973stringList_.add(I_FORCE);
m1973pokemonData_.setMoveTutors(m1973stringList_);
Shorts m1973shorts_=new Shorts(new CollCapacity(3));
m1973shorts_.add((short)1);
m1973shorts_.add((short)2);
m1973shorts_.add((short)4);
m1973pokemonData_.setHiddenMoves(m1973shorts_);
m1973shorts_=new Shorts(new CollCapacity(28));
m1973shorts_.add((short)94);
m1973shorts_.add((short)1);
m1973shorts_.add((short)6);
m1973shorts_.add((short)8);
m1973shorts_.add((short)10);
m1973shorts_.add((short)11);
m1973shorts_.add((short)17);
m1973shorts_.add((short)18);
m1973shorts_.add((short)19);
m1973shorts_.add((short)21);
m1973shorts_.add((short)27);
m1973shorts_.add((short)32);
m1973shorts_.add((short)39);
m1973shorts_.add((short)40);
m1973shorts_.add((short)42);
m1973shorts_.add((short)44);
m1973shorts_.add((short)45);
m1973shorts_.add((short)51);
m1973shorts_.add((short)48);
m1973shorts_.add((short)58);
m1973shorts_.add((short)65);
m1973shorts_.add((short)67);
m1973shorts_.add((short)80);
m1973shorts_.add((short)88);
m1973shorts_.add((short)87);
m1973shorts_.add((short)89);
m1973shorts_.add((short)90);
m1973shorts_.add((short)100);
m1973pokemonData_.setTechnicalMoves(m1973shorts_);
m1973pokemonData_.setBaseEvo(I_FURAIGLON);
StringMap<Evolution> m1973stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1973evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1973evolutionLevelSimple_.setLevel((short)54);
m1973stringMapEvolution_.addEntry(I_GUERIAIGLE,m1973evolutionLevelSimple_);
m1973pokemonData_.setEvolutions(m1973stringMapEvolution_);
m1973pokemonData_.setCatchingRate((short)190);
m1973pokemonData_.setHeight(Rate.newRate(R_1_2));
m1973pokemonData_.setExpEvo(ExpType.L);
m1973pokemonData_.setExpRate(70);
m1973stringList_=new StringList(new CollCapacity(1));
m1973stringList_.add(I_VOL);
m1973pokemonData_.setEggGroups(m1973stringList_);
m1973pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1973pokemonData_.setHappiness((short)70);
m1973pokemonData_.setHappinessHatch((short)140);
return m1973pokemonData_;
}
static PokemonData p244(){
PokemonData m1974pokemonData_=Instances.newPokemonData();
m1974pokemonData_.setWeight(Rate.newRate(R_120));
StringList m1974stringList_=new StringList(new CollCapacity(2));
m1974stringList_.add(I_ACIER);
m1974stringList_.add(I_ROCHE);
m1974pokemonData_.setTypes(m1974stringList_);
IdMap<Statistic,StatBaseEv> m1974enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)90,(short)0));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)140,(short)2));
m1974enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1974pokemonData_.setStatistics(m1974enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1974custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1974custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1974custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1974custListLevelMove_.add(new LevelMove((short)4,I_COUD_BOUE));
m1974custListLevelMove_.add(new LevelMove((short)8,I_COUP_D_BOULE));
m1974custListLevelMove_.add(new LevelMove((short)11,I_GRIFFE_ACIER));
m1974custListLevelMove_.add(new LevelMove((short)15,I_MUR_DE_FER));
m1974custListLevelMove_.add(new LevelMove((short)18,I_HURLEMENT));
m1974custListLevelMove_.add(new LevelMove((short)22,I_BELIER));
m1974custListLevelMove_.add(new LevelMove((short)25,I_TETE_DE_FER));
m1974custListLevelMove_.add(new LevelMove((short)29,I_ABRI));
m1974custListLevelMove_.add(new LevelMove((short)34,I_STRIDO_SON));
m1974custListLevelMove_.add(new LevelMove((short)40,I_QUEUE_DE_FER));
m1974custListLevelMove_.add(new LevelMove((short)45,I_ALLEGEMENT));
m1974custListLevelMove_.add(new LevelMove((short)51,I_TACLE_LOURD));
m1974custListLevelMove_.add(new LevelMove((short)56,I_DAMOCLES));
m1974custListLevelMove_.add(new LevelMove((short)62,I_FULMIFER));
m1974pokemonData_.setLevMoves(m1974custListLevelMove_);
m1974pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1974stringList_=new StringList(new CollCapacity(2));
m1974stringList_.add(I_TETE_DE_ROC);
m1974stringList_.add(I_FERMETE);
m1974pokemonData_.setAbilities(m1974stringList_);
m1974stringList_=new StringList(new CollCapacity(33));
m1974stringList_.add(I_BLABLA_DODO);
m1974stringList_.add(I_BOUL_ARMURE);
m1974stringList_.add(I_BROUHAHA);
m1974stringList_.add(I_CLONAGE);
m1974stringList_.add(I_COPIE);
m1974stringList_.add(I_COUD_BOUE);
m1974stringList_.add(I_COUP_D_BOULE);
m1974stringList_.add(I_DAMOCLES);
m1974stringList_.add(I_DEPIT);
m1974stringList_.add(I_DRACOCHARGE);
m1974stringList_.add(I_EBOULEMENT);
m1974stringList_.add(I_ECRASEMENT);
m1974stringList_.add(I_EFFORT);
m1974stringList_.add(I_FRACASS_TETE);
m1974stringList_.add(I_GRINCEMENT);
m1974stringList_.add(I_MALEDICTION);
m1974stringList_.add(I_MUR_DE_FER);
m1974stringList_.add(I_PLAQUAGE);
m1974stringList_.add(I_POUV_ANTIQUE);
m1974stringList_.add(I_RONFLEMENT);
m1974stringList_.add(I_ROULADE);
m1974stringList_.add(I_STIMULANT);
m1974stringList_.add(I_SURPUISSANCE);
m1974stringList_.add(I_TAILLADE);
m1974stringList_.add(I_TELLURIFORCE);
m1974stringList_.add(I_TENACITE);
m1974stringList_.add(I_TETE_DE_FER);
m1974stringList_.add(I_VANTARDISE);
m1974stringList_.add(I_VOL_MAGNETIK);
m1974stringList_.add(I_PIEGE_DE_ROC);
m1974stringList_.add(I_QUEUE_DE_FER);
m1974stringList_.add(I_COUPE);
m1974stringList_.add(I_FORCE);
m1974pokemonData_.setMoveTutors(m1974stringList_);
Shorts m1974shorts_=new Shorts(new CollCapacity(2));
m1974shorts_.add((short)1);
m1974shorts_.add((short)4);
m1974pokemonData_.setHiddenMoves(m1974shorts_);
m1974shorts_=new Shorts(new CollCapacity(29));
m1974shorts_.add((short)94);
m1974shorts_.add((short)1);
m1974shorts_.add((short)5);
m1974shorts_.add((short)6);
m1974shorts_.add((short)10);
m1974shorts_.add((short)11);
m1974shorts_.add((short)17);
m1974shorts_.add((short)18);
m1974shorts_.add((short)21);
m1974shorts_.add((short)26);
m1974shorts_.add((short)27);
m1974shorts_.add((short)28);
m1974shorts_.add((short)32);
m1974shorts_.add((short)37);
m1974shorts_.add((short)39);
m1974shorts_.add((short)40);
m1974shorts_.add((short)42);
m1974shorts_.add((short)44);
m1974shorts_.add((short)45);
m1974shorts_.add((short)48);
m1974shorts_.add((short)65);
m1974shorts_.add((short)69);
m1974shorts_.add((short)71);
m1974shorts_.add((short)78);
m1974shorts_.add((short)80);
m1974shorts_.add((short)88);
m1974shorts_.add((short)87);
m1974shorts_.add((short)90);
m1974shorts_.add((short)100);
m1974pokemonData_.setTechnicalMoves(m1974shorts_);
m1974pokemonData_.setBaseEvo(I_GALEKID);
StringMap<Evolution> m1974stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1974evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1974evolutionLevelSimple_.setLevel((short)42);
m1974stringMapEvolution_.addEntry(I_GALEKING,m1974evolutionLevelSimple_);
m1974pokemonData_.setEvolutions(m1974stringMapEvolution_);
m1974pokemonData_.setCatchingRate((short)90);
m1974pokemonData_.setHeight(Rate.newRate(R_9_10));
m1974pokemonData_.setExpEvo(ExpType.L);
m1974pokemonData_.setExpRate(151);
m1974stringList_=new StringList(new CollCapacity(1));
m1974stringList_.add(I_MONSTRE);
m1974pokemonData_.setEggGroups(m1974stringList_);
m1974pokemonData_.setHatchingSteps(LgInt.newLgInt(R_8960));
m1974pokemonData_.setHappiness((short)70);
m1974pokemonData_.setHappinessHatch((short)140);
return m1974pokemonData_;
}
static PokemonData p245(){
PokemonData m1975pokemonData_=Instances.newPokemonData();
m1975pokemonData_.setWeight(Rate.newRate(R_60));
StringList m1975stringList_=new StringList(new CollCapacity(2));
m1975stringList_.add(I_ACIER);
m1975stringList_.add(I_ROCHE);
m1975pokemonData_.setTypes(m1975stringList_);
IdMap<Statistic,StatBaseEv> m1975enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)70,(short)0));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)100,(short)1));
m1975enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1975pokemonData_.setStatistics(m1975enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1975custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1975custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1975custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1975custListLevelMove_.add(new LevelMove((short)4,I_COUD_BOUE));
m1975custListLevelMove_.add(new LevelMove((short)8,I_COUP_D_BOULE));
m1975custListLevelMove_.add(new LevelMove((short)11,I_GRIFFE_ACIER));
m1975custListLevelMove_.add(new LevelMove((short)15,I_MUR_DE_FER));
m1975custListLevelMove_.add(new LevelMove((short)18,I_HURLEMENT));
m1975custListLevelMove_.add(new LevelMove((short)22,I_BELIER));
m1975custListLevelMove_.add(new LevelMove((short)25,I_TETE_DE_FER));
m1975custListLevelMove_.add(new LevelMove((short)29,I_ABRI));
m1975custListLevelMove_.add(new LevelMove((short)32,I_STRIDO_SON));
m1975custListLevelMove_.add(new LevelMove((short)36,I_QUEUE_DE_FER));
m1975custListLevelMove_.add(new LevelMove((short)39,I_ALLEGEMENT));
m1975custListLevelMove_.add(new LevelMove((short)43,I_TACLE_LOURD));
m1975custListLevelMove_.add(new LevelMove((short)46,I_DAMOCLES));
m1975custListLevelMove_.add(new LevelMove((short)50,I_FULMIFER));
m1975pokemonData_.setLevMoves(m1975custListLevelMove_);
m1975pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1975stringList_=new StringList(new CollCapacity(2));
m1975stringList_.add(I_TETE_DE_ROC);
m1975stringList_.add(I_FERMETE);
m1975pokemonData_.setAbilities(m1975stringList_);
m1975stringList_=new StringList(new CollCapacity(34));
m1975stringList_.add(I_BLABLA_DODO);
m1975stringList_.add(I_BOUL_ARMURE);
m1975stringList_.add(I_BROUHAHA);
m1975stringList_.add(I_CLONAGE);
m1975stringList_.add(I_COPIE);
m1975stringList_.add(I_COUD_BOUE);
m1975stringList_.add(I_COUP_D_BOULE);
m1975stringList_.add(I_DAMOCLES);
m1975stringList_.add(I_DEPIT);
m1975stringList_.add(I_DRACOCHARGE);
m1975stringList_.add(I_EBOULEMENT);
m1975stringList_.add(I_ECRASEMENT);
m1975stringList_.add(I_EFFORT);
m1975stringList_.add(I_FRACASS_TETE);
m1975stringList_.add(I_GRINCEMENT);
m1975stringList_.add(I_MALEDICTION);
m1975stringList_.add(I_MUR_DE_FER);
m1975stringList_.add(I_PLAQUAGE);
m1975stringList_.add(I_POUV_ANTIQUE);
m1975stringList_.add(I_RONFLEMENT);
m1975stringList_.add(I_ROULADE);
m1975stringList_.add(I_STIMULANT);
m1975stringList_.add(I_SURPUISSANCE);
m1975stringList_.add(I_TAILLADE);
m1975stringList_.add(I_TELLURIFORCE);
m1975stringList_.add(I_TENACITE);
m1975stringList_.add(I_TETE_DE_FER);
m1975stringList_.add(I_VANTARDISE);
m1975stringList_.add(I_VOL_MAGNETIK);
m1975stringList_.add(I_CONTRE);
m1975stringList_.add(I_PIEGE_DE_ROC);
m1975stringList_.add(I_QUEUE_DE_FER);
m1975stringList_.add(I_COUPE);
m1975stringList_.add(I_FORCE);
m1975pokemonData_.setMoveTutors(m1975stringList_);
Shorts m1975shorts_=new Shorts(new CollCapacity(2));
m1975shorts_.add((short)1);
m1975shorts_.add((short)4);
m1975pokemonData_.setHiddenMoves(m1975shorts_);
m1975shorts_=new Shorts(new CollCapacity(28));
m1975shorts_.add((short)94);
m1975shorts_.add((short)1);
m1975shorts_.add((short)5);
m1975shorts_.add((short)6);
m1975shorts_.add((short)10);
m1975shorts_.add((short)11);
m1975shorts_.add((short)17);
m1975shorts_.add((short)18);
m1975shorts_.add((short)21);
m1975shorts_.add((short)26);
m1975shorts_.add((short)27);
m1975shorts_.add((short)28);
m1975shorts_.add((short)32);
m1975shorts_.add((short)37);
m1975shorts_.add((short)39);
m1975shorts_.add((short)40);
m1975shorts_.add((short)42);
m1975shorts_.add((short)44);
m1975shorts_.add((short)45);
m1975shorts_.add((short)48);
m1975shorts_.add((short)65);
m1975shorts_.add((short)69);
m1975shorts_.add((short)78);
m1975shorts_.add((short)80);
m1975shorts_.add((short)88);
m1975shorts_.add((short)87);
m1975shorts_.add((short)90);
m1975shorts_.add((short)100);
m1975pokemonData_.setTechnicalMoves(m1975shorts_);
m1975pokemonData_.setBaseEvo(I_GALEKID);
StringMap<Evolution> m1975stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1975evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1975evolutionLevelSimple_.setLevel((short)32);
m1975stringMapEvolution_.addEntry(I_GALEGON,m1975evolutionLevelSimple_);
m1975pokemonData_.setEvolutions(m1975stringMapEvolution_);
m1975pokemonData_.setCatchingRate((short)180);
m1975pokemonData_.setHeight(Rate.newRate(R_2_5));
m1975pokemonData_.setExpEvo(ExpType.L);
m1975pokemonData_.setExpRate(66);
m1975stringList_=new StringList(new CollCapacity(1));
m1975stringList_.add(I_MONSTRE);
m1975pokemonData_.setEggGroups(m1975stringList_);
m1975pokemonData_.setHatchingSteps(LgInt.newLgInt(R_8960));
m1975pokemonData_.setHappiness((short)70);
m1975pokemonData_.setHappinessHatch((short)140);
return m1975pokemonData_;
}
static PokemonData p246(){
PokemonData m1976pokemonData_=Instances.newPokemonData();
m1976pokemonData_.setWeight(Rate.newRate(R_360));
StringList m1976stringList_=new StringList(new CollCapacity(2));
m1976stringList_.add(I_ACIER);
m1976stringList_.add(I_ROCHE);
m1976pokemonData_.setTypes(m1976stringList_);
IdMap<Statistic,StatBaseEv> m1976enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)110,(short)0));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)180,(short)3));
m1976enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)50,(short)0));
m1976pokemonData_.setStatistics(m1976enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1976custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1976custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1976custListLevelMove_.add(new LevelMove((short)1,I_ARMURE));
m1976custListLevelMove_.add(new LevelMove((short)4,I_COUD_BOUE));
m1976custListLevelMove_.add(new LevelMove((short)8,I_COUP_D_BOULE));
m1976custListLevelMove_.add(new LevelMove((short)11,I_GRIFFE_ACIER));
m1976custListLevelMove_.add(new LevelMove((short)15,I_MUR_DE_FER));
m1976custListLevelMove_.add(new LevelMove((short)18,I_HURLEMENT));
m1976custListLevelMove_.add(new LevelMove((short)22,I_BELIER));
m1976custListLevelMove_.add(new LevelMove((short)25,I_TETE_DE_FER));
m1976custListLevelMove_.add(new LevelMove((short)29,I_ABRI));
m1976custListLevelMove_.add(new LevelMove((short)34,I_STRIDO_SON));
m1976custListLevelMove_.add(new LevelMove((short)40,I_QUEUE_DE_FER));
m1976custListLevelMove_.add(new LevelMove((short)48,I_ALLEGEMENT));
m1976custListLevelMove_.add(new LevelMove((short)57,I_TACLE_LOURD));
m1976custListLevelMove_.add(new LevelMove((short)65,I_DAMOCLES));
m1976custListLevelMove_.add(new LevelMove((short)74,I_FULMIFER));
m1976pokemonData_.setLevMoves(m1976custListLevelMove_);
m1976pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1976stringList_=new StringList(new CollCapacity(2));
m1976stringList_.add(I_TETE_DE_ROC);
m1976stringList_.add(I_FERMETE);
m1976pokemonData_.setAbilities(m1976stringList_);
m1976stringList_=new StringList(new CollCapacity(50));
m1976stringList_.add(I_BALAYAGE);
m1976stringList_.add(I_BARRAGE);
m1976stringList_.add(I_BLABLA_DODO);
m1976stringList_.add(I_BOUL_ARMURE);
m1976stringList_.add(I_BROUHAHA);
m1976stringList_.add(I_CAGE_ECLAIR);
m1976stringList_.add(I_CLONAGE);
m1976stringList_.add(I_COLERE);
m1976stringList_.add(I_COPIE);
m1976stringList_.add(I_COUD_BOUE);
m1976stringList_.add(I_COUP_D_BOULE);
m1976stringList_.add(I_DAMOCLES);
m1976stringList_.add(I_DEPIT);
m1976stringList_.add(I_DRACOCHARGE);
m1976stringList_.add(I_DYNAMOPOING);
m1976stringList_.add(I_EBOULEMENT);
m1976stringList_.add(I_ECRASEMENT);
m1976stringList_.add(I_EFFORT);
m1976stringList_.add(I_FRACASS_TETE);
m1976stringList_.add(I_FRAPPE_ATLAS);
m1976stringList_.add(I_GRINCEMENT);
m1976stringList_.add(I_HYDROQUEUE);
m1976stringList_.add(I_MALEDICTION);
m1976stringList_.add(I_MUR_DE_FER);
m1976stringList_.add(I_PLAQUAGE);
m1976stringList_.add(I_POING_DE_FEU);
m1976stringList_.add(I_POING_ECLAIR);
m1976stringList_.add(I_POINGLACE);
m1976stringList_.add(I_POUV_ANTIQUE);
m1976stringList_.add(I_RIPOSTE);
m1976stringList_.add(I_RONFLEMENT);
m1976stringList_.add(I_ROULADE);
m1976stringList_.add(I_STIMULANT);
m1976stringList_.add(I_SURPUISSANCE);
m1976stringList_.add(I_TAILLADE);
m1976stringList_.add(I_TELLURIFORCE);
m1976stringList_.add(I_TENACITE);
m1976stringList_.add(I_TETE_DE_FER);
m1976stringList_.add(I_ULTIMAPOING);
m1976stringList_.add(I_ULTIMAWASHI);
m1976stringList_.add(I_VANTARDISE);
m1976stringList_.add(I_VENT_GLACE);
m1976stringList_.add(I_VOL_MAGNETIK);
m1976stringList_.add(I_DRACOCHOC);
m1976stringList_.add(I_PIEGE_DE_ROC);
m1976stringList_.add(I_QUEUE_DE_FER);
m1976stringList_.add(I_VIBROBSCUR);
m1976stringList_.add(I_COUPE);
m1976stringList_.add(I_SURF);
m1976stringList_.add(I_FORCE);
m1976pokemonData_.setMoveTutors(m1976stringList_);
Shorts m1976shorts_=new Shorts(new CollCapacity(3));
m1976shorts_.add((short)1);
m1976shorts_.add((short)3);
m1976shorts_.add((short)4);
m1976pokemonData_.setHiddenMoves(m1976shorts_);
m1976shorts_=new Shorts(new CollCapacity(51));
m1976shorts_.add((short)94);
m1976shorts_.add((short)1);
m1976shorts_.add((short)2);
m1976shorts_.add((short)5);
m1976shorts_.add((short)6);
m1976shorts_.add((short)10);
m1976shorts_.add((short)11);
m1976shorts_.add((short)12);
m1976shorts_.add((short)13);
m1976shorts_.add((short)14);
m1976shorts_.add((short)15);
m1976shorts_.add((short)17);
m1976shorts_.add((short)18);
m1976shorts_.add((short)21);
m1976shorts_.add((short)22);
m1976shorts_.add((short)23);
m1976shorts_.add((short)24);
m1976shorts_.add((short)25);
m1976shorts_.add((short)26);
m1976shorts_.add((short)27);
m1976shorts_.add((short)28);
m1976shorts_.add((short)31);
m1976shorts_.add((short)32);
m1976shorts_.add((short)35);
m1976shorts_.add((short)37);
m1976shorts_.add((short)38);
m1976shorts_.add((short)39);
m1976shorts_.add((short)40);
m1976shorts_.add((short)42);
m1976shorts_.add((short)44);
m1976shorts_.add((short)45);
m1976shorts_.add((short)48);
m1976shorts_.add((short)52);
m1976shorts_.add((short)56);
m1976shorts_.add((short)59);
m1976shorts_.add((short)65);
m1976shorts_.add((short)66);
m1976shorts_.add((short)68);
m1976shorts_.add((short)69);
m1976shorts_.add((short)71);
m1976shorts_.add((short)73);
m1976shorts_.add((short)78);
m1976shorts_.add((short)97);
m1976shorts_.add((short)80);
m1976shorts_.add((short)88);
m1976shorts_.add((short)82);
m1976shorts_.add((short)87);
m1976shorts_.add((short)90);
m1976shorts_.add((short)91);
m1976shorts_.add((short)98);
m1976shorts_.add((short)100);
m1976pokemonData_.setTechnicalMoves(m1976shorts_);
m1976pokemonData_.setBaseEvo(I_GALEKID);
m1976pokemonData_.setCatchingRate((short)45);
m1976pokemonData_.setHeight(Rate.newRate(R_21_10));
m1976pokemonData_.setExpEvo(ExpType.L);
m1976pokemonData_.setExpRate(239);
m1976stringList_=new StringList(new CollCapacity(1));
m1976stringList_.add(I_MONSTRE);
m1976pokemonData_.setEggGroups(m1976stringList_);
m1976pokemonData_.setHatchingSteps(LgInt.newLgInt(R_8960));
m1976pokemonData_.setHappiness((short)70);
m1976pokemonData_.setHappinessHatch((short)140);
return m1976pokemonData_;
}
static PokemonData p247(){
PokemonData m1977pokemonData_=Instances.newPokemonData();
m1977pokemonData_.setWeight(Rate.newRate(R_39_2));
StringList m1977stringList_=new StringList(new CollCapacity(2));
m1977stringList_.add(I_COMBAT);
m1977stringList_.add(I_FEU);
m1977pokemonData_.setTypes(m1977stringList_);
IdMap<Statistic,StatBaseEv> m1977enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)1));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)1));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)60,(short)0));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)60,(short)0));
m1977enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)55,(short)0));
m1977pokemonData_.setStatistics(m1977enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1977custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1977custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1977custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1977custListLevelMove_.add(new LevelMove((short)7,I_PUISSANCE));
m1977custListLevelMove_.add(new LevelMove((short)13,I_FLAMMECHE));
m1977custListLevelMove_.add(new LevelMove((short)16,I_DOUBLE_PIED));
m1977custListLevelMove_.add(new LevelMove((short)17,I_PICPIC));
m1977custListLevelMove_.add(new LevelMove((short)21,I_JET_DE_SABLE));
m1977custListLevelMove_.add(new LevelMove((short)28,I_GONFLETTE));
m1977custListLevelMove_.add(new LevelMove((short)32,I_VIVE_ATTAQUE));
m1977custListLevelMove_.add(new LevelMove((short)39,I_TRANCHE));
m1977custListLevelMove_.add(new LevelMove((short)43,I_MIMIQUE));
m1977custListLevelMove_.add(new LevelMove((short)50,I_STRATOPERCUT));
m1977custListLevelMove_.add(new LevelMove((short)54,I_BOUTEFEU));
m1977pokemonData_.setLevMoves(m1977custListLevelMove_);
m1977pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1977stringList_=new StringList(new CollCapacity(1));
m1977stringList_.add(I_BRASIER);
m1977pokemonData_.setAbilities(m1977stringList_);
m1977stringList_=new StringList(new CollCapacity(39));
m1977stringList_.add(I_BALAYAGE);
m1977stringList_.add(I_BLABLA_DODO);
m1977stringList_.add(I_CANICULE);
m1977stringList_.add(I_CLONAGE);
m1977stringList_.add(I_CONTRE);
m1977stringList_.add(I_COPIE);
m1977stringList_.add(I_COUD_BOUE);
m1977stringList_.add(I_COUP_D_BOULE);
m1977stringList_.add(I_DAMOCLES);
m1977stringList_.add(I_DANSE_LAMES);
m1977stringList_.add(I_DANSE_PLUME);
m1977stringList_.add(I_DERNIERECOUR);
m1977stringList_.add(I_DYNAMOPOING);
m1977stringList_.add(I_EBOULEMENT);
m1977stringList_.add(I_ECLATEGRIFFE);
m1977stringList_.add(I_FRAPPE_ATLAS);
m1977stringList_.add(I_HATE);
m1977stringList_.add(I_METEORES);
m1977stringList_.add(I_ONDE_VIDE);
m1977stringList_.add(I_PLAQUAGE);
m1977stringList_.add(I_POING_DE_FEU);
m1977stringList_.add(I_POING_ECLAIR);
m1977stringList_.add(I_REBOND);
m1977stringList_.add(I_RELAIS);
m1977stringList_.add(I_RIPOSTE);
m1977stringList_.add(I_RONFLEMENT);
m1977stringList_.add(I_RUSE);
m1977stringList_.add(I_STIMULANT);
m1977stringList_.add(I_TAILLADE);
m1977stringList_.add(I_TENACITE);
m1977stringList_.add(I_TRANCHE_NUIT);
m1977stringList_.add(I_ULTIMAPOING);
m1977stringList_.add(I_ULTIMAWASHI);
m1977stringList_.add(I_VANTARDISE);
m1977stringList_.add(I_AIRE_DE_FEU);
m1977stringList_.add(I_COUP_D_MAIN);
m1977stringList_.add(I_DOUBLE_BAFFE);
m1977stringList_.add(I_COUPE);
m1977stringList_.add(I_FORCE);
m1977pokemonData_.setMoveTutors(m1977stringList_);
Shorts m1977shorts_=new Shorts(new CollCapacity(2));
m1977shorts_.add((short)1);
m1977shorts_.add((short)4);
m1977pokemonData_.setHiddenMoves(m1977shorts_);
m1977shorts_=new Shorts(new CollCapacity(37));
m1977shorts_.add((short)94);
m1977shorts_.add((short)1);
m1977shorts_.add((short)6);
m1977shorts_.add((short)8);
m1977shorts_.add((short)10);
m1977shorts_.add((short)11);
m1977shorts_.add((short)17);
m1977shorts_.add((short)21);
m1977shorts_.add((short)27);
m1977shorts_.add((short)28);
m1977shorts_.add((short)31);
m1977shorts_.add((short)32);
m1977shorts_.add((short)35);
m1977shorts_.add((short)38);
m1977shorts_.add((short)39);
m1977shorts_.add((short)40);
m1977shorts_.add((short)42);
m1977shorts_.add((short)43);
m1977shorts_.add((short)44);
m1977shorts_.add((short)45);
m1977shorts_.add((short)47);
m1977shorts_.add((short)48);
m1977shorts_.add((short)49);
m1977shorts_.add((short)50);
m1977shorts_.add((short)52);
m1977shorts_.add((short)56);
m1977shorts_.add((short)59);
m1977shorts_.add((short)61);
m1977shorts_.add((short)65);
m1977shorts_.add((short)75);
m1977shorts_.add((short)80);
m1977shorts_.add((short)88);
m1977shorts_.add((short)84);
m1977shorts_.add((short)87);
m1977shorts_.add((short)90);
m1977shorts_.add((short)98);
m1977shorts_.add((short)100);
m1977pokemonData_.setTechnicalMoves(m1977shorts_);
m1977pokemonData_.setBaseEvo(I_POUSSIFEU);
StringMap<Evolution> m1977stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1977evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1977evolutionLevelSimple_.setLevel((short)36);
m1977stringMapEvolution_.addEntry(I_BRASEGALI,m1977evolutionLevelSimple_);
m1977pokemonData_.setEvolutions(m1977stringMapEvolution_);
m1977pokemonData_.setCatchingRate((short)45);
m1977pokemonData_.setHeight(Rate.newRate(R_9_10));
m1977pokemonData_.setExpEvo(ExpType.P);
m1977pokemonData_.setExpRate(142);
m1977stringList_=new StringList(new CollCapacity(1));
m1977stringList_.add(I_SOL);
m1977pokemonData_.setEggGroups(m1977stringList_);
m1977pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1977pokemonData_.setHappiness((short)70);
m1977pokemonData_.setHappinessHatch((short)140);
return m1977pokemonData_;
}
static PokemonData p248(){
PokemonData m1978pokemonData_=Instances.newPokemonData();
m1978pokemonData_.setWeight(Rate.newRate(R_52));
StringList m1978stringList_=new StringList(new CollCapacity(2));
m1978stringList_.add(I_COMBAT);
m1978stringList_.add(I_PSY);
m1978pokemonData_.setTypes(m1978stringList_);
IdMap<Statistic,StatBaseEv> m1978enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)125,(short)3));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)65,(short)0));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)115,(short)0));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)68,(short)0));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)65,(short)0));
m1978enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)80,(short)0));
m1978pokemonData_.setStatistics(m1978enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1978custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1978custListLevelMove_.add(new LevelMove((short)1,I_LAME_FEUILLE));
m1978custListLevelMove_.add(new LevelMove((short)1,I_GROZ_YEUX));
m1978custListLevelMove_.add(new LevelMove((short)1,I_TRANCHE_NUIT));
m1978custListLevelMove_.add(new LevelMove((short)6,I_CHOC_MENTAL));
m1978custListLevelMove_.add(new LevelMove((short)10,I_REFLET));
m1978custListLevelMove_.add(new LevelMove((short)12,I_TELEPORT));
m1978custListLevelMove_.add(new LevelMove((short)17,I_TAILLADE));
m1978custListLevelMove_.add(new LevelMove((short)22,I_TRANCHE));
m1978custListLevelMove_.add(new LevelMove((short)25,I_VIBRA_SOIN));
m1978custListLevelMove_.add(new LevelMove((short)31,I_DANSE_LAMES));
m1978custListLevelMove_.add(new LevelMove((short)36,I_COUPE_PSYCHO));
m1978custListLevelMove_.add(new LevelMove((short)39,I_COUP_D_MAIN));
m1978custListLevelMove_.add(new LevelMove((short)45,I_RUSE));
m1978custListLevelMove_.add(new LevelMove((short)50,I_FAUX_CHAGE));
m1978custListLevelMove_.add(new LevelMove((short)53,I_ABRI));
m1978custListLevelMove_.add(new LevelMove((short)59,I_CLOSE_COMBAT));
m1978custListLevelMove_.add(new LevelMove((short)64,I_FORCE_AJOUTEE));
m1978pokemonData_.setLevMoves(m1978custListLevelMove_);
m1978pokemonData_.setGenderRep(GenderRepartition.MALE);
m1978stringList_=new StringList(new CollCapacity(1));
m1978stringList_.add(I_IMPASSIBLE);
m1978pokemonData_.setAbilities(m1978stringList_);
m1978stringList_=new StringList(new CollCapacity(37));
m1978stringList_.add(I_BALANCE);
m1978stringList_.add(I_BALAYAGE);
m1978stringList_.add(I_COUD_BOUE);
m1978stringList_.add(I_COUP_D_BOULE);
m1978stringList_.add(I_ENCORE);
m1978stringList_.add(I_ENTRAVE);
m1978stringList_.add(I_FEU_FOLLET);
m1978stringList_.add(I_METEORES);
m1978stringList_.add(I_OMBRE_PORTEE);
m1978stringList_.add(I_ONDE_FOLIE);
m1978stringList_.add(I_ONDE_VIDE);
m1978stringList_.add(I_POING_DE_FEU);
m1978stringList_.add(I_POING_ECLAIR);
m1978stringList_.add(I_POINGLACE);
m1978stringList_.add(I_PSYKOUD_BOUL);
m1978stringList_.add(I_RAYON_SIGNAL);
m1978stringList_.add(I_REFLET_MAGIK);
m1978stringList_.add(I_REGARD_NOIR);
m1978stringList_.add(I_RONFLEMENT);
m1978stringList_.add(I_SABOTAGE);
m1978stringList_.add(I_SOUVENIR);
m1978stringList_.add(I_TAILLADE);
m1978stringList_.add(I_TOURMAGIK);
m1978stringList_.add(I_BLABLA_DODO);
m1978stringList_.add(I_COUP_D_MAIN);
m1978stringList_.add(I_DOUBLE_BAFFE);
m1978stringList_.add(I_ECHANGE);
m1978stringList_.add(I_MEGAPHONE);
m1978stringList_.add(I_PRLVT_DESTIN);
m1978stringList_.add(I_RANCUNE);
m1978stringList_.add(I_RECYCLAGE);
m1978stringList_.add(I_SAISIE);
m1978stringList_.add(I_VAMPIPOING);
m1978stringList_.add(I_ZONE_ETRANGE);
m1978stringList_.add(I_ZONE_MAGIQUE);
m1978stringList_.add(I_COUPE);
m1978stringList_.add(I_FORCE);
m1978pokemonData_.setMoveTutors(m1978stringList_);
Shorts m1978shorts_=new Shorts(new CollCapacity(2));
m1978shorts_.add((short)1);
m1978shorts_.add((short)4);
m1978pokemonData_.setHiddenMoves(m1978shorts_);
m1978shorts_=new Shorts(new CollCapacity(57));
m1978shorts_.add((short)70);
m1978shorts_.add((short)94);
m1978shorts_.add((short)3);
m1978shorts_.add((short)4);
m1978shorts_.add((short)6);
m1978shorts_.add((short)8);
m1978shorts_.add((short)10);
m1978shorts_.add((short)11);
m1978shorts_.add((short)12);
m1978shorts_.add((short)15);
m1978shorts_.add((short)16);
m1978shorts_.add((short)17);
m1978shorts_.add((short)18);
m1978shorts_.add((short)20);
m1978shorts_.add((short)21);
m1978shorts_.add((short)24);
m1978shorts_.add((short)26);
m1978shorts_.add((short)27);
m1978shorts_.add((short)29);
m1978shorts_.add((short)30);
m1978shorts_.add((short)31);
m1978shorts_.add((short)32);
m1978shorts_.add((short)33);
m1978shorts_.add((short)39);
m1978shorts_.add((short)40);
m1978shorts_.add((short)41);
m1978shorts_.add((short)42);
m1978shorts_.add((short)44);
m1978shorts_.add((short)45);
m1978shorts_.add((short)46);
m1978shorts_.add((short)47);
m1978shorts_.add((short)48);
m1978shorts_.add((short)49);
m1978shorts_.add((short)52);
m1978shorts_.add((short)54);
m1978shorts_.add((short)56);
m1978shorts_.add((short)57);
m1978shorts_.add((short)61);
m1978shorts_.add((short)67);
m1978shorts_.add((short)68);
m1978shorts_.add((short)71);
m1978shorts_.add((short)73);
m1978shorts_.add((short)75);
m1978shorts_.add((short)77);
m1978shorts_.add((short)78);
m1978shorts_.add((short)80);
m1978shorts_.add((short)81);
m1978shorts_.add((short)88);
m1978shorts_.add((short)84);
m1978shorts_.add((short)85);
m1978shorts_.add((short)86);
m1978shorts_.add((short)87);
m1978shorts_.add((short)90);
m1978shorts_.add((short)92);
m1978shorts_.add((short)98);
m1978shorts_.add((short)99);
m1978shorts_.add((short)100);
m1978pokemonData_.setTechnicalMoves(m1978shorts_);
m1978pokemonData_.setBaseEvo(I_TARSAL);
m1978pokemonData_.setCatchingRate((short)45);
m1978pokemonData_.setHeight(Rate.newRate(R_8_5));
m1978pokemonData_.setExpEvo(ExpType.L);
m1978pokemonData_.setExpRate(233);
m1978stringList_=new StringList(new CollCapacity(1));
m1978stringList_.add(I_INDETERMINE);
m1978pokemonData_.setEggGroups(m1978stringList_);
m1978pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1978pokemonData_.setHappiness((short)70);
m1978pokemonData_.setHappinessHatch((short)140);
return m1978pokemonData_;
}
static PokemonData p249(){
PokemonData m1979pokemonData_=Instances.newPokemonData();
m1979pokemonData_.setWeight(Rate.newRate(R_95));
StringList m1979stringList_=new StringList(new CollCapacity(1));
m1979stringList_.add(I_FEU);
m1979pokemonData_.setTypes(m1979stringList_);
IdMap<Statistic,StatBaseEv> m1979enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)80,(short)0));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)80,(short)0));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1979enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)105,(short)2));
m1979pokemonData_.setStatistics(m1979enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1979custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1979custListLevelMove_.add(new LevelMove((short)1,I_MEGACORNE));
m1979custListLevelMove_.add(new LevelMove((short)1,I_DIRECT_TOXIK));
m1979custListLevelMove_.add(new LevelMove((short)1,I_VIVE_ATTAQUE));
m1979custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1979custListLevelMove_.add(new LevelMove((short)4,I_MIMI_QUEUE));
m1979custListLevelMove_.add(new LevelMove((short)9,I_FLAMMECHE));
m1979custListLevelMove_.add(new LevelMove((short)13,I_ROUE_DE_FEU));
m1979custListLevelMove_.add(new LevelMove((short)17,I_ECRASEMENT));
m1979custListLevelMove_.add(new LevelMove((short)21,I_NITROCHARGE));
m1979custListLevelMove_.add(new LevelMove((short)25,I_DANSEFLAMME));
m1979custListLevelMove_.add(new LevelMove((short)29,I_BELIER));
m1979custListLevelMove_.add(new LevelMove((short)33,I_FEU_D_ENFER));
m1979custListLevelMove_.add(new LevelMove((short)37,I_HATE));
m1979custListLevelMove_.add(new LevelMove((short)40,I_FURIE));
m1979custListLevelMove_.add(new LevelMove((short)41,I_DEFLAGRATION));
m1979custListLevelMove_.add(new LevelMove((short)45,I_REBOND));
m1979custListLevelMove_.add(new LevelMove((short)49,I_BOUTEFEU));
m1979pokemonData_.setLevMoves(m1979custListLevelMove_);
m1979pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1979stringList_=new StringList(new CollCapacity(1));
m1979stringList_.add(I_TORCHE);
m1979pokemonData_.setAbilities(m1979stringList_);
m1979stringList_=new StringList(new CollCapacity(23));
m1979stringList_.add(I_AURORE);
m1979stringList_.add(I_BLABLA_DODO);
m1979stringList_.add(I_CANICULE);
m1979stringList_.add(I_CHARME);
m1979stringList_.add(I_CLONAGE);
m1979stringList_.add(I_COPIE);
m1979stringList_.add(I_COUP_D_BOULE);
m1979stringList_.add(I_DAMOCLES);
m1979stringList_.add(I_DOUBLE_PIED);
m1979stringList_.add(I_EMPAL_KORNE);
m1979stringList_.add(I_HYPNOSE);
m1979stringList_.add(I_MANIA);
m1979stringList_.add(I_METEORES);
m1979stringList_.add(I_PLAQUAGE);
m1979stringList_.add(I_REBOND);
m1979stringList_.add(I_RONFLEMENT);
m1979stringList_.add(I_ROUE_DE_FEU);
m1979stringList_.add(I_TENACITE);
m1979stringList_.add(I_VANTARDISE);
m1979stringList_.add(I_BALAYAGE);
m1979stringList_.add(I_QUEUE_DE_FER);
m1979stringList_.add(I_TUNNELIER);
m1979stringList_.add(I_FORCE);
m1979pokemonData_.setMoveTutors(m1979stringList_);
Shorts m1979shorts_=new Shorts(new CollCapacity(1));
m1979shorts_.add((short)4);
m1979pokemonData_.setHiddenMoves(m1979shorts_);
m1979shorts_=new Shorts(new CollCapacity(27));
m1979shorts_.add((short)6);
m1979shorts_.add((short)10);
m1979shorts_.add((short)11);
m1979shorts_.add((short)15);
m1979shorts_.add((short)17);
m1979shorts_.add((short)21);
m1979shorts_.add((short)22);
m1979shorts_.add((short)27);
m1979shorts_.add((short)32);
m1979shorts_.add((short)35);
m1979shorts_.add((short)38);
m1979shorts_.add((short)42);
m1979shorts_.add((short)43);
m1979shorts_.add((short)44);
m1979shorts_.add((short)45);
m1979shorts_.add((short)48);
m1979shorts_.add((short)49);
m1979shorts_.add((short)50);
m1979shorts_.add((short)59);
m1979shorts_.add((short)61);
m1979shorts_.add((short)68);
m1979shorts_.add((short)88);
m1979shorts_.add((short)84);
m1979shorts_.add((short)87);
m1979shorts_.add((short)90);
m1979shorts_.add((short)93);
m1979shorts_.add((short)100);
m1979pokemonData_.setTechnicalMoves(m1979shorts_);
m1979pokemonData_.setBaseEvo(I_PONYTA);
m1979pokemonData_.setCatchingRate((short)60);
m1979pokemonData_.setHeight(Rate.newRate(R_17_10));
m1979pokemonData_.setExpEvo(ExpType.M);
m1979pokemonData_.setExpRate(175);
m1979stringList_=new StringList(new CollCapacity(1));
m1979stringList_.add(I_SOL);
m1979pokemonData_.setEggGroups(m1979stringList_);
m1979pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1979pokemonData_.setHappiness((short)70);
m1979pokemonData_.setHappinessHatch((short)140);
return m1979pokemonData_;
}
static PokemonData p250(){
PokemonData m1980pokemonData_=Instances.newPokemonData();
m1980pokemonData_.setWeight(Rate.newRate(R_6));
StringList m1980stringList_=new StringList(new CollCapacity(2));
m1980stringList_.add(I_ELECTRIQUE);
m1980stringList_.add(I_NORMAL);
m1980pokemonData_.setTypes(m1980stringList_);
IdMap<Statistic,StatBaseEv> m1980enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)38,(short)0));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)61,(short)0));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)43,(short)0));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)44,(short)0));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)33,(short)0));
m1980enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)1));
m1980pokemonData_.setStatistics(m1980enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1980custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1980custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1980custListLevelMove_.add(new LevelMove((short)1,I_MIMI_QUEUE));
m1980custListLevelMove_.add(new LevelMove((short)6,I_ECLAIR));
m1980custListLevelMove_.add(new LevelMove((short)11,I_CHARGEUR));
m1980custListLevelMove_.add(new LevelMove((short)13,I_COUD_BOUE));
m1980custListLevelMove_.add(new LevelMove((short)17,I_VIVE_ATTAQUE));
m1980custListLevelMove_.add(new LevelMove((short)22,I_COUPE_VENT));
m1980custListLevelMove_.add(new LevelMove((short)25,I_PARABOCHARGE));
m1980custListLevelMove_.add(new LevelMove((short)31,I_CAGE_ECLAIR));
m1980custListLevelMove_.add(new LevelMove((short)35,I_PIETISOL));
m1980custListLevelMove_.add(new LevelMove((short)35,I_PIETISOL));
m1980custListLevelMove_.add(new LevelMove((short)40,I_CHANGE_ECLAIR));
m1980custListLevelMove_.add(new LevelMove((short)40,I_CHANGE_ECLAIR));
m1980custListLevelMove_.add(new LevelMove((short)45,I_ELECTRISATION));
m1980custListLevelMove_.add(new LevelMove((short)49,I_TONNERRE));
m1980custListLevelMove_.add(new LevelMove((short)49,I_TONNERRE));
m1980pokemonData_.setLevMoves(m1980custListLevelMove_);
m1980pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1980stringList_=new StringList(new CollCapacity(3));
m1980stringList_.add(I_FORCE_SOLEIL);
m1980stringList_.add(I_PEAU_SECHE);
m1980stringList_.add(I_VOILE_SABLE);
m1980pokemonData_.setAbilities(m1980stringList_);
m1980stringList_=new StringList(new CollCapacity(7));
m1980stringList_.add(I_CAMOUFLAGE);
m1980stringList_.add(I_CHAMP_ELECTRIFIE);
m1980stringList_.add(I_HATE);
m1980stringList_.add(I_INTIMIDATION);
m1980stringList_.add(I_ORAGE);
m1980stringList_.add(I_COUPE);
m1980stringList_.add(I_SURF);
m1980pokemonData_.setMoveTutors(m1980stringList_);
Shorts m1980shorts_=new Shorts(new CollCapacity(2));
m1980shorts_.add((short)1);
m1980shorts_.add((short)3);
m1980pokemonData_.setHiddenMoves(m1980shorts_);
m1980shorts_=new Shorts(new CollCapacity(34));
m1980shorts_.add((short)70);
m1980shorts_.add((short)6);
m1980shorts_.add((short)10);
m1980shorts_.add((short)16);
m1980shorts_.add((short)17);
m1980shorts_.add((short)18);
m1980shorts_.add((short)21);
m1980shorts_.add((short)24);
m1980shorts_.add((short)25);
m1980shorts_.add((short)27);
m1980shorts_.add((short)28);
m1980shorts_.add((short)32);
m1980shorts_.add((short)37);
m1980shorts_.add((short)39);
m1980shorts_.add((short)42);
m1980shorts_.add((short)44);
m1980shorts_.add((short)45);
m1980shorts_.add((short)47);
m1980shorts_.add((short)48);
m1980shorts_.add((short)57);
m1980shorts_.add((short)72);
m1980shorts_.add((short)73);
m1980shorts_.add((short)77);
m1980shorts_.add((short)78);
m1980shorts_.add((short)97);
m1980shorts_.add((short)80);
m1980shorts_.add((short)88);
m1980shorts_.add((short)82);
m1980shorts_.add((short)86);
m1980shorts_.add((short)87);
m1980shorts_.add((short)89);
m1980shorts_.add((short)90);
m1980shorts_.add((short)93);
m1980shorts_.add((short)100);
m1980pokemonData_.setTechnicalMoves(m1980shorts_);
m1980pokemonData_.setBaseEvo(I_GALVARAN);
StringMap<Evolution> m1980stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionStoneSimple m1980evolutionStoneSimple_=Instances.newEvolutionStoneSimple();
m1980evolutionStoneSimple_.setStone(I_PIERRE_SOLAIRE);
m1980stringMapEvolution_.addEntry(I_IGUOLTA,m1980evolutionStoneSimple_);
m1980pokemonData_.setEvolutions(m1980stringMapEvolution_);
m1980pokemonData_.setCatchingRate((short)190);
m1980pokemonData_.setHeight(Rate.newRate(R_1_2));
m1980pokemonData_.setExpEvo(ExpType.M);
m1980pokemonData_.setExpRate(58);
m1980stringList_=new StringList(new CollCapacity(8));
m1980stringList_.add(I_METAMORPH);
m1980stringList_.add(I_DRAGON);
m1980stringList_.add(I_SOL);
m1980stringList_.add(I_EAU_1);
m1980stringList_.add(I_MONSTRE);
m1980stringList_.add(I_VOL);
m1980stringList_.add(I_PLANTE);
m1980stringList_.add(I_EAU_2);
m1980pokemonData_.setEggGroups(m1980stringList_);
m1980pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1980pokemonData_.setHappiness((short)70);
m1980pokemonData_.setHappinessHatch((short)140);
return m1980pokemonData_;
}
static PokemonData p251(){
PokemonData m1981pokemonData_=Instances.newPokemonData();
m1981pokemonData_.setWeight(Rate.newRate(R_353_10));
StringList m1981stringList_=new StringList(new CollCapacity(1));
m1981stringList_.add(I_EAU);
m1981pokemonData_.setTypes(m1981stringList_);
IdMap<Statistic,StatBaseEv> m1981enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)73,(short)0));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)120,(short)2));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)89,(short)0));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)71,(short)0));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)88,(short)0));
m1981enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)59,(short)0));
m1981pokemonData_.setStatistics(m1981enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1981custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(23));
m1981custListLevelMove_.add(new LevelMove((short)1,I_PISTOLET_A_O));
m1981custListLevelMove_.add(new LevelMove((short)1,I_TREMPETTE));
m1981custListLevelMove_.add(new LevelMove((short)1,I_VIBRA_SOIN));
m1981custListLevelMove_.add(new LevelMove((short)7,I_TOURNIQUET));
m1981custListLevelMove_.add(new LevelMove((short)9,I_FORCE_POIGNE));
m1981custListLevelMove_.add(new LevelMove((short)12,I_ECUME));
m1981custListLevelMove_.add(new LevelMove((short)16,I_FLEAU));
m1981custListLevelMove_.add(new LevelMove((short)20,I_BULLES_D_O));
m1981custListLevelMove_.add(new LevelMove((short)25,I_DANSE_LAMES));
m1981custListLevelMove_.add(new LevelMove((short)25,I_DANSE_LAMES));
m1981custListLevelMove_.add(new LevelMove((short)30,I_PINCE_MASSE));
m1981custListLevelMove_.add(new LevelMove((short)34,I_VIBRAQUA));
m1981custListLevelMove_.add(new LevelMove((short)42,I_ANTI_AIR));
m1981custListLevelMove_.add(new LevelMove((short)42,I_ANTI_AIR));
m1981custListLevelMove_.add(new LevelMove((short)47,I_AQUA_JET));
m1981custListLevelMove_.add(new LevelMove((short)53,I_OCROUPI));
m1981custListLevelMove_.add(new LevelMove((short)57,I_VIBROBSCUR));
m1981custListLevelMove_.add(new LevelMove((short)57,I_VIBROBSCUR));
m1981custListLevelMove_.add(new LevelMove((short)57,I_VIBROBSCUR));
m1981custListLevelMove_.add(new LevelMove((short)63,I_DRACOCHOC));
m1981custListLevelMove_.add(new LevelMove((short)63,I_DRACOCHOC));
m1981custListLevelMove_.add(new LevelMove((short)67,I_AURASPHERE));
m1981custListLevelMove_.add(new LevelMove((short)67,I_AURASPHERE));
m1981pokemonData_.setLevMoves(m1981custListLevelMove_);
m1981pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1981stringList_=new StringList(new CollCapacity(1));
m1981stringList_.add(I_MEGA_BLASTER);
m1981pokemonData_.setAbilities(m1981stringList_);
m1981stringList_=new StringList(new CollCapacity(3));
m1981stringList_.add(I_COUPE);
m1981stringList_.add(I_SURF);
m1981stringList_.add(I_SIPHON);
m1981pokemonData_.setMoveTutors(m1981stringList_);
Shorts m1981shorts_=new Shorts(new CollCapacity(3));
m1981shorts_.add((short)1);
m1981shorts_.add((short)3);
m1981shorts_.add((short)5);
m1981pokemonData_.setHiddenMoves(m1981shorts_);
m1981shorts_=new Shorts(new CollCapacity(30));
m1981shorts_.add((short)6);
m1981shorts_.add((short)9);
m1981shorts_.add((short)10);
m1981shorts_.add((short)13);
m1981shorts_.add((short)15);
m1981shorts_.add((short)17);
m1981shorts_.add((short)18);
m1981shorts_.add((short)21);
m1981shorts_.add((short)23);
m1981shorts_.add((short)27);
m1981shorts_.add((short)30);
m1981shorts_.add((short)32);
m1981shorts_.add((short)34);
m1981shorts_.add((short)36);
m1981shorts_.add((short)42);
m1981shorts_.add((short)44);
m1981shorts_.add((short)45);
m1981shorts_.add((short)48);
m1981shorts_.add((short)52);
m1981shorts_.add((short)55);
m1981shorts_.add((short)68);
m1981shorts_.add((short)75);
m1981shorts_.add((short)97);
m1981shorts_.add((short)80);
m1981shorts_.add((short)88);
m1981shorts_.add((short)87);
m1981shorts_.add((short)89);
m1981shorts_.add((short)90);
m1981shorts_.add((short)91);
m1981shorts_.add((short)100);
m1981pokemonData_.setTechnicalMoves(m1981shorts_);
m1981pokemonData_.setBaseEvo(I_FLINGOUSTE);
m1981pokemonData_.setCatchingRate((short)55);
m1981pokemonData_.setHeight(Rate.newRate(R_13_10));
m1981pokemonData_.setExpEvo(ExpType.L);
m1981pokemonData_.setExpRate(100);
m1981stringList_=new StringList(new CollCapacity(12));
m1981stringList_.add(I_METAMORPH);
m1981stringList_.add(I_EAU_3);
m1981stringList_.add(I_VOL);
m1981stringList_.add(I_EAU_1);
m1981stringList_.add(I_SOL);
m1981stringList_.add(I_MONSTRE);
m1981stringList_.add(I_INSECTE);
m1981stringList_.add(I_FEE);
m1981stringList_.add(I_DRAGON);
m1981stringList_.add(I_INDETERMINE);
m1981stringList_.add(I_PLANTE);
m1981stringList_.add(I_EAU_2);
m1981pokemonData_.setEggGroups(m1981stringList_);
m1981pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1981pokemonData_.setHappiness((short)70);
m1981pokemonData_.setHappinessHatch((short)140);
return m1981pokemonData_;
}
static PokemonData p252(){
PokemonData m1982pokemonData_=Instances.newPokemonData();
m1982pokemonData_.setWeight(Rate.newRate(R_242_5));
StringList m1982stringList_=new StringList(new CollCapacity(2));
m1982stringList_.add(I_PSY);
m1982stringList_.add(I_FEE);
m1982pokemonData_.setTypes(m1982stringList_);
IdMap<Statistic,StatBaseEv> m1982enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)65,(short)0));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)125,(short)3));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)115,(short)0));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)68,(short)0));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)65,(short)0));
m1982enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)80,(short)0));
m1982pokemonData_.setStatistics(m1982enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1982custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1982custListLevelMove_.add(new LevelMove((short)1,I_CHAMP_BRUMEUX));
m1982custListLevelMove_.add(new LevelMove((short)1,I_VOEU_SOIN));
m1982custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1982custListLevelMove_.add(new LevelMove((short)6,I_CHOC_MENTAL));
m1982custListLevelMove_.add(new LevelMove((short)10,I_REFLET));
m1982custListLevelMove_.add(new LevelMove((short)12,I_TELEPORT));
m1982custListLevelMove_.add(new LevelMove((short)17,I_VOEU));
m1982custListLevelMove_.add(new LevelMove((short)22,I_FEUILLEMAGIK));
m1982custListLevelMove_.add(new LevelMove((short)25,I_VIBRA_SOIN));
m1982custListLevelMove_.add(new LevelMove((short)33,I_PLENITUDE));
m1982custListLevelMove_.add(new LevelMove((short)40,I_PSYKO));
m1982custListLevelMove_.add(new LevelMove((short)45,I_POSSESSIF));
m1982custListLevelMove_.add(new LevelMove((short)53,I_PRESCIENCE));
m1982custListLevelMove_.add(new LevelMove((short)60,I_SEDUCTION));
m1982custListLevelMove_.add(new LevelMove((short)65,I_HYPNOSE));
m1982custListLevelMove_.add(new LevelMove((short)73,I_DEVOREVE));
m1982custListLevelMove_.add(new LevelMove((short)80,I_FORCE_AJOUTEE));
m1982custListLevelMove_.add(new LevelMove((short)85,I_POUVOIR_LUNAIRE));
m1982custListLevelMove_.add(new LevelMove((short)85,I_POUVOIR_LUNAIRE));
m1982pokemonData_.setLevMoves(m1982custListLevelMove_);
m1982pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1982stringList_=new StringList(new CollCapacity(2));
m1982stringList_.add(I_SYNCHRO);
m1982stringList_.add(I_CALQUE);
m1982pokemonData_.setAbilities(m1982stringList_);
m1982stringList_=new StringList(new CollCapacity(33));
m1982stringList_.add(I_BALANCE);
m1982stringList_.add(I_BLABLA_DODO);
m1982stringList_.add(I_BOOST);
m1982stringList_.add(I_BOUL_ARMURE);
m1982stringList_.add(I_CAGE_ECLAIR);
m1982stringList_.add(I_CLONAGE);
m1982stringList_.add(I_COPIE);
m1982stringList_.add(I_COUD_BOUE);
m1982stringList_.add(I_COUP_D_BOULE);
m1982stringList_.add(I_DAMOCLES);
m1982stringList_.add(I_DEVOREVE);
m1982stringList_.add(I_ENCORE);
m1982stringList_.add(I_GLAS_DE_SOIN);
m1982stringList_.add(I_METEORES);
m1982stringList_.add(I_PLAQUAGE);
m1982stringList_.add(I_POING_DE_FEU);
m1982stringList_.add(I_POING_ECLAIR);
m1982stringList_.add(I_POINGLACE);
m1982stringList_.add(I_PSYKOUD_BOUL);
m1982stringList_.add(I_RAYON_SIGNAL);
m1982stringList_.add(I_REFLET_MAGIK);
m1982stringList_.add(I_RONFLEMENT);
m1982stringList_.add(I_TENACITE);
m1982stringList_.add(I_TOURMAGIK);
m1982stringList_.add(I_VANTARDISE);
m1982stringList_.add(I_VENT_GLACE);
m1982stringList_.add(I_COUP_D_MAIN);
m1982stringList_.add(I_ECHANGE);
m1982stringList_.add(I_MEGAPHONE);
m1982stringList_.add(I_RECYCLAGE);
m1982stringList_.add(I_SAISIE);
m1982stringList_.add(I_ZONE_ETRANGE);
m1982stringList_.add(I_ZONE_MAGIQUE);
m1982pokemonData_.setMoveTutors(m1982stringList_);
Shorts m1982shorts_=new Shorts(new CollCapacity(42));
m1982shorts_.add((short)70);
m1982shorts_.add((short)3);
m1982shorts_.add((short)4);
m1982shorts_.add((short)6);
m1982shorts_.add((short)10);
m1982shorts_.add((short)11);
m1982shorts_.add((short)12);
m1982shorts_.add((short)15);
m1982shorts_.add((short)16);
m1982shorts_.add((short)17);
m1982shorts_.add((short)18);
m1982shorts_.add((short)20);
m1982shorts_.add((short)21);
m1982shorts_.add((short)24);
m1982shorts_.add((short)27);
m1982shorts_.add((short)29);
m1982shorts_.add((short)30);
m1982shorts_.add((short)32);
m1982shorts_.add((short)33);
m1982shorts_.add((short)41);
m1982shorts_.add((short)42);
m1982shorts_.add((short)44);
m1982shorts_.add((short)45);
m1982shorts_.add((short)46);
m1982shorts_.add((short)48);
m1982shorts_.add((short)49);
m1982shorts_.add((short)52);
m1982shorts_.add((short)53);
m1982shorts_.add((short)56);
m1982shorts_.add((short)57);
m1982shorts_.add((short)61);
m1982shorts_.add((short)68);
m1982shorts_.add((short)73);
m1982shorts_.add((short)77);
m1982shorts_.add((short)88);
m1982shorts_.add((short)85);
m1982shorts_.add((short)86);
m1982shorts_.add((short)87);
m1982shorts_.add((short)90);
m1982shorts_.add((short)92);
m1982shorts_.add((short)99);
m1982shorts_.add((short)100);
m1982pokemonData_.setTechnicalMoves(m1982shorts_);
m1982pokemonData_.setBaseEvo(I_TARSAL);
m1982pokemonData_.setCatchingRate((short)45);
m1982pokemonData_.setHeight(Rate.newRate(R_8_5));
m1982pokemonData_.setExpEvo(ExpType.L);
m1982pokemonData_.setExpRate(233);
m1982stringList_=new StringList(new CollCapacity(1));
m1982stringList_.add(I_INDETERMINE);
m1982pokemonData_.setEggGroups(m1982stringList_);
m1982pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1982pokemonData_.setHappiness((short)70);
m1982pokemonData_.setHappinessHatch((short)140);
return m1982pokemonData_;
}
static PokemonData p253(){
PokemonData m1983pokemonData_=Instances.newPokemonData();
m1983pokemonData_.setWeight(Rate.newRate(R_21_2));
StringList m1983stringList_=new StringList(new CollCapacity(2));
m1983stringList_.add(I_PLANTE);
m1983stringList_.add(I_POISON);
m1983pokemonData_.setTypes(m1983stringList_);
IdMap<Statistic,StatBaseEv> m1983enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)0));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)85,(short)0));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)80,(short)0));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)114,(short)2));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1983enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)30,(short)0));
m1983pokemonData_.setStatistics(m1983enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1983custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1983custListLevelMove_.add(new LevelMove((short)1,I_VOL_VIE));
m1983custListLevelMove_.add(new LevelMove((short)6,I_CROISSANCE));
m1983custListLevelMove_.add(new LevelMove((short)8,I_ETONNEMENT));
m1983custListLevelMove_.add(new LevelMove((short)12,I_PATIENCE));
m1983custListLevelMove_.add(new LevelMove((short)15,I_MEGA_SANGSUE));
m1983custListLevelMove_.add(new LevelMove((short)18,I_RACINES));
m1983custListLevelMove_.add(new LevelMove((short)20,I_FEINTE));
m1983custListLevelMove_.add(new LevelMove((short)24,I_DOUX_PARFUM));
m1983custListLevelMove_.add(new LevelMove((short)28,I_GIGA_SANGSUE));
m1983custListLevelMove_.add(new LevelMove((short)32,I_TOXIK));
m1983custListLevelMove_.add(new LevelMove((short)35,I_SYNTHESE));
m1983custListLevelMove_.add(new LevelMove((short)43,I_BAIN_DE_SMOG));
m1983custListLevelMove_.add(new LevelMove((short)49,I_LANCE_SOLEIL));
m1983custListLevelMove_.add(new LevelMove((short)54,I_POUDRE_FUREUR));
m1983custListLevelMove_.add(new LevelMove((short)62,I_SPORE));
m1983pokemonData_.setLevMoves(m1983custListLevelMove_);
m1983pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1983stringList_=new StringList(new CollCapacity(2));
m1983stringList_.add(I_POSE_SPORE);
m1983stringList_.add(I_REGE_FORCE);
m1983pokemonData_.setAbilities(m1983stringList_);
m1983stringList_=new StringList(new CollCapacity(9));
m1983stringList_.add(I_APRES_VOUS);
m1983stringList_.add(I_BLABLA_DODO);
m1983stringList_.add(I_CANON_GRAINE);
m1983stringList_.add(I_GIGA_SANGSUE);
m1983stringList_.add(I_RONFLEMENT);
m1983stringList_.add(I_SOUCIGRAINE);
m1983stringList_.add(I_SUC_DIGESTIF);
m1983stringList_.add(I_SYNTHESE);
m1983stringList_.add(I_TRICHERIE);
m1983pokemonData_.setMoveTutors(m1983stringList_);
Shorts m1983shorts_=new Shorts(new CollCapacity(26));
m1983shorts_.add((short)70);
m1983shorts_.add((short)6);
m1983shorts_.add((short)9);
m1983shorts_.add((short)10);
m1983shorts_.add((short)11);
m1983shorts_.add((short)15);
m1983shorts_.add((short)17);
m1983shorts_.add((short)18);
m1983shorts_.add((short)21);
m1983shorts_.add((short)22);
m1983shorts_.add((short)27);
m1983shorts_.add((short)32);
m1983shorts_.add((short)36);
m1983shorts_.add((short)42);
m1983shorts_.add((short)44);
m1983shorts_.add((short)45);
m1983shorts_.add((short)48);
m1983shorts_.add((short)53);
m1983shorts_.add((short)66);
m1983shorts_.add((short)68);
m1983shorts_.add((short)88);
m1983shorts_.add((short)86);
m1983shorts_.add((short)87);
m1983shorts_.add((short)90);
m1983shorts_.add((short)96);
m1983shorts_.add((short)100);
m1983pokemonData_.setTechnicalMoves(m1983shorts_);
m1983pokemonData_.setBaseEvo(I_TROMPIGNON);
m1983pokemonData_.setCatchingRate((short)75);
m1983pokemonData_.setHeight(Rate.newRate(R_3_5));
m1983pokemonData_.setExpEvo(ExpType.M);
m1983pokemonData_.setExpRate(162);
m1983stringList_=new StringList(new CollCapacity(1));
m1983stringList_.add(I_PLANTE);
m1983pokemonData_.setEggGroups(m1983stringList_);
m1983pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5355));
m1983pokemonData_.setHappiness((short)70);
m1983pokemonData_.setHappinessHatch((short)140);
return m1983pokemonData_;
}
static PokemonData p254(){
PokemonData m1984pokemonData_=Instances.newPokemonData();
m1984pokemonData_.setWeight(Rate.newRate(R_165_2));
StringList m1984stringList_=new StringList(new CollCapacity(2));
m1984stringList_.add(I_ACIER);
m1984stringList_.add(I_INSECTE);
m1984pokemonData_.setTypes(m1984stringList_);
IdMap<Statistic,StatBaseEv> m1984enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)120,(short)1));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)120,(short)1));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)95,(short)0));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)71,(short)0));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)95,(short)0));
m1984enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)99,(short)1));
m1984pokemonData_.setStatistics(m1984enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1984custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(20));
m1984custListLevelMove_.add(new LevelMove((short)1,I_DARD_MORTEL));
m1984custListLevelMove_.add(new LevelMove((short)1,I_VIVE_ATTAQUE));
m1984custListLevelMove_.add(new LevelMove((short)1,I_GRINCEMENT));
m1984custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE_ACIER));
m1984custListLevelMove_.add(new LevelMove((short)1,I_VOL_MAGNETIK));
m1984custListLevelMove_.add(new LevelMove((short)1,I_TECHNO_BUSTER));
m1984custListLevelMove_.add(new LevelMove((short)7,I_TAILLADE));
m1984custListLevelMove_.add(new LevelMove((short)11,I_VERROUILLAGE));
m1984custListLevelMove_.add(new LevelMove((short)18,I_NITROCHARGE));
m1984custListLevelMove_.add(new LevelMove((short)22,I_BOMBAIMANT));
m1984custListLevelMove_.add(new LevelMove((short)29,I_TRANCHE));
m1984custListLevelMove_.add(new LevelMove((short)33,I_STRIDO_SON));
m1984custListLevelMove_.add(new LevelMove((short)40,I_RAYON_SIGNAL));
m1984custListLevelMove_.add(new LevelMove((short)44,I_TRIPLATTAQUE));
m1984custListLevelMove_.add(new LevelMove((short)51,I_PLAIE_CROIX));
m1984custListLevelMove_.add(new LevelMove((short)55,I_BOURDON));
m1984custListLevelMove_.add(new LevelMove((short)62,I_RAYON_SIMPLE));
m1984custListLevelMove_.add(new LevelMove((short)66,I_ELECANON));
m1984custListLevelMove_.add(new LevelMove((short)73,I_ULTRALASER));
m1984custListLevelMove_.add(new LevelMove((short)77,I_DESTRUCTION));
m1984pokemonData_.setLevMoves(m1984custListLevelMove_);
m1984pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1984stringList_=new StringList(new CollCapacity(1));
m1984stringList_.add(I_TELECHARGE);
m1984pokemonData_.setAbilities(m1984stringList_);
m1984stringList_=new StringList(new CollCapacity(17));
m1984stringList_.add(I_BLABLA_DODO);
m1984stringList_.add(I_DERNIERECOUR);
m1984stringList_.add(I_DETRICANON);
m1984stringList_.add(I_GIGA_SANGSUE);
m1984stringList_.add(I_GRAVITE);
m1984stringList_.add(I_MUR_DE_FER);
m1984stringList_.add(I_PIQURE);
m1984stringList_.add(I_PSYKOUD_BOUL);
m1984stringList_.add(I_RAYON_SIGNAL);
m1984stringList_.add(I_RECYCLAGE);
m1984stringList_.add(I_REFLET_MAGIK);
m1984stringList_.add(I_RONFLEMENT);
m1984stringList_.add(I_TETE_DE_FER);
m1984stringList_.add(I_TOILE_ELEK);
m1984stringList_.add(I_VIBROBSCUR);
m1984stringList_.add(I_VOL_MAGNETIK);
m1984stringList_.add(I_ENVOL);
m1984pokemonData_.setMoveTutors(m1984stringList_);
Shorts m1984shorts_=new Shorts(new CollCapacity(1));
m1984shorts_.add((short)2);
m1984pokemonData_.setHiddenMoves(m1984shorts_);
m1984shorts_=new Shorts(new CollCapacity(40));
m1984shorts_.add((short)70);
m1984shorts_.add((short)1);
m1984shorts_.add((short)6);
m1984shorts_.add((short)10);
m1984shorts_.add((short)13);
m1984shorts_.add((short)14);
m1984shorts_.add((short)15);
m1984shorts_.add((short)16);
m1984shorts_.add((short)17);
m1984shorts_.add((short)21);
m1984shorts_.add((short)22);
m1984shorts_.add((short)24);
m1984shorts_.add((short)25);
m1984shorts_.add((short)27);
m1984shorts_.add((short)29);
m1984shorts_.add((short)32);
m1984shorts_.add((short)33);
m1984shorts_.add((short)35);
m1984shorts_.add((short)40);
m1984shorts_.add((short)42);
m1984shorts_.add((short)43);
m1984shorts_.add((short)44);
m1984shorts_.add((short)48);
m1984shorts_.add((short)53);
m1984shorts_.add((short)57);
m1984shorts_.add((short)64);
m1984shorts_.add((short)65);
m1984shorts_.add((short)68);
m1984shorts_.add((short)69);
m1984shorts_.add((short)73);
m1984shorts_.add((short)76);
m1984shorts_.add((short)97);
m1984shorts_.add((short)81);
m1984shorts_.add((short)88);
m1984shorts_.add((short)83);
m1984shorts_.add((short)87);
m1984shorts_.add((short)89);
m1984shorts_.add((short)90);
m1984shorts_.add((short)91);
m1984shorts_.add((short)100);
m1984pokemonData_.setTechnicalMoves(m1984shorts_);
m1984pokemonData_.setBaseEvo(I_GENESECT);
m1984pokemonData_.setCatchingRate((short)3);
m1984pokemonData_.setHeight(Rate.newRate(R_3_2));
m1984pokemonData_.setExpEvo(ExpType.L);
m1984pokemonData_.setExpRate(270);
m1984stringList_=new StringList(new CollCapacity(1));
m1984stringList_.add(I_SANS_OEUF);
m1984pokemonData_.setEggGroups(m1984stringList_);
m1984pokemonData_.setHatchingSteps(LgInt.newLgInt(R_30855));
m1984pokemonData_.setHappiness((short)70);
m1984pokemonData_.setHappinessHatch((short)140);
return m1984pokemonData_;
}
static PokemonData p255(){
PokemonData m1985pokemonData_=Instances.newPokemonData();
m1985pokemonData_.setWeight(Rate.newRate(R_102));
StringList m1985stringList_=new StringList(new CollCapacity(1));
m1985stringList_.add(I_ROCHE);
m1985pokemonData_.setTypes(m1985stringList_);
IdMap<Statistic,StatBaseEv> m1985enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)105,(short)1));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)40,(short)0));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)105,(short)1));
m1985enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)20,(short)0));
m1985pokemonData_.setStatistics(m1985enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1985custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1985custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1985custListLevelMove_.add(new LevelMove((short)4,I_ARMURE));
m1985custListLevelMove_.add(new LevelMove((short)7,I_JET_DE_SABLE));
m1985custListLevelMove_.add(new LevelMove((short)10,I_COUP_D_BOULE));
m1985custListLevelMove_.add(new LevelMove((short)14,I_BOULE_ROC));
m1985custListLevelMove_.add(new LevelMove((short)17,I_COUD_BOUE));
m1985custListLevelMove_.add(new LevelMove((short)20,I_MUR_DE_FER));
m1985custListLevelMove_.add(new LevelMove((short)23,I_ANTI_AIR));
m1985custListLevelMove_.add(new LevelMove((short)25,I_RAYON_GEMME));
m1985custListLevelMove_.add(new LevelMove((short)30,I_EBOULEMENT));
m1985custListLevelMove_.add(new LevelMove((short)36,I_PIEGE_DE_ROC));
m1985custListLevelMove_.add(new LevelMove((short)42,I_TEMPETESABLE));
m1985custListLevelMove_.add(new LevelMove((short)48,I_LAME_DE_ROC));
m1985custListLevelMove_.add(new LevelMove((short)55,I_EXPLOSION));
m1985pokemonData_.setLevMoves(m1985custListLevelMove_);
m1985pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1985stringList_=new StringList(new CollCapacity(2));
m1985stringList_.add(I_FERMETE);
m1985stringList_.add(I_FORCE_SABLE);
m1985pokemonData_.setAbilities(m1985stringList_);
m1985stringList_=new StringList(new CollCapacity(8));
m1985stringList_.add(I_BARRAGE);
m1985stringList_.add(I_BLABLA_DODO);
m1985stringList_.add(I_GRAVITE);
m1985stringList_.add(I_MUR_DE_FER);
m1985stringList_.add(I_PIEGE_DE_ROC);
m1985stringList_.add(I_RONFLEMENT);
m1985stringList_.add(I_TELLURIFORCE);
m1985stringList_.add(I_FORCE);
m1985pokemonData_.setMoveTutors(m1985stringList_);
Shorts m1985shorts_=new Shorts(new CollCapacity(1));
m1985shorts_.add((short)4);
m1985pokemonData_.setHiddenMoves(m1985shorts_);
m1985shorts_=new Shorts(new CollCapacity(26));
m1985shorts_.add((short)94);
m1985shorts_.add((short)6);
m1985shorts_.add((short)10);
m1985shorts_.add((short)17);
m1985shorts_.add((short)21);
m1985shorts_.add((short)23);
m1985shorts_.add((short)26);
m1985shorts_.add((short)27);
m1985shorts_.add((short)32);
m1985shorts_.add((short)37);
m1985shorts_.add((short)39);
m1985shorts_.add((short)42);
m1985shorts_.add((short)44);
m1985shorts_.add((short)45);
m1985shorts_.add((short)48);
m1985shorts_.add((short)64);
m1985shorts_.add((short)69);
m1985shorts_.add((short)71);
m1985shorts_.add((short)78);
m1985shorts_.add((short)80);
m1985shorts_.add((short)88);
m1985shorts_.add((short)87);
m1985shorts_.add((short)90);
m1985shorts_.add((short)91);
m1985shorts_.add((short)96);
m1985shorts_.add((short)100);
m1985pokemonData_.setTechnicalMoves(m1985shorts_);
m1985pokemonData_.setBaseEvo(I_NODULITHE);
StringMap<Evolution> m1985stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
m1985stringMapEvolution_.addEntry(I_GIGALITHE,Instances.newEvolutionHappiness());
m1985pokemonData_.setEvolutions(m1985stringMapEvolution_);
m1985pokemonData_.setCatchingRate((short)120);
m1985pokemonData_.setHeight(Rate.newRate(R_9_10));
m1985pokemonData_.setExpEvo(ExpType.P);
m1985pokemonData_.setExpRate(137);
m1985stringList_=new StringList(new CollCapacity(1));
m1985stringList_.add(I_MINERAL);
m1985pokemonData_.setEggGroups(m1985stringList_);
m1985pokemonData_.setHatchingSteps(LgInt.newLgInt(R_4080));
m1985pokemonData_.setHappiness((short)70);
m1985pokemonData_.setHappinessHatch((short)140);
return m1985pokemonData_;
}
static PokemonData p256(){
PokemonData m1986pokemonData_=Instances.newPokemonData();
m1986pokemonData_.setWeight(Rate.newRate(R_32_5));
StringList m1986stringList_=new StringList(new CollCapacity(1));
m1986stringList_.add(I_PLANTE);
m1986pokemonData_.setTypes(m1986stringList_);
IdMap<Statistic,StatBaseEv> m1986enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)49,(short)0));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)49,(short)0));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)1));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)45,(short)0));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)65,(short)0));
m1986enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)45,(short)0));
m1986pokemonData_.setStatistics(m1986enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1986custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1986custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1986custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1986custListLevelMove_.add(new LevelMove((short)6,I_TRANCH_HERBE));
m1986custListLevelMove_.add(new LevelMove((short)9,I_POUDRE_TOXIK));
m1986custListLevelMove_.add(new LevelMove((short)12,I_SYNTHESE));
m1986custListLevelMove_.add(new LevelMove((short)17,I_PROTECTION));
m1986custListLevelMove_.add(new LevelMove((short)20,I_FEUILLEMAGIK));
m1986custListLevelMove_.add(new LevelMove((short)23,I_DON_NATUREL));
m1986custListLevelMove_.add(new LevelMove((short)28,I_DOUX_PARFUM));
m1986custListLevelMove_.add(new LevelMove((short)31,I_MUR_LUMIERE));
m1986custListLevelMove_.add(new LevelMove((short)34,I_PLAQUAGE));
m1986custListLevelMove_.add(new LevelMove((short)39,I_RUNE_PROTECT));
m1986custListLevelMove_.add(new LevelMove((short)42,I_AROMATHERAPI));
m1986custListLevelMove_.add(new LevelMove((short)45,I_LANCE_SOLEIL));
m1986pokemonData_.setLevMoves(m1986custListLevelMove_);
m1986pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1986stringList_=new StringList(new CollCapacity(1));
m1986stringList_.add(I_ENGRAIS);
m1986pokemonData_.setAbilities(m1986stringList_);
m1986stringList_=new StringList(new CollCapacity(34));
m1986stringList_.add(I_AROMATHERAPI);
m1986stringList_.add(I_BLABLA_DODO);
m1986stringList_.add(I_CANON_GRAINE);
m1986stringList_.add(I_CLONAGE);
m1986stringList_.add(I_COPIE);
m1986stringList_.add(I_COUD_BOUE);
m1986stringList_.add(I_COUP_D_BOULE);
m1986stringList_.add(I_DAMOCLES);
m1986stringList_.add(I_DANSE_LAMES);
m1986stringList_.add(I_ESSORAGE);
m1986stringList_.add(I_FLEAU);
m1986stringList_.add(I_FORCE_NATURE);
m1986stringList_.add(I_FOUET_LIANES);
m1986stringList_.add(I_PLAQUAGE);
m1986stringList_.add(I_POUV_ANTIQUE);
m1986stringList_.add(I_RACINES);
m1986stringList_.add(I_REFLET_MAGIK);
m1986stringList_.add(I_RIPOSTE);
m1986stringList_.add(I_RONFLEMENT);
m1986stringList_.add(I_SIFFL_HERBE);
m1986stringList_.add(I_SOUCIGRAINE);
m1986stringList_.add(I_SYNTHESE);
m1986stringList_.add(I_TAILLADE);
m1986stringList_.add(I_TEMPETEVERTE);
m1986stringList_.add(I_TENACITE);
m1986stringList_.add(I_VAMPIGRAINE);
m1986stringList_.add(I_VANTARDISE);
m1986stringList_.add(I_AIRE_D_HERBE);
m1986stringList_.add(I_CHAMP_HERBU);
m1986stringList_.add(I_GIGA_SANGSUE);
m1986stringList_.add(I_QUEUE_DE_FER);
m1986stringList_.add(I_REGENERATION);
m1986stringList_.add(I_VIBRA_SOIN);
m1986stringList_.add(I_COUPE);
m1986pokemonData_.setMoveTutors(m1986stringList_);
Shorts m1986shorts_=new Shorts(new CollCapacity(1));
m1986shorts_.add((short)1);
m1986pokemonData_.setHiddenMoves(m1986shorts_);
m1986shorts_=new Shorts(new CollCapacity(25));
m1986shorts_.add((short)70);
m1986shorts_.add((short)6);
m1986shorts_.add((short)10);
m1986shorts_.add((short)11);
m1986shorts_.add((short)16);
m1986shorts_.add((short)17);
m1986shorts_.add((short)20);
m1986shorts_.add((short)21);
m1986shorts_.add((short)22);
m1986shorts_.add((short)27);
m1986shorts_.add((short)32);
m1986shorts_.add((short)33);
m1986shorts_.add((short)42);
m1986shorts_.add((short)44);
m1986shorts_.add((short)45);
m1986shorts_.add((short)48);
m1986shorts_.add((short)49);
m1986shorts_.add((short)53);
m1986shorts_.add((short)75);
m1986shorts_.add((short)88);
m1986shorts_.add((short)86);
m1986shorts_.add((short)87);
m1986shorts_.add((short)90);
m1986shorts_.add((short)96);
m1986shorts_.add((short)100);
m1986pokemonData_.setTechnicalMoves(m1986shorts_);
m1986pokemonData_.setBaseEvo(I_GERMIGNON);
StringMap<Evolution> m1986stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1986evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1986evolutionLevelSimple_.setLevel((short)16);
m1986stringMapEvolution_.addEntry(I_MACRONIUM,m1986evolutionLevelSimple_);
m1986pokemonData_.setEvolutions(m1986stringMapEvolution_);
m1986pokemonData_.setCatchingRate((short)45);
m1986pokemonData_.setHeight(Rate.newRate(R_9_10));
m1986pokemonData_.setExpEvo(ExpType.P);
m1986pokemonData_.setExpRate(64);
m1986stringList_=new StringList(new CollCapacity(2));
m1986stringList_.add(I_MONSTRE);
m1986stringList_.add(I_PLANTE);
m1986pokemonData_.setEggGroups(m1986stringList_);
m1986pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1986pokemonData_.setHappiness((short)70);
m1986pokemonData_.setHappinessHatch((short)140);
return m1986pokemonData_;
}
static PokemonData p257(){
PokemonData m1987pokemonData_=Instances.newPokemonData();
m1987pokemonData_.setWeight(Rate.newRate(R_260));
StringList m1987stringList_=new StringList(new CollCapacity(1));
m1987stringList_.add(I_ROCHE);
m1987pokemonData_.setTypes(m1987stringList_);
IdMap<Statistic,StatBaseEv> m1987enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)135,(short)3));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)70,(short)0));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)85,(short)0));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)130,(short)0));
m1987enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)25,(short)0));
m1987pokemonData_.setStatistics(m1987enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1987custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1987custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1987custListLevelMove_.add(new LevelMove((short)4,I_ARMURE));
m1987custListLevelMove_.add(new LevelMove((short)7,I_JET_DE_SABLE));
m1987custListLevelMove_.add(new LevelMove((short)10,I_COUP_D_BOULE));
m1987custListLevelMove_.add(new LevelMove((short)14,I_BOULE_ROC));
m1987custListLevelMove_.add(new LevelMove((short)17,I_COUD_BOUE));
m1987custListLevelMove_.add(new LevelMove((short)20,I_MUR_DE_FER));
m1987custListLevelMove_.add(new LevelMove((short)23,I_ANTI_AIR));
m1987custListLevelMove_.add(new LevelMove((short)25,I_RAYON_GEMME));
m1987custListLevelMove_.add(new LevelMove((short)30,I_EBOULEMENT));
m1987custListLevelMove_.add(new LevelMove((short)36,I_PIEGE_DE_ROC));
m1987custListLevelMove_.add(new LevelMove((short)42,I_TEMPETESABLE));
m1987custListLevelMove_.add(new LevelMove((short)48,I_LAME_DE_ROC));
m1987custListLevelMove_.add(new LevelMove((short)55,I_EXPLOSION));
m1987pokemonData_.setLevMoves(m1987custListLevelMove_);
m1987pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1987stringList_=new StringList(new CollCapacity(2));
m1987stringList_.add(I_FERMETE);
m1987stringList_.add(I_FORCE_SABLE);
m1987pokemonData_.setAbilities(m1987stringList_);
m1987stringList_=new StringList(new CollCapacity(10));
m1987stringList_.add(I_BARRAGE);
m1987stringList_.add(I_BLABLA_DODO);
m1987stringList_.add(I_GRAVITE);
m1987stringList_.add(I_MUR_DE_FER);
m1987stringList_.add(I_PIEGE_DE_ROC);
m1987stringList_.add(I_RONFLEMENT);
m1987stringList_.add(I_SURPUISSANCE);
m1987stringList_.add(I_TELLURIFORCE);
m1987stringList_.add(I_TETE_DE_FER);
m1987stringList_.add(I_FORCE);
m1987pokemonData_.setMoveTutors(m1987stringList_);
Shorts m1987shorts_=new Shorts(new CollCapacity(1));
m1987shorts_.add((short)4);
m1987pokemonData_.setHiddenMoves(m1987shorts_);
m1987shorts_=new Shorts(new CollCapacity(29));
m1987shorts_.add((short)94);
m1987shorts_.add((short)6);
m1987shorts_.add((short)10);
m1987shorts_.add((short)15);
m1987shorts_.add((short)17);
m1987shorts_.add((short)21);
m1987shorts_.add((short)22);
m1987shorts_.add((short)23);
m1987shorts_.add((short)26);
m1987shorts_.add((short)27);
m1987shorts_.add((short)32);
m1987shorts_.add((short)37);
m1987shorts_.add((short)39);
m1987shorts_.add((short)42);
m1987shorts_.add((short)44);
m1987shorts_.add((short)45);
m1987shorts_.add((short)48);
m1987shorts_.add((short)64);
m1987shorts_.add((short)68);
m1987shorts_.add((short)69);
m1987shorts_.add((short)71);
m1987shorts_.add((short)78);
m1987shorts_.add((short)80);
m1987shorts_.add((short)88);
m1987shorts_.add((short)87);
m1987shorts_.add((short)90);
m1987shorts_.add((short)91);
m1987shorts_.add((short)96);
m1987shorts_.add((short)100);
m1987pokemonData_.setTechnicalMoves(m1987shorts_);
m1987pokemonData_.setBaseEvo(I_NODULITHE);
m1987pokemonData_.setCatchingRate((short)45);
m1987pokemonData_.setHeight(Rate.newRate(R_17_10));
m1987pokemonData_.setExpEvo(ExpType.P);
m1987pokemonData_.setExpRate(227);
m1987stringList_=new StringList(new CollCapacity(1));
m1987stringList_.add(I_MINERAL);
m1987pokemonData_.setEggGroups(m1987stringList_);
m1987pokemonData_.setHatchingSteps(LgInt.newLgInt(R_4080));
m1987pokemonData_.setHappiness((short)70);
m1987pokemonData_.setHappinessHatch((short)140);
return m1987pokemonData_;
}
static PokemonData p258(){
PokemonData m1988pokemonData_=Instances.newPokemonData();
m1988pokemonData_.setWeight(Rate.newRate(R_83_2));
StringList m1988stringList_=new StringList(new CollCapacity(2));
m1988stringList_.add(I_NORMAL);
m1988stringList_.add(I_PSY);
m1988pokemonData_.setTypes(m1988stringList_);
IdMap<Statistic,StatBaseEv> m1988enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)80,(short)0));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)90,(short)2));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)65,(short)0));
m1988enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)0));
m1988pokemonData_.setStatistics(m1988enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1988custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1988custListLevelMove_.add(new LevelMove((short)1,I_PERMUFORCE));
m1988custListLevelMove_.add(new LevelMove((short)1,I_PERMUGARDE));
m1988custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1988custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1988custListLevelMove_.add(new LevelMove((short)1,I_ETONNEMENT));
m1988custListLevelMove_.add(new LevelMove((short)1,I_CHOC_MENTAL));
m1988custListLevelMove_.add(new LevelMove((short)5,I_FLAIR));
m1988custListLevelMove_.add(new LevelMove((short)10,I_ECRASEMENT));
m1988custListLevelMove_.add(new LevelMove((short)14,I_HATE));
m1988custListLevelMove_.add(new LevelMove((short)19,I_RAFALE_PSY));
m1988custListLevelMove_.add(new LevelMove((short)23,I_RELAIS));
m1988custListLevelMove_.add(new LevelMove((short)28,I_ASSURANCE));
m1988custListLevelMove_.add(new LevelMove((short)32,I_COUP_DOUBLE));
m1988custListLevelMove_.add(new LevelMove((short)37,I_PSYKO));
m1988custListLevelMove_.add(new LevelMove((short)41,I_PSYKOUD_BOUL));
m1988custListLevelMove_.add(new LevelMove((short)46,I_MACHOUILLE));
m1988pokemonData_.setLevMoves(m1988custListLevelMove_);
m1988pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1988stringList_=new StringList(new CollCapacity(2));
m1988stringList_.add(I_ATTENTION);
m1988stringList_.add(I_MATINAL);
m1988pokemonData_.setAbilities(m1988stringList_);
m1988stringList_=new StringList(new CollCapacity(38));
m1988stringList_.add(I_AMNESIE);
m1988stringList_.add(I_BASTON);
m1988stringList_.add(I_BELIER);
m1988stringList_.add(I_BLABLA_DODO);
m1988stringList_.add(I_BOOST);
m1988stringList_.add(I_BROUHAHA);
m1988stringList_.add(I_CAGE_ECLAIR);
m1988stringList_.add(I_CLAIRVOYANCE);
m1988stringList_.add(I_CLONAGE);
m1988stringList_.add(I_COPIE);
m1988stringList_.add(I_COUD_BOUE);
m1988stringList_.add(I_COUP_BAS);
m1988stringList_.add(I_COUP_D_BOULE);
m1988stringList_.add(I_COUPE_VENT);
m1988stringList_.add(I_DAMOCLES);
m1988stringList_.add(I_DEVOREVE);
m1988stringList_.add(I_DOUBLE_PIED);
m1988stringList_.add(I_GRAVITE);
m1988stringList_.add(I_METEORES);
m1988stringList_.add(I_PLAQUAGE);
m1988stringList_.add(I_PRESCIENCE);
m1988stringList_.add(I_PSYKOUD_BOUL);
m1988stringList_.add(I_RAYON_SIGNAL);
m1988stringList_.add(I_REFLET_MAGIK);
m1988stringList_.add(I_RONFLEMENT);
m1988stringList_.add(I_TENACITE);
m1988stringList_.add(I_TOURMAGIK);
m1988stringList_.add(I_VANTARDISE);
m1988stringList_.add(I_VOEU);
m1988stringList_.add(I_VOILE_MIROIR);
m1988stringList_.add(I_ECHANGE);
m1988stringList_.add(I_FORCE_CACHEE);
m1988stringList_.add(I_MEGAPHONE);
m1988stringList_.add(I_QUEUE_DE_FER);
m1988stringList_.add(I_RECYCLAGE);
m1988stringList_.add(I_REGARD_NOIR);
m1988stringList_.add(I_TRICHERIE);
m1988stringList_.add(I_FORCE);
m1988pokemonData_.setMoveTutors(m1988stringList_);
Shorts m1988shorts_=new Shorts(new CollCapacity(1));
m1988shorts_.add((short)4);
m1988pokemonData_.setHiddenMoves(m1988shorts_);
m1988shorts_=new Shorts(new CollCapacity(39));
m1988shorts_.add((short)70);
m1988shorts_.add((short)94);
m1988shorts_.add((short)3);
m1988shorts_.add((short)4);
m1988shorts_.add((short)6);
m1988shorts_.add((short)10);
m1988shorts_.add((short)11);
m1988shorts_.add((short)16);
m1988shorts_.add((short)17);
m1988shorts_.add((short)18);
m1988shorts_.add((short)21);
m1988shorts_.add((short)24);
m1988shorts_.add((short)25);
m1988shorts_.add((short)26);
m1988shorts_.add((short)27);
m1988shorts_.add((short)29);
m1988shorts_.add((short)30);
m1988shorts_.add((short)32);
m1988shorts_.add((short)33);
m1988shorts_.add((short)42);
m1988shorts_.add((short)44);
m1988shorts_.add((short)45);
m1988shorts_.add((short)46);
m1988shorts_.add((short)48);
m1988shorts_.add((short)49);
m1988shorts_.add((short)53);
m1988shorts_.add((short)57);
m1988shorts_.add((short)67);
m1988shorts_.add((short)73);
m1988shorts_.add((short)77);
m1988shorts_.add((short)78);
m1988shorts_.add((short)88);
m1988shorts_.add((short)85);
m1988shorts_.add((short)86);
m1988shorts_.add((short)87);
m1988shorts_.add((short)90);
m1988shorts_.add((short)92);
m1988shorts_.add((short)99);
m1988shorts_.add((short)100);
m1988pokemonData_.setTechnicalMoves(m1988shorts_);
m1988pokemonData_.setBaseEvo(I_GIRAFARIG);
m1988pokemonData_.setCatchingRate((short)60);
m1988pokemonData_.setHeight(Rate.newRate(R_3_2));
m1988pokemonData_.setExpEvo(ExpType.M);
m1988pokemonData_.setExpRate(159);
m1988stringList_=new StringList(new CollCapacity(1));
m1988stringList_.add(I_SOL);
m1988pokemonData_.setEggGroups(m1988stringList_);
m1988pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1988pokemonData_.setHappiness((short)70);
m1988pokemonData_.setHappinessHatch((short)140);
return m1988pokemonData_;
}
static PokemonData p259(){
PokemonData m1989pokemonData_=Instances.newPokemonData();
m1989pokemonData_.setWeight(Rate.newRate(R_750));
StringList m1989stringList_=new StringList(new CollCapacity(2));
m1989stringList_.add(I_DRAGON);
m1989stringList_.add(I_SPECTRE);
m1989pokemonData_.setTypes(m1989stringList_);
IdMap<Statistic,StatBaseEv> m1989enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)100,(short)0));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)100,(short)0));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)120,(short)0));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)150,(short)3));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)120,(short)0));
m1989enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)90,(short)0));
m1989pokemonData_.setStatistics(m1989enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1989custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(13));
m1989custListLevelMove_.add(new LevelMove((short)1,I_DRACOSOUFFLE));
m1989custListLevelMove_.add(new LevelMove((short)1,I_GRIMACE));
m1989custListLevelMove_.add(new LevelMove((short)6,I_VENT_MAUVAIS));
m1989custListLevelMove_.add(new LevelMove((short)10,I_POUV_ANTIQUE));
m1989custListLevelMove_.add(new LevelMove((short)15,I_TRANCHE));
m1989custListLevelMove_.add(new LevelMove((short)19,I_OMBRE_PORTEE));
m1989custListLevelMove_.add(new LevelMove((short)24,I_PRLVT_DESTIN));
m1989custListLevelMove_.add(new LevelMove((short)28,I_DRACOGRIFFE));
m1989custListLevelMove_.add(new LevelMove((short)33,I_TELLURIFORCE));
m1989custListLevelMove_.add(new LevelMove((short)37,I_AURASPHERE));
m1989custListLevelMove_.add(new LevelMove((short)42,I_GRIFFE_OMBRE));
m1989custListLevelMove_.add(new LevelMove((short)46,I_REVENANT));
m1989custListLevelMove_.add(new LevelMove((short)50,I_CHATIMENT));
m1989pokemonData_.setLevMoves(m1989custListLevelMove_);
m1989pokemonData_.setGenderRep(GenderRepartition.LEGENDARY);
m1989stringList_=new StringList(new CollCapacity(1));
m1989stringList_.add(I_PRESSION);
m1989pokemonData_.setAbilities(m1989stringList_);
m1989stringList_=new StringList(new CollCapacity(35));
m1989stringList_.add(I_AURASPHERE);
m1989stringList_.add(I_BALANCE);
m1989stringList_.add(I_COLERE);
m1989stringList_.add(I_COUD_BOUE);
m1989stringList_.add(I_COUP_D_BOULE);
m1989stringList_.add(I_DEPIT);
m1989stringList_.add(I_DRACO_METEOR);
m1989stringList_.add(I_DRACOGRIFFE);
m1989stringList_.add(I_DRACOSOUFFLE);
m1989stringList_.add(I_GRAVITE);
m1989stringList_.add(I_GRIFFE_OMBRE);
m1989stringList_.add(I_GRIMACE);
m1989stringList_.add(I_HYDROQUEUE);
m1989stringList_.add(I_METEORES);
m1989stringList_.add(I_OMBRE_PORTEE);
m1989stringList_.add(I_OURAGAN);
m1989stringList_.add(I_POUV_ANTIQUE);
m1989stringList_.add(I_REVENANT);
m1989stringList_.add(I_RONFLEMENT);
m1989stringList_.add(I_TAILLADE);
m1989stringList_.add(I_TELLURIFORCE);
m1989stringList_.add(I_TETE_DE_FER);
m1989stringList_.add(I_TRANCH_AIR);
m1989stringList_.add(I_TRANCHE);
m1989stringList_.add(I_VENT_GLACE);
m1989stringList_.add(I_VENT_MAUVAIS);
m1989stringList_.add(I_BLABLA_DODO);
m1989stringList_.add(I_DRACOCHOC);
m1989stringList_.add(I_MEGAPHONE);
m1989stringList_.add(I_PRLVT_DESTIN);
m1989stringList_.add(I_QUEUE_DE_FER);
m1989stringList_.add(I_VIBROBSCUR);
m1989stringList_.add(I_COUPE);
m1989stringList_.add(I_ENVOL);
m1989stringList_.add(I_FORCE);
m1989pokemonData_.setMoveTutors(m1989stringList_);
Shorts m1989shorts_=new Shorts(new CollCapacity(3));
m1989shorts_.add((short)1);
m1989shorts_.add((short)2);
m1989shorts_.add((short)4);
m1989pokemonData_.setHiddenMoves(m1989shorts_);
m1989shorts_=new Shorts(new CollCapacity(43));
m1989shorts_.add((short)94);
m1989shorts_.add((short)1);
m1989shorts_.add((short)2);
m1989shorts_.add((short)4);
m1989shorts_.add((short)5);
m1989shorts_.add((short)6);
m1989shorts_.add((short)10);
m1989shorts_.add((short)11);
m1989shorts_.add((short)15);
m1989shorts_.add((short)17);
m1989shorts_.add((short)18);
m1989shorts_.add((short)20);
m1989shorts_.add((short)21);
m1989shorts_.add((short)24);
m1989shorts_.add((short)25);
m1989shorts_.add((short)26);
m1989shorts_.add((short)27);
m1989shorts_.add((short)29);
m1989shorts_.add((short)30);
m1989shorts_.add((short)32);
m1989shorts_.add((short)40);
m1989shorts_.add((short)42);
m1989shorts_.add((short)44);
m1989shorts_.add((short)51);
m1989shorts_.add((short)48);
m1989shorts_.add((short)49);
m1989shorts_.add((short)53);
m1989shorts_.add((short)57);
m1989shorts_.add((short)61);
m1989shorts_.add((short)65);
m1989shorts_.add((short)66);
m1989shorts_.add((short)68);
m1989shorts_.add((short)71);
m1989shorts_.add((short)73);
m1989shorts_.add((short)77);
m1989shorts_.add((short)78);
m1989shorts_.add((short)97);
m1989shorts_.add((short)88);
m1989shorts_.add((short)82);
m1989shorts_.add((short)85);
m1989shorts_.add((short)87);
m1989shorts_.add((short)90);
m1989shorts_.add((short)100);
m1989pokemonData_.setTechnicalMoves(m1989shorts_);
m1989pokemonData_.setBaseEvo(I_GIRATINA);
m1989pokemonData_.setCatchingRate((short)3);
m1989pokemonData_.setHeight(Rate.newRate(R_9_2));
m1989pokemonData_.setExpEvo(ExpType.L);
m1989pokemonData_.setExpRate(306);
m1989stringList_=new StringList(new CollCapacity(1));
m1989stringList_.add(I_SANS_OEUF);
m1989pokemonData_.setEggGroups(m1989stringList_);
m1989pokemonData_.setHatchingSteps(LgInt.newLgInt(R_30720));
m1989pokemonData_.setHappiness((short)70);
m1989pokemonData_.setHappinessHatch((short)140);
return m1989pokemonData_;
}
static PokemonData p260(){
PokemonData m1990pokemonData_=Instances.newPokemonData();
m1990pokemonData_.setWeight(Rate.newRate(R_259_10));
StringList m1990stringList_=new StringList(new CollCapacity(1));
m1990stringList_.add(I_GLACE);
m1990pokemonData_.setTypes(m1990stringList_);
IdMap<Statistic,StatBaseEv> m1990enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)60,(short)0));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)130,(short)2));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)95,(short)0));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)65,(short)0));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)110,(short)0));
m1990enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)0));
m1990pokemonData_.setStatistics(m1990enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1990custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1990custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1990custListLevelMove_.add(new LevelMove((short)1,I_MIMI_QUEUE));
m1990custListLevelMove_.add(new LevelMove((short)1,I_COUP_D_MAIN));
m1990custListLevelMove_.add(new LevelMove((short)5,I_JET_DE_SABLE));
m1990custListLevelMove_.add(new LevelMove((short)9,I_VENT_GLACE));
m1990custListLevelMove_.add(new LevelMove((short)13,I_VIVE_ATTAQUE));
m1990custListLevelMove_.add(new LevelMove((short)17,I_MORSURE));
m1990custListLevelMove_.add(new LevelMove((short)20,I_CROCS_GIVRE));
m1990custListLevelMove_.add(new LevelMove((short)25,I_ECLATS_GLACE));
m1990custListLevelMove_.add(new LevelMove((short)29,I_BOUCLIER));
m1990custListLevelMove_.add(new LevelMove((short)33,I_VOILE_MIROIR));
m1990custListLevelMove_.add(new LevelMove((short)37,I_GRELE));
m1990custListLevelMove_.add(new LevelMove((short)41,I_DERNIERECOUR));
m1990custListLevelMove_.add(new LevelMove((short)45,I_BLIZZARD));
m1990pokemonData_.setLevMoves(m1990custListLevelMove_);
m1990pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1990stringList_=new StringList(new CollCapacity(1));
m1990stringList_.add(I_RIDEAU_NEIGE);
m1990pokemonData_.setAbilities(m1990stringList_);
m1990stringList_=new StringList(new CollCapacity(23));
m1990stringList_.add(I_BAILLEMENT);
m1990stringList_.add(I_CHARME);
m1990stringList_.add(I_CHATOUILLE);
m1990stringList_.add(I_COUD_BOUE);
m1990stringList_.add(I_COUP_D_BOULE);
m1990stringList_.add(I_CROCO_LARME);
m1990stringList_.add(I_DERNIERECOUR);
m1990stringList_.add(I_DETECTION);
m1990stringList_.add(I_FLEAU);
m1990stringList_.add(I_GLAS_DE_SOIN);
m1990stringList_.add(I_HYDROQUEUE);
m1990stringList_.add(I_IMPLORE);
m1990stringList_.add(I_MALEDICTION);
m1990stringList_.add(I_METEORES);
m1990stringList_.add(I_RAYON_SIGNAL);
m1990stringList_.add(I_RONFLEMENT);
m1990stringList_.add(I_VENT_GLACE);
m1990stringList_.add(I_VOEU);
m1990stringList_.add(I_BLABLA_DODO);
m1990stringList_.add(I_COUP_D_MAIN);
m1990stringList_.add(I_MEGAPHONE);
m1990stringList_.add(I_QUEUE_DE_FER);
m1990stringList_.add(I_FORCE);
m1990pokemonData_.setMoveTutors(m1990stringList_);
Shorts m1990shorts_=new Shorts(new CollCapacity(1));
m1990shorts_.add((short)4);
m1990pokemonData_.setHiddenMoves(m1990shorts_);
m1990shorts_=new Shorts(new CollCapacity(28));
m1990shorts_.add((short)94);
m1990shorts_.add((short)5);
m1990shorts_.add((short)6);
m1990shorts_.add((short)7);
m1990shorts_.add((short)10);
m1990shorts_.add((short)11);
m1990shorts_.add((short)13);
m1990shorts_.add((short)14);
m1990shorts_.add((short)15);
m1990shorts_.add((short)17);
m1990shorts_.add((short)18);
m1990shorts_.add((short)21);
m1990shorts_.add((short)27);
m1990shorts_.add((short)28);
m1990shorts_.add((short)30);
m1990shorts_.add((short)32);
m1990shorts_.add((short)42);
m1990shorts_.add((short)44);
m1990shorts_.add((short)45);
m1990shorts_.add((short)48);
m1990shorts_.add((short)49);
m1990shorts_.add((short)67);
m1990shorts_.add((short)68);
m1990shorts_.add((short)79);
m1990shorts_.add((short)88);
m1990shorts_.add((short)87);
m1990shorts_.add((short)90);
m1990shorts_.add((short)100);
m1990pokemonData_.setTechnicalMoves(m1990shorts_);
m1990pokemonData_.setBaseEvo(I_EVOLI);
m1990pokemonData_.setCatchingRate((short)45);
m1990pokemonData_.setHeight(Rate.newRate(R_4_5));
m1990pokemonData_.setExpEvo(ExpType.M);
m1990pokemonData_.setExpRate(184);
m1990stringList_=new StringList(new CollCapacity(1));
m1990stringList_.add(I_SOL);
m1990pokemonData_.setEggGroups(m1990stringList_);
m1990pokemonData_.setHatchingSteps(LgInt.newLgInt(R_8960));
m1990pokemonData_.setHappiness((short)70);
m1990pokemonData_.setHappinessHatch((short)140);
return m1990pokemonData_;
}
static PokemonData p261(){
PokemonData m1991pokemonData_=Instances.newPokemonData();
m1991pokemonData_.setWeight(Rate.newRate(R_103_10));
StringList m1991stringList_=new StringList(new CollCapacity(1));
m1991stringList_.add(I_POISON);
m1991pokemonData_.setTypes(m1991stringList_);
IdMap<Statistic,StatBaseEv> m1991enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)43,(short)0));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)43,(short)0));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)53,(short)0));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)1));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)53,(short)0));
m1991enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1991pokemonData_.setStatistics(m1991enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1991custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(16));
m1991custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1991custListLevelMove_.add(new LevelMove((short)6,I_BAILLEMENT));
m1991custListLevelMove_.add(new LevelMove((short)9,I_GAZ_TOXIK));
m1991custListLevelMove_.add(new LevelMove((short)14,I_DETRITUS));
m1991custListLevelMove_.add(new LevelMove((short)17,I_AMNESIE));
m1991custListLevelMove_.add(new LevelMove((short)23,I_ENCORE));
m1991custListLevelMove_.add(new LevelMove((short)28,I_TOXIK));
m1991custListLevelMove_.add(new LevelMove((short)34,I_BOMBE_ACIDE));
m1991custListLevelMove_.add(new LevelMove((short)39,I_STOCKAGE));
m1991custListLevelMove_.add(new LevelMove((short)39,I_RELACHE));
m1991custListLevelMove_.add(new LevelMove((short)39,I_AVALE));
m1991custListLevelMove_.add(new LevelMove((short)40,I_ERUCTATION));
m1991custListLevelMove_.add(new LevelMove((short)44,I_BOMB_BEURK));
m1991custListLevelMove_.add(new LevelMove((short)49,I_SUC_DIGESTIF));
m1991custListLevelMove_.add(new LevelMove((short)54,I_ESSORAGE));
m1991custListLevelMove_.add(new LevelMove((short)59,I_DETRICANON));
m1991pokemonData_.setLevMoves(m1991custListLevelMove_);
m1991pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1991stringList_=new StringList(new CollCapacity(2));
m1991stringList_.add(I_GLUE);
m1991stringList_.add(I_SUINTEMENT);
m1991pokemonData_.setAbilities(m1991stringList_);
m1991stringList_=new StringList(new CollCapacity(31));
m1991stringList_.add(I_ACIDARMURE);
m1991stringList_.add(I_BALANCE);
m1991stringList_.add(I_BLABLA_DODO);
m1991stringList_.add(I_BOUL_ARMURE);
m1991stringList_.add(I_CANON_GRAINE);
m1991stringList_.add(I_CLONAGE);
m1991stringList_.add(I_COPIE);
m1991stringList_.add(I_COUD_BOUE);
m1991stringList_.add(I_COUP_D_BOULE);
m1991stringList_.add(I_DAMOCLES);
m1991stringList_.add(I_DETRICANON);
m1991stringList_.add(I_DEVOREVE);
m1991stringList_.add(I_DYNAMOPOING);
m1991stringList_.add(I_EXPLOSION);
m1991stringList_.add(I_MALEDICTION);
m1991stringList_.add(I_PLAQUAGE);
m1991stringList_.add(I_POING_DE_FEU);
m1991stringList_.add(I_POING_ECLAIR);
m1991stringList_.add(I_POINGLACE);
m1991stringList_.add(I_PUREDPOIS);
m1991stringList_.add(I_RIPOSTE);
m1991stringList_.add(I_RONFLEMENT);
m1991stringList_.add(I_ROULADE);
m1991stringList_.add(I_SUC_DIGESTIF);
m1991stringList_.add(I_TENACITE);
m1991stringList_.add(I_VANTARDISE);
m1991stringList_.add(I_GIGA_SANGSUE);
m1991stringList_.add(I_PIEGE_VENIN);
m1991stringList_.add(I_PRLVT_DESTIN);
m1991stringList_.add(I_SAISIE);
m1991stringList_.add(I_FORCE);
m1991pokemonData_.setMoveTutors(m1991stringList_);
Shorts m1991shorts_=new Shorts(new CollCapacity(1));
m1991shorts_.add((short)4);
m1991pokemonData_.setHiddenMoves(m1991shorts_);
m1991shorts_=new Shorts(new CollCapacity(27));
m1991shorts_.add((short)94);
m1991shorts_.add((short)6);
m1991shorts_.add((short)9);
m1991shorts_.add((short)10);
m1991shorts_.add((short)11);
m1991shorts_.add((short)13);
m1991shorts_.add((short)17);
m1991shorts_.add((short)18);
m1991shorts_.add((short)21);
m1991shorts_.add((short)22);
m1991shorts_.add((short)27);
m1991shorts_.add((short)30);
m1991shorts_.add((short)32);
m1991shorts_.add((short)34);
m1991shorts_.add((short)36);
m1991shorts_.add((short)42);
m1991shorts_.add((short)44);
m1991shorts_.add((short)45);
m1991shorts_.add((short)48);
m1991shorts_.add((short)64);
m1991shorts_.add((short)88);
m1991shorts_.add((short)83);
m1991shorts_.add((short)85);
m1991shorts_.add((short)87);
m1991shorts_.add((short)90);
m1991shorts_.add((short)98);
m1991shorts_.add((short)100);
m1991pokemonData_.setTechnicalMoves(m1991shorts_);
m1991pokemonData_.setBaseEvo(I_GLOUPTI);
StringMap<Evolution> m1991stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1991evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1991evolutionLevelSimple_.setLevel((short)26);
m1991stringMapEvolution_.addEntry(I_AVALTOUT,m1991evolutionLevelSimple_);
m1991pokemonData_.setEvolutions(m1991stringMapEvolution_);
m1991pokemonData_.setCatchingRate((short)225);
m1991pokemonData_.setHeight(Rate.newRate(R_2_5));
m1991pokemonData_.setExpEvo(ExpType.F);
m1991pokemonData_.setExpRate(60);
m1991stringList_=new StringList(new CollCapacity(1));
m1991stringList_.add(I_INDETERMINE);
m1991pokemonData_.setEggGroups(m1991stringList_);
m1991pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1991pokemonData_.setHappiness((short)70);
m1991pokemonData_.setHappinessHatch((short)140);
return m1991pokemonData_;
}
static PokemonData p262(){
PokemonData m1992pokemonData_=Instances.newPokemonData();
m1992pokemonData_.setWeight(Rate.newRate(R_38_5));
StringList m1992stringList_=new StringList(new CollCapacity(1));
m1992stringList_.add(I_EAU);
m1992pokemonData_.setTypes(m1992stringList_);
IdMap<Statistic,StatBaseEv> m1992enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)70,(short)1));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)50,(short)0));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)50,(short)0));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)50,(short)0));
m1992enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)40,(short)0));
m1992pokemonData_.setStatistics(m1992enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1992custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(12));
m1992custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1992custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1992custListLevelMove_.add(new LevelMove((short)6,I_COUD_BOUE));
m1992custListLevelMove_.add(new LevelMove((short)10,I_PISTOLET_A_O));
m1992custListLevelMove_.add(new LevelMove((short)15,I_PATIENCE));
m1992custListLevelMove_.add(new LevelMove((short)19,I_CLAIRVOYANCE));
m1992custListLevelMove_.add(new LevelMove((short)24,I_LANCE_BOUE));
m1992custListLevelMove_.add(new LevelMove((short)28,I_BELIER));
m1992custListLevelMove_.add(new LevelMove((short)33,I_SIPHON));
m1992custListLevelMove_.add(new LevelMove((short)37,I_ABRI));
m1992custListLevelMove_.add(new LevelMove((short)42,I_HYDROCANON));
m1992custListLevelMove_.add(new LevelMove((short)46,I_EFFORT));
m1992pokemonData_.setLevMoves(m1992custListLevelMove_);
m1992pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1992stringList_=new StringList(new CollCapacity(1));
m1992stringList_.add(I_TORRENT);
m1992pokemonData_.setAbilities(m1992stringList_);
m1992stringList_=new StringList(new CollCapacity(39));
m1992stringList_.add(I_BAILLEMENT);
m1992stringList_.add(I_BALAYAGE);
m1992stringList_.add(I_BALL_GLACE);
m1992stringList_.add(I_BLABLA_DODO);
m1992stringList_.add(I_BOUE_BOMBE);
m1992stringList_.add(I_BOUL_ARMURE);
m1992stringList_.add(I_BROUHAHA);
m1992stringList_.add(I_CLONAGE);
m1992stringList_.add(I_COPIE);
m1992stringList_.add(I_COUD_BOUE);
m1992stringList_.add(I_COUP_D_BOULE);
m1992stringList_.add(I_DAMOCLES);
m1992stringList_.add(I_DETRITUS);
m1992stringList_.add(I_ECRASEMENT);
m1992stringList_.add(I_EFFORT);
m1992stringList_.add(I_HYDROQUEUE);
m1992stringList_.add(I_MALEDICTION);
m1992stringList_.add(I_MORSURE);
m1992stringList_.add(I_PLAQUAGE);
m1992stringList_.add(I_PLONGEE);
m1992stringList_.add(I_POUV_ANTIQUE);
m1992stringList_.add(I_REGENERATION);
m1992stringList_.add(I_RIPOSTE);
m1992stringList_.add(I_RONFLEMENT);
m1992stringList_.add(I_ROULADE);
m1992stringList_.add(I_SURPUISSANCE);
m1992stringList_.add(I_TENACITE);
m1992stringList_.add(I_VANTARDISE);
m1992stringList_.add(I_VENT_GLACE);
m1992stringList_.add(I_VOILE_MIROIR);
m1992stringList_.add(I_AIRE_D_EAU);
m1992stringList_.add(I_AVALANCHE);
m1992stringList_.add(I_BOUCLIER);
m1992stringList_.add(I_GARDE_LARGE);
m1992stringList_.add(I_QUEUE_DE_FER);
m1992stringList_.add(I_SIPHON);
m1992stringList_.add(I_TELLURIFORCE);
m1992stringList_.add(I_SURF);
m1992stringList_.add(I_FORCE);
m1992pokemonData_.setMoveTutors(m1992stringList_);
Shorts m1992shorts_=new Shorts(new CollCapacity(3));
m1992shorts_.add((short)3);
m1992shorts_.add((short)4);
m1992shorts_.add((short)5);
m1992pokemonData_.setHiddenMoves(m1992shorts_);
m1992shorts_=new Shorts(new CollCapacity(25));
m1992shorts_.add((short)94);
m1992shorts_.add((short)6);
m1992shorts_.add((short)7);
m1992shorts_.add((short)10);
m1992shorts_.add((short)13);
m1992shorts_.add((short)14);
m1992shorts_.add((short)17);
m1992shorts_.add((short)18);
m1992shorts_.add((short)21);
m1992shorts_.add((short)27);
m1992shorts_.add((short)28);
m1992shorts_.add((short)32);
m1992shorts_.add((short)34);
m1992shorts_.add((short)39);
m1992shorts_.add((short)42);
m1992shorts_.add((short)44);
m1992shorts_.add((short)45);
m1992shorts_.add((short)48);
m1992shorts_.add((short)49);
m1992shorts_.add((short)55);
m1992shorts_.add((short)80);
m1992shorts_.add((short)88);
m1992shorts_.add((short)87);
m1992shorts_.add((short)90);
m1992shorts_.add((short)100);
m1992pokemonData_.setTechnicalMoves(m1992shorts_);
m1992pokemonData_.setBaseEvo(I_GOBOU);
StringMap<Evolution> m1992stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1992evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1992evolutionLevelSimple_.setLevel((short)16);
m1992stringMapEvolution_.addEntry(I_FLOBIO,m1992evolutionLevelSimple_);
m1992pokemonData_.setEvolutions(m1992stringMapEvolution_);
m1992pokemonData_.setCatchingRate((short)45);
m1992pokemonData_.setHeight(Rate.newRate(R_2_5));
m1992pokemonData_.setExpEvo(ExpType.P);
m1992pokemonData_.setExpRate(62);
m1992stringList_=new StringList(new CollCapacity(2));
m1992stringList_.add(I_EAU_1);
m1992stringList_.add(I_MONSTRE);
m1992pokemonData_.setEggGroups(m1992stringList_);
m1992pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1992pokemonData_.setHappiness((short)70);
m1992pokemonData_.setHappinessHatch((short)140);
return m1992pokemonData_;
}
static PokemonData p263(){
PokemonData m1993pokemonData_=Instances.newPokemonData();
m1993pokemonData_.setWeight(Rate.newRate(R_19_2));
StringList m1993stringList_=new StringList(new CollCapacity(2));
m1993stringList_.add(I_EAU);
m1993stringList_.add(I_VOL);
m1993pokemonData_.setTypes(m1993stringList_);
IdMap<Statistic,StatBaseEv> m1993enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)30,(short)0));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)30,(short)0));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)40,(short)0));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)30,(short)0));
m1993enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)85,(short)1));
m1993pokemonData_.setStatistics(m1993enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1993custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(14));
m1993custListLevelMove_.add(new LevelMove((short)1,I_RUGISSEMENT));
m1993custListLevelMove_.add(new LevelMove((short)1,I_PISTOLET_A_O));
m1993custListLevelMove_.add(new LevelMove((short)6,I_ULTRASON));
m1993custListLevelMove_.add(new LevelMove((short)9,I_CRU_AILE));
m1993custListLevelMove_.add(new LevelMove((short)14,I_BRUME));
m1993custListLevelMove_.add(new LevelMove((short)17,I_VIBRAQUA));
m1993custListLevelMove_.add(new LevelMove((short)22,I_VIVE_ATTAQUE));
m1993custListLevelMove_.add(new LevelMove((short)26,I_ATTERRISSAGE));
m1993custListLevelMove_.add(new LevelMove((short)30,I_POURSUITE));
m1993custListLevelMove_.add(new LevelMove((short)33,I_TRANCH_AIR));
m1993custListLevelMove_.add(new LevelMove((short)38,I_HATE));
m1993custListLevelMove_.add(new LevelMove((short)42,I_AEROPIQUE));
m1993custListLevelMove_.add(new LevelMove((short)46,I_LAME_D_AIR));
m1993custListLevelMove_.add(new LevelMove((short)49,I_VENT_VIOLENT));
m1993pokemonData_.setLevMoves(m1993custListLevelMove_);
m1993pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1993stringList_=new StringList(new CollCapacity(1));
m1993stringList_.add(I_REGARD_VIF);
m1993pokemonData_.setAbilities(m1993stringList_);
m1993stringList_=new StringList(new CollCapacity(26));
m1993stringList_.add(I_ANNEAU_HYDRO);
m1993stringList_.add(I_BLABLA_DODO);
m1993stringList_.add(I_BROUHAHA);
m1993stringList_.add(I_BRUME);
m1993stringList_.add(I_CLONAGE);
m1993stringList_.add(I_COPIE);
m1993stringList_.add(I_COUD_BOUE);
m1993stringList_.add(I_DAMOCLES);
m1993stringList_.add(I_HATE);
m1993stringList_.add(I_METEORES);
m1993stringList_.add(I_OURAGAN);
m1993stringList_.add(I_RONFLEMENT);
m1993stringList_.add(I_SABOTAGE);
m1993stringList_.add(I_TENACITE);
m1993stringList_.add(I_TORNADE);
m1993stringList_.add(I_TOURNIQUET);
m1993stringList_.add(I_TRANCH_AIR);
m1993stringList_.add(I_VANTARDISE);
m1993stringList_.add(I_VENT_ARRIERE);
m1993stringList_.add(I_VENT_GLACE);
m1993stringList_.add(I_VENT_MAUVAIS);
m1993stringList_.add(I_ATTERRISSAGE);
m1993stringList_.add(I_DETREMPAGE);
m1993stringList_.add(I_GARDE_LARGE);
m1993stringList_.add(I_SAUMURE);
m1993stringList_.add(I_ENVOL);
m1993pokemonData_.setMoveTutors(m1993stringList_);
Shorts m1993shorts_=new Shorts(new CollCapacity(1));
m1993shorts_.add((short)2);
m1993pokemonData_.setHiddenMoves(m1993shorts_);
m1993shorts_=new Shorts(new CollCapacity(25));
m1993shorts_.add((short)6);
m1993shorts_.add((short)7);
m1993shorts_.add((short)10);
m1993shorts_.add((short)13);
m1993shorts_.add((short)14);
m1993shorts_.add((short)17);
m1993shorts_.add((short)18);
m1993shorts_.add((short)19);
m1993shorts_.add((short)21);
m1993shorts_.add((short)27);
m1993shorts_.add((short)32);
m1993shorts_.add((short)40);
m1993shorts_.add((short)42);
m1993shorts_.add((short)44);
m1993shorts_.add((short)45);
m1993shorts_.add((short)46);
m1993shorts_.add((short)51);
m1993shorts_.add((short)48);
m1993shorts_.add((short)49);
m1993shorts_.add((short)55);
m1993shorts_.add((short)88);
m1993shorts_.add((short)87);
m1993shorts_.add((short)89);
m1993shorts_.add((short)90);
m1993shorts_.add((short)100);
m1993pokemonData_.setTechnicalMoves(m1993shorts_);
m1993pokemonData_.setBaseEvo(I_GOELISE);
StringMap<Evolution> m1993stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionLevelSimple m1993evolutionLevelSimple_=Instances.newEvolutionLevelSimple();
m1993evolutionLevelSimple_.setLevel((short)25);
m1993stringMapEvolution_.addEntry(I_BEKIPAN,m1993evolutionLevelSimple_);
m1993pokemonData_.setEvolutions(m1993stringMapEvolution_);
m1993pokemonData_.setCatchingRate((short)190);
m1993pokemonData_.setHeight(Rate.newRate(R_3_5));
m1993pokemonData_.setExpEvo(ExpType.M);
m1993pokemonData_.setExpRate(54);
m1993stringList_=new StringList(new CollCapacity(2));
m1993stringList_.add(I_EAU_1);
m1993stringList_.add(I_VOL);
m1993pokemonData_.setEggGroups(m1993stringList_);
m1993pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1993pokemonData_.setHappiness((short)70);
m1993pokemonData_.setHappinessHatch((short)140);
return m1993pokemonData_;
}
static PokemonData p264(){
PokemonData m1994pokemonData_=Instances.newPokemonData();
m1994pokemonData_.setWeight(Rate.newRate(R_105));
StringList m1994stringList_=new StringList(new CollCapacity(1));
m1994stringList_.add(I_NORMAL);
m1994pokemonData_.setTypes(m1994stringList_);
IdMap<Statistic,StatBaseEv> m1994enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)85,(short)0));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)40,(short)0));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)85,(short)0));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)135,(short)1));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)40,(short)0));
m1994enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)5,(short)0));
m1994pokemonData_.setStatistics(m1994enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1994custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(17));
m1994custListLevelMove_.add(new LevelMove((short)1,I_METRONOME));
m1994custListLevelMove_.add(new LevelMove((short)1,I_FLAIR));
m1994custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1994custListLevelMove_.add(new LevelMove((short)4,I_BOUL_ARMURE));
m1994custListLevelMove_.add(new LevelMove((short)9,I_AMNESIE));
m1994custListLevelMove_.add(new LevelMove((short)12,I_LECHOUILLE));
m1994custListLevelMove_.add(new LevelMove((short)17,I_ATTRITION));
m1994custListLevelMove_.add(new LevelMove((short)20,I_GRINCEMENT));
m1994custListLevelMove_.add(new LevelMove((short)25,I_PLAQUAGE));
m1994custListLevelMove_.add(new LevelMove((short)28,I_STOCKAGE));
m1994custListLevelMove_.add(new LevelMove((short)33,I_AVALE));
m1994custListLevelMove_.add(new LevelMove((short)36,I_ROULADE));
m1994custListLevelMove_.add(new LevelMove((short)41,I_DEGOMMAGE));
m1994custListLevelMove_.add(new LevelMove((short)44,I_COGNOBIDON));
m1994custListLevelMove_.add(new LevelMove((short)49,I_DON_NATUREL));
m1994custListLevelMove_.add(new LevelMove((short)52,I_SAISIE));
m1994custListLevelMove_.add(new LevelMove((short)57,I_DERNIERECOUR));
m1994pokemonData_.setLevMoves(m1994custListLevelMove_);
m1994pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1994stringList_=new StringList(new CollCapacity(1));
m1994stringList_.add(I_ISOGRAISSE);
m1994pokemonData_.setAbilities(m1994stringList_);
m1994stringList_=new StringList(new CollCapacity(34));
m1994stringList_.add(I_BROUHAHA);
m1994stringList_.add(I_CANON_GRAINE);
m1994stringList_.add(I_CHARME);
m1994stringList_.add(I_CLONAGE);
m1994stringList_.add(I_COLERE);
m1994stringList_.add(I_COUD_BOUE);
m1994stringList_.add(I_COUP_D_BOULE);
m1994stringList_.add(I_CYCLONE);
m1994stringList_.add(I_DAMOCLES);
m1994stringList_.add(I_DERNIERECOUR);
m1994stringList_.add(I_DETRICANON);
m1994stringList_.add(I_LECHOUILLE);
m1994stringList_.add(I_MALEDICTION);
m1994stringList_.add(I_POING_DE_FEU);
m1994stringList_.add(I_POING_ECLAIR);
m1994stringList_.add(I_POINGLACE);
m1994stringList_.add(I_POURSUITE);
m1994stringList_.add(I_PSYKOUD_BOUL);
m1994stringList_.add(I_RIPOSTE);
m1994stringList_.add(I_RONFLEMENT);
m1994stringList_.add(I_ROULADE);
m1994stringList_.add(I_VENT_GLACE);
m1994stringList_.add(I_APRES_VOUS);
m1994stringList_.add(I_BLABLA_DODO);
m1994stringList_.add(I_DESTRUCTION);
m1994stringList_.add(I_DON_NATUREL);
m1994stringList_.add(I_ERUCTATION);
m1994stringList_.add(I_IMPLORE);
m1994stringList_.add(I_MEGAPHONE);
m1994stringList_.add(I_RECYCLAGE);
m1994stringList_.add(I_SAISIE);
m1994stringList_.add(I_SURPUISSANCE);
m1994stringList_.add(I_SURF);
m1994stringList_.add(I_FORCE);
m1994pokemonData_.setMoveTutors(m1994stringList_);
Shorts m1994shorts_=new Shorts(new CollCapacity(2));
m1994shorts_.add((short)3);
m1994shorts_.add((short)4);
m1994pokemonData_.setHiddenMoves(m1994shorts_);
m1994shorts_=new Shorts(new CollCapacity(36));
m1994shorts_.add((short)94);
m1994shorts_.add((short)6);
m1994shorts_.add((short)10);
m1994shorts_.add((short)11);
m1994shorts_.add((short)13);
m1994shorts_.add((short)14);
m1994shorts_.add((short)17);
m1994shorts_.add((short)18);
m1994shorts_.add((short)21);
m1994shorts_.add((short)22);
m1994shorts_.add((short)24);
m1994shorts_.add((short)25);
m1994shorts_.add((short)26);
m1994shorts_.add((short)27);
m1994shorts_.add((short)29);
m1994shorts_.add((short)30);
m1994shorts_.add((short)31);
m1994shorts_.add((short)32);
m1994shorts_.add((short)35);
m1994shorts_.add((short)37);
m1994shorts_.add((short)38);
m1994shorts_.add((short)39);
m1994shorts_.add((short)42);
m1994shorts_.add((short)44);
m1994shorts_.add((short)45);
m1994shorts_.add((short)48);
m1994shorts_.add((short)56);
m1994shorts_.add((short)59);
m1994shorts_.add((short)67);
m1994shorts_.add((short)78);
m1994shorts_.add((short)80);
m1994shorts_.add((short)88);
m1994shorts_.add((short)87);
m1994shorts_.add((short)90);
m1994shorts_.add((short)98);
m1994shorts_.add((short)100);
m1994pokemonData_.setTechnicalMoves(m1994shorts_);
m1994pokemonData_.setBaseEvo(I_GOINFREX);
StringMap<Evolution> m1994stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
m1994stringMapEvolution_.addEntry(I_RONFLEX,Instances.newEvolutionHappiness());
m1994pokemonData_.setEvolutions(m1994stringMapEvolution_);
m1994pokemonData_.setCatchingRate((short)50);
m1994pokemonData_.setHeight(Rate.newRate(R_3_5));
m1994pokemonData_.setExpEvo(ExpType.L);
m1994pokemonData_.setExpRate(78);
m1994stringList_=new StringList(new CollCapacity(1));
m1994stringList_.add(I_SANS_OEUF);
m1994pokemonData_.setEggGroups(m1994stringList_);
m1994pokemonData_.setHatchingSteps(LgInt.newLgInt(R_10240));
m1994pokemonData_.setHappiness((short)70);
m1994pokemonData_.setHappinessHatch((short)140);
return m1994pokemonData_;
}
static PokemonData p265(){
PokemonData m1995pokemonData_=Instances.newPokemonData();
m1995pokemonData_.setWeight(Rate.newRate(R_330));
StringList m1995stringList_=new StringList(new CollCapacity(2));
m1995stringList_.add(I_SOL);
m1995stringList_.add(I_SPECTRE);
m1995pokemonData_.setTypes(m1995stringList_);
IdMap<Statistic,StatBaseEv> m1995enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)124,(short)2));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)55,(short)0));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)80,(short)0));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)89,(short)0));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)80,(short)0));
m1995enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)55,(short)0));
m1995pokemonData_.setStatistics(m1995enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1995custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(18));
m1995custListLevelMove_.add(new LevelMove((short)1,I_ECRAS_FACE));
m1995custListLevelMove_.add(new LevelMove((short)1,I_BOUL_ARMURE));
m1995custListLevelMove_.add(new LevelMove((short)1,I_ETONNEMENT));
m1995custListLevelMove_.add(new LevelMove((short)5,I_COUD_BOUE));
m1995custListLevelMove_.add(new LevelMove((short)9,I_ROULADE));
m1995custListLevelMove_.add(new LevelMove((short)13,I_POING_OMBRE));
m1995custListLevelMove_.add(new LevelMove((short)17,I_MUR_DE_FER));
m1995custListLevelMove_.add(new LevelMove((short)21,I_ULTIMAPOING));
m1995custListLevelMove_.add(new LevelMove((short)25,I_AMPLEUR));
m1995custListLevelMove_.add(new LevelMove((short)30,I_DYNAMOPOING));
m1995custListLevelMove_.add(new LevelMove((short)35,I_OMBRE_NOCTURNE));
m1995custListLevelMove_.add(new LevelMove((short)40,I_MALEDICTION));
m1995custListLevelMove_.add(new LevelMove((short)43,I_TACLE_LOURD));
m1995custListLevelMove_.add(new LevelMove((short)50,I_SEISME));
m1995custListLevelMove_.add(new LevelMove((short)60,I_MARTO_POING));
m1995custListLevelMove_.add(new LevelMove((short)70,I_MITRA_POING));
m1995custListLevelMove_.add(new LevelMove((short)75,I_HANTISE));
m1995custListLevelMove_.add(new LevelMove((short)75,I_HANTISE));
m1995pokemonData_.setLevMoves(m1995custListLevelMove_);
m1995pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1995stringList_=new StringList(new CollCapacity(2));
m1995stringList_.add(I_POING_DE_FER);
m1995stringList_.add(I_ANNULE_GARDE);
m1995pokemonData_.setAbilities(m1995stringList_);
m1995stringList_=new StringList(new CollCapacity(19));
m1995stringList_.add(I_BALAYAGE);
m1995stringList_.add(I_BARRAGE);
m1995stringList_.add(I_BLABLA_DODO);
m1995stringList_.add(I_GRAVITE);
m1995stringList_.add(I_MUR_DE_FER);
m1995stringList_.add(I_PIEGE_DE_ROC);
m1995stringList_.add(I_POING_DE_FEU);
m1995stringList_.add(I_POING_ECLAIR);
m1995stringList_.add(I_POINGLACE);
m1995stringList_.add(I_PSYKOUD_BOUL);
m1995stringList_.add(I_RAYON_SIGNAL);
m1995stringList_.add(I_REFLET_MAGIK);
m1995stringList_.add(I_RONFLEMENT);
m1995stringList_.add(I_SURPUISSANCE);
m1995stringList_.add(I_TELLURIFORCE);
m1995stringList_.add(I_VAMPIPOING);
m1995stringList_.add(I_VENT_GLACE);
m1995stringList_.add(I_ENVOL);
m1995stringList_.add(I_FORCE);
m1995pokemonData_.setMoveTutors(m1995stringList_);
Shorts m1995shorts_=new Shorts(new CollCapacity(2));
m1995shorts_.add((short)2);
m1995shorts_.add((short)4);
m1995pokemonData_.setHiddenMoves(m1995shorts_);
m1995shorts_=new Shorts(new CollCapacity(40));
m1995shorts_.add((short)70);
m1995shorts_.add((short)94);
m1995shorts_.add((short)6);
m1995shorts_.add((short)10);
m1995shorts_.add((short)13);
m1995shorts_.add((short)15);
m1995shorts_.add((short)17);
m1995shorts_.add((short)18);
m1995shorts_.add((short)20);
m1995shorts_.add((short)21);
m1995shorts_.add((short)22);
m1995shorts_.add((short)24);
m1995shorts_.add((short)26);
m1995shorts_.add((short)27);
m1995shorts_.add((short)29);
m1995shorts_.add((short)30);
m1995shorts_.add((short)31);
m1995shorts_.add((short)32);
m1995shorts_.add((short)39);
m1995shorts_.add((short)42);
m1995shorts_.add((short)44);
m1995shorts_.add((short)46);
m1995shorts_.add((short)47);
m1995shorts_.add((short)48);
m1995shorts_.add((short)52);
m1995shorts_.add((short)56);
m1995shorts_.add((short)57);
m1995shorts_.add((short)68);
m1995shorts_.add((short)69);
m1995shorts_.add((short)71);
m1995shorts_.add((short)74);
m1995shorts_.add((short)78);
m1995shorts_.add((short)80);
m1995shorts_.add((short)88);
m1995shorts_.add((short)86);
m1995shorts_.add((short)87);
m1995shorts_.add((short)90);
m1995shorts_.add((short)91);
m1995shorts_.add((short)98);
m1995shorts_.add((short)100);
m1995pokemonData_.setTechnicalMoves(m1995shorts_);
m1995pokemonData_.setBaseEvo(I_GRINGOLEM);
m1995pokemonData_.setCatchingRate((short)90);
m1995pokemonData_.setHeight(Rate.newRate(R_14_5));
m1995pokemonData_.setExpEvo(ExpType.M);
m1995pokemonData_.setExpRate(169);
m1995stringList_=new StringList(new CollCapacity(1));
m1995stringList_.add(I_MINERAL);
m1995pokemonData_.setEggGroups(m1995stringList_);
m1995pokemonData_.setHatchingSteps(LgInt.newLgInt(R_6630));
m1995pokemonData_.setHappiness((short)70);
m1995pokemonData_.setHappinessHatch((short)140);
return m1995pokemonData_;
}
static PokemonData p266(){
PokemonData m1996pokemonData_=Instances.newPokemonData();
m1996pokemonData_.setWeight(Rate.newRate(R_96));
StringList m1996stringList_=new StringList(new CollCapacity(2));
m1996stringList_.add(I_EAU);
m1996stringList_.add(I_ROCHE);
m1996pokemonData_.setTypes(m1996stringList_);
IdMap<Statistic,StatBaseEv> m1996enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)105,(short)2));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)54,(short)0));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)86,(short)0));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)72,(short)0));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)115,(short)0));
m1996enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)68,(short)0));
m1996pokemonData_.setStatistics(m1996enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1996custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(22));
m1996custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1996custListLevelMove_.add(new LevelMove((short)1,I_JET_DE_SABLE));
m1996custListLevelMove_.add(new LevelMove((short)1,I_EXUVIATION));
m1996custListLevelMove_.add(new LevelMove((short)4,I_PISTOLET_A_O));
m1996custListLevelMove_.add(new LevelMove((short)7,I_REPLI));
m1996custListLevelMove_.add(new LevelMove((short)10,I_COMBO_GRIFFE));
m1996custListLevelMove_.add(new LevelMove((short)13,I_TRANCHE));
m1996custListLevelMove_.add(new LevelMove((short)18,I_COUD_BOUE));
m1996custListLevelMove_.add(new LevelMove((short)20,I_CLAQUOIR));
m1996custListLevelMove_.add(new LevelMove((short)24,I_POLIROCHE));
m1996custListLevelMove_.add(new LevelMove((short)24,I_POLIROCHE));
m1996custListLevelMove_.add(new LevelMove((short)28,I_POUV_ANTIQUE));
m1996custListLevelMove_.add(new LevelMove((short)32,I_AIGUISAGE));
m1996custListLevelMove_.add(new LevelMove((short)37,I_TAILLADE));
m1996custListLevelMove_.add(new LevelMove((short)44,I_TRANCHE_NUIT));
m1996custListLevelMove_.add(new LevelMove((short)48,I_COQUILAME));
m1996custListLevelMove_.add(new LevelMove((short)55,I_COUP_CROIX));
m1996custListLevelMove_.add(new LevelMove((short)60,I_LAME_DE_ROC));
m1996custListLevelMove_.add(new LevelMove((short)60,I_LAME_DE_ROC));
m1996custListLevelMove_.add(new LevelMove((short)60,I_LAME_DE_ROC));
m1996custListLevelMove_.add(new LevelMove((short)65,I_COUD_KRANE));
m1996custListLevelMove_.add(new LevelMove((short)65,I_COUD_KRANE));
m1996pokemonData_.setLevMoves(m1996custListLevelMove_);
m1996pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1996stringList_=new StringList(new CollCapacity(2));
m1996stringList_.add(I_GRIFFE_DURE);
m1996stringList_.add(I_SNIPER);
m1996pokemonData_.setAbilities(m1996stringList_);
m1996stringList_=new StringList(new CollCapacity(3));
m1996stringList_.add(I_COUPE);
m1996stringList_.add(I_SURF);
m1996stringList_.add(I_FORCE);
m1996pokemonData_.setMoveTutors(m1996stringList_);
Shorts m1996shorts_=new Shorts(new CollCapacity(3));
m1996shorts_.add((short)1);
m1996shorts_.add((short)3);
m1996shorts_.add((short)4);
m1996pokemonData_.setHiddenMoves(m1996shorts_);
m1996shorts_=new Shorts(new CollCapacity(54));
m1996shorts_.add((short)94);
m1996shorts_.add((short)1);
m1996shorts_.add((short)2);
m1996shorts_.add((short)6);
m1996shorts_.add((short)8);
m1996shorts_.add((short)10);
m1996shorts_.add((short)12);
m1996shorts_.add((short)13);
m1996shorts_.add((short)14);
m1996shorts_.add((short)15);
m1996shorts_.add((short)17);
m1996shorts_.add((short)18);
m1996shorts_.add((short)20);
m1996shorts_.add((short)21);
m1996shorts_.add((short)23);
m1996shorts_.add((short)26);
m1996shorts_.add((short)27);
m1996shorts_.add((short)28);
m1996shorts_.add((short)31);
m1996shorts_.add((short)32);
m1996shorts_.add((short)34);
m1996shorts_.add((short)36);
m1996shorts_.add((short)37);
m1996shorts_.add((short)39);
m1996shorts_.add((short)40);
m1996shorts_.add((short)41);
m1996shorts_.add((short)42);
m1996shorts_.add((short)44);
m1996shorts_.add((short)45);
m1996shorts_.add((short)46);
m1996shorts_.add((short)48);
m1996shorts_.add((short)52);
m1996shorts_.add((short)54);
m1996shorts_.add((short)55);
m1996shorts_.add((short)56);
m1996shorts_.add((short)63);
m1996shorts_.add((short)65);
m1996shorts_.add((short)66);
m1996shorts_.add((short)68);
m1996shorts_.add((short)69);
m1996shorts_.add((short)71);
m1996shorts_.add((short)75);
m1996shorts_.add((short)78);
m1996shorts_.add((short)80);
m1996shorts_.add((short)81);
m1996shorts_.add((short)88);
m1996shorts_.add((short)83);
m1996shorts_.add((short)84);
m1996shorts_.add((short)86);
m1996shorts_.add((short)87);
m1996shorts_.add((short)90);
m1996shorts_.add((short)96);
m1996shorts_.add((short)98);
m1996shorts_.add((short)100);
m1996pokemonData_.setTechnicalMoves(m1996shorts_);
m1996pokemonData_.setBaseEvo(I_OPERMINE);
m1996pokemonData_.setCatchingRate((short)45);
m1996pokemonData_.setHeight(Rate.newRate(R_13_10));
m1996pokemonData_.setExpEvo(ExpType.M);
m1996pokemonData_.setExpRate(175);
m1996stringList_=new StringList(new CollCapacity(5));
m1996stringList_.add(I_METAMORPH);
m1996stringList_.add(I_EAU_3);
m1996stringList_.add(I_VOL);
m1996stringList_.add(I_EAU_1);
m1996stringList_.add(I_INSECTE);
m1996pokemonData_.setEggGroups(m1996stringList_);
m1996pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1996pokemonData_.setHappiness((short)70);
m1996pokemonData_.setHappinessHatch((short)140);
return m1996pokemonData_;
}
static PokemonData p267(){
PokemonData m1997pokemonData_=Instances.newPokemonData();
m1997pokemonData_.setWeight(Rate.newRate(R_39));
StringList m1997stringList_=new StringList(new CollCapacity(2));
m1997stringList_.add(I_FEU);
m1997stringList_.add(I_PSY);
m1997pokemonData_.setTypes(m1997stringList_);
IdMap<Statistic,StatBaseEv> m1997enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)69,(short)0));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)114,(short)3));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)100,(short)0));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)75,(short)0));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)72,(short)0));
m1997enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)104,(short)0));
m1997pokemonData_.setStatistics(m1997enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1997custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(23));
m1997custListLevelMove_.add(new LevelMove((short)1,I_BALL_OMBRE));
m1997custListLevelMove_.add(new LevelMove((short)1,I_GRIFFE));
m1997custListLevelMove_.add(new LevelMove((short)1,I_MIMI_QUEUE));
m1997custListLevelMove_.add(new LevelMove((short)1,I_IMITATION));
m1997custListLevelMove_.add(new LevelMove((short)1,I_PASSE_PASSE));
m1997custListLevelMove_.add(new LevelMove((short)5,I_FLAMMECHE));
m1997custListLevelMove_.add(new LevelMove((short)11,I_GRONDEMENT));
m1997custListLevelMove_.add(new LevelMove((short)14,I_NITROCHARGE));
m1997custListLevelMove_.add(new LevelMove((short)18,I_RAFALE_PSY));
m1997custListLevelMove_.add(new LevelMove((short)22,I_DANSEFLAMME));
m1997custListLevelMove_.add(new LevelMove((short)27,I_AIR_VEINARD));
m1997custListLevelMove_.add(new LevelMove((short)30,I_MUR_LUMIERE));
m1997custListLevelMove_.add(new LevelMove((short)34,I_CHOC_PSY));
m1997custListLevelMove_.add(new LevelMove((short)42,I_LANCE_FLAMME));
m1997custListLevelMove_.add(new LevelMove((short)47,I_FEU_FOLLET));
m1997custListLevelMove_.add(new LevelMove((short)51,I_PSYKO));
m1997custListLevelMove_.add(new LevelMove((short)55,I_ZENITH));
m1997custListLevelMove_.add(new LevelMove((short)58,I_ZONE_MAGIQUE));
m1997custListLevelMove_.add(new LevelMove((short)61,I_DEFLAGRATION));
m1997custListLevelMove_.add(new LevelMove((short)69,I_PRESCIENCE));
m1997custListLevelMove_.add(new LevelMove((short)69,I_PRESCIENCE));
m1997custListLevelMove_.add(new LevelMove((short)75,I_FEU_ENSORCELE));
m1997custListLevelMove_.add(new LevelMove((short)75,I_FEU_ENSORCELE));
m1997pokemonData_.setLevMoves(m1997custListLevelMove_);
m1997pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1997stringList_=new StringList(new CollCapacity(2));
m1997stringList_.add(I_BRASIER);
m1997stringList_.add(I_MAGICIEN);
m1997pokemonData_.setAbilities(m1997stringList_);
m1997stringList_=new StringList(new CollCapacity(3));
m1997stringList_.add(I_AIRE_DE_FEU);
m1997stringList_.add(I_RAFALE_FEU);
m1997stringList_.add(I_COUPE);
m1997pokemonData_.setMoveTutors(m1997stringList_);
Shorts m1997shorts_=new Shorts(new CollCapacity(1));
m1997shorts_.add((short)1);
m1997pokemonData_.setHiddenMoves(m1997shorts_);
m1997shorts_=new Shorts(new CollCapacity(39));
m1997shorts_.add((short)3);
m1997shorts_.add((short)4);
m1997shorts_.add((short)6);
m1997shorts_.add((short)10);
m1997shorts_.add((short)11);
m1997shorts_.add((short)15);
m1997shorts_.add((short)16);
m1997shorts_.add((short)17);
m1997shorts_.add((short)18);
m1997shorts_.add((short)20);
m1997shorts_.add((short)21);
m1997shorts_.add((short)22);
m1997shorts_.add((short)27);
m1997shorts_.add((short)29);
m1997shorts_.add((short)30);
m1997shorts_.add((short)32);
m1997shorts_.add((short)35);
m1997shorts_.add((short)38);
m1997shorts_.add((short)42);
m1997shorts_.add((short)43);
m1997shorts_.add((short)44);
m1997shorts_.add((short)45);
m1997shorts_.add((short)46);
m1997shorts_.add((short)48);
m1997shorts_.add((short)49);
m1997shorts_.add((short)50);
m1997shorts_.add((short)59);
m1997shorts_.add((short)61);
m1997shorts_.add((short)63);
m1997shorts_.add((short)68);
m1997shorts_.add((short)77);
m1997shorts_.add((short)88);
m1997shorts_.add((short)85);
m1997shorts_.add((short)86);
m1997shorts_.add((short)87);
m1997shorts_.add((short)90);
m1997shorts_.add((short)92);
m1997shorts_.add((short)98);
m1997shorts_.add((short)100);
m1997pokemonData_.setTechnicalMoves(m1997shorts_);
m1997pokemonData_.setBaseEvo(I_FEUNNEC);
m1997pokemonData_.setCatchingRate((short)45);
m1997pokemonData_.setHeight(Rate.newRate(R_3_2));
m1997pokemonData_.setExpEvo(ExpType.P);
m1997pokemonData_.setExpRate(240);
m1997stringList_=new StringList(new CollCapacity(10));
m1997stringList_.add(I_METAMORPH);
m1997stringList_.add(I_DRAGON);
m1997stringList_.add(I_SOL);
m1997stringList_.add(I_EAU_1);
m1997stringList_.add(I_MONSTRE);
m1997stringList_.add(I_VOL);
m1997stringList_.add(I_HUMANOIDE);
m1997stringList_.add(I_FEE);
m1997stringList_.add(I_PLANTE);
m1997stringList_.add(I_EAU_2);
m1997pokemonData_.setEggGroups(m1997stringList_);
m1997pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1997pokemonData_.setHappiness((short)70);
m1997pokemonData_.setHappinessHatch((short)140);
return m1997pokemonData_;
}
static PokemonData p268(){
PokemonData m1998pokemonData_=Instances.newPokemonData();
m1998pokemonData_.setWeight(Rate.newRate(R_99_10));
StringList m1998stringList_=new StringList(new CollCapacity(1));
m1998stringList_.add(I_FEU);
m1998pokemonData_.setTypes(m1998stringList_);
IdMap<Statistic,StatBaseEv> m1998enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)41,(short)0));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)50,(short)0));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)65,(short)0));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)38,(short)0));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)40,(short)0));
m1998enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)65,(short)1));
m1998pokemonData_.setStatistics(m1998enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1998custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(19));
m1998custListLevelMove_.add(new LevelMove((short)1,I_FLAMMECHE));
m1998custListLevelMove_.add(new LevelMove((short)4,I_MIMI_QUEUE));
m1998custListLevelMove_.add(new LevelMove((short)7,I_HURLEMENT));
m1998custListLevelMove_.add(new LevelMove((short)9,I_REGARD_TOUCHANT));
m1998custListLevelMove_.add(new LevelMove((short)10,I_VIVE_ATTAQUE));
m1998custListLevelMove_.add(new LevelMove((short)12,I_DANSEFLAMME));
m1998custListLevelMove_.add(new LevelMove((short)15,I_ONDE_FOLIE));
m1998custListLevelMove_.add(new LevelMove((short)18,I_POSSESSIF));
m1998custListLevelMove_.add(new LevelMove((short)20,I_FEINTE));
m1998custListLevelMove_.add(new LevelMove((short)23,I_REBONDIFEU));
m1998custListLevelMove_.add(new LevelMove((short)26,I_FEU_FOLLET));
m1998custListLevelMove_.add(new LevelMove((short)28,I_CHATIMENT));
m1998custListLevelMove_.add(new LevelMove((short)31,I_REPRESAILLES));
m1998custListLevelMove_.add(new LevelMove((short)34,I_LANCE_FLAMME));
m1998custListLevelMove_.add(new LevelMove((short)36,I_RUNE_PROTECT));
m1998custListLevelMove_.add(new LevelMove((short)39,I_EXTRASENSEUR));
m1998custListLevelMove_.add(new LevelMove((short)42,I_DEFLAGRATION));
m1998custListLevelMove_.add(new LevelMove((short)47,I_SEDUCTION));
m1998custListLevelMove_.add(new LevelMove((short)50,I_FEU_D_ENFER));
m1998pokemonData_.setLevMoves(m1998custListLevelMove_);
m1998pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1998stringList_=new StringList(new CollCapacity(1));
m1998stringList_.add(I_TORCHE);
m1998pokemonData_.setAbilities(m1998stringList_);
m1998stringList_=new StringList(new CollCapacity(34));
m1998stringList_.add(I_BALANCE);
m1998stringList_.add(I_BLABLA_DODO);
m1998stringList_.add(I_BOOST);
m1998stringList_.add(I_BOUTEFEU);
m1998stringList_.add(I_CANICULE);
m1998stringList_.add(I_CLONAGE);
m1998stringList_.add(I_COPIE);
m1998stringList_.add(I_COUP_D_BOULE);
m1998stringList_.add(I_DAMOCLES);
m1998stringList_.add(I_DEPIT);
m1998stringList_.add(I_ECO_SPHERE);
m1998stringList_.add(I_ENTRAVE);
m1998stringList_.add(I_EXTRASENSEUR);
m1998stringList_.add(I_FEINTE);
m1998stringList_.add(I_FLEAU);
m1998stringList_.add(I_GRONDEMENT);
m1998stringList_.add(I_HYPNOSE);
m1998stringList_.add(I_IMITATION);
m1998stringList_.add(I_METEORES);
m1998stringList_.add(I_PERMUFORCE);
m1998stringList_.add(I_PLAQUAGE);
m1998stringList_.add(I_PSYKOUD_BOUL);
m1998stringList_.add(I_RONFLEMENT);
m1998stringList_.add(I_TENACITE);
m1998stringList_.add(I_VANTARDISE);
m1998stringList_.add(I_VENT_MAUVAIS);
m1998stringList_.add(I_CHATIMENT);
m1998stringList_.add(I_FORCE_CACHEE);
m1998stringList_.add(I_IMPLORE);
m1998stringList_.add(I_PLUMO_QUEUE);
m1998stringList_.add(I_QUEUE_DE_FER);
m1998stringList_.add(I_SEDUCTION);
m1998stringList_.add(I_TRICHERIE);
m1998stringList_.add(I_VIBROBSCUR);
m1998pokemonData_.setMoveTutors(m1998stringList_);
Shorts m1998shorts_=new Shorts(new CollCapacity(28));
m1998shorts_.add((short)5);
m1998shorts_.add((short)6);
m1998shorts_.add((short)10);
m1998shorts_.add((short)11);
m1998shorts_.add((short)17);
m1998shorts_.add((short)20);
m1998shorts_.add((short)21);
m1998shorts_.add((short)27);
m1998shorts_.add((short)28);
m1998shorts_.add((short)32);
m1998shorts_.add((short)35);
m1998shorts_.add((short)38);
m1998shorts_.add((short)42);
m1998shorts_.add((short)43);
m1998shorts_.add((short)44);
m1998shorts_.add((short)45);
m1998shorts_.add((short)48);
m1998shorts_.add((short)50);
m1998shorts_.add((short)53);
m1998shorts_.add((short)59);
m1998shorts_.add((short)61);
m1998shorts_.add((short)66);
m1998shorts_.add((short)77);
m1998shorts_.add((short)97);
m1998shorts_.add((short)88);
m1998shorts_.add((short)87);
m1998shorts_.add((short)90);
m1998shorts_.add((short)100);
m1998pokemonData_.setTechnicalMoves(m1998shorts_);
m1998pokemonData_.setBaseEvo(I_GOUPIX);
StringMap<Evolution> m1998stringMapEvolution_=new StringMap<Evolution>(new CollCapacity(1));
EvolutionStoneSimple m1998evolutionStoneSimple_=Instances.newEvolutionStoneSimple();
m1998evolutionStoneSimple_.setStone(I_PIERRE_FEU);
m1998stringMapEvolution_.addEntry(I_FEUNARD,m1998evolutionStoneSimple_);
m1998pokemonData_.setEvolutions(m1998stringMapEvolution_);
m1998pokemonData_.setCatchingRate((short)190);
m1998pokemonData_.setHeight(Rate.newRate(R_3_5));
m1998pokemonData_.setExpEvo(ExpType.M);
m1998pokemonData_.setExpRate(60);
m1998stringList_=new StringList(new CollCapacity(1));
m1998stringList_.add(I_SOL);
m1998pokemonData_.setEggGroups(m1998stringList_);
m1998pokemonData_.setHatchingSteps(LgInt.newLgInt(R_5120));
m1998pokemonData_.setHappiness((short)70);
m1998pokemonData_.setHappinessHatch((short)140);
return m1998pokemonData_;
}
static PokemonData p269(){
PokemonData m1999pokemonData_=Instances.newPokemonData();
m1999pokemonData_.setWeight(Rate.newRate(R_37));
StringList m1999stringList_=new StringList(new CollCapacity(1));
m1999stringList_.add(I_TENEBRE);
m1999pokemonData_.setTypes(m1999stringList_);
IdMap<Statistic,StatBaseEv> m1999enumMapStatisticStatBaseEv_ = new IdMap<Statistic,StatBaseEv>(new CollCapacity(6));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.ATTACK,new StatBaseEv((short)90,(short)2));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_ATTACK,new StatBaseEv((short)60,(short)0));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.SPECIAL_DEFENSE,new StatBaseEv((short)60,(short)0));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.HP,new StatBaseEv((short)70,(short)0));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.DEFENSE,new StatBaseEv((short)70,(short)0));
m1999enumMapStatisticStatBaseEv_.addEntry(Statistic.SPEED,new StatBaseEv((short)70,(short)0));
m1999pokemonData_.setStatistics(m1999enumMapStatisticStatBaseEv_);
CustList<LevelMove> m1999custListLevelMove_ = new CustList<LevelMove>(new CollCapacity(15));
m1999custListLevelMove_.add(new LevelMove((short)1,I_CHARGE));
m1999custListLevelMove_.add(new LevelMove((short)5,I_GRONDEMENT));
m1999custListLevelMove_.add(new LevelMove((short)9,I_JET_DE_SABLE));
m1999custListLevelMove_.add(new LevelMove((short)13,I_MORSURE));
m1999custListLevelMove_.add(new LevelMove((short)17,I_FLAIR));
m1999custListLevelMove_.add(new LevelMove((short)22,I_HURLEMENT));
m1999custListLevelMove_.add(new LevelMove((short)27,I_VANTARDISE));
m1999custListLevelMove_.add(new LevelMove((short)32,I_ASSURANCE));
m1999custListLevelMove_.add(new LevelMove((short)37,I_GRIMACE));
m1999custListLevelMove_.add(new LevelMove((short)42,I_PROVOC));
m1999custListLevelMove_.add(new LevelMove((short)47,I_EMBARGO));
m1999custListLevelMove_.add(new LevelMove((short)52,I_BELIER));
m1999custListLevelMove_.add(new LevelMove((short)57,I_LARCIN));
m1999custListLevelMove_.add(new LevelMove((short)62,I_COUP_BAS));
m1999custListLevelMove_.add(new LevelMove((short)65,I_MACHOUILLE));
m1999pokemonData_.setLevMoves(m1999custListLevelMove_);
m1999pokemonData_.setGenderRep(GenderRepartition.MIXED);
m1999stringList_=new StringList(new CollCapacity(2));
m1999stringList_.add(I_INTIMIDANT);
m1999stringList_.add(I_PIED_VELOCE);
m1999pokemonData_.setAbilities(m1999stringList_);
m1999stringList_=new StringList(new CollCapacity(31));
m1999stringList_.add(I_BAILLEMENT);
m1999stringList_.add(I_BLABLA_DODO);
m1999stringList_.add(I_BOOST);
m1999stringList_.add(I_BROUHAHA);
m1999stringList_.add(I_CLONAGE);
m1999stringList_.add(I_COPIE);
m1999stringList_.add(I_COUD_BOUE);
m1999stringList_.add(I_COUP_BAS);
m1999stringList_.add(I_COUP_D_BOULE);
m1999stringList_.add(I_CROC_FATAL);
m1999stringList_.add(I_CROCHETVENIN);
m1999stringList_.add(I_CROCS_ECLAIR);
m1999stringList_.add(I_CROCS_FEU);
m1999stringList_.add(I_CROCS_GIVRE);
m1999stringList_.add(I_DAMOCLES);
m1999stringList_.add(I_DEPIT);
m1999stringList_.add(I_ETONNEMENT);
m1999stringList_.add(I_GROZ_YEUX);
m1999stringList_.add(I_IMPLORE);
m1999stringList_.add(I_MOI_D_ABORD);
m1999stringList_.add(I_PLAQUAGE);
m1999stringList_.add(I_RIPOSTE);
m1999stringList_.add(I_RONFLEMENT);
m1999stringList_.add(I_TENACITE);
m1999stringList_.add(I_VANTARDISE);
m1999stringList_.add(I_MEGAPHONE);
m1999stringList_.add(I_QUEUE_DE_FER);
m1999stringList_.add(I_SAISIE);
m1999stringList_.add(I_TRICHERIE);
m1999stringList_.add(I_VIBROBSCUR);
m1999stringList_.add(I_FORCE);
m1999pokemonData_.setMoveTutors(m1999stringList_);
Shorts m1999shorts_=new Shorts(new CollCapacity(1));
m1999shorts_.add((short)4);
m1999pokemonData_.setHiddenMoves(m1999shorts_);
m1999shorts_=new Shorts(new CollCapacity(31));
m1999shorts_.add((short)94);
m1999shorts_.add((short)5);
m1999shorts_.add((short)6);
m1999shorts_.add((short)10);
m1999shorts_.add((short)11);
m1999shorts_.add((short)12);
m1999shorts_.add((short)15);
m1999shorts_.add((short)17);
m1999shorts_.add((short)18);
m1999shorts_.add((short)21);
m1999shorts_.add((short)27);
m1999shorts_.add((short)28);
m1999shorts_.add((short)30);
m1999shorts_.add((short)32);
m1999shorts_.add((short)41);
m1999shorts_.add((short)42);
m1999shorts_.add((short)44);
m1999shorts_.add((short)45);
m1999shorts_.add((short)46);
m1999shorts_.add((short)48);
m1999shorts_.add((short)59);
m1999shorts_.add((short)63);
m1999shorts_.add((short)66);
m1999shorts_.add((short)67);
m1999shorts_.add((short)68);
m1999shorts_.add((short)97);
m1999shorts_.add((short)88);
m1999shorts_.add((short)87);
m1999shorts_.add((short)90);
m1999shorts_.add((short)95);
m1999shorts_.add((short)100);
m1999pokemonData_.setTechnicalMoves(m1999shorts_);
m1999pokemonData_.setBaseEvo(I_MEDHYENA);
m1999pokemonData_.setCatchingRate((short)127);
m1999pokemonData_.setHeight(Rate.newRate(R_1));
m1999pokemonData_.setExpEvo(ExpType.M);
m1999pokemonData_.setExpRate(147);
m1999stringList_=new StringList(new CollCapacity(1));
m1999stringList_.add(I_SOL);
m1999pokemonData_.setEggGroups(m1999stringList_);
m1999pokemonData_.setHatchingSteps(LgInt.newLgInt(R_3840));
m1999pokemonData_.setHappiness((short)70);
m1999pokemonData_.setHappinessHatch((short)140);
return m1999pokemonData_;
}
}
