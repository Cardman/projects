package aiki.sml.trs;
public final class Trs7{
private Trs7(){}
static String tr(){
String f="CIBLE_EFFET\tmove\ttarg_eff__{0}\tThe target is under the effect of the move {0}\n";
f+="GENRES_EGAUX\tmove\tgr_eg\tThe genders equal to themselves.\n";
f+="PK_SAUVAGE_GENRE\titem\twild_pk_gr\tGender of the wild pokemon\n";
f+="LANCEUR_GENRE\tmove\tuser_gr\tGenre of the user\n";
f+="LANCEUR_PV_MAX\tmove\tusr_max_hp\tFull health points of the user\n";
f+="EXISTE_GENRE_ASSEXUE\tmove\texist_no_gr\tIt exists a no-sexual gender.\n";
f+="LANCEUR_EFFET\tmove\tusr_eff__{0}\tThe user is under the effect of the move {0}\n";
f+="CIBLE_STATUTS\tmove\ttarg_status\tstatus of the target\n";
f+="CIBLE_TAILLE\tmove\ttarg_height\tHeight of the target\n";
f+="CIBLE_OBJET\tmove\ttarg_it\tItem of the target\n";
f+="IMMU_TYPE_ATT_COMBATTANT_ENTRANT\ttype\timmu_move_type_fighter__{0}\tThe sent fighter is protected against the moves of type {0}\n";
f+="LANCEUR_DEGATS_RECUS_TOTAL_TOUR\tmove\tusr_suffered_damg_rd\tSuffered damage against the user while the round\n";
f+="DEJA_CAPTURE\titem\talready_caught\tAlready caught pokemon\n";
f+="CIBLE_TYPES\tmove\ttarg_t\ttypes of the targets\n";
f+="COMBATTANT_ENTRANT_TYPES\tmove\tsent_fighter_type\tTypes of the sent fighter\n";
f+="LANCEUR_STATUTS\tmove\tusr_status\tstatus of the user\n";
f+="PAS_PP_ATTAQUE_CIBLE\tmove\tno_pp_target\tThe target has no power point for the move that the target owns\n";
f+="SOMME_BOOST_POS_CIBLE\tmove\tsum_boost_pos_tar\tSum of the positive boosts of the target\n";
f+="ATTAQUE_NOM\tmove\tmove_name\tName of the move\n";
f+="LANCEUR_BOOST\tstatis\tusr_boost__{0}\t{0} of terms of boost of the user\n";
f+="ATTACK\tmove\tatt\tValue of the move of the user\n";
f+="CIBLE_PV_RESTANTS\tmove\ttarg_left_hp\tRemaining health points of the target\n";
f+="CIBLE_POSSEDE_STATUT_RELATION\tstatus\ttarget_pseudo_st__{0}\tThe target is victim of the pseudo status {0}\n";
f+="ATTAQUE_TYPES\tmove\tmove_types\tTypes of the move\n";
f+="FIGHTER_OBJET\titem\tfighter_it\tItem of the owner\n";
f+="LANCEUR_CLONE\tmove\tusr_clone\tPV of the clone of the user\n";
f+="POWER\tmove\tpow\tValue of the power of the move of the user\n";
f+="PUISSANCE_BASE\titem\tpower_base\tPower of base of the move of the owner\n";
f+="MASSE_MOYENNE_PK\titem\tavg_pk_weight\tAverage weight of the pokemon\n";
f+="LANCEUR_ATTAQUES_TYPES\tmove\tusr_moves_types\tTypes of the moves of the user\n";
f+="PK_UT_NIVEAU\titem\tpk_player_lev\tLevel of the pokemon of the player\n";
f+="DEFENSE\tmove\tdef\tValue of the defence of the user\n";
f+="PK_SAUVAGE_TYPES_BASE\titem\twild_pk_types\tTypes de base of the wild pokemon\n";
f+="LANCEUR_CAPACITE\tmove\tusr_ab\tCurrent ability of the user\n";
f+="FIGHTER_NOM\titem\tfighter_nom\tName of the owner\n";
f+="NB_UTILISATION_CONSECUTIF\titem\tnb_uses_cons\tNumber of consecutive uses of the move.\n";
f+="FIGHTER_DER_JOUE\titem\tfighter_last_acted\tThe owner has played the last one\n";
f+="TEMPS_TOUR\titem\ttps_rd\tTime of round\n";
f+="LANCEUR_ATTAQUES\tmove\tusr_att\tMoves of the user\n";
f+="LANCEUR_BONHEUR\tmove\tusr_hap\tHappiness of the user\n";
f+="PK_SAUVAGE_PIERRES_EVOS\titem\twild_pk_ev\tEvolution stones of the wild pokemon\n";
f+="CIBLE_BOOST\tstatis\ttarg_boost__{0}\t{0} in terms of boost of the target\n";
f+="PAS_PARTENAIRE_ARRIERE\tmove\tno_back_part\tNo back partner\n";
f+="LANCEUR_DISPARAIT\tmove\tusr_disap\tThe user disappears while the round\n";
f+="LANCEUR_JOUE\tmove\tusr_acted\tThe user has acted\n";
f+="LANCEUR_DEGATS_RECUS_TOTAL\tmove\tusr_amt_suff_damg\tFull suffered damage against the user\n";
f+="LANCEUR_NB_UTILISATION\tmove\tusr_nb_uses__{0}\tNumber of uses of the move {0} of the user\n";
f+="CIBLE_STATIS\tstatis\ttarg_statis__{0}\t{0} in terms of base of statistic of the target\n";
f+="NB_UTILI_ATT_EQ_TOUR\tmove\tnb_uses_team_move_rd__{0}\tNumber of uses of the move {0} by the team\n";
f+="NIVEAU\tlevel\tl\tThe level of the Pokemon\n";
f+="EV\tev\tev\tThe ev of a statistic of the pokemon\n";
f+="IV\tiv\tiv\tThe iv of a statistic of the pokemon\n";
f+="BASE\tbase\tbase\tThe base value of a statistic of the pokemon\n";
f+="LANCEUR_TAILLE\tmove\tusr_height\theight of the user\n";
f+="LIEU_COMBAT\titem\tfight_env\tFight environment\n";
f+="CIBLE_GENRE\tmove\ttarg_gr\tGenre of the target\n";
f+="CIBLE_ATTAQUE_CHOISIE\tmove\ttarg_chosen_move\tChosen move of the target\n";
f+="CIBLE_NB_UTILISATION\tmove\ttarg_nb_uses__{0}\tNumber of uses of the move {0} of the target\n";
f+="IMMU_TYPE_ATT_CIBLE\ttype\timmu_move_type_targ__{0}\tThe target is protected against the moves of type {0}\n";
f+="CLIMATS\tmove\tweathers\tEnabled weathers\n";
f+="CIBLE_CLONE\tmove\ttarg_clone\tPV of the clone of the target\n";
f+="CIBLE_ATTAQUES\tmove\ttarg_moves\tMoves of the target\n";
f+="CIBLE_PV_MAX\tmove\ttarg_max_hp\tFull health points of the target\n";
f+="LANCEUR_TYPES\tmove\tusr_t\ttypes of the user\n";
f+="FIGHTER_TYPES\tstatus\tfighter_types\tTypes of the fighter\n";
f+="PAS_UTILIS_ATTAQUE_CIBLE\tmove\tno_use_tar\tNo used move by the target\n";
f+="ATTAQUE_CATEGORIE\tmove\tmove_cat\tCategory of the move of the owner\n";
f+="NB_KO_EQUIPE_LANCEUR\tmove\tnb_ko_user\tNumber of ko pokemon of the team of the user\n";
f+="CIBLE_CAPACITE\tmove\ttarg_ab\tCurrent ability of the target\n";
f+="CIBLE_DEGATS_RECUS_TOTAL_TOUR\tmove\ttarg_suffered_damg_rd\tSuffered damage against the target while the round\n";
f+="LANCEUR_PP\tmove\tusr_pp__{0}\tRemaining power points of the move {0} of the user\n";
f+="PAS_TOUR_TERRAIN\tmove\tno_rd\tHas just been sent on the ground.\n";
f+="FIGHTER_CLONE\tstatus\tfighter_clone\tPV of the clone of the fighter\n";
f+="CIBLE_NIVEAU\tmove\ttarg_lev\tLevel of the target\n";
f+="FIGHTER_STATUTS\titem\tfighter_st\tStatus of the owner\n";
f+="PK_SAUVAGE_MASSE\titem\twild_pk_wt\tWeight of wild pokemon\n";
f+="TYPES_ATTAQUES_RES_VIDE\tmove\tres_types_move_empty\tNo resisting type against the last suffered move.\n";
f+="LANCEUR_STATIS\tstatis\tusr_statis__{0}\t{0} in terms of base of statistic of the user\n";
f+="CIBLE_DISPARAIT\tmove\ttarg_disap\tThe target disappears while the round\n";
f+="LANCEUR_DEGATS_RECUS_TOUR\tcat\tusr_suffered_damg_rd__{0}\tSuffered damage against the user by moves of category {0}.\n";
f+="LANCEUR_MASSE\tmove\tusr_weight\tWeight of the user\n";
f+="COEFF_EFF_BASE_TYPES_COMBATTANT_ENTRANT\ttype\teff_base_sent_fighter__{0}\tRate of efficiency of the type {0} against the types of the sent fighter\n";
f+="LANCEUR_NOM\tmove\tuser_name\tName of the user\n";
f+="PK_UT_GENRE\titem\tpk_player_gr\tGender of the pokemon of the player\n";
f+="FIGHTER_NB_UTILISATION\tmove\tcbt_nb_uses__{0}\tNumber of uses of the move {0} of the fighter\n";
f+="NB_TOUR\tmove\tnb_rd__{0}\tnumber of round of the move {0}\n";
f+="PAS_ATTAQUE_INVOC\tmove\tno_invok_move\tNo invokable move\n";
f+="CIBLE_JOUE\tmove\ttarg_acted\tThe target has acted\n";
f+="CIBLE_MASSE\tmove\ttarg_weight\tWeight of the target\n";
f+="EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION\tmove\tsent_foe_team_nb_uses__{0}\tNumber of uses of the move {0} by the members of the foe team of the sent fighter.\n";
f+="LANCEUR_OBJET\tmove\tusr_obj\tItem of the user\n";
f+="LANCEUR_ATTAQUE_CHOISIE\tmove\tusr_chosen_move\tChosen move of the user\n";
f+="PK_SAUVAGE_VITESSE\titem\twild_pk_speed\tBase speed of the wild pokemon\n";
f+="PAS_ATTAQUES_COPIABLES\tmove\tno_copy_moves\tNo move can be copied\n";
f+="NB_COMBATTANTS_TERRAIN\tmove\tnb_fighters\tNumber of fighters on the ground\n";
f+="PK_SAUVAGE_NIVEAU\titem\twild_pk_lev\tLevel of the wild pokemon\n";
f+="LANCEUR_PV_RESTANTS\tmove\tusr_left_hp\tRemaining points de vie of the user\n";
f+="LANCEUR_NIVEAU\tmove\tusr_lev\tLevel of the user\n";
f+="COEFF_EFF\titem\trate_eff\tRate of efficiency of the move of the owner\n";
f+="LANCEUR_POSSEDE_STATUT_RELATION\tstatus\ttarget_pseudo_st__{0}\tThe user suffers of the pseudo status {0}\n";
f+="NB_TOUR_GLOBAL\tmove\tnb_gl_move__{0}\tNumber of tour of the move {0}\n";
f+="SOMME_BOOST_POS_LANCEUR\tmove\tsum_boost_pos_user\tSum of the positive boosts of the user\n";
f+="PAS_PARTENAIRE_TERRAIN\tmove\tno_part\tNo partner on the ground\n";
f+="COMBATTANT_ENTRANT_CLONE\tmove\tsent_fighter_clone\tRemaining health points of the clone of the sent fighter\n";
f+="AUCUN_BOOST_POSSIBLE\tmove\tno_boost\tNo boost is possible pour the target\n";
f+="BASE_CAPT_PK\tmove\tcatch_base\tBase catching rate of the wild pokemon\n";
f+="RATE_BALL_STATUS\tmove\tball_status_rate\tProduct between catching rate of the ball and rates of the status of the wild pokemon.\n";
f+="FOE_PK_MAX_HP\tmove\tfull_hp\tFull health points of the wild pokemon.\n";
f+="FOE_PK_REMOTE_HP\tmove\trem_hp\tRemaining health points of the wild pokemon.\n";
f+="PK_UT_VITESSE\tmove\tpk_pl_speed\tSpeed of the first pokemon of the player.\n";
f+="PK_SAUVAGE_VITESSE\tmove\tpk_foe_speed\tSpeed of the wild pokemon.\n";
f+="NB_FLEES\tmove\tnb_flees\tNumber of attempts of flee.\n";
f+="LEVEL_WINNER\tmove\tlvl_l\tLevel of the KO fighter\n";
f+="LEVEL_LOOSER\tmove\tlvl_w\tLevel of the player fighter which wins points\n";
return f;
}
}
