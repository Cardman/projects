package aiki.sml.trs;
public final class Trs7{
private static final String E_TR_CIBLE_EFFET="CIBLE_EFFET";
private static final String E_TR_GENRES_EGAUX="GENRES_EGAUX";
private static final String E_TR_PK_SAUVAGE_GENRE="PK_SAUVAGE_GENRE";
private static final String E_TR_LANCEUR_GENRE="LANCEUR_GENRE";
private static final String E_TR_LANCEUR_PV_MAX="LANCEUR_PV_MAX";
private static final String E_TR_EXISTE_GENRE_ASSEXUE="EXISTE_GENRE_ASSEXUE";
private static final String E_TR_LANCEUR_EFFET="LANCEUR_EFFET";
private static final String E_TR_CIBLE_STATUTS="CIBLE_STATUTS";
private static final String E_TR_CIBLE_TAILLE="CIBLE_TAILLE";
private static final String E_TR_CIBLE_OBJET="CIBLE_OBJET";
private static final String E_TR_IMMU_TYPE_ATT_COMBATTANT_ENTRANT="IMMU_TYPE_ATT_COMBATTANT_ENTRANT";
private static final String E_TR_LANCEUR_DEGATS_RECUS_TOTAL_TOUR="LANCEUR_DEGATS_RECUS_TOTAL_TOUR";
private static final String E_TR_DEJA_CAPTURE="DEJA_CAPTURE";
private static final String E_TR_CIBLE_TYPES="CIBLE_TYPES";
private static final String E_TR_COMBATTANT_ENTRANT_TYPES="COMBATTANT_ENTRANT_TYPES";
private static final String E_TR_LANCEUR_STATUTS="LANCEUR_STATUTS";
private static final String E_TR_PAS_PP_ATTAQUE_CIBLE="PAS_PP_ATTAQUE_CIBLE";
private static final String E_TR_SOMME_BOOST_POS_CIBLE="SOMME_BOOST_POS_CIBLE";
private static final String E_TR_ATTAQUE_NOM="ATTAQUE_NOM";
private static final String E_TR_LANCEUR_BOOST="LANCEUR_BOOST";
private static final String E_TR_ATTACK="ATTACK";
private static final String E_TR_CIBLE_PV_RESTANTS="CIBLE_PV_RESTANTS";
private static final String E_TR_CIBLE_POSSEDE_STATUT_RELATION="CIBLE_POSSEDE_STATUT_RELATION";
private static final String E_TR_ATTAQUE_TYPES="ATTAQUE_TYPES";
private static final String E_TR_FIGHTER_OBJET="FIGHTER_OBJET";
private static final String E_TR_LANCEUR_CLONE="LANCEUR_CLONE";
private static final String E_TR_POWER="POWER";
private static final String E_TR_PUISSANCE_BASE="PUISSANCE_BASE";
private static final String E_TR_MASSE_MOYENNE_PK="MASSE_MOYENNE_PK";
private static final String E_TR_LANCEUR_ATTAQUES_TYPES="LANCEUR_ATTAQUES_TYPES";
private static final String E_TR_PK_UT_NIVEAU="PK_UT_NIVEAU";
private static final String E_TR_DEFENSE="DEFENSE";
private static final String E_TR_PK_SAUVAGE_TYPES_BASE="PK_SAUVAGE_TYPES_BASE";
private static final String E_TR_LANCEUR_CAPACITE="LANCEUR_CAPACITE";
private static final String E_TR_FIGHTER_NOM="FIGHTER_NOM";
private static final String E_TR_NB_UTILISATION_CONSECUTIF="NB_UTILISATION_CONSECUTIF";
private static final String E_TR_FIGHTER_DER_JOUE="FIGHTER_DER_JOUE";
private static final String E_TR_TEMPS_TOUR="TEMPS_TOUR";
private static final String E_TR_LANCEUR_ATTAQUES="LANCEUR_ATTAQUES";
private static final String E_TR_LANCEUR_BONHEUR="LANCEUR_BONHEUR";
private static final String E_TR_PK_SAUVAGE_PIERRES_EVOS="PK_SAUVAGE_PIERRES_EVOS";
private static final String E_TR_CIBLE_BOOST="CIBLE_BOOST";
private static final String E_TR_PAS_PARTENAIRE_ARRIERE="PAS_PARTENAIRE_ARRIERE";
private static final String E_TR_LANCEUR_DISPARAIT="LANCEUR_DISPARAIT";
private static final String E_TR_LANCEUR_JOUE="LANCEUR_JOUE";
private static final String E_TR_LANCEUR_DEGATS_RECUS_TOTAL="LANCEUR_DEGATS_RECUS_TOTAL";
private static final String E_TR_LANCEUR_NB_UTILISATION="LANCEUR_NB_UTILISATION";
private static final String E_TR_CIBLE_STATIS="CIBLE_STATIS";
private static final String E_TR_NB_UTILI_ATT_EQ_TOUR="NB_UTILI_ATT_EQ_TOUR";
private static final String E_TR_NIVEAU="NIVEAU";
private static final String E_TR_EV="EV";
private static final String E_TR_IV="IV";
private static final String E_TR_BASE="BASE";
private static final String E_TR_LANCEUR_TAILLE="LANCEUR_TAILLE";
private static final String E_TR_LIEU_COMBAT="LIEU_COMBAT";
private static final String E_TR_CIBLE_GENRE="CIBLE_GENRE";
private static final String E_TR_CIBLE_ATTAQUE_CHOISIE="CIBLE_ATTAQUE_CHOISIE";
private static final String E_TR_CIBLE_NB_UTILISATION="CIBLE_NB_UTILISATION";
private static final String E_TR_IMMU_TYPE_ATT_CIBLE="IMMU_TYPE_ATT_CIBLE";
private static final String E_TR_CLIMATS="CLIMATS";
private static final String E_TR_CIBLE_CLONE="CIBLE_CLONE";
private static final String E_TR_CIBLE_ATTAQUES="CIBLE_ATTAQUES";
private static final String E_TR_CIBLE_PV_MAX="CIBLE_PV_MAX";
private static final String E_TR_LANCEUR_TYPES="LANCEUR_TYPES";
private static final String E_TR_FIGHTER_TYPES="FIGHTER_TYPES";
private static final String E_TR_PAS_UTILIS_ATTAQUE_CIBLE="PAS_UTILIS_ATTAQUE_CIBLE";
private static final String E_TR_ATTAQUE_CATEGORIE="ATTAQUE_CATEGORIE";
private static final String E_TR_NB_KO_EQUIPE_LANCEUR="NB_KO_EQUIPE_LANCEUR";
private static final String E_TR_CIBLE_CAPACITE="CIBLE_CAPACITE";
private static final String E_TR_CIBLE_DEGATS_RECUS_TOTAL_TOUR="CIBLE_DEGATS_RECUS_TOTAL_TOUR";
private static final String E_TR_LANCEUR_PP="LANCEUR_PP";
private static final String E_TR_PAS_TOUR_TERRAIN="PAS_TOUR_TERRAIN";
private static final String E_TR_FIGHTER_CLONE="FIGHTER_CLONE";
private static final String E_TR_CIBLE_NIVEAU="CIBLE_NIVEAU";
private static final String E_TR_FIGHTER_STATUTS="FIGHTER_STATUTS";
private static final String E_TR_PK_SAUVAGE_MASSE="PK_SAUVAGE_MASSE";
private static final String E_TR_TYPES_ATTAQUES_RES_VIDE="TYPES_ATTAQUES_RES_VIDE";
private static final String E_TR_LANCEUR_STATIS="LANCEUR_STATIS";
private static final String E_TR_CIBLE_DISPARAIT="CIBLE_DISPARAIT";
private static final String E_TR_LANCEUR_DEGATS_RECUS_TOUR="LANCEUR_DEGATS_RECUS_TOUR";
private static final String E_TR_LANCEUR_MASSE="LANCEUR_MASSE";
private static final String E_TR_COEFF_EFF_BASE_TYPES_COMBATTANT_ENTRANT="COEFF_EFF_BASE_TYPES_COMBATTANT_ENTRANT";
private static final String E_TR_LANCEUR_NOM="LANCEUR_NOM";
private static final String E_TR_PK_UT_GENRE="PK_UT_GENRE";
private static final String E_TR_FIGHTER_NB_UTILISATION="FIGHTER_NB_UTILISATION";
private static final String E_TR_NB_TOUR="NB_TOUR";
private static final String E_TR_PAS_ATTAQUE_INVOC="PAS_ATTAQUE_INVOC";
private static final String E_TR_CIBLE_JOUE="CIBLE_JOUE";
private static final String E_TR_CIBLE_MASSE="CIBLE_MASSE";
private static final String E_TR_EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION="EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION";
private static final String E_TR_LANCEUR_OBJET="LANCEUR_OBJET";
private static final String E_TR_LANCEUR_ATTAQUE_CHOISIE="LANCEUR_ATTAQUE_CHOISIE";
private static final String E_TR_PK_SAUVAGE_VITESSE="PK_SAUVAGE_VITESSE";
private static final String E_TR_PAS_ATTAQUES_COPIABLES="PAS_ATTAQUES_COPIABLES";
private static final String E_TR_NB_COMBATTANTS_TERRAIN="NB_COMBATTANTS_TERRAIN";
private static final String E_TR_PK_SAUVAGE_NIVEAU="PK_SAUVAGE_NIVEAU";
private static final String E_TR_LANCEUR_PV_RESTANTS="LANCEUR_PV_RESTANTS";
private static final String E_TR_LANCEUR_NIVEAU="LANCEUR_NIVEAU";
private static final String E_TR_COEFF_EFF="COEFF_EFF";
private static final String E_TR_LANCEUR_POSSEDE_STATUT_RELATION="LANCEUR_POSSEDE_STATUT_RELATION";
private static final String E_TR_NB_TOUR_GLOBAL="NB_TOUR_GLOBAL";
private static final String E_TR_SOMME_BOOST_POS_LANCEUR="SOMME_BOOST_POS_LANCEUR";
private static final String E_TR_PAS_PARTENAIRE_TERRAIN="PAS_PARTENAIRE_TERRAIN";
private static final String E_TR_COMBATTANT_ENTRANT_CLONE="COMBATTANT_ENTRANT_CLONE";
private static final String E_TR_AUCUN_BOOST_POSSIBLE="AUCUN_BOOST_POSSIBLE";
private static final String E_TR_BASE_CAPT_PK="BASE_CAPT_PK";
private static final String E_TR_RATE_BALL_STATUS="RATE_BALL_STATUS";
private static final String E_TR_FOE_PK_MAX_HP="FOE_PK_MAX_HP";
private static final String E_TR_FOE_PK_REMOTE_HP="FOE_PK_REMOTE_HP";
private static final String E_TR_PK_UT_VITESSE="PK_UT_VITESSE";
private static final String E_TR_NB_FLEES="NB_FLEES";
private static final String E_TR_LEVEL_WINNER="LEVEL_WINNER";
private static final String E_TR_LEVEL_LOOSER="LEVEL_LOOSER";
private Trs7(){}
static String tr(){
String e=E_TR_CIBLE_EFFET+"\tmove\ttarg_eff__{0}\tThe target is under the effect of the move {0}\n";
e+=E_TR_GENRES_EGAUX+"\tmove\tgr_eg\tThe genders equal to themselves.\n";
e+=E_TR_PK_SAUVAGE_GENRE+"\titem\twild_pk_gr\tGender of the wild pokemon\n";
e+=E_TR_LANCEUR_GENRE+"\tmove\tuser_gr\tGenre of the user\n";
e+=E_TR_LANCEUR_PV_MAX+"\tmove\tusr_max_hp\tFull health points of the user\n";
e+=E_TR_EXISTE_GENRE_ASSEXUE+"\tmove\texist_no_gr\tIt exists a no-sexual gender.\n";
e+=E_TR_LANCEUR_EFFET+"\tmove\tusr_eff__{0}\tThe user is under the effect of the move {0}\n";
e+=E_TR_CIBLE_STATUTS+"\tmove\ttarg_status\tstatus of the target\n";
e+=E_TR_CIBLE_TAILLE+"\tmove\ttarg_height\tHeight of the target\n";
e+=E_TR_CIBLE_OBJET+"\tmove\ttarg_it\tItem of the target\n";
e+=E_TR_IMMU_TYPE_ATT_COMBATTANT_ENTRANT+"\ttype\timmu_move_type_fighter__{0}\tThe sent fighter is protected against the moves of type {0}\n";
e+=E_TR_LANCEUR_DEGATS_RECUS_TOTAL_TOUR+"\tmove\tusr_suffered_damg_rd\tSuffered damage against the user while the round\n";
e+=E_TR_DEJA_CAPTURE+"\titem\talready_caught\tAlready caught pokemon\n";
e+=E_TR_CIBLE_TYPES+"\tmove\ttarg_t\ttypes of the targets\n";
e+=E_TR_COMBATTANT_ENTRANT_TYPES+"\tmove\tsent_fighter_type\tTypes of the sent fighter\n";
e+=E_TR_LANCEUR_STATUTS+"\tmove\tusr_status\tstatus of the user\n";
e+=E_TR_PAS_PP_ATTAQUE_CIBLE+"\tmove\tno_pp_target\tThe target has no power point for the move that the target owns\n";
e+=E_TR_SOMME_BOOST_POS_CIBLE+"\tmove\tsum_boost_pos_tar\tSum of the positive boosts of the target\n";
e+=E_TR_ATTAQUE_NOM+"\tmove\tmove_name\tName of the move\n";
e+=E_TR_LANCEUR_BOOST+"\tstatis\tusr_boost__{0}\t{0} of terms of boost of the user\n";
e+=E_TR_ATTACK+"\tmove\tatt\tValue of the move of the user\n";
e+=E_TR_CIBLE_PV_RESTANTS+"\tmove\ttarg_left_hp\tRemaining health points of the target\n";
e+=E_TR_CIBLE_POSSEDE_STATUT_RELATION+"\tstatus\ttarget_pseudo_st__{0}\tThe target is victim of the pseudo status {0}\n";
e+=E_TR_ATTAQUE_TYPES+"\tmove\tmove_types\tTypes of the move\n";
e+=E_TR_FIGHTER_OBJET+"\titem\tfighter_it\tItem of the owner\n";
e+=E_TR_LANCEUR_CLONE+"\tmove\tusr_clone\tPV of the clone of the user\n";
e+=E_TR_POWER+"\tmove\tpow\tValue of the power of the move of the user\n";
e+=E_TR_PUISSANCE_BASE+"\titem\tpower_base\tPower of base of the move of the owner\n";
e+=E_TR_MASSE_MOYENNE_PK+"\titem\tavg_pk_weight\tAverage weight of the pokemon\n";
e+=E_TR_LANCEUR_ATTAQUES_TYPES+"\tmove\tusr_moves_types\tTypes of the moves of the user\n";
e+=E_TR_PK_UT_NIVEAU+"\titem\tpk_player_lev\tLevel of the pokemon of the player\n";
e+=E_TR_DEFENSE+"\tmove\tdef\tValue of the defence of the user\n";
e+=E_TR_PK_SAUVAGE_TYPES_BASE+"\titem\twild_pk_types\tTypes de base of the wild pokemon\n";
e+=E_TR_LANCEUR_CAPACITE+"\tmove\tusr_ab\tCurrent ability of the user\n";
e+=E_TR_FIGHTER_NOM+"\titem\tfighter_nom\tName of the owner\n";
e+=E_TR_NB_UTILISATION_CONSECUTIF+"\titem\tnb_uses_cons\tNumber of consecutive uses of the move.\n";
e+=E_TR_FIGHTER_DER_JOUE+"\titem\tfighter_last_acted\tThe owner has played the last one\n";
e+=E_TR_TEMPS_TOUR+"\titem\ttps_rd\tTime of round\n";
e+=E_TR_LANCEUR_ATTAQUES+"\tmove\tusr_att\tMoves of the user\n";
e+=E_TR_LANCEUR_BONHEUR+"\tmove\tusr_hap\tHappiness of the user\n";
e+=E_TR_PK_SAUVAGE_PIERRES_EVOS+"\titem\twild_pk_ev\tEvolution stones of the wild pokemon\n";
e+=E_TR_CIBLE_BOOST+"\tstatis\ttarg_boost__{0}\t{0} in terms of boost of the target\n";
e+=E_TR_PAS_PARTENAIRE_ARRIERE+"\tmove\tno_back_part\tNo back partner\n";
e+=E_TR_LANCEUR_DISPARAIT+"\tmove\tusr_disap\tThe user disappears while the round\n";
e+=E_TR_LANCEUR_JOUE+"\tmove\tusr_acted\tThe user has acted\n";
e+=E_TR_LANCEUR_DEGATS_RECUS_TOTAL+"\tmove\tusr_amt_suff_damg\tFull suffered damage against the user\n";
e+=E_TR_LANCEUR_NB_UTILISATION+"\tmove\tusr_nb_uses__{0}\tNumber of uses of the move {0} of the user\n";
e+=E_TR_CIBLE_STATIS+"\tstatis\ttarg_statis__{0}\t{0} in terms of base of statistic of the target\n";
e+=E_TR_NB_UTILI_ATT_EQ_TOUR+"\tmove\tnb_uses_team_move_rd__{0}\tNumber of uses of the move {0} by the team\n";
e+=E_TR_NIVEAU+"\tlevel\tl\tThe level of the Pokemon\n";
e+=E_TR_EV+"\tev\tev\tThe ev of a statistic of the pokemon\n";
e+=E_TR_IV+"\tiv\tiv\tThe iv of a statistic of the pokemon\n";
e+=E_TR_BASE+"\tbase\tbase\tThe base value of a statistic of the pokemon\n";
e+=E_TR_LANCEUR_TAILLE+"\tmove\tusr_height\theight of the user\n";
e+=E_TR_LIEU_COMBAT+"\titem\tfight_env\tFight environment\n";
e+=E_TR_CIBLE_GENRE+"\tmove\ttarg_gr\tGenre of the target\n";
e+=E_TR_CIBLE_ATTAQUE_CHOISIE+"\tmove\ttarg_chosen_move\tChosen move of the target\n";
e+=E_TR_CIBLE_NB_UTILISATION+"\tmove\ttarg_nb_uses__{0}\tNumber of uses of the move {0} of the target\n";
e+=E_TR_IMMU_TYPE_ATT_CIBLE+"\ttype\timmu_move_type_targ__{0}\tThe target is protected against the moves of type {0}\n";
e+=E_TR_CLIMATS+"\tmove\tweathers\tEnabled weathers\n";
e+=E_TR_CIBLE_CLONE+"\tmove\ttarg_clone\tPV of the clone of the target\n";
e+=E_TR_CIBLE_ATTAQUES+"\tmove\ttarg_moves\tMoves of the target\n";
e+=E_TR_CIBLE_PV_MAX+"\tmove\ttarg_max_hp\tFull health points of the target\n";
e+=E_TR_LANCEUR_TYPES+"\tmove\tusr_t\ttypes of the user\n";
e+=E_TR_FIGHTER_TYPES+"\tstatus\tfighter_types\tTypes of the fighter\n";
e+=E_TR_PAS_UTILIS_ATTAQUE_CIBLE+"\tmove\tno_use_tar\tNo used move by the target\n";
e+=E_TR_ATTAQUE_CATEGORIE+"\tmove\tmove_cat\tCategory of the move of the owner\n";
e+=E_TR_NB_KO_EQUIPE_LANCEUR+"\tmove\tnb_ko_user\tNumber of ko pokemon of the team of the user\n";
e+=E_TR_CIBLE_CAPACITE+"\tmove\ttarg_ab\tCurrent ability of the target\n";
e+=E_TR_CIBLE_DEGATS_RECUS_TOTAL_TOUR+"\tmove\ttarg_suffered_damg_rd\tSuffered damage against the target while the round\n";
e+=E_TR_LANCEUR_PP+"\tmove\tusr_pp__{0}\tRemaining power points of the move {0} of the user\n";
e+=E_TR_PAS_TOUR_TERRAIN+"\tmove\tno_rd\tHas just been sent on the ground.\n";
e+=E_TR_FIGHTER_CLONE+"\tstatus\tfighter_clone\tPV of the clone of the fighter\n";
e+=E_TR_CIBLE_NIVEAU+"\tmove\ttarg_lev\tLevel of the target\n";
e+=E_TR_FIGHTER_STATUTS+"\titem\tfighter_st\tStatus of the owner\n";
e+=E_TR_PK_SAUVAGE_MASSE+"\titem\twild_pk_wt\tWeight of wild pokemon\n";
e+=E_TR_TYPES_ATTAQUES_RES_VIDE+"\tmove\tres_types_move_empty\tNo resisting type against the last suffered move.\n";
e+=E_TR_LANCEUR_STATIS+"\tstatis\tusr_statis__{0}\t{0} in terms of base of statistic of the user\n";
e+=E_TR_CIBLE_DISPARAIT+"\tmove\ttarg_disap\tThe target disappears while the round\n";
e+=E_TR_LANCEUR_DEGATS_RECUS_TOUR+"\tcat\tusr_suffered_damg_rd__{0}\tSuffered damage against the user by moves of category {0}.\n";
e+=E_TR_LANCEUR_MASSE+"\tmove\tusr_weight\tWeight of the user\n";
e+=E_TR_COEFF_EFF_BASE_TYPES_COMBATTANT_ENTRANT+"\ttype\teff_base_sent_fighter__{0}\tRate of efficiency of the type {0} against the types of the sent fighter\n";
e+=E_TR_LANCEUR_NOM+"\tmove\tuser_name\tName of the user\n";
e+=E_TR_PK_UT_GENRE+"\titem\tpk_player_gr\tGender of the pokemon of the player\n";
e+=E_TR_FIGHTER_NB_UTILISATION+"\tmove\tcbt_nb_uses__{0}\tNumber of uses of the move {0} of the fighter\n";
e+=E_TR_NB_TOUR+"\tmove\tnb_rd__{0}\tnumber of round of the move {0}\n";
e+=E_TR_PAS_ATTAQUE_INVOC+"\tmove\tno_invok_move\tNo invokable move\n";
e+=E_TR_CIBLE_JOUE+"\tmove\ttarg_acted\tThe target has acted\n";
e+=E_TR_CIBLE_MASSE+"\tmove\ttarg_weight\tWeight of the target\n";
e+=E_TR_EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION+"\tmove\tsent_foe_team_nb_uses__{0}\tNumber of uses of the move {0} by the members of the foe team of the sent fighter.\n";
e+=E_TR_LANCEUR_OBJET+"\tmove\tusr_obj\tItem of the user\n";
e+=E_TR_LANCEUR_ATTAQUE_CHOISIE+"\tmove\tusr_chosen_move\tChosen move of the user\n";
e+=E_TR_PK_SAUVAGE_VITESSE+"\titem\twild_pk_speed\tBase speed of the wild pokemon\n";
e+=E_TR_PAS_ATTAQUES_COPIABLES+"\tmove\tno_copy_moves\tNo move can be copied\n";
e+=E_TR_NB_COMBATTANTS_TERRAIN+"\tmove\tnb_fighters\tNumber of fighters on the ground\n";
e+=E_TR_PK_SAUVAGE_NIVEAU+"\titem\twild_pk_lev\tLevel of the wild pokemon\n";
e+=E_TR_LANCEUR_PV_RESTANTS+"\tmove\tusr_left_hp\tRemaining points de vie of the user\n";
e+=E_TR_LANCEUR_NIVEAU+"\tmove\tusr_lev\tLevel of the user\n";
e+=E_TR_COEFF_EFF+"\titem\trate_eff\tRate of efficiency of the move of the owner\n";
e+=E_TR_LANCEUR_POSSEDE_STATUT_RELATION+"\tstatus\ttarget_pseudo_st__{0}\tThe user suffers of the pseudo status {0}\n";
e+=E_TR_NB_TOUR_GLOBAL+"\tmove\tnb_gl_move__{0}\tNumber of tour of the move {0}\n";
e+=E_TR_SOMME_BOOST_POS_LANCEUR+"\tmove\tsum_boost_pos_user\tSum of the positive boosts of the user\n";
e+=E_TR_PAS_PARTENAIRE_TERRAIN+"\tmove\tno_part\tNo partner on the ground\n";
e+=E_TR_COMBATTANT_ENTRANT_CLONE+"\tmove\tsent_fighter_clone\tRemaining health points of the clone of the sent fighter\n";
e+=E_TR_AUCUN_BOOST_POSSIBLE+"\tmove\tno_boost\tNo boost is possible pour the target\n";
e+=E_TR_BASE_CAPT_PK+"\tmove\tcatch_base\tBase catching rate of the wild pokemon\n";
e+=E_TR_RATE_BALL_STATUS+"\tmove\tball_status_rate\tProduct between catching rate of the ball and rates of the status of the wild pokemon.\n";
e+=E_TR_FOE_PK_MAX_HP+"\tmove\tfull_hp\tFull health points of the wild pokemon.\n";
e+=E_TR_FOE_PK_REMOTE_HP+"\tmove\trem_hp\tRemaining health points of the wild pokemon.\n";
e+=E_TR_PK_UT_VITESSE+"\tmove\tpk_pl_speed\tSpeed of the first pokemon of the player.\n";
e+=E_TR_PK_SAUVAGE_VITESSE+"\tmove\tpk_foe_speed\tSpeed of the wild pokemon.\n";
e+=E_TR_NB_FLEES+"\tmove\tnb_flees\tNumber of attempts of flee.\n";
e+=E_TR_LEVEL_WINNER+"\tmove\tlvl_l\tLevel of the KO fighter\n";
e+=E_TR_LEVEL_LOOSER+"\tmove\tlvl_w\tLevel of the player fighter which wins points\n";
return e;
}
}
