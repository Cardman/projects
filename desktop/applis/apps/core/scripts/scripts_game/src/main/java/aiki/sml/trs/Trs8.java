package aiki.sml.trs;
public final class Trs8{
private static final String E_FC_DIV="div";
private static final String E_FC_PUIS="puis";
private static final String E_FC_QUOT="quot";
private static final String E_FC_MOD="mod";
private static final String E_FC_MODTAUX="modtaux";
private static final String E_FC_ABS="abs";
private static final String E_FC_ENT="ent";
private static final String E_FC_TAUX="taux";
private static final String E_FC_TRONCATURE="troncature";
private static final String E_FC_NUM="num";
private static final String E_FC_DEN="den";
private static final String E_FC_MIN="min";
private static final String E_FC_MAX="max";
private static final String E_FC_MOY="moy";
private static final String E_FC_VAR="var";
private static final String E_FC_CARACFERME="caracferme";
private static final String E_FC_CARACOUVERT="caracouvert";
private static final String E_FC_CARACSEMIOUVERTG="caracsemiouvertg";
private static final String E_FC_CARACSEMIOUVERTD="caracsemiouvertd";
private static final String E_FC_CARACGAUCHEOUVERT="caracgaucheouvert";
private static final String E_FC_CARACDROITEOUVERT="caracdroiteouvert";
private static final String E_FC_CARACGAUCHEFERME="caracgaucheferme";
private static final String E_FC_CARACDROITEFERME="caracdroiteferme";
private static final String E_FC_SGN="sgn";
private static final String E_FC_CARDINAL="cardinal";
private static final String E_FC_INTER="inter";
private static final String E_FC_UNION="union";
private static final String E_FC_COMPLEMENTAIRE="complementaire";
private static final String E_FC_INCLUSNUM="inclusnum";
private static final String E_FC_NONINCLUSNUM="noninclusnum";
private static final String E_FC_EGALNUM="egalnum";
private static final String E_FC_DIFFERENTNUM="differentnum";
private static final String E_FC_VIDE="vide";
private Trs8(){}
static String tr(){
String e=E_FC_DIV+"\tDivision\n";
e+=E_FC_PUIS+"\tPower\n";
e+=E_FC_QUOT+"\tRate of the integer division\n";
e+=E_FC_MOD+"\tRemaining number of the integer division\n";
e+=E_FC_MODTAUX+"\tRemaining number of the division\n";
e+=E_FC_ABS+"\tAbsolute value\n";
e+=E_FC_ENT+"\tInteger part\n";
e+=E_FC_TAUX+"\tRational number\n";
e+=E_FC_TRONCATURE+"\tTroncating\n";
e+=E_FC_NUM+"\tNumerator\n";
e+=E_FC_DEN+"\tDivider\n";
e+=E_FC_MIN+"\tMinimum\n";
e+=E_FC_MAX+"\tMaximum\n";
e+=E_FC_MOY+"\tAverage\n";
e+=E_FC_VAR+"\tVariance\n";
e+=E_FC_CARACFERME+"\tCharacteristic of the closed\n";
e+=E_FC_CARACOUVERT+"\tCharacteristic of the opened\n";
e+=E_FC_CARACSEMIOUVERTG+"\tCharacteristic of the left half opened interval\n";
e+=E_FC_CARACSEMIOUVERTD+"\tCharacteristic of the right half opened interval\n";
e+=E_FC_CARACGAUCHEOUVERT+"\tCharacteristic of the left opened interval\n";
e+=E_FC_CARACDROITEOUVERT+"\tCharacteristic of the right opened interval\n";
e+=E_FC_CARACGAUCHEFERME+"\tCharacteristic of the closed left interval\n";
e+=E_FC_CARACDROITEFERME+"\tCharacteristic of the closed right interval\n";
e+=E_FC_SGN+"\tSignum\n";
e+=E_FC_CARDINAL+"\tElements count\n";
e+=E_FC_INTER+"\tIntersect\n";
e+=E_FC_UNION+"\tUnion\n";
e+=E_FC_COMPLEMENTAIRE+"\tComplement of\n";
e+=E_FC_INCLUSNUM+"\tNumeric include\n";
e+=E_FC_NONINCLUSNUM+"\tNon numeric include\n";
e+=E_FC_EGALNUM+"\tNumeric equality\n";
e+=E_FC_DIFFERENTNUM+"\tNumeric difference\n";
e+=E_FC_VIDE+"\tEmpty set\n";
return e;
}
}
