package aiki.sml.trs;
public final class Trs8{
private static final String FC_DIV="div";
private static final String FC_PUIS="puis";
private static final String FC_QUOT="quot";
private static final String FC_MOD="mod";
private static final String FC_MODTAUX="modtaux";
private static final String FC_ABS="abs";
private static final String FC_ENT="ent";
private static final String FC_TAUX="taux";
private static final String FC_TRONCATURE="troncature";
private static final String FC_NUM="num";
private static final String FC_DEN="den";
private static final String FC_MIN="min";
private static final String FC_MAX="max";
private static final String FC_MOY="moy";
private static final String FC_VAR="var";
private static final String FC_CARACFERME="caracferme";
private static final String FC_CARACOUVERT="caracouvert";
private static final String FC_CARACSEMIOUVERTG="caracsemiouvertg";
private static final String FC_CARACSEMIOUVERTD="caracsemiouvertd";
private static final String FC_CARACGAUCHEOUVERT="caracgaucheouvert";
private static final String FC_CARACDROITEOUVERT="caracdroiteouvert";
private static final String FC_CARACGAUCHEFERME="caracgaucheferme";
private static final String FC_CARACDROITEFERME="caracdroiteferme";
private static final String FC_SGN="sgn";
private static final String FC_CARDINAL="cardinal";
private static final String FC_INTER="inter";
private static final String FC_UNION="union";
private static final String FC_COMPLEMENTAIRE="complementaire";
private static final String FC_INCLUSNUM="inclusnum";
private static final String FC_NONINCLUSNUM="noninclusnum";
private static final String FC_EGALNUM="egalnum";
private static final String FC_DIFFERENTNUM="differentnum";
private static final String FC_VIDE="vide";
private Trs8(){}
static String tr(){
String e=FC_DIV+"\tDivision\n";
e+=FC_PUIS+"\tPower\n";
e+=FC_QUOT+"\tRate of the integer division\n";
e+=FC_MOD+"\tRemaining number of the integer division\n";
e+=FC_MODTAUX+"\tRemaining number of the division\n";
e+=FC_ABS+"\tAbsolute value\n";
e+=FC_ENT+"\tInteger part\n";
e+=FC_TAUX+"\tRational number\n";
e+=FC_TRONCATURE+"\tTroncating\n";
e+=FC_NUM+"\tNumerator\n";
e+=FC_DEN+"\tDivider\n";
e+=FC_MIN+"\tMinimum\n";
e+=FC_MAX+"\tMaximum\n";
e+=FC_MOY+"\tAverage\n";
e+=FC_VAR+"\tVariance\n";
e+=FC_CARACFERME+"\tCharacteristic of the closed\n";
e+=FC_CARACOUVERT+"\tCharacteristic of the opened\n";
e+=FC_CARACSEMIOUVERTG+"\tCharacteristic of the left half opened interval\n";
e+=FC_CARACSEMIOUVERTD+"\tCharacteristic of the right half opened interval\n";
e+=FC_CARACGAUCHEOUVERT+"\tCharacteristic of the left opened interval\n";
e+=FC_CARACDROITEOUVERT+"\tCharacteristic of the right opened interval\n";
e+=FC_CARACGAUCHEFERME+"\tCharacteristic of the closed left interval\n";
e+=FC_CARACDROITEFERME+"\tCharacteristic of the closed right interval\n";
e+=FC_SGN+"\tSignum\n";
e+=FC_CARDINAL+"\tElements count\n";
e+=FC_INTER+"\tIntersect\n";
e+=FC_UNION+"\tUnion\n";
e+=FC_COMPLEMENTAIRE+"\tComplement of\n";
e+=FC_INCLUSNUM+"\tNumeric include\n";
e+=FC_NONINCLUSNUM+"\tNon numeric include\n";
e+=FC_EGALNUM+"\tNumeric equality\n";
e+=FC_DIFFERENTNUM+"\tNumeric difference\n";
e+=FC_VIDE+"\tEmpty set\n";
return e;
}
}
