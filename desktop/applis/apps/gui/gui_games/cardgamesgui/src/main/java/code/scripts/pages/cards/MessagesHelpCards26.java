package code.scripts.pages.cards;
import code.sml.util.*;
public final class MessagesHelpCards26{
public static final String M_26_0="_26_0";
public static final String M_26_10="_26_10";
public static final String M_26_11="_26_11";
public static final String M_26_12="_26_12";
public static final String M_26_13="_26_13";
public static final String M_26_14="_26_14";
public static final String M_26_15="_26_15";
public static final String M_26_16="_26_16";
public static final String M_26_17="_26_17";
public static final String M_26_18="_26_18";
public static final String M_26_19="_26_19";
public static final String M_26_1="_26_1";
public static final String M_26_20="_26_20";
public static final String M_26_21="_26_21";
public static final String M_26_22="_26_22";
public static final String M_26_23="_26_23";
public static final String M_26_24="_26_24";
public static final String M_26_25="_26_25";
public static final String M_26_26="_26_26";
public static final String M_26_27="_26_27";
public static final String M_26_28="_26_28";
public static final String M_26_29="_26_29";
public static final String M_26_2="_26_2";
public static final String M_26_30="_26_30";
public static final String M_26_31="_26_31";
public static final String M_26_32="_26_32";
public static final String M_26_33="_26_33";
public static final String M_26_34="_26_34";
public static final String M_26_35="_26_35";
public static final String M_26_36="_26_36";
public static final String M_26_37="_26_37";
public static final String M_26_39="_26_39";
public static final String M_26_3="_26_3";
public static final String M_26_40="_26_40";
public static final String M_26_41="_26_41";
public static final String M_26_42="_26_42";
public static final String M_26_44="_26_44";
public static final String M_26_45="_26_45";
public static final String M_26_46="_26_46";
public static final String M_26_47="_26_47";
public static final String M_26_48="_26_48";
public static final String M_26_4="_26_4";
public static final String M_26_50="_26_50";
public static final String M_26_51="_26_51";
public static final String M_26_52="_26_52";
public static final String M_26_53="_26_53";
public static final String M_26_54="_26_54";
public static final String M_26_55="_26_55";
public static final String M_26_56="_26_56";
public static final String M_26_57="_26_57";
public static final String M_26_58="_26_58";
public static final String M_26_59="_26_59";
public static final String M_26_5="_26_5";
public static final String M_26_60="_26_60";
public static final String M_26_61="_26_61";
public static final String M_26_62="_26_62";
public static final String M_26_63="_26_63";
public static final String M_26_64="_26_64";
public static final String M_26_6="_26_6";
public static final String M_26_7="_26_7";
public static final String M_26_8="_26_8";
public static final String M_26_9="_26_9";
private MessagesHelpCards26(){
}
public static TranslationsFile en(){
TranslationsFile e=new TranslationsFile(62);
e.add(M_26_0,"Here is the difference with playing by teams (Taker + possible called player versus Defense):");
e.add(M_26_10,"Else the deal progresses like game by teams (Same declaring and same rules for playing cards.).");
e.add(M_26_11,"Limit values to be achieved for a player are the following one:");
e.add(M_26_12,"56 points without Oulder.");
e.add(M_26_13,"51 points with 1 Oulder in the tricks of the player.");
e.add(M_26_14,"41 points with 2 Oulders in the tricks of the player.");
e.add(M_26_15,"36 points with 3 Oulders in the tricks of the player.");
e.add(M_26_16,"At the end of deal, for sorting players, one processes in the following way:");
e.add(M_26_17,"Difference points of a player = number of scored points in the tricks - limit value for the player.");
e.add(M_26_18,"Players are sorted by their difference points, the player having the greatest difference is the best player.");
e.add(M_26_19,"If two players have same difference points and have won tricks:");
e.add(M_26_1,"Possible dealing are the following one:");
e.add(M_26_20,"Then the players are sorted by number of Oudlers in the tricks, the number of Oudlers must be the greatest as possible for winning.");
e.add(M_26_21,"If besides, the number of Oudlers in the tricks of the two players is the same, then:");
e.add(M_26_22,"If this number is 0:");
e.add(M_26_23,"Numbers of characters in the tricks of the two players is compared, the number of characters in the tricks of a player must be the greatest as possible for winning.");
e.add(M_26_24,"If besides, the number of characters in the tricks of the two players is the same, then:");
e.add(M_26_25,"Won characters by the two players are compared, by firstly comparing the greatest characters.");
e.add(M_26_26,"Comparison is stopped, if there is a difference of strength of card.");
e.add(M_26_27,"If the characters have the same strength two by two for the two players,");
e.add(M_26_28,"the first player who has won a trick is before the other player.");
e.add(M_26_29,"If this number is 1:");
e.add(M_26_2,"18 cards per player and 6 at the dog; cards are dealt 3 by 3; for 4 players.");
e.add(M_26_30,"Sorting on Oudlers is based in the following way from the most winning to the most loosing: Trump 21 - Excuse - Small.");
e.add(M_26_31,"(Winning the Excuse is better than winning the Small,...)");
e.add(M_26_32,"If two players have same difference points but have not won any trick, there is dispute.");
e.add(M_26_33,"3 players");
e.add(M_26_34,"Rate is worth from the winner to the looser:");
e.add(M_26_35,"1, 0, -1; if there is no dispute.");
e.add(M_26_36,"2, -1, -1; if there is dispute.");
e.add(M_26_37,"4 players");
e.add(M_26_39,"2, 1, -1, -2; if there is no dispute.");
e.add(M_26_3,"24 cards per player and 6 at the dog; cards are dealt 3 by 3; for 3 players.");
e.add(M_26_40,"3, 1, -2, -2; if there is dispute between two players exactly.");
e.add(M_26_41,"6, -2, -2, -2; if there is dispute between three players exactly.");
e.add(M_26_42,"5 players");
e.add(M_26_44,"2, 1, 0, -1, -2; if there is no dispute.");
e.add(M_26_45,"3, 1, 0, -2, -2; if there is dispute between two players exactly.");
e.add(M_26_46,"6, 0, -2, -2, -2; if there is dispute between three players exactly.");
e.add(M_26_47,"8, -2, -2, -2, -2; if there is dispute between four players exactly.");
e.add(M_26_48,"6 players");
e.add(M_26_4,"15 cards per player and 3 at the dog; cards are dealt 3 by 3; for 5 players.");
e.add(M_26_50,"3, 2, 1, -1, -2, -3; if there is no dispute.");
e.add(M_26_51,"3, 2, 1, 0, -3, -3; if there is dispute between two players exactly.");
e.add(M_26_52,"4, 2, 0, -2, -2, -2; if there is dispute between three players exactly.");
e.add(M_26_53,"8, 0, -2, -2, -2, -2; if there is dispute between four players exactly.");
e.add(M_26_54,"10, -2, -2, -2, -2, -2; if there is dispute between five players exactly.");
e.add(M_26_55,"A successful slam is by default 200 points. (The slam is regarded as not declared.)");
e.add(M_26_56,"Score of a player = 4 x (Rate x (25 + Maximal difference points for players rounded to the greater integer + number of points in the dog rounded to the greater integer) + (number of players - team size) x Declaring points of player team - team size x Declaring of each one of other players teams).");
e.add(M_26_57,"By teams of two players, rates are the following one:");
e.add(M_26_58,"4 players");
e.add(M_26_59,"Rate is worth from the winner team to the looser team:");
e.add(M_26_5,"14 cards per player and 8 at the dog; cards are dealt 2 by 2; for 5 players.");
e.add(M_26_60,"1, -1");
e.add(M_26_61,"6 players");
e.add(M_26_62,"Rate is worth from the winner team to the looser team:");
e.add(M_26_63,"1, 0, -1; if there is no dispute.");
e.add(M_26_64,"2, -1, -1; if there is dispute between two teams exactly.");
e.add(M_26_6,"12 cards per player and 6 at the dog; cards are dealt 2 by 2; for 6 players.");
e.add(M_26_7,"Playing one for one can be done after all players have declared \"pass\".");
e.add(M_26_8,"In this case, the dog is hidden.");
e.add(M_26_9,"The goal is to get the most cards as possible.");
return e;
}
public static TranslationsFile fr(){
TranslationsFile f=new TranslationsFile(62);
f.add(M_26_0,"Voici ce qui change par rapport au jeu d'équipes (Preneur + éventuel appelé versus Défense):");
f.add(M_26_10,"Sinon le jeu se déroule de la même manière que le jeu d'équipes (Mêmes annonces et mêmes règles pour le jeu de la carte.).");
f.add(M_26_11,"Les valeurs limites à atteindre pour un joueur sont les suivantes:");
f.add(M_26_12,"56 points sans bout.");
f.add(M_26_13,"51 points avec 1 bout dans les plis du joueur.");
f.add(M_26_14,"41 points avec 2 bouts dans les plis du joueur.");
f.add(M_26_15,"36 points avec 3 bouts dans les plis du joueur.");
f.add(M_26_16,"A la fin de la partie, pour désigner le classement des joueurs, on procède de la manière suivante:");
f.add(M_26_17,"Différence d'un joueur = nombre de points marqués dans les plis - valeur limite pour le joueur.");
f.add(M_26_18,"On classe les joueurs par leur différence, la plus grande différence pour le meilleur.");
f.add(M_26_19,"Si deux joueurs ont même différence et ont fait des plis:");
f.add(M_26_1,"Les distributions possibles sont les suivantes:");
f.add(M_26_20,"Alors on les classe par le nombre de bouts dans les plis, il doit être le plus grand possible pour gagner.");
f.add(M_26_21,"Si de plus, le nombre de bouts dans les plis des deux joueurs est identique, alors:");
f.add(M_26_22,"Si ce nombre vaut 0:");
f.add(M_26_23,"On compare les nombres de figures dans les plis des deux joueurs, le nombre de figures dans les plis d'un joueur doit être le plus grand possible pour gagner.");
f.add(M_26_24,"Si de plus, le nombre de figures dans les plis des deux joueurs est identique, alors:");
f.add(M_26_25,"On compare les figures ramassées par les deux joueurs, en commençant par les plus hautes.");
f.add(M_26_26,"On s'arrête dès qu'il y a une différence de hauteur.");
f.add(M_26_27,"Si les figures sont identiques en valeur deux à deux des deux joueurs, on regarde qui a fait le premier pli.");
f.add(M_26_28,"Celui qui a fait son premier pli en premier passe devant.");
f.add(M_26_29,"Si ce nombre vaut 1:");
f.add(M_26_2,"18 cartes par joueur et 6 au chien; les cartes sont distribuées 3 par 3; pour 4 joueurs.");
f.add(M_26_30,"On classe alors de la manière suivante du plus gagnant au plus perdant: 21 - Excuse - Petit.");
f.add(M_26_31,"(Il vaut mieux alors avoir l'Excuse que le Petit,...)");
f.add(M_26_32,"Si deux joueurs ont même différence mais n'ont pas fait des plis, il y a litige.");
f.add(M_26_33,"3 joueurs");
f.add(M_26_34,"Coefficient vaut du gagnant au perdant:");
f.add(M_26_35,"1, 0, -1; s'il n'y a pas de litige.");
f.add(M_26_36,"2, -1, -1; s'il y a litige.");
f.add(M_26_37,"4 joueurs");
f.add(M_26_39,"2, 1, -1, -2; s'il n'y a pas de litige.");
f.add(M_26_3,"24 cartes par joueur et 6 au chien; les cartes sont distribuées 3 par 3; pour 3 joueurs.");
f.add(M_26_40,"3, 1, -2, -2; s'il y a litige entre deux joueurs exactement.");
f.add(M_26_41,"6, -2, -2, -2; s'il y a litige entre trois joueurs exactement.");
f.add(M_26_42,"5 joueurs");
f.add(M_26_44,"2, 1, 0, -1, -2; s'il n'y a pas de litige.");
f.add(M_26_45,"3, 1, 0, -2, -2; s'il y a litige entre deux joueurs exactement.");
f.add(M_26_46,"6, 0, -2, -2, -2; s'il y a litige entre trois joueurs exactement.");
f.add(M_26_47,"8, -2, -2, -2, -2; s'il y a litige entre quatre joueurs exactement.");
f.add(M_26_48,"6 joueurs");
f.add(M_26_4,"15 cartes par joueur et 3 au chien; les cartes sont distribuées 3 par 3; pour 5 joueurs.");
f.add(M_26_50,"3, 2, 1, -1, -2, -3; s'il n'y a pas de litige.");
f.add(M_26_51,"3, 2, 1, 0, -3, -3; s'il y a litige entre deux joueurs exactement.");
f.add(M_26_52,"4, 2, 0, -2, -2, -2; s'il y a litige entre trois joueurs exactement.");
f.add(M_26_53,"8, 0, -2, -2, -2, -2; s'il y a litige entre quatre joueurs exactement.");
f.add(M_26_54,"10, -2, -2, -2, -2, -2; s'il y a litige entre cinq joueurs exactement.");
f.add(M_26_55,"Un chelem réussi vaut de base 200 points. (Il est considéré comme non demandé.)");
f.add(M_26_56,"Score d'un joueur = 4 x (Coefficient x (25 + Différence max pour les joueurs arrondie à l'entier supérieur + nombre points chien arrondi à l'entier supérieur) + (nombre de joueurs - taille équipe) x Annonces de l'équipe joueur - taille équipe x Annonces de chacun des autres équipes des joueurs).");
f.add(M_26_57,"En équipes de deux joueurs, les coefficients sont les suivants:");
f.add(M_26_58,"4 joueurs");
f.add(M_26_59,"Coefficient vaut de l'équipe gagnante à l'équipe perdante:");
f.add(M_26_5,"14 cartes par joueur et 8 au chien; les cartes sont distribuées 2 par 2; pour 5 joueurs.");
f.add(M_26_60,"1, -1");
f.add(M_26_61,"6 joueurs");
f.add(M_26_62,"Coefficient vaut de l'équipe gagnante à l'équipe perdante:");
f.add(M_26_63,"1, 0, -1; s'il n'y a pas de litige.");
f.add(M_26_64,"2, -1, -1; s'il y a litige entre deux équipes exactement.");
f.add(M_26_6,"12 cartes par joueur et 6 au chien; les cartes sont distribuées 2 par 2; pour 6 joueurs.");
f.add(M_26_7,"On peut jouer le jeu du chacun pour soi après que tout le monde a passé.");
f.add(M_26_8,"Dans ce cas, le chien est caché.");
f.add(M_26_9,"Le but est de ramasser le plus de cartes possibles.");
return f;
}
}
