package code.scripts.pages.cards;
import code.sml.util.*;
public final class MessagesHelpCards27{
public static final String M_27_0="_27_0";
public static final String M_27_10="_27_10";
public static final String M_27_11="_27_11";
public static final String M_27_12="_27_12";
public static final String M_27_13="_27_13";
public static final String M_27_14="_27_14";
public static final String M_27_15="_27_15";
public static final String M_27_16="_27_16";
public static final String M_27_17="_27_17";
public static final String M_27_18="_27_18";
public static final String M_27_19="_27_19";
public static final String M_27_1="_27_1";
public static final String M_27_20="_27_20";
public static final String M_27_21="_27_21";
public static final String M_27_22="_27_22";
public static final String M_27_23="_27_23";
public static final String M_27_24="_27_24";
public static final String M_27_25="_27_25";
public static final String M_27_26="_27_26";
public static final String M_27_27="_27_27";
public static final String M_27_28="_27_28";
public static final String M_27_29="_27_29";
public static final String M_27_2="_27_2";
public static final String M_27_30="_27_30";
public static final String M_27_31="_27_31";
public static final String M_27_32="_27_32";
public static final String M_27_33="_27_33";
public static final String M_27_34="_27_34";
public static final String M_27_35="_27_35";
public static final String M_27_36="_27_36";
public static final String M_27_37="_27_37";
public static final String M_27_38="_27_38";
public static final String M_27_3="_27_3";
public static final String M_27_40="_27_40";
public static final String M_27_41="_27_41";
public static final String M_27_42="_27_42";
public static final String M_27_43="_27_43";
public static final String M_27_45="_27_45";
public static final String M_27_46="_27_46";
public static final String M_27_47="_27_47";
public static final String M_27_48="_27_48";
public static final String M_27_49="_27_49";
public static final String M_27_4="_27_4";
public static final String M_27_51="_27_51";
public static final String M_27_52="_27_52";
public static final String M_27_53="_27_53";
public static final String M_27_54="_27_54";
public static final String M_27_55="_27_55";
public static final String M_27_56="_27_56";
public static final String M_27_57="_27_57";
public static final String M_27_58="_27_58";
public static final String M_27_59="_27_59";
public static final String M_27_5="_27_5";
public static final String M_27_60="_27_60";
public static final String M_27_61="_27_61";
public static final String M_27_62="_27_62";
public static final String M_27_63="_27_63";
public static final String M_27_64="_27_64";
public static final String M_27_6="_27_6";
public static final String M_27_7="_27_7";
public static final String M_27_8="_27_8";
public static final String M_27_9="_27_9";
private MessagesHelpCards27(){
}
public static TranslationsFile en(){
TranslationsFile e=new TranslationsFile(62);
e.add(M_27_0,"Here is the difference with playing by teams (Taker + possible called player versus Defense):");
e.add(M_27_10,"There is neither declaring nor bonuses.");
e.add(M_27_11,"Else the deal progresses like game by teams (Same rules for playing cards.).");
e.add(M_27_12,"\\u00A0Limits values not to be achieved for a player are the following one:");
e.add(M_27_13,"56 points without Oulder.");
e.add(M_27_14,"51 points with 1 Oulder in the tricks of the player.");
e.add(M_27_15,"41 points with 2 Oulders in the tricks of the player.");
e.add(M_27_16,"36 points with 3 Oulders in the tricks of the player.");
e.add(M_27_17,"\\u00A0At the end of deal, for sorting players, one processes in the following way:");
e.add(M_27_18,"Difference points of a player = limit value for the player - number of scored points in the tricks.");
e.add(M_27_19,"Players are sorted by their difference points, the player having the greatest difference is the best player.");
e.add(M_27_1,"Possible dealing are the following one:");
e.add(M_27_20,"If two players have same difference points and have won tricks:");
e.add(M_27_21,"\\u00A0Then the players are sorted by number of Oudlers in the tricks, the number of Oudlers must be the lowest as possible for winning.");
e.add(M_27_22,"\\u00A0If besides, the number of Oudlers in the tricks of the two players is the same, then:");
e.add(M_27_23,"If this number is 0:");
e.add(M_27_24,"\\u00A0\\u00A0\\u00A0Numbers of characters in the tricks of the two players is compared, the number of characters in the tricks of a player must be the lowest as possible for winning.");
e.add(M_27_25,"\\u00A0\\u00A0\\u00A0If besides, the number of characters in the tricks of the two players is the same, then:");
e.add(M_27_26,"\\u00A0\\u00A0\\u00A0\\u00A0Won characters by the two players are compared, by firstly comparing the greatest characters.");
e.add(M_27_27,"\\u00A0\\u00A0\\u00A0\\u00A0Comparison is stopped, if there is a difference of strength of card.");
e.add(M_27_28,"\\u00A0\\u00A0\\u00A0\\u00A0If the characters have the same strength two by two for the two players,");
e.add(M_27_29,"\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0the last player who has won a trick is before the other player.");
e.add(M_27_2,"18 cards per player and 6 at the dog; cards are dealt 3 by 3; for 4 players.");
e.add(M_27_30,"If this number is 1:");
e.add(M_27_31,"\\u00A0\\u00A0\\u00A0Sorting on Oudlers is based in the following way from the most winning to the most loosing: Small - Excuse - Trump 21.");
e.add(M_27_32,"\\u00A0\\u00A0\\u00A0(Winning the Small is better than winning the Excuse,...)");
e.add(M_27_33,"If two players have same difference points but have not won any trick, there is dispute.");
e.add(M_27_34,"3 players");
e.add(M_27_35,"\\u00A0\\u00A0Rate is worth from the winner to the looser:");
e.add(M_27_36,"1, 0, -1; if there is no dispute.");
e.add(M_27_37,"1, 1, -2; s'il y a litige.");
e.add(M_27_38,"4 players");
e.add(M_27_3,"24 cards per player and 6 at the dog; cards are dealt 3 by 3; for 3 players.");
e.add(M_27_40,"2, 1, -1, -2; if there is no dispute.");
e.add(M_27_41,"2, 2, -1, -3; if there is dispute between two players exactly.");
e.add(M_27_42,"2, 2, 2, -6; if there is dispute between three players exactly.");
e.add(M_27_43,"5 players");
e.add(M_27_45,"2, 1, 0, -1, -2; if there is no dispute.");
e.add(M_27_46,"2, 2, 0, -1, -3; if there is dispute between two players exactly.");
e.add(M_27_47,"2, 2, 2, 0, -6; if there is dispute between three players exactly.");
e.add(M_27_48,"2, 2, 2, 2, -8; if there is dispute between four players exactly.");
e.add(M_27_49,"6 players");
e.add(M_27_4,"15 cards per player and 3 at the dog; cards are dealt 3 by 3; for 5 players.");
e.add(M_27_51,"3, 2, 1, -1, -2, -3; if there is no dispute.");
e.add(M_27_52,"3, 3, 0, -1, -2, -3; if there is dispute between two players exactly.");
e.add(M_27_53,"2, 2, 2, 0, -2, -4; if there is dispute between three players exactly.");
e.add(M_27_54,"2, 2, 2, 2, 0, -8; if there is dispute between four players exactly.");
e.add(M_27_55,"2, 2, 2, 2, 2, -10; if there is dispute between five players exactly.");
e.add(M_27_56,"Score of a player = 4 x Rate x (25 + Maximal difference points for players rounded to the greater integer + number of points in the dog rounded to the greater integer).");
e.add(M_27_57,"By teams of two players, rates are the following one:");
e.add(M_27_58,"4 players");
e.add(M_27_59,"\\u00A0\\u00A0Rate is worth from the winner team to the looser team:");
e.add(M_27_5,"14 cards per player and 8 at the dog; cards are dealt 2 by 2; for 5 players.");
e.add(M_27_60,"1, -1");
e.add(M_27_61,"6 players");
e.add(M_27_62,"\\u00A0\\u00A0Rate is worth from the winner team to the looser team:");
e.add(M_27_63,"1, 0, -1; if there is no dispute.");
e.add(M_27_64,"1, 1, -2; if there is dispute between two teams exactly.");
e.add(M_27_6,"12 cards per player and 6 at the dog; cards are dealt 2 by 2; for 6 players.");
e.add(M_27_7,"Playing discard can be done after all players have declared \"pass\".");
e.add(M_27_8,"In this case, the dog is hidden.");
e.add(M_27_9,"The goal is to loose the most cards as possible, so loose the Excuse at the last trick is great in this case.");
return e;
}
public static TranslationsFile fr(){
TranslationsFile f=new TranslationsFile(62);
f.add(M_27_0,"Voici ce qui change par rapport au jeu d'équipes (Preneur + éventuel appelé versus Défense):");
f.add(M_27_10,"Il n'y a pas d'annonce de poignée, de misère, ni de primes (Petit au bout, chelem).");
f.add(M_27_11,"Sinon le jeu se déroule de la même manière que le jeu d'équipes (Mêmes règles pour le jeu de la carte.).");
f.add(M_27_12,"\\u00A0Les valeurs limites à ne pas dépasser pour un joueur sont les suivantes:");
f.add(M_27_13,"56 points sans bout.");
f.add(M_27_14,"51 points avec 1 bout dans les plis du joueur.");
f.add(M_27_15,"41 points avec 2 bouts dans les plis du joueur.");
f.add(M_27_16,"36 points avec 3 bouts dans les plis du joueur.");
f.add(M_27_17,"\\u00A0A la fin de la partie, pour désigner le classement des joueurs, on procède de la manière suivante:");
f.add(M_27_18,"Différence d'un joueur = valeur limite pour le joueur - nombre de points marqués dans les plis.");
f.add(M_27_19,"On classe les joueurs par leur différence, la plus grande différence pour le meilleur.");
f.add(M_27_1,"Les distributions possibles sont les suivantes:");
f.add(M_27_20,"Si deux joueurs ont même différence et ont fait des plis:");
f.add(M_27_21,"\\u00A0Alors on les classe par le nombre de bouts dans les plis, il doit être le plus petit possible pour gagner.");
f.add(M_27_22,"\\u00A0Si de plus, le nombre de bouts dans les plis des deux joueurs est identique, alors:");
f.add(M_27_23,"Si ce nombre vaut 0:");
f.add(M_27_24,"\\u00A0\\u00A0\\u00A0On compare les nombres de figures dans les plis des deux joueurs, le nombre de figures dans les plis d'un joueur doit être le plus petit possible pour gagner.");
f.add(M_27_25,"\\u00A0\\u00A0\\u00A0Si de plus, le nombre de figures dans les plis des deux joueurs est identique, alors:");
f.add(M_27_26,"\\u00A0\\u00A0\\u00A0\\u00A0On compare les figures ramassées par les deux joueurs, en commençant par les plus hautes.");
f.add(M_27_27,"\\u00A0\\u00A0\\u00A0\\u00A0On s'arrête dès qu'il y a une différence de hauteur.");
f.add(M_27_28,"\\u00A0\\u00A0\\u00A0\\u00A0Si les figures sont identiques en valeur deux à deux des deux joueurs, on regarde qui a fait le premier pli.");
f.add(M_27_29,"\\u00A0\\u00A0\\u00A0\\u00A0\\u00A0Celui qui a fait son premier pli en dernier passe devant.");
f.add(M_27_2,"18 cartes par joueur et 6 au chien; les cartes sont distribuées 3 par 3; pour 4 joueurs.");
f.add(M_27_30,"Si ce nombre vaut 1:");
f.add(M_27_31,"\\u00A0\\u00A0\\u00A0On classe alors de la manière suivante du plus gagnant au plus perdant: Petit - Excuse - 21.");
f.add(M_27_32,"\\u00A0\\u00A0\\u00A0(Il vaut mieux alors avoir le Petit que l'Excuse,...)");
f.add(M_27_33,"Si deux joueurs ont même différence mais n'ont pas fait des plis, il y a litige.");
f.add(M_27_34,"3 joueurs");
f.add(M_27_35,"\\u00A0\\u00A0Coefficient vaut du gagnant au perdant:");
f.add(M_27_36,"1, 0, -1; s'il n'y a pas de litige.");
f.add(M_27_37,"1, 1, -2; s'il y a litige.");
f.add(M_27_38,"4 joueurs");
f.add(M_27_3,"24 cartes par joueur et 6 au chien; les cartes sont distribuées 3 par 3; pour 3 joueurs.");
f.add(M_27_40,"2, 1, -1, -2; s'il n'y a pas de litige.");
f.add(M_27_41,"2, 2, -1, -3; s'il y a litige entre deux joueurs exactement.");
f.add(M_27_42,"2, 2, 2, -6; s'il y a litige entre trois joueurs exactement.");
f.add(M_27_43,"5 joueurs");
f.add(M_27_45,"2, 1, 0, -1, -2; s'il n'y a pas de litige.");
f.add(M_27_46,"2, 2, 0, -1, -3; s'il y a litige entre deux joueurs exactement.");
f.add(M_27_47,"2, 2, 2, 0, -6; s'il y a litige entre trois joueurs exactement.");
f.add(M_27_48,"2, 2, 2, 2, -8; s'il y a litige entre quatre joueurs exactement.");
f.add(M_27_49,"6 joueurs");
f.add(M_27_4,"15 cartes par joueur et 3 au chien; les cartes sont distribuées 3 par 3; pour 5 joueurs.");
f.add(M_27_51,"3, 2, 1, -1, -2, -3; s'il n'y a pas de litige.");
f.add(M_27_52,"3, 3, 0, -1, -2, -3; s'il y a litige entre deux joueurs exactement.");
f.add(M_27_53,"2, 2, 2, 0, -2, -4; s'il y a litige entre trois joueurs exactement.");
f.add(M_27_54,"2, 2, 2, 2, 0, -8; s'il y a litige entre quatre joueurs exactement.");
f.add(M_27_55,"2, 2, 2, 2, 2, -10; s'il y a litige entre cinq joueurs exactement.");
f.add(M_27_56,"Score d'un joueur = 4 x Coefficient x (25 + Différence max pour les joueurs arrondie à l'entier supérieur + nombre points chien arrondi à l'entier supérieur)");
f.add(M_27_57,"En équipes de deux joueurs, les coefficients sont les suivants:");
f.add(M_27_58,"4 joueurs");
f.add(M_27_59,"\\u00A0\\u00A0Coefficient vaut de l'équipe gagnante à l'équipe perdante:");
f.add(M_27_5,"14 cartes par joueur et 8 au chien; les cartes sont distribuées 2 par 2; pour 5 joueurs.");
f.add(M_27_60,"1, -1");
f.add(M_27_61,"6 joueurs");
f.add(M_27_62,"\\u00A0\\u00A0Coefficient vaut de l'équipe gagnante à l'équipe perdante:");
f.add(M_27_63,"1, 0, -1; s'il n'y a pas de litige.");
f.add(M_27_64,"1, 1, -2; s'il y a litige entre deux équipes exactement.");
f.add(M_27_6,"12 cartes par joueur et 6 au chien; les cartes sont distribuées 2 par 2; pour 6 joueurs.");
f.add(M_27_7,"On peut jouer les misères après que tout le monde a passé.");
f.add(M_27_8,"Dans ce cas, le chien est caché.");
f.add(M_27_9,"Le but est de perdre toutes ses cartes, donc perdre l'Excuse au bout est astucieux, dans ce cas.");
return f;
}
}
