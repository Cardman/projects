package cards.gui;

import cards.consts.Order;
import cards.consts.Suit;
import cards.facade.Nicknames;
import cards.facade.enumerations.GameEnum;
import code.gui.AbsCustComponent;
import code.mock.MockCustComponent;
import code.util.IdList;
import org.junit.Test;

public final class DialogCardsTest extends EquallableCardsGuiUtil {
    @Test
    public void nickname() {
        WindowCards fr_ = frameDialogNicknames("/__/","/_/");
        tryClick(fr_.getPlayers());
        assertTrue(fr_.getDialogNicknames().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogNicknames().getCardDialog().getPane()).getTreeAccessible();
        assertEq(41, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNickname()));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getValidate()));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesBelote().get(0)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesBelote().get(1)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesBelote().get(2)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(0)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(1)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(2)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(3)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(4)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(5)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(6)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(7)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(8)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(9)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(10)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(11)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(12)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(13)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(14)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(15)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(16)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(17)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(18)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(19)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(20)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(21)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(22)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(23)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(24)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(25)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(26)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(27)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(28)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(29)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesPresident().get(30)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesTarot().get(0)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesTarot().get(1)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesTarot().get(2)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesTarot().get(3)));
        assertTrue(tr_.containsObj(fr_.getDialogNicknames().getNicknamesTarot().get(4)));
        fr_.getDialogNicknames().getNickname().setText("__");
        fr_.getDialogNicknames().getNicknamesBelote().get(1).setText("B1");
        fr_.getDialogNicknames().getNicknamesPresident().get(10).setText("P10");
        fr_.getDialogNicknames().getNicknamesTarot().get(3).setText("T3");
        tryClick(fr_.getDialogNicknames().getValidate());
        Nicknames v_ = fr_.getCore().getFacadeCards().getNicknamesCrud().value();
        assertEq("__",v_.getPseudo());
        assertEq("B1",v_.getPseudosBelote().get(1));
        assertEq("P10",v_.getPseudosPresident().get(10));
        assertEq("T3",v_.getPseudosTarot().get(3));
    }
    @Test
    public void launching() {
        WindowCards fr_ = frameDialogSoft("/__/","/_/");
        tryClick(fr_.getLaunching());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogSoft().getCardDialog().getPane()).getTreeAccessible();
        assertEq(3, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getList().self()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getValidate()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getSaveHomeFolder()));
        assertEq(GameEnum.NONE,fr_.getDialogSoft().getList().getCurrent());
        assertTrue(fr_.getDialogSoft().getSaveHomeFolder().isSelected());
        fr_.getDialogSoft().getList().setSelectedItem(GameEnum.TAROT);
        tryToggle(fr_.getDialogSoft().getSaveHomeFolder());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertFalse(fr_.getParametresLogiciel().isSaveHomeFolder());
        assertEq(GameEnum.TAROT,fr_.getParametresLogiciel().getLancement().get(0));
        tryClick(fr_.getLaunching());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        assertEq(GameEnum.TAROT,fr_.getDialogSoft().getList().getCurrent());
        assertFalse(fr_.getDialogSoft().getSaveHomeFolder().isSelected());
        fr_.getDialogSoft().getList().setSelectedItem(GameEnum.PRESIDENT);
        tryToggle(fr_.getDialogSoft().getSaveHomeFolder());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertTrue(fr_.getParametresLogiciel().isSaveHomeFolder());
        assertEq(GameEnum.PRESIDENT,fr_.getParametresLogiciel().getLancement().get(0));
        tryClick(fr_.getLaunching());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        assertEq(GameEnum.PRESIDENT,fr_.getDialogSoft().getList().getCurrent());
        assertTrue(fr_.getDialogSoft().getSaveHomeFolder().isSelected());
        fr_.getDialogSoft().getList().setSelectedItem(GameEnum.BELOTE);
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertTrue(fr_.getParametresLogiciel().isSaveHomeFolder());
        assertEq(GameEnum.BELOTE,fr_.getParametresLogiciel().getLancement().get(0));
        tryClick(fr_.getLaunching());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        assertEq(GameEnum.BELOTE,fr_.getDialogSoft().getList().getCurrent());
        assertTrue(fr_.getDialogSoft().getSaveHomeFolder().isSelected());
        fr_.getDialogSoft().getList().setSelectedItem(GameEnum.NONE);
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertTrue(fr_.getParametresLogiciel().isSaveHomeFolder());
        assertEq(0,fr_.getParametresLogiciel().getLancement().size());
    }
    @Test
    public void timing() {
        WindowCards fr_ = frameDialogSoft("/__/", "/_/");
        tryClick(fr_.baseWindow().getTiming());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogSoft().getCardDialog().getPane()).getTreeAccessible();
        assertEq(5, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getValidate()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getDelayWaitBids()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getDelayWaitCards()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getDelayWaitTricks()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getWaitTrickClick()));
        assertEq(300,fr_.getDialogSoft().getDelayWaitBids().getMinimum());
        assertEq(2000,fr_.getDialogSoft().getDelayWaitBids().getMaximum());
        assertEq(500,fr_.getDialogSoft().getDelayWaitBids().getValue());
        assertEq(300,fr_.getDialogSoft().getDelayWaitCards().getMinimum());
        assertEq(2000,fr_.getDialogSoft().getDelayWaitCards().getMaximum());
        assertEq(500,fr_.getDialogSoft().getDelayWaitCards().getValue());
        assertEq(500,fr_.getDialogSoft().getDelayWaitTricks().getMinimum());
        assertEq(3000,fr_.getDialogSoft().getDelayWaitTricks().getMaximum());
        assertEq(500,fr_.getDialogSoft().getDelayWaitTricks().getValue());
        assertTrue(fr_.getDialogSoft().getWaitTrickClick().isSelected());
        fr_.getDialogSoft().getDelayWaitBids().setValue(600);
        fr_.getDialogSoft().getDelayWaitCards().setValue(700);
        fr_.getDialogSoft().getDelayWaitTricks().setValue(800);
        tryToggle(fr_.getDialogSoft().getWaitTrickClick());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertEq(600,fr_.getParametresLogiciel().getDelayWaitingBids());
        assertEq(700,fr_.getParametresLogiciel().getDelayWaitingCards());
        assertEq(800,fr_.getParametresLogiciel().getDelayWaitingTricks());
        assertFalse(fr_.getParametresLogiciel().isWaitTrickClick());
        tryClick(fr_.baseWindow().getTiming());
        fr_.getDialogSoft().getDelayWaitBids().setValue(600);
        fr_.getDialogSoft().getDelayWaitCards().setValue(700);
        fr_.getDialogSoft().getDelayWaitTricks().setValue(800);
        assertEq(300,fr_.getDialogSoft().getDelayWaitBids().getMinimum());
        assertEq(2000,fr_.getDialogSoft().getDelayWaitBids().getMaximum());
        assertEq(600,fr_.getDialogSoft().getDelayWaitBids().getValue());
        assertEq(300,fr_.getDialogSoft().getDelayWaitCards().getMinimum());
        assertEq(2000,fr_.getDialogSoft().getDelayWaitCards().getMaximum());
        assertEq(700,fr_.getDialogSoft().getDelayWaitCards().getValue());
        assertEq(500,fr_.getDialogSoft().getDelayWaitTricks().getMinimum());
        assertEq(3000,fr_.getDialogSoft().getDelayWaitTricks().getMaximum());
        assertEq(800,fr_.getDialogSoft().getDelayWaitTricks().getValue());
        assertFalse(fr_.getDialogSoft().getWaitTrickClick().isSelected());
        fr_.getDialogSoft().getDelayWaitBids().setValue(900);
        fr_.getDialogSoft().getDelayWaitCards().setValue(1000);
        fr_.getDialogSoft().getDelayWaitTricks().setValue(1100);
        tryToggle(fr_.getDialogSoft().getWaitTrickClick());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertEq(900,fr_.getParametresLogiciel().getDelayWaitingBids());
        assertEq(1000,fr_.getParametresLogiciel().getDelayWaitingCards());
        assertEq(1100,fr_.getParametresLogiciel().getDelayWaitingTricks());
        assertTrue(fr_.getParametresLogiciel().isWaitTrickClick());
    }
    @Test
    public void interact() {
        WindowCards fr_ = frameDialogSoft("/__/", "/_/");
        tryClick(fr_.baseWindow().getInteract());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogSoft().getCardDialog().getPane()).getTreeAccessible();
        assertEq(2, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getValidate()));
        assertTrue(tr_.containsObj(fr_.getDialogSoft().getClickCard()));
        assertTrue(fr_.getDialogSoft().getClickCard().isSelected());
        tryToggle(fr_.getDialogSoft().getClickCard());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertFalse(fr_.getParametresLogiciel().isPlayCardClick());
        tryClick(fr_.baseWindow().getInteract());
        assertTrue(fr_.getDialogSoft().getCardDialog().isVisible());
        assertFalse(fr_.getDialogSoft().getClickCard().isSelected());
        tryToggle(fr_.getDialogSoft().getClickCard());
        tryClick(fr_.getDialogSoft().getValidate());
        assertFalse(fr_.getDialogSoft().getCardDialog().isVisible());
        assertTrue(fr_.getParametresLogiciel().isPlayCardClick());
    }
    @Test
    public void displayBelote() {
        WindowCards fr_ = frameDialogDisplay("/__/", "/_/");
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.BELOTE));
        assertTrue(fr_.getDialogDisplayingBelote().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogDisplayingBelote().getCardDialog().getPane()).getTreeAccessible();
        assertEq(8, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getSortByTrump()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getRemoveButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getValidateButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getCheckClockwise()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getSortByDecreasing()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().self()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().getGlobal()));
        assertTrue(fr_.getDialogDisplayingBelote().getSortByTrump().isSelected());
        assertFalse(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertTrue(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(3,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.HEART);
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(2,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(2,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.CLUB);
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(1,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(3,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(0,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(0,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        tryToggle(fr_.getDialogDisplayingBelote().getSortByTrump());
        tryToggle(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingBelote().getCardDialog().isVisible());
        assertEq(4,fr_.getDisplayingBelote().getDisplaying().getSuits().size());
        assertEq(Suit.SPADE,fr_.getDisplayingBelote().getDisplaying().getSuits().get(0));
        assertEq(Suit.HEART,fr_.getDisplayingBelote().getDisplaying().getSuits().get(1));
        assertEq(Suit.CLUB,fr_.getDisplayingBelote().getDisplaying().getSuits().get(2));
        assertEq(Suit.DIAMOND,fr_.getDisplayingBelote().getDisplaying().getSuits().get(3));
        assertFalse(fr_.getDisplayingBelote().getDisplaying().isDecreasing());
        assertTrue(fr_.getDisplayingBelote().getDisplaying().isClockwise());
        assertEq(Order.SUIT.getOrderSt(),fr_.getDisplayingBelote().getOrderBeforeBids().getOrderSt());
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.BELOTE));
        assertTrue(fr_.getDialogDisplayingBelote().getCardDialog().isVisible());
        assertFalse(fr_.getDialogDisplayingBelote().getSortByTrump().isSelected());
        assertTrue(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertFalse(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getRemoveButton());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getAddButton());
        assertEq(3,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getRemoveButton());
        assertEq(4,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        tryToggle(fr_.getDialogDisplayingBelote().getSortByTrump());
        tryToggle(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingBelote().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingBelote().getCardDialog().isVisible());
        assertEq(4,fr_.getDisplayingBelote().getDisplaying().getSuits().size());
        assertEq(Suit.HEART,fr_.getDisplayingBelote().getDisplaying().getSuits().get(0));
        assertEq(Suit.SPADE,fr_.getDisplayingBelote().getDisplaying().getSuits().get(1));
        assertEq(Suit.DIAMOND,fr_.getDisplayingBelote().getDisplaying().getSuits().get(2));
        assertEq(Suit.CLUB,fr_.getDisplayingBelote().getDisplaying().getSuits().get(3));
        assertTrue(fr_.getDisplayingBelote().getDisplaying().isDecreasing());
        assertFalse(fr_.getDisplayingBelote().getDisplaying().isClockwise());
        assertEq(Order.TRUMP.getOrderSt(),fr_.getDisplayingBelote().getOrderBeforeBids().getOrderSt());
    }
    @Test
    public void displayPresident() {
        WindowCards fr_ = frameDialogDisplay("/__/", "/_/");
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.PRESIDENT));
        assertTrue(fr_.getDialogDisplayingPresident().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogDisplayingPresident().getCardDialog().getPane()).getTreeAccessible();
        assertEq(8, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getNbDealsDemo()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getRemoveButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getValidateButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getCheckClockwise()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getSortByDecreasing()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().self()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().getGlobal()));
        assertEq(1,fr_.getDialogDisplayingPresident().getNbDealsDemo().getValue());
        assertFalse(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertTrue(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(3,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.HEART);
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(2,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(2,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.CLUB);
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(1,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(3,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(0,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(0,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        tryToggle(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingPresident().getCardDialog().isVisible());
        assertEq(4,fr_.getDisplayingPresident().getDisplaying().getSuits().size());
        assertEq(Suit.SPADE,fr_.getDisplayingPresident().getDisplaying().getSuits().get(0));
        assertEq(Suit.HEART,fr_.getDisplayingPresident().getDisplaying().getSuits().get(1));
        assertEq(Suit.CLUB,fr_.getDisplayingPresident().getDisplaying().getSuits().get(2));
        assertEq(Suit.DIAMOND,fr_.getDisplayingPresident().getDisplaying().getSuits().get(3));
        assertFalse(fr_.getDisplayingPresident().getDisplaying().isDecreasing());
        assertTrue(fr_.getDisplayingPresident().getDisplaying().isClockwise());
        assertEq(1,fr_.getDisplayingPresident().getNbDeals());
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.PRESIDENT));
        assertTrue(fr_.getDialogDisplayingPresident().getCardDialog().isVisible());
        assertEq(1,fr_.getDialogDisplayingPresident().getNbDealsDemo().getValue());
        assertTrue(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertFalse(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getRemoveButton());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getAddButton());
        assertEq(3,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getRemoveButton());
        assertEq(4,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        tryToggle(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingPresident().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingPresident().getCardDialog().isVisible());
        assertEq(4,fr_.getDisplayingPresident().getDisplaying().getSuits().size());
        assertEq(Suit.HEART,fr_.getDisplayingPresident().getDisplaying().getSuits().get(0));
        assertEq(Suit.SPADE,fr_.getDisplayingPresident().getDisplaying().getSuits().get(1));
        assertEq(Suit.DIAMOND,fr_.getDisplayingPresident().getDisplaying().getSuits().get(2));
        assertEq(Suit.CLUB,fr_.getDisplayingPresident().getDisplaying().getSuits().get(3));
        assertTrue(fr_.getDisplayingPresident().getDisplaying().isDecreasing());
        assertFalse(fr_.getDisplayingPresident().getDisplaying().isClockwise());
        assertEq(1,fr_.getDisplayingPresident().getNbDeals());
    }
    @Test
    public void displayTarot() {
        WindowCards fr_ = frameDialogDisplay("/__/", "/_/");
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.TAROT));
        assertTrue(fr_.getDialogDisplayingTarot().getCardDialog().isVisible());
        IdList<AbsCustComponent> tr_ = ((MockCustComponent) fr_.getDialogDisplayingTarot().getCardDialog().getPane()).getTreeAccessible();
        assertEq(7, tr_.size());
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getRemoveButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getValidateButton()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getCheckClockwise()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getSortByDecreasing()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().self()));
        assertTrue(tr_.containsObj(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().getGlobal()));
        assertFalse(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertTrue(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(4,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.HEART);
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(3,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(2,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.CLUB);
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(2,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(3,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(1,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(4,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(0,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(4));
        tryToggle(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingTarot().getCardDialog().isVisible());
        assertEq(5,fr_.getDisplayingTarot().getDisplaying().getSuits().size());
        assertEq(Suit.SPADE,fr_.getDisplayingTarot().getDisplaying().getSuits().get(0));
        assertEq(Suit.HEART,fr_.getDisplayingTarot().getDisplaying().getSuits().get(1));
        assertEq(Suit.CLUB,fr_.getDisplayingTarot().getDisplaying().getSuits().get(2));
        assertEq(Suit.DIAMOND,fr_.getDisplayingTarot().getDisplaying().getSuits().get(3));
        assertEq(Suit.TRUMP,fr_.getDisplayingTarot().getDisplaying().getSuits().get(4));
        assertFalse(fr_.getDisplayingTarot().getDisplaying().isDecreasing());
        assertTrue(fr_.getDisplayingTarot().getDisplaying().isClockwise());
        tryClick(fr_.baseWindow().getDisplayingGames().getVal(GameEnum.TAROT));
        assertTrue(fr_.getDialogDisplayingTarot().getCardDialog().isVisible());
        assertTrue(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getCheckClockwise().isSelected());
        assertFalse(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getSortByDecreasing().isSelected());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(1));
        assertEq(Suit.CLUB,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(2));
        assertEq(Suit.DIAMOND,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(3));
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(4));
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getRemoveButton());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.TRUMP,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().setSelectedItem(Suit.SPADE);
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getAddButton());
        assertEq(4,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(1,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        assertEq(Suit.SPADE,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().get(0));
        fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().selectAll();
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getRemoveButton());
        assertEq(5,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getItemCount());
        assertEq(Suit.HEART,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getListeChoix().getCurrent());
        assertEq(0,fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getOrderedSuits().getListe().size());
        tryToggle(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getCheckClockwise());
        tryToggle(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getSortByDecreasing());
        tryClick(fr_.getDialogDisplayingTarot().getDialogDisplayingContent().getValidateButton());
        assertFalse(fr_.getDialogDisplayingTarot().getCardDialog().isVisible());
        assertEq(5,fr_.getDisplayingTarot().getDisplaying().getSuits().size());
        assertEq(Suit.TRUMP,fr_.getDisplayingTarot().getDisplaying().getSuits().get(0));
        assertEq(Suit.HEART,fr_.getDisplayingTarot().getDisplaying().getSuits().get(1));
        assertEq(Suit.SPADE,fr_.getDisplayingTarot().getDisplaying().getSuits().get(2));
        assertEq(Suit.DIAMOND,fr_.getDisplayingTarot().getDisplaying().getSuits().get(3));
        assertEq(Suit.CLUB,fr_.getDisplayingTarot().getDisplaying().getSuits().get(4));
        assertTrue(fr_.getDisplayingTarot().getDisplaying().isDecreasing());
        assertFalse(fr_.getDisplayingTarot().getDisplaying().isClockwise());
    }
    @Test
    public void dialogGeneHelp() {
        WindowCards fr_ = frameDialogGeneHelp("/__/", "/_/");
        tryClick(fr_.getGeneralHelp());
        assertTrue(fr_.getHelpFrames().getCommonFrame().isVisible());
        fr_.getHelpFrames().getArbre().select(null);
        fr_.getHelpFrames().getArbre().select(fr_.getHelpFrames().getArbre().getRoot());
        fr_.getHelpFrames().getArbre().select(fr_.getHelpFrames().getArbre().getRoot().getFirstChild());
        fr_.getHelpFrames().closeWindow();
        assertFalse(fr_.getHelpFrames().getCommonFrame().isVisible());
    }
}
