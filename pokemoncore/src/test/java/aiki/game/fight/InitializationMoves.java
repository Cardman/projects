package aiki.game.fight;
import code.maths.LgInt;
import code.maths.Rate;
import code.maths.montecarlo.MonteCarloEnum;
import code.maths.montecarlo.MonteCarloNumber;
import code.maths.montecarlo.MonteCarloString;
import code.util.CustList;
import code.util.EnumList;
import code.util.EnumMap;
import code.util.EqList;
import code.util.NumberMap;
import code.util.Numbers;
import code.util.ObjectMap;
import code.util.StringList;
import code.util.StringMap;
import aiki.DataBase;
import aiki.fight.enums.Statistic;
import aiki.fight.moves.DamagingMoveData;
import aiki.fight.moves.StatusMoveData;
import aiki.fight.moves.effects.Effect;
import aiki.fight.moves.effects.EffectAccuracy;
import aiki.fight.moves.effects.EffectAlly;
import aiki.fight.moves.effects.EffectBatonPass;
import aiki.fight.moves.effects.EffectClone;
import aiki.fight.moves.effects.EffectCombo;
import aiki.fight.moves.effects.EffectCommonStatistics;
import aiki.fight.moves.effects.EffectCopyFighter;
import aiki.fight.moves.effects.EffectCopyMove;
import aiki.fight.moves.effects.EffectCounterAttack;
import aiki.fight.moves.effects.EffectDamage;
import aiki.fight.moves.effects.EffectDamageRate;
import aiki.fight.moves.effects.EffectEndRound;
import aiki.fight.moves.effects.EffectEndRoundFoe;
import aiki.fight.moves.effects.EffectEndRoundGlobal;
import aiki.fight.moves.effects.EffectEndRoundIndividual;
import aiki.fight.moves.effects.EffectEndRoundPositionRelation;
import aiki.fight.moves.effects.EffectEndRoundPositionTargetRelation;
import aiki.fight.moves.effects.EffectEndRoundSingleRelation;
import aiki.fight.moves.effects.EffectFullHpRate;
import aiki.fight.moves.effects.EffectGlobal;
import aiki.fight.moves.effects.EffectInvoke;
import aiki.fight.moves.effects.EffectMultSufferedMovePower;
import aiki.fight.moves.effects.EffectMultUsedMovePower;
import aiki.fight.moves.effects.EffectOrder;
import aiki.fight.moves.effects.EffectProtectFromTypes;
import aiki.fight.moves.effects.EffectProtection;
import aiki.fight.moves.effects.EffectRemainedHpRate;
import aiki.fight.moves.effects.EffectRestriction;
import aiki.fight.moves.effects.EffectStatistic;
import aiki.fight.moves.effects.EffectStatus;
import aiki.fight.moves.effects.EffectSwitchAbilities;
import aiki.fight.moves.effects.EffectSwitchItems;
import aiki.fight.moves.effects.EffectSwitchMoveTypes;
import aiki.fight.moves.effects.EffectSwitchPointView;
import aiki.fight.moves.effects.EffectSwitchPosition;
import aiki.fight.moves.effects.EffectSwitchTypes;
import aiki.fight.moves.effects.EffectTeam;
import aiki.fight.moves.effects.EffectTeamWhileSendFoe;
import aiki.fight.moves.effects.EffectUnprotectFromTypes;
import aiki.fight.moves.effects.EffectVarPP;
import aiki.fight.moves.effects.EffectWinMoney;
import aiki.fight.moves.effects.enums.ConstValuesType;
import aiki.fight.moves.effects.enums.ExchangeType;
import aiki.fight.moves.effects.enums.MoveChoiceRestrictionType;
import aiki.fight.moves.effects.enums.MoveItemType;
import aiki.fight.moves.effects.enums.PointViewChangementType;
import aiki.fight.moves.enums.SwitchType;
import aiki.fight.moves.enums.TargetChoice;
import aiki.fight.util.CategoryMult;
import aiki.fight.util.StatisticType;
import aiki.fight.util.TypesDuo;
import aiki.map.levels.enums.EnvironmentType;

final class InitializationMoves {

    static final String ONDE_VIDE = "ONDE_VIDE";
    static final String ULTIMAWASHI = "ULTIMAWASHI";
    static final String ULTIMAPOING = "ULTIMAPOING";
    static final String POINGLACE = "POINGLACE";
    static final String FRAPPE_ATLAS = "FRAPPE_ATLAS";
    static final String TREMPETTE = "TREMPETTE";
    static final String VENT_GLACE = "VENT_GLACE";
    static final String DAMOCLES = "DAMOCLES";
    static final String BALL_GLACE = "BALL_GLACE";
    static final String ECHEC = "ECHEC";
    static final String VENT_ARGENTE = "VENT_ARGENTE";
    static final String UPPERCUT = "UPPERCUT";
    static final String TRANCH_HERBE = "TRANCH_HERBE";
    static final String TRANCHE_NUIT = "TRANCHE_NUIT";
    static final String TRANCHE = "TRANCHE";
    static final String TORNADE = "TORNADE";
    static final String TEMPETEVERTE = "TEMPETEVERTE";
    static final String TAILLADE = "TAILLADE";
    static final String RAYON_SIGNAL = "RAYON_SIGNAL";
    static final String RAFALE_PSY = "RAFALE_PSY";
    static final String PLAIE_CROIX = "PLAIE_CROIX";
    static final String OMBRE_PORTEE = "OMBRE_PORTEE";
    static final String MEGAPHONE = "MEGAPHONE";
    static final String FLEAU = "FLEAU";
    static final String DYNAMOPOING = "DYNAMOPOING";
    static final String CHOC_MENTAL = "CHOC_MENTAL";
    static final String BOMBAIMANT = "BOMBAIMANT";
    static final String BALLE_GRAINE = "BALLE_GRAINE";
    static final String VIVE_ATTAQUE = "VIVE_ATTAQUE";
    static final String VIBRAQUA = "VIBRAQUA";
    static final String VAMPIRISME = "VAMPIRISME";
    static final String VAGUE_PSY = "VAGUE_PSY";
    static final String TORGNOLES = "TORGNOLES";
    static final String TIR_DE_BOUE = "TIR_DE_BOUE";
    static final String TELLURIFORCE = "TELLURIFORCE";
    static final String SONICBOOM = "SONICBOOM";
    static final String REVEIL_FORCE = "REVEIL_FORCE";
    static final String RAYON_GEMME = "RAYON_GEMME";
    static final String PUIS_CACHEE = "PUIS_CACHEE";
    static final String PSYKO = "PSYKO";
    static final String POURSUITE = "POURSUITE";
    static final String PLAQUAGE = "PLAQUAGE";
    static final String PISTOLET_A_O = "PISTOLET_A_O";
    static final String PIQURE = "PIQURE";
    static final String LAME_D_AIR = "LAME_D_AIR";
    static final String LAME_DE_ROC = "LAME_DE_ROC";
    static final String JET_PIERRES = "JET_PIERRES";
    static final String GRIFFE_ACIER = "GRIFFE_ACIER";
    static final String GRIFFE = "GRIFFE";
    static final String ELECANON = "ELECANON";
    static final String ECUME = "ECUME";
    static final String CRU_AILE = "CRU_AILE";
    static final String COUP_D_JUS = "COUP_D_JUS";
    static final String COUP_D_BOULE = "COUP_D_BOULE";
    static final String CHARGE = "CHARGE";
    static final String BULLES_D_O = "BULLES_D_O";
    static final String BOURDON = "BOURDON";
    static final String BOUE_BOMBE = "BOUE_BOMBE";
    static final String LOTO = "LOTO";
    static final String CROC_FATAL = "CROC_FATAL";
    static final String CALCINATION = "CALCINATION";
    static final String POUV_ANTIQUE = "POUV_ANTIQUE";
    static final String REBONDIFEU = "REBONDIFEU";
    static final String BASTON = "BASTON";
    static final String SURF = "SURF";
    static final String EBULLITION = "EBULLITION";
    static final String DARD_MORTEL = "DARD_MORTEL";
    static final String RELACHE = "RELACHE";
    static final String PICOTS_BIS = "PICOTS_BIS";
    static final String VIGILANCE = "VIGILANCE";
    static final String TATAMIGAESHI = "TATAMIGAESHI";
    static final String PICORE = "PICORE";
    static final String AIRE_D_HERBE = "AIRE_D_HERBE";
    static final String AIRE_D_EAU = "AIRE_D_EAU";
    static final String AIRE_DE_FEU = "AIRE_DE_FEU";
    static final String VENT_ARRIERE_BIS = "VENT_ARRIERE_BIS";
    static final String ASSISTANCE_BIS = "ASSISTANCE_BIS";
    static final String RISQUE = "RISQUE";
    static final String GUILLOTINE = "GUILLOTINE";
    static final String GLACIATION = "GLACIATION";
    static final String EMPAL_KORNE = "EMPAL_KORNE";
    static final String ABIME = "ABIME";
    static final String JACKPOT = "JACKPOT";
    static final String BAIN_DE_SMOG = "BAIN_DE_SMOG";
    static final String PLONGEE = "PLONGEE";
    static final String BROUHAHA = "BROUHAHA";
    static final String ECHANGE_BIS = "ECHANGE_BIS";
    static final String DETEINTE = "DETEINTE";
    static final String AIDE = "AIDE";
    static final String TOILE_GLUANTE = "TOILE_GLUANTE";
    static final String ANTI_CROISEUR = "ANTI_CROISEUR";
    static final String ANTI_SOL = "ANTI_SOL";
    static final String ANTI_AIR = "ANTI_AIR";
    static final String REBOND = "REBOND";
    static final String COUPE_VENT = "COUPE_VENT";
    static final String ATTRITION = "ATTRITION";
    static final String CHANT = "CHANT";
    static final String CYCLE_V = "CYCLE_V";
    static final String TROU_BIS = "TROU_BIS";
    static final String TROU = "TROU";
    static final String DESTRUCTION = "DESTRUCTION";
    static final String BALL_ORAGE = "BALL_ORAGE";
    static final String BALL_METEO = "BALL_METEO";
    static final String DEMI_TOUR = "DEMI_TOUR";
    static final String PERENITE_BIS = "PERENITE_BIS";
    static final String PERENITE = "PERENITE";
    static final String PSYKOUD_BOUL = "PSYKOUD_BOUL";
    static final String COUD_BOUE = "COUD_BOUE";
    static final String DRACO_RAGE = "DRACO_RAGE";
    static final String BELIER = "BELIER";
    static final String SACRIFICE = "SACRIFICE";
    static final String GIGA_SANGSUE = "GIGA_SANGSUE";
    static final String VAMPIPOING = "VAMPIPOING";
    static final String DEVOREVE = "DEVOREVE";
    static final String EXCUSE = "EXCUSE";
    static final String POISSE = "POISSE";
    static final String ROC_BOULET = "ROC_BOULET";
    static final String PINCE_MASSE = "PINCE_MASSE";
    static final String COUD_KRANE = "COUD_KRANE";
    static final String HYDROCANON = "HYDROCANON";
    static final String BALL_OMBRE = "BALL_OMBRE";
    static final String EBOULEMENT = "EBOULEMENT";
    static final String PRESCIENCE = "PRESCIENCE";
    static final String LANCECROU = "LANCECROU";
    static final String ORAGE_BIS = "ORAGE_BIS";
    static final String PLANNEUR = "PLANNEUR";
    static final String ZONE_MAGIQUE = "ZONE_MAGIQUE";
    static final String ZONE_ETRANGE = "ZONE_ETRANGE";
    static final String ZENITH = "ZENITH";
    static final String VOL_MAGNETIK = "VOL_MAGNETIK";
    static final String VOEU = "VOEU";
    static final String VENT_ARRIERE = "VENT_ARRIERE";
    static final String VANTARDISE = "VANTARDISE";
    static final String TOURNIQUET = "TOURNIQUET";
    static final String TOURMENTE = "TOURMENTE";
    static final String TEMPETESABLE = "TEMPETESABLE";
    static final String STOCKAGE = "STOCKAGE";
    static final String RUNE_PROTECT = "RUNE_PROTECT";
    static final String REPOS = "REPOS";
    static final String REGENERATION = "REGENERATION";
    static final String REGARD_NOIR = "REGARD_NOIR";
    static final String REFLET = "REFLET";
    static final String RECYCLAGE = "RECYCLAGE";
    static final String RAYON_SIMPLE = "RAYON_SIMPLE";
    static final String RAYON_LUNE = "RAYON_LUNE";
    static final String RACINES = "RACINES";
    static final String PROVOC = "PROVOC";
    static final String PROTECTION = "PROTECTION";
    static final String POUDRE_TOXIK = "POUDRE_TOXIK";
    static final String POSSESSIF = "POSSESSIF";
    static final String PERMUCOEUR = "PERMUCOEUR";
    static final String PARTAGE_GARDE = "PARTAGE_GARDE";
    static final String ORAGE = "ORAGE";
    static final String OEIL_MIRACLE = "OEIL_MIRACLE";
    static final String MUR_LUMIERE = "MUR_LUMIERE";
    static final String MUR_DE_FER = "MUR_DE_FER";
    static final String MALEDICTION = "MALEDICTION";
    static final String MALEDICTION_2 = "MALEDICTION_2";
    static final String LEVIKINESIE = "LEVIKINESIE";
    static final String JET_DE_SABLE = "JET_DE_SABLE";
    static final String HATE = "HATE";
    static final String GRINCEMENT = "GRINCEMENT";
    static final String GLAS_DE_SOIN = "GLAS_DE_SOIN";
    static final String ENTRAVE = "ENTRAVE";
    static final String ENCORE = "ENCORE";
    static final String EMBARGO = "EMBARGO";
    static final String ECHANGE = "ECHANGE";
    static final String ECHANGE_PSY = "ECHANGE_PSY";
    static final String DOUX_PARFUM = "DOUX_PARFUM";
    static final String DISTORSION = "DISTORSION";
    static final String DETREMPAGE = "DETREMPAGE";
    static final String DEPIT = "DEPIT";
    static final String DANSE_PLUME = "DANSE_PLUME";
    static final String DANSE_PLUIE = "DANSE_PLUIE";
    static final String DANSE_LUNE = "DANSE_LUNE";
    static final String DANSE_LAMES = "DANSE_LAMES";
    static final String CYCLONE = "CYCLONE";
    static final String CROISSANCE = "CROISSANCE";
    static final String COGNOBIDON = "COGNOBIDON";
    static final String CLONAGE = "CLONAGE";
    static final String CLAIRVOYANCE = "CLAIRVOYANCE";
    static final String CHARME = "CHARME";
    static final String CHARGEUR = "CHARGEUR";
    static final String CAMOUFLAGE = "CAMOUFLAGE";
    static final String BRUME = "BRUME";
    static final String BOUL_ARMURE = "BOUL_ARMURE";
    static final String BOOST = "BOOST";
    static final String BALANCE = "BALANCE";
    static final String BAILLEMENT = "BAILLEMENT";
    static final String ATTERRISSAGE = "ATTERRISSAGE";
    static final String ARMURE = "ARMURE";
    static final String ANTI_BRUME = "ANTI_BRUME";
    static final String ANNEAU_HYDRO = "ANNEAU_HYDRO";
    static final String AIR_VEINARD = "AIR_VEINARD";
    static final String ADAPTATION = "ADAPTATION";
    static final String ACUPRESSION = "ACUPRESSION";
    static final String EFFORT = "EFFORT";
    static final String FULMIFER = "FULMIFER";
    static final String CASSE = "CASSE";
    static final String PIEGE_DE_ROC = "PIEGE_DE_ROC";
    static final String PICS_TOXIK = "PICS_TOXIK";
    static final String PICOTS = "PICOTS";
    static final String DEGOMMAGE = "DEGOMMAGE";
    static final String CONVERSION_2 = "CONVERSION_2";
    static final String BUEE_NOIRE = "BUEE_NOIRE";
    static final String CHAMP_BRUMEUX = "CHAMP_BRUMEUX";
    static final String TOUR_RAPIDE = "TOUR_RAPIDE";
    static final String REQUIEM = "REQUIEM";
    static final String GRAVITE = "GRAVITE";
    static final String TIPHON = "TIPHON";
    static final String SIPHON = "SIPHON";
    static final String TEN_DANSE = "TEN_DANSE";
    static final String INTERVERSION = "INTERVERSION";
    static final String ECHANGE_TYPE = "ECHANGE_TYPE";
    static final String FORCE_TYPE = "FORCE_TYPE";
    static final String MALEFICE_SYLVAIN = "MALEFICE_SYLVAIN";
    static final String COPIE_TYPE = "COPIE_TYPE";
    static final String TENACITE = "TENACITE";
    static final String SAISIE = "SAISIE";
    static final String RUSE = "RUSE";
    static final String RIPOSTE = "RIPOSTE";
    static final String REFLET_MAGIK = "REFLET_MAGIK";
    static final String PREVENTION = "PREVENTION";
    static final String PHOTOCOPIE = "PHOTOCOPIE";
    static final String PASSE_PASSE = "PASSE_PASSE";
    static final String PASSE_CADEAU = "PASSE_CADEAU";
    static final String PAR_ICI = "PAR_ICI";
    static final String MORPHING = "MORPHING";
    static final String MOI_D_ABORD = "MOI_D_ABORD";
    static final String MIMIQUE = "MIMIQUE";
    static final String LUTTE = "LUTTE";
    static final String LARCIN = "LARCIN";
    static final String GRIBOUILLE = "GRIBOUILLE";
    static final String GARDE_LARGE = "GARDE_LARGE";
    static final String FORCE_NATURE = "FORCE_NATURE";
    static final String DETECTION = "DETECTION";
    static final String COUP_D_MAIN = "COUP_D_MAIN";
    static final String COPIE = "COPIE";
    static final String BLABLA_DODO = "BLABLA_DODO";
    static final String ASSISTANCE = "ASSISTANCE";
    static final String APRES_VOUS = "APRES_VOUS";
    static final String A_LA_QUEUE = "A_LA_QUEUE";
    static final String IMITATION = "IMITATION";
    static final String FAUX_CHAGE = "FAUX_CHAGE";
    static final String SEDUCTION = "SEDUCTION";
    static final String ATTRACTION = "ATTRACTION";
    static final String ULTRASON = "ULTRASON";
    static final String ONDE_FOLIE = "ONDE_FOLIE";
    static final String CAGE_ECLAIR = "CAGE_ECLAIR";
    static final String HYPNOSE = "HYPNOSE";
    static final String DODO_PETIT = "DODO_PETIT";
    static final String DODO = "DODO";
    static final String BERCEUSE = "BERCEUSE";
    static final String TONNERRE = "TONNERRE";
    static final String ECLAIR = "ECLAIR";
    static final String SEISME = "SEISME";
    static final String TUNNEL = "TUNNEL";
    static final String CHOC_PSY = "CHOC_PSY";
    static final String IMPLORE = "IMPLORE";
    static final String RONFLEMENT = "RONFLEMENT";
    static final String FONCE = "FONCE";
    static final String VAS_Y = "VAS_Y";
    static final String ROUE_DE_FEU = "ROUE_DE_FEU";
    static final String COMBO_GRIFFE = "COMBO_GRIFFE";
    static final String DOUBLE_PIED = "DOUBLE_PIED";
    static final String ROULADE = "ROULADE";
    static final String ANTI_SOIN = "ANTI_SOIN";
    static final String SOIN = "SOIN";
    static final String LIRE_ESPRIT = "LIRE_ESPRIT";
    static final String PICO_DEFENSE = "PICO_DEFENSE";
    static final String BOUCLIER_ROYAL = "BOUCLIER_ROYAL";
    static final String NUEE_DE_POUDRE = "NUEE_DE_POUDRE";
    static final String DELUGE_GLACIAL = "DELUGE_GLACIAL";
    static final String DELUGE_PLASMIQUE = "DELUGE_PLASMIQUE";
    static final String ELECTRISATION = "ELECTRISATION";
    static final String RELAIS = "RELAIS";
    static final String DON_NATUREL = "DON_NATUREL";
    static final String ABRI = "ABRI";
    static final String METRONOME = "METRONOME";
    static final String PARADOXE = "PARADOXE";
    static final String BATAILLE = "BATAILLE";
    static final String SPECIALE = "SPECIALE";
    static final String PHYSIQUE = "PHYSIQUE";
    static final String ENVOL = "ENVOL";

    private static final String TENEBRE = InitializationDataBase.TENEBRE;

    private static final String SPECTRE = InitializationDataBase.SPECTRE;

    private static final String SOL = InitializationDataBase.SOL;

    private static final String ROCHE = InitializationDataBase.ROCHE;

    private static final String PSY = InitializationDataBase.PSY;

    private static final String PLANTE = InitializationDataBase.PLANTE;

    private static final String NORMAL = InitializationDataBase.NORMAL;

    private static final String INSECTE = InitializationDataBase.INSECTE;

    private static final String GLACE = InitializationDataBase.GLACE;

    private static final String FEU = InitializationDataBase.FEU;

    private static final String ELECTRIQUE = InitializationDataBase.ELECTRIQUE;

    private static final String EAU = InitializationDataBase.EAU;

    private static final String DRAGON = InitializationDataBase.DRAGON;

    private static final String COMBAT = InitializationDataBase.COMBAT;

    private static final String FEE = InitializationDataBase.FEE;

    private static final String ACIER = InitializationDataBase.ACIER;

    private static final String POISON = InitializationDataBase.POISON;

    private static final String VOL = InitializationDataBase.VOL;


    private static final String SIMPLE = InitializationAbilities.SIMPLE;

    private static final String LEVITATION = InitializationAbilities.LEVITATION;

    private static final String ROCHE_LISSE = InitializationItems.ROCHE_LISSE;
    private static final String HERBEBLANCHE = InitializationItems.HERBEBLANCHE;
    private static final String HUILE_MAX = InitializationItems.HUILE_MAX;
    private static final String BALLON = InitializationItems.BALLON;
    private static final String VIEIL_AMBRE = InitializationItems.VIEIL_AMBRE;
    private static final String GRELOT_COQUE = InitializationItems.GRELOT_COQUE;
    private static final String VIVE_GRIFFE = InitializationItems.VIVE_GRIFFE;
    private static final String OEUF_CHANCE = InitializationItems.OEUF_CHANCE;
    private static final String BAIE_JABOCA = InitializationItems.BAIE_JABOCA;
    private static final String ENCENS_PUR = InitializationItems.ENCENS_PUR;
    private static final String ACCRO_GRIFFE = InitializationItems.ACCRO_GRIFFE;
    private static final String GRELOT_ZEN = InitializationItems.GRELOT_ZEN;
    private static final String BAIE_CERIZ = InitializationItems.BAIE_CERIZ;
    private static final String HERBE_POUV = InitializationItems.HERBE_POUV;
    private static final String BAIE_LANSAT = InitializationItems.BAIE_LANSAT;
    private static final String BAIE_PITAYE = InitializationItems.BAIE_PITAYE;
    private static final String BANDEAU = InitializationItems.BANDEAU;
    private static final String ELIXIR = InitializationItems.ELIXIR;
    private static final String ENCENS_VAGUE = InitializationItems.ENCENS_VAGUE;
    private static final String HERBE_MENTAL = InitializationItems.HERBE_MENTAL;
    private static final String BOUE_NOIRE = InitializationItems.BOUE_NOIRE;
    private static final String POUDRE_VITE = InitializationItems.POUDRE_VITE;
    private static final String PIERRE_GLACE = InitializationItems.PIERRE_GLACE;
    private static final String PIERRE_LUNE = InitializationItems.PIERRE_LUNE;
    private static final String PIERRE_EAU = InitializationItems.PIERRE_EAU;
    private static final String ROCHE_ROYALE = InitializationItems.ROCHE_ROYALE;
    private static final String BANDEAU_ETREINTE = InitializationItems.BANDEAU_ETREINTE;
    private static final String CARTE_ROUGE = InitializationItems.CARTE_ROUGE;
    private static final String BATON = InitializationItems.BATON;
    private static final String CEINT_POUV = InitializationItems.CEINT_POUV;
    private static final String BAIE_CHERIM = InitializationItems.BAIE_CHERIM;
    private static final String PIERRALLEGEE = InitializationItems.PIERRALLEGEE;
    private static final String PIECE_RUNE = InitializationItems.PIECE_RUNE;
    private static final String PIQUANTS = InitializationItems.PIQUANTS;
    private static final String REVEIL = InitializationItems.REVEIL;
    private static final String TOTAL_SOIN = InitializationItems.TOTAL_SOIN;
    private static final String PT_DE_MIRE = InitializationItems.PT_DE_MIRE;
    private static final String BAIE_MEPO = InitializationItems.BAIE_MEPO;
    private static final String PP_PLUS = InitializationItems.PP_PLUS;
    private static final String ORBE_FLAMME = InitializationItems.ORBE_FLAMME;
    private static final String BAIE_GOWAV = InitializationItems.BAIE_GOWAV;
    private static final String PV_PLUS = InitializationItems.PV_PLUS;
    private static final String MAX_REPOUSSE = InitializationItems.MAX_REPOUSSE;
    private static final String CEINTURE_PRO = InitializationItems.CEINTURE_PRO;
    private static final String ENCENS_PLEIN = InitializationItems.ENCENS_PLEIN;
    private static final String BAIE_ORAN = InitializationItems.BAIE_ORAN;
    private static final String BAIE_MICLE = InitializationItems.BAIE_MICLE;
    private static final String BRAC_MACHO = InitializationItems.BRAC_MACHO;
    private static final String GRAIN_MIRACL = InitializationItems.GRAIN_MIRACL;
    private static final String PIERRE_STASE = InitializationItems.PIERRE_STASE;
    private static final String MULTI_EXP = InitializationItems.MULTI_EXP;
    private static final String LENTILSCOPE = InitializationItems.LENTILSCOPE;
    private static final String CEINT_FORCE = InitializationItems.CEINT_FORCE;
    private static final String RESTES = InitializationItems.RESTES;
    private static final String POTION = InitializationItems.POTION;
    private static final String EAU_FRAICHE = InitializationItems.EAU_FRAICHE;
    private static final String HYPER_BALL = InitializationItems.HYPER_BALL;
    private static final String SUPER_BALL = InitializationItems.SUPER_BALL;
    private static final String POKE_BALL = InitializationItems.POKE_BALL;
    private static final String MASTER_BALL = InitializationItems.MASTER_BALL;
    private static final String LUXE_BALL = InitializationItems.LUXE_BALL;
    private static final String ORBE_VIE = InitializationItems.ORBE_VIE;
    private static final String PLAQUE_DRACO = InitializationItems.PLAQUE_DRACO;
    private static final String BOUTON_FUITE = InitializationItems.BOUTON_FUITE;
    private static final String POTION_MAX = InitializationItems.POTION_MAX;
    private static final String RAPPEL = InitializationItems.RAPPEL;
    private static final String LUMARGILE = InitializationItems.LUMARGILE;
    private static final String NOEUD_DESTIN = InitializationItems.NOEUD_DESTIN;
    private static final String BAIE_LAMPOU = InitializationItems.BAIE_LAMPOU;
    private static final String CENDRESACREE = InitializationItems.CENDRESACREE;
    private static final String MAX_ELIXIR = InitializationItems.MAX_ELIXIR;
    private static final String BAIE_ENIGMA = InitializationItems.BAIE_ENIGMA;
    private static final String HUILE = InitializationItems.HUILE;
    private static final String GROSSERACINE = InitializationItems.GROSSERACINE;
    private static final String PEPITE = InitializationItems.PEPITE;
    private static final String REPOUSSE = InitializationItems.REPOUSSE;
    private static final String METRONOME_OBJ = InitializationItems.METRONOME_OBJ;


    private static final String SOMMEIL_REPOS = InitializationStatus.SOMMEIL_REPOS;
    private static final String SOMMEIL = InitializationStatus.SOMMEIL;
    private static final String PARALYSIE = InitializationStatus.PARALYSIE;
    private static final String BRULURE = InitializationStatus.BRULURE;
    private static final String ERE_GEL = InitializationStatus.ERE_GEL;
    private static final String GEL = InitializationStatus.GEL;
    private static final String AMOUR = InitializationStatus.AMOUR;
    private static final String VAMPIGRAINE = InitializationStatus.VAMPIGRAINE;
    private static final String POISON_GRAVE = InitializationStatus.POISON_GRAVE;
    private static final String PEUR = InitializationStatus.PEUR;
    private static final String PRISE_DE_TETE = InitializationStatus.PRISE_DE_TETE;
    private static final String CONFUSION = InitializationStatus.CONFUSION;
    private static final String POISON_ST = InitializationStatus.POISON_ST;
    private static final String F = "F";
    private static final String NULL_REF = InitializationDataBase.NULL_REF;

    private InitializationMoves() {
    }
    static void initAllMoves(DataBase _data) {
        MonteCarloNumber law_;
        EffectEndRoundIndividual effectEndRoundIndividual_;
        EffectStatistic effetStatistique_;
        DamagingMoveData ficheAttaqueOff_;
        EffectDamage effetDegats_;
        StatusMoveData ficheAttaqueNonOff_;
        EffectStatus effetStatut_;
        EffectRemainedHpRate effetTauxPVRestants_;
        EffectGlobal effetGlobal_;
        EffectEndRound effetFinTour_;
        EffectSwitchTypes effetChgtType_;
        EffectFullHpRate effetTauxPVMax_;
        EffectDamageRate effetTauxDegats_;
        EffectTeam effetEquipe_;
        EffectSwitchAbilities effetChgtCapac_;
        EffectEndRoundPositionTargetRelation effectEndRoundPositionTargetRelation_;
        EffectMultSufferedMovePower effetMultPuissAttaqueSubie_;
        EffectProtection effetProtection_;
        EffectSwitchPosition effetEchange_;
        EffectUnprotectFromTypes effetAntiImmu_;
        EffectSwitchItems effetChgtObj_;
        EffectTeamWhileSendFoe effetEquipeEntreeAdv_;
        EffectRestriction effetAntiChoix_;
        EffectMultUsedMovePower effetMultPuissAttaqueLancee_;
        EffectEndRoundSingleRelation effectEndRoundSingleRelation_;
        EffectAccuracy effetPrecision_;
        EffectSwitchPointView effetChgtPointVueAtt_;
        EffectInvoke effetInvoque_;
        EffectCopyFighter effetCopieEsp_;
        EffectAlly effetPartenaire_;
        EffectCopyMove effetCopieAtt_;
        EffectOrder effetOrdre_;
        EffectProtectFromTypes effetImmu_;
        EffectWinMoney effetGainArgent_;
        EffectBatonPass effetRelais_;
        EffectVarPP effetVarPP_;
        EffectSwitchMoveTypes effectSwitchMoveTypes_;
        EffectCounterAttack effectCounterAttack_;
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getIgnVarStatUserNeg().add(Statistic.ATTACK);
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BATAILLE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("div(VAR__CIBLE_NIVEAU,VAR__LANCEUR_NIVEAU)");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PARADOXE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_ABRIKO","SOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_ALGA","COMBAT");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_BABIRI","ACIER");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_CERIZ,FEU);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_CHARTI","ROCHE");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_CHERIM,SPECTRE);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_CHOCCO","FEU");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_COBABA","VOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_DURIN","EAU");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_ENIGMA,INSECTE);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_FIGUY","INSECTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_FRAIGO","DRAGON");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_FRAIVE","PLANTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_FRAMBY","ACIER");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_FRISTA","PSY");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_GOWAV,DRAGON);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_GRENA","GLACE");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_JABOCA,DRAGON);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_JOUCA","SOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_KEBIA","POISON");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_KIKA","SOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_KIWAN","TENEBRE");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_LAMPOU,TENEBRE);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_LANSAT,VOL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_LICHII","PLANTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_LINGAN","GLACE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_LONME","SOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_MAGO","SPECTRE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_MANGOU","ROCHE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_MARON","EAU");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_MEPO,COMBAT);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_MICLE,ROCHE);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_MYRTE","ELECTRIQUE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_NANAB","EAU");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_NANANA","PLANTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_NANONE","GLACE");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_ORAN,POISON);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PALMA","ACIER");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PANGA","INSECTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PAPAYA","TENEBRE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PARMA","ELECTRIQUE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PECHA","ELECTRIQUE");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_PITAYE,POISON);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_POCPOC","FEU");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_POMMO","TENEBRE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_POMROZ","COMBAT");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_PRINE","VOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_QUALOT","POISON");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_RABUTA","SPECTRE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_RATAM","PLANTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_REMU","FEU");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_REPOI","ELECTRIQUE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_RESIN","VOL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_SAILAK","COMBAT");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_SEDRA","SPECTRE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_SIAM","INSECTE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_SITRUS","PSY");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_STEKPA","FEU");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_TAMATO","PSY");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_TRONCI","DRAGON");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_WIKI","ROCHE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_WILLIA","GLACE");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_YAPAP","PSY");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAIE_ZALIS","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("APPAT_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BIS_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CHRONO_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("COMPET_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("COPAIN_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FAIBLO_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FILET_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("HONOR_BALL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(HYPER_BALL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LOVE_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LUNE_BALL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(LUXE_BALL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MASSE_BALL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(MASTER_BALL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("NIVEAU_BALL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(POKE_BALL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("RAPIDE_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SCUBA_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SOIN_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SOMBRE_BALL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SPEED_BALL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(SUPER_BALL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_ARMURE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_CRANE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_DOME","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_GRIFFE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_PLAQUE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_PLUME","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FOSSILE_RACINE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("NAUTILE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(VIEIL_AMBRE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MODULE_AQUA","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MODULE_CHOC","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MODULE_CRYO","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MODULE_PYRO","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ACCRO_GRIFFE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("AIMANT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BALLE_FER","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BALLE_FER","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BALLON,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAND_CHOIX","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAND_MUSCLE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BAND_POUV","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BANDEAU,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BANDEAU_ETREINTE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BATON,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BATON,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BEC_POINTU","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BIZAR_ENCENS","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BOUE_NOIRE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BOULE_FUMEE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(BOUTON_FUITE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BRAC_MACHO,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("BULBE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CARAPACE_MUE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(CARTE_ROUGE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CASQUE_BRUT","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(CEINT_FORCE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CEINT_NOIRE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(CEINT_POUV,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(CEINTURE_PRO,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CHAINE_POUV","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CHARBON","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CROC_DRAGON","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CUILLERTORDU","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("EAU_MYSTIQUE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ENCENS_DOUX","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ENCENS_FLEUR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ENCENS_MER","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ENCENS_PLEIN,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(ENCENS_PUR,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ENCENS_ROC","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ENCENS_VAGUE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ENCENS_VEINE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("EVOLUROC","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FERRAILLE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("GLACETERNEL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(GRAIN_MIRACL,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(GRELOT_COQUE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(GRELOT_ZEN,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(GROSSERACINE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(HERBE_MENTAL,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(HERBE_POUV,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(HERBEBLANCHE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LENT_POUV","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LENTIL_ZOOM","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(LENTILSCOPE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LOUPE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(LUMARGILE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LUNET_CHOIX","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LUNET_NOIRES","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LUNET_SAGES","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MASSE_OS","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(METRONOME_OBJ,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MOUCH_CHOIX","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MOUCH_SOIE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(MULTI_EXP,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(NOEUD_DESTIN,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(OEUF_CHANCE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ORBE_ADAMANT","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ORBE_FLAMME,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ORBE_PERLE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ORBE_PLATINE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ORBE_TOXIQUE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ORBE_VIE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIC_VENIN","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIECE_RUNE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRALLEGEE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRALLEGEE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_DURE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRE_STASE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PILE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIQUANTS,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POIDS_POUV","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POIGN_POUV","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POING_CHANCE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POING_CHANCE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POUDRE_ARG","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POUDRE_METAL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(POUDRE_VITE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POUDRECLAIRE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PT_DE_MIRE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("RALENTIQUEUE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(RESTES,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ROCHE_CHAUDE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ROCHE_ELECTRIQUE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ROCHE_GLACE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ROCHE_HUMIDE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ROCHE_LISSE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("RUNE_PURIF","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("RUNE_SORT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SABLE_DOUX","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(VIVE_GRIFFE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("AMELIORATOR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CD_DOUTEUX","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CROC_RASOIR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("DENT_OCEAN","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ECAILLE_DRACO","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ECAILLE_OCEAN","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ELECTRISEUR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("GRIFFE_RASOIR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MAGMARISEUR","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PEAU_METAL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_OVALE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PROTECTEUR","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(ROCHE_ROYALE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("TISSU_FAUCHE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CALCIUM","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("CARBONE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("FER","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PP_MAX","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PP_PLUS,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PROTEINE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PV_PLUS,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ZINC","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("GRANDE_PERLE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("GROS_CHAMPI","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("MORC_ETOILE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("OS_RARE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PEPITE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PERLE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PETIT_CHAMPI","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("POUSS_ETOILE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ANTI_BRULE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ANTI_PARA","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ANTIDOTE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("ANTIGEL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(CENDRESACREE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(EAU_FRAICHE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(ELIXIR,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("GUERISON","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(HUILE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(HUILE_MAX,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("HYPER_POTION","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("JUS_DE_BAIE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LAIT_MEUMEU","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("LIMONADE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(MAX_ELIXIR,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(POTION,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(POTION_MAX,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(RAPPEL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("RAPPEL_MAX","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(REVEIL,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SODA_COOL","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SUPER_POTION","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(TOTAL_SOIN,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_AUBE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRE_EAU,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_ECLAT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_FEU","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_FOUDRE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRE_GLACE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(PIERRE_LUNE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_MOUSSE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_NUIT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_PLANTE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PIERRE_SOLAIRE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_CIEL","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(PLAQUE_DRACO,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_FANTO","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_FER","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_FLAM","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_GLACE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_HERBE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_HYDRO","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_OMBRE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_POING","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_ROC","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_TERRE","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_TOXIC","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUE_VOLT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUESPRIT","NORMAL");
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("PLAQUINSECT","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(MAX_REPOUSSE,NORMAL);
        ficheAttaqueOff_.getTypesByOwnedItem().put(REPOUSSE,NORMAL);
        //validate ficheAttaqueOff_.getTypesByOwnedItem().put("SUPER_REPOUSSE","NORMAL");
        ficheAttaqueOff_.getTypesByOwnedItem().put(NULL_REF,NORMAL);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DON_NATUREL,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetRelais_ = defaultEffetRelais();
        effetRelais_.setTargetChoice(TargetChoice.LANCEUR);
        effetRelais_.setFail("VAR__PAS_PARTENAIRE_ARRIERE");
        ficheAttaqueNonOff_.getEffects().add(effetRelais_);
        _data.completeMembers(RELAIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectSwitchMoveTypes_ = defaultEffectSwitchMoveTypes();
        effectSwitchMoveTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectSwitchMoveTypes_.setFail(NULL_REF);
        effectSwitchMoveTypes_.getReplacingTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getEffects().add(effectSwitchMoveTypes_);
        _data.completeMembers(ELECTRISATION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectSwitchMoveTypes_ = defaultEffectSwitchMoveTypes();
        effectSwitchMoveTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectSwitchMoveTypes_.setFail(NULL_REF);
        effectSwitchMoveTypes_.getChangeTypes().put(NORMAL, ELECTRIQUE);
        ficheAttaqueNonOff_.getEffects().add(effectSwitchMoveTypes_);
        _data.completeMembers(DELUGE_PLASMIQUE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(SOMMEIL,"cardinal(inter({VAR__CIBLE_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        effectSwitchMoveTypes_ = defaultEffectSwitchMoveTypes();
        effectSwitchMoveTypes_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectSwitchMoveTypes_.setFail(NULL_REF);
        effectSwitchMoveTypes_.getChangeTypes().put(NORMAL, GLACE);
        ficheAttaqueNonOff_.getEffects().add(effectSwitchMoveTypes_);
        _data.completeMembers(DELUGE_GLACIAL,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.ACCURACY, (byte) 0);
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effectCounterAttack_ = defaultEffectCounterAttack();
        effectCounterAttack_.setTargetChoice(TargetChoice.LANCEUR);
        effectCounterAttack_.setFail(NULL_REF);
        effectCounterAttack_.setProtectFail("VAR__LANCEUR_CLONE>0");
        effectCounterAttack_.setCounterFail("VAR__CIBLE_CLONE>0");
        effectCounterAttack_.getSufferingDamageTypes().put(FEU, new Rate("1/4"));
        ficheAttaqueNonOff_.getEffects().add(effectCounterAttack_);
        _data.completeMembers(NUEE_DE_POUDRE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.SPECIAL_DEFENSE, (byte) 0);
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effectCounterAttack_ = defaultEffectCounterAttack();
        effectCounterAttack_.setTargetChoice(TargetChoice.LANCEUR);
        effectCounterAttack_.setProtectFail("VAR__LANCEUR_CLONE>0");
        effectCounterAttack_.setFail(NULL_REF);
        effectCounterAttack_.getDroppedStatDirectMove().put(Statistic.ATTACK, (byte) -1);
        ficheAttaqueNonOff_.getEffects().add(effectCounterAttack_);
        _data.completeMembers(BOUCLIER_ROYAL,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK, (byte)0);
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effectCounterAttack_ = defaultEffectCounterAttack();
        effectCounterAttack_.setTargetChoice(TargetChoice.LANCEUR);
        effectCounterAttack_.setProtectFail("VAR__LANCEUR_CLONE>0");
        effectCounterAttack_.setFail(NULL_REF);
        effectCounterAttack_.setSufferingDamageDirectMove(new Rate("1/4"));
        ficheAttaqueNonOff_.getEffects().add(effectCounterAttack_);
        _data.completeMembers(PICO_DEFENSE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetPrecision_ = defaultEffetPrecision();
        effetPrecision_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueNonOff_.getEffects().add(effetPrecision_);
        _data.completeMembers(LIRE_ESPRIT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)13);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.setForbiddingHealing(true);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_.getUnusableMoves().add(SOIN);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(ANTI_SOIN,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("9/10");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueOff_.setRepeatRoundLaw(law_);
        ficheAttaqueOff_.setConstUserChoice(true);
        ficheAttaqueOff_.setRankIncrementNbRound((short)17);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("30*(min(1,VAR__LANCEUR_NB_UTILISATION__BOUL_ARMURE)+1)*puis(2,VAR__NB_TOUR__ROULADE)");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ROULADE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setRankIncrementNbRound((short)17);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.setPower("30");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DOUBLE_PIED,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setRankIncrementNbRound((short)17);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("3"),new LgInt("2"));
        effetDegats_.getHitsLaw().addEvent(new Rate("4"),new LgInt("3"));
        effetDegats_.getHitsLaw().addEvent(new Rate("5"),new LgInt("2"));
        effetDegats_.setPower("30");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(COMBO_GRIFFE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.getDeletedStatus().add(SOMMEIL);
        ficheAttaqueOff_.getDeletedStatus().add(ERE_GEL);
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ROUE_DE_FEU,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VAS_Y,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPriority((byte) 1);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setStoppableMovePrio(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(FONCE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.getRequiredStatus().add(SOMMEIL);
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RONFLEMENT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.TAKE_OBJET);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetChgtObj_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(IMPLORE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.TAKE_OBJET);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetChgtObj_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(CHOC_PSY,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(TUNNEL);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.PSEUDO_GLOBALE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100*(2*caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{TUNNEL})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.PSEUDO_GLOBALE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(SEISME,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)50);
        ficheAttaqueOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ECLAIR,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.PSEUDO_GLOBALE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.PSEUDO_GLOBALE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TONNERRE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("11/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(SOMMEIL,"cardinal(inter({VAR__CIBLE_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(BERCEUSE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("11/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(DODO,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("11/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(SOMMEIL,NULL_REF);
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(DODO_PETIT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("11/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(SOMMEIL,"cardinal(inter({VAR__CIBLE_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(HYPNOSE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("11/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(PARALYSIE,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(PARALYSIE,"cardinal(inter({VAR__CIBLE_STATUTS},{PARALYSIE}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(CAGE_ECLAIR,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(SPECTRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(CONFUSION,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(CONFUSION,"cardinal(inter({VAR__CIBLE_STATUTS},{CONFUSION}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(ONDE_FOLIE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(CONFUSION,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(CONFUSION,"cardinal(inter({VAR__CIBLE_STATUTS},{CONFUSION}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(ULTRASON,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(AMOUR,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(AMOUR,"VAR__EXISTE_GENRE_ASSEXUE|VAR__GENRES_EGAUX|VAR__CIBLE_POSSEDE_STATUT_RELATION__AMOUR");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(ATTRACTION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setFail(F);
        effetStatut_.getLawStatus().addEvent(AMOUR,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(AMOUR,"VAR__EXISTE_GENRE_ASSEXUE|VAR__GENRES_EGAUX|VAR__CIBLE_POSSEDE_STATUT_RELATION__AMOUR");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(SEDUCTION,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setCannotKo(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(FAUX_CHAGE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtCapac_ = defaultEffetChgtCapac();
        effetChgtCapac_.setExchangeAbility(ExchangeType.GIVE_TO_THROWER);
        effetChgtCapac_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtCapac_);
        _data.completeMembers(IMITATION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingMoveButUser(true);
        effetInvoque_.getMovesNotToBeInvoked().add(A_LA_QUEUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ABOIEMENT");
        effetInvoque_.getMovesNotToBeInvoked().add(ABRI);
        effetInvoque_.getMovesNotToBeInvoked().add(APRES_VOUS);
        effetInvoque_.getMovesNotToBeInvoked().add(ASSISTANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BABIL");
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CHANT_ANTIQUE");
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(COUP_D_MAIN);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("COUP_VICTOIRE");
        effetInvoque_.getMovesNotToBeInvoked().add(DETECTION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ECLAIR_GELE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FEU_GLACE");
        effetInvoque_.getMovesNotToBeInvoked().add(FORCE_NATURE);
        effetInvoque_.getMovesNotToBeInvoked().add(GARDE_LARGE);
        effetInvoque_.getMovesNotToBeInvoked().add(GRIBOUILLE);
        effetInvoque_.getMovesNotToBeInvoked().add(IMPLORE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LAME_OINTE");
        effetInvoque_.getMovesNotToBeInvoked().add(LARCIN);
        effetInvoque_.getMovesNotToBeInvoked().add(LUTTE);
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MITRA_POING");
        effetInvoque_.getMovesNotToBeInvoked().add(MOI_D_ABORD);
        effetInvoque_.getMovesNotToBeInvoked().add(MORPHING);
        effetInvoque_.getMovesNotToBeInvoked().add(PAR_ICI);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_CADEAU);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_PASSE);
        effetInvoque_.getMovesNotToBeInvoked().add(PHOTOCOPIE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("POUDREFUREUR");
        effetInvoque_.getMovesNotToBeInvoked().add(PREVENTION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PRLVT_DESTIN");
        effetInvoque_.getMovesNotToBeInvoked().add(REFLET_MAGIK);
        effetInvoque_.getMovesNotToBeInvoked().add(RIPOSTE);
        effetInvoque_.getMovesNotToBeInvoked().add(RONFLEMENT);
        effetInvoque_.getMovesNotToBeInvoked().add(RUSE);
        effetInvoque_.getMovesNotToBeInvoked().add(SAISIE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TECHNO_BUSTER");
        effetInvoque_.getMovesNotToBeInvoked().add(TENACITE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOURMAGIK");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VOILE_MIROIR");
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(METRONOME,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.GIVE_TO_THROWER);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(COPIE_TYPE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(SPECTRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.getAddedTypes().add(SPECTRE);
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.NOTHING);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(MALEFICE_SYLVAIN,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.GIVE_TO_TARGET);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(FORCE_TYPE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.EXCHANGE);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(ECHANGE_TYPE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setPriority((byte)1);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIE);
        effetEchange_ = defaultEffetEchange();
        effetEchange_.setTargetChoice(TargetChoice.ALLIE);
        effetEchange_.setFail("VAR__PAS_PARTENAIRE_TERRAIN");
        ficheAttaqueNonOff_.getEffects().add(effetEchange_);
        _data.completeMembers(INTERVERSION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtCapac_ = defaultEffetChgtCapac();
        effetChgtCapac_.setExchangeAbility(ExchangeType.GIVE_TO_TARGET);
        effetChgtCapac_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtCapac_);
        _data.completeMembers(TEN_DANSE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("17/20");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("35");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effectEndRoundSingleRelation_ = defaultEffectEndRoundSingleRelation();
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(1l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(3l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(4l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(5l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("3"),new LgInt("3"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("5"),new LgInt("1"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("4"),new LgInt("1"));
        effectEndRoundSingleRelation_.setEndRoundRank(33);
        effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effectEndRoundSingleRelation_.setFail("VAR__CIBLE_CLONE>0");
        effectEndRoundSingleRelation_.setFailEndRound("VAR__CIBLE_CLONE>0&div(VAR__CIBLE_PV_RESTANTS,VAR__CIBLE_PV_MAX)>1/2");
        effectEndRoundSingleRelation_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effectEndRoundSingleRelation_);
        _data.completeMembers(SIPHON,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("17/20");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("35");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effectEndRoundSingleRelation_ = defaultEffectEndRoundSingleRelation();
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(1l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(3l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(4l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getRateDamageFunctionOfNbRounds().put(5l,new Rate("1/16"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("3"),new LgInt("3"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("5"),new LgInt("1"));
        effectEndRoundSingleRelation_.getLawForEnablingEffect().addEvent(new Rate("4"),new LgInt("1"));
//        effectEndRoundSingleRelation_.setEndRoundRank(33);
        effectEndRoundSingleRelation_.setEndRoundRank(56);
        effectEndRoundSingleRelation_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effectEndRoundSingleRelation_.setFail(NULL_REF);
        effectEndRoundSingleRelation_.setFailEndRound(NULL_REF);
        effectEndRoundSingleRelation_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effectEndRoundSingleRelation_);
        _data.completeMembers(TIPHON,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("3"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)4);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPuttingKo(true);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_.getCancelEffects().add(GRAVITE);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(REQUIEM,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("3"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)4);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setHealingEndRoundGround(new Rate("1/2"));
        effetGlobal_.setInvokedMoveTerrain(TOUR_RAPIDE);
        effetGlobal_.setChangedTypesTerrain(new StringList(FEE));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(CHAMP_BRUMEUX,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(COMBAT);
        ficheAttaqueNonOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__GARDE_LARGE-VAR__LANCEUR_NB_UTILISATION__PREVENTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtTeamAgainstPrio(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(PREVENTION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtPointVueAtt_ = defaultEffetChgtPointVueAtt();
        effetChgtPointVueAtt_.setPointViewChangement(PointViewChangementType.ATTRACT_DAMAGES_MOVES);
        effetChgtPointVueAtt_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetChgtPointVueAtt_);
        _data.completeMembers(PAR_ICI,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(GLACE);
        ficheAttaqueNonOff_.getBoostedTypes().add(GLACE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.GLOBALE);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getCancelChgtStat().add(Statistic.ATTACK);
        effetStatistique_.getCancelChgtStat().add(Statistic.DEFENSE);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPECIAL_ATTACK);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPECIAL_DEFENSE);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPEED);
        effetStatistique_.getCancelChgtStat().add(Statistic.ACCURACY);
        effetStatistique_.getCancelChgtStat().add(Statistic.EVASINESS);
        effetStatistique_.setTargetChoice(TargetChoice.GLOBALE);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(BUEE_NOIRE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.TYPES_ATTAQUES_RES);
        effetChgtType_.setExchangeTypes(ExchangeType.NOTHING);
        effetChgtType_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtType_.setFail("VAR__TYPES_ATTAQUES_RES_VIDE|caracdroiteouvert(VAR__LANCEUR_DEGATS_RECUS_TOTAL_TOUR,0)=0");
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(CONVERSION_2,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetCopieAtt_ = defaultEffetCopieAtt();
        effetCopieAtt_.setCopyingMoveForUser((short)5);
        //validate effetCopieAtt_.getMovesNotToBeCopied().add("BABIL");
        effetCopieAtt_.getMovesNotToBeCopied().add(COPIE);
        effetCopieAtt_.getMovesNotToBeCopied().add(GRIBOUILLE);
        effetCopieAtt_.getMovesNotToBeCopied().add(LUTTE);
        effetCopieAtt_.getMovesNotToBeCopied().add(METRONOME);
        effetCopieAtt_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetCopieAtt_.setFail("VAR__PAS_ATTAQUES_COPIABLES|VAR__PAS_TOUR_TERRAIN");
        ficheAttaqueNonOff_.getEffects().add(effetCopieAtt_);
        _data.completeMembers(COPIE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getTypesByOwnedItem().put(BAIE_CERIZ,EAU);
        ficheAttaqueOff_.getTypesByOwnedItem().put(NULL_REF,NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.getSecEffectsByItem().put(HERBEBLANCHE,new Numbers<Integer>(8));
        //validate ficheAttaqueOff_.getSecEffectsByItem().put("PIC_VENIN",new Numbers<Integer>(4));
        ficheAttaqueOff_.getSecEffectsByItem().put(ROCHE_ROYALE,new Numbers<Integer>(6));
        ficheAttaqueOff_.getSecEffectsByItem().put(ORBE_FLAMME,new Numbers<Integer>(1));
        //validate ficheAttaqueOff_.getSecEffectsByItem().put("AIMANT",new Numbers<Integer>(3));
        //validate ficheAttaqueOff_.getSecEffectsByItem().put("ORBE_TOXIQUE",new Numbers<Integer>(2));
        ficheAttaqueOff_.getSecEffectsByItem().put(HERBE_MENTAL,new Numbers<Integer>(7));
        //validate ficheAttaqueOff_.getSecEffectsByItem().put("CROC_RASOIR",new Numbers<Integer>(5));
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{BAIE_ABRIKO;BAIE_ALGA;BAIE_BABIRI;BAIE_CERIZ;BAIE_CHARTI;BAIE_CHERIM;BAIE_CHOCCO;BAIE_COBABA;BAIE_DURIN;BAIE_ENIGMA;BAIE_FIGUY;BAIE_FRAIGO;BAIE_FRAIVE;BAIE_FRAMBY;BAIE_FRISTA;BAIE_GOWAV;BAIE_GRENA;BAIE_JABOCA;BAIE_JOUCA;BAIE_KEBIA;BAIE_KIKA;BAIE_KIWAN;BAIE_LAMPOU;BAIE_LANSAT;BAIE_LICHII;BAIE_LINGAN;BAIE_LONME;BAIE_MAGO;BAIE_MANGOU;BAIE_MARON;BAIE_MEPO;BAIE_MICLE;BAIE_MYRTE;BAIE_NANAB;BAIE_NANANA;BAIE_NANONE;BAIE_ORAN;BAIE_PALMA;BAIE_PANGA;BAIE_PAPAYA;BAIE_PARMA;BAIE_PECHA;BAIE_PITAYE;BAIE_POCPOC;BAIE_POMMO;BAIE_POMROZ;BAIE_PRINE;BAIE_QUALOT;BAIE_RABUTA;BAIE_RATAM;BAIE_REMU;BAIE_REPOI;BAIE_RESIN;BAIE_SAILAK;BAIE_SEDRA;BAIE_SIAM;BAIE_SITRUS;BAIE_STEKPA;BAIE_TAMATO;BAIE_TRONCI;BAIE_WIKI;BAIE_WILLIA;BAIE_YAPAP;BAIE_ZALIS;BANDEAU;BIZAR_ENCENS;CARAPACE_MUE;CEINTURE_PRO;ENCENS_DOUX;ENCENS_FLEUR;ENCENS_MER;ENCENS_PLEIN;ENCENS_PUR;ENCENS_ROC;ENCENS_VAGUE;ENCENS_VEINE;GRELOT_ZEN;HERBE_MENTAL;HERBE_POUV;LUNET_SAGES;MOUCH_SOIE;POUDRECLAIRE;POUDRE_METAL;POUDRE_VITE;RALENTIQUEUE;RESTES;ROCHE_LISSE;SABLE_DOUX;TISSU_FAUCHE})),1,1)*10+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{FOSSILE_ARMURE;FOSSILE_CRANE;FOSSILE_DOME;FOSSILE_GRIFFE;FOSSILE_PLAQUE;FOSSILE_PLUME;FOSSILE_RACINE;NAUTILE;OS_RARE;PIERRE_DURE;VIEIL_AMBRE})),1,1)*100+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{BALLE_FER})),1,1)*130+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{AIMANT;AMELIORATOR;ANTIDOTE;ANTIGEL;ANTI_BRULE;ANTI_PARA;BOUE_NOIRE;BOULE_FUMEE;CALCIUM;CARBONE;CENDRESACREE;CHARBON;CROC_RASOIR;CUILLERTORDU;EAU_FRAICHE;EAU_MYSTIQUE;ECAILLE_DRACO;ELIXIR;FER;GLACETERNEL;GRANDE_PERLE;GRELOT_COQUE;GROS_CHAMPI;GUERISON;HUILE;HUILE_MAX;HYPER_POTION;JUS_DE_BAIE;LAIT_MEUMEU;LENTILSCOPE;LIMONADE;LUMARGILE;MAX_ELIXIR;METRONOME_OBJ;MORC_ETOILE;MULTI_EXP;OEUF_CHANCE;ORBE_FLAMME;ORBE_VIE;PEAU_METAL;PEPITE;PERLE;PETIT_CHAMPI;PIECE_RUNE;PIERRE_EAU;PIERRE_FEU;PIERRE_FOUDRE;PIERRE_LUNE;PIERRE_PLANTE;PIERRE_STASE;POTION;POTION_MAX;POUSS_ETOILE;PP_MAX;PP_PLUS;PROTEINE;PV_PLUS;RAPPEL;RAPPEL_MAX;REVEIL;ROCHE_ROYALE;RUNE_PURIF;RUNE_SORT;SODA_COOL;SUPER_POTION;TOTAL_SOIN;ZINC})),1,1)*30+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{POING_CHANCE;ROCHE_GLACE})),1,1)*40+inclusnum({VAR__LANCEUR_OBJET},{})*5+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{APPAT_BALL;BALLON;BANDEAU_ETREINTE;BAND_CHOIX;BAND_MUSCLE;BAND_POUV;BIS_BALL;BOUTON_FUITE;BULBE;CARTE_ROUGE;CASQUE_BRUT;CEINT_FORCE;CEINT_NOIRE;CEINT_POUV;CHAINE_POUV;CHRONO_BALL;COMPET_BALL;COPAIN_BALL;ECAILLE_OCEAN;EVOLUROC;FAIBLO_BALL;FERRAILLE;FILET_BALL;GRAIN_MIRACL;GRIFFE_RASOIR;GROSSERACINE;HERBEBLANCHE;HONOR_BALL;HYPER_BALL;LENTIL_ZOOM;LENT_POUV;LOUPE;LOVE_BALL;LUNET_CHOIX;LUNET_NOIRES;LUNE_BALL;LUXE_BALL;MASSE_BALL;MASTER_BALL;MAX_REPOUSSE;MODULE_AQUA;MODULE_CHOC;MODULE_CRYO;MODULE_PYRO;MOUCH_CHOIX;NIVEAU_BALL;NOEUD_DESTIN;ORBE_PLATINE;ORBE_TOXIQUE;PIERRALLEGEE;PIERRE_GLACE;PIERRE_MOUSSE;PIERRE_SOLAIRE;PILE;PIQUANTS;POIDS_POUV;POIGN_POUV;POKE_BALL;POUDRE_ARG;PT_DE_MIRE;RAPIDE_BALL;REPOUSSE;ROCHE_ELECTRIQUE;SCUBA_BALL;SOIN_BALL;SOMBRE_BALL;SPEED_BALL;SUPER_BALL;SUPER_REPOUSSE})),1,1)*5+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{BEC_POINTU;CD_DOUTEUX})),1,1)*50+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{BATON;BRAC_MACHO;ORBE_ADAMANT;ORBE_PERLE;ROCHE_CHAUDE;ROCHE_HUMIDE})),1,1)*60+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{CROC_DRAGON;PIC_VENIN})),1,1)*70+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{ELECTRISEUR;MAGMARISEUR;PIERRE_AUBE;PIERRE_ECLAT;PIERRE_NUIT;PIERRE_OVALE;PROTECTEUR;VIVE_GRIFFE})),1,1)*80+caracferme(cardinal(inter({VAR__LANCEUR_OBJET},{ACCRO_GRIFFE;DENT_OCEAN;MASSE_OS;PLAQUESPRIT;PLAQUE_CIEL;PLAQUE_DRACO;PLAQUE_FANTO;PLAQUE_FER;PLAQUE_FLAM;PLAQUE_GLACE;PLAQUE_HERBE;PLAQUE_HYDRO;PLAQUE_OMBRE;PLAQUE_POING;PLAQUE_ROC;PLAQUE_TERRE;PLAQUE_TOXIC;PLAQUE_VOLT;PLAQUINSECT})),1,1)*90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(BRULURE,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(BRULURE,"cardinal(inter({VAR__CIBLE_STATUTS},{BRULURE}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{FEU}))>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(POISON_GRAVE,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(POISON_GRAVE,"cardinal(inter({VAR__CIBLE_STATUTS},{POISON_GRAVE;POISON_ST}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{POISON;ACIER}))>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(PARALYSIE,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(PARALYSIE,"cardinal(inter({VAR__CIBLE_STATUTS},{PARALYSIE}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(POISON_ST,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(POISON_ST,"cardinal(inter({VAR__CIBLE_STATUTS},{POISON_GRAVE;POISON_ST}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{POISON;ACIER}))>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(PEUR,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(PEUR,"VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(PEUR,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(PEUR,"VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(AMOUR);
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getCancelLowStat().add(Statistic.ATTACK);
        effetStatistique_.getCancelLowStat().add(Statistic.DEFENSE);
        effetStatistique_.getCancelLowStat().add(Statistic.SPECIAL_ATTACK);
        effetStatistique_.getCancelLowStat().add(Statistic.SPECIAL_DEFENSE);
        effetStatistique_.getCancelLowStat().add(Statistic.SPEED);
        effetStatistique_.getCancelLowStat().add(Statistic.ACCURACY);
        effetStatistique_.getCancelLowStat().add(Statistic.EVASINESS);
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(DEGOMMAGE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSecEffectIfNoDamage(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("20");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getDisableFoeTeamEffects().add(PICOTS);
        effetEquipe_.getDisableFoeTeamEffects().add(PICS_TOXIK);
        effetEquipe_.getDisableFoeTeamEffects().add(PIEGE_DE_ROC);
        //validate effetEquipe_.getDisableFoeTeamEffects().add("VAMPIGRAINE");
        effetEquipe_.getDisableFoeTeamEffects().add(SIPHON);
        effetEquipe_.getDisableFoeTeamEffects().add(CASSE);
        effetEquipe_.getDisableFoeTeamStatus().add(VAMPIGRAINE);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(TOUR_RAPIDE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingTargetChosenMove(true);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PATIENCE");
        effetInvoque_.getMovesNotToBeInvoked().add(FULMIFER);
        effetInvoque_.getMovesNotToBeInvoked().add(EFFORT);
        effetInvoque_.getMovesNotToBeInvoked().add(RIPOSTE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VOILE_MIROIR");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOUT_OU_RIEN");
        effetInvoque_.getMovesNotToBeInvoked().add(ABRI);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ACIDARMURE");
        effetInvoque_.getMovesNotToBeInvoked().add(ACUPRESSION);
        effetInvoque_.getMovesNotToBeInvoked().add(ADAPTATION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AFFUTAGE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AIGUISAGE");
        effetInvoque_.getMovesNotToBeInvoked().add(AIR_VEINARD);
        effetInvoque_.getMovesNotToBeInvoked().add(A_LA_QUEUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ALLEGEMENT");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AMNESIE");
        effetInvoque_.getMovesNotToBeInvoked().add(ANNEAU_HYDRO);
        effetInvoque_.getMovesNotToBeInvoked().add(ANTI_BRUME);
        effetInvoque_.getMovesNotToBeInvoked().add(ANTI_SOIN);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("APPEL_DEFENS");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("APPEL_SOINS");
        effetInvoque_.getMovesNotToBeInvoked().add(APRES_VOUS);
        effetInvoque_.getMovesNotToBeInvoked().add(ARMURE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AROMATHERAPI");
        effetInvoque_.getMovesNotToBeInvoked().add(ASSISTANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ASTUCE_FORCE");
        effetInvoque_.getMovesNotToBeInvoked().add(ATTERRISSAGE);
        effetInvoque_.getMovesNotToBeInvoked().add(ATTRACTION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AURORE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("AVALE");
        effetInvoque_.getMovesNotToBeInvoked().add(BAILLEMENT);
        effetInvoque_.getMovesNotToBeInvoked().add(BALANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BARRAGE");
        effetInvoque_.getMovesNotToBeInvoked().add(BERCEUSE);
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        effetInvoque_.getMovesNotToBeInvoked().add(BOOST);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BOUCLIER");
        effetInvoque_.getMovesNotToBeInvoked().add(BOUL_ARMURE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BROUILLARD");
        effetInvoque_.getMovesNotToBeInvoked().add(BRUME);
        effetInvoque_.getMovesNotToBeInvoked().add(BUEE_NOIRE);
        effetInvoque_.getMovesNotToBeInvoked().add(CAGE_ECLAIR);
        effetInvoque_.getMovesNotToBeInvoked().add(CAMOUFLAGE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CAUCHEMAR");
        effetInvoque_.getMovesNotToBeInvoked().add(CHARGEUR);
        effetInvoque_.getMovesNotToBeInvoked().add(CHARME);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CHATOUILLE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CHGT_VITESSE");
        effetInvoque_.getMovesNotToBeInvoked().add(CLAIRVOYANCE);
        effetInvoque_.getMovesNotToBeInvoked().add(CLONAGE);
        effetInvoque_.getMovesNotToBeInvoked().add(COGNOBIDON);
        effetInvoque_.getMovesNotToBeInvoked().add(CONVERSION_2);
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE_TYPE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("COTOGARDE");
        effetInvoque_.getMovesNotToBeInvoked().add(COUP_D_MAIN);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CROCO_LARME");
        effetInvoque_.getMovesNotToBeInvoked().add(CROISSANCE);
        effetInvoque_.getMovesNotToBeInvoked().add(CYCLONE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("DANSE_DRACO");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("DANSE_FOLLE");
        effetInvoque_.getMovesNotToBeInvoked().add(DANSE_LAMES);
        effetInvoque_.getMovesNotToBeInvoked().add(DANSE_LUNE);
        effetInvoque_.getMovesNotToBeInvoked().add(DANSE_PLUIE);
        effetInvoque_.getMovesNotToBeInvoked().add(DANSE_PLUME);
        effetInvoque_.getMovesNotToBeInvoked().add(DEPIT);
        effetInvoque_.getMovesNotToBeInvoked().add(DETECTION);
        effetInvoque_.getMovesNotToBeInvoked().add(DETREMPAGE);
        effetInvoque_.getMovesNotToBeInvoked().add(DISTORSION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("DOUX_BAISER");
        effetInvoque_.getMovesNotToBeInvoked().add(DOUX_PARFUM);
        effetInvoque_.getMovesNotToBeInvoked().add(ECHANGE_PSY);
        effetInvoque_.getMovesNotToBeInvoked().add(ECHANGE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("E_COQUE");
        effetInvoque_.getMovesNotToBeInvoked().add(EMBARGO);
        effetInvoque_.getMovesNotToBeInvoked().add(ENCORE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ENROULEMENT");
        effetInvoque_.getMovesNotToBeInvoked().add(ENTRAVE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("EXUVIATION");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FEU_FOLLET");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FLAIR");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FLASH");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FLATTERIE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FORCE_COSMIK");
        effetInvoque_.getMovesNotToBeInvoked().add(FORCE_NATURE);
        effetInvoque_.getMovesNotToBeInvoked().add(GARDE_LARGE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GAZ_TOXIK");
        effetInvoque_.getMovesNotToBeInvoked().add(GLAS_DE_SOIN);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GONFLETTE");
        effetInvoque_.getMovesNotToBeInvoked().add(GRAVITE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GRELE");
        effetInvoque_.getMovesNotToBeInvoked().add(GRIBOUILLE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GRIMACE");
        effetInvoque_.getMovesNotToBeInvoked().add(GRINCEMENT);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GROBISOU");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GRONDEMENT");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("GROZ_YEUX");
        effetInvoque_.getMovesNotToBeInvoked().add(HATE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("HURLEMENT");
        effetInvoque_.getMovesNotToBeInvoked().add(HYPNOSE);
        effetInvoque_.getMovesNotToBeInvoked().add(IMITATION);
        effetInvoque_.getMovesNotToBeInvoked().add(INTERVERSION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("INTIMIDATION");
        effetInvoque_.getMovesNotToBeInvoked().add(JET_DE_SABLE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LAIT_A_BOIRE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LANCE_BOUE");
        effetInvoque_.getMovesNotToBeInvoked().add(LEVIKINESIE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LILLIPUT");
        effetInvoque_.getMovesNotToBeInvoked().add(LIRE_ESPRIT);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LUMIQUEUE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MACHINATION");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MALEDICTION_1");
        effetInvoque_.getMovesNotToBeInvoked().add(MALEDICTION_2);
        effetInvoque_.getMovesNotToBeInvoked().add(MALEDICTION);
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MIMI_QUEUE");
        effetInvoque_.getMovesNotToBeInvoked().add(MOI_D_ABORD);
        effetInvoque_.getMovesNotToBeInvoked().add(MORPHING);
        effetInvoque_.getMovesNotToBeInvoked().add(MUR_DE_FER);
        effetInvoque_.getMovesNotToBeInvoked().add(MUR_LUMIERE);
        effetInvoque_.getMovesNotToBeInvoked().add(OEIL_MIRACLE);
        effetInvoque_.getMovesNotToBeInvoked().add(ONDE_FOLIE);
        effetInvoque_.getMovesNotToBeInvoked().add(ORAGE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PAPILLODANSE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PARA_SPORE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PARESSE");
        effetInvoque_.getMovesNotToBeInvoked().add(PAR_ICI);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PARTAGE_FORCE");
        effetInvoque_.getMovesNotToBeInvoked().add(PARTAGE_GARDE);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_CADEAU);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_PASSE);
        effetInvoque_.getMovesNotToBeInvoked().add(PERMUCOEUR);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PERMUFORCE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PERMUGARDE");
        effetInvoque_.getMovesNotToBeInvoked().add(PHOTOCOPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(PICOTS);
        effetInvoque_.getMovesNotToBeInvoked().add(PICS_TOXIK);
        effetInvoque_.getMovesNotToBeInvoked().add(PIEGE_DE_ROC);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PLENITUDE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("POLIROCHE");
        effetInvoque_.getMovesNotToBeInvoked().add(POSSESSIF);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("POUDRE_DODO");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("POUDREFUREUR");
        effetInvoque_.getMovesNotToBeInvoked().add(POUDRE_TOXIK);
        effetInvoque_.getMovesNotToBeInvoked().add(PREVENTION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PRLVT_DESTIN");
        effetInvoque_.getMovesNotToBeInvoked().add(PROTECTION);
        effetInvoque_.getMovesNotToBeInvoked().add(PROVOC);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PUISSANCE");
        effetInvoque_.getMovesNotToBeInvoked().add(RACINES);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("RANCUNE");
        effetInvoque_.getMovesNotToBeInvoked().add(RAYON_LUNE);
        effetInvoque_.getMovesNotToBeInvoked().add(RAYON_SIMPLE);
        effetInvoque_.getMovesNotToBeInvoked().add(RECYCLAGE);
        effetInvoque_.getMovesNotToBeInvoked().add(REFLET_MAGIK);
        effetInvoque_.getMovesNotToBeInvoked().add(REFLET);
        effetInvoque_.getMovesNotToBeInvoked().add(REGARD_NOIR);
        effetInvoque_.getMovesNotToBeInvoked().add(REGENERATION);
        effetInvoque_.getMovesNotToBeInvoked().add(RELAIS);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("RENGORGEMENT");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("REPLI");
        effetInvoque_.getMovesNotToBeInvoked().add(REPOS);
        effetInvoque_.getMovesNotToBeInvoked().add(REQUIEM);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("RUGISSEMENT");
        effetInvoque_.getMovesNotToBeInvoked().add(RUNE_PROTECT);
        effetInvoque_.getMovesNotToBeInvoked().add(SAISIE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SECRETION");
        effetInvoque_.getMovesNotToBeInvoked().add(SEDUCTION);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SIFFL_HERBE");
        effetInvoque_.getMovesNotToBeInvoked().add(SOIN);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SOUCIGRAINE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SOUVENIR");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SPORE_COTON");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SPORE");
        effetInvoque_.getMovesNotToBeInvoked().add(STOCKAGE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("STRIDO_SON");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SUC_DIGESTIF");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("SYNTHESE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TELEKINESIE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TELEPORT");
        effetInvoque_.getMovesNotToBeInvoked().add(TEMPETESABLE);
        effetInvoque_.getMovesNotToBeInvoked().add(TENACITE);
        effetInvoque_.getMovesNotToBeInvoked().add(TEN_DANSE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOILE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOURMAGIK");
        effetInvoque_.getMovesNotToBeInvoked().add(TOURMENTE);
        effetInvoque_.getMovesNotToBeInvoked().add(TOURNIQUET);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOXIK");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TROU_NOIR");
        effetInvoque_.getMovesNotToBeInvoked().add(ULTRASON);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VAMPIGRAINE");
        effetInvoque_.getMovesNotToBeInvoked().add(VANTARDISE);
        effetInvoque_.getMovesNotToBeInvoked().add(VENT_ARRIERE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VERROUILLAGE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VIBRA_SOIN");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VOEU_SOIN");
        effetInvoque_.getMovesNotToBeInvoked().add(VOEU);
        effetInvoque_.getMovesNotToBeInvoked().add(VOL_MAGNETIK);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("YOGA");
        effetInvoque_.getMovesNotToBeInvoked().add(ZENITH);
        effetInvoque_.getMovesNotToBeInvoked().add(ZONE_ETRANGE);
        effetInvoque_.getMovesNotToBeInvoked().add(ZONE_MAGIQUE);
        effetInvoque_.setRateInvokationMove(new Rate("3/2"));
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(MOI_D_ABORD,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setPriority((byte)1);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)26);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPriseEnComptePkLanceur(true);
        effetGlobal_.setWeather(true);
        effetGlobal_.getMovesUsedByTargetedFighters().add(PLANNEUR);
        effetGlobal_.getMultDamagePrepaRound().put(ELECTRIQUE, new Rate("2"));
        effetGlobal_.getImmuneTypes().add(ELECTRIQUE);
        effetGlobal_.setDamageEndRound(new Rate("1/16"));
        effetGlobal_.setHealingEndRound(new Rate("1/16"));
        effetGlobal_.getEfficiencyMoves().put(new TypesDuo(ELECTRIQUE,SOL),new Rate("2"));
        effetGlobal_.getEfficiencyMoves().put(new TypesDuo(SOL,ELECTRIQUE),new Rate("0"));
        effetGlobal_.setMultEffectLovingAlly(new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("COLERE",new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("MANIA",new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("DANSE_FLEUR",new Rate("2"));
        //validate effetGlobal_.getCancelEffects().add("GRELE");
        effetGlobal_.getCancelEffects().add(TEMPETESABLE);
        effetGlobal_.getMultDamageTypesMoves().put(ELECTRIQUE,new Rate("2"));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        effetFinTour_ = defaultEffetFinTourGlobal();
//        effetFinTour_.setEndRoundRank(28);
        effetFinTour_.setEndRoundRank(62);
        effetFinTour_.setTargetChoice(TargetChoice.LANCEUR);
        effetFinTour_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetFinTour_);
        _data.completeMembers(ORAGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setPriority((byte)1);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("4"),new LgInt("1"));
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)26);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPriseEnComptePkLanceur(true);
        effetGlobal_.setWeather(true);
        effetGlobal_.getMovesUsedByTargetedFighters().add(PLANNEUR);
        effetGlobal_.getMultDamagePrepaRound().put(ELECTRIQUE, new Rate("2"));
        effetGlobal_.getImmuneTypes().add(ELECTRIQUE);
        effetGlobal_.setDamageEndRound(new Rate("1/16"));
        effetGlobal_.setHealingEndRound(new Rate("1/16"));
        effetGlobal_.getEfficiencyMoves().put(new TypesDuo(ELECTRIQUE,SOL),new Rate("2"));
        effetGlobal_.getEfficiencyMoves().put(new TypesDuo(SOL,ELECTRIQUE),new Rate("0"));
        effetGlobal_.setMultEffectLovingAlly(new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("COLERE",new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("MANIA",new Rate("2"));
        //validate effetGlobal_.getMultPowerMoves().put("DANSE_FLEUR",new Rate("2"));
        effetGlobal_.getCancelEffects().add(GRAVITE);
        effetGlobal_.getCancelEffects().add(TEMPETESABLE);
        effetGlobal_.getMultDamageTypesMoves().put(ELECTRIQUE,new Rate("2"));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        effetFinTour_ = defaultEffetFinTourGlobal();
//        effetFinTour_.setEndRoundRank(28);
        effetFinTour_.setEndRoundRank(63);
        effetFinTour_.setTargetChoice(TargetChoice.LANCEUR);
        effetFinTour_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetFinTour_);
        _data.completeMembers(ORAGE_BIS,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ACIER);
        ficheAttaqueOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueOff_.setAccuracy("17/20");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(LANCECROU,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effectEndRoundPositionTargetRelation_ = defaultEffectEndRoundPositionTargetRelation();
        effectEndRoundPositionTargetRelation_.setEndRoundRank(2);
        effectEndRoundPositionTargetRelation_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effectEndRoundPositionTargetRelation_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effectEndRoundPositionTargetRelation_);
        _data.completeMembers(PRESCIENCE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("19/20");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.getMoveFctEnv().put(EnvironmentType.DESERT,SEISME);
        //validate effetInvoque_.getMoveFctEnv().put(EnvironmentType.GRASS,"CANON_GRAINE");
        //validate effetInvoque_.getMoveFctEnv().put(EnvironmentType.BUILDING,"TRIPLATTAQUE");
        effetInvoque_.getMoveFctEnv().put(EnvironmentType.ROCK,EBOULEMENT);
        effetInvoque_.getMoveFctEnv().put(EnvironmentType.ROAD,SEISME);
        effetInvoque_.getMoveFctEnv().put(EnvironmentType.NOTHING,BALL_OMBRE);
        //validate effetInvoque_.getMoveFctEnv().put(EnvironmentType.SNOW,"BLIZZARD");
        effetInvoque_.getMoveFctEnv().put(EnvironmentType.WATER,HYDROCANON);
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(FORCE_NATURE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setNbPrepaRound((short)1);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(COUD_KRANE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        //ficheAttaqueNonOff_.setRankIncrementNbRound((short)40);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)42);
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.CATEGORIE_AUTRE);
        effetAntiChoix_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_.setFail("VAR__CIBLE_CLONE>0");
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(PROVOC,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setChRate((byte)1);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PINCE_MASSE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(VOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(VOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("3"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)12);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getForbiddenBoost().add(Statistic.EVASINESS);
        effetEquipe_.getCancelChgtStatFoeTeam().add(Statistic.EVASINESS);
        effetEquipe_.getDisableFoeTeamEffects().add(MUR_LUMIERE);
        effetEquipe_.getDisableFoeTeamEffects().add(PROTECTION);
        effetEquipe_.getDisableFoeTeamEffects().add(RUNE_PROTECT);
        effetEquipe_.getDisableFoeTeamEffects().add(BRUME);
        effetEquipe_.getDisableFoeTeamEffects().add(PICOTS);
        effetEquipe_.getDisableFoeTeamEffects().add(PIEGE_DE_ROC);
        effetEquipe_.getDisableFoeTeamEffects().add(PICS_TOXIK);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(ANTI_BRUME,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setConstUserChoice(true);
        ficheAttaqueOff_.setRechargeRound(true);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("150");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ROC_BOULET,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("9/10");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setStatusFromUser(true);
        effetStatut_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatut_.setFail("cardinal({VAR__CIBLE_STATUTS})>0|cardinal({VAR__LANCEUR_STATUTS})=0");
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(ECHANGE_PSY,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.UNIQUE_IMPORTE);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.SPECIAL_DEFENSE,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.ACCURACY,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.SPECIAL_ATTACK,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.EVASINESS,(byte)2);
        effetStatistique_.getStatisVarRank().put(Statistic.SPEED,(byte)2);
        effetStatistique_.getLawBoost().addEvent(Statistic.SPECIAL_DEFENSE,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.ATTACK,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.DEFENSE,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.ACCURACY,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.SPECIAL_ATTACK,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.EVASINESS,new LgInt("1"));
        effetStatistique_.getLawBoost().addEvent(Statistic.SPEED,new LgInt("1"));
        effetStatistique_.setTargetChoice(TargetChoice.UNIQUE_IMPORTE);
        effetStatistique_.setFail("VAR__AUCUN_BOOST_POSSIBLE");
        //validate:
        effetStatistique_.setEvtRate(new Rate("1"));
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(ACUPRESSION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetOrdre_ = defaultEffetOrdre();
        effetOrdre_.setTargetAttacksLast(true);
        effetOrdre_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetOrdre_.setFail("VAR__NB_COMBATTANTS_TERRAIN<3|VAR__CIBLE_JOUE=1");
        ficheAttaqueNonOff_.getEffects().add(effetOrdre_);
        _data.completeMembers(A_LA_QUEUE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetOrdre_ = defaultEffetOrdre();
        effetOrdre_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetOrdre_.setFail("VAR__NB_COMBATTANTS_TERRAIN<3|VAR__CIBLE_JOUE=1");
        ficheAttaqueNonOff_.getEffects().add(effetOrdre_);
        _data.completeMembers(APRES_VOUS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effectEndRoundIndividual_ = defaultEffectEndRoundIndividual();
        effectEndRoundIndividual_.setHealHp(new Rate("1/16"));
        effectEndRoundIndividual_.setEndRoundRank(39);
        effectEndRoundIndividual_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effectEndRoundIndividual_);
        _data.completeMembers(ANNEAU_HYDRO,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effectEndRoundIndividual_ = defaultEffectEndRoundIndividual();
        effectEndRoundIndividual_.getHealHpByOwnerTypes().put(NULL_REF,new Rate("-1/8"));
        effectEndRoundIndividual_.getHealHpByOwnerTypes().put(POISON,new Rate("1/8"));
//        effectEndRoundIndividual_.setEndRoundRank(31);
        effectEndRoundIndividual_.setEndRoundRank(57);
        effectEndRoundIndividual_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effectEndRoundIndividual_);
        _data.completeMembers(POISSE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetCopieEsp_ = defaultEffetCopieEsp();
        effetCopieEsp_.setPpForMoves((short)5);
        effetCopieEsp_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueNonOff_.getEffects().add(effetCopieEsp_);
        _data.completeMembers(MORPHING,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        //validate effetDegats_.getPowerLaw().addEvent(new Rate("80"),new LgInt("3"));
        //validate effetDegats_.getPowerLaw().addEvent(new Rate("-80"),new LgInt("2"));
        //validate effetDegats_.getPowerLaw().addEvent(new Rate("120"),new LgInt("1"));
        //validate effetDegats_.getPowerLaw().addEvent(new Rate("40"),new LgInt("4"));
        effetDegats_.setPower("60");
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(EXCUSE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("9/10");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(CONFUSION,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(CONFUSION,"cardinal(inter({VAR__CIBLE_STATUTS},{CONFUSION}))>0|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK,(byte)2);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(VANTARDISE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)18);
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setForbidTargetUsingItem(true);
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.NOTHING);
        effetAntiChoix_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(EMBARGO,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_.setFail("cardinal(inter({VAR__CIBLE_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))=0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("1/2"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(DEVOREVE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("1/2"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(VAMPIPOING,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(PLANTE);
        ficheAttaqueOff_.getBoostedTypes().add(PLANTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("1/2"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(GIGA_SANGSUE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)40);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getIgnVarStatUserNeg().add(Statistic.ATTACK);
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("-1/4"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(LUTTE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)30);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getIgnVarStatUserNeg().add(Statistic.ATTACK);
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("-1/4"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(SACRIFICE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)30);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getIgnVarStatUserNeg().add(Statistic.ATTACK);
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxDegats_ = defaultEffectDamageRate();
        effetTauxDegats_.setRateDamage(new Rate("-1/4"));
        effetTauxDegats_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxDegats_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxDegats_);
        _data.completeMembers(BELIER,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)25);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)9);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getProtectAgainstStatus().add(SOMMEIL);
        effetEquipe_.getProtectAgainstStatus().add(PARALYSIE);
        effetEquipe_.getProtectAgainstStatus().add(POISON_ST);
        effetEquipe_.getProtectAgainstStatus().add(POISON_GRAVE);
        effetEquipe_.getProtectAgainstStatus().add(GEL);
        effetEquipe_.getProtectAgainstStatus().add(BRULURE);
        effetEquipe_.getProtectAgainstStatus().add(AMOUR);
        effetEquipe_.getProtectAgainstStatus().add(CONFUSION);
        effetEquipe_.getProtectAgainstStatus().add(PEUR);
        effetEquipe_.getProtectAgainstStatus().add(VAMPIGRAINE);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(RUNE_PROTECT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        //validate effetInvoque_.getInvokingMoveByUserTypes().put("","MALEDICTION_1");
        effetInvoque_.getInvokingMoveByUserTypes().put(NULL_REF,BUEE_NOIRE);
        effetInvoque_.getInvokingMoveByUserTypes().put(SPECTRE,MALEDICTION_2);
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(MALEDICTION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(ACIER);
        ficheAttaqueNonOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setFail(F);
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)2);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(MUR_DE_FER,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setFail(F);
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(ARMURE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(ACIER);
        ficheAttaqueNonOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)2);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(CHARME,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.LANCEUR_ATTAQUES_TYPES);
        effetChgtType_.setExchangeTypes(ExchangeType.NOTHING);
        effetChgtType_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtType_.setFail("inclusnum({VAR__LANCEUR_ATTAQUES_TYPES},{VAR__LANCEUR_TYPES})=1");
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(ADAPTATION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.setKoUserHealSubst(true);
        effetStatut_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(DANSE_LUNE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(DRAGON);
        ficheAttaqueOff_.getBoostedTypes().add(DRAGON);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setConstDamage(true);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DRACO_RAGE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("20");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ACCURACY,(byte)-1);
        effetStatistique_.getLocalFailStatis().put(Statistic.ACCURACY,"VAR__CIBLE_CLONE>0");
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(COUD_BOUE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setPriority((byte)-6);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMovePrio(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.CIBLE);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40*(2*caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{VOL;REBOND;CHUTE_LIBRE})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(CYCLONE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(NULL_REF,new LgInt("4"));
        effetStatut_.getLawStatus().addEvent(PEUR,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(PEUR,"VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        _data.completeMembers(PSYKOUD_BOUL,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIES);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(SOMMEIL);
        effetStatut_.getDeletedStatus().add(BRULURE);
        effetStatut_.setTargetChoice(TargetChoice.ALLIES);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(GLAS_DE_SOIN,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIES);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(SOMMEIL);
        effetStatut_.getDeletedStatus().add(BRULURE);
        effetStatut_.setTargetChoice(TargetChoice.ALLIES);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(PERENITE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIES);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(BRULURE);
        effetStatut_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(BRULURE);
        effetStatut_.setTargetChoice(TargetChoice.ALLIES);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(PERENITE_BIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtCapac_ = defaultEffetChgtCapac();
        effetChgtCapac_.setExchangeAbility(ExchangeType.GIVE_CONST);
        effetChgtCapac_.setConstAbility(SIMPLE);
        effetChgtCapac_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtCapac_);
        _data.completeMembers(RAYON_SIMPLE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)11);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.setProtectAgainstCh(true);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(AIR_VEINARD,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(ACIER);
        ficheAttaqueOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getMultDamageAgainst().put(SPECIALE,new Rate("2"));
        effetDegats_.getMultDamageAgainst().put(PHYSIQUE,new Rate("2"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_.setFail("caracdroiteouvert(VAR__LANCEUR_DEGATS_RECUS_TOTAL_TOUR,0)=0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(FULMIFER,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(ACIER);
        ficheAttaqueOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getMultDamageAgainst().put(PHYSIQUE,new Rate("2"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_.setFail("caracdroiteouvert(VAR__LANCEUR_DEGATS_RECUS_TOTAL_TOUR,0)=0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RIPOSTE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.LANCEUR);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DEMI_TOUR,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.getTypesByWeather().put(NULL_REF,NORMAL);
        //validate ficheAttaqueOff_.getTypesByWeather().put("GRELE","GLACE");
        ficheAttaqueOff_.getTypesByWeather().put(ZENITH,FEU);
        ficheAttaqueOff_.getTypesByWeather().put(DANSE_PLUIE,EAU);
        ficheAttaqueOff_.getTypesByWeather().put(ORAGE,ELECTRIQUE);
        ficheAttaqueOff_.getTypesByWeather().put(TEMPETESABLE,ROCHE);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100*(cardinal({VAR__CLIMATS})+1)");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BALL_METEO,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.getTypesByWeather().put(NULL_REF,NORMAL);
        ficheAttaqueOff_.getTypesByWeather().put(ORAGE,ELECTRIQUE);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100*(cardinal({VAR__CLIMATS})+1)");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BALL_ORAGE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSecEffectIfNoDamage(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("200");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxPVRestants_ = defaultEffectRemainedHpRate();
        effetTauxPVRestants_.setRateHp(new Rate("-1"));
        effetTauxPVRestants_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVRestants_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxPVRestants_);
        _data.completeMembers(DESTRUCTION,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)1);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetCopieAtt_ = defaultEffetCopieAtt();
        effetCopieAtt_.setCopyingMoveForUserDef(true);
        effetCopieAtt_.getMovesNotToBeCopied().add(GRIBOUILLE);
        effetCopieAtt_.getMovesNotToBeCopied().add(LUTTE);
        effetCopieAtt_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetCopieAtt_.setFail("VAR__PAS_ATTAQUES_COPIABLES|VAR__PAS_TOUR_TERRAIN");
        ficheAttaqueNonOff_.getEffects().add(effetCopieAtt_);
        _data.completeMembers(GRIBOUILLE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)10);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getMultDamage().put(new CategoryMult(SPECIALE,(short)1),new Rate("1/2"));
        effetEquipe_.getMultDamage().put(new CategoryMult(SPECIALE,(short)4),new Rate("4/5"));
        effetEquipe_.getMultDamage().put(new CategoryMult(SPECIALE,(short)3),new Rate("3/4"));
        effetEquipe_.getMultDamage().put(new CategoryMult(SPECIALE,(short)2),new Rate("2/3"));
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(MUR_LUMIERE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)10);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getMultDamage().put(new CategoryMult(PHYSIQUE,(short)1),new Rate("1/2"));
        effetEquipe_.getMultDamage().put(new CategoryMult(PHYSIQUE,(short)4),new Rate("4/5"));
        effetEquipe_.getMultDamage().put(new CategoryMult(PHYSIQUE,(short)3),new Rate("3/4"));
        effetEquipe_.getMultDamage().put(new CategoryMult(PHYSIQUE,(short)2),new Rate("2/3"));
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(PROTECTION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)19);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetImmu_ = defaultEffetImmu();
        effetImmu_.getImmuAgainstTypes().add(SOL);
        effetImmu_.setTargetChoice(TargetChoice.LANCEUR);
        effetImmu_.setFail("VAR__LANCEUR_EFFET__RACINES|VAR__NB_TOUR_GLOBAL__GRAVITE>0");
        ficheAttaqueNonOff_.getEffects().add(effetImmu_);
        _data.completeMembers(VOL_MAGNETIK,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        //validate ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)19);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short) 1);
        effetImmu_ = defaultEffetImmu();
        effetImmu_.getImmuAgainstTypes().add(SOL);
        effetImmu_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetImmu_.setFail("VAR__CIBLE_EFFET__RACINES|VAR__IMMU_TYPE_ATT_CIBLE__SOL|VAR__NB_TOUR_GLOBAL__GRAVITE>0|cardinal(inter({VAR__CIBLE_OBJET},{BALLE_FER}))=1");
        ficheAttaqueNonOff_.getEffects().add(effetImmu_);
        effetPrecision_ = defaultEffetPrecision();
        effetPrecision_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetPrecision_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetPrecision_);
        _data.completeMembers(LEVIKINESIE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)19);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetImmu_ = defaultEffetImmu();
        effetImmu_.getImmuAgainstTypes().add(VOL);
        effetImmu_.setTargetChoice(TargetChoice.LANCEUR);
        effetImmu_.setFail("VAR__LANCEUR_EFFET__RACINES|VAR__NB_TOUR_GLOBAL__GRAVITE>0");
        ficheAttaqueNonOff_.getEffects().add(effetImmu_);
        _data.completeMembers(TROU,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)19);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE, (byte) 0);
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetImmu_ = defaultEffetImmu();
        effetImmu_.getImmuAgainstTypes().add(VOL);
        effetImmu_.setTargetChoice(TargetChoice.LANCEUR);
        effetImmu_.setFail("VAR__LANCEUR_EFFET__RACINES|VAR__NB_TOUR_GLOBAL__GRAVITE>0");
        ficheAttaqueNonOff_.getEffects().add(effetImmu_);
        _data.completeMembers(TROU_BIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.DER);
        effetAntiChoix_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(TOURMENTE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.EVASINESS, (byte)0);
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.DER);
        effetAntiChoix_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(CYCLE_V,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("8"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        //ficheAttaqueNonOff_.setRankIncrementNbRound((short)40);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)42);
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.FORCE);
        effetAntiChoix_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_.setFail("VAR__PAS_PP_ATTAQUE_CIBLE|VAR__PAS_UTILIS_ATTAQUE_CIBLE|VAR__CIBLE_EFFET__ENCORE|inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{COPIE;ENCORE;GRIBOUILLE;LUTTE;MIMIQUE;MORPHING})=1");
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(ENCORE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("8"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        //ficheAttaqueNonOff_.setRankIncrementNbRound((short)40);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)42);
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE, (byte) 0);
        effetStatistique_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.FORCE);
        effetAntiChoix_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_.setFail("VAR__PAS_PP_ATTAQUE_CIBLE|VAR__PAS_UTILIS_ATTAQUE_CIBLE|VAR__CIBLE_EFFET__ENCORE|inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{COPIE;ENCORE;GRIBOUILLE;LUTTE;MIMIQUE;MORPHING})=1");
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(CHANT,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.getIgnVarStatTargetPos().add(Statistic.DEFENSE);
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ATTRITION,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setNbPrepaRound((short)1);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setChRate((byte)1);
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(COUPE_VENT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(ENVOL);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(REBOND);
        //validate ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add("CHUTE_LIBRE");
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        //bis effetDegats_.setPower("50*(caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{VOL;REBOND;CHUTE_LIBRE})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))+VAR__FIGHTER_PP__ANTI_AIR*VAR__FIGHTER_PP__SEISME");
        effetDegats_.setPower("50*(caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{VOL;REBOND;CHUTE_LIBRE})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))+VAR__LANCEUR_PP__ANTI_AIR*VAR__LANCEUR_PP__SEISME");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_.setFail("VAR__CIBLE_CLONE>0|VAR__CIBLE_EFFET__ATTERRISSAGE");
//        effetDegats_.setFail("VAR__CIBLE_CLONE>0|VAR__CIBLE_EFFET__ANNEAU_HYDRO");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.getDisableImmuAgainstTypes().add(SOL);
        effetAntiImmu_.getDisableImmuFromMoves().add(LEVIKINESIE);
        effetAntiImmu_.getDisableImmuFromMoves().add(VOL_MAGNETIK);
        effetAntiImmu_.getAttackTargetWithTypes().add(SOL);
        effetAntiImmu_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetAntiImmu_.setFail("VAR__CIBLE_DISPARAIT=1&cardinal(inter({VAR__CIBLE_ATTAQUE_CHOISIE},{VOL;REBOND;CHUTE_LIBRE}))>0");
        effetAntiImmu_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetAntiImmu_);
        _data.completeMembers(ANTI_AIR,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(TUNNEL);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50*(caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{TUNNEL})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_.setFail("VAR__CIBLE_CLONE>0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.getDisableImmuAgainstTypes().add(VOL);
        effetAntiImmu_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetAntiImmu_.setFail("VAR__CIBLE_DISPARAIT=1&cardinal(inter({VAR__CIBLE_ATTAQUE_CHOISIE},{TUNNEL}))>0");
        effetAntiImmu_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetAntiImmu_);
        _data.completeMembers(ANTI_SOL,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("4"),new LgInt("1"));
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueOff_.setRepeatRoundLaw(law_);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(TUNNEL);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50*(caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{TUNNEL})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_.setFail("VAR__CIBLE_CLONE>0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetAntiImmu_.setFail("VAR__CIBLE_DISPARAIT=1&cardinal(inter({VAR__CIBLE_ATTAQUE_CHOISIE},{TUNNEL}))>0");
        effetAntiImmu_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetAntiImmu_);
        effectEndRoundIndividual_ = defaultEffectEndRoundIndividual();
        effectEndRoundIndividual_.setHealHp(new Rate("1/8"));
        //effectEndRoundIndividual_.setEndRoundRank(39);
        effectEndRoundIndividual_.setEndRoundRank(40);
        effectEndRoundIndividual_.setTargetChoice(TargetChoice.LANCEUR);
        //validate ficheAttaqueNonOff_.getEffects().add(effectEndRoundIndividual_);
        ficheAttaqueOff_.getEffects().add(effectEndRoundIndividual_);
        ficheAttaqueOff_.setRankIncrementNbRound((short) 1);
        _data.completeMembers(ANTI_CROISEUR,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(PLANTE);
        ficheAttaqueNonOff_.getBoostedTypes().add(PLANTE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effectEndRoundIndividual_ = defaultEffectEndRoundIndividual();
        effectEndRoundIndividual_.setHealHp(new Rate("1/8"));
        //effectEndRoundIndividual_.setEndRoundRank(39);
        effectEndRoundIndividual_.setEndRoundRank(41);
        effectEndRoundIndividual_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effectEndRoundIndividual_);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.getAttackTargetWithTypes().add(SOL);
        effetAntiImmu_.setTargetChoice(TargetChoice.LANCEUR);
        effetAntiImmu_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetAntiImmu_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short) 1);
        _data.completeMembers(RACINES,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getSwapBoostStatis().add(Statistic.ATTACK);
        effetStatistique_.getSwapBoostStatis().add(Statistic.SPECIAL_ATTACK);
        effetStatistique_.getSwapBoostStatis().add(Statistic.DEFENSE);
        effetStatistique_.getSwapBoostStatis().add(Statistic.SPECIAL_DEFENSE);
        effetStatistique_.getSwapBoostStatis().add(Statistic.ACCURACY);
        effetStatistique_.getLocalFailSwapBoostStatis().put(Statistic.SPECIAL_DEFENSE,"VAR__LANCEUR_CLONE>0&VAR__LANCEUR_BOOST__SPECIAL_DEFENSE>=VAR__CIBLE_BOOST__SPECIAL_DEFENSE|VAR__CIBLE_CLONE>0&VAR__CIBLE_BOOST__SPECIAL_DEFENSE>=VAR__LANCEUR_BOOST__SPECIAL_DEFENSE");
        effetStatistique_.getLocalFailSwapBoostStatis().put(Statistic.ATTACK,"VAR__LANCEUR_CLONE>0&VAR__LANCEUR_BOOST__ATTACK>=VAR__CIBLE_BOOST__ATTACK|VAR__CIBLE_CLONE>0&VAR__CIBLE_BOOST__ATTACK>=VAR__LANCEUR_BOOST__ATTACK");
        effetStatistique_.getLocalFailSwapBoostStatis().put(Statistic.DEFENSE,"VAR__LANCEUR_CLONE>0&VAR__LANCEUR_BOOST__DEFENSE>=VAR__CIBLE_BOOST__DEFENSE|VAR__CIBLE_CLONE>0&VAR__CIBLE_BOOST__DEFENSE>=VAR__LANCEUR_BOOST__DEFENSE");
        effetStatistique_.getLocalFailSwapBoostStatis().put(Statistic.SPECIAL_ATTACK,"VAR__LANCEUR_CLONE>0&VAR__LANCEUR_BOOST__SPECIAL_ATTACK>=VAR__CIBLE_BOOST__SPECIAL_ATTACK|VAR__CIBLE_CLONE>0&VAR__CIBLE_BOOST__SPECIAL_ATTACK>=VAR__LANCEUR_BOOST__SPECIAL_ATTACK");
        effetStatistique_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(PERMUCOEUR,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(VOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(VOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK,(byte)-2);
        effetStatistique_.getLocalFailStatis().put(Statistic.ATTACK,"VAR__CIBLE_CLONE>0");
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(DANSE_PLUME,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setPriority((byte)4);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtPointVueAtt_ = defaultEffetChgtPointVueAtt();
        effetChgtPointVueAtt_.setPointViewChangement(PointViewChangementType.MIRROR_AGAINST_THROWER);
        effetChgtPointVueAtt_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetChgtPointVueAtt_);
        _data.completeMembers(REFLET_MAGIK,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(SPECTRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetVarPP_ = defaultEffectVarPp();
        effetVarPP_.setDeletePp((short)4);
        effetVarPP_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetVarPP_.setFail("VAR__PAS_PP_ATTAQUE_CIBLE|VAR__PAS_UTILIS_ATTAQUE_CIBLE");
        ficheAttaqueNonOff_.getEffects().add(effetVarPP_);
        _data.completeMembers(DEPIT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(POISON);
        ficheAttaqueNonOff_.getBoostedTypes().add(POISON);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_ = defaultEffetEquipeEntreeAdv();
        effetEquipeEntreeAdv_.getStatusByNbUses().put((short)1,POISON_ST);
        effetEquipeEntreeAdv_.getStatusByNbUses().put((short)2,POISON_GRAVE);
        effetEquipeEntreeAdv_.getDeletedByFoeTypes().add(POISON);
        effetEquipeEntreeAdv_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_.setFailSending("VAR__IMMU_TYPE_ATT_COMBATTANT_ENTRANT__SOL|cardinal(inter({VAR__COMBATTANT_ENTRANT_TYPES},{VOL;POISON;ACIER}))>0|VAR__COMBATTANT_ENTRANT_CLONE>0");
        ficheAttaqueNonOff_.getEffects().add(effetEquipeEntreeAdv_);
        _data.completeMembers(PICS_TOXIK,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(POISON);
        ficheAttaqueNonOff_.getBoostedTypes().add(POISON);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_ = defaultEffetEquipeEntreeAdv();
        effetEquipeEntreeAdv_.getStatistics().put(Statistic.SPEED, (byte) -1);
        effetEquipeEntreeAdv_.getStatusByNbUses().put((short)1,POISON_ST);
        effetEquipeEntreeAdv_.getStatusByNbUses().put((short)2,POISON_GRAVE);
        effetEquipeEntreeAdv_.getDeletedByFoeTypes().add(POISON);
        effetEquipeEntreeAdv_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_.setFailSending("VAR__IMMU_TYPE_ATT_COMBATTANT_ENTRANT__SOL|cardinal(inter({VAR__COMBATTANT_ENTRANT_TYPES},{VOL;POISON;ACIER}))>0|VAR__COMBATTANT_ENTRANT_CLONE>0");
        ficheAttaqueNonOff_.getEffects().add(effetEquipeEntreeAdv_);
        _data.completeMembers(TOILE_GLUANTE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(SOMMEIL,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(SOMMEIL,"VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(BAILLEMENT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setPriority((byte)5);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIE);
        effetPartenaire_ = defaultEffetPartenaire();
        effetPartenaire_.setMultAllyDamage(new Rate("3/2"));
        effetPartenaire_.setTargetChoice(TargetChoice.ALLIE);
        effetPartenaire_.setFail("VAR__PAS_PARTENAIRE_TERRAIN");
        ficheAttaqueNonOff_.getEffects().add(effetPartenaire_);
        _data.completeMembers(COUP_D_MAIN,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setPriority((byte)5);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIE);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getStatisVarRank().put(Statistic.ACCURACY, (byte) 0);
        //validate effetStatistique_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatistique_.setTargetChoice(TargetChoice.ALLIE);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetPartenaire_ = defaultEffetPartenaire();
        effetPartenaire_.setTargetChoice(TargetChoice.ALLIE);
        effetPartenaire_.setFail("VAR__PAS_PARTENAIRE_TERRAIN");
        ficheAttaqueNonOff_.getEffects().add(effetPartenaire_);
        _data.completeMembers(AIDE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.GIVE_CONST);
        effetChgtType_.getConstTypes().add(EAU);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(DETREMPAGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.NOTHING);
        effetChgtType_.getConstTypes().add(EAU);
        effetChgtType_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(DETEINTE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetMultPuissAttaqueSubie_ = defaultEffetMultPuissAttaqueSubie();
        effetMultPuissAttaqueSubie_.getMultMovePowerFctType().put(FEU,new Rate("1/2"));
        effetMultPuissAttaqueSubie_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetMultPuissAttaqueSubie_);
        _data.completeMembers(TOURNIQUET,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtCapac_ = defaultEffetChgtCapac();
        effetChgtCapac_.setExchangeAbility(ExchangeType.EXCHANGE);
        effetChgtCapac_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtCapac_);
        _data.completeMembers(ECHANGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtCapac_ = defaultEffetChgtCapac();
        effetChgtCapac_.setExchangeAbility(ExchangeType.NOTHING);
        effetChgtCapac_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtCapac_);
        _data.completeMembers(ECHANGE_BIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getRequiredStatus().add(SOMMEIL);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingUserMoveWhileSleep(true);
        effetInvoque_.getMovesNotToBeInvoked().add(ASSISTANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BABIL");
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        effetInvoque_.getMovesNotToBeInvoked().add(BROUHAHA);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CHUTE_LIBRE");
        effetInvoque_.getMovesNotToBeInvoked().add(COUD_KRANE);
        effetInvoque_.getMovesNotToBeInvoked().add(COUPE_VENT);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("ECLAIR_GELE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("FEU_GLACE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("INCENDIE");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("LANCE_SOLEIL");
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MITRA_POING");
        effetInvoque_.getMovesNotToBeInvoked().add(MOI_D_ABORD);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PATIENCE");
        effetInvoque_.getMovesNotToBeInvoked().add(PHOTOCOPIE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PIQUE");
        effetInvoque_.getMovesNotToBeInvoked().add(PLONGEE);
        effetInvoque_.getMovesNotToBeInvoked().add(REBOND);
        effetInvoque_.getMovesNotToBeInvoked().add(REPOS);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("REVENANT");
        effetInvoque_.getMovesNotToBeInvoked().add(TUNNEL);
        effetInvoque_.getMovesNotToBeInvoked().add(ENVOL);
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC|cardinal(inter({VAR__LANCEUR_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))=0");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(BLABLA_DODO,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(POISON);
        ficheAttaqueOff_.getBoostedTypes().add(POISON);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_.setFail("VAR__CIBLE_CLONE>0");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getCancelChgtStat().add(Statistic.ATTACK);
        effetStatistique_.getCancelChgtStat().add(Statistic.DEFENSE);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPECIAL_ATTACK);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPECIAL_DEFENSE);
        effetStatistique_.getCancelChgtStat().add(Statistic.SPEED);
        effetStatistique_.getCancelChgtStat().add(Statistic.ACCURACY);
        effetStatistique_.getCancelChgtStat().add(Statistic.EVASINESS);
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(BAIN_DE_SMOG,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setNbPrepaRound((short)1);
        ficheAttaqueOff_.setDisappearBeforeUse(true);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("120");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PLANNEUR,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setNbPrepaRound((short)1);
        ficheAttaqueOff_.setDisappearBeforeUse(true);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TUNNEL,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("7"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)21);
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.FORBIDDEN);
        effetAntiChoix_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetAntiChoix_.setFail("VAR__PAS_PP_ATTAQUE_CIBLE|VAR__PAS_UTILIS_ATTAQUE_CIBLE|VAR__CIBLE_EFFET__ENTRAVE");
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(ENTRAVE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetGainArgent_ = defaultEffetGainArgent();
        effetGainArgent_.setWinningRateBySumTargetUser(new Rate("40"));
        effetGainArgent_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetGainArgent_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetGainArgent_);
        _data.completeMembers(JACKPOT,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU+VAR__EQUIPE_NB_UTILISATION__CASSE,0):100");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetTauxPVRestants_ = defaultEffectRemainedHpRate();
        effetTauxPVRestants_.setRateHp(new Rate("1/2"));
        effetTauxPVRestants_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVRestants_);
        effetTauxPVRestants_ = defaultEffectRemainedHpRate();
        effetTauxPVRestants_.setRateHp(new Rate("-1/2"));
        effetTauxPVRestants_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVRestants_);
        _data.completeMembers(CASSE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU,0):100");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetTauxPVRestants_ = defaultEffectRemainedHpRate();
        effetTauxPVRestants_.setRateHp(new Rate("-1"));
        effetTauxPVRestants_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVRestants_);
        _data.completeMembers(ABIME,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU,0):100");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
//        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("3"),new LgInt("2"));
        effetDegats_.setPower("1000");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(EMPAL_KORNE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU,0):100");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
//        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("3"),new LgInt("1"));
        effetDegats_.setPower("1000");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(GLACIATION,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU,0):100");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
//        effetDegats_.getHitsLaw().addEvent(new Rate(3/2),new LgInt(1));//case to treat for artificial intelligence
//        effetDegats_.getHitsLaw().addEvent(new Rate(2),new LgInt(1));
        //case to treat for artificial intelligence:
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("3"),new LgInt("1"));
        effetDegats_.setPower("1000");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(GUILLOTINE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)5);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("max(VAR__LANCEUR_NIVEAU-VAR__CIBLE_NIVEAU,0):100");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
//        effetDegats_.getHitsLaw().addEvent(new Rate("3/2"),new LgInt("1"));//case to treat for artificial intelligence
//        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        //case to treat for artificial intelligence:
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("3"),new LgInt("1"));
        effetDegats_.setPower("1000");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RISQUE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(VOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(VOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingSufferedMove(true);
        effetInvoque_.getMovesNotToBeInvoked().add(ACUPRESSION);
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        effetInvoque_.getMovesNotToBeInvoked().add(BOOST);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("CARNAREKET");
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(ENCORE);
        effetInvoque_.getMovesNotToBeInvoked().add(GRIBOUILLE);
        effetInvoque_.getMovesNotToBeInvoked().add(IMITATION);
        effetInvoque_.getMovesNotToBeInvoked().add(LUTTE);
        effetInvoque_.getMovesNotToBeInvoked().add(MALEDICTION_2);
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        effetInvoque_.getMovesNotToBeInvoked().add(MORPHING);
        effetInvoque_.getMovesNotToBeInvoked().add(POSSESSIF);
        effetInvoque_.getMovesNotToBeInvoked().add(PRESCIENCE);
        effetInvoque_.getMovesNotToBeInvoked().add(REQUIEM);
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(MIMIQUE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.SPECIAL_DEFENSE,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetMultPuissAttaqueLancee_ = defaultEffetMultPuissAttaqueLancee();
        effetMultPuissAttaqueLancee_.getMultMovePowerFctType().put(ELECTRIQUE,new Rate("2"));
        effetMultPuissAttaqueLancee_.setTargetChoice(TargetChoice.LANCEUR);
        effetMultPuissAttaqueLancee_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetMultPuissAttaqueLancee_);
        _data.completeMembers(CHARGEUR,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(FEU);
        ficheAttaqueNonOff_.getBoostedTypes().add(FEU);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)26);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPriseEnComptePkLanceur(true);
        effetGlobal_.setWeather(true);
        effetGlobal_.getPreventStatus().add(GEL);
        effetGlobal_.getCancelEffects().add(TEMPETESABLE);
        effetGlobal_.getMultDamageTypesMoves().put(EAU,new Rate("1/2"));
        effetGlobal_.getMultDamageTypesMoves().put(FEU,new Rate("3/2"));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        effetFinTour_ = defaultEffetFinTourGlobal();
//        effetFinTour_.setEndRoundRank(28);
        effetFinTour_.setEndRoundRank(60);
        effetFinTour_.setTargetChoice(TargetChoice.LANCEUR);
        effetFinTour_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetFinTour_);
        _data.completeMembers(ZENITH,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(EAU);
        ficheAttaqueNonOff_.getBoostedTypes().add(EAU);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)26);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPriseEnComptePkLanceur(true);
        effetGlobal_.setWeather(true);
        effetGlobal_.getCancelEffects().add(TEMPETESABLE);
        effetGlobal_.getMultDamageTypesMoves().put(FEU,new Rate("1/2"));
        effetGlobal_.getMultDamageTypesMoves().put(EAU,new Rate("3/2"));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        effetFinTour_ = defaultEffetFinTourGlobal();
//        effetFinTour_.setEndRoundRank(28);
        effetFinTour_.setEndRoundRank(61);
        effetFinTour_.setTargetChoice(TargetChoice.LANCEUR);
        effetFinTour_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetFinTour_);
        _data.completeMembers(DANSE_PLUIE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setLeftUserHp(new Rate("1/2"));
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVMax_);
        effetStatut_ = defaultEffetStatut();
        //validate effetStatut_.getLawStatus().addEvent("MAUDIT",new LgInt("1"));
        //validate effetStatut_.getLocalFailStatus().put("MAUDIT","VAR__CIBLE_POSSEDE_STATUT_RELATION__MAUDIT|VAR__CIBLE_CLONE>0");
        //validate:
        effetStatut_.getLawStatus().addEvent(POISON_ST,new LgInt("1"));
        //validate:
        effetStatut_.getLocalFailStatus().put(POISON_ST,"VAR__CIBLE_POSSEDE_STATUT_RELATION__MAUDIT|VAR__CIBLE_CLONE>0");
        effetStatut_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(MALEDICTION_2,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)8);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setMultAccuracy(new Rate("8/5"));
        effetGlobal_.getEfficiencyMoves().put(new TypesDuo(SOL,VOL),new Rate("1"));
        effetGlobal_.getDisableImmuAgainstTypes().add(SOL);
        effetGlobal_.getCancelProtectingAbilities().add(LEVITATION);
        effetGlobal_.getUnusableMoves().add(ENVOL);
        effetGlobal_.getUnusableMoves().add(REBOND);
        //validate effetGlobal_.getUnusableMoves().add("CHUTE_LIBRE");
        //validate effetGlobal_.getUnusableMoves().add("PIED_SAUTE");
        //validate effetGlobal_.getUnusableMoves().add("PIED_VOLTIGE");
        effetGlobal_.getUnusableMoves().add(LEVIKINESIE);
        effetGlobal_.getUnusableMoves().add(VOL_MAGNETIK);
        effetGlobal_.getMultPowerMoves().put(ANTI_AIR, new Rate("2"));
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(GRAVITE,ficheAttaqueNonOff_);
        initThirdMoves(_data);
        initSecondMoves(_data);
        initAllCombos(_data);
        //BALL_GLACE
    }

    private static void initThirdMoves(DataBase _data) {
        MonteCarloNumber law_;
        EffectStatistic effetStatistique_;
        DamagingMoveData ficheAttaqueOff_;
        EffectDamage effetDegats_;
        StatusMoveData ficheAttaqueNonOff_;
        EffectStatus effetStatut_;
        EffectGlobal effetGlobal_;
        EffectEndRound effetFinTour_;
        EffectSwitchTypes effetChgtType_;
        EffectFullHpRate effetTauxPVMax_;
        EffectTeam effetEquipe_;
        EffectProtection effetProtection_;
        EffectUnprotectFromTypes effetAntiImmu_;
        EffectSwitchItems effetChgtObj_;
        EffectCommonStatistics effetCommun_;
        EffectTeamWhileSendFoe effetEquipeEntreeAdv_;
        EffectRestriction effetAntiChoix_;
        EffectSwitchPointView effetChgtPointVueAtt_;
        EffectInvoke effetInvoque_;
        EffectClone effetClone_;
        EffectEndRoundPositionRelation effectEndRoundPositionRelation_;
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingAllyMove(true);
        effetInvoque_.getMovesNotToBeInvoked().add(ASSISTANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BABIL");
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        effetInvoque_.getMovesNotToBeInvoked().add(COUP_D_MAIN);
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(DETECTION);
        effetInvoque_.getMovesNotToBeInvoked().add(GRIBOUILLE);
        effetInvoque_.getMovesNotToBeInvoked().add(IMPLORE);
        effetInvoque_.getMovesNotToBeInvoked().add(LARCIN);
        effetInvoque_.getMovesNotToBeInvoked().add(LUTTE);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MITRA_POING");
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MOI_D_ABORD);
        effetInvoque_.getMovesNotToBeInvoked().add(PAR_ICI);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_PASSE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PRLVT_DESTIN");
        effetInvoque_.getMovesNotToBeInvoked().add(REFLET_MAGIK);
        effetInvoque_.getMovesNotToBeInvoked().add(RIPOSTE);
        effetInvoque_.getMovesNotToBeInvoked().add(RUSE);
        effetInvoque_.getMovesNotToBeInvoked().add(SAISIE);
        effetInvoque_.getMovesNotToBeInvoked().add(TENACITE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOURMAGIK");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VOILE_MIROIR");
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(ASSISTANCE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ALLIE);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingAllyMove(true);
        effetInvoque_.getMovesNotToBeInvoked().add(ASSISTANCE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("BABIL");
        effetInvoque_.getMovesNotToBeInvoked().add(BLABLA_DODO);
        effetInvoque_.getMovesNotToBeInvoked().add(COUP_D_MAIN);
        effetInvoque_.getMovesNotToBeInvoked().add(COPIE);
        effetInvoque_.getMovesNotToBeInvoked().add(DETECTION);
        effetInvoque_.getMovesNotToBeInvoked().add(GRIBOUILLE);
        effetInvoque_.getMovesNotToBeInvoked().add(IMPLORE);
        effetInvoque_.getMovesNotToBeInvoked().add(LARCIN);
        effetInvoque_.getMovesNotToBeInvoked().add(LUTTE);
        effetInvoque_.getMovesNotToBeInvoked().add(MIMIQUE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("MITRA_POING");
        effetInvoque_.getMovesNotToBeInvoked().add(METRONOME);
        effetInvoque_.getMovesNotToBeInvoked().add(MOI_D_ABORD);
        effetInvoque_.getMovesNotToBeInvoked().add(PAR_ICI);
        effetInvoque_.getMovesNotToBeInvoked().add(PASSE_PASSE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("PRLVT_DESTIN");
        effetInvoque_.getMovesNotToBeInvoked().add(REFLET_MAGIK);
        effetInvoque_.getMovesNotToBeInvoked().add(RIPOSTE);
        effetInvoque_.getMovesNotToBeInvoked().add(RUSE);
        effetInvoque_.getMovesNotToBeInvoked().add(SAISIE);
        effetInvoque_.getMovesNotToBeInvoked().add(TENACITE);
        //validate effetInvoque_.getMovesNotToBeInvoked().add("TOURMAGIK");
        //validate effetInvoque_.getMovesNotToBeInvoked().add("VOILE_MIROIR");
        effetInvoque_.setTargetChoice(TargetChoice.ALLIE);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(ASSISTANCE_BIS,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.getDeletedStatus().add(PRISE_DE_TETE);
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        law_.addEvent(new Rate("4"),new LgInt("1"));
        law_.addEvent(new Rate("3"),new LgInt("3"));
        law_.addEvent(new Rate("2"),new LgInt("3"));
        ficheAttaqueOff_.setRepeatRoundLaw(law_);
        ficheAttaqueOff_.setRankIncrementNbRound((short)15);
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.getPreventStatus().add(SOMMEIL);
        effetGlobal_.getPreventStatus().add(SOMMEIL_REPOS);
        effetGlobal_.getPreventStatus().add(AMOUR);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(BROUHAHA,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effectEndRoundPositionRelation_ = defaultEffectEndRoundPositionRelation();
        effectEndRoundPositionRelation_.setHealHp(new Rate("1/2"));
        effectEndRoundPositionRelation_.setEndRoundRank(25);
        effectEndRoundPositionRelation_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effectEndRoundPositionRelation_);
        _data.completeMembers(VOEU,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setPriority((byte)4);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtPointVueAtt_ = defaultEffetChgtPointVueAtt();
        effetChgtPointVueAtt_.setPointViewChangement(PointViewChangementType.THIEF_BONUSES);
        effetChgtPointVueAtt_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetChgtPointVueAtt_);
        _data.completeMembers(SAISIE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(ROCHE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__GARDE_LARGE-VAR__LANCEUR_NB_UTILISATION__PREVENTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtTeamAgainstMultTargets(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(GARDE_LARGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetAntiChoix_ = defaultEffetAntiChoix();
        effetAntiChoix_.setChoiceRestriction(MoveChoiceRestrictionType.LANCEUR_ATTAQUES);
        effetAntiChoix_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetAntiChoix_.setFail("cardinal(inter({VAR__LANCEUR_ATTAQUES},{VAR__CIBLE_ATTAQUES}))=0");
        ficheAttaqueNonOff_.getEffects().add(effetAntiChoix_);
        _data.completeMembers(POSSESSIF,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_ADV);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.EVASINESS,(byte)-1);
        effetStatistique_.getLocalFailStatis().put(Statistic.EVASINESS,"VAR__CIBLE_CLONE>0");
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.ADJ_ADV);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(DOUX_PARFUM,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(VOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(VOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("3"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)12);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getMultStatistic().put(Statistic.SPEED,new Rate("2"));
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(VENT_ARRIERE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(VOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(VOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("2"),new LgInt("1"));
        law_.addEvent(new Rate("3"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)12);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getMultStatistic().put(Statistic.SPEED,new Rate("2"));
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(VENT_ARRIERE_BIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(SPECTRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)11);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getMultStatistic().put(Statistic.ACCURACY,new Rate("2"));
        effetEquipe_.getMultStatisticFoe().put(Statistic.EVASINESS,new Rate("1/2"));
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(REGARD_NOIR,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.REUSE_LAST_OBJECT);
        effetChgtObj_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtObj_.setFail("cardinal({VAR__LANCEUR_OBJET})>0");
        ficheAttaqueNonOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(RECYCLAGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__TENACITE)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtSingleAgainstKo(new Rate("1"));
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(TENACITE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50*(VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_D_HERBE+VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_D_EAU+1)");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(AIRE_DE_FEU,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50*(VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_D_HERBE+VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_DE_FEU+1)");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(AIRE_D_EAU,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50*(VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_DE_FEU+VAR__NB_UTILI_ATT_EQ_TOUR__AIRE_D_EAU+1)");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(AIRE_D_HERBE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setPriority((byte)-7);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)6);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setCanceledIfUsed(true);
        effetGlobal_.getCancelChgtStat().add(Statistic.ATTACK);
        effetGlobal_.getCancelChgtStat().add(Statistic.DEFENSE);
        effetGlobal_.getCancelChgtStat().add(Statistic.SPECIAL_ATTACK);
        effetGlobal_.getCancelChgtStat().add(Statistic.SPECIAL_DEFENSE);
        effetGlobal_.getCancelChgtStat().add(Statistic.SPEED);
        effetGlobal_.getCancelChgtStat().add(Statistic.ACCURACY);
        effetGlobal_.getCancelChgtStat().add(Statistic.EVASINESS);
        effetGlobal_.getCancelChgtStat().add(Statistic.CRITICAL_HIT);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(ZONE_ETRANGE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60*(inclusnum({VAR__CIBLE_OBJET},{})+1)");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.USE_OBJECT_AS_POSSIBLE);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetChgtObj_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(PICORE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(COMBAT);
        ficheAttaqueNonOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__ABRI-VAR__LANCEUR_NB_UTILISATION__DETECTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtSingle(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(DETECTION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(COMBAT);
        ficheAttaqueNonOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__ABRI-VAR__LANCEUR_NB_UTILISATION__DETECTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtTeamAgainstDamageMoves(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(TATAMIGAESHI,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(COMBAT);
        ficheAttaqueNonOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__ABRI-VAR__LANCEUR_NB_UTILISATION__DETECTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtTeamAgainstStatusMoves(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(VIGILANCE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setPriority((byte)3);
        ficheAttaqueNonOff_.setAccuracy("puis(2,-VAR__LANCEUR_NB_UTILISATION__ABRI-VAR__LANCEUR_NB_UTILISATION__DETECTION)");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetProtection_ = defaultEffetProtection();
        effetProtection_.setProtSingle(true);
        effetProtection_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetProtection_);
        _data.completeMembers(ABRI,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setPriority((byte)-7);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)5);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setCanceledIfUsed(true);
        effetGlobal_.setReverseOrderOfSortBySpeed(true);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(DISTORSION,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_ = defaultEffetEquipeEntreeAdv();
        effetEquipeEntreeAdv_.setDamageRateAgainstFoe("(min(VAR__EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION__PICOTS,3)+1):16");
        effetEquipeEntreeAdv_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_.setFail(NULL_REF);
        effetEquipeEntreeAdv_.setFailSending("VAR__IMMU_TYPE_ATT_COMBATTANT_ENTRANT__SOL|cardinal(inter({VAR__COMBATTANT_ENTRANT_TYPES},{VOL}))>0");
        ficheAttaqueNonOff_.getEffects().add(effetEquipeEntreeAdv_);
        _data.completeMembers(PICOTS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.SPEED, (byte) 0);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        effetEquipeEntreeAdv_ = defaultEffetEquipeEntreeAdv();
        effetEquipeEntreeAdv_.setDamageRateAgainstFoe("(min(VAR__EQUIPE_ADV_COMBATTANT_ENTRANT_NB_UTILISATION__PICOTS,3)+1):16");
        effetEquipeEntreeAdv_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_.setFail(NULL_REF);
        effetEquipeEntreeAdv_.setFailSending("VAR__IMMU_TYPE_ATT_COMBATTANT_ENTRANT__SOL|cardinal(inter({VAR__COMBATTANT_ENTRANT_TYPES},{VOL}))>0");
        ficheAttaqueNonOff_.getEffects().add(effetEquipeEntreeAdv_);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        _data.completeMembers(PICOTS_BIS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(ROCHE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_ = defaultEffetEquipeEntreeAdv();
        effetEquipeEntreeAdv_.setDamageRateAgainstFoe("VAR__COEFF_EFF_BASE_TYPES_COMBATTANT_ENTRANT__ROCHE*1/8");
        effetEquipeEntreeAdv_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipeEntreeAdv_.setFail(NULL_REF);
        effetEquipeEntreeAdv_.setFailSending(NULL_REF);
        ficheAttaqueNonOff_.getEffects().add(effetEquipeEntreeAdv_);
        _data.completeMembers(PIEGE_DE_ROC,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("min(VAR__LANCEUR_NB_UTILISATION__STOCKAGE,3)*100");
        effetDegats_.setRandMax(true);
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_.setFail("VAR__LANCEUR_NB_UTILISATION__STOCKAGE<1");
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RELACHE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setRandMax(true);
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_.getBoostStatisOnceKoFoe().put(Statistic.ATTACK, (byte)1);
        effetDegats_.setFail(NULL_REF);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DARD_MORTEL,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(GLACE);
        ficheAttaqueNonOff_.getBoostedTypes().add(GLACE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)9);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.ATTACK);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.DEFENSE);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.SPECIAL_ATTACK);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.SPECIAL_DEFENSE);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.SPEED);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.ACCURACY);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.EVASINESS);
        effetEquipe_.getProtectAgainstLowStat().add(Statistic.CRITICAL_HIT);
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetEquipe_);
        _data.completeMembers(BRUME,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.getCopyBoost().add(Statistic.ATTACK);
        effetStatistique_.getCopyBoost().add(Statistic.DEFENSE);
        effetStatistique_.getCopyBoost().add(Statistic.SPECIAL_ATTACK);
        effetStatistique_.getCopyBoost().add(Statistic.SPECIAL_DEFENSE);
        effetStatistique_.getCopyBoost().add(Statistic.SPEED);
        effetStatistique_.getCopyBoost().add(Statistic.ACCURACY);
        effetStatistique_.getCopyBoost().add(Statistic.EVASINESS);
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(BOOST,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getDeletedStatus().add(GEL);
        effetStatut_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(NULL_REF,new LgInt("7"));
        effetStatut_.getLawStatus().addEvent(BRULURE,new LgInt("3"));
        effetStatut_.getLocalFailStatus().put(BRULURE,"cardinal(inter({VAR__CIBLE_STATUTS},{BRULURE}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{FEU}))>0");
        effetStatut_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetStatut_.getRequiredSuccessfulEffects().add(1);
        ficheAttaqueOff_.getEffects().add(effetStatut_);
        _data.completeMembers(EBULLITION,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(POISON);
        ficheAttaqueNonOff_.getBoostedTypes().add(POISON);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(POISON_ST,new LgInt("1"));
        effetStatut_.getLocalFailStatus().put(POISON_ST,"cardinal(inter({VAR__CIBLE_STATUTS},{POISON_ST;POISON_GRAVE}))>0|VAR__CIBLE_CLONE>0|cardinal(inter({VAR__CIBLE_TYPES},{POISON;ACIER}))>0");
        effetStatut_.setTargetChoice(TargetChoice.ANY_FOE);
        //validate effetStatut_.getRequiredSuccessfulEffects().add(1);
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        _data.completeMembers(POUDRE_TOXIK,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.getAchieveDisappearedPkUsingMove().add(PLONGEE);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_MULT);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("95*(2*caracferme(inclusnum({VAR__CIBLE_ATTAQUE_CHOISIE},{PLONGEE})*VAR__CIBLE_DISPARAIT,1,1)+caracferme(VAR__CIBLE_DISPARAIT,0,0))");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_MULT);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(SURF,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setBreakImmuTypeAbility(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("10");
        effetDegats_.setSummingUserTeamOkFighter(true);
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BASTON,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setPriority((byte)-7);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)7);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setStoppableMovePrio(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setCanceledIfUsed(true);
        effetGlobal_.setUnusableItem(true);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        _data.completeMembers(ZONE_MAGIQUE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setClosestFoeDamageRateHp(new Rate("1/8"));
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVMax_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetTauxPVMax_);
        _data.completeMembers(REBONDIFEU,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)5);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setRestoredHp("1/2*caracferme(cardinal({VAR__CLIMATS}),0,0)+caracdroiteferme(cardinal({VAR__CLIMATS}),1)*(2/3*cardinal(inter({VAR__CLIMATS},{ZENITH}))+1/5*cardinal(inter({VAR__CLIMATS},{ORAGE}))+1/4*cardinal(inter({VAR__CLIMATS},{GRELE;DANSE_PLUIE;TEMPETESABLE})))");
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVMax_);
        _data.completeMembers(RAYON_LUNE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setRestoredHp("1/2");
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVMax_);
        _data.completeMembers(SOIN,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setRestoredHp("1/2");
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVMax_);
        _data.completeMembers(ATTERRISSAGE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.REMOVE_TARGET_OBJECT);
        effetChgtObj_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetChgtObj_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(LARCIN,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(POUV_ANTIQUE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_ = defaultEffetInvoque();
        effetInvoque_.setInvokingTargetSuccesfulMove(true);
        effetInvoque_.getMovesNotToBeInvoked().add(PHOTOCOPIE);
        effetInvoque_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetInvoque_.setFail("VAR__PAS_ATTAQUE_INVOC");
        ficheAttaqueNonOff_.getEffects().add(effetInvoque_);
        _data.completeMembers(PHOTOCOPIE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetCommun_ = defaultEffetCommun();
        effetCommun_.getCommonValue().put(Statistic.SPECIAL_DEFENSE,"moy(VAR__LANCEUR_STATIS__SPECIAL_DEFENSE,VAR__CIBLE_STATIS__SPECIAL_DEFENSE)");
        effetCommun_.getCommonValue().put(Statistic.DEFENSE,"moy(VAR__LANCEUR_STATIS__DEFENSE,VAR__CIBLE_STATIS__DEFENSE)");
        effetCommun_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetCommun_);
        _data.completeMembers(PARTAGE_GARDE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetCommun_ = defaultEffetCommun();
        effetCommun_.getCommonValue().put(Statistic.PV_RESTANTS,"moy(VAR__LANCEUR_PV_RESTANTS,VAR__CIBLE_PV_RESTANTS)");
        effetCommun_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetCommun_);
        _data.completeMembers(BALANCE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetCommun_ = defaultEffetCommun();
        effetCommun_.getCommonValue().put(Statistic.PV_RESTANTS,"min(VAR__LANCEUR_PV_RESTANTS,VAR__CIBLE_PV_RESTANTS)");
        effetCommun_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetCommun_);
        _data.completeMembers(EFFORT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetClone_ = defaultEffetClone();
        effetClone_.setHpRateClone(new Rate("1/4"));
        effetClone_.setTargetChoice(TargetChoice.LANCEUR);
        effetClone_.setFail("VAR__LANCEUR_CLONE>0|div(VAR__LANCEUR_PV_RESTANTS,VAR__LANCEUR_PV_MAX)<1/4");
        ficheAttaqueNonOff_.getEffects().add(effetClone_);
        _data.completeMembers(CLONAGE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setStoppableMoveMulti(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("30");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.DELETE_DEF_TARGET_BERRY);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_ADV);
        effetChgtObj_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(CALCINATION,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatut_ = defaultEffetStatut();
        effetStatut_.getLawStatus().addEvent(SOMMEIL_REPOS,new LgInt("1"));
        effetStatut_.getDeletedStatus().add(GEL);
        effetStatut_.getDeletedStatus().add(PARALYSIE);
        effetStatut_.getDeletedStatus().add(AMOUR);
        effetStatut_.getDeletedStatus().add(BRULURE);
        effetStatut_.getDeletedStatus().add(CONFUSION);
        //evaluate effetStatut_.getDeletedStatus().add("MAUDIT");
        effetStatut_.getDeletedStatus().add(POISON_GRAVE);
        effetStatut_.getDeletedStatus().add(POISON_ST);
        effetStatut_.getDeletedStatus().add(VAMPIGRAINE);
        effetStatut_.getLocalFailStatus().put(SOMMEIL_REPOS,"cardinal(inter({VAR__LANCEUR_STATUTS},{SOMMEIL;SOMMEIL_REPOS}))>0");
        effetStatut_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatut_.setFail("VAR__LANCEUR_PV_RESTANTS=VAR__LANCEUR_PV_MAX");
        ficheAttaqueNonOff_.getEffects().add(effetStatut_);
        effetTauxPVMax_ = defaultEffectFullHpRate();
        effetTauxPVMax_.setRestoredHp("1");
        effetTauxPVMax_.setTargetChoice(TargetChoice.LANCEUR);
        effetTauxPVMax_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetTauxPVMax_);
        _data.completeMembers(REPOS,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(ROCHE);
        ficheAttaqueNonOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueNonOff_.setAccuracy("1");
        law_ = new MonteCarloNumber();
        law_.addEvent(new Rate("5"),new LgInt("1"));
        ficheAttaqueNonOff_.setRepeatRoundLaw(law_);
        ficheAttaqueNonOff_.setRankIncrementNbRound((short)26);
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetGlobal_ = defaultEffectGlobal();
        effetGlobal_.setPriseEnComptePkLanceur(true);
        effetGlobal_.setWeather(true);
        effetGlobal_.getImmuneTypes().add(ROCHE);
        effetGlobal_.getImmuneTypes().add(SOL);
        effetGlobal_.getImmuneTypes().add(ACIER);
        effetGlobal_.setDamageEndRound(new Rate("1/16"));
        effetGlobal_.getMultStatIfContainsType().put(new StatisticType(Statistic.SPECIAL_DEFENSE,ROCHE),new Rate("3/2"));
        //validate effetGlobal_.getCancelEffects().add("GRELE");
        effetGlobal_.getCancelEffects().add(DANSE_PLUIE);
        effetGlobal_.getCancelEffects().add(ZENITH);
        effetGlobal_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetGlobal_);
        effetFinTour_ = defaultEffetFinTourGlobal();
//        effetFinTour_.setEndRoundRank(28);
        effetFinTour_.setEndRoundRank(64);
        effetFinTour_.setTargetChoice(TargetChoice.LANCEUR);
        effetFinTour_.getRequiredSuccessfulEffects().add(0);
        ficheAttaqueNonOff_.getEffects().add(effetFinTour_);
        _data.completeMembers(TEMPETESABLE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetChgtType_ = defaultEffetChgtType();
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.DESERT,SOL);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.GRASS,PLANTE);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.BUILDING,NORMAL);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.ROCK,ROCHE);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.ROAD,SOL);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.SNOW,GLACE);
        effetChgtType_.getChgtTypeByEnv().put(EnvironmentType.WATER,EAU);
        effetChgtType_.setConstValuesType(ConstValuesType.NOTHING);
        effetChgtType_.setExchangeTypes(ExchangeType.NOTHING);
        effetChgtType_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetChgtType_);
        _data.completeMembers(CAMOUFLAGE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)15);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.GIVE_OBJECT_TARGET);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtObj_.setFail("VAR__CIBLE_CLONE>0|cardinal({VAR__LANCEUR_OBJET})=0|cardinal({VAR__CIBLE_OBJET})>0|VAR__CIBLE_EFFET__REFLET_MAGIK");
        ficheAttaqueNonOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(PASSE_CADEAU,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.getTypes().add(new TypesDuo(PSY,TENEBRE));
        effetAntiImmu_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetAntiImmu_);
        _data.completeMembers(OEIL_MIRACLE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setCounterableMove(true);
        ficheAttaqueNonOff_.setPp((short)40);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveMulti(true);
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetAntiImmu_ = defaultEffetAntiImmu();
        effetAntiImmu_.getTypes().add(new TypesDuo(NORMAL,SPECTRE));
        effetAntiImmu_.getTypes().add(new TypesDuo(COMBAT,SPECTRE));
        effetAntiImmu_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetAntiImmu_);
        _data.completeMembers(CLAIRVOYANCE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(TENEBRE);
        ficheAttaqueNonOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setStoppableMoveSolo(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtObj_ = defaultEffetChgtObj();
        effetChgtObj_.setMoveObject(MoveItemType.EXCHANGE_OBJECTS);
        effetChgtObj_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetChgtObj_.setFail("VAR__CIBLE_CLONE>0");
        ficheAttaqueNonOff_.getEffects().add(effetChgtObj_);
        _data.completeMembers(PASSE_PASSE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getDamageLaw().addEvent("div(VAR__CIBLE_PV_RESTANTS,2)",new LgInt("1"));
        effetDegats_.getDamageLaw().addEvent("div(VAR__CIBLE_PV_RESTANTS*4,8)",new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(CROC_FATAL,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setStoppableMoveKoSingle(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("9/10");
        ficheAttaqueOff_.setStoppableMoveSolo(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getDamageLaw().addEvent(NULL_REF,new LgInt("1"));
        effetDegats_.getDamageLaw().addEvent("div(VAR__CIBLE_PV_RESTANTS,2)",new LgInt("1"));
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ADJ_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(LOTO,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BOUE_BOMBE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("85");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BOURDON,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BULLES_D_O,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)30);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(CHARGE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)30);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(COUP_D_BOULE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(COUP_D_JUS,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(CRU_AILE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(EBOULEMENT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ECUME,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.getBoostedTypes().add(ELECTRIQUE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("120");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ELECANON,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(GRIFFE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(ACIER);
        ficheAttaqueOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("65");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(GRIFFE_ACIER,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("120");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(HYDROCANON,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("65");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(JET_PIERRES,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(LAME_DE_ROC,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(LAME_D_AIR,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("65");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PIQURE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PISTOLET_A_O,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PLAQUAGE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(POURSUITE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PSYKO,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("65");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PUIS_CACHEE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("85");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RAYON_GEMME,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(REBOND,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(REVEIL_FORCE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)50);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("20");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(SONICBOOM,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TELLURIFORCE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(SOL);
        ficheAttaqueOff_.getBoostedTypes().add(SOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TIR_DE_BOUE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("5"),new LgInt("1"));
        effetDegats_.setPower("15");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TORGNOLES,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.setPower("40");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VAGUE_PSY,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VAMPIRISME,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("65");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VIBRAQUA,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VIVE_ATTAQUE,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)10);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK,(byte)6);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(COGNOBIDON,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ATTACK,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(DANSE_LAMES,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        //validate ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.DEFENSE,(byte)-2);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(GRINCEMENT,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.SPEED,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(HATE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        //validate ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(SOL);
        ficheAttaqueNonOff_.getBoostedTypes().add(SOL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.ACCURACY,(byte)-1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(JET_DE_SABLE,ficheAttaqueNonOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)20);
        ficheAttaqueNonOff_.getTypes().add(PSY);
        ficheAttaqueNonOff_.getBoostedTypes().add(PSY);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.EVASINESS,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(REFLET,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PLANTE);
        ficheAttaqueOff_.getBoostedTypes().add(PLANTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BALLE_GRAINE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(SPECTRE);
        ficheAttaqueOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BALL_OMBRE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ACIER);
        ficheAttaqueOff_.getBoostedTypes().add(ACIER);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BOMBAIMANT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(CHOC_MENTAL,ficheAttaqueOff_);
        ficheAttaqueNonOff_ = defaultFicheAttaqueNonOff();
        ficheAttaqueNonOff_.setThievableMove(true);
        ficheAttaqueNonOff_.setPp((short)30);
        ficheAttaqueNonOff_.getTypes().add(NORMAL);
        ficheAttaqueNonOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueNonOff_.setAccuracy("1");
        ficheAttaqueNonOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueNonOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueNonOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueNonOff_.setTargetChoice(TargetChoice.LANCEUR);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.getStatisVarRank().put(Statistic.CRITICAL_HIT,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueNonOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(CROISSANCE,ficheAttaqueNonOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("120");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DYNAMOPOING,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("60");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(FLEAU,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(MEGAPHONE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(SPECTRE);
        ficheAttaqueOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(OMBRE_PORTEE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("90");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PLAIE_CROIX,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)20);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RAFALE_PSY,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RAYON_SIGNAL,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)30);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(RUSE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("50");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TAILLADE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)10);
        ficheAttaqueOff_.getTypes().add(PLANTE);
        ficheAttaqueOff_.getBoostedTypes().add(PLANTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("100");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TEMPETEVERTE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TORNADE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)25);
        ficheAttaqueOff_.getTypes().add(NORMAL);
        ficheAttaqueOff_.getBoostedTypes().add(NORMAL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("70");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TRANCHE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("85");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TRANCHE_NUIT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PLANTE);
        ficheAttaqueOff_.getBoostedTypes().add(PLANTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("85");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.AUTRE_UNIQ);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TRANCH_HERBE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setDirect(true);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("80");
        effetDegats_.setStatisAtt(Statistic.ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(UPPERCUT,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VENT_ARGENTE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(INSECTE);
        ficheAttaqueOff_.getBoostedTypes().add(INSECTE);
        ficheAttaqueOff_.setAccuracy("VAR__CIBLE_PP__SEISME+VAR__LANCEUR_PP__SEISME+VAR__CIBLE_PP__ECHEC+VAR__LANCEUR_PP__ECHEC+VAR__COEFF_EFF_BASE_TYPES_CIBLE__ROCHE+VAR__COEFF_EFF_BASE_TYPES_LANCEUR__ROCHE");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail("VAR__CIBLE_EFFET__VOL_MAGNETIK|VAR__CIBLE_EFFET__ANTI_AIR|VAR__CIBLE_EFFET__EMBARGO|VAR__CIBLE_EFFET__ANNEAU_HYDRO|VAR__CIBLE_EFFET__COUP_D_MAIN|VAR__CIBLE_EFFET__ROULADE");
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("15"));
        effetDegats_.getChLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        effetStatistique_ = defaultEffetStatistique();
        effetStatistique_.setFail("VAR__LANCEUR_EFFET__SEISME|VAR__LANCEUR_EFFET__ENCORE|VAR__LANCEUR_EFFET__VOL_MAGNETIK|VAR__LANCEUR_EFFET__ANTI_AIR|VAR__LANCEUR_EFFET__EMBARGO|VAR__LANCEUR_EFFET__ANNEAU_HYDRO|VAR__LANCEUR_EFFET__COUP_D_MAIN|VAR__LANCEUR_EFFET__ROULADE");
        effetStatistique_.getStatisVarRank().put(Statistic.CRITICAL_HIT,(byte)1);
        effetStatistique_.setEvtRate(new Rate("1"));
        effetStatistique_.setTargetChoice(TargetChoice.LANCEUR);
        ficheAttaqueOff_.getEffects().add(effetStatistique_);
        _data.completeMembers(ECHEC,ficheAttaqueOff_);
    }

    private static void initSecondMoves(DataBase _data) {
        DamagingMoveData ficheAttaqueOff_;
        EffectDamage effetDegats_;
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(GLACE);
        ficheAttaqueOff_.getBoostedTypes().add(GLACE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BALL_GLACE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(SPECIALE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(ROCHE);
        ficheAttaqueOff_.getBoostedTypes().add(ROCHE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(BOUL_ARMURE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(TENEBRE);
        ficheAttaqueOff_.getBoostedTypes().add(TENEBRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(DAMOCLES,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(PLONGEE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(PSY);
        ficheAttaqueOff_.getBoostedTypes().add(PSY);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(REGENERATION,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(VOL);
        ficheAttaqueOff_.getBoostedTypes().add(VOL);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(VENT_GLACE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(EAU);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(EAU);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(TREMPETTE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getTypes().add(FEU);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(FEU);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(FRAPPE_ATLAS,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getTypes().add(GLACE);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(GLACE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(POINGLACE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ULTIMAPOING,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(COMBAT);
        ficheAttaqueOff_.getBoostedTypes().add(COMBAT);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ULTIMAWASHI,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(FEE);
        ficheAttaqueOff_.getBoostedTypes().add(FEE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("2"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ONDE_VIDE,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(DRAGON);
        ficheAttaqueOff_.getBoostedTypes().add(DRAGON);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.TOUS_ADV);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.TOUS_ADV);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(ENVOL,ficheAttaqueOff_);
        ficheAttaqueOff_ = defaultFicheAttaqueOff();
        ficheAttaqueOff_.setCategory(PHYSIQUE);
        ficheAttaqueOff_.setPp((short)15);
        ficheAttaqueOff_.getTypes().add(SPECTRE);
        ficheAttaqueOff_.getBoostedTypes().add(SPECTRE);
        ficheAttaqueOff_.setAccuracy("1");
        ficheAttaqueOff_.setIgnVarAccurUserNeg(true);
        ficheAttaqueOff_.setIgnVarEvasTargetPos(true);
        ficheAttaqueOff_.setSwitchType(SwitchType.NOTHING);
        ficheAttaqueOff_.setTargetChoice(TargetChoice.ANY_FOE);
        effetDegats_ = defaultEffetDegats();
        effetDegats_.setFail(NULL_REF);
        effetDegats_.getChLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("1"),new LgInt("1"));
        effetDegats_.getHitsLaw().addEvent(new Rate("2"),new LgInt("2"));
        effetDegats_.setPower("75");
        effetDegats_.setStatisAtt(Statistic.SPECIAL_ATTACK);
        effetDegats_.setUserAttack(true);
        effetDegats_.setStatisDef(Statistic.SPECIAL_DEFENSE);
        effetDegats_.setTargetDefense(true);
        effetDegats_.setTargetChoice(TargetChoice.ANY_FOE);
        ficheAttaqueOff_.getEffects().add(effetDegats_);
        _data.completeMembers(STOCKAGE,ficheAttaqueOff_);
    }

    private static void initAllCombos(DataBase _data) {
        EffectTeam effetEquipe_;
        EffectCombo effetCombinaison_;
        EffectEndRoundFoe effectEndRoundFoe_;
        _data.initCombosTest();
        effetCombinaison_ = defaultEffetCombinaison();
        effectEndRoundFoe_ = defaultEffectEndRoundFoe();
        effectEndRoundFoe_.setEndRoundRank(27);
        effectEndRoundFoe_.setInflictedRateHpTarget(new Rate("1/8"));
        effetCombinaison_.getEffectEndRound().add(effectEndRoundFoe_);
        effetCombinaison_.setRankIncrementNbRound((short)14);
        effetCombinaison_.getRepeatedRoundsLaw().addEvent(new Rate("3"), LgInt.one());
        _data.getCombos().getEffects().put(new StringList(AIRE_DE_FEU,AIRE_D_HERBE), effetCombinaison_);
        effetCombinaison_ = defaultEffetCombinaison();
        effetCombinaison_.setMultEvtRateSecEff(new Rate("2"));
        effetCombinaison_.setRankIncrementNbRound((short)14);
        effetCombinaison_.getRepeatedRoundsLaw().addEvent(new Rate("2"), LgInt.one());
        effetCombinaison_.getRepeatedRoundsLaw().addEvent(new Rate("3"), LgInt.one());
        _data.getCombos().getEffects().put(new StringList(AIRE_DE_FEU,AIRE_D_EAU), effetCombinaison_);
        effetCombinaison_ = defaultEffetCombinaison();
        effetEquipe_ = defaultEffetEquipe();
        effetEquipe_.setTargetChoice(TargetChoice.LANCEUR);
        effetEquipe_.getMultStatisticFoe().put(Statistic.ACCURACY, new Rate("4/5"));
        effetCombinaison_.getTeamMove().add(effetEquipe_);
        effetCombinaison_.setMultEvtRateSecEff(new Rate("2"));
        effetCombinaison_.setRankIncrementNbRound((short)14);
        effetCombinaison_.getRepeatedRoundsLaw().addEvent(new Rate("3"), LgInt.one());
        _data.getCombos().getEffects().put(new StringList(AIRE_D_EAU,AIRE_D_HERBE), effetCombinaison_);
        _data.completeMembersCombos();
    }

    private static EffectStatistic defaultEffetStatistique() {
        EffectStatistic object_ = new EffectStatistic();
        object_.setStatisVarRank(new EnumMap<Statistic,Byte>());
        object_.setLocalFailStatis(new EnumMap<Statistic,String>());
        object_.setEvtRate(Rate.zero());
        object_.setCopyBoost(new EnumList<Statistic>());
        object_.setSwapBoostStatis(new EnumList<Statistic>());
        object_.setLocalFailSwapBoostStatis(new EnumMap<Statistic,String>());
        object_.setLawBoost(new MonteCarloEnum<Statistic>());
        object_.setCancelLowStat(new EnumList<Statistic>());
        object_.setCancelChgtStat(new EnumList<Statistic>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static DamagingMoveData defaultFicheAttaqueOff() {
        DamagingMoveData object_ = new DamagingMoveData();
        object_.setDeletedStatus(new StringList());
        object_.setRequiredStatus(new StringList());
        object_.setCategory(NULL_REF);
        object_.setTypes(new StringList());
        object_.setBoostedTypes(new StringList());
        object_.setAccuracy(NULL_REF);
        object_.setEffects(new CustList<Effect>());
        object_.setRepeatRoundLaw(new MonteCarloNumber());
        object_.setSecEffectsByItem(new StringMap<Numbers<Integer>>());
        object_.setAchieveDisappearedPkUsingMove(new StringList());
        object_.setSwitchType(SwitchType.NOTHING);
        object_.setTypesByOwnedItem(new StringMap<String>());
        object_.setTypesByWeather(new StringMap<String>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        return object_;
    }

    private static EffectDamage defaultEffetDegats() {
        EffectDamage object_ = new EffectDamage();
        object_.setBoostStatisOnceKoFoe(new EnumMap<Statistic,Byte>());
        object_.setDamageLaw(new MonteCarloString());
        object_.setMultDamageAgainst(new StringMap<Rate>());
        object_.setChLaw(new MonteCarloNumber());
//        object_.setPowerLaw(new MonteCarloNumber());
        object_.setHitsLaw(new MonteCarloNumber());
        object_.setPower(NULL_REF);
        object_.setIgnVarStatTargetPos(new EnumList<Statistic>());
        object_.setIgnVarStatUserNeg(new EnumList<Statistic>());
        object_.setStatisAtt(Statistic.ATTACK);
        object_.setStatisDef(Statistic.DEFENSE);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static StatusMoveData defaultFicheAttaqueNonOff() {
        StatusMoveData object_ = new StatusMoveData();
        object_.setDeletedStatus(new StringList());
        object_.setRequiredStatus(new StringList());
        object_.setTypes(new StringList());
        object_.setBoostedTypes(new StringList());
        object_.setAccuracy(NULL_REF);
        object_.setEffects(new CustList<Effect>());
        object_.setRepeatRoundLaw(new MonteCarloNumber());
        object_.setSecEffectsByItem(new StringMap<Numbers<Integer>>());
        object_.setAchieveDisappearedPkUsingMove(new StringList());
        object_.setSwitchType(SwitchType.NOTHING);
        object_.setTypesByOwnedItem(new StringMap<String>());
        object_.setTypesByWeather(new StringMap<String>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        return object_;
    }

    private static EffectStatus defaultEffetStatut() {
        EffectStatus object_ = new EffectStatus();
        object_.setLawStatus(new MonteCarloString());
        object_.setDeletedStatus(new StringList());
        object_.setLocalFailStatus(new StringMap<String>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectRemainedHpRate defaultEffectRemainedHpRate() {
        EffectRemainedHpRate object_ = new EffectRemainedHpRate();
        object_.setRateHp(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectGlobal defaultEffectGlobal() {
        EffectGlobal object_ = new EffectGlobal();
        object_.setMultAccuracy(Rate.zero());
        object_.setPreventStatus(new StringList());
        object_.setImmuneTypes(new StringList());
        object_.setDamageEndRound(Rate.zero());
        object_.setHealingEndRound(Rate.zero());
        object_.setEfficiencyMoves(new ObjectMap<TypesDuo,Rate>());
        object_.setDisableImmuAgainstTypes(new StringList());
        object_.setCancelProtectingAbilities(new StringList());
        object_.setUnusableMoves(new StringList());
        object_.setMultDamagePrepaRound(new StringMap<Rate>());
        object_.setMovesUsedByTargetedFighters(new StringList());
        object_.setMultEffectLovingAlly(Rate.zero());
        object_.setMultPowerMoves(new StringMap<Rate>());
        object_.setMultStatIfContainsType(new ObjectMap<StatisticType,Rate>());
        object_.setCancelEffects(new StringList());
        object_.setMultDamageTypesMoves(new StringMap<Rate>());
        object_.setCancelChgtStat(new EnumList<Statistic>());
        object_.setChangedTypesTerrain(new StringList());
        object_.setInvokedMoveTerrain(NULL_REF);
        object_.setHealingEndRoundGround(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectEndRoundGlobal defaultEffetFinTourGlobal() {
        EffectEndRoundGlobal object_ = new EffectEndRoundGlobal();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }

    private static EffectSwitchTypes defaultEffetChgtType() {
        EffectSwitchTypes object_ = new EffectSwitchTypes();
        object_.setChgtTypeByEnv(new EnumMap<EnvironmentType,String>());
        object_.setConstValuesType(ConstValuesType.NOTHING);
        object_.setExchangeTypes(ExchangeType.NOTHING);
        object_.setConstTypes(new StringList());
        object_.setAddedTypes(new StringList());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectFullHpRate defaultEffectFullHpRate() {
        EffectFullHpRate object_ = new EffectFullHpRate();
        object_.setLeftUserHp(Rate.zero());
        object_.setRestoredHp(NULL_REF);
        object_.setClosestFoeDamageRateHp(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectDamageRate defaultEffectDamageRate() {
        EffectDamageRate object_ = new EffectDamageRate();
        object_.setRateDamage(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectTeam defaultEffetEquipe() {
        EffectTeam object_ = new EffectTeam();
        object_.setForbiddenBoost(new EnumList<Statistic>());
        object_.setUnusableMoves(new StringList());
        object_.setCancelChgtStatFoeTeam(new EnumList<Statistic>());
        object_.setCancelChgtStatTeam(new EnumList<Statistic>());
        object_.setMultDamage(new ObjectMap<CategoryMult,Rate>());
        object_.setMultStatistic(new EnumMap<Statistic,Rate>());
        object_.setMultStatisticFoe(new EnumMap<Statistic,Rate>());
        object_.setProtectAgainstLowStat(new EnumList<Statistic>());
        object_.setProtectAgainstStatus(new StringList());
        object_.setDisableFoeTeamEffects(new StringList());
        object_.setDisableFoeTeamStatus(new StringList());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectSwitchAbilities defaultEffetChgtCapac() {
        EffectSwitchAbilities object_ = new EffectSwitchAbilities();
        object_.setExchangeAbility(ExchangeType.NOTHING);
        object_.setConstAbility(NULL_REF);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectEndRoundPositionTargetRelation defaultEffectEndRoundPositionTargetRelation() {
        EffectEndRoundPositionTargetRelation object_ = new EffectEndRoundPositionTargetRelation();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }

    private static EffectMultSufferedMovePower defaultEffetMultPuissAttaqueSubie() {
        EffectMultSufferedMovePower object_ = new EffectMultSufferedMovePower();
        object_.setMultMovePowerFctType(new StringMap<Rate>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectProtection defaultEffetProtection() {
        EffectProtection object_ = new EffectProtection();
        object_.setProtSingleAgainstKo(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectSwitchPosition defaultEffetEchange() {
        EffectSwitchPosition object_ = new EffectSwitchPosition();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectUnprotectFromTypes defaultEffetAntiImmu() {
        EffectUnprotectFromTypes object_ = new EffectUnprotectFromTypes();
        object_.setTypes(new EqList<TypesDuo>());
        object_.setDisableImmuAgainstTypes(new StringList());
        object_.setDisableImmuFromMoves(new StringList());
        object_.setAttackTargetWithTypes(new StringList());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectSwitchItems defaultEffetChgtObj() {
        EffectSwitchItems object_ = new EffectSwitchItems();
        object_.setMoveObject(MoveItemType.EXCHANGE_OBJECTS);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectCommonStatistics defaultEffetCommun() {
        EffectCommonStatistics object_ = new EffectCommonStatistics();
        object_.setCommonValue(new EnumMap<Statistic,String>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectTeamWhileSendFoe defaultEffetEquipeEntreeAdv() {
        EffectTeamWhileSendFoe object_ = new EffectTeamWhileSendFoe();
        object_.setStatistics(new EnumMap<Statistic,Byte>());
        object_.setStatusByNbUses(new NumberMap<Short,String>());
        object_.setDeletedByFoeTypes(new StringList());
        object_.setDamageRateAgainstFoe(NULL_REF);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailSending(NULL_REF);
        return object_;
    }

    private static EffectRestriction defaultEffetAntiChoix() {
        EffectRestriction object_ = new EffectRestriction();
        object_.setChoiceRestriction(MoveChoiceRestrictionType.NOTHING);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectMultUsedMovePower defaultEffetMultPuissAttaqueLancee() {
        EffectMultUsedMovePower object_ = new EffectMultUsedMovePower();
        object_.setMultMovePowerFctType(new StringMap<Rate>());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectEndRoundSingleRelation defaultEffectEndRoundSingleRelation() {
        EffectEndRoundSingleRelation object_ = new EffectEndRoundSingleRelation();
        object_.setRateDamageFunctionOfNbRounds(new NumberMap<Long,Rate>());
        object_.setLawForEnablingEffect(new MonteCarloNumber());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }

    private static EffectAccuracy defaultEffetPrecision() {
        EffectAccuracy object_ = new EffectAccuracy();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectSwitchPointView defaultEffetChgtPointVueAtt() {
        EffectSwitchPointView object_ = new EffectSwitchPointView();
        object_.setPointViewChangement(PointViewChangementType.NOTHING);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectInvoke defaultEffetInvoque() {
        EffectInvoke object_ = new EffectInvoke();
        object_.setMoveFctEnv(new EnumMap<EnvironmentType,String>());
        object_.setInvokingMoveByUserTypes(new StringMap<String>());
        object_.setMovesNotToBeInvoked(new StringList());
        object_.setRateInvokationMove(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectCopyFighter defaultEffetCopieEsp() {
        EffectCopyFighter object_ = new EffectCopyFighter();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectAlly defaultEffetPartenaire() {
        EffectAlly object_ = new EffectAlly();
        object_.setMultAllyDamage(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectCopyMove defaultEffetCopieAtt() {
        EffectCopyMove object_ = new EffectCopyMove();
        object_.setMovesNotToBeCopied(new StringList());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectOrder defaultEffetOrdre() {
        EffectOrder object_ = new EffectOrder();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectClone defaultEffetClone() {
        EffectClone object_ = new EffectClone();
        object_.setHpRateClone(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectProtectFromTypes defaultEffetImmu() {
        EffectProtectFromTypes object_ = new EffectProtectFromTypes();
        object_.setImmuAgainstTypes(new StringList());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectWinMoney defaultEffetGainArgent() {
        EffectWinMoney object_ = new EffectWinMoney();
        object_.setWinningRateBySumTargetUser(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectBatonPass defaultEffetRelais() {
        EffectBatonPass object_ = new EffectBatonPass();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectEndRoundPositionRelation defaultEffectEndRoundPositionRelation() {
        EffectEndRoundPositionRelation object_ = new EffectEndRoundPositionRelation();
        object_.setHealHp(Rate.zero());
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }

    private static EffectVarPP defaultEffectVarPp() {
        EffectVarPP object_ = new EffectVarPP();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        return object_;
    }

    private static EffectSwitchMoveTypes defaultEffectSwitchMoveTypes() {
        EffectSwitchMoveTypes object_ = new EffectSwitchMoveTypes();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setChangeTypes(new StringMap<String>());
        object_.setReplacingTypes(new StringList());
        return object_;
    }

    private static EffectCounterAttack defaultEffectCounterAttack() {
        EffectCounterAttack object_ = new EffectCounterAttack();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setSufferingDamageTypes(new StringMap<Rate>());
        object_.setDroppedStatDirectMove(new EnumMap<Statistic,Byte>());
        object_.setSufferingDamageDirectMove(Rate.zero());
        object_.setProtectFail(NULL_REF);
        object_.setCounterFail(NULL_REF);
        return object_;
    }

    private static EffectEndRoundIndividual defaultEffectEndRoundIndividual() {
        EffectEndRoundIndividual object_ = new EffectEndRoundIndividual();
        object_.setDeleteAllStatus(Rate.zero());
        object_.setRecoilDamage(Rate.zero());
        object_.setHealHp(Rate.zero());
        object_.setHealHpByOwnerTypes(new StringMap<Rate>());
        object_.setMultDamageStatus(new StringMap<Rate>());
        object_.setUserStatusEndRound(NULL_REF);
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }

    private static EffectCombo defaultEffetCombinaison() {
        EffectCombo object_ = new EffectCombo();
        object_.setRepeatedRoundsLaw(new MonteCarloNumber());
        object_.setTeamMove(new CustList<EffectTeam>());
        object_.setEffectEndRound(new CustList<EffectEndRoundFoe>());
        object_.setMultEvtRateSecEff(Rate.zero());
        return object_;
    }

    private static EffectEndRoundFoe defaultEffectEndRoundFoe() {
        EffectEndRoundFoe object_ = new EffectEndRoundFoe();
        object_.setTargetChoice(TargetChoice.NOTHING);
        object_.setFail(NULL_REF);
        object_.setRequiredSuccessfulEffects(new Numbers<Integer>());
        object_.setInflictedRateHpTarget(Rate.zero());
        object_.setFailEndRound(NULL_REF);
        return object_;
    }
}
