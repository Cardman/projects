package cards.tarot;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

import cards.consts.MixCardsChoice;
import cards.tarot.enumerations.CardTarot;
import cards.tarot.enumerations.DealingTarot;


public class DealTarotTest {

    private HandTarot initPileTarot() {
        HandTarot main_ = new HandTarot();
        main_.ajouter(CardTarot.EXCUSE);
        main_.ajouter(CardTarot.TRUMP_21);
        main_.ajouter(CardTarot.TRUMP_20);
        main_.ajouter(CardTarot.TRUMP_19);
        main_.ajouter(CardTarot.TRUMP_18);
        main_.ajouter(CardTarot.TRUMP_17);
        main_.ajouter(CardTarot.TRUMP_16);
        main_.ajouter(CardTarot.TRUMP_15);
        main_.ajouter(CardTarot.TRUMP_14);
        main_.ajouter(CardTarot.TRUMP_13);
        main_.ajouter(CardTarot.TRUMP_12);
        main_.ajouter(CardTarot.TRUMP_11);
        main_.ajouter(CardTarot.TRUMP_10);
        main_.ajouter(CardTarot.TRUMP_9);
        main_.ajouter(CardTarot.TRUMP_8);
        main_.ajouter(CardTarot.TRUMP_7);
        main_.ajouter(CardTarot.TRUMP_6);
        main_.ajouter(CardTarot.TRUMP_5);
        main_.ajouter(CardTarot.TRUMP_4);
        main_.ajouter(CardTarot.TRUMP_3);
        main_.ajouter(CardTarot.TRUMP_2);
        main_.ajouter(CardTarot.TRUMP_1);
        main_.ajouter(CardTarot.HEART_KING);
        main_.ajouter(CardTarot.HEART_QUEEN);
        main_.ajouter(CardTarot.HEART_KNIGHT);
        main_.ajouter(CardTarot.HEART_JACK);
        main_.ajouter(CardTarot.HEART_10);
        main_.ajouter(CardTarot.HEART_9);
        main_.ajouter(CardTarot.HEART_8);
        main_.ajouter(CardTarot.HEART_7);
        main_.ajouter(CardTarot.HEART_6);
        main_.ajouter(CardTarot.HEART_5);
        main_.ajouter(CardTarot.HEART_4);
        main_.ajouter(CardTarot.HEART_3);
        main_.ajouter(CardTarot.HEART_2);
        main_.ajouter(CardTarot.HEART_1);
        main_.ajouter(CardTarot.SPADE_KING);
        main_.ajouter(CardTarot.SPADE_QUEEN);
        main_.ajouter(CardTarot.SPADE_KNIGHT);
        main_.ajouter(CardTarot.SPADE_JACK);
        main_.ajouter(CardTarot.SPADE_10);
        main_.ajouter(CardTarot.SPADE_9);
        main_.ajouter(CardTarot.SPADE_8);
        main_.ajouter(CardTarot.SPADE_7);
        main_.ajouter(CardTarot.SPADE_6);
        main_.ajouter(CardTarot.SPADE_5);
        main_.ajouter(CardTarot.SPADE_4);
        main_.ajouter(CardTarot.SPADE_3);
        main_.ajouter(CardTarot.SPADE_2);
        main_.ajouter(CardTarot.SPADE_1);
        main_.ajouter(CardTarot.DIAMOND_KING);
        main_.ajouter(CardTarot.DIAMOND_QUEEN);
        main_.ajouter(CardTarot.DIAMOND_KNIGHT);
        main_.ajouter(CardTarot.DIAMOND_JACK);
        main_.ajouter(CardTarot.DIAMOND_10);
        main_.ajouter(CardTarot.DIAMOND_9);
        main_.ajouter(CardTarot.DIAMOND_8);
        main_.ajouter(CardTarot.DIAMOND_7);
        main_.ajouter(CardTarot.DIAMOND_6);
        main_.ajouter(CardTarot.DIAMOND_5);
        main_.ajouter(CardTarot.DIAMOND_4);
        main_.ajouter(CardTarot.DIAMOND_3);
        main_.ajouter(CardTarot.DIAMOND_2);
        main_.ajouter(CardTarot.DIAMOND_1);
        main_.ajouter(CardTarot.CLUB_KING);
        main_.ajouter(CardTarot.CLUB_QUEEN);
        main_.ajouter(CardTarot.CLUB_KNIGHT);
        main_.ajouter(CardTarot.CLUB_JACK);
        main_.ajouter(CardTarot.CLUB_10);
        main_.ajouter(CardTarot.CLUB_9);
        main_.ajouter(CardTarot.CLUB_8);
        main_.ajouter(CardTarot.CLUB_7);
        main_.ajouter(CardTarot.CLUB_6);
        main_.ajouter(CardTarot.CLUB_5);
        main_.ajouter(CardTarot.CLUB_4);
        main_.ajouter(CardTarot.CLUB_3);
        main_.ajouter(CardTarot.CLUB_2);
        main_.ajouter(CardTarot.CLUB_1);
        return main_;
    }

    @Test
    public void donnerSansBattre1Test(){
        HandTarot main_ = initPileTarot();
        DealTarot donne_ = new DealTarot(0, main_);
        RulesTarot regles_ = new RulesTarot();
        regles_.setRepartition(DealingTarot.DEAL_1_VS_2);
        regles_.setCartesBattues(MixCardsChoice.NEVER);
        donne_.initDonneur((byte) 1);
        donne_.initDonne(regles_);
        assertTrue(donne_.main().contient(CardTarot.SPADE_8));
        assertTrue(donne_.main().contient(CardTarot.SPADE_7));
        assertTrue(donne_.main().contient(CardTarot.SPADE_6));
        assertTrue(donne_.main().contient(CardTarot.DIAMOND_KNIGHT));
        assertTrue(donne_.main().contient(CardTarot.DIAMOND_JACK));
        assertTrue(donne_.main().contient(CardTarot.DIAMOND_10));
        assertTrue(donne_.main().contient(CardTarot.DIAMOND_2));
        assertTrue(donne_.main().contient(CardTarot.DIAMOND_1));
        assertTrue(donne_.main().contient(CardTarot.CLUB_KING));
        assertTrue(donne_.main().contient(CardTarot.CLUB_6));
        assertTrue(donne_.main().contient(CardTarot.CLUB_5));
        assertTrue(donne_.main().contient(CardTarot.CLUB_4));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_18));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_17));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_16));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_9));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_8));
        assertTrue(donne_.main().contient(CardTarot.TRUMP_7));
        assertTrue(donne_.main().contient(CardTarot.HEART_QUEEN));
        assertTrue(donne_.main().contient(CardTarot.HEART_KNIGHT));
        assertTrue(donne_.main().contient(CardTarot.HEART_JACK));
        assertTrue(donne_.main().contient(CardTarot.HEART_3));
        assertTrue(donne_.main().contient(CardTarot.HEART_2));
        assertTrue(donne_.main().contient(CardTarot.HEART_1));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_5));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_4));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_3));
        assertTrue(donne_.main((byte)1).contient(CardTarot.DIAMOND_9));
        assertTrue(donne_.main((byte)1).contient(CardTarot.DIAMOND_8));
        assertTrue(donne_.main((byte)1).contient(CardTarot.DIAMOND_7));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_QUEEN));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_KNIGHT));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_JACK));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_3));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_2));
        assertTrue(donne_.main((byte)1).contient(CardTarot.CLUB_1));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_15));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_14));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_13));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_5));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_4));
        assertTrue(donne_.main((byte)1).contient(CardTarot.TRUMP_3));
        assertTrue(donne_.main((byte)1).contient(CardTarot.HEART_9));
        assertTrue(donne_.main((byte)1).contient(CardTarot.HEART_8));
        assertTrue(donne_.main((byte)1).contient(CardTarot.HEART_7));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_KING));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_QUEEN));
        assertTrue(donne_.main((byte)1).contient(CardTarot.SPADE_KNIGHT));
        assertTrue(donne_.main((byte)2).contient(CardTarot.SPADE_JACK));
        assertTrue(donne_.main((byte)2).contient(CardTarot.SPADE_10));
        assertTrue(donne_.main((byte)2).contient(CardTarot.SPADE_9));
        assertTrue(donne_.main((byte)2).contient(CardTarot.SPADE_1));
        assertTrue(donne_.main((byte)2).contient(CardTarot.DIAMOND_KING));
        assertTrue(donne_.main((byte)2).contient(CardTarot.DIAMOND_QUEEN));
        assertTrue(donne_.main((byte)2).contient(CardTarot.DIAMOND_5));
        assertTrue(donne_.main((byte)2).contient(CardTarot.DIAMOND_4));
        assertTrue(donne_.main((byte)2).contient(CardTarot.DIAMOND_3));
        assertTrue(donne_.main((byte)2).contient(CardTarot.CLUB_10));
        assertTrue(donne_.main((byte)2).contient(CardTarot.CLUB_9));
        assertTrue(donne_.main((byte)2).contient(CardTarot.CLUB_8));
        assertTrue(donne_.main((byte)2).contient(CardTarot.EXCUSE));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_21));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_20));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_12));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_11));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_10));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_2));
        assertTrue(donne_.main((byte)2).contient(CardTarot.TRUMP_1));
        assertTrue(donne_.main((byte)2).contient(CardTarot.HEART_KING));
        assertTrue(donne_.main((byte)2).contient(CardTarot.HEART_6));
        assertTrue(donne_.main((byte)2).contient(CardTarot.HEART_5));
        assertTrue(donne_.main((byte)2).contient(CardTarot.HEART_4));
        assertTrue(donne_.derniereMain().contient(CardTarot.SPADE_2));
        assertTrue(donne_.derniereMain().contient(CardTarot.DIAMOND_6));
        assertTrue(donne_.derniereMain().contient(CardTarot.CLUB_7));
        assertTrue(donne_.derniereMain().contient(CardTarot.TRUMP_19));
        assertTrue(donne_.derniereMain().contient(CardTarot.TRUMP_6));
        assertTrue(donne_.derniereMain().contient(CardTarot.HEART_10));
    }
}
